{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/samc621/SneakerBot"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi.yaml",
			"byteSize": 22777,
			"content": "openapi: 3.0.1\ninfo:\n  title: SneakerBot\n  description: This is the api description for the SneakerBot by samc621\n  version: 1.0.0\nservers:\n  - url: 'http://localhost/v1'\ntags:\n  - name: address\n    description: Everything about your addresses\n  - name: proxies\n    description: Everything about your proxies\n  - name: tasks\n    description: Everything about your tasks\npaths:\n  /addresses:\n    get:\n      tags:\n        - address\n      summary: Get all address\n      operationId: getAddresses\n      parameters:\n        - name: type\n          in: query\n          description: Specifies the type of addresses to return\n          required: false\n          schema:\n            type: string\n            enum:\n              - billing\n              - shipping\n      responses:\n        '200':\n          description: Addresses successfully found\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Address'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse'\n    post:\n      tags:\n        - address\n      summary: Add a new address\n      operationId: createAddress\n      requestBody:\n        description: The address object that needs to be added\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Address'\n        required: true\n      responses:\n        '200':\n          description: Address successfully created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n                  data:\n                    $ref: '#/components/schemas/Address'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse'\n  '/addresses/{addressId}':\n    get:\n      tags:\n        - address\n      summary: Find address by ID\n      description: Returns a single address\n      operationId: getAddress\n      parameters:\n        - name: addressId\n          in: path\n          description: ID of address to return\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        '200':\n          description: Address successfully found\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n                  data:\n                    $ref: '#/components/schemas/Address'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse'\n    delete:\n      tags:\n        - address\n      summary: Delete an address\n      operationId: deleteAddress\n      parameters:\n        - name: addressId\n          in: path\n          description: ID of the address to delete\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        '200':\n          description: Address successfully deleted\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n                  data:\n                    $ref: '#/components/schemas/Address'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse'\n    patch:\n      tags:\n        - address\n      summary: Update an address\n      operationId: updateAddress\n      parameters:\n        - name: addressId\n          in: path\n          description: ID of address to update\n          required: true\n          schema:\n            type: integer\n            format: int64\n      requestBody:\n        description: The address object that needs to be updated\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Address'\n        required: true\n      responses:\n        '200':\n          description: Address successfully updated\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n                  data:\n                    $ref: '#/components/schemas/Address'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse'\n  /proxies:\n    get:\n      tags:\n        - proxies\n      summary: Get all proxies\n      operationId: getProxies\n      parameters:\n        - name: protocol\n          in: query\n          description: Specifies which protocol is to be queried for\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Proxies successfully found\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Proxy'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse'\n    post:\n      tags:\n        - proxies\n      summary: Add a new proxy\n      operationId: createProxy\n      requestBody:\n        description: The proxy object that needs to be added\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Proxy'\n        required: true\n      responses:\n        '200':\n          description: Proxy successfully created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n                  data:\n                    $ref: '#/components/schemas/Proxy'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse'\n  '/proxies/{proxyId}':\n    get:\n      tags:\n        - proxies\n      summary: Find proxy by ID\n      description: Returns a single proxy\n      operationId: getProxyById\n      parameters:\n        - name: proxyId\n          in: path\n          description: ID of the proxy to return\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        '200':\n          description: Proxy successfully found\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n                  data:\n                    $ref: '#/components/schemas/Proxy'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse'\n    delete:\n      tags:\n        - proxies\n      summary: Delete a proxy\n      operationId: deleteProxy\n      parameters:\n        - name: proxyId\n          in: path\n          description: ID of the proxy to delete\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        '200':\n          description: Proxy successfully deleted\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n                  data:\n                    $ref: '#/components/schemas/Proxy'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse'\n    patch:\n      tags:\n        - proxies\n      summary: Update a proxy\n      operationId: updateProxy\n      parameters:\n        - name: proxyId\n          in: path\n          description: ID of the proxy to update\n          required: true\n          schema:\n            type: integer\n            format: int64\n      requestBody:\n        description: The proxy object that needs to be updated\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Proxy'\n        required: true\n      responses:\n        '200':\n          description: Proxy successfully updated\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n                  data:\n                    $ref: '#/components/schemas/Proxy'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse'\n  /tasks:\n    get:\n      tags:\n        - tasks\n      summary: Get all tasks\n      operationId: getTasks\n      parameters:\n        - name: site_id\n          in: query\n          description: The ID of the site that is to be queried for\n          schema:\n            type: integer\n            nullable: true\n        - name: url\n          in: query\n          description: The URL of the task that is to be queried for\n          schema:\n            type: string\n            format: uri\n            nullable: true\n        - name: size\n          in: query\n          description: The size of the task that is to be queried for\n          schema:\n            type: string\n            nullable: true\n        - name: billing_address_id\n          in: query\n          description: The ID of the billing address of the task that is to be queried for\n          schema:\n            type: integer\n            nullable: true\n        - name: shipping_address_id\n          in: query\n          description: The ID of the shipping address of the task that is to be queried for\n          schema:\n            type: integer\n            nullable: true\n        - name: notification_email_address\n          in: query\n          description: The email address of the task that is to be queried for\n          schema:\n            type: string\n            format: email\n            nullable: true\n      responses:\n        '200':\n          description: Tasks successfully found\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Task'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse'\n    post:\n      tags:\n        - tasks\n      summary: Add a new task\n      operationId: createTask\n      requestBody:\n        description: The task object that needs to be added\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Task'\n        required: true\n      responses:\n        '200':\n          description: Task successfully created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n                  data:\n                    $ref: '#/components/schemas/Task'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse'\n      x-codegen-request-body-name: body\n  '/tasks/{taskId}':\n    get:\n      tags:\n        - tasks\n      summary: Find a task by ID\n      description: Returns a single task\n      operationId: getTaskById\n      parameters:\n        - name: taskId\n          in: path\n          description: ID of the task to return\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        '200':\n          description: Task successfully found\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n                  data:\n                    $ref: '#/components/schemas/Task'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse'\n    delete:\n      tags:\n        - tasks\n      summary: Delete a task\n      operationId: deleteTask\n      parameters:\n        - name: taskId\n          in: path\n          description: ID of the task to delete\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        '200':\n          description: Task successfully deleted\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n                  data:\n                    $ref: '#/components/schemas/Task'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse'\n    patch:\n      tags:\n        - tasks\n      summary: Update a task\n      operationId: updateTask\n      parameters:\n        - name: taskId\n          in: path\n          description: ID of the task to update\n          required: true\n          schema:\n            type: integer\n            format: int64\n      requestBody:\n        description: The task object that needs to be updated\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Task'\n        required: true\n      responses:\n        '200':\n          description: Task successfully updated\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n                  data:\n                    $ref: '#/components/schemas/Task'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse'\n  '/tasks/{taskId}/start':\n    post:\n      tags:\n        - tasks\n      summary: Start a task\n      operationId: startTask\n      parameters:\n        - name: taskId\n          in: path\n          description: ID of the task to start\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        description: The card that should be used\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                card_friendly_name:\n                  type: string\n      responses:\n        '200':\n          description: Task successfully started\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n                  data:\n                    $ref: '#/components/schemas/Task'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse'\n  '/tasks/{taskId}/stop':\n    post:\n      tags:\n        - tasks\n      summary: Stop a task\n      operationId: stopTask\n      parameters:\n        - name: taskId\n          in: path\n          description: ID of the task to stop\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: Task successfully stopped\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n                  data:\n                    $ref: '#/components/schemas/Task'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse'\ncomponents:\n  schemas:\n    Address:\n      type: object\n      properties:\n        type:\n          type: string\n        first_name:\n          type: string\n        last_name:\n          type: string\n        address_line_1:\n          type: string\n        address_line_2:\n          type: string\n        city:\n          type: string\n        state:\n          type: string\n        postal_code:\n          type: integer\n        country:\n          type: string\n        email_address:\n          type: string\n        phone_number:\n          type: string\n    Proxy:\n      type: object\n      properties:\n        ip_address:\n          type: string\n        port:\n          type: integer\n        protocol:\n          type: string\n        username:\n          type: string\n        password:\n          type: string\n    Task:\n      type: object\n      properties:\n        site_id:\n          type: integer\n        url:\n          type: string\n          format: uri\n        product_code:\n          type: string\n        style_index:\n          type: integer\n        size:\n          type: number\n          format: double\n        shipping_speed_index:\n          type: integer\n        billing_address_id:\n          type: integer\n        shipping_address_id:\n          type: integer\n        notification_email_address:\n          type: string\n          format: email\n    ApiResponse:\n      type: object\n      properties:\n        success:\n          type: boolean\n        message:\n          type: string\n        data:\n          type: object\n          nullable: true\n",
			"canonicalURL": "/github.com/samc621/SneakerBot@b67b30d6d8878b7ce1cd712c0145201290b1db09/-/blob/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/samc621/SneakerBot/blob/b67b30d6d8878b7ce1cd712c0145201290b1db09/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}