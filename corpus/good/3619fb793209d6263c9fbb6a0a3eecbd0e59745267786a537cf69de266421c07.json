{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Adyen/adyen-openapi"
		},
		"file": {
			"name": "AccountService-v5.yaml",
			"size": 0,
			"path": "yaml/AccountService-v5.yaml",
			"byteSize": 150338,
			"content": "openapi: 3.1.0\nservers:\n- url: https://cal-test.adyen.com/cal/services/Account/v5\ninfo:\n  version: '5'\n  x-publicVersion: true\n  title: 'Adyen for Platforms: Account API'\n  description: \"The Account API provides endpoints for managing account-related entities\\\n    \\ on your platform. These related entities include account holders, accounts,\\\n    \\ bank accounts, shareholders, and verification-related documents. The management\\\n    \\ operations include actions such as creation, retrieval, updating, and deletion\\\n    \\ of them.\\n\\nFor more information, refer to our [documentation](https://docs.adyen.com/platforms).\\n\\\n    ## Authentication\\nYour Adyen contact will provide your API credential and an\\\n    \\ API key. To connect to the API, add an `X-API-Key` header with the API key as\\\n    \\ the value, for example:\\n\\n ```\\ncurl\\n-H \\\"Content-Type: application/json\\\"\\\n    \\ \\\\\\n-H \\\"X-API-Key: YOUR_API_KEY\\\" \\\\\\n...\\n```\\n\\nAlternatively, you can use\\\n    \\ the username and password to connect to the API using basic authentication.\\\n    \\ For example:\\n\\n```\\ncurl\\n-U \\\"ws@MarketPlace.YOUR_PLATFORM_ACCOUNT\\\":\\\"YOUR_WS_PASSWORD\\\"\\\n    \\ \\\\\\n-H \\\"Content-Type: application/json\\\" \\\\\\n...\\n```\\nWhen going live, you\\\n    \\ need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).\\n\\\n    \\n## Versioning\\nThe Account API supports [versioning](https://docs.adyen.com/development-resources/versioning)\\\n    \\ using a version suffix in the endpoint URL. This suffix has the following format:\\\n    \\ \\\"vXX\\\", where XX is the version number.\\n\\nFor example:\\n```\\nhttps://cal-test.adyen.com/cal/services/Account/v5/createAccountHolder\\n\\\n    ```\"\n  x-timestamp: '2022-05-06T09:18:38Z'\n  termsOfService: https://www.adyen.com/legal/terms-and-conditions\n  contact:\n    name: Adyen Developer Experience team\n    url: https://www.adyen.help/hc/en-us/community/topics\n    email: developer-experience@adyen.com\nx-groups:\n- Account holders\n- Accounts\n- Verification\ntags:\n- name: Account holders\n- name: Verification\n- name: Accounts\npaths:\n  /checkAccountHolder:\n    post:\n      tags:\n      - Verification\n      summary: Trigger verification\n      description: Triggers the verification of an account holder even if the checks\n        are not yet required for the volume that they are currently processing.\n      x-addedInVersion: '5'\n      operationId: post-checkAccountHolder\n      x-groupName: Verification\n      x-sortIndex: 3\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              basic:\n                $ref: '#/components/examples/post-checkAccountHolder-basic'\n            schema:\n              $ref: '#/components/schemas/PerformVerificationRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericResponse'\n          description: OK - the request has succeeded.\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericResponse'\n          description: Accepted - the request has been accepted for processing, but\n            the processing has not been completed.\n        '400':\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: '#/components/examples/generic-400'\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: '#/components/examples/generic-403'\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /closeAccount:\n    post:\n      tags:\n      - Accounts\n      summary: Close an account\n      description: Closes an account. If an account is closed, you cannot process\n        transactions, pay out its funds, or reopen it. If payments are made to a closed\n        account, the payments are sent to your liable account.\n      operationId: post-closeAccount\n      x-groupName: Accounts\n      x-sortIndex: 3\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              closeAccount:\n                $ref: '#/components/examples/post-closeAccount-closeAccount'\n            schema:\n              $ref: '#/components/schemas/CloseAccountRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloseAccountResponse'\n          description: OK - the request has succeeded.\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloseAccountResponse'\n          description: Accepted - the request has been accepted for processing, but\n            the processing has not been completed.\n        '400':\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: '#/components/examples/generic-400'\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: '#/components/examples/generic-403'\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /closeAccountHolder:\n    post:\n      tags:\n      - Account holders\n      summary: Close an account holder\n      description: Changes the [status of an account holder](https://docs.adyen.com/platforms/account-holders-and-accounts#account-holder-statuses)\n        to **Closed**. This state is final. If an account holder is closed, you can't\n        process transactions, pay out funds, or reopen it. If payments are made to\n        an account of an account holder with a **Closed** [`status`](https://docs.adyen.com/api-explorer/#/Account/latest/post/getAccountHolder__resParam_verification-accountHolder-checks-status),\n        the payments are sent to your liable account.\n      operationId: post-closeAccountHolder\n      x-groupName: Account holders\n      x-sortIndex: 7\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              basic:\n                $ref: '#/components/examples/post-closeAccountHolder-basic'\n            schema:\n              $ref: '#/components/schemas/CloseAccountHolderRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloseAccountHolderResponse'\n          description: OK - the request has succeeded.\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloseAccountHolderResponse'\n          description: Accepted - the request has been accepted for processing, but\n            the processing has not been completed.\n        '400':\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: '#/components/examples/generic-400'\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: '#/components/examples/generic-403'\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /closeStores:\n    post:\n      tags:\n      - Account holders\n      summary: Close stores\n      description: Closes stores associated with an account holder.\n      x-addedInVersion: '5'\n      operationId: post-closeStores\n      x-groupName: Account holders\n      x-sortIndex: 9\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CloseStoresRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericResponse'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: '#/components/examples/generic-400'\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: '#/components/examples/generic-403'\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /createAccount:\n    post:\n      tags:\n      - Accounts\n      summary: Create an account\n      description: Creates an account under an account holder. An account holder can\n        have [multiple accounts](https://docs.adyen.com/platforms/account-holders-and-accounts#create-additional-accounts).\n      operationId: post-createAccount\n      x-groupName: Accounts\n      x-sortIndex: 1\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              basic:\n                $ref: '#/components/examples/post-createAccount-basic'\n            schema:\n              $ref: '#/components/schemas/CreateAccountRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateAccountResponse'\n          description: OK - the request has succeeded.\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateAccountResponse'\n          description: Accepted - the request has been accepted for processing, but\n            the processing has not been completed.\n        '400':\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: '#/components/examples/generic-400'\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: '#/components/examples/generic-403'\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /createAccountHolder:\n    post:\n      tags:\n      - Account holders\n      summary: Create an account holder\n      description: Creates an account holder that [represents the sub-merchant's entity](https://docs.adyen.com/platforms/account-structure#your-platform)\n        in your platform. The details that you need to provide in the request depend\n        on the sub-merchant's legal entity type. For more information, refer to [Account\n        holder and accounts](https://docs.adyen.com/platforms/account-holders-and-accounts#legal-entity-types).\n      operationId: post-createAccountHolder\n      x-groupName: Account holders\n      x-sortIndex: 1\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              business:\n                $ref: '#/components/examples/post-createAccountHolder-business'\n              individual:\n                $ref: '#/components/examples/post-createAccountHolder-individual'\n            schema:\n              $ref: '#/components/schemas/CreateAccountHolderRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateAccountHolderResponse'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: '#/components/examples/generic-400'\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: '#/components/examples/generic-403'\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /deleteBankAccounts:\n    post:\n      tags:\n      - Verification\n      summary: Delete bank accounts\n      description: 'Deletes bank accounts associated with an account holder. '\n      operationId: post-deleteBankAccounts\n      x-groupName: Verification\n      x-sortIndex: 4\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              basic:\n                $ref: '#/components/examples/post-deleteBankAccounts-basic'\n            schema:\n              $ref: '#/components/schemas/DeleteBankAccountRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericResponse'\n          description: OK - the request has succeeded.\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericResponse'\n          description: Accepted - the request has been accepted for processing, but\n            the processing has not been completed.\n        '400':\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: '#/components/examples/generic-400'\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: '#/components/examples/generic-403'\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /deletePayoutMethods:\n    post:\n      tags:\n      - Verification\n      summary: Delete payout methods\n      description: Deletes payout methods associated with an account holder.\n      x-addedInVersion: '5'\n      operationId: post-deletePayoutMethods\n      x-groupName: Verification\n      x-sortIndex: 5\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              basic:\n                $ref: '#/components/examples/post-deletePayoutMethods-basic'\n            schema:\n              $ref: '#/components/schemas/DeletePayoutMethodRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericResponse'\n          description: OK - the request has succeeded.\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericResponse'\n          description: Accepted - the request has been accepted for processing, but\n            the processing has not been completed.\n        '400':\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: '#/components/examples/generic-400'\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: '#/components/examples/generic-403'\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /deleteShareholders:\n    post:\n      tags:\n      - Verification\n      summary: Delete shareholders\n      description: Deletes shareholders associated with an account holder.\n      operationId: post-deleteShareholders\n      x-groupName: Verification\n      x-sortIndex: 6\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              basic:\n                $ref: '#/components/examples/post-deleteShareholders-basic'\n            schema:\n              $ref: '#/components/schemas/DeleteShareholderRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericResponse'\n          description: OK - the request has succeeded.\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericResponse'\n          description: Accepted - the request has been accepted for processing, but\n            the processing has not been completed.\n        '400':\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: '#/components/examples/generic-400'\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: '#/components/examples/generic-403'\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /deleteSignatories:\n    post:\n      tags:\n      - Verification\n      summary: Delete signatories\n      description: Deletes signatories associated with an account holder.\n      operationId: post-deleteSignatories\n      x-groupName: Verification\n      x-sortIndex: 7\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteSignatoriesRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericResponse'\n          description: OK - the request has succeeded.\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericResponse'\n          description: Accepted - the request has been accepted for processing, but\n            the processing has not been completed.\n        '400':\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: '#/components/examples/generic-400'\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: '#/components/examples/generic-403'\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /getAccountHolder:\n    post:\n      tags:\n      - Account holders\n      summary: Get an account holder\n      description: Returns the details of an account holder.\n      operationId: post-getAccountHolder\n      x-groupName: Account holders\n      x-sortIndex: 2\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              accountCode:\n                $ref: '#/components/examples/post-getAccountHolder-accountCode'\n              accountHolderCode:\n                $ref: '#/components/examples/post-getAccountHolder-accountHolderCode'\n            schema:\n              $ref: '#/components/schemas/GetAccountHolderRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAccountHolderResponse'\n          description: OK - the request has succeeded.\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAccountHolderResponse'\n          description: Accepted - the request has been accepted for processing, but\n            the processing has not been completed.\n        '400':\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: '#/components/examples/generic-400'\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: '#/components/examples/generic-403'\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /getTaxForm:\n    post:\n      tags:\n      - Account holders\n      summary: Get a tax form\n      description: Generates a tax form for account holders operating in the US. For\n        more information, refer to [Providing tax forms](https://docs.adyen.com/platforms/tax-forms).\n      operationId: post-getTaxForm\n      x-groupName: Account holders\n      x-sortIndex: 8\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              basic:\n                $ref: '#/components/examples/post-getTaxForm-basic'\n            schema:\n              $ref: '#/components/schemas/GetTaxFormRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetTaxFormResponse'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: '#/components/examples/generic-400'\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: '#/components/examples/generic-403'\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /getUploadedDocuments:\n    post:\n      tags:\n      - Verification\n      summary: Get documents\n      description: 'Returns documents that were previously uploaded for an account\n        holder. Adyen uses the documents during the [verification process](https://docs.adyen.com/platforms/verification-process).\n\n        '\n      operationId: post-getUploadedDocuments\n      x-groupName: Verification\n      x-sortIndex: 2\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              basic:\n                $ref: '#/components/examples/post-getUploadedDocuments-basic'\n            schema:\n              $ref: '#/components/schemas/GetUploadedDocumentsRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetUploadedDocumentsResponse'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: '#/components/examples/generic-400'\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: '#/components/examples/generic-403'\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /suspendAccountHolder:\n    post:\n      tags:\n      - Account holders\n      summary: Suspend an account holder\n      description: Changes the [status of an account holder](https://docs.adyen.com/platforms/account-holders-and-accounts#account-holder-statuses)\n        to **Suspended**.\n      operationId: post-suspendAccountHolder\n      x-groupName: Account holders\n      x-sortIndex: 5\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              basic:\n                $ref: '#/components/examples/post-suspendAccountHolder-basic'\n            schema:\n              $ref: '#/components/schemas/SuspendAccountHolderRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuspendAccountHolderResponse'\n          description: OK - the request has succeeded.\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuspendAccountHolderResponse'\n          description: Accepted - the request has been accepted for processing, but\n            the processing has not been completed.\n        '400':\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: '#/components/examples/generic-400'\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: '#/components/examples/generic-403'\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /unSuspendAccountHolder:\n    post:\n      tags:\n      - Account holders\n      summary: Unsuspend an account holder\n      description: \"Changes the [status of an account holder](https://docs.adyen.com/platforms/account-holders-and-accounts#account-holder-statuses)\\\n        \\ from **Suspended** to **Inactive**. \\nAccount holders can have a **Suspended**\\\n        \\ [`status`](https://docs.adyen.com/api-explorer/#/Account/latest/post/getAccountHolder__resParam_verification-accountHolder-checks-status)\\\n        \\ if you suspend them through the [`/suspendAccountHolder`](https://docs.adyen.com/api-explorer/#/Account/v5/post/suspendAccountHolder)\\\n        \\ endpoint or if a verification deadline expires.\\n\\nYou can only unsuspend\\\n        \\ account holders if they do not have verification checks with a **FAILED**\\\n        \\ [`status`](https://docs.adyen.com/api-explorer/#/Account/latest/post/getAccountHolder__resParam_verification-accountHolder-checks-status).\"\n      operationId: post-unSuspendAccountHolder\n      x-groupName: Account holders\n      x-sortIndex: 6\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              basic:\n                $ref: '#/components/examples/post-unSuspendAccountHolder-basic'\n            schema:\n              $ref: '#/components/schemas/UnSuspendAccountHolderRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnSuspendAccountHolderResponse'\n          description: OK - the request has succeeded.\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnSuspendAccountHolderResponse'\n          description: Accepted - the request has been accepted for processing, but\n            the processing has not been completed.\n        '400':\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: '#/components/examples/generic-400'\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: '#/components/examples/generic-403'\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /updateAccount:\n    post:\n      tags:\n      - Accounts\n      summary: Update an account\n      description: Updates the description or payout schedule of an account.\n      operationId: post-updateAccount\n      x-groupName: Accounts\n      x-sortIndex: 2\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              basic:\n                $ref: '#/components/examples/post-updateAccount-basic'\n            schema:\n              $ref: '#/components/schemas/UpdateAccountRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateAccountResponse'\n          description: OK - the request has succeeded.\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateAccountResponse'\n          description: Accepted - the request has been accepted for processing, but\n            the processing has not been completed.\n        '400':\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: '#/components/examples/generic-400'\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: '#/components/examples/generic-403'\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /updateAccountHolder:\n    post:\n      tags:\n      - Account holders\n      summary: Update an account holder\n      description: \"Updates the `accountHolderDetails` and `processingTier` of an\\\n        \\ account holder, and adds bank accounts and shareholders.\\n\\nWhen updating\\\n        \\ `accountHolderDetails`, parameters that are not included in the request\\\n        \\ are left unchanged except for the following object:\\n\\n* `metadata`: Updating\\\n        \\ the metadata replaces the entire object. This means that to update an existing\\\n        \\ key-value pair, you must provide the changes, as well as other existing\\\n        \\ key-value pairs.\\n\\nWhen updating any field in the following objects, you\\\n        \\ must submit all the fields required for validation:\\n\\n * `address`\\n\\n\\\n        * `fullPhoneNumber`\\n\\n* `bankAccountDetails.BankAccountDetail`\\n\\n* `businessDetails.shareholders.ShareholderContact`\\n\\\n        \\n For example, to update the `address.postalCode`, you must also submit the\\\n        \\ `address.country`, `.city`, `.street`, `.postalCode`, and possibly `.stateOrProvince`\\\n        \\ so that the address can be validated.\\n\\nTo add a bank account or shareholder,\\\n        \\ provide the bank account or shareholder details without a `bankAccountUUID`\\\n        \\ or a `shareholderCode`.\\n\\n\"\n      operationId: post-updateAccountHolder\n      x-groupName: Account holders\n      x-sortIndex: 3\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              addShareholders:\n                $ref: '#/components/examples/post-updateAccountHolder-addShareholders'\n              bankAccountDetails:\n                $ref: '#/components/examples/post-updateAccountHolder-bankAccountDetails'\n              businessDetails:\n                $ref: '#/components/examples/post-updateAccountHolder-businessDetails'\n              general:\n                $ref: '#/components/examples/post-updateAccountHolder-general'\n            schema:\n              $ref: '#/components/schemas/UpdateAccountHolderRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateAccountHolderResponse'\n          description: OK - the request has succeeded.\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateAccountHolderResponse'\n          description: Accepted - the request has been accepted for processing, but\n            the processing has not been completed.\n        '400':\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: '#/components/examples/generic-400'\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: '#/components/examples/generic-403'\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /updateAccountHolderState:\n    post:\n      tags:\n      - Account holders\n      summary: Update payout or processing state\n      description: Disables or enables the processing or payout state of an account\n        holder.\n      operationId: post-updateAccountHolderState\n      x-groupName: Account holders\n      x-sortIndex: 4\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              basic:\n                $ref: '#/components/examples/post-updateAccountHolderState-basic'\n            schema:\n              $ref: '#/components/schemas/UpdateAccountHolderStateRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAccountHolderStatusResponse'\n          description: OK - the request has succeeded.\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAccountHolderStatusResponse'\n          description: Accepted - the request has been accepted for processing, but\n            the processing has not been completed.\n        '400':\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: '#/components/examples/generic-400'\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: '#/components/examples/generic-403'\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /uploadDocument:\n    post:\n      tags:\n      - Verification\n      summary: Upload a document\n      description: Uploads a document for an account holder. Adyen uses the documents\n        during the [verification process](https://docs.adyen.com/platforms/verification-process).\n      operationId: post-uploadDocument\n      x-groupName: Verification\n      x-sortIndex: 1\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              basic:\n                $ref: '#/components/examples/post-uploadDocument-basic'\n            schema:\n              $ref: '#/components/schemas/UploadDocumentRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateAccountHolderResponse'\n          description: OK - the request has succeeded.\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateAccountHolderResponse'\n          description: Accepted - the request has been accepted for processing, but\n            the processing has not been completed.\n        '400':\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: '#/components/examples/generic-400'\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: '#/components/examples/generic-403'\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Internal Server Error - the server could not process the request.\ncomponents:\n  schemas:\n    Account:\n      properties:\n        accountCode:\n          description: The code of the account.\n          type: string\n        bankAccountUUID:\n          x-addedInVersion: '5'\n          description: The bankAccountUUID of the bank account held by the account\n            holder to couple the account with. Scheduled payouts in currencies matching\n            the currency of this bank account will be sent to this bank account. Payouts\n            in different currencies will be sent to a matching bank account of the\n            account holder.\n          type: string\n        beneficiaryAccount:\n          description: The beneficiary of the account.\n          type: string\n        beneficiaryMerchantReference:\n          description: The reason that a beneficiary has been set up for this account.\n            This may have been supplied during the setup of a beneficiary at the discretion\n            of the executing user.\n          type: string\n        description:\n          x-addedInVersion: '4'\n          description: A description of the account.\n          type: string\n        metadata:\n          x-addedInVersion: '5'\n          additionalProperties:\n            type: string\n          description: 'A set of key and value pairs for general use by the merchant.\n\n            The keys do not have specific names and may be used for storing miscellaneous\n            data as desired.\n\n            \u003e Note that during an update of metadata, the omission of existing key-value\n            pairs will result in the deletion of those key-value pairs.'\n          type: object\n        payoutMethodCode:\n          x-addedInVersion: '5'\n          description: The payout method code held by the account holder to couple\n            the account with. Scheduled card payouts will be sent using this payout\n            method code.\n          type: string\n        payoutSchedule:\n          description: The account's payout schedule.\n          $ref: '#/components/schemas/PayoutScheduleResponse'\n        payoutSpeed:\n          x-addedInVersion: '5'\n          description: 'Speed with which payouts for this account are processed. Permitted\n            values: `STANDARD`, `SAME_DAY`.'\n          enum:\n          - INSTANT\n          - SAME_DAY\n          - STANDARD\n          type: string\n        status:\n          x-addedInVersion: '4'\n          description: 'The status of the account. Possible values: `Active`, `Inactive`,\n            `Suspended`, `Closed`.'\n          type: string\n    AccountEvent:\n      properties:\n        event:\n          description: 'The event.\n\n            \u003ePermitted values: `InactivateAccount`, `RefundNotPaidOutTransfers`.\n\n            For more information, refer to [Verification checks](https://docs.adyen.com/platforms/verification-checks).'\n          enum:\n          - InactivateAccount\n          - RefundNotPaidOutTransfers\n          type: string\n        executionDate:\n          description: The date on which the event will take place.\n          format: date-time\n          type: string\n        reason:\n          description: The reason why this event has been created.\n          type: string\n      required:\n      - event\n      - executionDate\n      - reason\n    AccountHolderDetails:\n      properties:\n        address:\n          description: The address of the account holder.\n          $ref: '#/components/schemas/ViasAddress'\n        bankAccountDetails:\n          description: Array of bank accounts associated with the account holder.\n            For details about the required `BankAccountDetail` fields, refer to [Bank\n            account check](https://docs.adyen.com/platforms/verification-checks/bank-account-check).\n          items:\n            $ref: '#/components/schemas/BankAccountDetail'\n          type: array\n        bankAggregatorDataReference:\n          x-addedInVersion: '5'\n          description: The opaque reference value returned by the Adyen API during\n            bank account login.\n          type: string\n        businessDetails:\n          description: 'Details about the business or nonprofit account holder.\n\n            Required when creating an account holder with `legalEntity` **Business**\n            or **NonProfit**.'\n          $ref: '#/components/schemas/BusinessDetails'\n        email:\n          description: The email address of the account holder.\n          type: string\n        fullPhoneNumber:\n          description: 'The phone number of the account holder provided as a single\n            string. It will be handled as a landline phone.\n\n            **Examples:** \"0031 6 11 22 33 44\", \"+316/1122-3344\", \"(0031) 611223344\"'\n          type: string\n        individualDetails:\n          description: 'Details about the individual account holder.\n\n            Required when creating an account holder with `legalEntity` **Individual**.\n\n            '\n          $ref: '#/components/schemas/IndividualDetails'\n        lastReviewDate:\n          description: Date when you last reviewed the account holder's information,\n            in ISO-8601 YYYY-MM-DD format. For example, **2020-01-31**.\n          type: string\n        merchantCategoryCode:\n          description: 'The Merchant Category Code of the account holder.\n\n            \u003e If not specified in the request, this will be derived from the platform\n            account (which is configured by Adyen).'\n          type: string\n        metadata:\n          additionalProperties:\n            type: string\n          description: 'A set of key and value pairs for general use by the account\n            holder or merchant.\n\n            The keys do not have specific names and may be used for storing miscellaneous\n            data as desired.\n\n            \u003e The values being stored have a maximum length of eighty (80) characters\n            and will be truncated if necessary.\n\n            \u003e Note that during an update of metadata, the omission of existing key-value\n            pairs will result in the deletion of those key-value pairs.'\n          type: object\n        payoutMethods:\n          x-addedInVersion: '5'\n          description: Array of tokenized card details associated with the account\n            holder. For details about how you can use the tokens to pay out, refer\n            to [Pay out to cards](https://docs.adyen.com/platforms/payout-to-cards).\n          items:\n            $ref: '#/components/schemas/PayoutMethod'\n          type: array\n        principalBusinessAddress:\n          description: The principal business address of the account holder.\n          $ref: '#/components/schemas/ViasAddress'\n        storeDetails:\n          x-addedInVersion: '5'\n          description: Array of stores associated with the account holder. Required\n            when onboarding account holders that have an Adyen [point of sale](https://docs.adyen.com/platforms/platforms-for-pos).\n          items:\n            $ref: '#/components/schemas/StoreDetail'\n          type: array\n        webAddress:\n          description: The URL of the website of the account holder.\n          type: string\n      required:\n      - fullPhoneNumber\n      - email\n      - webAddress\n    AccountHolderStatus:\n      properties:\n        events:\n          description: A list of events scheduled for the account holder.\n          items:\n            $ref: '#/components/schemas/AccountEvent'\n          type: array\n        payoutState:\n          description: The payout state of the account holder.\n          $ref: '#/components/schemas/AccountPayoutState'\n        processingState:\n          description: The processing state of the account holder.\n          $ref: '#/components/schemas/AccountProcessingState'\n        status:\n          description: 'The status of the account holder.\n\n            \u003ePermitted values: `Active`, `Inactive`, `Suspended`, `Closed`.'\n          enum:\n          - Active\n          - Closed\n          - Inactive\n          - Suspended\n          type: string\n        statusReason:\n          description: The reason why the status was assigned to the account holder.\n          type: string\n      required:\n      - status\n    AccountPayoutState:\n      properties:\n        allowPayout:\n          description: Indicates whether payouts are allowed. This field is the overarching\n            payout status, and is the aggregate of multiple conditions (e.g., KYC\n            status, disabled flag, etc). If this field is false, no payouts will be\n            permitted for any of the account holder's accounts. If this field is true,\n            payouts will be permitted for any of the account holder's accounts.\n          type: boolean\n        disableReason:\n          description: The reason why payouts (to all of the account holder's accounts)\n            have been disabled (by the platform). If the `disabled` field is true,\n            this field can be used to explain why.\n          type: string\n        disabled:\n          description: Indicates whether payouts have been disabled (by the platform)\n            for all of the account holder's accounts. A platform may enable and disable\n            this field at their discretion. If this field is true, `allowPayout` will\n            be false and no payouts will be permitted for any of the account holder's\n            accounts. If this field is false, `allowPayout` may or may not be enabled,\n            depending on other factors.\n          type: boolean\n        notAllowedReason:\n          x-addedInVersion: '5'\n          description: The reason why payouts (to all of the account holder's accounts)\n            have been disabled (by Adyen). If payouts have been disabled by Adyen,\n            this field will explain why. If this field is blank, payouts have not\n            been disabled by Adyen.\n          type: string\n        payoutLimit:\n          description: The maximum amount that payouts are limited to. Only applies\n            if payouts are allowed but limited.\n          $ref: '#/components/schemas/Amount'\n        tierNumber:\n          x-addedInVersion: '3'\n          description: The payout tier that the account holder occupies.\n          format: int32\n          type: integer\n    AccountProcessingState:\n      properties:\n        disableReason:\n          description: The reason why processing has been disabled.\n          type: string\n        disabled:\n          description: Indicates whether the processing of payments is allowed.\n          type: boolean\n        processedFrom:\n          description: The lower bound of the processing tier (i.e., an account holder\n            must have processed at least this amount of money in order to be placed\n            into this tier).\n          $ref: '#/components/schemas/Amount'\n        processedTo:\n          description: The upper bound of the processing tier (i.e., an account holder\n            must have processed less than this amount of money in order to be placed\n            into this tier).\n          $ref: '#/components/schemas/Amount'\n        tierNumber:\n          x-addedInVersion: '3'\n          description: The processing tier that the account holder occupies.\n          format: int32\n          type: integer\n    Amount:\n      properties:\n        currency:\n          description: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).\n          maxLength: 3\n          minLength: 3\n          type: string\n        value:\n          description: The amount of the transaction, in [minor units](https://docs.adyen.com/development-resources/currency-codes).\n          format: int64\n          type: integer\n      required:\n      - value\n      - currency\n    BankAccountDetail:\n      properties:\n        accountNumber:\n          description: 'The bank account number (without separators).\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)\n            section for details on field requirements.'\n          type: string\n        accountType:\n          description: 'The type of bank account.\n\n            Only applicable to bank accounts held in the USA.\n\n            The permitted values are: `checking`, `savings`.\n\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)\n            section for details on field requirements.'\n          type: string\n        bankAccountName:\n          description: The name of the bank account.\n          type: string\n        bankAccountReference:\n          x-addedInVersion: '5'\n          description: Merchant reference to the bank account.\n          type: string\n        bankAccountUUID:\n          description: 'The unique identifier (UUID) of the Bank Account.\n\n            \u003eIf, during an account holder create or update request, this field is\n            left blank (but other fields provided), a new Bank Account will be created\n            with a procedurally-generated UUID.\n\n\n            \u003eIf, during an account holder create request, a UUID is provided, the\n            creation of the Bank Account will fail while the creation of the account\n            holder will continue.\n\n\n            \u003eIf, during an account holder update request, a UUID that is not correlated\n            with an existing Bank Account is provided, the update of the account holder\n            will fail.\n\n\n            \u003eIf, during an account holder update request, a UUID that is correlated\n            with an existing Bank Account is provided, the existing Bank Account will\n            be updated.\n\n            '\n          type: string\n        bankBicSwift:\n          description: 'The bank identifier code.\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)\n            section for details on field requirements.'\n          type: string\n        bankCity:\n          description: 'The city in which the bank branch is located.\n\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)\n            section for details on field requirements.'\n          type: string\n        bankCode:\n          description: 'The bank code of the banking institution with which the bank\n            account is registered.\n\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)\n            section for details on field requirements.'\n          type: string\n        bankName:\n          description: 'The name of the banking institution with which the bank account\n            is held.\n\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)\n            section for details on field requirements.'\n          type: string\n        branchCode:\n          description: 'The branch code of the branch under which the bank account\n            is registered. The value to be specified in this parameter depends on\n            the country of the bank account:\n\n            * United States - Routing number\n\n            * United Kingdom - Sort code\n\n            * Germany - Bankleitzahl\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)\n            section for details on field requirements.'\n          type: string\n        checkCode:\n          description: 'The check code of the bank account.\n\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)\n            section for details on field requirements.'\n          type: string\n        countryCode:\n          description: 'The two-letter country code in which the bank account is registered.\n\n            \u003eThe permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. ''NL'').\n\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)\n            section for details on field requirements.'\n          type: string\n        currencyCode:\n          description: 'The currency in which the bank account deals.\n\n            \u003eThe permitted currency codes are defined in ISO-4217 (e.g. ''EUR'').\n\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)\n            section for details on field requirements.'\n          type: string\n        iban:\n          description: 'The international bank account number.\n\n            \u003eThe IBAN standard is defined in ISO-13616.\n\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)\n            section for details on field requirements.'\n          type: string\n        ownerCity:\n          description: 'The city of residence of the bank account owner.\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)\n            section for details on field requirements.'\n          type: string\n        ownerCountryCode:\n          description: 'The country code of the country of residence of the bank account\n            owner.\n\n            \u003eThe permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. ''NL'').\n\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)\n            section for details on field requirements.'\n          type: string\n        ownerDateOfBirth:\n          deprecated: true\n          description: 'The date of birth of the bank account owner.\n\n            The date should be in ISO-8601 format yyyy-mm-dd (e.g. 2000-01-31).'\n          type: string\n        ownerHouseNumberOrName:\n          description: 'The house name or number of the residence of the bank account\n            owner.\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)\n            section for details on field requirements.'\n          type: string\n        ownerName:\n          description: 'The name of the bank account owner.\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)\n            section for details on field requirements.'\n          type: string\n        ownerNationality:\n          description: 'The country code of the country of nationality of the bank\n            account owner.\n\n            \u003eThe permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. ''NL'').\n\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)\n            section for details on field requirements.'\n          type: string\n        ownerPostalCode:\n          description: 'The postal code of the residence of the bank account owner.\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)\n            section for details on field requirements.'\n          type: string\n        ownerState:\n          description: 'The state of residence of the bank account owner.\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)\n            section for details on field requirements.'\n          type: string\n        ownerStreet:\n          description: 'The street name of the residence of the bank account owner.\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)\n            section for details on field requirements.'\n          type: string\n        primaryAccount:\n          description: If set to true, the bank account is a primary account.\n          type: boolean\n        taxId:\n          description: 'The tax ID number.\n\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)\n            section for details on field requirements.'\n          type: string\n        urlForVerification:\n          description: 'The URL to be used for bank account verification.\n\n            This may be generated on bank account creation.\n\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)\n            section for details on field requirements.'\n          type: string\n    BusinessDetails:\n      properties:\n        doingBusinessAs:\n          description: The registered name of the company (if it differs from the\n            legal name of the company).\n          type: string\n        legalBusinessName:\n          description: The legal name of the company.\n          type: string\n        listedUltimateParentCompany:\n          description: Information about the parent public company. Required if the\n            account holder is 100% owned by a publicly listed company.\n          items:\n            $ref: '#/components/schemas/UltimateParentCompany'\n          type: array\n        registrationNumber:\n          x-addedInVersion: '4'\n          description: The registration number of the company.\n          type: string\n        shareholders:\n          description: Array containing information about individuals associated with\n            the account holder either through ownership or control. For details about\n            how you can identify them, refer to [Identity check](https://docs.adyen.com/platforms/verification-checks/identity-check).\n          items:\n            $ref: '#/components/schemas/ShareholderContact'\n          type: array\n        signatories:\n          description: 'Signatories associated with the company.\n\n            Each array entry should represent one signatory.'\n          items:\n            $ref: '#/components/schemas/SignatoryContact'\n          type: array\n        taxId:\n          description: The tax ID of the company.\n          type: string\n    CloseAccountHolderRequest:\n      properties:\n        accountHolderCode:\n          description: The code of the Account Holder to be closed.\n          type: string\n      required:\n      - accountHolderCode\n    CloseAccountHolderResponse:\n      properties:\n        accountHolderStatus:\n          description: The new status of the Account Holder.\n          $ref: '#/components/schemas/AccountHolderStatus'\n        invalidFields:\n          x-addedInVersion: '5'\n          description: Contains field validation errors that would prevent requests\n            from being processed.\n          items:\n            $ref: '#/components/schemas/ErrorFieldType'\n          type: array\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify\n            the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n      required:\n      - accountHolderStatus\n    CloseAccountRequest:\n      properties:\n        accountCode:\n          description: The code of account to be closed.\n          type: string\n      required:\n      - accountCode\n    CloseAccountResponse:\n      properties:\n        accountCode:\n          x-addedInVersion: '5'\n          description: The account code of the account that is closed.\n          type: string\n        invalidFields:\n          x-addedInVersion: '5'\n          description: Contains field validation errors that would prevent requests\n            from being processed.\n          items:\n            $ref: '#/components/schemas/ErrorFieldType'\n          type: array\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify\n            the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n        status:\n          x-addedInVersion: '2'\n          description: 'The new status of the account.\n\n            \u003ePermitted values: `Active`, `Inactive`, `Suspended`, `Closed`.'\n          enum:\n          - Active\n          - Closed\n          - Inactive\n          - Suspended\n          type: string\n      required:\n      - status\n    CloseStoresRequest:\n      properties:\n        accountHolderCode:\n          description: The code of the account holder.\n          type: string\n        stores:\n          description: List of stores to be closed.\n          items:\n            type: string\n          type: array\n      required:\n      - accountHolderCode\n      - stores\n    CreateAccountHolderRequest:\n      properties:\n        accountHolderCode:\n          description: 'Your unique identifier for the prospective account holder.\n\n            The length must be between three (3) and fifty (50) characters long. Only\n            letters, digits, and hyphens (-) are allowed.'\n          type: string\n        accountHolderDetails:\n          description: The details of the prospective account holder.\n          $ref: '#/components/schemas/AccountHolderDetails'\n        createDefaultAccount:\n          description: 'If set to **true**, an account with the default options is\n            automatically created for the account holder.\n\n            By default, this field is set to **true**.'\n          type: boolean\n        description:\n          x-addedInVersion: '4'\n          description: A description of the prospective account holder, maximum 256\n            characters. You can use alphanumeric characters (A-Z, a-z, 0-9), white\n            spaces, and underscores `_`.\n          type: string\n        legalEntity:\n          description: 'The legal entity type of the account holder. This determines\n            the information that should be provided in the request.\n\n\n            Possible values: **Business**, **Individual**, or **NonProfit**.\n\n\n            * If set to **Business** or **NonProfit**, then `accountHolderDetails.businessDetails`\n            must be provided, with at least one entry in the `accountHolderDetails.businessDetails.shareholders`\n            list.\n\n\n            * If set to **Individual**, then `accountHolderDetails.individualDetails`\n            must be provided.'\n          enum:\n          - Business\n          - Individual\n          - NonProfit\n          type: string\n        primaryCurrency:\n          x-addedInVersion: '4'\n          description: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes),\n            with which the prospective account holder primarily deals.\n          type: string\n        processingTier:\n          x-addedInVersion: '3'\n          description: The starting [processing tier](https://docs.adyen.com/platforms/onboarding-and-verification/precheck-kyc-information)\n            for the prospective account holder.\n          format: int32\n          type: integer\n      required:\n      - accountHolderCode\n      - legalEntity\n      - accountHolderDetails\n    CreateAccountHolderResponse:\n      properties:\n        accountCode:\n          description: The code of a new account created for the account holder.\n          type: string\n        accountHolderCode:\n          description: The code of the new account holder.\n          type: string\n        accountHolderDetails:\n          description: Details of the new account holder.\n          $ref: '#/components/schemas/AccountHolderDetails'\n        accountHolderStatus:\n          x-addedInVersion: '2'\n          description: The status of the new account holder.\n          $ref: '#/components/schemas/AccountHolderStatus'\n        description:\n          x-addedInVersion: '4'\n          description: The description of the new account holder.\n          type: string\n        invalidFields:\n          x-addedInVersion: '5'\n          description: A list of fields that caused the `/createAccountHolder` request\n            to fail.\n          items:\n            $ref: '#/components/schemas/ErrorFieldType'\n          type: array\n        legalEntity:\n          x-addedInVersion: '4'\n          description: The type of legal entity of the new account holder.\n          enum:\n          - Business\n          - Individual\n          - NonProfit\n          type: string\n        primaryCurrency:\n          x-addedInVersion: '5'\n          description: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes),\n            with which the prospective account holder primarily deals.\n          type: string\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify\n            the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n        verification:\n          x-addedInVersion: '2'\n          description: The details of KYC Verification of the account holder.\n          $ref: '#/components/schemas/KYCVerificationResult'\n      required:\n      - accountHolderCode\n      - accountHolderStatus\n      - accountHolderDetails\n      - verification\n      - legalEntity\n    CreateAccountRequest:\n      properties:\n        accountHolderCode:\n          description: The code of Account Holder under which to create the account.\n          type: string\n        bankAccountUUID:\n          x-addedInVersion: '5'\n          description: The bankAccountUUID of the bank account held by the account\n            holder to couple the account with. Scheduled payouts in currencies matching\n            the currency of this bank account will be sent to this bank account. Payouts\n            in different currencies will be sent to a matching bank account of the\n            account holder.\n          type: string\n        description:\n          x-addedInVersion: '4'\n          description: A description of the account, maximum 256 characters. You can\n            use alphanumeric characters (A-Z, a-z, 0-9), white spaces, and underscores\n            `_`.\n          type: string\n        metadata:\n          x-addedInVersion: '5'\n          additionalProperties:\n            type: string\n          description: 'A set of key and value pairs for general use by the merchant.\n\n            The keys do not have specific names and may be used for storing miscellaneous\n            data as desired.\n\n            \u003e Note that during an update of metadata, the omission of existing key-value\n            pairs will result in the deletion of those key-value pairs.'\n          type: object\n        payoutMethodCode:\n          x-addedInVersion: '5'\n          description: The payout method code held by the account holder to couple\n            the account with. Scheduled card payouts will be sent using this payout\n            method code.\n          type: string\n        payoutSchedule:\n          description: 'The payout schedule of the prospective account.\n\n            \u003ePermitted values: `DEFAULT`, `HOLD`, `DAILY`, `WEEKLY`, `MONTHLY`.'\n          enum:\n          - BIWEEKLY_ON_1ST_AND_15TH_AT_MIDNIGHT\n          - BIWEEKLY_ON_1ST_AND_15TH_AT_NOON\n          - BI_DAILY_AU\n          - BI_DAILY_EU\n          - BI_DAILY_US\n          - DAILY\n          - DAILY_6PM\n          - DAILY_AU\n          - DAILY_EU\n          - DAILY_SG\n          - DAILY_US\n          - DEFAULT\n          - EVERY_6_HOURS_FROM_MIDNIGHT\n          - HOLD\n          - MONTHLY\n          - MONTHLY_ON_15TH_AT_MIDNIGHT\n          - WEEKLY\n          - WEEKLY_MON_TO_FRI_AU\n          - WEEKLY_MON_TO_FRI_EU\n          - WEEKLY_MON_TO_FRI_US\n          - WEEKLY_ON_TUE_FRI_MIDNIGHT\n          - WEEKLY_SUN_TO_THU_AU\n          - WEEKLY_SUN_TO_THU_US\n          - YEARLY\n          type: string\n        payoutScheduleReason:\n          description: 'The reason for the payout schedule choice.\n\n            \u003eRequired if the payoutSchedule is `HOLD`.'\n          type: string\n        payoutSpeed:\n          x-addedInVersion: '5'\n          default: STANDARD\n          description: 'Speed with which payouts for this account are processed. Permitted\n            values: `STANDARD`, `SAME_DAY`.'\n          enum:\n          - INSTANT\n          - SAME_DAY\n          - STANDARD\n          type: string\n      required:\n      - accountHolderCode\n    CreateAccountResponse:\n      properties:\n        accountCode:\n          description: The code of the new account.\n          type: string\n        accountHolderCode:\n          description: The code of the account holder.\n          type: string\n        bankAccountUUID:\n          x-addedInVersion: '5'\n          description: The bankAccountUUID of the bank account held by the account\n            holder to couple the account with. Scheduled payouts in currencies matching\n            the currency of this bank account will be sent to this bank account. Payouts\n            in different currencies will be sent to a matching bank account of the\n            account holder.\n          type: string\n        description:\n          x-addedInVersion: '4'\n          description: The description of the account.\n          type: string\n        invalidFields:\n          x-addedInVersion: '5'\n          description: A list of fields that caused the `/createAccount` request to\n            fail.\n          items:\n            $ref: '#/components/schemas/ErrorFieldType'\n          type: array\n        metadata:\n          x-addedInVersion: '5'\n          additionalProperties:\n            type: string\n          description: A set of key and value pairs containing metadata.\n          type: object\n        payoutMethodCode:\n          x-addedInVersion: '5'\n          description: The payout method code held by the account holder to couple\n            the account with. Scheduled card payouts will be sent using this payout\n            method code.\n          type: string\n        payoutSchedule:\n          description: The payout schedule of the account.\n          $ref: '#/components/schemas/PayoutScheduleResponse'\n        payoutSpeed:\n          x-addedInVersion: '5'\n          description: 'Speed with which payouts for this account are processed. Permitted\n            values: `STANDARD`, `SAME_DAY`.'\n          enum:\n          - INSTANT\n          - SAME_DAY\n          - STANDARD\n          type: string\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify\n            the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n        status:\n          x-addedInVersion: '2'\n          description: 'The status of the account.\n\n            \u003ePermitted values: `Active`.'\n          enum:\n          - Active\n          - Closed\n          - Inactive\n          - Suspended\n          type: string\n      required:\n      - accountHolderCode\n      - accountCode\n      - status\n    DeleteBankAccountRequest:\n      properties:\n        accountHolderCode:\n          description: The code of the Account Holder from which to delete the Bank\n            Account(s).\n          type: string\n        bankAccountUUIDs:\n          description: The code(s) of the Bank Accounts to be deleted.\n          items:\n            type: string\n          type: array\n      required:\n      - accountHolderCode\n      - bankAccountUUIDs\n    DeletePayoutMethodRequest:\n      properties:\n        accountHolderCode:\n          description: The code of the account holder, from which to delete the payout\n            methods.\n          type: string\n        payoutMethodCodes:\n          description: The codes of the payout methods to be deleted.\n          items:\n            type: string\n          type: array\n      required:\n      - accountHolderCode\n      - payoutMethodCodes\n    DeleteShareholderRequest:\n      properties:\n        accountHolderCode:\n          description: The code of the Account Holder from which to delete the Shareholders.\n          type: string\n        shareholderCodes:\n          description: The code(s) of the Shareholders to be deleted.\n          items:\n            type: string\n          type: array\n      required:\n      - accountHolderCode\n      - shareholderCodes\n    DeleteSignatoriesRequest:\n      properties:\n        accountHolderCode:\n          description: The code of the account holder from which to delete the signatories.\n          type: string\n        signatoryCodes:\n          description: Array of codes of the signatories to be deleted.\n          items:\n            type: string\n          type: array\n      required:\n      - accountHolderCode\n      - signatoryCodes\n    DocumentDetail:\n      properties:\n        accountHolderCode:\n          x-addedInVersion: '2'\n          description: The code of account holder, to which the document applies.\n          type: string\n        bankAccountUUID:\n          x-addedInVersion: '2'\n          description: 'The Adyen-generated [`bankAccountUUID`](https://docs.adyen.com/api-explorer/#/Account/latest/post/createAccountHolder__resParam_accountHolderDetails-bankAccountDetails-bankAccountUUID)\n            to which the document must be linked. Refer to [Bank account check](https://docs.adyen.com/platforms/verification-checks/bank-account-check#uploading-a-bank-statement)\n            for details on when a document should be submitted.\n\n            \u003eRequired if the `documentType` is **BANK_STATEMENT**, where a document\n            is being submitted in order to verify a bank account.\n\n            '\n          type: string\n        description:\n          description: Description of the document.\n          type: string\n        documentType:\n          description: 'The type of the document. Refer to [Verification checks](https://docs.adyen.com/platforms/verification-checks)\n            for details on when each document type should be submitted and for the\n            accepted file formats.\n\n\n            Permitted values:\n\n            * **BANK_STATEMENT**: A file containing a bank statement or other document\n            proving ownership of a specific bank account.\n\n            * **COMPANY_REGISTRATION_SCREENING** (Supported from v5 and later): A\n            file containing a company registration document.\n\n            * **CONSTITUTIONAL_DOCUMENT**: A file containing information about the\n            account holder''s legal arrangement.\n\n            * **PASSPORT**: A file containing the identity page(s) of a passport.\n\n            * **ID_CARD_FRONT**: A file containing only the front of the ID card.\n            In order for a document to be usable, both the **ID_CARD_FRONT** and **ID_CARD_BACK**\n            must be submitted.\n\n            * **ID_CARD_BACK**: A file containing only the back of the ID card. In\n            order for a document to be usable, both the **ID_CARD_FRONT** and **ID_CARD_BACK**\n            must be submitted.\n\n            * **DRIVING_LICENCE_FRONT**: A file containing only the front of the driving\n            licence. In order for a document to be usable, both the **DRIVING_LICENCE_FRONT**\n            and **DRIVING_LICENCE_BACK** must be submitted.\n\n            * **DRIVING_LICENCE_BACK**: A file containing only the back of the driving\n            licence. In order for a document to be usable, both the **DRIVING_LICENCE_FRONT**\n            and **DRIVING_LICENCE_FRONT** must be submitted.\n\n            '\n          enum:\n          - BANK_STATEMENT\n          - BSN\n          - COMPANY_REGISTRATION_SCREENING\n          - DRIVING_LICENCE\n          - DRIVING_LICENCE_BACK\n          - DRIVING_LICENCE_FRONT\n          - ID_CARD\n          - ID_CARD_BACK\n          - ID_CARD_FRONT\n          - PASSPORT\n          - PROOF_OF_RESIDENCY\n          - SSN\n          - SUPPORTING_DOCUMENTS\n          type: string\n        filename:\n          description: Filename of the document.\n          type: string\n        shareholderCode:\n          x-addedInVersion: '2'\n          description: 'The Adyen-generated [`shareholderCode`](https://docs.adyen.com/api-explorer/#/Account/latest/post/createAccountHolder__resParam_accountHolderDetails-businessDetails-shareholders-shareholderCode)\n            to which the document must be linked. Refer to [Verification checks](https://docs.adyen.com/platforms/verification-checks)\n            for details on when a document should be submitted.\n\n            \u003eRequired if the account holder has a `legalEntity` of type **Business**\n            and the `documentType` is either **PASSPORT**, **ID_CARD_FRONT**, **ID_CARD_BACK**,\n            **DRIVING_LICENCE_FRONT**, or **DRIVING_LICENCE_BACK**. '\n          type: string\n        signatoryCode:\n          description: The Adyen-generated [`signatoryCode`](https://docs.adyen.com/api-explorer/#/Account/v6/post/createAccountHolder__resParam_accountHolderDetails-businessDetails-signatories-signatoryCode)\n            to which the document must be linked.\n          type: string\n      required:\n      - accountHolderCode\n      - documentType\n      - filename\n    ErrorFieldType:\n      properties:\n        errorCode:\n          description: The validation error code.\n          format: int32\n          type: integer\n        errorDescription:\n          description: A description of the validation error.\n          type: string\n        fieldType:\n          description: The type of error field.\n          $ref: '#/components/schemas/FieldType'\n    FieldType:\n      properties:\n        field:\n          description: The full name of the property.\n          type: string\n        fieldName:\n          description: The type of the field.\n          enum:\n          - accountCode\n          - accountHolderCode\n          - accountHolderDetails\n          - accountNumber\n          - accountStateType\n          - accountStatus\n          - accountType\n          - address\n          - balanceAccount\n          - balanceAccountActive\n          - balanceAccountCode\n          - balanceAccountId\n          - bankAccount\n          - bankAccountCode\n          - bankAccountName\n          - bankAccountUUID\n          - bankBicSwift\n          - bankCity\n          - bankCode\n          - bankName\n          - bankStatement\n          - branchCode\n          - businessContact\n          - cardToken\n          - checkCode\n          - city\n          - companyRegistration\n          - constitutionalDocument\n          - country\n          - countryCode\n          - currency\n          - currencyCode\n          - dateOfBirth\n          - description\n          - destinationAccountCode\n          - document\n          - documentContent\n          - documentExpirationDate\n          - documentIssuerCountry\n          - documentIssuerState\n          - documentName\n          - documentNumber\n          - documentType\n          - doingBusinessAs\n          - drivingLicence\n          - drivingLicenceBack\n          - drivingLicense\n          - email\n          - firstName\n          - formType\n          - fullPhoneNumber\n          - gender\n          - hopWebserviceUser\n          - houseNumberOrName\n          - iban\n          - idCard\n          - idCardBack\n          - idCardFront\n          - idNumber\n          - identityDocument\n          - individualDetails\n          - infix\n          - jobTitle\n          - lastName\n          - lastReviewDate\n          - legalArrangement\n          - legalArrangementCode\n          - legalArrangementEntity\n          - legalArrangementEntityCode\n          - legalArrangementLegalForm\n          - legalArrangementMember\n          - legalArrangementMembers\n          - legalArrangementName\n          - legalArrangementReference\n          - legalArrangementRegistrationNumber\n          - legalArrangementTaxNumber\n          - legalArrangementType\n          - legalBusinessName\n          - legalEntity\n          - legalEntityType\n          - merchantAccount\n          - merchantCategoryCode\n          - merchantReference\n          - microDeposit\n          - name\n          - nationality\n          - originalReference\n          - ownerCity\n          - ownerCountryCode\n          - ownerDateOfBirth\n          - ownerHouseNumberOrName\n          - ownerName\n          - ownerPostalCode\n          - ownerState\n          - ownerStreet\n          - passport\n          - passportNumber\n          - payoutMethodCode\n          - payoutSchedule\n          - pciSelfAssessment\n          - personalData\n          - phoneCountryCode\n          - phoneNumber\n          - postalCode\n          - primaryCurrency\n          - reason\n          - registrationNumber\n          - returnUrl\n          - schedule\n          - shareholder\n          - shareholderCode\n          - shareholderCodeAndSignatoryCode\n          - shareholderCodeOrSignatoryCode\n          - shareholderType\n          - shopperInteraction\n          - signatory\n          - signatoryCode\n          - socialSecurityNumber\n          - sourceAccountCode\n          - splitAccount\n          - splitConfigurationUUID\n          - splitCurrency\n          - splitValue\n          - splits\n          - stateOrProvince\n          - status\n          - stockExchange\n          - stockNumber\n          - stockTicker\n          - store\n          - storeDetail\n          - storeName\n          - storeReference\n          - street\n          - taxId\n          - tier\n          - tierNumber\n          - transferCode\n          - ultimateParentCompany\n          - ultimateParentCompanyAddressDetails\n          - ultimateParentCompanyAddressDetailsCountry\n          - ultimateParentCompanyBusinessDetails\n          - ultimateParentCompanyBusinessDetailsLegalBusinessName\n          - ultimateParentCompanyBusinessDetailsRegistrationNumber\n          - ultimateParentCompanyCode\n          - ultimateParentCompanyStockExchange\n          - ultimateParentCompanyStockNumber\n          - ultimateParentCompanyStockNumberOrStockTicker\n          - ultimateParentCompanyStockTicker\n          - unknown\n          - value\n          - verificationType\n          - virtualAccount\n          - visaNumber\n          - webAddress\n          - year\n          type: string\n        shareholderCode:\n          description: The code of the shareholder that the field belongs to. If empty,\n            the field belongs to an account holder.\n          type: string\n    GenericResponse:\n      properties:\n        invalidFields:\n          x-addedInVersion: '5'\n          description: Contains field validation errors that would prevent requests\n            from being processed.\n          items:\n            $ref: '#/components/schemas/ErrorFieldType'\n          type: array\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify\n            the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n    GetAccountHolderRequest:\n      properties:\n        accountCode:\n          description: 'The code of the account of which to retrieve the details.\n\n            \u003e Required if no `accountHolderCode` is provided.'\n          type: string\n        accountHolderCode:\n          description: 'The code of the account holder of which to retrieve the details.\n\n            \u003e Required if no `accountCode` is provided.'\n          type: string\n        showDetails:\n          x-addedInVersion: '4'\n          description: True if the request should return the account holder details\n          type: boolean\n    GetAccountHolderResponse:\n      properties:\n        accountHolderCode:\n          description: The code of the account holder.\n          type: string\n        accountHolderDetails:\n          description: Details of the account holder.\n          $ref: '#/components/schemas/AccountHolderDetails'\n        accountHolderStatus:\n          x-addedInVersion: '2'\n          description: The status of the account holder.\n          $ref: '#/components/schemas/AccountHolderStatus'\n        accounts:\n          description: A list of the accounts under the account holder.\n          items:\n            $ref: '#/components/schemas/Account'\n          type: array\n        description:\n          x-addedInVersion: '4'\n          description: The description of the account holder.\n          type: string\n        invalidFields:\n          x-addedInVersion: '5'\n          description: Contains field validation errors that would prevent requests\n            from being processed.\n          items:\n            $ref: '#/components/schemas/ErrorFieldType'\n          type: array\n        legalEntity:\n          description: The legal entity of the account holder.\n          enum:\n          - Business\n          - Individual\n          - NonProfit\n          type: string\n        primaryCurrency:\n          x-addedInVersion: '4'\n          description: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes),\n            with which the prospective account holder primarily deals.\n          type: string\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify\n            the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n        systemUpToDateTime:\n          x-addedInVersion: '5'\n          description: The time that shows how up to date is the information in the\n            response.\n          format: date-time\n          type: string\n        verification:\n          x-addedInVersion: '2'\n          description: The details of KYC Verification of the account holder.\n          $ref: '#/components/schemas/KYCVerificationResult'\n      required:\n      - accountHolderCode\n      - legalEntity\n      - accountHolderStatus\n      - accountHolderDetails\n      - verification\n    GetAccountHolderStatusResponse:\n      properties:\n        accountHolderCode:\n          description: The code of the Account Holder.\n          type: string\n        accountHolderStatus:\n          x-addedInVersion: '2'\n          description: The status of the Account Holder.\n          $ref: '#/components/schemas/AccountHolderStatus'\n        invalidFields:\n          x-addedInVersion: '5'\n          description: Contains field validation errors that would prevent requests\n            from being processed.\n          items:\n            $ref: '#/components/schemas/ErrorFieldType'\n          type: array\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify\n            the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n      required:\n      - accountHolderCode\n      - accountHolderStatus\n    GetTaxFormRequest:\n      properties:\n        accountHolderCode:\n          description: The account holder code you provided when you created the account\n            holder.\n          type: string\n        formType:\n          description: Type of the requested tax form. For example, 1099-K.\n          type: string\n        year:\n          description: Applicable tax year in the YYYY format.\n          format: int32\n          type: integer\n      required:\n      - accountHolderCode\n      - formType\n      - year\n    GetTaxFormResponse:\n      properties:\n        content:\n          description: The content of the tax form in the Base64 binary format.\n          format: byte\n          type: string\n        contentType:\n          description: The content type of the tax form.\n          type: string\n        invalidFields:\n          x-addedInVersion: '5'\n          description: Contains field validation errors that would prevent requests\n            from being processed.\n          items:\n            $ref: '#/components/schemas/ErrorFieldType'\n          type: array\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify\n            the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n    GetUploadedDocumentsRequest:\n      properties:\n        accountHolderCode:\n          description: The code of the Account Holder for which to retrieve the documents.\n          type: string\n        bankAccountUUID:\n          x-addedInVersion: '2'\n          description: The code of the Bank Account for which to retrieve the documents.\n          type: string\n        shareholderCode:\n          description: The code of the Shareholder for which to retrieve the documents.\n          type: string\n      required:\n      - accountHolderCode\n    GetUploadedDocumentsResponse:\n      properties:\n        documentDetails:\n          description: A list of the documents and their details.\n          items:\n            $ref: '#/components/schemas/DocumentDetail'\n          type: array\n        invalidFields:\n          x-addedInVersion: '5'\n          description: Contains field validation errors that would prevent requests\n            from being processed.\n          items:\n            $ref: '#/components/schemas/ErrorFieldType'\n          type: array\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify\n            the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n    IndividualDetails:\n      properties:\n        name:\n          description: 'The name of the individual.\n\n            \u003eMake sure your account holder registers using the name shown on their\n            Photo ID.'\n          $ref: '#/components/schemas/ViasName'\n        personalData:\n          description: Personal information of the individual.\n          $ref: '#/components/schemas/ViasPersonalData'\n    KYCBankAccountCheckResult:\n      properties:\n        bankAccountUUID:\n          description: The unique ID of the bank account to which the check applies.\n          type: string\n        checks:\n          description: A list of the checks and their statuses.\n          items:\n            $ref: '#/components/schemas/KYCCheckStatusData'\n          type: array\n    KYCCardCheckResult:\n      properties:\n        checks:\n          description: A list of the checks and their statuses.\n          items:\n            $ref: '#/components/schemas/KYCCheckStatusData'\n          type: array\n        payoutMethodCode:\n          description: The unique ID of the card to which the check applies.\n          type: string\n    KYCCheckResult:\n      properties:\n        checks:\n          description: A list of the checks and their statuses.\n          items:\n            $ref: '#/components/schemas/KYCCheckStatusData'\n          type: array\n    KYCCheckStatusData:\n      properties:\n        requiredFields:\n          description: A list of the fields required for execution of the check.\n          items:\n            type: string\n          type: array\n        status:\n          description: 'The status of the check.\n\n\n            Possible values: **AWAITING_DATA** , **DATA_PROVIDED**, **FAILED**, **INVALID_DATA**,\n            **PASSED**, **PENDING**, **RETRY_LIMIT_REACHED**.'\n          enum:\n          - AWAITING_DATA\n          - DATA_PROVIDED\n          - FAILED\n          - INVALID_DATA\n          - PASSED\n          - PENDING\n          - PENDING_REVIEW\n          - RETRY_LIMIT_REACHED\n          - UNCHECKED\n          type: string\n        summary:\n          description: A summary of the execution of the check.\n          $ref: '#/components/schemas/KYCCheckSummary'\n        type:\n          description: \"The type of check.\\n\\nPossible values:\\n\\n * **BANK_ACCOUNT_VERIFICATION**:\\\n            \\ Used in v5 and earlier. Replaced by **PAYOUT_METHOD_VERIFICATION** in\\\n            \\ v6 and later.\\n\\n * **COMPANY_VERIFICATION**\\n\\n  * **CARD_VERIFICATION**\\n\\\n            \\n* **IDENTITY_VERIFICATION**\\n\\n* **LEGAL_ARRANGEMENT_VERIFICATION**\\n\\\n            \\n* **NONPROFIT_VERIFICATION**\\n\\n * **PASSPORT_VERIFICATION**\\n\\n* **PAYOUT_METHOD_VERIFICATION**:\\\n            \\ Used in v6 and later.\\n\\n* **PCI_VERIFICATION**\"\n          enum:\n          - BANK_ACCOUNT_VERIFICATION\n          - CARD_VERIFICATION\n          - COMPANY_VERIFICATION\n          - IDENTITY_VERIFICATION\n          - LEGAL_ARRANGEMENT_VERIFICATION\n          - NONPROFIT_VERIFICATION\n          - PASSPORT_VERIFICATION\n          - PAYOUT_METHOD_VERIFICATION\n          - PCI_VERIFICATION\n          type: string\n      required:\n      - type\n      - status\n    KYCCheckSummary:\n      properties:\n        kycCheckCode:\n          x-addedInVersion: '5'\n          description: The code of the check. For possible values, refer to [Verification\n            codes](https://docs.adyen.com/platforms/verification-codes).\n          format: int32\n          type: integer\n        kycCheckDescription:\n          x-addedInVersion: '5'\n          description: A description of the check.\n          type: string\n    KYCShareholderCheckResult:\n      properties:\n        checks:\n          description: A list of the checks and their statuses.\n          items:\n            $ref: '#/components/schemas/KYCCheckStatusData'\n          type: array\n        shareholderCode:\n          description: The code of the shareholder to which the check applies.\n          type: string\n    KYCSignatoryCheckResult:\n      properties:\n        checks:\n          description: A list of the checks and their statuses.\n          items:\n            $ref: '#/components/schemas/KYCCheckStatusData'\n          type: array\n        signatoryCode:\n          description: The code of the signatory to which the check applies.\n          type: string\n    KYCVerificationResult:\n      properties:\n        accountHolder:\n          description: The results of the checks on the account holder.\n          $ref: '#/components/schemas/KYCCheckResult'\n        bankAccounts:\n          description: The results of the checks on the bank accounts.\n          items:\n            $ref: '#/components/schemas/KYCBankAccountCheckResult'\n          type: array\n        cards:\n          x-addedInVersion: '5'\n          description: The results of the checks on the cards.\n          items:\n            $ref: '#/components/schemas/KYCCardCheckResult'\n          type: array\n        shareholders:\n          description: The results of the checks on the shareholders.\n          items:\n            $ref: '#/components/schemas/KYCShareholderCheckResult'\n          type: array\n        signatories:\n          description: The results of the checks on the signatories.\n          items:\n            $ref: '#/components/schemas/KYCSignatoryCheckResult'\n          type: array\n    PayoutMethod:\n      properties:\n        merchantAccount:\n          description: The [`merchantAccount`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__reqParam_merchantAccount)\n            you used in the `/payments` request when you [saved the account holder's\n            card details](https://docs.adyen.com/platforms/payout-to-cards#check-and-store).\n          type: string\n        payoutMethodCode:\n          description: Adyen-generated unique alphanumeric identifier (UUID) for the\n            payout method, returned in the response when you create a payout method.\n            Required when updating an existing payout method in an `/updateAccountHolder`\n            request.\n          type: string\n        payoutMethodReference:\n          description: Your reference for the payout method.\n          type: string\n        recurringDetailReference:\n          description: The [`recurringDetailReference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_additionalData-ResponseAdditionalDataCommon-recurring-recurringDetailReference)  returned\n            in the `/payments` response when you [saved the account holder's card\n            details](https://docs.adyen.com/platforms/payout-to-cards#check-and-store).\n          type: string\n        shopperReference:\n          description: The [`shopperReference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__reqParam_shopperReference)\n            you sent in the `/payments` request when you [saved the account holder's\n            card details](https://docs.adyen.com/platforms/payout-to-cards#check-and-store).\n          type: string\n      required:\n      - merchantAccount\n      - shopperReference\n      - recurringDetailReference\n    PayoutScheduleResponse:\n      properties:\n        nextScheduledPayout:\n          description: The date of the next scheduled payout.\n          format: date-time\n          type: string\n        schedule:\n          description: 'The payout schedule of the account.\n\n            \u003ePermitted values: `DEFAULT`, `HOLD`, `DAILY`, `WEEKLY`, `MONTHLY`.'\n          enum:\n          - BIWEEKLY_ON_1ST_AND_15TH_AT_MIDNIGHT\n          - BIWEEKLY_ON_1ST_AND_15TH_AT_NOON\n          - BI_DAILY_AU\n          - BI_DAILY_EU\n          - BI_DAILY_US\n          - DAILY\n          - DAILY_6PM\n          - DAILY_AU\n          - DAILY_EU\n          - DAILY_SG\n          - DAILY_US\n          - DEFAULT\n          - EVERY_6_HOURS_FROM_MIDNIGHT\n          - HOLD\n          - MONTHLY\n          - MONTHLY_ON_15TH_AT_MIDNIGHT\n          - WEEKLY\n          - WEEKLY_MON_TO_FRI_AU\n          - WEEKLY_MON_TO_FRI_EU\n          - WEEKLY_MON_TO_FRI_US\n          - WEEKLY_ON_TUE_FRI_MIDNIGHT\n          - WEEKLY_SUN_TO_THU_AU\n          - WEEKLY_SUN_TO_THU_US\n          - YEARLY\n          type: string\n      required:\n      - schedule\n    PerformVerificationRequest:\n      properties:\n        accountHolderCode:\n          description: The code of the account holder to verify.\n          type: string\n        accountStateType:\n          description: 'The state required for the account holder.\n\n            \u003e Permitted values: `Processing`, `Payout`.'\n          enum:\n          - LimitedPayout\n          - LimitedProcessing\n          - LimitlessPayout\n          - LimitlessProcessing\n          - Payout\n          - Processing\n          type: string\n        tier:\n          description: The tier required for the account holder.\n          format: int32\n          type: integer\n      required:\n      - accountHolderCode\n      - accountStateType\n      - tier\n    PersonalDocumentData:\n      properties:\n        expirationDate:\n          description: \"The expiry date of the document, \\n in ISO-8601 YYYY-MM-DD\\\n            \\ format. For example, **2000-01-31**.\"\n          type: string\n        issuerCountry:\n          description: \"The country where the document was issued, in the two-character\\\n            \\ \\n[ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\\\n            \\ format. For example, **NL**.\"\n          maxLength: 2\n          minLength: 2\n          type: string\n        issuerState:\n          description: The state where the document was issued (if applicable).\n          type: string\n        number:\n          description: The number in the document.\n          type: string\n        type:\n          description: 'The type of the document. Possible values: **ID**, **DRIVINGLICENSE**,\n            **PASSPORT**, **SOCIALSECURITY**, **VISA**.\n\n\n            To delete an existing entry for a document `type`, send only the `type`\n            field in your request. '\n          enum:\n          - DRIVINGLICENSE\n          - ID\n          - PASSPORT\n          - SOCIALSECURITY\n          - VISA\n          type: string\n      required:\n      - type\n    ServiceError:\n      properties:\n        errorCode:\n          description: The error code mapped to the error message.\n          type: string\n        errorType:\n          description: The category of the error.\n          type: string\n        message:\n          description: A short explanation of the issue.\n          type: string\n        pspReference:\n          description: The PSP reference of the payment.\n          type: string\n        status:\n          description: The HTTP response status.\n          format: int32\n          type: integer\n    ShareholderContact:\n      properties:\n        address:\n          description: The address of the person.\n          $ref: '#/components/schemas/ViasAddress'\n        email:\n          description: The e-mail address of the person.\n          type: string\n        fullPhoneNumber:\n          description: 'The phone number of the person provided as a single string.  It\n            will be handled as a landline phone.\n\n            Examples: \"0031 6 11 22 33 44\", \"+316/1122-3344\", \"(0031) 611223344\"'\n          type: string\n        jobTitle:\n          description: 'Job title of the person. Required when the `shareholderType`\n            is **Controller**.\n\n\n            Example values: **Chief Executive Officer**, **Chief Financial Officer**,\n            **Chief Operating Officer**, **President**, **Vice President**, **Executive\n            President**, **Managing Member**, **Partner**, **Treasurer**, **Director**,\n            or **Other**.'\n          type: string\n        name:\n          description: The name of the person.\n          $ref: '#/components/schemas/ViasName'\n        personalData:\n          description: Contains information about the person.\n          $ref: '#/components/schemas/ViasPersonalData'\n        phoneNumber:\n          description: The phone number of the person.\n          $ref: '#/components/schemas/ViasPhoneNumber'\n        shareholderCode:\n          description: 'The unique identifier (UUID) of the shareholder entry.\n\n            \u003e**If, during an Account Holder create or update request, this field is\n            left blank (but other fields provided), a new Shareholder will be created\n            with a procedurally-generated UUID.**\n\n\n            \u003e**If, during an Account Holder create request, a UUID is provided, the\n            creation of the Shareholder will fail while the creation of the Account\n            Holder will continue.**\n\n\n            \u003e**If, during an Account Holder update request, a UUID that is not correlated\n            with an existing Shareholder is provided, the update of the Shareholder\n            will fail.**\n\n\n            \u003e**If, during an Account Holder update request, a UUID that is correlated\n            with an existing Shareholder is provided, the existing Shareholder will\n            be updated.**\n\n            '\n          type: string\n        shareholderReference:\n          x-addedInVersion: '5'\n          description: Your reference for the shareholder entry.\n          type: string\n        shareholderType:\n          description: \"Specifies how the person is associated with the account holder.\\\n            \\ \\n\\nPossible values: \\n\\n* **Owner**: Individuals who directly or indirectly\\\n            \\ own 25% or more of a company.\\n\\n* **Controller**: Individuals who are\\\n            \\ members of senior management staff responsible for managing a company\\\n            \\ or organization.\"\n          enum:\n          - Controller\n          - Owner\n          - Signatory\n          type: string\n        webAddress:\n          description: The URL of the person's website.\n          type: string\n    SignatoryContact:\n      properties:\n        address:\n          description: The address of the person.\n          $ref: '#/components/schemas/ViasAddress'\n        email:\n          description: The e-mail address of the person.\n          type: string\n        fullPhoneNumber:\n          description: 'The phone number of the person provided as a single string.  It\n            will be handled as a landline phone.\n\n            Examples: \"0031 6 11 22 33 44\", \"+316/1122-3344\", \"(0031) 611223344\"'\n          type: string\n        jobTitle:\n          description: 'Job title of the signatory.\n\n\n            Example values: **Chief Executive Officer**, **Chief Financial Officer**,\n            **Chief Operating Officer**, **President**, **Vice President**, **Executive\n            President**, **Managing Member**, **Partner**, **Treasurer**, **Director**,\n            or **Other**.'\n          type: string\n        name:\n          description: The name of the person.\n          $ref: '#/components/schemas/ViasName'\n        personalData:\n          description: Contains information about the person.\n          $ref: '#/components/schemas/ViasPersonalData'\n        phoneNumber:\n          description: The phone number of the person.\n          $ref: '#/components/schemas/ViasPhoneNumber'\n        signatoryCode:\n          description: 'The unique identifier (UUID) of the signatory.\n\n            \u003e**If, during an Account Holder create or update request, this field is\n            left blank (but other fields provided), a new Signatory will be created\n            with a procedurally-generated UUID.**\n\n\n            \u003e**If, during an Account Holder create request, a UUID is provided, the\n            creation of the Signatory will fail while the creation of the Account\n            Holder will continue.**\n\n\n            \u003e**If, during an Account Holder update request, a UUID that is not correlated\n            with an existing Signatory is provided, the update of the Signatory will\n            fail.**\n\n\n            \u003e**If, during an Account Holder update request, a UUID that is correlated\n            with an existing Signatory is provided, the existing Signatory will be\n            updated.**\n\n            '\n          type: string\n        signatoryReference:\n          description: Your reference for the signatory.\n          type: string\n        webAddress:\n          description: The URL of the person's website.\n          type: string\n    StoreDetail:\n      properties:\n        address:\n          description: The address of the physical store where the account holder\n            will process payments from.\n          $ref: '#/components/schemas/ViasAddress'\n        fullPhoneNumber:\n          description: 'The phone number of the store provided as a single string.  It\n            will be handled as a landline phone.\n\n\n            Examples: \"0031 6 11 22 33 44\", \"+316/1122-3344\", \"(0031) 611223344\"'\n          type: string\n        merchantAccount:\n          description: The merchant account to which the store belongs.\n          type: string\n        merchantCategoryCode:\n          description: The merchant category code (MCC) that classifies the business\n            of the account holder.\n          type: string\n        phoneNumber:\n          description: The phone number of the store.\n          $ref: '#/components/schemas/ViasPhoneNumber'\n        shopperInteraction:\n          x-addedInVersion: '5'\n          description: 'The sales channel. Possible values: **Ecommerce**, **POS**.'\n          enum:\n          - Ecommerce\n          - POS\n          type: string\n        splitConfigurationUUID:\n          x-addedInVersion: '5'\n          description: The unique reference for the split configuration, returned\n            when you configure splits in your Customer Area. When this is provided,\n            the `virtualAccount` is also required. Adyen uses the configuration and\n            the `virtualAccount` to split funds between accounts in your platform.\n          type: string\n        status:\n          description: 'The status of the store. Possible values: **Pending**, **Active**,\n            **Inactive**, **InactiveWithModifications**, **Closed**.'\n          enum:\n          - Active\n          - Closed\n          - Inactive\n          - InactiveWithModifications\n          - Pending\n          type: string\n        store:\n          description: Adyen-generated unique alphanumeric identifier (UUID) for the\n            store, returned in the response when you create a store. Required when\n            updating an existing store in an `/updateAccountHolder` request.\n          type: string\n        storeName:\n          description: \"The name of the account holder's store. This value is shown\\\n            \\ in shopper statements.\\n\\n* Length: Between 3 to 22 characters \\n\\n\\\n            * The following characters are *not* supported: **:;}{$#@!|\u003c\u003e%^*+=\\\\\\\\\\\n            **\"\n          type: string\n        storeReference:\n          description: \"Your unique identifier for the store. The Customer Area also\\\n            \\ uses this value for the store description.\\n\\n * Length: Between 3 to\\\n            \\ 128 characters\\n\\n* The following characters are *not* supported: **:;}{$#@!|\u003c\u003e%^*+=\\\\\\\n            \\\\**\"\n          type: string\n        virtualAccount:\n          x-addedInVersion: '5'\n          description: The account holder's `accountCode` where the split amount will\n            be sent. Required when you provide the `splitConfigurationUUID`.\n          type: string\n        webAddress:\n          x-addedInVersion: '5'\n          description: URL of the ecommerce store.\n          type: string\n      required:\n      - storeReference\n      - merchantCategoryCode\n      - address\n      - merchantAccount\n    SuspendAccountHolderRequest:\n      properties:\n        accountHolderCode:\n          description: The code of the account holder to be suspended.\n          type: string\n      required:\n      - accountHolderCode\n    SuspendAccountHolderResponse:\n      properties:\n        accountHolderStatus:\n          description: The new status of the Account Holder.\n          $ref: '#/components/schemas/AccountHolderStatus'\n        invalidFields:\n          x-addedInVersion: '5'\n          description: Contains field validation errors that would prevent requests\n            from being processed.\n          items:\n            $ref: '#/components/schemas/ErrorFieldType'\n          type: array\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify\n            the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n      required:\n      - accountHolderStatus\n    UltimateParentCompany:\n      properties:\n        address:\n          description: Address of the ultimate parent company.\n          $ref: '#/components/schemas/ViasAddress'\n        businessDetails:\n          description: Details about the ultimate parent company's business.\n          $ref: '#/components/schemas/UltimateParentCompanyBusinessDetails'\n        ultimateParentCompanyCode:\n          description: Adyen-generated unique alphanumeric identifier (UUID) for the\n            entry, returned in the response when you create an ultimate parent company.\n            Required when updating an existing entry in an `/updateAccountHolder`\n            request.\n          type: string\n    UltimateParentCompanyBusinessDetails:\n      properties:\n        legalBusinessName:\n          description: The legal name of the company.\n          type: string\n        registrationNumber:\n          description: The registration number of the company.\n          type: string\n        stockExchange:\n          description: Market Identifier Code (MIC).\n          type: string\n        stockNumber:\n          description: International Securities Identification Number (ISIN).\n          type: string\n        stockTicker:\n          description: Stock Ticker symbol.\n          type: string\n    UnSuspendAccountHolderRequest:\n      properties:\n        accountHolderCode:\n          description: The code of the account holder to be reinstated.\n          type: string\n      required:\n      - accountHolderCode\n    UnSuspendAccountHolderResponse:\n      properties:\n        accountHolderStatus:\n          description: The new status of the Account Holder.\n          $ref: '#/components/schemas/AccountHolderStatus'\n        invalidFields:\n          x-addedInVersion: '5'\n          description: Contains field validation errors that would prevent requests\n            from being processed.\n          items:\n            $ref: '#/components/schemas/ErrorFieldType'\n          type: array\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify\n            the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n      required:\n      - accountHolderStatus\n    UpdateAccountHolderRequest:\n      properties:\n        accountHolderCode:\n          description: The code of the Account Holder to be updated.\n          type: string\n        accountHolderDetails:\n          description: 'The details to which the Account Holder should be updated.\n\n\n            Required if a processingTier is not provided.'\n          $ref: '#/components/schemas/AccountHolderDetails'\n        description:\n          x-addedInVersion: '4'\n          description: A description of the account holder, maximum 256 characters.\n            You can use alphanumeric characters (A-Z, a-z, 0-9), white spaces, and\n            underscores `_`.\n          type: string\n        legalEntity:\n          x-addedInVersion: '5'\n          description: 'The legal entity type of the account holder. This determines\n            the information that should be provided in the request.\n\n\n            Possible values: **Business**, **Individual**, or **NonProfit**.\n\n\n            * If set to **Business** or **NonProfit**, then `accountHolderDetails.businessDetails`\n            must be provided, with at least one entry in the `accountHolderDetails.businessDetails.shareholders`\n            list.\n\n\n            * If set to **Individual**, then `accountHolderDetails.individualDetails`\n            must be provided.'\n          enum:\n          - Business\n          - Individual\n          - NonProfit\n          type: string\n        primaryCurrency:\n          x-addedInVersion: '4'\n          description: The primary three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes),\n            to which the account holder should be updated.\n          type: string\n        processingTier:\n          x-addedInVersion: '3'\n          description: 'The processing tier to which the Account Holder should be\n            updated.\n\n            \u003eThe processing tier can not be lowered through this request.\n\n\n            \u003eRequired if accountHolderDetails are not provided.'\n          format: int32\n          type: integer\n      required:\n      - accountHolderCode\n    UpdateAccountHolderResponse:\n      properties:\n        accountHolderCode:\n          description: The code of the account holder.\n          type: string\n        accountHolderDetails:\n          description: Details of the account holder.\n          $ref: '#/components/schemas/AccountHolderDetails'\n        accountHolderStatus:\n          x-addedInVersion: '2'\n          description: The new status of the account holder.\n          $ref: '#/components/schemas/AccountHolderStatus'\n        description:\n          x-addedInVersion: '4'\n          description: The description of the account holder.\n          type: string\n        invalidFields:\n          x-addedInVersion: '5'\n          description: in case the account holder has not been updated, contains account\n            holder fields, that did not pass the validation.\n          items:\n            $ref: '#/components/schemas/ErrorFieldType'\n          type: array\n        legalEntity:\n          x-addedInVersion: '4'\n          description: The legal entity of the account holder.\n          enum:\n          - Business\n          - Individual\n          - NonProfit\n          type: string\n        primaryCurrency:\n          x-addedInVersion: '5'\n          description: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes),\n            with which the prospective account holder primarily deals.\n          type: string\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify\n            the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n        verification:\n          x-addedInVersion: '2'\n          description: The details of KYC Verification of the account holder.\n          $ref: '#/components/schemas/KYCVerificationResult'\n      required:\n      - accountHolderStatus\n      - verification\n      - legalEntity\n    UpdateAccountHolderStateRequest:\n      properties:\n        accountHolderCode:\n          description: The code of the Account Holder on which to update the state.\n          type: string\n        disable:\n          description: If true, disable the requested state.  If false, enable the\n            requested state.\n          type: boolean\n        reason:\n          description: 'The reason that the state is being updated.\n\n            \u003eRequired if the state is being disabled.'\n          type: string\n        stateType:\n          description: 'The state to be updated.\n\n            \u003ePermitted values are: `Processing`, `Payout`'\n          enum:\n          - LimitedPayout\n          - LimitedProcessing\n          - LimitlessPayout\n          - LimitlessProcessing\n          - Payout\n          - Processing\n          type: string\n      required:\n      - accountHolderCode\n      - stateType\n      - disable\n    UpdateAccountRequest:\n      properties:\n        accountCode:\n          description: The code of the account to update.\n          type: string\n        bankAccountUUID:\n          x-addedInVersion: '5'\n          description: The bankAccountUUID of the bank account held by the account\n            holder to couple the account with. Scheduled payouts in currencies matching\n            the currency of this bank account will be sent to this bank account. Payouts\n            in different currencies will be sent to a matching bank account of the\n            account holder.\n          type: string\n        description:\n          x-addedInVersion: '4'\n          description: A description of the account, maximum 256 characters.You can\n            use alphanumeric characters (A-Z, a-z, 0-9), white spaces, and underscores\n            `_`.\n          type: string\n        metadata:\n          x-addedInVersion: '5'\n          additionalProperties:\n            type: string\n          description: 'A set of key and value pairs for general use by the merchant.\n\n            The keys do not have specific names and may be used for storing miscellaneous\n            data as desired.\n\n            \u003e Note that during an update of metadata, the omission of existing key-value\n            pairs will result in the deletion of those key-value pairs.'\n          type: object\n        payoutMethodCode:\n          x-addedInVersion: '5'\n          description: The payout method code held by the account holder to couple\n            the account with. Scheduled card payouts will be sent using this payout\n            method code.\n          type: string\n        payoutSchedule:\n          description: The details of the payout schedule, to which the account should\n            be updated.\n          $ref: '#/components/schemas/UpdatePayoutScheduleRequest'\n        payoutSpeed:\n          x-addedInVersion: '5'\n          description: 'Speed with which payouts for this account are processed. Permitted\n            values: `STANDARD`, `SAME_DAY`.'\n          enum:\n          - INSTANT\n          - SAME_DAY\n          - STANDARD\n          type: string\n      required:\n      - accountCode\n    UpdateAccountResponse:\n      properties:\n        accountCode:\n          description: The code of the account.\n          type: string\n        bankAccountUUID:\n          x-addedInVersion: '5'\n          description: The bankAccountUUID of the bank account held by the account\n            holder to couple the account with. Scheduled payouts in currencies matching\n            the currency of this bank account will be sent to this bank account. Payouts\n            in different currencies will be sent to a matching bank account of the\n            account holder.\n          type: string\n        description:\n          x-addedInVersion: '4'\n          description: The description of the account.\n          type: string\n        invalidFields:\n          x-addedInVersion: '5'\n          description: A list of fields that caused the `/updateAccount` request to\n            fail.\n          items:\n            $ref: '#/components/schemas/ErrorFieldType'\n          type: array\n        metadata:\n          x-addedInVersion: '5'\n          additionalProperties:\n            type: string\n          description: A set of key and value pairs containing metadata.\n          type: object\n        payoutMethodCode:\n          x-addedInVersion: '5'\n          description: The payout method code held by the account holder to couple\n            the account with. Scheduled card payouts will be sent using this payout\n            method code.\n          type: string\n        payoutSchedule:\n          description: The payout schedule of the account.\n          $ref: '#/components/schemas/PayoutScheduleResponse'\n        payoutSpeed:\n          x-addedInVersion: '5'\n          description: 'Speed with which payouts for this account are processed. Permitted\n            values: `STANDARD`, `SAME_DAY`.'\n          enum:\n          - INSTANT\n          - SAME_DAY\n          - STANDARD\n          type: string\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify\n            the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n      required:\n      - accountCode\n    UpdatePayoutScheduleRequest:\n      properties:\n        action:\n          description: 'Direction on how to handle any payouts that have already been\n            scheduled.\n\n            Permitted values:\n\n            * `CLOSE` will close the existing batch of payouts.\n\n            * `UPDATE` will reschedule the existing batch to the new schedule.\n\n            * `NOTHING` (**default**) will allow the payout to proceed.'\n          enum:\n          - CLOSE\n          - NOTHING\n          - UPDATE\n          type: string\n        reason:\n          description: 'The reason for the payout schedule update.\n\n            \u003e This field is required when the `schedule` parameter is set to `HOLD`.'\n          type: string\n        schedule:\n          description: 'The payout schedule to which the account is to be updated.\n\n            Permitted values: `DAILY`, `DAILY_US`, `DAILY_EU`, `DAILY_AU`, `DAILY_SG`,\n            `WEEKLY`, `WEEKLY_ON_TUE_FRI_MIDNIGHT`, `BIWEEKLY_ON_1ST_AND_15TH_AT_MIDNIGHT`,\n            `MONTHLY`, `HOLD`.\n\n            `HOLD` will prevent scheduled payouts from happening but will still allow\n            manual payouts to occur.'\n          enum:\n          - BIWEEKLY_ON_1ST_AND_15TH_AT_MIDNIGHT\n          - BIWEEKLY_ON_1ST_AND_15TH_AT_NOON\n          - BI_DAILY_AU\n          - BI_DAILY_EU\n          - BI_DAILY_US\n          - DAILY\n          - DAILY_6PM\n          - DAILY_AU\n          - DAILY_EU\n          - DAILY_SG\n          - DAILY_US\n          - DEFAULT\n          - EVERY_6_HOURS_FROM_MIDNIGHT\n          - HOLD\n          - MONTHLY\n          - MONTHLY_ON_15TH_AT_MIDNIGHT\n          - WEEKLY\n          - WEEKLY_MON_TO_FRI_AU\n          - WEEKLY_MON_TO_FRI_EU\n          - WEEKLY_MON_TO_FRI_US\n          - WEEKLY_ON_TUE_FRI_MIDNIGHT\n          - WEEKLY_SUN_TO_THU_AU\n          - WEEKLY_SUN_TO_THU_US\n          - YEARLY\n          type: string\n      required:\n      - schedule\n    UploadDocumentRequest:\n      properties:\n        documentContent:\n          description: 'The content of the document, in Base64-encoded string format.\n\n\n            To learn about document requirements, refer to [Verification checks](https://docs.adyen.com/platforms/verification-checks).'\n          format: byte\n          type: string\n        documentDetail:\n          description: Details of the document being submitted.\n          $ref: '#/components/schemas/DocumentDetail'\n      required:\n      - documentDetail\n      - documentContent\n    ViasAddress:\n      properties:\n        city:\n          description: The name of the city. Required if the `houseNumberOrName`,\n            `street`, `postalCode`, or `stateOrProvince` are provided.\n          type: string\n        country:\n          description: The two-character country code of the address in ISO-3166-1\n            alpha-2 format. For example, **NL**.\n          type: string\n        houseNumberOrName:\n          description: The number or name of the house.\n          type: string\n        postalCode:\n          description: 'The postal code. Required if the `houseNumberOrName`, `street`,\n            `city`, or `stateOrProvince` are provided.\n\n\n            Maximum length:\n\n\n            * 5 digits for addresses in the US.\n\n\n            * 10 characters for all other countries.'\n          type: string\n        stateOrProvince:\n          description: \"The abbreviation of the state or province. Required if the\\\n            \\ `houseNumberOrName`, `street`, `city`, or `postalCode` are provided.\\\n            \\ \\n\\nMaximum length:\\n\\n* 2 characters for addresses in the US or Canada.\\n\\\n            \\n* 3 characters for all other countries.\\n\"\n          type: string\n        street:\n          description: The name of the street. Required if the `houseNumberOrName`,\n            `city`, `postalCode`, or `stateOrProvince` are provided.\n          type: string\n      required:\n      - country\n    ViasName:\n      properties:\n        firstName:\n          description: The first name.\n          maxLength: 80\n          type: string\n        gender:\n          description: 'The gender.\n\n            \u003eThe following values are permitted: `MALE`, `FEMALE`, `UNKNOWN`.'\n          enum:\n          - MALE\n          - FEMALE\n          - UNKNOWN\n          maxLength: 1\n          type: string\n        infix:\n          description: 'The name''s infix, if applicable.\n\n            \u003eA maximum length of twenty (20) characters is imposed.'\n          maxLength: 20\n          type: string\n        lastName:\n          description: The last name.\n          maxLength: 80\n          type: string\n      required:\n      - firstName\n      - lastName\n    ViasPersonalData:\n      properties:\n        dateOfBirth:\n          description: The person's date of birth, in ISO-8601 YYYY-MM-DD format.\n            For example, **2000-01-31**.\n          type: string\n        documentData:\n          x-addedInVersion: '3'\n          description: Array that contains information about the person's identification\n            document. You can submit only one entry per document type.\n          items:\n            $ref: '#/components/schemas/PersonalDocumentData'\n          type: array\n        nationality:\n          description: 'The nationality of the person represented by a two-character\n            country code,  in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\n            format. For example, **NL**.\n\n            '\n          maxLength: 2\n          minLength: 2\n          type: string\n    ViasPhoneNumber:\n      properties:\n        phoneCountryCode:\n          description: 'The two-character country code of the phone number.\n\n            \u003eThe permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. ''NL'').'\n          type: string\n        phoneNumber:\n          description: 'The phone number.\n\n            \u003eThe inclusion of the phone number country code is not necessary.'\n          type: string\n        phoneType:\n          description: 'The type of the phone number.\n\n            \u003eThe following values are permitted: `Landline`, `Mobile`, `SIP`, `Fax`.'\n          enum:\n          - Fax\n          - Landline\n          - Mobile\n          - SIP\n          type: string\n      required:\n      - phoneCountryCode\n      - phoneNumber\n  securitySchemes:\n    ApiKeyAuth:\n      in: header\n      name: X-API-Key\n      type: apiKey\n    BasicAuth:\n      scheme: basic\n      type: http\n  examples:\n    generic-400:\n      summary: Response code 400. Bad Request.\n      value:\n        status: 400\n        errorCode: '702'\n        message: 'Unexpected input: I'\n        errorType: validation\n    generic-403:\n      summary: Response code 401. Forbidden.\n      value:\n        status: 403\n        errorCode: '10_003'\n        message: Failed to authorize user\n        errorType: security\n    post-checkAccountHolder-basic:\n      summary: Check the account holder.\n      value:\n        accountHolderCode: CODE_OF_ACCOUNT_HOLDER\n        accountStateType: Processing\n        tier: '2'\n    post-closeAccount-closeAccount:\n      summary: Close an account\n      value:\n        accountCode: CODE_OF_ACCOUNT\n    post-closeAccountHolder-basic:\n      summary: Close an account holder\n      value:\n        accountHolderCode: CODE_OF_ACCOUNT_HOLDER\n    post-createAccount-basic:\n      summary: Add an account to an account holder\n      value:\n        accountHolderCode: CODE_OF_ACCOUNT_HOLDER\n    post-createAccountHolder-business:\n      summary: Create a business account holder\n      value:\n        accountHolderCode: YOUR_UNIQUE_ACCOUNT_HOLDER_CODE\n        accountHolderDetails:\n          address:\n            country: US\n          businessDetails:\n            doingBusinessAs: Real Good Restaurant\n            legalBusinessName: Real Good Restaurant Inc.\n            shareholders:\n            - name:\n                firstName: John\n                gender: MALE\n                lastName: Carpenter\n              address:\n                country: NL\n              email: testshareholder@email.com\n          email: test@email.com\n          webAddress: https://www.your-website.com\n        legalEntity: Business\n    post-createAccountHolder-individual:\n      summary: Create an individual account holder\n      value:\n        accountHolderCode: GENERATE_CODE\n        accountHolderDetails:\n          email: tim@green.com\n          individualDetails:\n            name:\n              firstName: Tim\n              gender: MALE\n              lastName: Green\n          address:\n            country: US\n          webAddress: https://www.your-website.com\n        legalEntity: Individual\n    post-deleteBankAccounts-basic:\n      summary: Delete bank accounts\n      value:\n        accountHolderCode: CODE_OF_ACCOUNT_HOLDER\n        bankAccountUUIDs:\n        - eeb6ed22-3bae-483c-83b9-bc2097a75d40\n    post-deletePayoutMethods-basic:\n      summary: Delete a payout method\n      value:\n        accountHolderCode: CODE_OF_ACCOUNT_HOLDER\n        payoutMethodCodes:\n        - 34b6ed22-3bae-483c-83b9-bc2097a75d40\n    post-deleteShareholders-basic:\n      summary: Delete shareholders\n      value:\n        accountHolderCode: CODE_OF_ACCOUNT_HOLDER\n        shareholderCodes:\n        - 9188218c-576e-4cbe-8e86-72722f453920\n    post-getAccountHolder-accountCode:\n      summary: Get an account holder\n      value:\n        accountCode: CODE_OF_ACCOUNT\n    post-getAccountHolder-accountHolderCode:\n      summary: Get an account holder for the account\n      value:\n        accountHolderCode: CODE_OF_ACCOUNT_HOLDER\n    post-getTaxForm-basic:\n      summary: Get a tax form\n      value:\n        accountHolderCode: CODE_OF_ACCOUNT_HOLDER\n        formType: 1099-K\n        year: 2020\n    post-getUploadedDocuments-basic:\n      summary: Get uploaded documents\n      value:\n        accountHolderCode: CODE_OF_ACCOUNT_HOLDER\n        bankAccountUUID: EXAMPLE_UUID\n    post-suspendAccountHolder-basic:\n      summary: Suspend an account holder\n      value:\n        accountHolderCode: CODE_OF_ACCOUNT_HOLDER\n    post-unSuspendAccountHolder-basic:\n      summary: Unsuspend an account holder\n      value:\n        accountHolderCode: CODE_OF_ACCOUNT_HOLDER\n    post-updateAccount-basic:\n      summary: Set a payout schedule\n      value:\n        accountCode: CODE_OF_ACCOUNT\n        payoutSchedule:\n          schedule: WEEKLY\n          action: CLOSE\n    post-updateAccountHolder-addShareholders:\n      summary: Add shareholders\n      value:\n        accountHolderCode: YOUR_UNIQUE_ACCOUNT_HOLDER_CODE\n        accountHolderDetails:\n          businessDetails:\n            shareholders:\n            - name:\n                firstName: Alice\n                gender: FEMALE\n                lastName: Fields\n              address:\n                city: San Francisco\n                country: US\n                houseNumberOrName: '274'\n                postalCode: '94107'\n                stateOrProvince: CA\n                street: Brannan\n              email: testshareholder2@email.com\n              personalData:\n                dateOfBirth: '1970-01-01'\n                documentData:\n                - number: '1234567890'\n                  type: ID\n            taxId: '123456789'\n          email: test@email.com\n          fullPhoneNumber: '+14154890281'\n          webAddress: http://www.accountholderwebsite.com\n    post-updateAccountHolder-bankAccountDetails:\n      summary: Update bank account details\n      value:\n        accountHolderCode: CODE_OF_ACCOUNT_HOLDER\n        accountHolderDetails:\n          email: tim@green.com\n          individualDetails:\n            name:\n              firstName: Tim\n              gender: MALE\n              lastName: Green\n          bankAccountDetails:\n          - accountNumber: '1678116852'\n            branchCode: '053101273'\n            countryCode: US\n            currencyCode: USD\n            ownerName: Tim Green\n            ownerHouseNumberOrName: '100'\n            ownerStreet: Main Street\n            ownerPostalCode: 02894\n            ownerCity: Springfield\n            ownerState: AZ\n            ownerCountryCode: US\n    post-updateAccountHolder-businessDetails:\n      summary: Update business details\n      value:\n        accountHolderCode: CODE_OF_ACCOUNT_HOLDER\n        accountHolderDetails:\n          businessDetails:\n            shareholders:\n            - address:\n                city: Amsterdam\n                country: NL\n                houseNumberOrName: '1'\n                postalCode: 1111AA\n                stateOrProvince: NH\n                street: Awesome St\n              email: testshareholder2@email.com\n              name:\n                firstName: Alice\n                gender: FEMALE\n                lastName: Fields\n            taxId: BV123456789\n          email: test@email.com\n          fullPhoneNumber: '+31612345678'\n          webAddress: http://www.accountholderwebsite.com\n    post-updateAccountHolder-general:\n      summary: Update account holder details\n      value:\n        accountHolderCode: CODE_OF_ACCOUNT_HOLDER\n        accountHolderDetails:\n          address:\n            city: NY\n            country: US\n            postalCode: '12345'\n            stateOrProvince: NH\n            street: Teststreet 1\n            houseNumberOrName: '100'\n          email: test@adyen.com\n          individualDetails:\n            name:\n              firstName: Simon\n              gender: MALE\n              lastName: Hopper\n            personalData:\n              dateOfBirth: '1970-01-01'\n              documentData:\n              - number: '1234567890'\n                type: ID\n              nationality: NL\n          merchantCategoryCode: '7999'\n          fullPhoneNumber: '+31612345678'\n          webAddress: http://www.accountholderwebsite.com\n    post-updateAccountHolderState-basic:\n      summary: Update account holder state\n      value:\n        accountHolderCode: CODE_OF_ACCOUNT_HOLDER\n        disable: true\n        reason: test reason payout\n        stateType: Payout\n    post-uploadDocument-basic:\n      summary: Upload a document\n      value:\n        documentContent: dGVzdCBkb2N1bWVudCBjb250ZW50\n        documentDetail:\n          accountHolderCode: CODE_OF_ACCOUNT_HOLDER\n          documentType: PASSPORT\n          filename: passport.png\n          description: test passport description\n",
			"canonicalURL": "/github.com/Adyen/adyen-openapi@1ce757e7aa9360d308ee46c57faf90dacc9aaf98/-/blob/yaml/AccountService-v5.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Adyen/adyen-openapi/blob/1ce757e7aa9360d308ee46c57faf90dacc9aaf98/yaml/AccountService-v5.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}