{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/MetaCell/cloud-harness"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "applications/samples/backend/samples/openapi/openapi.yaml",
			"byteSize": 4637,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    email: cloudharness@metacell.us\n  description: CloudHarness Sample api\n  license:\n    name: UNLICENSED\n  title: CloudHarness Sample API\n  version: 0.1.0\nservers:\n- url: /api\ntags:\n- name: auth\n- name: workflows\npaths:\n  /error:\n    get:\n      operationId: error\n      responses:\n        \"500\":\n          description: Sentry entry should come!\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: This won't happen\n      summary: test sentry is working\n      tags:\n      - test\n      x-openapi-router-controller: samples.controllers.test_controller\n  /operation_async:\n    get:\n      operationId: submit_async\n      responses:\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_202'\n          description: Submitted operation. See also https://restfulapi.net/http-status-202-accepted/\n      summary: Send an asynchronous operation\n      tags:\n      - workflows\n      x-openapi-router-controller: samples.controllers.workflows_controller\n  /operation_sync:\n    get:\n      operationId: submit_sync\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: Operation result\n      summary: Send a synchronous operation\n      tags:\n      - workflows\n      x-openapi-router-controller: samples.controllers.workflows_controller\n  /operation_sync_results:\n    get:\n      operationId: submit_sync_with_results\n      parameters:\n      - description: first number to sum\n        example: 10\n        explode: true\n        in: query\n        name: a\n        required: false\n        schema:\n          type: number\n        style: form\n      - description: second number to sum\n        example: 10\n        explode: true\n        in: query\n        name: b\n        required: false\n        schema:\n          type: number\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: Operation result\n      summary: Send a synchronous operation and get results using the event queue.\n        Just a sum, but in the cloud\n      tags:\n      - workflows\n      x-openapi-router-controller: samples.controllers.workflows_controller\n  /ping:\n    get:\n      operationId: ping\n      responses:\n        \"500\":\n          description: This shouldn't happen\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: What we want\n      summary: test the application is up\n      tags:\n      - test\n      x-openapi-router-controller: samples.controllers.test_controller\n  /valid:\n    get:\n      description: |\n        Check if the token is valid\n      operationId: valid_token\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Valid'\n                type: array\n          description: Check if token is valid\n        \"400\":\n          description: bad input parameter\n      security:\n      - bearerAuth: []\n      summary: Check if the token is valid. Get a token by logging into the base url\n      tags:\n      - auth\n      x-openapi-router-controller: samples.controllers.auth_controller\ncomponents:\n  schemas:\n    Valid:\n      example:\n        response: response\n      properties:\n        response:\n          title: response\n          type: string\n      title: Valid\n      type: object\n    inline_response_202_task:\n      example:\n        name: my-op\n        href: http://workflows.cloudharness.metacell.us/api/operation/my-op\n      properties:\n        href:\n          description: the url where to check the operation status\n          example: http://workflows.cloudharness.metacell.us/api/operation/my-op\n          title: href\n          type: string\n        name:\n          example: my-op\n          title: name\n          type: string\n      title: inline_response_202_task\n      type: object\n    inline_response_202:\n      example:\n        task:\n          name: my-op\n          href: http://workflows.cloudharness.metacell.us/api/operation/my-op\n      properties:\n        task:\n          $ref: '#/components/schemas/inline_response_202_task'\n      title: inline_response_202\n      type: object\n  securitySchemes:\n    bearerAuth:\n      bearerFormat: JWT\n      scheme: bearer\n      type: http\n      x-bearerInfoFunc: cloudharness.auth.decode_token\n",
			"canonicalURL": "/github.com/MetaCell/cloud-harness@1677e55fe23347e0162ef6f34cc1416f62841f8c/-/blob/applications/samples/backend/samples/openapi/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/MetaCell/cloud-harness/blob/1677e55fe23347e0162ef6f34cc1416f62841f8c/applications/samples/backend/samples/openapi/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}