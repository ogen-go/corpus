{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/apideck.accounting/openapi.yaml",
			"byteSize": 156649,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://unify.apideck.com\ninfo:\n  x-ballerina-display:\n    label: Apideck Accounting\n    iconPath: \"icon.png\"\n  contact:\n    email: hello@apideck.com\n    url: https://developers.apideck.com\n  description: \u003e\n    This is a generated connector from [Apideck Accounting API v5.3.0](https://docs.apideck.com/apis/accounting/reference) OpenAPI specification.\n    \n    You can use this API to access all Accounting API endpoints.\n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials.\n\n    Unify API accounts have sandbox mode and live mode API keys. To change modes just use the appropriate key to get a live or test object. \n\n    You can find your API keys on the unify settings of your Apideck app.Your Apideck application_id can also be found on the same page.\n\n    Obtain API keys following [this guide](https://developers.apideck.com/apis/accounting/reference#section/Authorization).\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  title: Accounting API\n  version: 5.3.0\n  x-apideck-api: accounting\n  x-apideck-sdk-support: true\n  x-apisguru-categories:\n    - developer_tools\n  x-logo:\n    url: https://developers.apideck.com/icon.png\n  x-origin:\n    - format: openapi\n      url: https://raw.githubusercontent.com/apideck-libraries/openapi-specs/master/accounting.yml\n      version: \"3.0\"\n  x-providerName: apideck.com\n  x-serviceName: accounting\n  x-tags:\n    - partner\nexternalDocs:\n  description: Apideck Developer Docs\n  url: https://developers.apideck.com\nsecurity:\n  - apiKey: []\ntags:\n  - description: \"\"\n    name: Tax Rates\n    x-apideck-model:\n      $ref: \"#/components/schemas/TaxRate\"\n  - description: \"\"\n    name: Invoices\n    x-apideck-model:\n      $ref: \"#/components/schemas/Invoice\"\n  - description: \"\"\n    name: Companies\n    x-apideck-model:\n      $ref: \"#/components/schemas/Company\"\n  - description: \"\"\n    name: Contacts\n    x-apideck-model:\n      $ref: \"#/components/schemas/Contact\"\n  - description: \"\"\n    name: Ledger Accounts\n    x-apideck-model:\n      $ref: \"#/components/schemas/LedgerAccount\"\npaths:\n  /accounting/companies:\n    get:\n      description: List Companies\n      operationId: companiesAll\n      parameters:\n        - $ref: \"#/components/parameters/raw\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/cursor\"\n        - $ref: \"#/components/parameters/limit\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetCompaniesResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequired\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/Unprocessable\"\n        default:\n          $ref: \"#/components/responses/UnexpectedError\"\n      security:\n        - apiKey: []\n      summary: List Companies\n      tags:\n        - Companies\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.accounting.companiesAll({})\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n      x-graphql-field-name: companies\n    post:\n      description: Create Company\n      operationId: companiesAdd\n      parameters:\n        - $ref: \"#/components/parameters/raw\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n      requestBody:\n        description: A record of type `Company` which contains details to create company. \n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Company\"\n        required: true\n      responses:\n        \"201\":\n          $ref: \"#/components/responses/CreateCompanyResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequired\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/Unprocessable\"\n        default:\n          $ref: \"#/components/responses/UnexpectedError\"\n      security:\n        - apiKey: []\n      summary: Create Company\n      tags:\n        - Companies\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            const params = {\n              company: {\n                name: 'SpaceX',\n                owner_id: '12345',\n                image: 'https://www.spacex.com/static/images/share.jpg',\n                description:\n                  'Space Exploration Technologies Corp. is an American aerospace manufacturer, space transportation services and communications company headquartered in Hawthorne, California.',\n                vat_number: 'BE0689615164',\n                currency: 'USD',\n                status: 'Open',\n                fax: '+12129876543',\n                annual_revenue: '+$35m',\n                number_of_employees: '500-1000',\n                industry: 'Apparel',\n                ownership: 'Public',\n                sales_tax_number: '12456EN',\n                payee_number: '78932EN',\n                abn_or_tfn: '46 115 614 695',\n                abn_branch: '123',\n                acn: 'XXX XXX XXX',\n                bank_accounts: [\n                  {\n                    iban: 'CH2989144532982975332',\n                    bic: 'AUDSCHGGXXX',\n                    bsb_number: '062-001',\n                    bank_code: 'BNH',\n                    account_number: '123456789',\n                    account_name: 'SPACEX LLC'\n                  }\n                ],\n                websites: [\n                  {\n                    id: '12345',\n                    url: 'http://example.com',\n                    type: 'primary'\n                  }\n                ],\n                addresses: [\n                  {\n                    id: '123',\n                    type: 'primary',\n                    string: '25 Spring Street, Blackburn, VIC 3130',\n                    name: 'HQ US',\n                    line1: 'Main street',\n                    line2: 'apt #',\n                    city: 'San Francisco',\n                    state: 'CA',\n                    postal_code: '94104',\n                    country: 'US',\n                    latitude: '40.759211',\n                    longitude: '-73.984638'\n                  }\n                ],\n                social_links: [\n                  {\n                    id: '12345',\n                    url: 'https://www.twitter.com/apideck-io',\n                    type: 'twitter'\n                  }\n                ],\n                phone_numbers: [\n                  {\n                    id: '12345',\n                    number: '111-111-1111',\n                    type: 'primary'\n                  }\n                ],\n                emails: [\n                  {\n                    id: '123',\n                    email: 'elon@musk.com',\n                    type: 'primary'\n                  }\n                ],\n                custom_fields: [\n                  {\n                    id: 'custom_technologies',\n                    value: 'Uses Salesforce and Marketo'\n                  }\n                ],\n                tags: ['New'],\n                read_only: false\n              }\n            }\n\n            try {\n              const { data } = await apideck.accounting.companiesAdd(params)\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n  \"/accounting/companies/{id}\":\n    delete:\n      description: Delete Company\n      operationId: companiesDelete\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/raw\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/DeleteCompanyResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequired\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/Unprocessable\"\n        default:\n          $ref: \"#/components/responses/UnexpectedError\"\n      security:\n        - apiKey: []\n      summary: Delete Company\n      tags:\n        - Companies\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.accounting.companiesDelete({\n                id: 'id_example'\n              })\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n    get:\n      description: Get Company\n      operationId: companiesOne\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/raw\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetCompanyResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequired\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/Unprocessable\"\n        default:\n          $ref: \"#/components/responses/UnexpectedError\"\n      security:\n        - apiKey: []\n      summary: Get Company\n      tags:\n        - Companies\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.accounting.companiesOne({\n                id: 'id_example'\n              })\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n    patch:\n      description: Update Company\n      operationId: companiesUpdate\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/raw\"\n      requestBody:\n        description: A record of type `Company` which contains details to update company. \n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Company\"\n        required: true\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/UpdateCompanyResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequired\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/Unprocessable\"\n        default:\n          $ref: \"#/components/responses/UnexpectedError\"\n      security:\n        - apiKey: []\n      summary: Update Company\n      tags:\n        - Companies\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            const params = {\n              id: 'id_example',\n              company: {\n                name: 'SpaceX',\n                owner_id: '12345',\n                image: 'https://www.spacex.com/static/images/share.jpg',\n                description:\n                  'Space Exploration Technologies Corp. is an American aerospace manufacturer, space transportation services and communications company headquartered in Hawthorne, California.',\n                vat_number: 'BE0689615164',\n                currency: 'USD',\n                status: 'Open',\n                fax: '+12129876543',\n                annual_revenue: '+$35m',\n                number_of_employees: '500-1000',\n                industry: 'Apparel',\n                ownership: 'Public',\n                sales_tax_number: '12456EN',\n                payee_number: '78932EN',\n                abn_or_tfn: '46 115 614 695',\n                abn_branch: '123',\n                acn: 'XXX XXX XXX',\n                bank_accounts: [\n                  {\n                    iban: 'CH2989144532982975332',\n                    bic: 'AUDSCHGGXXX',\n                    bsb_number: '062-001',\n                    bank_code: 'BNH',\n                    account_number: '123456789',\n                    account_name: 'SPACEX LLC'\n                  }\n                ],\n                websites: [\n                  {\n                    id: '12345',\n                    url: 'http://example.com',\n                    type: 'primary'\n                  }\n                ],\n                addresses: [\n                  {\n                    id: '123',\n                    type: 'primary',\n                    string: '25 Spring Street, Blackburn, VIC 3130',\n                    name: 'HQ US',\n                    line1: 'Main street',\n                    line2: 'apt #',\n                    city: 'San Francisco',\n                    state: 'CA',\n                    postal_code: '94104',\n                    country: 'US',\n                    latitude: '40.759211',\n                    longitude: '-73.984638'\n                  }\n                ],\n                social_links: [\n                  {\n                    id: '12345',\n                    url: 'https://www.twitter.com/apideck-io',\n                    type: 'twitter'\n                  }\n                ],\n                phone_numbers: [\n                  {\n                    id: '12345',\n                    number: '111-111-1111',\n                    type: 'primary'\n                  }\n                ],\n                emails: [\n                  {\n                    id: '123',\n                    email: 'elon@musk.com',\n                    type: 'primary'\n                  }\n                ],\n                custom_fields: [\n                  {\n                    id: 'custom_technologies',\n                    value: 'Uses Salesforce and Marketo'\n                  }\n                ],\n                tags: ['New'],\n                read_only: false\n              }\n            }\n\n            try {\n              const { data } = await apideck.accounting.companiesUpdate(params)\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n  /accounting/contacts:\n    get:\n      description: List Contacts\n      operationId: contactsAll\n      parameters:\n        - $ref: \"#/components/parameters/raw\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/cursor\"\n        - $ref: \"#/components/parameters/limit\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetContactsResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequired\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/Unprocessable\"\n        default:\n          $ref: \"#/components/responses/UnexpectedError\"\n      security:\n        - apiKey: []\n      summary: List Contacts\n      tags:\n        - Contacts\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.accounting.contactsAll({})\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n      x-graphql-field-name: contacts\n    post:\n      description: Create Contact\n      operationId: contactsAdd\n      parameters:\n        - $ref: \"#/components/parameters/raw\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n      requestBody:\n        description: A record of type `Contact` which contains details to create contact. \n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Contact\"\n        required: true\n      responses:\n        \"201\":\n          $ref: \"#/components/responses/CreateContactResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequired\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/Unprocessable\"\n        default:\n          $ref: \"#/components/responses/UnexpectedError\"\n      security:\n        - apiKey: []\n      summary: Create Contact\n      tags:\n        - Contacts\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            const params = {\n              contact: {\n                name: 'Elon Musk',\n                owner_id: '54321',\n                type: 'personal',\n                company_id: '23456',\n                company_name: '23456',\n                lead_id: '34567',\n                first_name: 'Elon',\n                middle_name: 'D.',\n                last_name: 'Musk',\n                prefix: 'Mr.',\n                suffix: 'PhD',\n                title: 'CEO',\n                department: 'Engineering',\n                language: 'EN',\n                gender: 'female',\n                birthday: '2000-08-12',\n                image: 'https://unavatar.io/elon-musk',\n                lead_source: 'Cold Call',\n                fax: '+12129876543',\n                description: 'Internal champion',\n                current_balance: 10.5,\n                status: 'open',\n                active: true,\n                websites: [\n                  {\n                    id: '12345',\n                    url: 'http://example.com',\n                    type: 'primary'\n                  }\n                ],\n                addresses: [\n                  {\n                    id: '123',\n                    type: 'primary',\n                    string: '25 Spring Street, Blackburn, VIC 3130',\n                    name: 'HQ US',\n                    line1: 'Main street',\n                    line2: 'apt #',\n                    city: 'San Francisco',\n                    state: 'CA',\n                    postal_code: '94104',\n                    country: 'US',\n                    latitude: '40.759211',\n                    longitude: '-73.984638'\n                  }\n                ],\n                social_links: [\n                  {\n                    id: '12345',\n                    url: 'https://www.twitter.com/apideck-io',\n                    type: 'twitter'\n                  }\n                ],\n                phone_numbers: [\n                  {\n                    id: '12345',\n                    number: '111-111-1111',\n                    type: 'primary'\n                  }\n                ],\n                emails: [\n                  {\n                    id: '123',\n                    email: 'elon@musk.com',\n                    type: 'primary'\n                  }\n                ],\n                custom_fields: [\n                  {\n                    id: 'custom_technologies',\n                    value: 'Uses Salesforce and Marketo'\n                  }\n                ],\n                tags: ['New']\n              }\n            }\n\n            try {\n              const { data } = await apideck.accounting.contactsAdd(params)\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n  \"/accounting/contacts/{id}\":\n    delete:\n      description: Delete Contact\n      operationId: contactsDelete\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/raw\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/DeleteContactResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequired\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/Unprocessable\"\n        default:\n          $ref: \"#/components/responses/UnexpectedError\"\n      security:\n        - apiKey: []\n      summary: Delete Contact\n      tags:\n        - Contacts\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.accounting.contactsDelete({\n                id: 'id_example'\n              })\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n    get:\n      description: Get Contact\n      operationId: contactsOne\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/raw\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetContactResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequired\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/Unprocessable\"\n        default:\n          $ref: \"#/components/responses/UnexpectedError\"\n      security:\n        - apiKey: []\n      summary: Get Contact\n      tags:\n        - Contacts\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.accounting.contactsOne({\n                id: 'id_example'\n              })\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n    patch:\n      description: Update Contact\n      operationId: contactsUpdate\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/raw\"\n      requestBody:\n        description: A record of type `Contact` which contains details to update contact. \n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Contact\"\n        required: true\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/UpdateContactResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequired\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/Unprocessable\"\n        default:\n          $ref: \"#/components/responses/UnexpectedError\"\n      security:\n        - apiKey: []\n      summary: Update Contact\n      tags:\n        - Contacts\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            const params = {\n              id: 'id_example',\n              contact: {\n                name: 'Elon Musk',\n                owner_id: '54321',\n                type: 'personal',\n                company_id: '23456',\n                company_name: '23456',\n                lead_id: '34567',\n                first_name: 'Elon',\n                middle_name: 'D.',\n                last_name: 'Musk',\n                prefix: 'Mr.',\n                suffix: 'PhD',\n                title: 'CEO',\n                department: 'Engineering',\n                language: 'EN',\n                gender: 'female',\n                birthday: '2000-08-12',\n                image: 'https://unavatar.io/elon-musk',\n                lead_source: 'Cold Call',\n                fax: '+12129876543',\n                description: 'Internal champion',\n                current_balance: 10.5,\n                status: 'open',\n                active: true,\n                websites: [\n                  {\n                    id: '12345',\n                    url: 'http://example.com',\n                    type: 'primary'\n                  }\n                ],\n                addresses: [\n                  {\n                    id: '123',\n                    type: 'primary',\n                    string: '25 Spring Street, Blackburn, VIC 3130',\n                    name: 'HQ US',\n                    line1: 'Main street',\n                    line2: 'apt #',\n                    city: 'San Francisco',\n                    state: 'CA',\n                    postal_code: '94104',\n                    country: 'US',\n                    latitude: '40.759211',\n                    longitude: '-73.984638'\n                  }\n                ],\n                social_links: [\n                  {\n                    id: '12345',\n                    url: 'https://www.twitter.com/apideck-io',\n                    type: 'twitter'\n                  }\n                ],\n                phone_numbers: [\n                  {\n                    id: '12345',\n                    number: '111-111-1111',\n                    type: 'primary'\n                  }\n                ],\n                emails: [\n                  {\n                    id: '123',\n                    email: 'elon@musk.com',\n                    type: 'primary'\n                  }\n                ],\n                custom_fields: [\n                  {\n                    id: 'custom_technologies',\n                    value: 'Uses Salesforce and Marketo'\n                  }\n                ],\n                tags: ['New']\n              }\n            }\n\n            try {\n              const { data } = await apideck.accounting.contactsUpdate(params)\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n  /accounting/invoices:\n    get:\n      description: List Invoices\n      operationId: invoicesAll\n      parameters:\n        - $ref: \"#/components/parameters/raw\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/cursor\"\n        - $ref: \"#/components/parameters/limit\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetInvoicesResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequired\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/Unprocessable\"\n        default:\n          $ref: \"#/components/responses/UnexpectedError\"\n      security:\n        - apiKey: []\n      summary: List Invoices\n      tags:\n        - Invoices\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.accounting.invoicesAll({})\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n      x-graphql-field-name: invoices\n    post:\n      description: Create Invoice\n      operationId: invoicesAdd\n      parameters:\n        - $ref: \"#/components/parameters/raw\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n      requestBody:\n        description: A record of type `Invoice` which contains details to create invoice. \n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Invoice\"\n        required: true\n      responses:\n        \"201\":\n          $ref: \"#/components/responses/CreateInvoiceResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequired\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/Unprocessable\"\n        default:\n          $ref: \"#/components/responses/UnexpectedError\"\n      security:\n        - apiKey: []\n      summary: Create Invoice\n      tags:\n        - Invoices\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            const params = {\n              invoice: {\n                type: 'Service',\n                number: 'OIT00546',\n                customer: {\n                  company_name: 'The boring company'\n                },\n                date: '2020-09-30',\n                due_date: '2020-10-30',\n                po_number: '90000117',\n                status: 'paid',\n                currency: 'USD',\n                sub_total: 27500,\n                total_tax: 1000,\n                total: 28500,\n                balance: 26500,\n                deposit: 2000,\n                customer_memo: 'Thank you for your business and have a great day!',\n                line_items: [\n                  {\n                    line_number: 1,\n                    description: 'Rock Fountain',\n                    type: 'Transaction',\n                    tax_amount: 27500,\n                    total_amount: 27500,\n                    quantity: 2,\n                    unit_price: 27500,\n                    discount_percentage: 15,\n                    item_id: 12344,\n                    tax_rate: {\n                      name: '15% GST on Expenses',\n                      code: 'ABN'\n                    },\n                    general_ledger_account: {\n                      name: 'Bank account'\n                    }\n                  }\n                ],\n                billing_address: {\n                  id: '123',\n                  type: 'primary',\n                  string: '25 Spring Street, Blackburn, VIC 3130',\n                  name: 'HQ US',\n                  line1: 'Main street',\n                  line2: 'apt #',\n                  city: 'San Francisco',\n                  state: 'CA',\n                  postal_code: '94104',\n                  country: 'US',\n                  latitude: '40.759211',\n                  longitude: '-73.984638'\n                },\n                shipping_address: {\n                  id: '123',\n                  type: 'primary',\n                  string: '25 Spring Street, Blackburn, VIC 3130',\n                  name: 'HQ US',\n                  line1: 'Main street',\n                  line2: 'apt #',\n                  city: 'San Francisco',\n                  state: 'CA',\n                  postal_code: '94104',\n                  country: 'US',\n                  latitude: '40.759211',\n                  longitude: '-73.984638'\n                }\n              }\n            }\n\n            try {\n              const { data } = await apideck.accounting.invoicesAdd(params)\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n  \"/accounting/invoices/{id}\":\n    delete:\n      description: Delete Invoice\n      operationId: invoicesDelete\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/raw\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/DeleteInvoiceResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequired\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/Unprocessable\"\n        default:\n          $ref: \"#/components/responses/UnexpectedError\"\n      security:\n        - apiKey: []\n      summary: Delete Invoice\n      tags:\n        - Invoices\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.accounting.invoicesDelete({\n                id: 'id_example'\n              })\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n    get:\n      description: Get Invoice\n      operationId: invoicesOne\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/raw\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetInvoiceResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequired\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/Unprocessable\"\n        default:\n          $ref: \"#/components/responses/UnexpectedError\"\n      security:\n        - apiKey: []\n      summary: Get Invoice\n      tags:\n        - Invoices\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.accounting.invoicesOne({\n                id: 'id_example'\n              })\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n    patch:\n      description: Update Invoice\n      operationId: invoicesUpdate\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/raw\"\n      requestBody:\n        description: A record of type `Invoice` which contains details to update invoice.\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Invoice\"\n        required: true\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/UpdateInvoiceResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequired\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/Unprocessable\"\n        default:\n          $ref: \"#/components/responses/UnexpectedError\"\n      security:\n        - apiKey: []\n      summary: Update Invoice\n      tags:\n        - Invoices\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            const params = {\n              id: 'id_example',\n              invoice: {\n                type: 'Service',\n                number: 'OIT00546',\n                customer: {\n                  company_name: 'The boring company'\n                },\n                date: '2020-09-30',\n                due_date: '2020-10-30',\n                po_number: '90000117',\n                status: 'paid',\n                currency: 'USD',\n                sub_total: 27500,\n                total_tax: 1000,\n                total: 28500,\n                balance: 26500,\n                deposit: 2000,\n                customer_memo: 'Thank you for your business and have a great day!',\n                line_items: [\n                  {\n                    line_number: 1,\n                    description: 'Rock Fountain',\n                    type: 'Transaction',\n                    tax_amount: 27500,\n                    total_amount: 27500,\n                    quantity: 2,\n                    unit_price: 27500,\n                    discount_percentage: 15,\n                    item_id: 12344,\n                    tax_rate: {\n                      name: '15% GST on Expenses',\n                      code: 'ABN'\n                    },\n                    general_ledger_account: {\n                      name: 'Bank account'\n                    }\n                  }\n                ],\n                billing_address: {\n                  id: '123',\n                  type: 'primary',\n                  string: '25 Spring Street, Blackburn, VIC 3130',\n                  name: 'HQ US',\n                  line1: 'Main street',\n                  line2: 'apt #',\n                  city: 'San Francisco',\n                  state: 'CA',\n                  postal_code: '94104',\n                  country: 'US',\n                  latitude: '40.759211',\n                  longitude: '-73.984638'\n                },\n                shipping_address: {\n                  id: '123',\n                  type: 'primary',\n                  string: '25 Spring Street, Blackburn, VIC 3130',\n                  name: 'HQ US',\n                  line1: 'Main street',\n                  line2: 'apt #',\n                  city: 'San Francisco',\n                  state: 'CA',\n                  postal_code: '94104',\n                  country: 'US',\n                  latitude: '40.759211',\n                  longitude: '-73.984638'\n                }\n              }\n            }\n\n            try {\n              const { data } = await apideck.accounting.invoicesUpdate(params)\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n  /accounting/ledger-accounts:\n    get:\n      description: List Ledger Accounts\n      operationId: ledgerAccountsAll\n      parameters:\n        - $ref: \"#/components/parameters/raw\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/cursor\"\n        - $ref: \"#/components/parameters/limit\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetLedgerAccountsResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequired\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/Unprocessable\"\n        default:\n          $ref: \"#/components/responses/UnexpectedError\"\n      security:\n        - apiKey: []\n      summary: List Ledger Accounts\n      tags:\n        - Ledger Accounts\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.accounting.ledgerAccountsAll({})\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n      x-graphql-field-name: ledgerAccounts\n    post:\n      description: Create Ledger Account\n      operationId: ledgerAccountsAdd\n      parameters:\n        - $ref: \"#/components/parameters/raw\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n      requestBody:\n        description: A record of type `LedgerAccount` which contains details to create ledger account.\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/LedgerAccount\"\n        required: true\n      responses:\n        \"201\":\n          $ref: \"#/components/responses/CreateLedgerAccountResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequired\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/Unprocessable\"\n        default:\n          $ref: \"#/components/responses/UnexpectedError\"\n      security:\n        - apiKey: []\n      summary: Create Ledger Account\n      tags:\n        - Ledger Accounts\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            const params = {\n              ledgerAccount: {\n                nominal_code: '091',\n                classification: 'asset',\n                type: 'bank',\n                sub_type: 'CHECKING_ACCOUNT',\n                name: 'Bank account',\n                fully_qualified_name: 'Asset.Bank.Checking_Account',\n                description: 'The main checking account',\n                opening_balance: 75000,\n                current_balance: 20000,\n                currency: 'USD',\n                tax_type: 'USD',\n                tax_code: 'N-T',\n                level: '2',\n                active: true,\n                bank_account: {\n                  iban: 'CH2989144532982975332',\n                  bic: 'AUDSCHGGXXX',\n                  bsb_number: '062-001',\n                  bank_code: 'BNH',\n                  account_number: '123456789',\n                  account_name: 'SPACEX LLC'\n                },\n                sub_account: true\n              }\n            }\n\n            try {\n              const { data } = await apideck.accounting.ledgerAccountsAdd(params)\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n  \"/accounting/ledger-accounts/{id}\":\n    delete:\n      description: Delete Ledger Account\n      operationId: ledgerAccountsDelete\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/raw\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/DeleteLedgerAccountResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequired\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/Unprocessable\"\n        default:\n          $ref: \"#/components/responses/UnexpectedError\"\n      security:\n        - apiKey: []\n      summary: Delete Ledger Account\n      tags:\n        - Ledger Accounts\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.accounting.ledgerAccountsDelete({\n                id: 'id_example'\n              })\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n    get:\n      description: Get Ledger Account\n      operationId: ledgerAccountsOne\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/raw\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetLedgerAccountResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequired\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/Unprocessable\"\n        default:\n          $ref: \"#/components/responses/UnexpectedError\"\n      security:\n        - apiKey: []\n      summary: Get Ledger Account\n      tags:\n        - Ledger Accounts\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.accounting.ledgerAccountsOne({\n                id: 'id_example'\n              })\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n    patch:\n      description: Update Ledger Account\n      operationId: ledgerAccountsUpdate\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/raw\"\n      requestBody:\n        description: A record of type `LedgerAccount` which contains details to update ledger account.\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/LedgerAccount\"\n        required: true\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/UpdateLedgerAccountResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequired\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/Unprocessable\"\n        default:\n          $ref: \"#/components/responses/UnexpectedError\"\n      security:\n        - apiKey: []\n      summary: Update Ledger Account\n      tags:\n        - Ledger Accounts\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            const params = {\n              id: 'id_example',\n              ledgerAccount: {\n                nominal_code: '091',\n                classification: 'asset',\n                type: 'bank',\n                sub_type: 'CHECKING_ACCOUNT',\n                name: 'Bank account',\n                fully_qualified_name: 'Asset.Bank.Checking_Account',\n                description: 'The main checking account',\n                opening_balance: 75000,\n                current_balance: 20000,\n                currency: 'USD',\n                tax_type: 'USD',\n                tax_code: 'N-T',\n                level: '2',\n                active: true,\n                bank_account: {\n                  iban: 'CH2989144532982975332',\n                  bic: 'AUDSCHGGXXX',\n                  bsb_number: '062-001',\n                  bank_code: 'BNH',\n                  account_number: '123456789',\n                  account_name: 'SPACEX LLC'\n                },\n                sub_account: true\n              }\n            }\n\n            try {\n              const { data } = await apideck.accounting.ledgerAccountsUpdate(params)\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n  /accounting/tax-rates:\n    get:\n      description: List Tax Rates\n      operationId: taxRatesAll\n      parameters:\n        - $ref: \"#/components/parameters/raw\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/cursor\"\n        - $ref: \"#/components/parameters/limit\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetTaxRatesResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequired\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/Unprocessable\"\n        default:\n          $ref: \"#/components/responses/UnexpectedError\"\n      security:\n        - apiKey: []\n      summary: List Tax Rates\n      tags:\n        - Tax Rates\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.accounting.taxRatesAll({})\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n      x-graphql-field-name: taxRates\n    post:\n      description: Create Tax Rate\n      operationId: taxRatesAdd\n      parameters:\n        - $ref: \"#/components/parameters/raw\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n      requestBody:\n        description: A record of type `TaxRate` which contains details to create tax rate.\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TaxRate\"\n        required: true\n      responses:\n        \"201\":\n          $ref: \"#/components/responses/CreateTaxRateResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequired\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/Unprocessable\"\n        default:\n          $ref: \"#/components/responses/UnexpectedError\"\n      security:\n        - apiKey: []\n      summary: Create Tax Rate\n      tags:\n        - Tax Rates\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            const params = {\n              taxRate: {\n                name: '15% GST on Expenses',\n                code: 'ABN',\n                description: 'No ABN Withholding',\n                effective_tax_rate: 10,\n                total_tax_rate: 10,\n                components: [\n                  {\n                    name: 'City tax',\n                    rate: 10,\n                    compound: true\n                  }\n                ],\n                special_tax_type: 'NONE',\n                original_tax_rate_id: '12345',\n                active: true\n              }\n            }\n\n            try {\n              const { data } = await apideck.accounting.taxRatesAdd(params)\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n  \"/accounting/tax-rates/{id}\":\n    delete:\n      description: Delete Tax Rate\n      operationId: taxRatesDelete\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/raw\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/DeleteTaxRateResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequired\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/Unprocessable\"\n        default:\n          $ref: \"#/components/responses/UnexpectedError\"\n      security:\n        - apiKey: []\n      summary: Delete Tax Rate\n      tags:\n        - Tax Rates\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.accounting.taxRatesDelete({\n                id: 'id_example'\n              })\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n    get:\n      description: Get Tax Rate\n      operationId: taxRatesOne\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/raw\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetTaxRateResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequired\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/Unprocessable\"\n        default:\n          $ref: \"#/components/responses/UnexpectedError\"\n      security:\n        - apiKey: []\n      summary: Get Tax Rate\n      tags:\n        - Tax Rates\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.accounting.taxRatesOne({\n                id: 'id_example'\n              })\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n    patch:\n      description: Update Tax Rate\n      operationId: taxRatesUpdate\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/raw\"\n      requestBody:\n        description: A record of type `TaxRate` which contains details to update tax rate.\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TaxRate\"\n        required: true\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/UpdateTaxRateResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequired\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/Unprocessable\"\n        default:\n          $ref: \"#/components/responses/UnexpectedError\"\n      security:\n        - apiKey: []\n      summary: Update Tax Rate\n      tags:\n        - Tax Rates\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            const params = {\n              id: 'id_example',\n              taxRate: {\n                name: '15% GST on Expenses',\n                code: 'ABN',\n                description: 'No ABN Withholding',\n                effective_tax_rate: 10,\n                total_tax_rate: 10,\n                components: [\n                  {\n                    name: 'City tax',\n                    rate: 10,\n                    compound: true\n                  }\n                ],\n                special_tax_type: 'NONE',\n                original_tax_rate_id: '12345',\n                active: true\n              }\n            }\n\n            try {\n              const { data } = await apideck.accounting.taxRatesUpdate(params)\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\ncomponents:\n  parameters:\n    applicationId:\n      description: The ID of your Unify application\n      in: header\n      name: x-apideck-app-id\n      required: true\n      schema:\n        type: string\n    consumerId:\n      description: ID of the consumer which you want to get or push data from\n      in: header\n      name: x-apideck-consumer-id\n      required: true\n      schema:\n        type: string\n    cursor:\n      description: Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.\n      in: query\n      name: cursor\n      schema:\n        nullable: true\n        type: string\n    id:\n      description: ID of the record you are acting upon.\n      in: path\n      name: id\n      required: true\n      schema:\n        type: string\n    limit:\n      description: Number of records to return\n      in: query\n      name: limit\n      schema:\n        default: 20\n        maximum: 200\n        minimum: 1\n        type: integer\n    raw:\n      description: Include raw response. Mostly used for debugging purposes\n      in: query\n      name: raw\n      schema:\n        default: true\n        type: boolean\n    serviceId:\n      description: Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.\n      in: header\n      name: x-apideck-service-id\n      schema:\n        type: string\n  responses:\n    BadRequest:\n      content:\n        application/json:\n          schema:\n            properties:\n              detail:\n                anyOf:\n                  - example: Missing property foobar\n                    type: string\n                  - example:\n                      missing:\n                        - foobar: required\n                    type: object\n                description: Contains parameter or domain specific information related to the error and why it occured.\n              error:\n                description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n                example: Bad Request\n                type: string\n              message:\n                description: A human-readable message providing more details about the error.\n                example: Invalid Params\n                type: string\n              ref:\n                description: Link to documentation of error type\n                example: https://developers.apideck.com/errors#requestbodyvalidationerror\n                type: string\n              status_code:\n                description: HTTP status code\n                example: 400\n                type: number\n              type_name:\n                description: The type of error returned\n                example: RequestHeadersValidationError\n                type: string\n      description: Bad Request\n    CreateCompanyResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/CreateCompanyResponse\"\n      description: Companies\n    CreateContactResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/CreateContactResponse\"\n      description: Contacts\n    CreateInvoiceResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/CreateInvoiceResponse\"\n      description: Invoices\n    CreateLedgerAccountResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/CreateLedgerAccountResponse\"\n      description: LedgerAccounts\n    CreateTaxRateResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/CreateTaxRateResponse\"\n      description: TaxRates\n    DeleteCompanyResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/DeleteCompanyResponse\"\n      description: Companies\n    DeleteContactResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/DeleteContactResponse\"\n      description: Contacts\n    DeleteInvoiceResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/DeleteInvoiceResponse\"\n      description: Invoices\n    DeleteLedgerAccountResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/DeleteLedgerAccountResponse\"\n      description: LedgerAccounts\n    DeleteTaxRateResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/DeleteTaxRateResponse\"\n      description: TaxRates\n    GetCompaniesResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GetCompaniesResponse\"\n      description: Company\n    GetCompanyResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GetCompanyResponse\"\n      description: Companies\n    GetContactResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GetContactResponse\"\n      description: Contacts\n    GetContactsResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GetContactsResponse\"\n      description: Contacts\n    GetInvoiceResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GetInvoiceResponse\"\n      description: Invoices\n    GetInvoicesResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GetInvoicesResponse\"\n      description: Invoices\n    GetLedgerAccountResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GetLedgerAccountResponse\"\n      description: LedgerAccounts\n    GetLedgerAccountsResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GetLedgerAccountsResponse\"\n      description: LedgerAccounts\n    GetTaxRateResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GetTaxRateResponse\"\n      description: TaxRates\n    GetTaxRatesResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GetTaxRatesResponse\"\n      description: TaxRates\n    Invoice:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Invoice\"\n      description: Invoices\n    NotFound:\n      content:\n        application/json:\n          schema:\n            properties:\n              detail:\n                anyOf:\n                  - example: \"Could not find widget with id: '123'\"\n                    type: string\n                  - example:\n                      not_found:\n                        entity: widget\n                        id: \"123\"\n                    type: object\n                description: Contains parameter or domain specific information related to the error and why it occured.\n              error:\n                description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n                example: Not Found\n                type: string\n              message:\n                description: A human-readable message providing more details about the error.\n                example: Unknown Widget\n                type: string\n              ref:\n                description: Link to documentation of error type\n                example: https://developers.apideck.com/errors#entitynotfounderror\n                type: string\n              status_code:\n                description: HTTP status code\n                example: 404\n                type: number\n              type_name:\n                description: The type of error returned\n                example: EntityNotFoundError\n                type: string\n      description: The specified resource was not found\n    NotImplemented:\n      content:\n        application/json:\n          schema:\n            properties:\n              detail:\n                anyOf:\n                  - example: Failed to retrieve Widget tokenUrl from 'components.securitySchemes.oauth2.flows'\n                    type: string\n                  - type: object\n                description: Contains parameter or domain specific information related to the error and why it occured.\n              error:\n                description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n                example: Not Implemented\n                type: string\n              message:\n                description: A human-readable message providing more details about the error.\n                example: Unmapped Attribute\n                type: string\n              ref:\n                description: Link to documentation of error type\n                example: https://developers.apideck.com/errors#mappingerror\n                type: string\n              status_code:\n                description: HTTP status code\n                example: 501\n                type: number\n              type_name:\n                description: The type of error returned\n                example: MappingError\n                type: string\n      description: Not Implemented\n    PaymentRequired:\n      content:\n        application/json:\n          schema:\n            properties:\n              detail:\n                description: Contains parameter or domain specific information related to the error and why it occured.\n                example: You have reached your limit of 2000\n                type: string\n              error:\n                description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n                example: Payment Required\n                type: string\n              message:\n                description: A human-readable message providing more details about the error.\n                example: Request Limit Reached\n                type: string\n              ref:\n                description: Link to documentation of error type\n                example: https://developers.apideck.com/errors#requestlimiterror\n                type: string\n              status_code:\n                description: HTTP status code\n                example: 402\n                type: number\n              type_name:\n                description: The type of error returned\n                example: RequestLimitError\n                type: string\n      description: Payment Required\n    TaxRate:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/TaxRate\"\n      description: TaxRates\n    Unauthorized:\n      content:\n        application/json:\n          schema:\n            properties:\n              detail:\n                description: Contains parameter or domain specific information related to the error and why it occured.\n                example: Failed to generate valid JWT Session. Verify applicationId is correct\n                type: string\n              error:\n                description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n                example: Unauthorized\n                type: string\n              message:\n                description: A human-readable message providing more details about the error.\n                example: Unauthorized Request\n                type: string\n              ref:\n                description: Link to documentation of error type\n                example: https://developers.apideck.com/errors#unauthorizederror\n                type: string\n              status_code:\n                description: HTTP status code\n                example: 401\n                type: number\n              type_name:\n                description: The type of error returned\n                example: UnauthorizedError\n                type: string\n      description: Unauthorized\n    UnexpectedError:\n      content:\n        application/json:\n          schema:\n            properties:\n              detail:\n                anyOf:\n                  - example: \"Missing Header: x-apideck-consumer-id\"\n                    type: string\n                  - example:\n                      missing:\n                        - x-apideck-consumer-id: required\n                    type: object\n                description: Contains parameter or domain specific information related to the error and why it occured.\n              error:\n                description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n                example: Bad Request\n                type: string\n              message:\n                description: A human-readable message providing more details about the error.\n                example: Invalid Params\n                type: string\n              ref:\n                description: Link to documentation of error type\n                example: https://developers.apideck.com/errors#unauthorizederror\n                type: string\n              status_code:\n                description: HTTP status code\n                example: 400\n                type: number\n              type_name:\n                description: The type of error returned\n                example: RequestHeadersValidationError\n                type: string\n      description: Unexpected error\n    Unprocessable:\n      content:\n        application/json:\n          schema:\n            properties:\n              detail:\n                description: Contains parameter or domain specific information related to the error and why it occured.\n                example: State did not include unified_api\n                type: string\n              error:\n                description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n                example: Unprocessable Entity\n                type: string\n              message:\n                description: A human-readable message providing more details about the error.\n                example: Invalid State\n                type: string\n              ref:\n                description: Link to documentation of error type\n                example: https://developers.apideck.com/errors#invalidstateerror\n                type: string\n              status_code:\n                description: HTTP status code\n                example: 422\n                type: number\n              type_name:\n                description: The type of error returned\n                example: InvalidStateError\n                type: string\n      description: Unprocessable\n    UpdateCompanyResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/UpdateCompanyResponse\"\n      description: Companies\n    UpdateContactResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/UpdateContactResponse\"\n      description: Contacts\n    UpdateInvoiceResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/UpdateInvoiceResponse\"\n      description: Invoices\n    UpdateLedgerAccountResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/UpdateLedgerAccountResponse\"\n      description: LedgerAccounts\n    UpdateTaxRateResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/UpdateTaxRateResponse\"\n      description: TaxRates\n  schemas:\n    Address:\n      properties:\n        city:\n          description: Name of city.\n          example: San Francisco\n          nullable: true\n          type: string\n        country:\n          description: country code according to ISO 3166-1 alpha-2.\n          example: US\n          nullable: true\n          type: string\n        id:\n          example: \"123\"\n          nullable: true\n          type: string\n        latitude:\n          example: \"40.759211\"\n          nullable: true\n          type: string\n        line1:\n          description: \"Line 1 of the address e.g. number, street, suite, apt #, etc.\"\n          example: Main street\n          nullable: true\n          type: string\n        line2:\n          description: Line 2 of the address\n          example: \"apt #\"\n          nullable: true\n          type: string\n        longitude:\n          example: \"-73.984638\"\n          nullable: true\n          type: string\n        name:\n          example: HQ US\n          nullable: true\n          type: string\n        postal_code:\n          description: Zip code or equivalent.\n          example: \"94104\"\n          nullable: true\n          type: string\n        state:\n          description: Name of state\n          example: CA\n          nullable: true\n          type: string\n        string:\n          example: 25 Spring Street, Blackburn, VIC 3130\n          nullable: true\n          title: The address string. Some APIs don't provide structured address data.\n          type: string\n        type:\n          enum:\n            - primary\n            - secondary\n            - home\n            - office\n            - shipping\n            - billing\n            - other\n          example: primary\n          type: string\n          x-graphql-type-name: AddressType\n      type: object\n    BankAccount:\n      properties:\n        account_name:\n          description: The name which you used in opening your bank account.\n          example: SPACEX LLC\n          nullable: true\n          title: Bank Account Name\n          type: string\n        account_number:\n          description: A bank account number is a number that is tied to your bank account. If you have several bank accounts, such as personal, joint, business (and so on), each account will have a different account number.\n          example: \"123456789\"\n          nullable: true\n          title: Bank Account Number\n          type: string\n        bank_code:\n          description: A bank code is a code assigned by a central bank, a bank supervisory body or a Bankers Association in a country to all its licensed member banks or financial institutions.\n          example: BNH\n          nullable: true\n          title: Bank Code\n          type: string\n        bic:\n          example: AUDSCHGGXXX\n          nullable: true\n          type: string\n        bsb_number:\n          description: A BSB is a 6 digit numeric code used for identifying the branch of an Australian or New Zealand bank or financial institution.\n          example: 062-001\n          nullable: true\n          title: BSB Number\n          type: string\n        iban:\n          example: CH2989144532982975332\n          nullable: true\n          type: string\n      type: object\n    Company:\n      additionalProperties: false\n      properties:\n        abn_branch:\n          description: An ABN Branch (also known as a GST Branch) is used if part of your business needs to account for GST separately from its parent entity.\n          example: \"123\"\n          nullable: true\n          title: ABN Branch\n          type: string\n        abn_or_tfn:\n          description: An ABN is necessary for operating a business, while a TFN (Tax File Number) is required for any person working in Australia.\n          example: 46 115 614 695\n          nullable: true\n          title: ABN or TFN\n          type: string\n        acn:\n          description: The Australian Company Number (ACN) is a nine digit number with the last digit being a check digit calculated using a modified modulus 10 calculation. ASIC has adopted a convention of always printing and displaying the ACN in the format XXX XXX XXX; three blocks of three characters, each block separated by a blank.\n          example: XXX XXX XXX\n          nullable: true\n          title: ACN\n          type: string\n        addresses:\n          items:\n            $ref: \"#/components/schemas/Address\"\n          type: array\n        annual_revenue:\n          description: Annual revenue\n          example: +$35m\n          nullable: true\n          type: string\n        bank_accounts:\n          items:\n            $ref: \"#/components/schemas/BankAccount\"\n          type: array\n        created_at:\n          example: 2020-09-30T07:43:32.000Z\n          format: date-time\n          readOnly: true\n          type: string\n        created_by:\n          example: \"12345\"\n          nullable: true\n          readOnly: true\n          type: string\n        currency:\n          example: USD\n          nullable: true\n          type: string\n        custom_fields:\n          items:\n            $ref: \"#/components/schemas/CustomField\"\n          type: array\n        deleted:\n          example: false\n          readOnly: true\n          type: boolean\n        description:\n          example: Space Exploration Technologies Corp. is an American aerospace manufacturer, space transportation services and communications company headquartered in Hawthorne, California.\n          nullable: true\n          type: string\n        emails:\n          items:\n            $ref: \"#/components/schemas/Email\"\n          type: array\n        fax:\n          example: \"+12129876543\"\n          nullable: true\n          type: string\n        id:\n          example: \"12345\"\n          readOnly: true\n          type: string\n        image:\n          example: https://www.spacex.com/static/images/share.jpg\n          nullable: true\n          type: string\n        industry:\n          description: Industry\n          example: Apparel\n          nullable: true\n          type: string\n        interaction_count:\n          example: 1\n          nullable: true\n          readOnly: true\n          type: integer\n        last_activity_at:\n          example: 2020-09-30T07:43:32.000Z\n          format: date-time\n          nullable: true\n          readOnly: true\n          type: string\n        name:\n          example: SpaceX\n          minLength: 1\n          type: string\n        number_of_employees:\n          description: Number of employees\n          example: 500-1000\n          nullable: true\n          type: string\n        owner_id:\n          example: \"12345\"\n          type: string\n        ownership:\n          description: Ownership\n          example: Public\n          nullable: true\n          type: string\n        parent_id:\n          description: Parent ID\n          example: \"22345\"\n          readOnly: true\n          type: string\n        payee_number:\n          example: 78932EN\n          nullable: true\n          title: Payee number\n          type: string\n        phone_numbers:\n          items:\n            $ref: \"#/components/schemas/PhoneNumber\"\n          type: array\n        read_only:\n          example: false\n          nullable: true\n          title: Read-only\n          type: boolean\n        sales_tax_number:\n          example: 12456EN\n          nullable: true\n          title: Sales tax number\n          type: string\n        social_links:\n          items:\n            $ref: \"#/components/schemas/SocialLink\"\n          type: array\n        status:\n          example: Open\n          minLength: 1\n          nullable: true\n          type: string\n        tags:\n          $ref: \"#/components/schemas/Tags\"\n        updated_at:\n          example: 2020-09-30T07:43:32.000Z\n          format: date-time\n          readOnly: true\n          type: string\n        updated_by:\n          example: \"12345\"\n          nullable: true\n          readOnly: true\n          type: string\n        vat_number:\n          description: VAT number\n          example: BE0689615164\n          nullable: true\n          type: string\n        websites:\n          items:\n            $ref: \"#/components/schemas/Website\"\n          type: array\n      required:\n        - name\n      type: object\n    Contact:\n      additionalProperties: false\n      properties:\n        active:\n          example: true\n          nullable: true\n          type: boolean\n        addresses:\n          items:\n            $ref: \"#/components/schemas/Address\"\n          type: array\n        birthday:\n          example: 2000-08-12\n          nullable: true\n          type: string\n        company_id:\n          example: \"23456\"\n          nullable: true\n          type: string\n        company_name:\n          example: \"23456\"\n          nullable: true\n          type: string\n        created_at:\n          example: 2017-08-12T20:43:21.291Z\n          format: date-time\n          readOnly: true\n          type: string\n        current_balance:\n          example: 10.5\n          nullable: true\n          title: Current Balance\n          type: number\n        custom_fields:\n          items:\n            $ref: \"#/components/schemas/CustomField\"\n          type: array\n        department:\n          example: Engineering\n          nullable: true\n          type: string\n        description:\n          example: Internal champion\n          nullable: true\n          title: Description\n          type: string\n        emails:\n          items:\n            $ref: \"#/components/schemas/Email\"\n          type: array\n        fax:\n          example: \"+12129876543\"\n          nullable: true\n          type: string\n        first_call_at:\n          example: 2020-09-30T07:43:32.000Z\n          format: date-time\n          nullable: true\n          readOnly: true\n          type: string\n        first_email_at:\n          example: 2020-09-30T07:43:32.000Z\n          format: date-time\n          nullable: true\n          readOnly: true\n          type: string\n        first_name:\n          example: Elon\n          nullable: true\n          type: string\n        gender:\n          enum:\n            - male\n            - female\n            - unisex\n          example: female\n          nullable: true\n          type: string\n        id:\n          example: \"12345\"\n          readOnly: true\n          type: string\n        image:\n          example: https://unavatar.io/elon-musk\n          nullable: true\n          type: string\n        language:\n          description: language code according to ISO 639-1. For the United States - EN\n          example: EN\n          nullable: true\n          type: string\n        last_activity_at:\n          example: 2020-09-30T07:43:32.000Z\n          format: date-time\n          nullable: true\n          readOnly: true\n          type: string\n        last_name:\n          example: Musk\n          nullable: true\n          type: string\n        lead_id:\n          example: \"34567\"\n          nullable: true\n          type: string\n        lead_source:\n          example: Cold Call\n          minLength: 1\n          nullable: true\n          type: string\n        middle_name:\n          example: D.\n          nullable: true\n          type: string\n        name:\n          example: Elon Musk\n          minLength: 1\n          type: string\n        owner_id:\n          example: \"54321\"\n          nullable: true\n          type: string\n        phone_numbers:\n          items:\n            $ref: \"#/components/schemas/PhoneNumber\"\n          type: array\n        prefix:\n          example: Mr.\n          nullable: true\n          type: string\n        social_links:\n          items:\n            $ref: \"#/components/schemas/SocialLink\"\n          type: array\n        status:\n          example: open\n          nullable: true\n          type: string\n        suffix:\n          example: PhD\n          nullable: true\n          type: string\n        tags:\n          $ref: \"#/components/schemas/Tags\"\n        title:\n          example: CEO\n          nullable: true\n          type: string\n        type:\n          enum:\n            - customer\n            - supplier\n            - employee\n            - personal\n          example: personal\n          nullable: true\n          type: string\n        updated_at:\n          example: 2017-08-12T20:43:21.291Z\n          format: date-time\n          readOnly: true\n          type: string\n        websites:\n          items:\n            $ref: \"#/components/schemas/Website\"\n          type: array\n      required:\n        - name\n      x-pii:\n        - name\n        - first_name\n        - middle_name\n        - last_name\n        - email\n    CreateCompanyResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/UnifiedId\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: Companies\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: zoho-crm\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n    CreateContactResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/UnifiedId\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: Contacts\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: zoho-crm\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n    CreateInvoiceResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/UnifiedId\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: Invoices\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: zoho-crm\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n    CreateLedgerAccountResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/UnifiedId\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: LedgerAccounts\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: zoho-crm\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n    CreateTaxRateResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/UnifiedId\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: TaxRates\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: zoho-crm\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n    CreatedAt:\n      example: 2020-09-30T07:43:32.000Z\n      format: date-time\n      readOnly: true\n      type: string\n    CreatedBy:\n      example: \"12345\"\n      nullable: true\n      readOnly: true\n      type: string\n    Currency:\n      description: Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).\n      enum:\n        - UNKNOWN_CURRENCY\n        - AED\n        - AFN\n        - ALL\n        - AMD\n        - ANG\n        - AOA\n        - ARS\n        - AUD\n        - AWG\n        - AZN\n        - BAM\n        - BBD\n        - BDT\n        - BGN\n        - BHD\n        - BIF\n        - BMD\n        - BND\n        - BOB\n        - BOV\n        - BRL\n        - BSD\n        - BTN\n        - BWP\n        - BYR\n        - BZD\n        - CAD\n        - CDF\n        - CHE\n        - CHF\n        - CHW\n        - CLF\n        - CLP\n        - CNY\n        - COP\n        - COU\n        - CRC\n        - CUC\n        - CUP\n        - CVE\n        - CZK\n        - DJF\n        - DKK\n        - DOP\n        - DZD\n        - EGP\n        - ERN\n        - ETB\n        - EUR\n        - FJD\n        - FKP\n        - GBP\n        - GEL\n        - GHS\n        - GIP\n        - GMD\n        - GNF\n        - GTQ\n        - GYD\n        - HKD\n        - HNL\n        - HRK\n        - HTG\n        - HUF\n        - IDR\n        - ILS\n        - INR\n        - IQD\n        - IRR\n        - ISK\n        - JMD\n        - JOD\n        - JPY\n        - KES\n        - KGS\n        - KHR\n        - KMF\n        - KPW\n        - KRW\n        - KWD\n        - KYD\n        - KZT\n        - LAK\n        - LBP\n        - LKR\n        - LRD\n        - LSL\n        - LTL\n        - LVL\n        - LYD\n        - MAD\n        - MDL\n        - MGA\n        - MKD\n        - MMK\n        - MNT\n        - MOP\n        - MRO\n        - MUR\n        - MVR\n        - MWK\n        - MXN\n        - MXV\n        - MYR\n        - MZN\n        - NAD\n        - NGN\n        - NIO\n        - NOK\n        - NPR\n        - NZD\n        - OMR\n        - PAB\n        - PEN\n        - PGK\n        - PHP\n        - PKR\n        - PLN\n        - PYG\n        - QAR\n        - RON\n        - RSD\n        - RUB\n        - RWF\n        - SAR\n        - SBD\n        - SCR\n        - SDG\n        - SEK\n        - SGD\n        - SHP\n        - SLL\n        - SOS\n        - SRD\n        - SSP\n        - STD\n        - SVC\n        - SYP\n        - SZL\n        - THB\n        - TJS\n        - TMT\n        - TND\n        - TOP\n        - TRY\n        - TTD\n        - TWD\n        - TZS\n        - UAH\n        - UGX\n        - USD\n        - USN\n        - USS\n        - UYI\n        - UYU\n        - UZS\n        - VEF\n        - VND\n        - VUV\n        - WST\n        - XAF\n        - XAG\n        - XAU\n        - XBA\n        - XBB\n        - XBC\n        - XBD\n        - XCD\n        - XDR\n        - XOF\n        - XPD\n        - XPF\n        - XPT\n        - XTS\n        - XXX\n        - YER\n        - ZAR\n        - ZMK\n        - ZMW\n        - BTC\n      example: USD\n      nullable: true\n      title: Currency\n      type: string\n      x-enum-elements:\n        - description: Unknown currency\n          name: UNKNOWN_CURRENCY\n        - description: United Arab Emirates dirham\n          name: AED\n        - description: Afghan afghani\n          name: AFN\n        - description: Albanian lek\n          name: ALL\n        - description: Armenian dram\n          name: AMD\n        - description: Netherlands Antillean guilder\n          name: ANG\n        - description: Angolan kwanza\n          name: AOA\n        - description: Argentine peso\n          name: ARS\n        - description: Australian dollar\n          name: AUD\n        - description: Aruban florin\n          name: AWG\n        - description: Azerbaijani manat\n          name: AZN\n        - description: Bosnia and Herzegovina convertible mark\n          name: BAM\n        - description: Barbados dollar\n          name: BBD\n        - description: Bangladeshi taka\n          name: BDT\n        - description: Bulgarian lev\n          name: BGN\n        - description: Bahraini dinar\n          name: BHD\n        - description: Burundian franc\n          name: BIF\n        - description: Bermudian dollar\n          name: BMD\n        - description: Brunei dollar\n          name: BND\n        - description: Boliviano\n          name: BOB\n        - description: Bolivian Mvdol\n          name: BOV\n        - description: Brazilian real\n          name: BRL\n        - description: Bahamian dollar\n          name: BSD\n        - description: Bhutanese ngultrum\n          name: BTN\n        - description: Botswana pula\n          name: BWP\n        - description: Belarusian ruble\n          name: BYR\n        - description: Belize dollar\n          name: BZD\n        - description: Canadian dollar\n          name: CAD\n        - description: Congolese franc\n          name: CDF\n        - description: WIR Euro\n          name: CHE\n        - description: Swiss franc\n          name: CHF\n        - description: WIR Franc\n          name: CHW\n        - description: Unidad de Fomento\n          name: CLF\n        - description: Chilean peso\n          name: CLP\n        - description: Chinese yuan\n          name: CNY\n        - description: Colombian peso\n          name: COP\n        - description: Unidad de Valor Real\n          name: COU\n        - description: Costa Rican colon\n          name: CRC\n        - description: Cuban convertible peso\n          name: CUC\n        - description: Cuban peso\n          name: CUP\n        - description: Cape Verdean escudo\n          name: CVE\n        - description: Czech koruna\n          name: CZK\n        - description: Djiboutian franc\n          name: DJF\n        - description: Danish krone\n          name: DKK\n        - description: Dominican peso\n          name: DOP\n        - description: Algerian dinar\n          name: DZD\n        - description: Egyptian pound\n          name: EGP\n        - description: Eritrean nakfa\n          name: ERN\n        - description: Ethiopian birr\n          name: ETB\n        - description: Euro\n          name: EUR\n        - description: Fiji dollar\n          name: FJD\n        - description: Falkland Islands pound\n          name: FKP\n        - description: Pound sterling\n          name: GBP\n        - description: Georgian lari\n          name: GEL\n        - description: Ghanaian cedi\n          name: GHS\n        - description: Gibraltar pound\n          name: GIP\n        - description: Gambian dalasi\n          name: GMD\n        - description: Guinean franc\n          name: GNF\n        - description: Guatemalan quetzal\n          name: GTQ\n        - description: Guyanese dollar\n          name: GYD\n        - description: Hong Kong dollar\n          name: HKD\n        - description: Honduran lempira\n          name: HNL\n        - description: Croatian kuna\n          name: HRK\n        - description: Haitian gourde\n          name: HTG\n        - description: Hungarian forint\n          name: HUF\n        - description: Indonesian rupiah\n          name: IDR\n        - description: Israeli new shekel\n          name: ILS\n        - description: Indian rupee\n          name: INR\n        - description: Iraqi dinar\n          name: IQD\n        - description: Iranian rial\n          name: IRR\n        - description: Icelandic króna\n          name: ISK\n        - description: Jamaican dollar\n          name: JMD\n        - description: Jordanian dinar\n          name: JOD\n        - description: Japanese yen\n          name: JPY\n        - description: Kenyan shilling\n          name: KES\n        - description: Kyrgyzstani som\n          name: KGS\n        - description: Cambodian riel\n          name: KHR\n        - description: Comoro franc\n          name: KMF\n        - description: North Korean won\n          name: KPW\n        - description: South Korean won\n          name: KRW\n        - description: Kuwaiti dinar\n          name: KWD\n        - description: Cayman Islands dollar\n          name: KYD\n        - description: Kazakhstani tenge\n          name: KZT\n        - description: Lao kip\n          name: LAK\n        - description: Lebanese pound\n          name: LBP\n        - description: Sri Lankan rupee\n          name: LKR\n        - description: Liberian dollar\n          name: LRD\n        - description: Lesotho loti\n          name: LSL\n        - description: Lithuanian litas\n          name: LTL\n        - description: Latvian lats\n          name: LVL\n        - description: Libyan dinar\n          name: LYD\n        - description: Moroccan dirham\n          name: MAD\n        - description: Moldovan leu\n          name: MDL\n        - description: Malagasy ariary\n          name: MGA\n        - description: Macedonian denar\n          name: MKD\n        - description: Myanmar kyat\n          name: MMK\n        - description: Mongolian tögrög\n          name: MNT\n        - description: Macanese pataca\n          name: MOP\n        - description: Mauritanian ouguiya\n          name: MRO\n        - description: Mauritian rupee\n          name: MUR\n        - description: Maldivian rufiyaa\n          name: MVR\n        - description: Malawian kwacha\n          name: MWK\n        - description: Mexican peso\n          name: MXN\n        - description: Mexican Unidad de Inversion\n          name: MXV\n        - description: Malaysian ringgit\n          name: MYR\n        - description: Mozambican metical\n          name: MZN\n        - description: Namibian dollar\n          name: NAD\n        - description: Nigerian naira\n          name: NGN\n        - description: Nicaraguan córdoba\n          name: NIO\n        - description: Norwegian krone\n          name: NOK\n        - description: Nepalese rupee\n          name: NPR\n        - description: New Zealand dollar\n          name: NZD\n        - description: Omani rial\n          name: OMR\n        - description: Panamanian balboa\n          name: PAB\n        - description: Peruvian sol\n          name: PEN\n        - description: Papua New Guinean kina\n          name: PGK\n        - description: Philippine peso\n          name: PHP\n        - description: Pakistani rupee\n          name: PKR\n        - description: Polish złoty\n          name: PLN\n        - description: Paraguayan guaraní\n          name: PYG\n        - description: Qatari riyal\n          name: QAR\n        - description: Romanian leu\n          name: RON\n        - description: Serbian dinar\n          name: RSD\n        - description: Russian ruble\n          name: RUB\n        - description: Rwandan franc\n          name: RWF\n        - description: Saudi riyal\n          name: SAR\n        - description: Solomon Islands dollar\n          name: SBD\n        - description: Seychelles rupee\n          name: SCR\n        - description: Sudanese pound\n          name: SDG\n        - description: Swedish krona\n          name: SEK\n        - description: Singapore dollar\n          name: SGD\n        - description: Saint Helena pound\n          name: SHP\n        - description: Sierra Leonean leone\n          name: SLL\n        - description: Somali shilling\n          name: SOS\n        - description: Surinamese dollar\n          name: SRD\n        - description: South Sudanese pound\n          name: SSP\n        - description: São Tomé and Príncipe dobra\n          name: STD\n        - description: Salvadoran colón\n          name: SVC\n        - description: Syrian pound\n          name: SYP\n        - description: Swazi lilangeni\n          name: SZL\n        - description: Thai baht\n          name: THB\n        - description: Tajikstani somoni\n          name: TJS\n        - description: Turkmenistan manat\n          name: TMT\n        - description: Tunisian dinar\n          name: TND\n        - description: Tongan pa'anga\n          name: TOP\n        - description: Turkish lira\n          name: TRY\n        - description: Trinidad and Tobago dollar\n          name: TTD\n        - description: New Taiwan dollar\n          name: TWD\n        - description: Tanzanian shilling\n          name: TZS\n        - description: Ukrainian hryvnia\n          name: UAH\n        - description: Ugandan shilling\n          name: UGX\n        - description: United States dollar\n          name: USD\n        - description: United States dollar (next day)\n          name: USN\n        - description: United States dollar (same day)\n          name: USS\n        - description: Uruguay Peso en Unidedades Indexadas\n          name: UYI\n        - description: Uruguyan peso\n          name: UYU\n        - description: Uzbekistan som\n          name: UZS\n        - description: Venezuelan bolívar soberano\n          name: VEF\n        - description: Vietnamese đồng\n          name: VND\n        - description: Vanuatu vatu\n          name: VUV\n        - description: Samoan tala\n          name: WST\n        - description: CFA franc BEAC\n          name: XAF\n        - description: Silver\n          name: XAG\n        - description: Gold\n          name: XAU\n        - description: European Composite Unit\n          name: XBA\n        - description: European Monetary Unit\n          name: XBB\n        - description: European Unit of Account 9\n          name: XBC\n        - description: European Unit of Account 17\n          name: XBD\n        - description: East Caribbean dollar\n          name: XCD\n        - description: Special drawing rights (International Monetary Fund)\n          name: XDR\n        - description: CFA franc BCEAO\n          name: XOF\n        - description: Palladium\n          name: XPD\n        - description: CFP franc\n          name: XPF\n        - description: Platinum\n          name: XPT\n        - description: Code reserved for testing\n          name: XTS\n        - description: No currency\n          name: XXX\n        - description: Yemeni rial\n          name: YER\n        - description: South African rand\n          name: ZAR\n        - description: Zambian kwacha\n          name: ZMK\n        - description: Zambian kwacha\n          name: ZMW\n        - description: Bitcoin\n          name: BTC\n    CustomField:\n      additionalProperties: false\n      properties:\n        id:\n          example: custom_technologies\n          type: string\n        value:\n          anyOf:\n            - example: Uses Salesforce and Marketo\n              nullable: true\n              type: string\n            - example: 10\n              nullable: true\n              type: number\n            - example: true\n              nullable: true\n              type: boolean\n            - items:\n                type: string\n              type: array\n      required:\n        - id\n      type: object\n    DeleteCompanyResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/UnifiedId\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: Companies\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: zoho-crm\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n    DeleteContactResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/UnifiedId\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: Contacts\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: zoho-crm\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n    DeleteInvoiceResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/UnifiedId\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: Invoices\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: zoho-crm\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n    DeleteLedgerAccountResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/UnifiedId\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: LedgerAccounts\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: zoho-crm\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n    DeleteTaxRateResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/UnifiedId\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: TaxRates\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: zoho-crm\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n    Email:\n      properties:\n        email:\n          example: elon@musk.com\n          format: email\n          minLength: 1\n          type: string\n        id:\n          example: \"123\"\n          type: string\n        type:\n          enum:\n            - primary\n            - secondary\n            - work\n            - personal\n            - billing\n            - other\n          example: primary\n          type: string\n          x-graphql-type-name: EmailType\n      required:\n        - email\n      type: object\n    GetCompaniesResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/Company\"\n          type: array\n        links:\n          $ref: \"#/components/schemas/Links\"\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: Companies\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: zoho-crm\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n      x-graphql-type-name: CompanyList\n    GetCompanyResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/Company\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: Companies\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: zoho-crm\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n      x-graphql-type-name: Company\n    GetContactResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/Contact\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: Contacts\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: zoho-crm\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n      x-graphql-type-name: Contact\n    GetContactsResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/Contact\"\n          type: array\n        links:\n          $ref: \"#/components/schemas/Links\"\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: Contacts\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: zoho-crm\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n      x-graphql-type-name: ContactList\n    GetInvoiceResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/Invoice\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: Invoices\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: zoho-crm\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n      x-graphql-type-name: Invoice\n    GetInvoicesResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/Invoice\"\n          type: array\n        links:\n          $ref: \"#/components/schemas/Links\"\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: Invoices\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: zoho-crm\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n      x-graphql-type-name: InvoiceList\n    GetLedgerAccountResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/LedgerAccount\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: LedgerAccounts\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: zoho-crm\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n      x-graphql-type-name: LedgerAccount\n    GetLedgerAccountsResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/LedgerAccount\"\n          type: array\n        links:\n          $ref: \"#/components/schemas/Links\"\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: LedgerAccounts\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: zoho-crm\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n      x-graphql-type-name: LedgerAccountList\n    GetTaxRateResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/TaxRate\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: TaxRates\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: zoho-crm\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n      x-graphql-type-name: TaxRate\n    GetTaxRatesResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/TaxRate\"\n          type: array\n        links:\n          $ref: \"#/components/schemas/Links\"\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: TaxRates\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: zoho-crm\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n      x-graphql-type-name: TaxRateList\n    Id:\n      example: \"12345\"\n      description: The unique Id.\n      readOnly: true\n      type: string\n    Invoice:\n      additionalProperties: false\n      properties:\n        balance:\n          example: 26500\n          nullable: true\n          title: Balance\n          type: number\n        billing_address:\n          $ref: \"#/components/schemas/Address\"\n        created_at:\n          $ref: \"#/components/schemas/CreatedAt\"\n        created_by:\n          $ref: \"#/components/schemas/CreatedBy\"\n        currency:\n          $ref: \"#/components/schemas/Currency\"\n        customer:\n          description: The customer this invoice is linked to.\n          nullable: true\n          properties:\n            company_name:\n              description: The company name.\n              example: The boring company\n              minLength: 1\n              nullable: true\n              type: string\n            id:\n              $ref: \"#/components/schemas/Id\"\n          title: Customer\n          type: object\n        customer_memo:\n          example: Thank you for your business and have a great day!\n          nullable: true\n          title: Customer memo\n          type: string\n        date:\n          description: Date invoice was issued - YYYY-MM-DD\n          example: 2020-09-30\n          format: date\n          title: Invoice date\n          type: string\n        deposit:\n          example: 2000\n          nullable: true\n          title: Deposit\n          type: number\n        due_date:\n          description: The invoice due date is the date on which a payment or invoice is scheduled to be received by the seller - YYYY-MM-DD\n          example: 2020-10-30\n          format: date\n          title: Due date\n          type: string\n        id:\n          $ref: \"#/components/schemas/Id\"\n        line_items:\n          items:\n            additionalProperties: false\n            properties:\n              description:\n                example: Rock Fountain\n                nullable: true\n                title: Description\n                type: string\n              discount_percentage:\n                example: 15\n                nullable: true\n                title: Amount\n                type: integer\n              general_ledger_account:\n                properties:\n                  id:\n                    $ref: \"#/components/schemas/Id\"\n                  name:\n                    example: Bank account\n                    minLength: 1\n                    nullable: true\n                    title: Account Name\n                    type: string\n              id:\n                $ref: \"#/components/schemas/Id\"\n              item_id:\n                description: ID of the linked item\n                example: 12344\n                nullable: true\n                title: Item ID\n                type: integer\n              line_number:\n                example: 1\n                nullable: true\n                title: Line number\n                type: integer\n              quantity:\n                example: 2\n                nullable: true\n                title: Quantity\n                type: integer\n              tax_amount:\n                example: 27500\n                nullable: true\n                title: Tax amount\n                type: integer\n              tax_rate:\n                properties:\n                  code:\n                    example: ABN\n                    minLength: 1\n                    nullable: true\n                    title: Tax code\n                    type: string\n                  id:\n                    $ref: \"#/components/schemas/Id\"\n                  name:\n                    example: 15% GST on Expenses\n                    minLength: 1\n                    nullable: true\n                    type: string\n              total_amount:\n                example: 27500\n                nullable: true\n                title: Total amount\n                type: integer\n              type:\n                example: Transaction\n                nullable: true\n                title: Type\n                type: string\n              unit_price:\n                example: 27500\n                nullable: true\n                title: Unit price\n                type: integer\n            type: object\n          type: array\n        number:\n          example: OIT00546\n          nullable: true\n          title: Invoice number\n          type: string\n        po_number:\n          description: A PO Number uniquely identifies a purchase order and is generally defined by the buyer. The buyer will match the PO number in the invoice to the Purchase Order.\n          example: \"90000117\"\n          nullable: true\n          title: Purchase Order number\n          type: string\n        shipping_address:\n          $ref: \"#/components/schemas/Address\"\n        status:\n          description: Invoice status\n          enum:\n            - draft\n            - submitted\n            - partially_paid\n            - paid\n            - void\n          example: paid\n          nullable: true\n          title: Status\n          type: string\n        sub_total:\n          example: 27500\n          nullable: true\n          title: Sub-total amount\n          type: number\n        total:\n          example: 28500\n          nullable: true\n          title: Total amount\n          type: number\n        total_tax:\n          example: 1000\n          nullable: true\n          title: Total tax amount\n          type: number\n        type:\n          description: \"\"\n          example: Service\n          nullable: true\n          title: Invoice type\n          type: string\n        updated_at:\n          $ref: \"#/components/schemas/UpdatedAt\"\n        updated_by:\n          $ref: \"#/components/schemas/UpdatedBy\"\n      type: object\n    Lead:\n      additionalProperties: false\n      properties:\n        addresses:\n          items:\n            $ref: \"#/components/schemas/Address\"\n          type: array\n        company_id:\n          example: \"2\"\n          nullable: true\n          type: string\n        company_name:\n          example: Spacex\n          nullable: true\n          type: string\n        contact_id:\n          example: \"2\"\n          nullable: true\n          type: string\n        created_at:\n          example: 2020-09-30T07:43:32.000Z\n          readOnly: true\n          type: string\n        currency:\n          example: USD\n          nullable: true\n          type: string\n        custom_fields:\n          items:\n            $ref: \"#/components/schemas/CustomField\"\n          type: array\n        description:\n          example: A thinker\n          nullable: true\n          type: string\n        emails:\n          items:\n            $ref: \"#/components/schemas/Email\"\n          type: array\n        fax:\n          example: \"+12129876543\"\n          nullable: true\n          type: string\n        first_name:\n          example: Elon\n          nullable: true\n          type: string\n        id:\n          example: \"12345\"\n          readOnly: true\n          type: string\n        language:\n          description: language code according to ISO 639-1. For the United States - EN\n          example: EN\n          nullable: true\n          type: string\n        last_name:\n          example: Musk\n          nullable: true\n          type: string\n        lead_source:\n          example: Cold Call\n          nullable: true\n          type: string\n        monetary_amount:\n          example: 75000\n          nullable: true\n          type: number\n        name:\n          example: Elon Musk\n          minLength: 1\n          type: string\n        owner_id:\n          example: \"54321\"\n          type: string\n        phone_numbers:\n          items:\n            $ref: \"#/components/schemas/PhoneNumber\"\n          type: array\n        prefix:\n          example: Sir\n          nullable: true\n          type: string\n        social_links:\n          items:\n            $ref: \"#/components/schemas/SocialLink\"\n          type: array\n        status:\n          example: New\n          nullable: true\n          type: string\n        tags:\n          $ref: \"#/components/schemas/Tags\"\n        title:\n          example: CEO\n          nullable: true\n          type: string\n        updated_at:\n          example: 2020-09-30T07:43:32.000Z\n          readOnly: true\n          type: string\n        websites:\n          items:\n            $ref: \"#/components/schemas/Website\"\n          type: array\n      required:\n        - name\n        - company_name\n      x-pii:\n        - name\n        - email\n        - first_name\n        - last_name\n    LedgerAccount:\n      additionalProperties: false\n      properties:\n        active:\n          example: true\n          nullable: true\n          type: boolean\n        bank_account:\n          $ref: \"#/components/schemas/BankAccount\"\n        classification:\n          enum:\n            - asset\n            - equity\n            - expense\n            - liability\n            - revenue\n            - income\n            - other_income\n            - other_expense\n            - costs_of_sales\n          example: asset\n          nullable: true\n          type: string\n        created_at:\n          $ref: \"#/components/schemas/CreatedAt\"\n        created_by:\n          $ref: \"#/components/schemas/CreatedBy\"\n        currency:\n          $ref: \"#/components/schemas/Currency\"\n        current_balance:\n          description: The current balance. A positive integer representing the smallest currency unit (e.g., 20000 cents equals $200.00 or 20000 equals ¥20000, a zero-decimal currency)\n          example: 20000\n          nullable: true\n          type: number\n        description:\n          example: The main checking account\n          minLength: 1\n          nullable: true\n          type: string\n        display_id:\n          example: 1-12345\n          readOnly: true\n          type: string\n        fully_qualified_name:\n          example: Asset.Bank.Checking_Account\n          nullable: true\n          type: string\n        id:\n          $ref: \"#/components/schemas/Id\"\n        last_reconciliation_date:\n          description: Reconciliation Date means the last calendar day of each Reconciliation Period.\n          example: 2020-09-30\n          format: date\n          readOnly: true\n          title: Last Reconciliation Date\n          type: string\n        level:\n          example: \"2\"\n          nullable: true\n          type: string\n        name:\n          example: Bank account\n          nullable: true\n          type: string\n        nominal_code:\n          example: 91\n          nullable: true\n          type: string\n        opening_balance:\n          description: The opening balance. A positive integer representing the smallest currency unit (e.g., 100 cents equals $1.00 or 100 equals ¥100, a zero-decimal currency)\n          example: 75000\n          nullable: true\n          type: number\n        parent_account:\n          properties:\n            display_id:\n              example: 1-1100\n              title: Display ID\n              type: string\n            id:\n              example: \"12345\"\n              type: string\n            name:\n              example: Bank Accounts\n              title: Name\n              type: string\n          readOnly: true\n          type: object\n        sub_account:\n          example: true\n          nullable: true\n          type: boolean\n        sub_accounts:\n          items:\n            properties:\n              account_sub_name:\n                example: Petty Cash\n                readOnly: true\n                title: Account Sub Name\n                type: string\n              id:\n                example: \"12345\"\n                readOnly: true\n                type: string\n          readOnly: true\n          type: array\n        sub_type:\n          example: CHECKING_ACCOUNT\n          nullable: true\n          type: string\n        tax_code:\n          example: N-T\n          nullable: true\n          type: string\n        tax_type:\n          example: USD\n          nullable: true\n          type: string\n        type:\n          enum:\n            - accounts_receivable\n            - bank\n            - current_asset\n            - non_current_asset\n            - other_asset\n            - equity\n            - expense\n            - other_expense\n            - costs_of_sales\n            - accounts_payable\n            - credit_card\n            - current_liability\n            - non_current_liability\n            - other_liability\n          example: bank\n          nullable: true\n          type: string\n        updated_at:\n          $ref: \"#/components/schemas/UpdatedAt\"\n        updated_by:\n          $ref: \"#/components/schemas/UpdatedBy\"\n      type: object\n    Links:\n      description: Links to navigate to previous or next pages through the API\n      properties:\n        current:\n          description: Link to navigate to the current page through the API\n          example: https://unify.apideck.com/crm/companies\n          type: string\n        next:\n          description: Link to navigate to the previous page through the API\n          example: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\n          nullable: true\n          type: string\n        previous:\n          description: Link to navigate to the previous page through the API\n          example: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\n          nullable: true\n          type: string\n      type: object\n    Meta:\n      description: Reponse metadata\n      properties:\n        cursors:\n          description: Cursors to navigate to previous or next pages through the API\n          properties:\n            current:\n              description: Cursor to navigate to the current page of results through the API\n              example: em9oby1jcm06OnBhZ2U6OjI=\n              nullable: true\n              type: string\n            next:\n              description: Cursor to navigate to the next page of results through the API\n              example: em9oby1jcm06OnBhZ2U6OjM=\n              nullable: true\n              type: string\n            previous:\n              description: Cursor to navigate to the previous page of results through the API\n              example: em9oby1jcm06OnBhZ2U6OjE=\n              nullable: true\n              type: string\n          type: object\n        items_on_page:\n          description: Number of items returned in the data property of the response\n          example: 50\n          type: integer\n      type: object\n    Opportunity:\n      additionalProperties: false\n      properties:\n        close_date:\n          example: 2020-10-30\n          format: date\n          nullable: true\n          type: string\n        company_id:\n          example: \"12345\"\n          nullable: true\n          type: string\n        company_name:\n          example: Copper\n          nullable: true\n          type: string\n        contact_id:\n          example: \"12345\"\n          nullable: true\n          type: string\n        created_at:\n          example: 2020-09-30T07:43:32.000Z\n          format: date-time\n          readOnly: true\n          type: string\n        created_by:\n          example: \"12345\"\n          nullable: true\n          readOnly: true\n          type: string\n        currency:\n          example: USD\n          nullable: true\n          type: string\n        custom_fields:\n          items:\n            $ref: \"#/components/schemas/CustomField\"\n          type: array\n        date_last_contacted:\n          example: 2020-09-30T00:00:00.000Z\n          format: date-time\n          nullable: true\n          readOnly: true\n          type: string\n        date_lead_created:\n          example: 2020-09-30T00:00:00.000Z\n          format: date-time\n          nullable: true\n          readOnly: true\n          type: string\n        date_stage_changed:\n          example: 2020-09-30T00:00:00.000Z\n          format: date-time\n          nullable: true\n          readOnly: true\n          type: string\n        deleted:\n          example: false\n          readOnly: true\n          type: boolean\n        description:\n          example: Opportunities are created for People and Companies that are interested in buying your products or services. Create Opportunities for People and Companies to move them through one of your Pipelines.\n          minLength: 1\n          nullable: true\n          type: string\n        expected_revenue:\n          description: Expected Revenue\n          example: 75000\n          nullable: true\n          readOnly: true\n          type: number\n        id:\n          example: \"12345\"\n          readOnly: true\n          type: string\n        interaction_count:\n          example: 0\n          nullable: true\n          readOnly: true\n          type: number\n        last_activity_at:\n          example: 2020-09-30T07:43:32.000Z\n          nullable: true\n          readOnly: true\n          type: string\n        lead_id:\n          example: \"12345\"\n          nullable: true\n          type: string\n        lead_source:\n          description: Lead source\n          example: Website\n          nullable: true\n          type: string\n        loss_reason:\n          example: No budget\n          nullable: true\n          type: string\n        loss_reason_id:\n          example: \"12345\"\n          nullable: true\n          type: string\n        monetary_amount:\n          example: 75000\n          nullable: true\n          type: number\n        owner_id:\n          example: \"12345\"\n          nullable: true\n          type: string\n        pipeline_id:\n          example: \"12345\"\n          nullable: true\n          type: string\n        pipeline_stage_id:\n          example: \"12345\"\n          nullable: true\n          type: string\n        primary_contact_id:\n          example: \"12345\"\n          nullable: true\n          type: string\n        priority:\n          example: None\n          minLength: 1\n          nullable: true\n          type: string\n        source_id:\n          example: \"12345\"\n          nullable: true\n          type: string\n        stage_last_changed_at:\n          example: 2020-09-30T07:43:32.000Z\n          format: date-time\n          nullable: true\n          type: string\n        status:\n          example: Open\n          minLength: 1\n          nullable: true\n          type: string\n        status_id:\n          example: \"12345\"\n          nullable: true\n          type: string\n        tags:\n          $ref: \"#/components/schemas/Tags\"\n        title:\n          example: New Rocket\n          minLength: 1\n          type: string\n        type:\n          example: Existing Customer - Upgrade\n          minLength: 1\n          nullable: true\n          type: string\n        updated_at:\n          example: 2020-09-30T07:43:32.000Z\n          format: date-time\n          readOnly: true\n          type: string\n        updated_by:\n          example: \"12345\"\n          nullable: true\n          readOnly: true\n          type: string\n        win_probability:\n          example: 40\n          nullable: true\n          type: number\n        won_reason:\n          example: Best pitch\n          nullable: true\n          type: string\n        won_reason_id:\n          example: \"12345\"\n          nullable: true\n          type: string\n      required:\n        - title\n        - primary_contact_id\n      type: object\n    PhoneNumber:\n      properties:\n        id:\n          example: \"12345\"\n          nullable: true\n          type: string\n        number:\n          example: 111-111-1111\n          minLength: 1\n          type: string\n        type:\n          enum:\n            - primary\n            - secondary\n            - home\n            - office\n            - mobile\n            - assistant\n            - fax\n            - other\n          example: primary\n          type: string\n          x-graphql-type-name: PhoneType\n      required:\n        - number\n      type: object\n    Pipeline:\n      additionalProperties: false\n      properties:\n        archived:\n          example: false\n          type: boolean\n        created_at:\n          example: 2017-08-12T20:43:21.291Z\n          readOnly: true\n          type: string\n        currency:\n          example: USD\n          type: string\n        display_order:\n          example: 1\n          type: integer\n        id:\n          example: default\n          type: string\n        name:\n          example: Sales Pipeline\n          minLength: 1\n          type: string\n        stages:\n          items:\n            properties:\n              display_order:\n                example: 1\n                type: integer\n              id:\n                example: contractsent\n                readOnly: true\n                type: string\n              name:\n                example: Contract Sent\n                type: string\n              value:\n                example: CONTRACT_SENT\n                type: string\n            type: object\n          type: array\n        updated_at:\n          example: 2017-08-12T20:43:21.291Z\n          readOnly: true\n          type: string\n      required:\n        - name\n      x-pii: []\n    SocialLink:\n      properties:\n        id:\n          example: \"12345\"\n          nullable: true\n          type: string\n        type:\n          example: twitter\n          nullable: true\n          type: string\n        url:\n          example: https://www.twitter.com/apideck-io\n          minLength: 1\n          type: string\n      required:\n        - url\n      type: object\n    Tags:\n      example:\n        - New\n      items:\n        type: string\n      type: array\n    TaxRate:\n      additionalProperties: false\n      properties:\n        active:\n          example: true\n          nullable: true\n          title: Active\n          type: boolean\n        code:\n          example: ABN\n          minLength: 1\n          nullable: true\n          title: Tax code\n          type: string\n        components:\n          items:\n            properties:\n              compound:\n                example: true\n                nullable: true\n                title: Compound\n                type: boolean\n              name:\n                example: City tax\n                minLength: 1\n                type: string\n              rate:\n                example: 10\n                nullable: true\n                title: Tax rate\n                type: number\n          nullable: true\n          title: Tax components\n          type: array\n        created_at:\n          $ref: \"#/components/schemas/CreatedAt\"\n        created_by:\n          $ref: \"#/components/schemas/CreatedBy\"\n        description:\n          example: No ABN Withholding\n          nullable: true\n          title: Description\n          type: string\n        effective_tax_rate:\n          example: 10\n          nullable: true\n          title: Effective tax rate\n          type: number\n        id:\n          $ref: \"#/components/schemas/Id\"\n        name:\n          example: 15% GST on Expenses\n          minLength: 1\n          type: string\n        original_tax_rate_id:\n          description: ID of the original tax rate from which the new tax rate is derived. Helps to understand the relationship between corresponding tax rate entities.\n          example: \"12345\"\n          nullable: true\n          title: Original tax rate ID\n          type: string\n        special_tax_type:\n          description: Special tax type to handle zero rate taxes. Used with VAT registered Businesses who receive goods/services (acquisitions) from other EU countries, will need to calculate the VAT due, but not paid, on these acquisitions. The rate of VAT payable is the same that would have been paid if the goods had been supplied by a UK supplier.\n          example: NONE\n          nullable: true\n          title: Description\n          type: string\n        total_tax_rate:\n          description: Not compounded sum of the components of a tax rate\n          example: 10\n          nullable: true\n          title: Total tax rate\n          type: number\n        updated_at:\n          $ref: \"#/components/schemas/UpdatedAt\"\n        updated_by:\n          $ref: \"#/components/schemas/UpdatedBy\"\n      type: object\n    UnifiedId:\n      properties:\n        id:\n          example: \"12345\"\n          readOnly: true\n          type: string\n      required:\n        - id\n      title: UnifiedId\n    UpdateCompanyResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/UnifiedId\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: Companies\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: zoho-crm\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n    UpdateContactResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/UnifiedId\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: Contacts\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: zoho-crm\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n    UpdateInvoiceResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/UnifiedId\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: Invoices\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: zoho-crm\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n    UpdateLedgerAccountResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/UnifiedId\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: LedgerAccounts\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: zoho-crm\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n    UpdateTaxRateResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/UnifiedId\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: TaxRates\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: zoho-crm\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n    UpdatedAt:\n      example: 2020-09-30T07:43:32.000Z\n      format: date-time\n      readOnly: true\n      type: string\n    UpdatedBy:\n      example: \"12345\"\n      nullable: true\n      readOnly: true\n      type: string\n    User:\n      properties:\n        created_at:\n          example: 2017-08-12T20:43:21.291Z\n          readOnly: true\n          type: string\n        email:\n          example: elon@musk.com\n          format: email\n          minLength: 1\n          type: string\n        first_name:\n          example: Elon\n          nullable: true\n          type: string\n        id:\n          example: \"12345\"\n          readOnly: true\n          type: string\n        image:\n          example: https://logo.clearbit.com/spacex.com?s=128\n          nullable: true\n          type: string\n        language:\n          example: EN\n          nullable: true\n          type: string\n        last_name:\n          example: Musk\n          nullable: true\n          type: string\n        parent_id:\n          example: \"54321\"\n          nullable: true\n          type: string\n        password:\n          example: supersecretpassword\n          type: string\n          writeOnly: true\n        status:\n          example: active\n          nullable: true\n          type: string\n        updated_at:\n          example: 2017-08-12T20:43:21.291Z\n          readOnly: true\n          type: string\n        username:\n          example: masterofcoin\n          nullable: true\n          type: string\n      required:\n        - email\n      x-pii:\n        - username\n        - first_name\n        - last_name\n        - email\n    Website:\n      properties:\n        id:\n          example: \"12345\"\n          nullable: true\n          type: string\n        type:\n          enum:\n            - primary\n            - secondary\n            - work\n            - personal\n            - other\n          example: primary\n          type: string\n          x-graphql-type-name: WebsiteType\n        url:\n          example: http://example.com\n          minLength: 1\n          type: string\n      required:\n        - url\n      type: object\n  securitySchemes:\n    apiKey:\n      description: |\n        To use API you have to sign up and get your own API key. Unify API accounts have sandbox mode and live mode API keys. \n        To change modes just use the appropriate key to get a live or test object. You can find your API keys on the unify settings of your Apideck app.\n        Your Apideck application_id can also be found on the same page.\n\n        Authenticate your API requests by including your test or live secret API key in the request header. \n\n        - Bearer authorization header: `Authorization: Bearer \u003cyour-apideck-api-key\u003e`\n        - Application id header: `x-apideck-app-id: \u003cyour-apideck-app-id\u003e`\n\n        You should use the public keys on the SDKs and the secret keys to authenticate API requests.\n\n        **Do not share or include your secret API keys on client side code.** Your API keys carry significant privileges. Please ensure to keep them 100% secure and be sure to not share your secret API keys in areas that are publicly accessible like GitHub.\n\n        Learn how to set the Authorization header inside Postman https://learning.postman.com/docs/postman/sending-api-requests/authorization/#api-key\n\n        Go to Unify to grab your API KEY https://app.apideck.com/unify/api-keys\n      in: header\n      name: Authorization\n      x-ballerina-apikey-description: \"Provide your API key as `Authorization`. Eg: `{\\\"Authorization\\\" : \\\"\u003cAPI key\u003e\\\"}`\"\n      type: apiKey",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/apideck.accounting/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/apideck.accounting/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}