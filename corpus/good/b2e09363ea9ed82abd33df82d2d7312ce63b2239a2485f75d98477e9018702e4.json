{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/DistributedProofreaders/dproofreaders"
		},
		"file": {
			"name": "dp-openapi.yaml",
			"size": 0,
			"path": "api/dp-openapi.yaml",
			"byteSize": 27601,
			"content": "openapi: 3.0.1\ninfo:\n  title: Distributed Proofreaders API\n  description: An API to access various components in the DP system.\n  contact:\n    name: Distributed Proofreaders\n    url: https://www.pgdp.net\n  license:\n    name: GPL2\n    url: http://opensource.org/licenses/GPL-2.0\n  version: 1.0.0\n\nservers:\n- url: https://www.pgdp.net/api/v1\n  description: Production\n- url: https://www.pgdp.org/api/v1\n  description: Test\n- url: https://www.pgdp.org/api-dev/v1\n  description: Development\n\npaths:\n  /projects:\n    get:\n      tags:\n      - project\n      description: Search for projects.\n        \u003cbr\u003e\u003cbr\u003e\n        If different parameters are included they are ANDed together. To\n        send multiple values of the same parameter to OR together, append\n        the name with [] (e.g. projectid[]).\n        \u003cbr\u003e\u003cbr\u003e\n        Results are paginated with a default page size of 20 and can be\n        controlled with the `page` and `per_page` query parameters. See\n        also the `X-Results-Total` and `Links` headers in the response.\n      parameters:\n      - name: projectid\n        in: query\n        schema:\n          type: string\n      - name: title\n        in: query\n        schema:\n          type: string\n        description: Title is treated as a subsearch\n      - name: author\n        in: query\n        schema:\n          type: string\n        description: Author is treated as a subsearch\n      - name: languages\n        in: query\n        schema:\n          type: string\n        description: Languages is treated as a subsearch\n      - name: genre\n        in: query\n        schema:\n          type: string\n      - name: difficulty\n        in: query\n        schema:\n          type: string\n      - name: special_day\n        in: query\n        schema:\n          type: string\n      - name: project_manager\n        in: query\n        schema:\n          type: string\n      - name: pg_ebook_number\n        in: query\n        schema:\n          type: integer\n      - name: state\n        in: query\n        schema:\n          type: string\n      - name: field\n        description: Field to return, if not set all fields are returned.\n          To request multiple fields, append with [] and pass one per desired\n          field (e.g. field[]=projectid\u0026field[]=author).\n        in: query\n        schema:\n          type: string\n      - name: page\n        description: Page of results to return\n        in: query\n        schema:\n          type: integer\n      - name: per_page\n        description: Number of entries per page\n        in: query\n        schema:\n          type: integer\n      responses:\n        200:\n          description: List of projects found in search\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/project'\n          headers:\n            X-Results-Total:\n              schema:\n                type: integer\n              description: Total number of projects matching query\n            Links:\n              schema:\n                type: string\n              description: Links for accessing paginated response in RFC-8288 format\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '429':\n          $ref: '#/components/responses/RateLimitExceeded'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n    post:\n      tags:\n      - project\n      description: Create a new project.\n      requestBody:\n        description: Project details\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/project'\n      responses:\n        200:\n          description: Created project\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/project'\n        '400':\n          $ref: '#/components/responses/InvalidValue'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '429':\n          $ref: '#/components/responses/RateLimitExceeded'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n\n  /projects/charsuites:\n    get:\n      tags:\n      - project\n      description: Returns a list of valid project character suites\n      parameters:\n      - name: enabled\n        in: query\n        description: Only return enabled character suites\n        required: false\n        schema:\n          type: boolean\n      responses:\n        200:\n          description: List of valid character suites\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/charsuite'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '429':\n          $ref: '#/components/responses/RateLimitExceeded'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n\n  /projects/difficulties:\n    get:\n      tags:\n      - project\n      description: Returns a list of valid project difficulties\n      responses:\n        200:\n          description: List of difficulties\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '429':\n          $ref: '#/components/responses/RateLimitExceeded'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n\n  /projects/genres:\n    get:\n      tags:\n      - project\n      description: Returns a list of valid project genres\n      responses:\n        200:\n          description: List of genres\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '429':\n          $ref: '#/components/responses/RateLimitExceeded'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n\n  /projects/imagesources:\n    get:\n      tags:\n      - project\n      description: Returns a list of valid project image sources\n      parameters:\n      - name: enabled\n        in: query\n        description: Only return enabled image sources\n        required: false\n        schema:\n          type: boolean\n      responses:\n        200:\n          description: List of valid image sources\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/image_source'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '429':\n          $ref: '#/components/responses/RateLimitExceeded'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n\n  /projects/languages:\n    get:\n      tags:\n      - project\n      description: Returns a list of valid project languages\n      responses:\n        200:\n          description: List of languages\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '429':\n          $ref: '#/components/responses/RateLimitExceeded'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n\n  /projects/pagerounds:\n    get:\n      tags:\n      - project\n      description: Returns a list of valid page rounds\n      responses:\n        200:\n          description: List of page rounds\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '429':\n          $ref: '#/components/responses/RateLimitExceeded'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n\n  /projects/specialdays:\n    get:\n      tags:\n      - project\n      description: Returns a list of valid special days\n      parameters:\n      - name: enabled\n        in: query\n        description: Only return enabled special days\n        required: false\n        schema:\n          type: boolean\n      responses:\n        200:\n          description: List of special days\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/special_day'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '429':\n          $ref: '#/components/responses/RateLimitExceeded'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n\n  /projects/states:\n    get:\n      tags:\n      - project\n      description: Returns a list of valid project states\n      responses:\n        200:\n          description: List of states\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '429':\n          $ref: '#/components/responses/RateLimitExceeded'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n\n  /projects/holdstates:\n    get:\n      tags:\n      - project\n      description: Returns a list of holdable project states\n      responses:\n        200:\n          description: List of holdable states\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '429':\n          $ref: '#/components/responses/RateLimitExceeded'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n\n  /projects/{projectid}:\n    get:\n      tags:\n      - project\n      description: Returns details about a project\n      parameters:\n      - name: projectid\n        in: path\n        description: ID of project to return\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: project response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/project'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '429':\n          $ref: '#/components/responses/RateLimitExceeded'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n    put:\n      tags:\n      - project\n      description: Update an existing project. A partial object can be sent\n        and only those fields included will be updated.\n      parameters:\n      - name: projectid\n        in: path\n        description: ID of project to update\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Project details\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/project'\n      responses:\n        200:\n          description: Updated project\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/project'\n        '400':\n          $ref: '#/components/responses/InvalidValue'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '429':\n          $ref: '#/components/responses/RateLimitExceeded'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n\n  /projects/{projectid}/holdstates:\n    get:\n      tags:\n      - project\n      description: Returns a list of hold states for the project\n      parameters:\n      - name: projectid\n        in: path\n        description: ID of project\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: List of current project hold states\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '429':\n          $ref: '#/components/responses/RateLimitExceeded'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n    put:\n      tags:\n      - project\n      description: Sets the holdable states for a project\n      parameters:\n      - name: projectid\n        in: path\n        description: ID of project\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: List of holdable states to set\n        required: true\n        content:\n          application/json:\n            schema:\n              items:\n                type: string\n      responses:\n        200:\n          description: List of current project hold states\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n        '400':\n          $ref: '#/components/responses/InvalidValue'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '429':\n          $ref: '#/components/responses/RateLimitExceeded'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n\n  /projects/{projectid}/wordlists/{type}:\n    get:\n      tags:\n      - project\n      description: Gets a project's word list\n      parameters:\n      - name: projectid\n        in: path\n        description: ID of project\n        required: true\n        schema:\n          type: string\n      - name: type\n        in: path\n        description: Word list type\n        required: true\n        schema:\n          type: string\n          enum: [good, bad]\n      responses:\n        200:\n          description: Requested project word list\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/wordlist'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '429':\n          $ref: '#/components/responses/RateLimitExceeded'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n    put:\n      tags:\n      - project\n      description: Replaces a project's word list\n      parameters:\n      - name: projectid\n        in: path\n        description: ID of project\n        required: true\n        schema:\n          type: string\n      - name: type\n        in: path\n        description: Word list type\n        required: true\n        schema:\n          type: string\n          enum: [good, bad]\n      requestBody:\n        description: List of replacement words\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/wordlist'\n        required: true\n      responses:\n        200:\n          description: wordlist saved\n          content: {}\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '429':\n          $ref: '#/components/responses/RateLimitExceeded'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n\n  /projects/{projectid}/pages:\n    get:\n      tags:\n      - project\n      description: Gets a list of project pages\n      parameters:\n      - name: projectid\n        in: path\n        description: ID of project\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: List of a project's page names\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/project_page_index'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '429':\n          $ref: '#/components/responses/RateLimitExceeded'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n\n  /projects/{projectid}/pagedetails:\n    get:\n      tags:\n      - project\n      description: Gets all details about a project's pages\n      parameters:\n      - name: projectid\n        in: path\n        description: ID of project\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Page details\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/project_page_detail'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '429':\n          $ref: '#/components/responses/RateLimitExceeded'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n\n  /projects/{projectid}/pages/{pagename}/pagerounds/{pageroundid}:\n    get:\n      tags:\n      - project\n      description: Gets a project page text in a given pageround\n      parameters:\n      - name: projectid\n        in: path\n        description: ID of project\n        required: true\n        schema:\n          type: string\n      - name: pagename\n        in: path\n        description: Name of page\n        required: true\n        schema:\n          type: string\n      - name: pageroundid\n        in: path\n        description: Page round ID\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Project page information\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/project_page'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '429':\n          $ref: '#/components/responses/RateLimitExceeded'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n\n  /stats/site:\n    get:\n      tags:\n      - stats\n      description: Get site statistics\n      responses:\n        200:\n          description: Site statistics\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/site_stats'\n\n  /stats/site/rounds:\n    get:\n      tags:\n      - stats\n      description: Gets the site statistics for all rounds\n      responses:\n        200:\n          description: Requested round statistics\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties:\n                  $ref: '#/components/schemas/round_stats'\n\n  /stats/site/rounds/{roundid}:\n    get:\n      tags:\n      - stats\n      description: Gets the site statistics for a round\n      parameters:\n      - name: roundid\n        in: path\n        description: Round ID\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Requested round statistics\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/round_stats'\n\ncomponents:\n  securitySchemes:\n    ApiKeyAuth:\n      type: apiKey\n      in: header\n      name: X-API-KEY\n\n  schemas:\n    project:\n      required:\n      - projectid\n      - title\n      - author\n      - languages\n      - genre\n      - difficulty\n      - project_manager\n      - image_source\n      - character_suites\n      type: object\n      properties:\n        projectid:\n          type: string\n          readOnly: true\n        title:\n          type: string\n        author:\n          type: string\n        languages:\n          type: array\n          items:\n            type: string\n          minItems: 1\n          maxItems: 2\n        genre:\n          type: string\n        difficulty:\n          type: string\n        special_day:\n          type: string\n        project_manager:\n          type: string\n        post_processor:\n          type: string\n          readOnly: true\n        post_process_verifier:\n          type: string\n          readOnly: true\n        image_preparer:\n          type: string\n        text_preparer:\n          type: string\n        image_source:\n          type: string\n        pg_ebook_number:\n          type: integer\n          nullable: true\n        comments:\n          type: string\n        comment_format:\n          type: string\n          enum: [markdown, html]\n        clearance:\n          type: string\n        custom_characters:\n          type: string\n        character_suites:\n          type: array\n          items:\n            type: string\n          minItems: 1\n        state:\n          type: string\n          readOnly: true\n        pages_available:\n          type: integer\n          readOnly: true\n        pages_total:\n          type: integer\n          readOnly: true\n        last_state_change_time:\n          type: string\n          format: dateTime\n          readOnly: true\n        last_page_done_time:\n          type: string\n          format: dateTime\n          readOnly: true\n        last_edit_time:\n          type: string\n          format: dateTime\n          readOnly: true\n      description: A project represents a unique project object in the system. It\n        includes a great deal of information, some fields of which are calculated\n        and not directly modifiable. Not all fields are available to all users. Fields\n        the user does not have access to will not be returned.\n\n    project_page_index:\n      required:\n      - image\n      - image_url\n      - image_size\n      type: object\n      properties:\n        image:\n          type: string\n        image_url:\n          type: string\n          format: url\n        image_size:\n          type: integer\n          description: Image size in bytes\n\n    project_page_detail:\n      required:\n      - image\n      - image_url\n      - image_size\n      - state\n      type: object\n      properties:\n        image:\n          type: string\n        image_url:\n          type: string\n          format: url\n        image_size:\n          type: integer\n          description: Image size in bytes\n        state:\n          type: string\n        pagerounds:\n          type: array\n          items:\n            $ref: '#/components/schemas/project_page_round_detail'\n\n    project_page_round_detail:\n      type: object\n      required:\n      - page_round\n      - page_size\n      properties:\n        pageround:\n          type: string\n        page_size:\n          type: integer\n          description: Page size in bytes\n        is_diff:\n          type: boolean\n          description: Is there a diff between this and the prior round\n        user_page_tally:\n          type: integer\n          description: Number of pages proofer has proofed in this round\n        wordcheck_ran:\n          type: boolean\n          description: Was WordCheck run on the page\n        last_modified:\n          type: string\n          format: dateTime\n\n    project_page:\n      required:\n      - pagename\n      type: object\n      properties:\n        pagename:\n          type: string\n        image_url:\n          type: string\n        text:\n          type: string\n        state:\n          type: string\n\n    charsuite:\n      required:\n      - id\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        characters:\n          type: array\n          items:\n            type: string\n        enabled:\n          type: boolean\n\n    image_source:\n      required:\n      - id\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        name_full:\n          type: string\n        url:\n          type: string\n          format: url\n        credit:\n          type: string\n        enabled:\n          type: boolean\n\n    site_stats:\n      type: object\n      properties:\n        server_time:\n          type: string\n          format: dateTime\n          readOnly: true\n        registered_users:\n          type: integer\n          readOnly: true\n        active_users_1_day:\n          type: integer\n          readOnly: true\n        active_users_7_day:\n          type: integer\n          readOnly: true\n        active_users_30_day:\n          type: integer\n          readOnly: true\n      description: Statistics for the site\n\n    special_day:\n      type: object\n      required:\n      - id\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        comment:\n          type: string\n        url:\n          type: string\n          format: url\n        color:\n          type: string\n        symbol:\n          type: string\n        date_open_month:\n          type: integer\n          description: Month the special day opens\n        date_open_day:\n          type: integer\n          description: Day of the month the special day opens\n        date_close_month:\n          type: integer\n          description: Month the special day closes\n        date_close_day:\n          type: integer\n          description: Day of the month the special day closes\n        enabled:\n          type: boolean\n\n    round_stats:\n      type: object\n      properties:\n        today_goal:\n          type: integer\n          readOnly: true\n        today_actual:\n          type: integer\n          readOnly: true\n        yesterday_goal:\n          type: integer\n          readOnly: true\n        yesterday_actual:\n          type: integer\n          readOnly: true\n        month_goal:\n          type: integer\n          readOnly: true\n        month_actual:\n          type: integer\n          readOnly: true\n        positive_users:\n          type: integer\n          readOnly: true\n      description: Statistics for a round\n\n    wordlist:\n      type: array\n      items:\n        type: string\n\n    Error:\n      required:\n      - message\n      type: object\n      properties:\n        message:\n          type: string\n\n  responses:\n    NotFound:\n      description: The specified resource was not found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    Unauthorized:\n      description: Unauthorized\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    InvalidValue:\n      description: Invalid Value\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    UnexpectedError:\n      description: Unexpected Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    RateLimitExceeded:\n      description: Rate Limit Exceeded\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n\nsecurity:\n  - ApiKeyAuth: []\n",
			"canonicalURL": "/github.com/DistributedProofreaders/dproofreaders@154e0ee4b86c148971461c68a52d1df3004f77a7/-/blob/api/dp-openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/DistributedProofreaders/dproofreaders/blob/154e0ee4b86c148971461c68a52d1df3004f77a7/api/dp-openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}