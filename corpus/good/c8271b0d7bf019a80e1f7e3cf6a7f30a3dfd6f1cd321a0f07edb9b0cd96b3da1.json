{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql-provider-registry"
		},
		"file": {
			"name": "UserType.yaml",
			"size": 0,
			"path": "providers/src/okta/v0.1.0/services/UserType.yaml",
			"byteSize": 7198,
			"content": "components:\n  schemas:\n    UserType:\n      properties:\n        _links:\n          additionalProperties:\n            properties: {}\n            type: object\n          readOnly: true\n          type: object\n        created:\n          format: date-time\n          readOnly: true\n          type: string\n        createdBy:\n          readOnly: true\n          type: string\n        default:\n          readOnly: true\n          type: boolean\n        description:\n          type: string\n        displayName:\n          type: string\n        id:\n          type: string\n        lastUpdated:\n          format: date-time\n          readOnly: true\n          type: string\n        lastUpdatedBy:\n          readOnly: true\n          type: string\n        name:\n          type: string\n      type: object\n      x-okta-crud:\n      - alias: create\n        arguments:\n        - dest: userType\n          self: true\n        operationId: createUserType\n      - alias: update\n        arguments:\n        - dest: typeId\n          src: id\n        - dest: userType\n          self: true\n        operationId: updateUserType\n      - alias: read\n        arguments:\n        - dest: typeId\n          src: id\n        operationId: getUserType\n      - alias: delete\n        arguments:\n        - dest: typeId\n          src: id\n        operationId: deleteUserType\n      x-okta-operations:\n      - alias: replaceUserType\n        arguments:\n        - dest: roleId\n          src: id\n        operationId: replaceUserType\n      x-okta-tags:\n      - UserType\n  securitySchemes:\n    api_token:\n      description: SSWS {API Token}\n      in: header\n      name: Authorization\n      type: apiKey\n  x-stackQL-resources:\n    user:\n      id: okta.usertype.user\n      methods:\n        delete:\n          operation:\n            $ref: '#/paths/~1api~1v1~1meta~1types~1user~1{typeId}/DELETE'\n          response:\n            openAPIDocKey: '204'\n        get:\n          operation:\n            $ref: '#/paths/~1api~1v1~1meta~1types~1user~1{typeId}/GET'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        insert:\n          operation:\n            $ref: '#/paths/~1api~1v1~1meta~1types~1user/POST'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list:\n          operation:\n            $ref: '#/paths/~1api~1v1~1meta~1types~1user/GET'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        partialUpdate:\n          operation:\n            $ref: '#/paths/~1api~1v1~1meta~1types~1user~1{typeId}/POST'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        update:\n          operation:\n            $ref: '#/paths/~1api~1v1~1meta~1types~1user~1{typeId}/PUT'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      name: user\n      title: user\nexternalDocs:\n  description: Find more info here\n  url: https://developer.okta.com/docs/api/getting_started/design_principles.html\ninfo:\n  contact:\n    email: devex-public@okta.com\n    name: Okta Developer Team\n    url: https://developer.okta.com/\n  description: Allows customers to easily access the Okta API\n  license:\n    name: Apache-2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\n  termsOfService: https://developer.okta.com/terms/\n  title: Okta API\n  version: 2.8.0\nopenapi: 3.0.1\npaths:\n  /api/v1/meta/types/user:\n    get:\n      description: Fetches all User Types in your org\n      operationId: listUserTypes\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/UserType'\n                type: array\n          description: Success\n      security:\n      - api_token: []\n      tags:\n      - UserType\n    post:\n      description: Creates a new User Type. A default User Type is automatically created\n        along with your org, and you may add another 9 User Types for a maximum of\n        10.\n      operationId: createUserType\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserType'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserType'\n          description: Success\n      security:\n      - api_token: []\n      tags:\n      - UserType\n      x-codegen-request-body-name: userType\n  /api/v1/meta/types/user/{typeId}:\n    delete:\n      description: Deletes a User Type permanently. This operation is not permitted\n        for the default type, nor for any User Type that has existing users\n      operationId: deleteUserType\n      parameters:\n      - in: path\n        name: typeId\n        required: true\n        schema:\n          type: string\n      responses:\n        '204':\n          content: {}\n          description: No Content\n      security:\n      - api_token: []\n      tags:\n      - UserType\n    get:\n      description: Fetches a User Type by ID. The special identifier `default` may\n        be used to fetch the default User Type.\n      operationId: getUserType\n      parameters:\n      - in: path\n        name: typeId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserType'\n          description: Success\n      security:\n      - api_token: []\n      tags:\n      - UserType\n    post:\n      description: Updates an existing User Type\n      operationId: updateUserType\n      parameters:\n      - in: path\n        name: typeId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserType'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserType'\n          description: Success\n      security:\n      - api_token: []\n      tags:\n      - UserType\n      x-codegen-request-body-name: userType\n    put:\n      description: Replace an existing User Type\n      operationId: replaceUserType\n      parameters:\n      - in: path\n        name: typeId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserType'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserType'\n          description: Success\n      security:\n      - api_token: []\n      tags:\n      - UserType\n      x-codegen-request-body-name: userType\nservers:\n- url: https://{subdomain}.okta.com/\n  variables:\n    subdomain:\n      default: my-domain\n",
			"canonicalURL": "/github.com/stackql/stackql-provider-registry@7482bc9b2425a6491d640bf921a1dc9cf508f339/-/blob/providers/src/okta/v0.1.0/services/UserType.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stackql/stackql-provider-registry/blob/7482bc9b2425a6491d640bf921a1dc9cf508f339/providers/src/okta/v0.1.0/services/UserType.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}