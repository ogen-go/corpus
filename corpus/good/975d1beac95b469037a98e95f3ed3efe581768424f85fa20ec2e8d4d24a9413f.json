{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/FrenchIBMi/Outils"
		},
		"file": {
			"name": "api-with-express.yaml",
			"size": 0,
			"path": "api-with-express/api-with-express.yaml",
			"byteSize": 5393,
			"content": "openapi: 3.0.1\ninfo:\n  title: API with Express\n  description: API sécurisé avec le framework Express.\n  contact:\n    email: s.bourreau@cil-lamballe.com\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  version: 1.0.0\nexternalDocs:\n  description: Find out more about Swagger\n  url: http://swagger.io\nservers:\n- url: https://localhost:8443/\ntags:\n- name: login\n  description: Authentification\n- name: customers\n  description: Accès aux données\npaths:\n  /login:\n    post:\n      tags:\n      - login\n      summary: Connexion à l'IBMi\n      description: Connexion avec un utilisateur valide.\n      operationId: login\n      requestBody:\n        description: Utilisateur / mot de passe valide\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n        required: true\n      responses:\n        default:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Token'\n  /customers:\n    get:\n      tags:\n      - customers\n      summary: Liste des customers\n      operationId: listCustomer\n      security:\n        - bearerAuth: []\n      responses:\n        401:\n          description: Authentication error. Invalid Token.\n          content: {}\n        default:\n          description: successful operation\n          headers:\n            x-access-token:\n              description: Token valide\n              schema:\n                type: string\n                format: bearer\n          content:\n            application/json:\n              schema:\n                type: string\n    post:\n      tags:\n      - customers\n      summary: Création d'un customer\n      description: This can only be done by the logged in user.\n      operationId: createCustomer\n      security:\n        - bearerAuth: []\n      requestBody:\n        description: Données à créer\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Customer'\n        required: true\n      responses:\n        default:\n          description: successful operation\n          content: {}\n  /customers/{id}:\n    get:\n      tags:\n      - customers\n      summary: Retourne un customer par son code\n      operationId: findCustomer\n      security:\n        - bearerAuth: []\n      parameters:\n      - name: id\n        in: path\n        description: Le code du customer\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Customer'\n        401:\n          description: Authentication error. Invalid Token.\n          content: {}\n    delete:\n      tags:\n      - customers\n      summary: Suppression d'un customer\n      operationId: deleteCustomer\n      security:\n        - bearerAuth: []\n      parameters:\n      - name: id\n        in: path\n        description: Le code du customer\n        required: true\n        schema:\n          type: string\n      responses:\n        401:\n          description: Authentication error. Invalid Token.\n          content: {}\n        default:\n          description: successful operation\n          content: {}\n    patch:\n      tags:\n      - customers\n      summary: Mise à jour d'un customer\n      operationId: updateCustomer\n      security:\n        - bearerAuth: []\n      parameters:\n      - name: id\n        in: path\n        description: Le code du customer\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Données à mettre à jour\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Customer'\n        required: true\n      responses:\n        401:\n          description: Authentication error. Invalid Token.\n          content: {}\n        default:\n          description: successful operation\n          content: {}\ncomponents:\n  schemas:\n    User:\n      type: object\n      properties:\n        profile:\n          type: string\n          description: Profile utilisateur IBMi\n        password:\n          type: string\n          description: Mot de passe utilisateur IBMi\n    Customer:\n      type: object\n      properties:\n        CUSNUM:\n          type: integer\n          description: Customer number\n        LSTNAM:\n          type: string\n          description: Last name\n        INIT:\n          type: string\n          description: First and middle initial\n        STREET:\n          type: string\n          description: Street address\n        CITY:\n          type: string\n          description: City\n        STATE:\n          type: string\n          description: State abbreviation\n        ZIPCOD:\n          type: integer\n          description: Zip code\n        CDTLMT:\n          type: integer\n          description: Credit limit\n        CHGCOD:\n          type: integer\n          description: Charge code\n        BALDUE:\n          type: integer\n          description: Balance due\n        CDTDUE:\n          type: integer\n          description: Credit due\n    Token:\n      type: object\n      properties:\n        auth:\n          type: boolean\n        token:\n          type: string\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n",
			"canonicalURL": "/github.com/FrenchIBMi/Outils@e64b664f02b32c82b7eca11701537cc387b5e079/-/blob/api-with-express/api-with-express.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/FrenchIBMi/Outils/blob/e64b664f02b32c82b7eca11701537cc387b5e079/api-with-express/api-with-express.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}