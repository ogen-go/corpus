{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "jumpseller.com-1-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/jumpseller.com-1-swagger.yaml",
			"byteSize": 126947,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    x-twitter: jumpseller\n  description: Explore all our endpoints with your own set of of access tokens. All changes\n    affect your production Jumpseller store.\n  title: Jumpseller API\n  version: \"1\"\n  x-apisguru-categories:\n    - ecommerce\n  x-logo:\n    url: https://twitter.com/jumpseller/profile_image?size=original\n  x-origin:\n    - format: swagger\n      url: https://api.jumpseller.com/swagger.json\n      version: \"2.0\"\n  x-providerName: jumpseller.com\npaths:\n  /categories.json:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Category\"\n      summary: Retrieve all Categories.\n      tags:\n        - Categories\n    post:\n      description: Category's permalink is automatically generated from the given\n        category's name.\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Category\"\n        description: Category parameters.\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CategoryEdit\"\n      summary: Create a new Category.\n      tags:\n        - Categories\n  /categories/count.json:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Count\"\n      summary: Count all Categories.\n      tags:\n        - Categories\n  \"/categories/{id}.json\":\n    delete:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Category\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: string\n        \"404\":\n          description: Category Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Delete an existing Category.\n      tags:\n        - Categories\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Category\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: The selected Category.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Category\"\n        \"404\":\n          description: Category Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Retrieve a single Category.\n      tags:\n        - Categories\n    put:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Category\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CategoryEdit\"\n        description: Category parameters.\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Category\"\n        \"404\":\n          description: Category Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Modify an existing Category.\n      tags:\n        - Categories\n  /checkout_custom_fields.json:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/LimitParam\"\n        - $ref: \"#/components/parameters/PageParam\"\n      responses:\n        \"200\":\n          description: An array of Checkout Custom Fields\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CheckoutCustomField\"\n                type: array\n      summary: Retrieve all Checkout Custom Fields.\n      tags:\n        - Checkout Custom Fields\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      requestBody:\n        $ref: \"#/components/requestBodies/CheckoutCustomFieldEdit\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CheckoutCustomField\"\n                type: array\n        \"404\":\n          description: CheckoutCustomField Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Create a new CheckoutCustomField.\n      tags:\n        - Checkout Custom Fields\n  \"/checkout_custom_fields/{id}.json\":\n    delete:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the CheckoutCustomField\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: string\n        \"404\":\n          description: CheckoutCustomField Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Delete an existing CheckoutCustomField.\n      tags:\n        - Checkout Custom Fields\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the CheckoutCustomField\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CheckoutCustomField\"\n        \"404\":\n          description: CheckoutCustomField Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Retrieve a single CheckoutCustomField.\n      tags:\n        - Checkout Custom Fields\n    put:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the CheckoutCustomField\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        $ref: \"#/components/requestBodies/CheckoutCustomFieldEdit\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CheckoutCustomField\"\n                type: array\n        \"404\":\n          description: CheckoutCustomField Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Update a CheckoutCustomField.\n      tags:\n        - Checkout Custom Fields\n  /countries.json:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      responses:\n        \"200\":\n          description: An array of Countries\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Country\"\n                type: array\n      summary: Retrieve all Countries.\n      tags:\n        - Countries\n  \"/countries/{country_code}.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: ISO3166 Country Code\n          in: path\n          name: country_code\n          required: true\n          schema:\n            type: string\n            format: string\n      responses:\n        \"200\":\n          description: A Country information object\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Country\"\n        \"404\":\n          description: Country Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Retrieve a single Country information.\n      tags:\n        - Countries\n  \"/countries/{country_code}/regions.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: ISO3166 Country Code\n          in: path\n          name: country_code\n          required: true\n          schema:\n            type: string\n            format: string\n      responses:\n        \"200\":\n          description: An array of Regions from a single Country\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Region\"\n                type: array\n        \"404\":\n          description: Country Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Retrieve all Regions from a single Country.\n      tags:\n        - Countries\n        - Regions\n  \"/countries/{country_code}/regions/{region_code}.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: ISO3166 Country Code\n          in: path\n          name: country_code\n          required: true\n          schema:\n            type: string\n            format: string\n        - description: Region Code\n          in: path\n          name: region_code\n          required: true\n          schema:\n            type: string\n            format: string\n      responses:\n        \"200\":\n          description: A Region information object\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Region\"\n        \"404\":\n          description: Country or Region not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Retrieve a single Region information object.\n      tags:\n        - Countries\n        - Regions\n  /customer_categories.json:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/LimitParam\"\n        - $ref: \"#/components/parameters/PageParam\"\n      responses:\n        \"200\":\n          description: An array of Customer Categories\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CustomerCategory\"\n                type: array\n      summary: Retrieve all Customer Categories.\n      tags:\n        - Customer Categories\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      requestBody:\n        $ref: \"#/components/requestBodies/CustomerCategoryEdit\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CustomerCategory\"\n                type: array\n        \"404\":\n          description: CustomerCategory Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Create a new CustomerCategory.\n      tags:\n        - Customer Categories\n  \"/customer_categories/{id}.json\":\n    delete:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the CustomerCategory\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: string\n        \"404\":\n          description: CustomerCategory Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Delete an existing CustomerCategory.\n      tags:\n        - Customer Categories\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the CustomerCategory\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomerCategory\"\n        \"404\":\n          description: CustomerCategory Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Retrieve a single CustomerCategory.\n      tags:\n        - Customer Categories\n    put:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the CustomerCategory\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        $ref: \"#/components/requestBodies/CustomerCategoryEdit\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CustomerCategory\"\n                type: array\n        \"404\":\n          description: CustomerCategory Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Update a CustomerCategory.\n      tags:\n        - Customer Categories\n  \"/customer_categories/{id}/customers.json\":\n    delete:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the CustomerCategory\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: string\n        \"404\":\n          description: CustomerCategory Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Delete Customers from an existing CustomerCategory.\n      tags:\n        - Customer Categories\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the CustomerCategory\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Customer\"\n                type: array\n        \"404\":\n          description: CustomerCategory Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Retrieves the customers in a CustomerCategory.\n      tags:\n        - Customer Categories\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the CustomerCategory\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Customer\"\n        description: Customer parameters.\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Customer\"\n                type: array\n        \"404\":\n          description: CustomerCategory Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Adds Customers to a CustomerCategory.\n      tags:\n        - Customer Categories\n  /customers.json:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/LimitParam\"\n        - $ref: \"#/components/parameters/PageParam\"\n      responses:\n        \"200\":\n          description: An array of Orders\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Customer\"\n                type: array\n      summary: Retrieve all Customers.\n      tags:\n        - Customers\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CustomerWithPasswordNoID\"\n        description: Customer parameters.\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Customer\"\n                type: array\n        \"404\":\n          description: Customer Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Create a new Customer.\n      tags:\n        - Customers\n  /customers/count.json:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Count\"\n      summary: Count all Customers.\n      tags:\n        - Customers\n  \"/customers/email/{email}.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Email of the Customer\n          in: path\n          name: email\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Customer\"\n        \"404\":\n          description: Customer Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Retrieve a single Customer.\n      tags:\n        - Customers\n  \"/customers/{id}.json\":\n    delete:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Customer\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: string\n        \"404\":\n          description: Customer Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Delete an existing Category.\n      tags:\n        - Customers\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Customer\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Customer\"\n        \"404\":\n          description: Customer Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Retrieve a single Customer.\n      tags:\n        - Customers\n    put:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Customer\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CustomerWithPassword\"\n        description: Customer parameters.\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Customer\"\n                type: array\n        \"404\":\n          description: Customer Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Update a new Customer.\n      tags:\n        - Customers\n  \"/customers/{id}/fields\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Customer\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CustomerAdditionalField\"\n                type: array\n        \"404\":\n          description: Customer doesn't have additional fields.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Retrieves the Customer Additional Field of a Customer.\n      tags:\n        - Customer Additional Fields\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Customer\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CustomerAdditionalFieldEdit\"\n        description: Customer Additional Field parameters.\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CustomerAdditionalField\"\n                type: array\n        \"404\":\n          description: Customer Additional Field Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Adds Customer Additional Fields to a Customer.\n      tags:\n        - Customer Additional Fields\n  \"/customers/{id}/fields/{field_id}\":\n    delete:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/CustomerIDParam\"\n        - description: Id of the Customer Additional Field\n          in: path\n          name: field_id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: string\n        \"404\":\n          description: Customer Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Delete a Customer Additional Field.\n      tags:\n        - Customer Additional Fields\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Customer\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: Id of the Customer Additional Field\n          in: path\n          name: field_id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CustomerAdditionalField\"\n                type: array\n        \"404\":\n          description: Customer Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Create a new Customer Additional Field.\n      tags:\n        - Customer Additional Fields\n    put:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/CustomerIDParam\"\n        - description: Id of the Customer Additional Field\n          in: path\n          name: field_id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomerAdditionalField\"\n        \"400\":\n          description: Customer Additional Field Bad Parameters.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadParams\"\n        \"404\":\n          description: Customer Additional Field Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Update a Customer Additional Field.\n      tags:\n        - Customer Additional Fields\n  /fields.json:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      responses:\n        \"200\":\n          description: An array of Custom Fields\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Field\"\n                type: array\n      summary: Retrieve all Store's Custom Fields.\n      tags:\n        - Custom Fields\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Field\"\n        description: Custom Field parameters.\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Field\"\n                type: array\n      summary: Create a new Custom Field.\n      tags:\n        - Custom Fields\n  /hooks.json:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/LimitParam\"\n        - $ref: \"#/components/parameters/PageParam\"\n      responses:\n        \"200\":\n          description: An array of Hooks\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Hook\"\n                type: array\n      summary: Retrieve all Hooks.\n      tags:\n        - Hooks\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      requestBody:\n        $ref: \"#/components/requestBodies/HookEdit\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Hook\"\n        \"404\":\n          description: Hook Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Create a new Hook.\n      tags:\n        - Hooks\n  \"/hooks/{id}.json\":\n    delete:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Hook\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: string\n        \"404\":\n          description: Hook Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Delete an existing Hook.\n      tags:\n        - Hooks\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Hook\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Hook\"\n        \"404\":\n          description: Hook Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Retrieve a single Hook.\n      tags:\n        - Hooks\n    put:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Hook\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        $ref: \"#/components/requestBodies/HookEdit\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Hook\"\n                type: array\n        \"404\":\n          description: Hook Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Update a Hook.\n      tags:\n        - Hooks\n  /jsapps.json:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/App\"\n      summary: Retrieve all the Store's JSApps\n      tags:\n        - Apps\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/JSAppEdit\"\n        description: JSApp parameters to create\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/JSApp\"\n                type: array\n      summary: Create a Store JSApp\n      tags:\n        - Apps\n  \"/jsapps/{code}.json\":\n    delete:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Code of the App\n          in: path\n          name: code\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: string\n        \"404\":\n          description: App Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Delete an existing JSApp.\n      tags:\n        - Apps\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Code of the App\n          in: path\n          name: code\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/JSApp\"\n      summary: Retrieve a JSApp\n      tags:\n        - Apps\n  /orders.json:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/LimitParam\"\n        - $ref: \"#/components/parameters/PageParam\"\n      responses:\n        \"200\":\n          description: An array of Orders\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Order\"\n                type: array\n      summary: Retrieve all Orders.\n      tags:\n        - Orders\n    post:\n      description: \"Use the JSON format:\u003cbr/\u003e'{ \\\"order\\\": {\\\"status\\\": \\\"Paid\\\",\n        \\\"shipping_method_id\\\": 123, \\\"products\\\": [{ \\\"id\\\": 123, \\\"qty\\\": 1}],\n        \\\"customer\\\": {\\\"id\\\": 123}}}'\u003cbr/\u003eor in CURL:\u003cbr/\u003ecurl -X POST -d '{\n        \\\"order\\\": {\\\"status\\\": \\\"Paid\\\", \\\"shipping_method_id\\\": 123,\n        \\\"products\\\": [{ \\\"id\\\": 123, \\\"qty\\\": 1}], \\\"customer\\\": {\\\"id\\\":\n        123}}}'\n        \\\"https://610d738f.ngrok.io/api/v1/orders.json?login=storecode\u0026authtoke\\\n        n=XXXXX\\\" -H \\\"Content-Type:application/json\\\" \"\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/OrderEdit\"\n        description: Order parameters.\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Order\"\n                type: array\n      summary: Create a new Order.\n      tags:\n        - Orders\n  \"/orders/after/{id}.json\":\n    get:\n      description: For example the GET /orders/after/5000 will return Order 5001, 5002,\n        5003, etc.\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Order\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n        \"404\":\n          description: Order Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Retrieve orders filtered by Order Id.\n      tags:\n        - Orders\n  /orders/count.json:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Count\"\n      summary: Count all Orders.\n      tags:\n        - Orders\n  \"/orders/status/{status}.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Status of the Order used as filter\n          in: path\n          name: status\n          required: true\n          schema:\n            type: string\n            enum:\n              - Abandoned\n              - Canceled\n              - Pending Payment\n              - Paid\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Order\"\n                type: array\n        \"404\":\n          description: Status Invalid.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StatusInvalid\"\n      summary: Retrieve orders filtered by status.\n      tags:\n        - Orders\n  \"/orders/{id}.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Order\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n        \"404\":\n          description: Order Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Retrieve a single Order.\n      tags:\n        - Orders\n    put:\n      description: \"Only 'status', 'tracking_number', 'tracking_company',\n        'additional_information' and 'additional_fields' are available for\n        update.\u003cbr/\u003eUse the JSON format:\u003cbr/\u003e'{ \\\"order\\\": {\\\"status\\\":\n        \\\"Paid\\\", \\\"tracking_company\\\": \\\"other\\\", \\\"tracking_number\\\":\n        \\\"123456789\\\", \\\"additional_information\\\": \\\"My custom message.\\\",\n        \\\"additional_fields\\\": [{\\\"label\\\": \\\"Gift Name\\\", \\\"value\\\":\n        \\\"Duarte\\\"}, {\\\"label\\\": \\\"Gift Wrapping Color\\\", \\\"value\\\":\n        \\\"Green\\\"}]} }}'\u003cbr/\u003eor in CURL:\u003cbr/\u003ecurl -X PUT -d '{ \\\"order\\\":\n        {\\\"status\\\": \\\"Paid\\\", \\\"additional_information\\\": \\\"My custom\n        message.\\\"}}'\n        \\\"https://610d738f.ngrok.io/api/v1/orders/{id}.json?login=storecode\u0026aut\\\n        htoken=XXXXX\\\" -H \\\"Content-Type:application/json\\\" \"\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Order\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/OrderEdit\"\n        description: Order parameters to change\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Order\"\n                type: array\n        \"404\":\n          description: Order Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Modify an existing Order.\n      tags:\n        - Orders\n  \"/orders/{id}/history.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Order\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: An array with Order History\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/OrderHistory\"\n                type: array\n      summary: Retrieve all Order History.\n      tags:\n        - Orders\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the OrderHistory\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/OrderHistoryEdit\"\n        description: Order History parameters.\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/OrderHistory\"\n                type: array\n      summary: Create a new Order History Entry.\n      tags:\n        - Orders\n  /payment_methods.json:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      responses:\n        \"200\":\n          description: An array of Payment Methods\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PaymentMethod\"\n                type: array\n      summary: Retrieve all Store's Payment Methods.\n      tags:\n        - Payment Methods\n  \"/payment_methods/{id}.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Payment Method\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PaymentMethod\"\n        \"404\":\n          description: PaymentMethod Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Retrieve a single Payment Method.\n      tags:\n        - Payment Methods\n  /products.json:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/LimitParam\"\n        - $ref: \"#/components/parameters/PageParam\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Product\"\n                type: array\n      summary: Retrieve all Products.\n      tags:\n        - Products\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ProductEdit\"\n        description: Product parameters.\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Product\"\n                type: array\n      summary: Create a new Product.\n      tags:\n        - Products\n  \"/products/after/{id}.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/ProductIDParam\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Product\"\n                type: array\n        \"404\":\n          description: Product Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Retrieves Products after the given id.\n      tags:\n        - Products\n  \"/products/category/{category_id}.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Category ID of the Product used as filter\n          in: path\n          name: category_id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Product\"\n                type: array\n        \"404\":\n          description: Product Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Retrieve Products filtered by category.\n      tags:\n        - Products\n  \"/products/category/{category_id}/count.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Category ID of the Product used as filter\n          in: path\n          name: category_id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Count\"\n        \"404\":\n          description: Category Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Count Products filtered by category.\n      tags:\n        - Products\n  /products/count.json:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Count\"\n      summary: Count all Products.\n      tags:\n        - Products\n  /products/search.json:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Query for the Product\n          in: query\n          name: query\n          required: true\n          schema:\n            type: string\n            format: string\n      responses:\n        \"200\":\n          description: An array of products\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Product\"\n                type: array\n        \"404\":\n          description: Invalid query.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Retrieve a Product List from a query.\n      tags:\n        - Products\n  \"/products/status/{status}.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Status of the Product used as filter\n          in: path\n          name: status\n          required: true\n          schema:\n            type: string\n            enum:\n              - available\n              - not-available\n              - disabled\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Product\"\n                type: array\n        \"404\":\n          description: Status Invalid.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StatusInvalid\"\n      summary: Retrieve Products filtered by status.\n      tags:\n        - Products\n  \"/products/status/{status}/count.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Status of the Product used as filter\n          in: path\n          name: status\n          required: true\n          schema:\n            type: string\n            enum:\n              - available\n              - not-available\n              - disabled\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Count\"\n        \"404\":\n          description: Status Invalid.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StatusInvalid\"\n      summary: Count Products filtered by status.\n      tags:\n        - Products\n  \"/products/{id}.json\":\n    delete:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/ProductIDParam\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: string\n        \"404\":\n          description: Product Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Delete an existing Product.\n      tags:\n        - Products\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: ID of the Product\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Product\"\n        \"404\":\n          description: Product Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Retrieve a single Product.\n      tags:\n        - Products\n    put:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/ProductIDParam\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ProductEdit\"\n        description: Product parameters to change\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Product\"\n                type: array\n        \"404\":\n          description: Product Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Modify an existing Product.\n      tags:\n        - Products\n  \"/products/{id}/fields.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/ProductIDParam\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Field\"\n                type: array\n        \"404\":\n          description: Product Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Retrieve all Product Custom Fields\n      tags:\n        - Product Custom Fields\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/ProductIDParam\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ProductCustomField\"\n        description: Product Custom Field parameters.\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Product\"\n                type: array\n        \"404\":\n          description: Product Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Create a new Product Custom Field.\n      tags:\n        - Product Custom Fields\n  \"/products/{id}/fields/count.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: ID of the Product\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Count\"\n        \"404\":\n          description: Product Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Count all Product Custom Fields.\n      tags:\n        - Product Custom Fields\n  \"/products/{id}/images.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: ID of the Product\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Image\"\n                type: array\n        \"404\":\n          description: Product Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Retrieve all Product Images.\n      tags:\n        - Product Images\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/ProductIDParam\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ImageEdit\"\n        description: Product Image parameters.\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Image\"\n                type: array\n      summary: Create a new Product Image.\n      tags:\n        - Product Images\n  \"/products/{id}/images/count.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: ID of the Product\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Count\"\n        \"404\":\n          description: Product Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Count all Product Images.\n      tags:\n        - Product Images\n  \"/products/{id}/images/{image_id}.json\":\n    delete:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/ProductIDParam\"\n        - description: Id of the Product Image\n          in: path\n          name: image_id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: string\n        \"404\":\n          description: Product Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Delete a Product Image.\n      tags:\n        - Product Images\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/ProductIDParam\"\n        - description: Id of the Product Image\n          in: path\n          name: image_id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Image\"\n                type: array\n        \"404\":\n          description: Product Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Create a new Product Image.\n      tags:\n        - Product Images\n  \"/products/{id}/options.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: ID of the Product\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ProductOption\"\n                type: array\n        \"404\":\n          description: Product Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Retrieve all Product Options.\n      tags:\n        - Product Options\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/ProductIDParam\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ProductOptionEdit\"\n        description: Product Option parameters.\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ProductOption\"\n                type: array\n      summary: Create a new Product Option.\n      tags:\n        - Product Options\n  \"/products/{id}/options/count.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: ID of the Product\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Count\"\n        \"404\":\n          description: Product Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Count all Product Options.\n      tags:\n        - Product Options\n  \"/products/{id}/options/{option_id}.json\":\n    delete:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/ProductIDParam\"\n        - description: Id of the Product Option\n          in: path\n          name: option_id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: string\n        \"404\":\n          description: Product Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Delete a Product Option.\n      tags:\n        - Product Options\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/ProductIDParam\"\n        - description: Id of the Product Option\n          in: path\n          name: option_id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ProductOption\"\n                type: array\n        \"404\":\n          description: Product Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Create a new Product Option.\n      tags:\n        - Product Options\n    put:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/ProductIDParam\"\n        - description: Id of the Product Option\n          in: path\n          name: option_id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ProductOptionEdit\"\n        description: Product option parameters to change\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ProductOption\"\n                type: array\n        \"404\":\n          description: Product Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Modify an existing Product Option.\n      tags:\n        - Product Options\n  \"/products/{id}/options/{option_id}/values.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: ID of the Product\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: ID of the Product Option\n          in: path\n          name: option_id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ProductOptionValue\"\n                type: array\n        \"404\":\n          description: Product Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Retrieve all Product Option Values.\n      tags:\n        - Product Option Values\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/ProductIDParam\"\n        - description: Id of the Product Option\n          in: path\n          name: option_id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ProductOptionValueEdit\"\n        description: Product Option Value parameters.\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ProductOptionValue\"\n                type: array\n      summary: Create a new Product Option Value.\n      tags:\n        - Product Option Values\n  \"/products/{id}/options/{option_id}/values/count.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: ID of the Product\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: ID of the Product Option\n          in: path\n          name: option_id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Count\"\n        \"404\":\n          description: Product Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Count all Product Option Values.\n      tags:\n        - Product Option Values\n  \"/products/{id}/options/{option_id}/values/{value_id}.json\":\n    delete:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/ProductIDParam\"\n        - description: Id of the Product Option\n          in: path\n          name: option_id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: ID of the Product Option Value\n          in: path\n          name: value_id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: string\n        \"404\":\n          description: Product Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Delete a Product Option Value.\n      tags:\n        - Product Option Values\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/ProductIDParam\"\n        - description: Id of the Product Option\n          in: path\n          name: option_id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: ID of the Product Option Value\n          in: path\n          name: value_id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ProductOptionValue\"\n                type: array\n        \"404\":\n          description: Product Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Create a new Product Option Value.\n      tags:\n        - Product Option Values\n    put:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/ProductIDParam\"\n        - description: Id of the Product Option\n          in: path\n          name: option_id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: Id of the Product Option Value\n          in: path\n          name: value_id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ProductOptionValueEdit\"\n        description: Product option value parameters to change\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProductOptionValue\"\n        \"404\":\n          description: Product Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Modify an existing Product Option Value.\n      tags:\n        - Product Option Values\n  \"/products/{id}/variants.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: ID of the Product\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Variant\"\n                type: array\n        \"404\":\n          description: Product Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Retrieve all Product Variants.\n      tags:\n        - Product Variants\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/ProductIDParam\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/VariantEdit\"\n        description: Product Variant parameters.\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Variant\"\n        \"404\":\n          description: Product Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Create a new Product Variant.\n      tags:\n        - Product Variants\n  \"/products/{id}/variants/count.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: ID of the Product\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Count\"\n        \"404\":\n          description: Product Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Count all Product Variants.\n      tags:\n        - Product Variants\n  \"/products/{id}/variants/{variant_id}.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/ProductIDParam\"\n        - description: Id of the Product Variant\n          in: path\n          name: variant_id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Variant\"\n        \"404\":\n          description: Product Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Retrieve a single Product Variant.\n      tags:\n        - Product Variants\n    put:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/ProductIDParam\"\n        - description: Id of the Product Variant\n          in: path\n          name: variant_id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/VariantEdit\"\n        description: Product Variant parameters to change\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Variant\"\n        \"404\":\n          description: Product Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Modify an existing Product Variant.\n      tags:\n        - Product Variants\n  /promotions.json:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: \"Promotions' list restriction (default: 50 | max: 200).\"\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n            format: integer\n        - description: \"Promotions' list page (default: 1).\"\n          in: query\n          name: page\n          required: false\n          schema:\n            type: integer\n            format: integer\n      responses:\n        \"200\":\n          description: An array of Promotions\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Promotion\"\n                type: array\n      summary: Retrieve all Promotions.\n      tags:\n        - Promotions\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      requestBody:\n        $ref: \"#/components/requestBodies/PromotionEdit\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Promotion\"\n                type: array\n        \"404\":\n          description: Promotion Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Create a new Promotion.\n      tags:\n        - Promotions\n  \"/promotions/{id}.json\":\n    delete:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Promotion\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: string\n        \"404\":\n          description: Promotion Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Delete an existing Promotion.\n      tags:\n        - Promotions\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Promotion\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Promotion\"\n        \"404\":\n          description: Promotion Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Retrieve a single Promotion.\n      tags:\n        - Promotions\n    put:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Promotion\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        $ref: \"#/components/requestBodies/PromotionEdit\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Promotion\"\n                type: array\n        \"404\":\n          description: Promotion Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Update a Promotion.\n      tags:\n        - Promotions\n  /store/info.json:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Store\"\n      summary: Retrieve Store Information\n      tags:\n        - Stores\n  /store/languages.json:\n    get:\n      description: \"\"\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Language\"\n                type: array\n      summary: Retrieve Store Languages\n      tags:\n        - Stores\n  /taxes.json:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      responses:\n        \"200\":\n          description: An array of Taxes\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Tax\"\n                type: array\n      summary: Retrieve all Taxes.\n      tags:\n        - Taxes\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TaxEdit\"\n        description: Tax parameters.\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Tax\"\n                type: array\n        \"404\":\n          description: Tax Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Create a new Tax.\n      tags:\n        - Taxes\n  \"/taxes/{id}.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Tax\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: A Tax information object\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Tax\"\n        \"404\":\n          description: Tax Not Found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Retrieve a single Tax information.\n      tags:\n        - Taxes\nservers:\n  - url: https://api.jumpseller.com/v1\ncomponents:\n  parameters:\n    AuthtokenParam:\n      description: API OAuth token.\n      in: query\n      name: authtoken\n      required: true\n      schema:\n        type: string\n        format: string\n    CustomerIDParam:\n      description: Id of the Customer\n      in: path\n      name: id\n      required: true\n      schema:\n        type: integer\n        format: int32\n    LimitParam:\n      description: List restriction\n      in: query\n      name: limit\n      required: false\n      schema:\n        type: integer\n        format: integer\n        maximum: 200\n        default: 50\n    LoginParam:\n      description: API OAuth login.\n      in: query\n      name: login\n      required: true\n      schema:\n        type: string\n        format: string\n    PageParam:\n      description: List page\n      in: query\n      name: page\n      required: false\n      schema:\n        type: integer\n        format: integer\n        default: 1\n    ProductIDParam:\n      description: Id of the Product\n      in: path\n      name: id\n      required: true\n      schema:\n        type: integer\n        format: int32\n  requestBodies:\n    CustomerCategoryEdit:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/CustomerCategoryEdit\"\n      description: CustomerCategory parameters.\n      required: true\n    CheckoutCustomFieldEdit:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/CheckoutCustomFieldEdit\"\n      description: CheckoutCustomField parameters.\n      required: true\n    HookEdit:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/HookEdit\"\n      description: Hook parameters.\n      required: true\n    PromotionEdit:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/PromotionEdit\"\n      description: Promotion parameters.\n      required: true\n  schemas:\n    App:\n      properties:\n        apps:\n          items:\n            $ref: \"#/components/schemas/AppFields\"\n          type: array\n      type: object\n    AppFields:\n      properties:\n        author:\n          description: Author of the app\n          type: string\n        code:\n          description: Code of the app\n          type: string\n        description:\n          description: Description of the app\n          type: string\n        js:\n          default: false\n          description: True if the app is a jsapp\n          type: boolean\n        name:\n          description: Name of the app\n          type: string\n        page:\n          description: Page of the app\n          type: string\n      type: object\n    BadParams:\n      properties:\n        message:\n          type: string\n    BillingAddress:\n      properties:\n        address:\n          description: Address of the Customer's Billing Address\n          type: string\n        city:\n          description: City of the Customer's Billing Address\n          type: string\n        country:\n          description: Country of the Customer's Billing Address (ISO 3166-1 alpha-2)\n          type: string\n        municipality:\n          description: Municipality of the Customer's Billing Address\n          type: string\n        name:\n          description: Name of the Customer's Billing Address\n          type: string\n        postal:\n          description: Postal code of the Customer's Billing Address\n          type: string\n        region:\n          description: Region of the Customer's Billing Address (Use the FIPS standard -\n            http://www.geonames.org/countries/)\n          type: integer\n        surname:\n          description: Surname of the Customer's Billing Address\n          type: string\n        taxid:\n          description: Tax id of the Customer's Billing Address\n          type: string\n    Category:\n      properties:\n        category:\n          $ref: \"#/components/schemas/CategoryFields\"\n      type: object\n    CategoryEdit:\n      properties:\n        category:\n          $ref: \"#/components/schemas/CategoryEditFields\"\n      type: object\n    CategoryEditFields:\n      properties:\n        name:\n          description: Name of the Category\n          type: string\n        parent_id:\n          description: Unique identifier of the Parent Category\n          format: int32\n          type: integer\n      type: object\n    CategoryFields:\n      properties:\n        id:\n          description: Unique identifier of the Category\n          format: int32\n          type: integer\n        name:\n          description: Name of the Category\n          type: string\n        parent_id:\n          description: Unique identifier of the Parent Category\n          format: int32\n          type: integer\n        permalink:\n          description: Category unique URL path\n          type: string\n      type: object\n    CheckoutCustomField:\n      properties:\n        checkout_custom_field:\n          $ref: \"#/components/schemas/CheckoutCustomFieldFields\"\n      type: object\n    CheckoutCustomFieldEdit:\n      properties:\n        checkout_custom_field:\n          $ref: \"#/components/schemas/CheckoutCustomFieldEditFields\"\n      type: object\n    CheckoutCustomFieldEditFields:\n      properties:\n        area:\n          description: Area of the CheckoutCustomField\n          enum:\n            - contact\n            - billing_shipping\n            - other\n          type: string\n        custom_field_select_options:\n          description: The values for the CheckoutCustomField selection\n          items:\n            type: string\n          type: array\n        deletable:\n          default: false\n          description: True if the CheckoutCustomField can be removed from the store\n          type: boolean\n        label:\n          description: Label given to the CheckoutCustomField\n          type: string\n        position:\n          description: Position of the CheckoutCustomField\n          format: int32\n          type: integer\n        required:\n          default: false\n          description: True if the CheckoutCustomField is mandatory\n          type: boolean\n        type:\n          description: Type of the CheckoutCustomField\n          enum:\n            - text\n            - select\n            - input\n            - checkbox\n          type: string\n      type: object\n    CheckoutCustomFieldFields:\n      properties:\n        area:\n          description: Area of the CheckoutCustomField\n          enum:\n            - contact\n            - billing_shipping\n            - other\n          type: string\n        custom_field_select_options:\n          description: The values for the CheckoutCustomField selection\n          items:\n            type: string\n          type: array\n        deletable:\n          default: false\n          description: True if the CheckoutCustomField can be removed from the store\n          type: boolean\n        id:\n          description: Unique identifier of the CheckoutCustomField\n          format: int32\n          type: integer\n        label:\n          description: Label given to the CheckoutCustomField\n          type: string\n        position:\n          description: Position of the CheckoutCustomField\n          format: int32\n          type: integer\n        required:\n          default: false\n          description: True if the CheckoutCustomField is mandatory\n          type: boolean\n        type:\n          description: Type of the CheckoutCustomField\n          enum:\n            - text\n            - select\n            - input\n            - checkbox\n          type: string\n      type: object\n    Count:\n      properties:\n        count:\n          format: int32\n          type: integer\n    Country:\n      properties:\n        code:\n          type: string\n        name:\n          type: string\n    Customer:\n      properties:\n        customer:\n          $ref: \"#/components/schemas/CustomerFields\"\n      type: object\n    CustomerAdditionalField:\n      properties:\n        customer_additional_field:\n          $ref: \"#/components/schemas/CustomerAdditionalFieldFields\"\n      type: object\n    CustomerAdditionalFieldEdit:\n      properties:\n        customer_additional_field:\n          $ref: \"#/components/schemas/CustomerAdditionalFieldEditFields\"\n      type: object\n    CustomerAdditionalFieldEditFields:\n      properties:\n        checkout_custom_field_id:\n          description: Unique identifier of the Checkout Custom Field\n          format: int32\n          type: integer\n        value:\n          description: Value of the Customer Additional Field\n          type: string\n      type: object\n    CustomerAdditionalFieldFields:\n      properties:\n        area:\n          description: Area of the Customer Additional Field\n          type: string\n        checkout_custom_field_id:\n          description: Unique identifier of the Checkout Custom Field\n          format: int32\n          type: integer\n        customer_id:\n          description: Unique identifier of the Customer\n          format: int32\n          type: integer\n        id:\n          description: Unique identifier of the Customer Additional Field\n          format: int32\n          type: integer\n        label:\n          description: Label of the Customer Additional Field\n          type: string\n        value:\n          description: Value of the Customer Additional Field\n          type: string\n      type: object\n    CustomerCategory:\n      properties:\n        category:\n          $ref: \"#/components/schemas/CustomerCategoryFields\"\n      type: object\n    CustomerCategoryEdit:\n      properties:\n        category:\n          $ref: \"#/components/schemas/CustomerCategoryEditFields\"\n      type: object\n    CustomerCategoryEditFields:\n      properties:\n        name:\n          description: Name of the CustomerCategory\n          type: string\n      type: object\n    CustomerCategoryFields:\n      properties:\n        code:\n          description: Code of the CustomerCategory\n          type: string\n        id:\n          description: Unique identifier of the CustomerCategory\n          format: int32\n          type: integer\n        name:\n          description: Name of the CustomerCategory\n          type: string\n      type: object\n    CustomerFields:\n      properties:\n        billing_address:\n          $ref: \"#/components/schemas/BillingAddress\"\n        customer_additional_fields:\n          items:\n            $ref: \"#/components/schemas/CustomerAdditionalField\"\n          type: array\n        customer_category:\n          items:\n            type: integer\n          type: array\n        email:\n          description: Email of the Customer\n          type: string\n        id:\n          description: Unique identifier of the Customer\n          format: int32\n          type: integer\n        phone:\n          description: Phone of the Customer\n          type: string\n        shipping_address:\n          $ref: \"#/components/schemas/ShippingAddress\"\n        status:\n          description: Status of the Customer\n          enum:\n            - approved\n            - pending\n            - disabled\n          type: string\n      type: object\n    CustomerFieldsWithPassword:\n      properties:\n        billing_address:\n          $ref: \"#/components/schemas/BillingAddress\"\n        email:\n          description: Email of the Customer\n          type: string\n        id:\n          description: Unique identifier of the Customer\n          format: int32\n          type: integer\n        password:\n          description: Password\n          type: string\n        phone:\n          description: Phone of the Customer\n          type: string\n        shipping_address:\n          $ref: \"#/components/schemas/ShippingAddress\"\n        status:\n          description: Status of the Customer\n          enum:\n            - approved\n            - pending\n            - disabled\n          type: string\n      type: object\n    CustomerFieldsWithPasswordNoID:\n      properties:\n        billing_address:\n          $ref: \"#/components/schemas/BillingAddress\"\n        customer_category:\n          items:\n            type: integer\n          type: array\n        email:\n          description: Email of the Customer\n          type: string\n        password:\n          description: Password\n          type: string\n        phone:\n          description: Phone of the Customer\n          type: string\n        shipping_address:\n          $ref: \"#/components/schemas/ShippingAddress\"\n        status:\n          description: Status of the Customer\n          enum:\n            - approved\n            - pending\n            - disabled\n          type: string\n      type: object\n    CustomerWithPassword:\n      properties:\n        customer:\n          $ref: \"#/components/schemas/CustomerFieldsWithPassword\"\n      type: object\n    CustomerWithPasswordNoID:\n      properties:\n        customer:\n          $ref: \"#/components/schemas/CustomerFieldsWithPasswordNoID\"\n      type: object\n    Field:\n      properties:\n        field:\n          $ref: \"#/components/schemas/FieldFields\"\n      type: object\n    FieldFields:\n      properties:\n        id:\n          description: Unique identifier of the Field\n          format: int32\n          type: integer\n        label:\n          description: Label given to the Field\n          type: string\n        type:\n          description: Type of the Field\n          enum:\n            - text\n            - selection\n            - input\n          type: string\n        values:\n          description: All the possible Values of the Field (for type 'selection')\n          items:\n            type: string\n          type: array\n      type: object\n    Hook:\n      properties:\n        hook:\n          $ref: \"#/components/schemas/HookFields\"\n      type: object\n    HookEdit:\n      properties:\n        hook:\n          $ref: \"#/components/schemas/HookEditFields\"\n      type: object\n    HookEditFields:\n      properties:\n        event:\n          description: Event associated with Hook\n          enum:\n            - order_updated\n            - order_pending_payment\n            - order_paid\n            - order_shipped\n            - order_canceled\n            - order_abandoned\n            - product_created\n            - product_updated\n            - product_deleted\n            - customer_created\n            - customer_updated\n            - customer_deleted\n          type: string\n        url:\n          description: Hook URL to be notified\n          type: string\n      required:\n        - event\n        - url\n      type: object\n    HookFields:\n      properties:\n        created_at:\n          description: Hook creation date\n          type: string\n        event:\n          description: Event associated with Hook\n          type: string\n        id:\n          description: Unique identifier of the Hook\n          format: int32\n          type: integer\n        url:\n          description: Hook URL to be notified\n          type: string\n      type: object\n    Id:\n      properties:\n        id:\n          format: int32\n          type: integer\n    Image:\n      properties:\n        image:\n          $ref: \"#/components/schemas/ImageFields\"\n      type: object\n    ImageEdit:\n      properties:\n        image:\n          $ref: \"#/components/schemas/ImageEditFields\"\n      type: object\n    ImageEditFields:\n      properties:\n        url:\n          description: Complete URL of the image\n          type: string\n      type: object\n    ImageFields:\n      properties:\n        id:\n          description: Unique identifier of the image\n          format: int32\n          type: integer\n        position:\n          description: Position of the image\n          format: int32\n          type: integer\n        url:\n          description: Complete URL of the image\n          type: string\n      type: object\n    JSApp:\n      properties:\n        element:\n          description: Element of Template to inject HTML\n          type: string\n        template:\n          description: Template of Store Theme to inject HTML\n          type: string\n        url:\n          description: Url of the HTML to inject\n          type: string\n      type: object\n    JSAppEdit:\n      properties:\n        app:\n          $ref: \"#/components/schemas/JSApp\"\n      type: object\n    Language:\n      properties:\n        code:\n          type: string\n        name:\n          type: string\n    NotFound:\n      properties:\n        message:\n          type: string\n    Order:\n      properties:\n        order:\n          $ref: \"#/components/schemas/OrderFields\"\n      type: object\n    OrderEdit:\n      properties:\n        order:\n          $ref: \"#/components/schemas/OrderEditFields\"\n      type: object\n    OrderEditFields:\n      properties:\n        additional_information:\n          description: Additional information for the given Order\n          type: string\n        customer:\n          $ref: \"#/components/schemas/CustomerFields\"\n        products:\n          items:\n            $ref: \"#/components/schemas/OrderProduct\"\n          type: array\n        shipping_method_id:\n          description: Shipping method e.g. Royal Mail\n          format: int32\n          type: integer\n        status:\n          description: Status of the Order\n          enum:\n            - Abandoned\n            - Canceled\n            - Pending Payment\n            - Paid\n          type: string\n        tracking_company:\n          description: Shipping Company used for the given Order\n          type: string\n        tracking_number:\n          description: Shipping Tracking Number used for the given Order\n          type: string\n    OrderFields:\n      properties:\n        additional_information:\n          description: Additional information for the given Order\n          type: string\n        billing_address:\n          $ref: \"#/components/schemas/BillingAddress\"\n        checkout_url:\n          description: Store Checkout Order URL for the given Order\n          type: string\n        coupons:\n          description: Promotion Coupons used on the given Order\n          type: string\n        created_at:\n          description: Order date\n          type: string\n        currency:\n          description: Currency of the Order\n          type: string\n        customer:\n          $ref: \"#/components/schemas/Customer\"\n        discount:\n          description: Discount value for the given Order\n          format: float\n          type: number\n        duplicate_url:\n          description: Duplicate Order URL for the given Order\n          type: string\n        id:\n          description: Unique identifier of the Order\n          format: int32\n          type: integer\n        payment_information:\n          description: Payment information for the given Order\n          type: string\n        payment_method_name:\n          description: Payment Method name used e.g. PayPal\n          type: string\n        products:\n          items:\n            $ref: \"#/components/schemas/OrderProduct\"\n          type: array\n        recovery_url:\n          description: Recovery Order URL for the given Order\n          type: string\n        shipment_status:\n          description: Shipment Status for Order Fulfillment.\n          enum:\n            - delivered\n            - requested\n            - in_transit\n            - failed\n          type: string\n        shipping:\n          description: Shipping value for the given Order\n          format: float\n          type: number\n        shipping_address:\n          $ref: \"#/components/schemas/ShippingAddress\"\n        shipping_discount:\n          description: Shipping Discount value for the given order\n          format: float\n          type: number\n        shipping_method_id:\n          description: Shipping method e.g. Royal Mail\n          format: int32\n          type: integer\n        shipping_method_name:\n          description: Shipping method e.g. Royal Mail\n          type: string\n        shipping_tax:\n          description: Shipping Tax value for the given order\n          format: float\n          type: number\n        status:\n          description: Status of the Order\n          enum:\n            - Abandoned\n            - Canceled\n            - Pending Payment\n            - Paid\n          type: string\n        subtotal:\n          description: Subtotal value for the given Order. Excluding taxes, shipping and\n            discounts\n          format: float\n          type: number\n        tax:\n          description: Tax value for the given order\n          format: float\n          type: number\n        total:\n          description: Total value for the given Order. Including taxes, shipping and\n            discounts\n          format: float\n          type: number\n        tracking_company:\n          description: Company Used for Order Fulfillment.\n          type: string\n        tracking_number:\n          description: Tracking Number for Order Fulfillment.\n          type: string\n        tracking_url:\n          description: Tracking URL for Order Fulfillment.\n          type: string\n    OrderHistory:\n      properties:\n        order_history:\n          $ref: \"#/components/schemas/OrderHistoryFields\"\n      type: object\n    OrderHistoryEdit:\n      properties:\n        order_history:\n          $ref: \"#/components/schemas/OrderHistoryEditFields\"\n      type: object\n    OrderHistoryEditFields:\n      properties:\n        message:\n          description: Message of the Order History\n          type: string\n      type: object\n    OrderHistoryFields:\n      properties:\n        created_at:\n          description: Creation date of the order history\n          type: string\n        id:\n          description: Unique identifier of the Order History\n          format: int32\n          type: integer\n        message:\n          description: Message of the Order History\n          type: string\n      type: object\n    OrderProduct:\n      properties:\n        discount:\n          description: Discount of the Order Product\n          format: float\n          type: number\n        id:\n          description: Unique identifier of the original Product\n          format: int32\n          type: integer\n        image:\n          description: Image URL of the Order Product\n          type: string\n        name:\n          description: Name of the Order Product\n          type: string\n        price:\n          description: Price of the Order Product\n          format: float\n          type: number\n        qty:\n          description: Price of the Order Product\n          format: int32\n          type: integer\n        sku:\n          description: Stock Keeping Unit of the Order Product\n          type: string\n        variant_id:\n          description: Unique identifier of the original Product Variant\n          format: int32\n          type: integer\n        weight:\n          default: 1\n          description: Weight of the Order Product\n          format: float\n          type: number\n      type: object\n    PaymentMethod:\n      properties:\n        payment_method:\n          $ref: \"#/components/schemas/PaymentMethodFields\"\n      type: object\n    PaymentMethodFields:\n      properties:\n        id:\n          description: Unique identifier of the Payment Method\n          format: int32\n          type: integer\n        name:\n          description: Name of the Payment Method\n          type: string\n        type:\n          description: Type of the Payment Method\n          enum:\n            - manual\n            - paypal\n            - pagseguro\n            - moneybookers\n            - webpay_cl\n            - easypay\n            - easypaycc\n            - easypayboleto\n            - ideal_basic\n            - hipay\n            - khipu\n            - mercado_pago\n            - ifthenpay\n            - eupago\n            - stripe\n            - payu\n            - servipag\n          type: string\n      type: object\n    Product:\n      properties:\n        product:\n          $ref: \"#/components/schemas/ProductFields\"\n      type: object\n    ProductCustomField:\n      properties:\n        field_value:\n          $ref: \"#/components/schemas/ProductCustomFieldFields\"\n      type: object\n    ProductCustomFieldFields:\n      properties:\n        id:\n          description: Unique identifier of the ProductCustomField\n          format: int32\n          type: integer\n        value:\n          description: The value for the ProductCustomField\n          items:\n            type: string\n          type: array\n      type: object\n    ProductEdit:\n      properties:\n        product:\n          $ref: \"#/components/schemas/ProductEditFields\"\n      type: object\n    ProductEditFields:\n      properties:\n        categories:\n          items:\n            $ref: \"#/components/schemas/CategoryFields\"\n          type: array\n        description:\n          description: Description of the product\n          type: string\n        diameter:\n          description: Diameter of the product\n          format: float\n          type: number\n        featured:\n          default: false\n          description: True if the product is featured\n          type: boolean\n        google_product_category:\n          description: Category of a Product based on the Google product taxonomy\n          type: string\n        height:\n          description: Height of the product\n          format: float\n          type: number\n        length:\n          description: Length of the product\n          format: float\n          type: number\n        meta_description:\n          description: SEO meta description of the product\n          type: string\n        name:\n          description: Name of the product\n          type: string\n        package_format:\n          default: box\n          description: Format the product package\n          enum:\n            - box\n            - cylinder\n          type: string\n        page_title:\n          description: SEO title of the product\n          type: string\n        permalink:\n          description: Product unique URL path\n          type: string\n        price:\n          description: Price of the product\n          format: float\n          type: number\n        sku:\n          description: Stock Keeping Unit of the product\n          type: string\n        status:\n          default: available\n          description: Status of the product\n          enum:\n            - available\n            - not-available\n            - disabled\n          type: string\n        stock:\n          default: 100\n          description: Quantity in stock for the product\n          format: int32\n          type: integer\n        stock_unlimited:\n          description: True if the Product has unlimited stock\n          type: boolean\n        weight:\n          default: 1\n          description: Weight of the product\n          format: float\n          type: number\n        width:\n          description: Width of the product\n          format: float\n          type: number\n      required:\n        - price\n        - name\n      type: object\n    ProductFields:\n      properties:\n        categories:\n          items:\n            $ref: \"#/components/schemas/CategoryFields\"\n          type: array\n        created_at:\n          description: Date of product creation\n          type: string\n        description:\n          description: Description of the product\n          type: string\n        diameter:\n          description: Diameter of the product\n          format: float\n          type: number\n        discount:\n          description: Discount of the product\n          format: float\n          type: number\n        featured:\n          default: false\n          description: True if the product is featured\n          type: boolean\n        google_product_category:\n          description: Category of a Product based on the Google product taxonomy\n          type: string\n        height:\n          description: Height of the product\n          format: float\n          type: number\n        id:\n          description: Unique identifier of the product\n          format: int32\n          type: integer\n        images:\n          items:\n            $ref: \"#/components/schemas/ImageFields\"\n          type: array\n        length:\n          description: Length of the product\n          format: float\n          type: number\n        name:\n          description: Name of the product\n          type: string\n        package_format:\n          default: box\n          description: Format the product package\n          enum:\n            - box\n            - cylinder\n          type: string\n        permalink:\n          description: Product unique URL path\n          type: string\n        price:\n          description: Price of the product\n          format: float\n          type: number\n        sku:\n          description: Stock Keeping Unit of the product\n          type: string\n        status:\n          default: available\n          description: Status of the product\n          enum:\n            - available\n            - not-available\n            - disabled\n          type: string\n        stock:\n          default: 100\n          description: Quantity in stock for the product\n          format: int32\n          type: integer\n        stock_unlimited:\n          description: True if the Product has unlimited stock\n          type: boolean\n        variants:\n          items:\n            $ref: \"#/components/schemas/VariantFields\"\n          type: array\n        weight:\n          default: 1\n          description: Weight of the product\n          format: float\n          type: number\n        width:\n          description: Width of the product\n          format: float\n          type: number\n      type: object\n    ProductOption:\n      properties:\n        option:\n          $ref: \"#/components/schemas/ProductOptionFields\"\n      type: object\n    ProductOptionEdit:\n      properties:\n        option:\n          $ref: \"#/components/schemas/ProductOptionEditFields\"\n      type: object\n    ProductOptionEditFields:\n      properties:\n        name:\n          description: Name of the product option\n          type: string\n        option_type:\n          description: Type of the product option\n          enum:\n            - option\n            - input\n            - text\n            - file\n          type: string\n        position:\n          description: Position of the product option\n          format: int32\n          type: integer\n      type: object\n    ProductOptionFields:\n      properties:\n        id:\n          description: Unique identifier of the product option\n          format: int32\n          type: integer\n        name:\n          description: Name of the product option\n          type: string\n        option_type:\n          description: Type of the product option\n          enum:\n            - option\n            - input\n            - text\n            - file\n          type: string\n        position:\n          description: Position of the product option\n          format: int32\n          type: integer\n        values:\n          items:\n            $ref: \"#/components/schemas/ProductOptionValueFields\"\n          type: array\n      type: object\n    ProductOptionValue:\n      properties:\n        value:\n          $ref: \"#/components/schemas/ProductOptionValueFields\"\n      type: object\n    ProductOptionValueEdit:\n      properties:\n        value:\n          $ref: \"#/components/schemas/ProductOptionValueEditFields\"\n      type: object\n    ProductOptionValueEditFields:\n      properties:\n        name:\n          description: Name of the product option value\n          type: string\n        position:\n          description: Position of the product option value\n          format: int32\n          type: integer\n      type: object\n    ProductOptionValueFields:\n      properties:\n        id:\n          description: Unique identifier of the product option value\n          format: int32\n          type: integer\n        name:\n          description: Name of the product option value\n          type: string\n        position:\n          description: Position of the product option value\n          format: int32\n          type: integer\n        product_option:\n          $ref: \"#/components/schemas/ProductOption\"\n        variants:\n          items:\n            $ref: \"#/components/schemas/Variant\"\n          type: array\n      type: object\n    Promotion:\n      properties:\n        promotion:\n          $ref: \"#/components/schemas/PromotionFields\"\n      type: object\n    PromotionEdit:\n      properties:\n        promotion:\n          $ref: \"#/components/schemas/PromotionEditFields\"\n      type: object\n    PromotionEditFields:\n      properties:\n        begins_at:\n          description: Creation date of the promotion (requires 'lasts' param - 'date')\n          type: string\n        buys_at_least:\n          description: Controls the promotion's condition ('none', 'price', 'qty')\n          type: string\n        categories:\n          description: Products Categories where the promotion will be applied (requires\n            'discount_target' param - 'categories')\n          items:\n            $ref: \"#/components/schemas/Id\"\n          type: array\n        code:\n          description: Code of the promotion\n          type: string\n        condition_price:\n          description: Minimum order amount to validate the promotion (requires\n            'buys_at_least' param - 'price')\n          format: float\n          type: number\n        condition_qty:\n          description: Minimum quantity of ordered itens to validate the promotion\n            (requires 'buys_at_least' param - 'qty')\n          format: int32\n          type: integer\n        cumulative:\n          default: false\n          description: True if the promotion can be acumulated with others\n          type: boolean\n        customer_categories:\n          description: Customer Categories to whom the promotion will be applied (requires\n            'customers' param - 'categories')\n          items:\n            $ref: \"#/components/schemas/Id\"\n          type: array\n        customers:\n          description: Controls to which customers the promotion will be applied ('all',\n            'loggedin', 'categories')\n          type: string\n        discount_amount_fix:\n          description: Fixed discount amount of the promotion (requires 'type' param -\n            'fix')\n          format: float\n          type: number\n        discount_amount_percent:\n          description: Percentual discount amount of the promotion (requires 'type' param -\n            'percentage')\n          format: float\n          type: number\n        discount_target:\n          description: Where the promotion will be applied ('order', 'shipping',\n            'categories')\n          type: string\n        enabled:\n          default: true\n          description: If the promotion is to be temporarily disabled\n          type: boolean\n        expires_at:\n          description: Expiration date of the promotion (requires 'lasts' param - 'date')\n          type: string\n        lasts:\n          description: Controls when the promotion will expire ('none', 'date',\n            'max_times_used')\n          type: string\n        max_times_used:\n          description: Maximum amount a promotion can be used (requires 'lasts' param -\n            'max_times_used')\n          format: int32\n          type: integer\n        name:\n          description: Name of the product\n          type: string\n        products:\n          description: Products where the promotion will be applied (requires\n            'discount_target' param - 'categories')\n          items:\n            $ref: \"#/components/schemas/Id\"\n          type: array\n        type:\n          description: Controls if the discount will be a fixed area ('fix', 'percentage')\n          type: string\n      type: object\n    PromotionFields:\n      properties:\n        begins_at:\n          description: Creation date of the promotion\n          type: string\n        categories:\n          items:\n            $ref: \"#/components/schemas/Id\"\n          type: array\n        code:\n          description: Code of the promotion\n          type: string\n        condition_price:\n          description: Minimum order amount to validate the promotion\n          format: float\n          type: number\n        condition_qty:\n          description: Minimum quantity of ordered itens to validate the promotion\n          format: int32\n          type: integer\n        cumulative:\n          default: false\n          description: True if the promotion can be acumulated with others\n          type: boolean\n        customer_categories:\n          items:\n            $ref: \"#/components/schemas/Id\"\n          type: array\n        discount_amount_fix:\n          description: Fixed discount amount of the promotion\n          format: float\n          type: number\n        discount_amount_percent:\n          description: Percentual discount amount of the promotion\n          format: float\n          type: number\n        discount_target:\n          description: Where the promotion will be applied ('order', 'shipping',\n            'categories')\n          type: string\n        enabled:\n          default: true\n          description: If the promotion is currently enabled\n          type: boolean\n        expires_at:\n          description: Expiration date of the promotion\n          type: string\n        id:\n          description: Unique identifier of the product\n          format: int32\n          type: integer\n        max_times_used:\n          description: Maximum amount a promotion can be used\n          format: int32\n          type: integer\n        name:\n          description: Name of the product\n          type: string\n        products:\n          items:\n            $ref: \"#/components/schemas/Id\"\n          type: array\n        status:\n          description: Status of the promotion ('active', 'expired')\n          type: string\n        times_used:\n          description: Amount of times the promotion was used\n          format: int32\n          type: integer\n      type: object\n    Region:\n      properties:\n        code:\n          type: string\n        name:\n          type: string\n    ShippingAddress:\n      properties:\n        address:\n          description: Address of the Customer's Shipping Address\n          type: string\n        city:\n          description: City of the Customer's Shipping Address\n          type: string\n        country:\n          description: Country of the Customer's Shipping Address (ISO 3166-1 alpha-2)\n          type: string\n        municipality:\n          description: Municipality of the Customer's Shipping Address\n          type: string\n        name:\n          description: Name of the Customer's Shipping Address\n          type: string\n        postal:\n          description: Postal code of the Customer's Shipping Address\n          type: string\n        region:\n          description: Region of the Customer's Shipping Address (Use the FIPS standard -\n            http://www.geonames.org/countries/)\n          type: integer\n        surname:\n          description: Surname of the Customer's Shipping Address\n          type: string\n    StatusInvalid:\n      properties:\n        message:\n          type: string\n    Store:\n      properties:\n        code:\n          description: Store Code\n          type: string\n        country:\n          description: Store Country\n          type: string\n        currency:\n          description: Store Currency\n          type: string\n        email:\n          description: Store Admin Email\n          type: string\n        hooks_token:\n          description: Store Hooks Auth token\n          type: string\n        logo:\n          description: Store Logo URL\n          type: string\n        name:\n          description: Store Name\n          type: string\n        timezone:\n          description: Store Timezone\n          type: string\n        url:\n          description: Store URL\n          type: string\n        weight_unit:\n          description: Store Weight Unit\n          type: string\n      type: object\n    Tax:\n      properties:\n        field:\n          $ref: \"#/components/schemas/TaxFields\"\n      type: object\n    TaxEdit:\n      properties:\n        field:\n          $ref: \"#/components/schemas/TaxEditFields\"\n      type: object\n    TaxEditFields:\n      properties:\n        category_id:\n          description: Unique identifier of the category of the Tax\n          format: int32\n          type: integer\n        country:\n          description: Country where the Tax applies\n          type: string\n        fixed:\n          default: false\n          description: True if the tax has a fixed valued amount\n          type: boolean\n        region:\n          description: Region where the Tax applies\n          type: string\n        shipping:\n          default: false\n          description: True if the tax should be applied to shipping costs\n          type: boolean\n        tax_amount:\n          description: Tax value for the given Tax\n          format: float\n          type: number\n      type: object\n    TaxFields:\n      properties:\n        category_id:\n          description: Unique identifier of the category of the Tax\n          format: int32\n          type: integer\n        country:\n          description: Country name where the Tax applies\n          type: string\n        fixed:\n          default: false\n          description: True if the tax has a fixed valued amount\n          type: boolean\n        id:\n          description: Unique identifier of the Tax\n          format: int32\n          type: integer\n        region:\n          description: Region name where the Tax applies\n          type: string\n        shipping:\n          default: false\n          description: True if the tax should be applied to shipping costs\n          type: boolean\n        tax_amount:\n          description: Tax value for the given Tax\n          format: float\n          type: number\n      type: object\n    Variant:\n      properties:\n        variant:\n          $ref: \"#/components/schemas/VariantFields\"\n      type: object\n    VariantEdit:\n      properties:\n        variant:\n          $ref: \"#/components/schemas/VariantEditFields\"\n      type: object\n    VariantEditFields:\n      properties:\n        id:\n          description: Unique identifier of the product\n          format: int32\n          type: integer\n        image_id:\n          description: Unique identifier of the product image to associate with this variant\n          format: int32\n          type: integer\n        price:\n          description: Price of the product\n          format: float\n          type: number\n        sku:\n          description: Stock Keeping Unit of the Product's Variant\n          type: string\n        stock:\n          default: 100\n          description: Quantity in stock for the Product's Variant\n          format: int32\n          type: integer\n        stock_unlimited:\n          description: True if the Product's Variant has unlimited stock\n          type: boolean\n      type: object\n    VariantFields:\n      properties:\n        discount:\n          description: Discount of the product\n          format: float\n          type: number\n        id:\n          description: Unique identifier of the product\n          format: int32\n          type: integer\n        price:\n          description: Price of the product\n          format: float\n          type: number\n        sku:\n          description: Stock Keeping Unit of the Product's Variant\n          type: string\n        stock:\n          default: 100\n          description: Quantity in stock for the Product's Variant\n          format: int32\n          type: integer\n        stock_unlimited:\n          description: True if the Product's Variant has unlimited stock\n          type: boolean\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/jumpseller.com-1-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/jumpseller.com-1-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}