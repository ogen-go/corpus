{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/energywebfoundation/ew-link-bond"
		},
		"file": {
			"name": "api_contract.yaml",
			"size": 0,
			"path": "docs/api_contract.yaml",
			"byteSize": 9877,
			"content": "openapi: 3.0.1\ninfo:\n  title: Energy Measurement API\n  description: Company name, project name, purpose of the api creation, date of last\n    update, sometimes code author name.\n  version: \"3\"\nservers: \n  - url: https://api.yourcompany.com/v3\n    description: replace with server endpoint\nsecurity:\n  - basicAuth: []\n  - appID: []\n\npaths:\n  /asset:\n    post:\n      tags: \n        - Asset\n      summary: Create a new asset, returns asset id\n      parameters:\n        - in: query\n          name: role\n          required: true\n          description: Whether this assset is a producer or consumer\n          schema:\n            $ref: '#/components/schemas/AssetRole'\n        - in: query\n          name: manufacturer\n          schema:\n            type: string\n        - in: query\n          name: model\n          schema:\n            type: string\n        - in: query\n          name: serialNumber\n          schema:\n            type: string\n        - in: query\n          name: latitude\n          schema:\n            type: number\n        - in: query\n          name: longitude\n          schema:\n            type: number\n        - in: query\n          name: energyUnit\n          required: true\n          description: Warning Cannot be changed easily using PATCH\n          schema:\n            $ref: '#/components/schemas/EnergyUnit'\n        - in: query\n          name: isAccumulated\n          required: true\n          description: Whether this assset is reporting total measurement since beginning (true) or since previous measurement (false)\n          schema:\n            type: boolean\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Asset'\n          links:\n            GetAssetByID:\n              operationId: getAsset\n              parameters:\n                assetID: '$response.body#/id'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n        501:\n          $ref: '#/components/responses/NotImplemented'\n                \n  /asset/{assetID}:\n    parameters:\n      - in: path\n        name: assetID\n        schema:\n          type: integer\n        required: true\n    get:\n      tags: \n        - Asset\n      summary: Get asset information by id\n      security: [] # No authentication\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Asset'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n        501:\n          $ref: '#/components/responses/NotImplemented'\n    patch:\n      tags:\n        - Asset\n      summary: Update asset information by id\n      parameters:\n        - in: query\n          name: manufacturer\n          schema:\n            type: string\n        - in: query\n          name: model\n          schema:\n            type: string\n        - in: query\n          name: serialNumber\n          schema:\n            type: string\n        - in: query\n          name: latitude\n          schema:\n            type: number\n        - in: query\n          name: longitude\n          schema:\n            type: number\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Asset'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n        501:\n          $ref: '#/components/responses/NotImplemented'\n    delete:\n      tags:\n        - Asset\n      summary: Delete an asset (and it's metering data)\n      responses:\n        200:\n          description: Success\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n        501:\n          $ref: '#/components/responses/NotImplemented'\n                  \n  /asset/{assetID}/energy:\n    parameters:\n      - in: path\n        name: assetID\n        schema:\n          type: integer\n        required: true\n    post:\n      tags: \n        - Energy\n      summary: Publish new energy measurement\n      parameters: \n        - in: query\n          name: energy\n          description: Registered in the asset energy unit\n          required: true\n          schema:\n            type: number\n        - in: query\n          name: measurementTime\n          description: Time of measurement in the device, in RFC 3339 format. ie. 2018-03-14T17:12:20+00:00\n          required: true\n          schema:\n            type: string\n            format: date-time\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Energy'\n        400:\n          $ref: '#/components/responses/BadRequestEnergy'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n        501:\n          $ref: '#/components/responses/NotImplemented'\n    get:\n      tags:\n        - Energy\n      summary: Get energy measurements of asset\n      parameters:\n      - name: timeStart\n        in: query\n        description: Date in RFC 3339 format. ie. 2018-03-14T17:11:19+00:00\n        required: false\n        schema:\n          type: string\n          format: date-time\n      - name: timeEnd\n        in: query\n        description: Date in RFC 3339 format. ie. 2018-03-14T17:12:20+00:00\n        required: false\n        schema:\n          type: string\n          format: date-time\n      - name: accumulated\n        in: query\n        description: Set to True to get one accumulated measurement for the time frame. Note when the assets reports accumulated data, this is equal to the last reading withing the time frame and timeStart does not have an effect.\n        required: false\n        schema:\n          type: boolean\n          default: false\n      - name: limit\n        in: query\n        description: How many items to return at one time. -1 for no limit, TODO add pagination\n        required: false\n        schema:\n          type: integer\n          format: int32\n          default: 5\n\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Energy'\n        400:\n          $ref: '#/components/responses/BadRequestEnergy'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n        501:\n          $ref: '#/components/responses/NotImplemented'\n                \ncomponents:\n  schemas:\n\n    AssetRole:\n      type: string\n      enum:\n        - producer\n        - consumer\n          \n    EnergyUnit:\n      type: string\n      enum:\n        - joule\n        - wattHour\n        - kilowattHour\n        - megawattHour\n        - gigawattHour\n\n    Asset:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          readOnly: true\n        role:\n          $ref: '#/components/schemas/AssetRole'\n        manufacturer:\n          type: string\n        model:\n          type: string\n        serial_number:\n          type: string\n        latitude:\n          type: number\n        longitude:\n          type: number\n        energy_unit:\n          $ref: '#/components/schemas/EnergyUnit'\n        is_accumulated:\n          type: boolean\n          \n    Energy:\n      type: object\n      description: Energy measured at a certain time\n      properties:\n        energy:\n          type: number\n          description: Registered in Mega Watts\n        measurementTime:\n          type: string\n          description: Time of measurement in the device, in RFC 3339 format. ie. 2018-03-14T17:12:20+00:00\n          format: date-time\n          \n    Error:\n      type: object\n      description: Error information\n      properties:\n        error:\n          type: string\n          description: The kind of error that occured\n        message:\n          type: string\n          description: Additional error information\n\n  responses:\n    Unauthorized:\n      description: 'Unauthorized: Check authorisation'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    InternalServerError:\n      description: 'Internal Server Error: Check error message for additional details.'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    NotImplemented:\n      description: 'Not Implemented: The server does not have this message implemented.'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    BadRequest:\n      description: 'Bad Request: All required fields need to be set. | energyUnit needs to be a valid choice.'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    BadRequestEnergy:\n      description: 'Bad Request: All required fields need to be set. | time needs to be valid dateTime string'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    NotFound:\n      description: 'Not Found: Asset with this id doesn`t exist'\n\n  securitySchemes:\n    basicAuth:\n      type: http\n      scheme: basic\n      x-basicInfoFunc: api.controller.authorization.check_basicAuth\n\n    appID:\n      type: apiKey\n      in: header\n      name: X-API-Key\n      x-apikeyInfoFunc: api.controller.authorization.check_appID",
			"canonicalURL": "/github.com/energywebfoundation/ew-link-bond@07cecc6cfb35c7ff96fca574ebfdadf5b865dbd7/-/blob/docs/api_contract.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/energywebfoundation/ew-link-bond/blob/07cecc6cfb35c7ff96fca574ebfdadf5b865dbd7/docs/api_contract.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}