{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/trycoon/liam-esp"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "web/src/html/swagger/swagger.yaml",
			"byteSize": 14427,
			"content": "openapi: 3.0.0\ninfo:\n  version: '1.0'\n  title: liam-esp\n  description: REST-API for liam-esp mower\npaths:\n  /status:\n    get:\n      tags:\n        - System\n      description: returns current status of mower with the most useful information\n      operationId: getStatus\n      responses:\n        '200':\n          description: Current status\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n  /system:\n    get:\n      tags:\n        - System\n      description: returns current system information of mower\n      operationId: getSystem\n      responses:\n        '200':\n          description: Current system information\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System'\n  /state:\n    put:\n      tags:\n        - State\n      description: 'set mowers current state, e.g. command it to start cutting, or go back to charge station.'\n      operationId: setState\n      responses:\n        '200':\n          description: successfully changed to new state\n        '400':\n          description: Bad request (missformed JSON)\n        '422':\n          description: unknown state requested\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SetState'\n  /loglevel:\n    get:\n      tags:\n        - Debugging\n      description: get current loglevel for debugging and faultfinding\n      operationId: getLoglevel\n      responses:\n        '200':\n          description: returns current loglevel\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Loglevel'\n    put:\n      tags:\n        - Debugging\n      description: 'set loglevel for debugging and faultfinding. 0=none, 1=fatal, 2=error, 3=warning, 4=notice, 5=debug, 6=verbose'\n      operationId: setLoglevel\n      responses:\n        '200':\n          description: successfully set loglevel\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Loglevel'\n  /logmessages:\n    get:\n      tags:\n        - Debugging\n      description: get current log messages. Old ones are removed when new ones arrives.\n      operationId: getLogmessages\n      parameters:\n        - in: query\n          name: lastnr\n          schema:\n            type: integer\n            format: uint16\n          required: false\n          description: id of last message received, will fetch next XX messages after that. Zero or no parameter will pick from beginning.\n      responses:\n        '200':\n          description: returns current log messages. New lines are marked with '\\n'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Logmessages'\n  /session:\n    post:\n      tags:\n        - Authentication\n      description: login user and create session. An session cookie will be set that are expected to be used in future request\n      operationId: createSession\n      responses:\n        '201':\n          description: successfully logged in user\n        '400':\n          description: if missing parameters or request is malformed\n        '401':\n          description: if login failed due to wrong credentials\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateSession'          \n    get:\n      tags:\n        - Authentication\n      description: get current session\n      operationId: getSession\n      responses:\n        '200':\n          description: active session available\n        '401':\n          description: no session available\n    delete:\n      tags:\n        - Authentication\n      description: logout session.\n      operationId: deleteSession\n      responses:\n        '200':\n          description: session removed\n  /basic_auth:\n    get:\n      tags:\n        - Authentication\n      description: sign on using HTTP Basic Authentication\n      operationId: getBasicAuth\n      responses:\n        '200':\n          description: authentication succeeded\n        '401':\n          description: authentication failed\n  /apikey:\n    post:\n      tags:\n        - Authentication\n      description: trigger the generation of a new API key to replace the old one for authentication\n      operationId: generateApiKey\n      responses:\n        '201':\n          description: successfully generated a new API key\n  /factoryreset:\n    put:\n      tags:\n        - System\n      description: clear all settings and restart mower as brand new. (ALL SETTING WILL BE LOST!)\n      operationId: factoryreset\n      responses:\n        '200':\n          description: successfully factory reset mower\n  /reboot:\n    put:\n      tags:\n        - System\n      description: 'reboot mower, application will restart but all settings will be left unaffected'\n      operationId: reboot\n      responses:\n        '200':\n          description: successfully begun rebooting mower\n  /manual/forward:\n    put:\n      tags:\n        - Manual\n      description: 'manually drive mower forward, set speed and turnrate'\n      operationId: manualForward\n      responses:\n        '200':\n          description: successfully set mower to forward motion\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ForwardBackwardMotion'\n  /manual/backward:\n    put:\n      tags:\n        - Manual\n      description: 'manually drive mower backward, set speed and turnrate'\n      operationId: manualBackward\n      responses:\n        '200':\n          description: successfully set mower to backward motion\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ForwardBackwardMotion'\n  /manual/stop:\n    put:\n      tags:\n        - Manual\n      description: stop mower when driving manually\n      operationId: manualStop\n      responses:\n        '200':\n          description: successfully stopped mower\n  /manual/cutter_on:\n    put:\n      tags:\n        - Manual\n      description: start cutter on mower\n      operationId: manualStartCutter\n      responses:\n        '200':\n          description: successfully started cutter\n  /manual/cutter_off:\n    put:\n      tags:\n        - Manual\n      description: stop cutter on mower\n      operationId: manualStopCutter\n      responses:\n        '200':\n          description: successfully stopped cutter\n  /history/battery:\n    get:\n      tags:\n        - History\n      description: returns battery level over the past time.\n      operationId: getBatteryHistory\n      responses:\n        '200':\n          description: battery level history\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatteryHistory'\n  /history/position:\n    get:\n      tags:\n        - History\n      description: returns mower GPS-position over the past time.\n      operationId: getPositionHistory\n      responses:\n        '200':\n          description: GPS-position history\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PositionHistory'\n  /schedules:\n    post:\n      tags:\n        - Scheduling\n      description: add mowing schedule to list of schedules. \n      operationId: createScheduleEntry\n      responses:\n        '201':\n          description: successfully added schedule\n        '400':\n          description: if missing parameters or request is malformed\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ScheduleEntry'\n    get:\n      tags:\n        - Scheduling\n      description: returns mower schedules.\n      operationId: getSchedules\n      responses:\n        '200':\n          description: List of schedule entries\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScheduleEntry'\n  /schedules/{position}:                \n      delete:\n        tags:\n          - Scheduling\n        description: remove a schedule entry\n        operationId: deleteScheduleEntry\n        parameters:\n          - in: path\n            name: position\n            schema:\n              type: integer\n            required: true\n            description: position in list (starting with 0)\n        responses:\n          '200':\n            description: schedule entry removed\n    \ncomponents:\n  securitySchemes:\n    basicAuth:\n      type: http\n      scheme: basic\n    apiKeyAuth:\n      type: apiKey\n      in: query\n      name: apikey\n  schemas:\n    Status:\n      type: object\n      properties:\n        state:\n          type: string\n          enum:\n            - DOCKED\n            - LAUNCHING\n            - MOWING\n            - DOCKING\n            - CHARGING\n            - STUCK\n            - FLIPPED\n            - MANUAL\n            - STOP\n            - TEST\n        batteryVoltage:\n          type: number\n          format: float\n        batteryLevel:\n          type: number\n          format: float\n        batteryChargeCurrent:\n          type: number\n          format: float\n        isCharging:\n          type: boolean\n        lastFullyChargeTime:\n          type: integer\n          format: unit32\n        lastChargeDuration:\n          type: integer\n          format: unit32\n        wifiSignal:\n          type: integer\n          format: uint8\n        cutterLoad:\n          type: integer\n          format: uint8\n        cutterRotating:\n          type: boolean\n        uptime:\n          type: integer\n          format: uint32\n        leftWheelSpd:\n          type: integer\n          format: int16\n        rightWheelSpd:\n          type: integer\n          format: int16\n        pitch:\n          type: integer\n          format: int16\n        roll:\n          type: integer\n          format: int16\n        heading:\n          type: integer\n          format: uint16\n        obstacles:\n          type: object\n          description: distance (in centimeters) to possible obstacles, one reading per available sensor\n          properties:\n            left:\n              type: integer\n              format: uint16\n            front:\n              type: integer\n              format: uint16\n            right:\n              type: integer\n              format: uint16                            \n    System:\n      type: object\n      properties:\n        name:\n          type: string\n        version:\n          type: string\n        mowerId:\n          type: string\n        totalHeap:\n          type: integer\n          format: uint32\n        freeHeap:\n          type: integer\n          format: uint32\n        minFreeHeap:\n          type: integer\n          format: uint32          \n        getMaxAllocHeap:\n          type: integer\n          format: uint32          \n        apiKey:\n          type: string\n        localTime:\n          type: string\n        settings:\n          type: object\n          properties:\n            batteryFullVoltage:\n              type: number\n              format: float\n            batteryEmptyVoltage:\n              type: number\n              format: float\n    SetState:\n      type: object\n      properties:\n        state:\n          type: string\n          enum:\n            - DOCKED\n            - LAUNCHING\n            - MOWING\n            - DOCKING\n            - CHARGING\n            - STUCK\n            - FLIPPED\n            - MANUAL\n            - STOP\n            - TEST\n    Loglevel:\n      type: object\n      properties:\n        level:\n          type: integer\n          format: unit8\n          enum:\n            - 0\n            - 1\n            - 2\n            - 3\n            - 4\n            - 5\n            - 6\n    Logmessages:\n      type: object\n      properties:\n        messages:\n          type: array\n          description: log messages (max 20 per request)\n          items:\n            type: string\n        lastnr:\n          type: integer\n          format: uint16\n        total:\n          type: integer\n          format: uint16\n    ForwardBackwardMotion:\n      type: object\n      properties:\n        speed:\n          type: integer\n          format: int8\n          description: 0-100%\n        turnrate:\n          type: integer\n          format: int8\n          description: '-1=\u003e-100 left, 1=\u003e100 right. 0 = don''t turn.'\n        smooth:\n          type: boolean\n          description: smoothly take us to target speed\n    BatteryHistory:\n      type: object\n      properties:\n        samples:\n          type: object\n          properties:\n            time:\n              type: array\n              description: time in milliseconds since the last reboot\n              items:\n                type: integer\n                format: uint32\n            value:\n              type: array\n              description: in volt\n              items:\n                type: number\n                format: float\n    PositionHistory:\n      type: object\n      properties:\n        samples:\n          type: array\n          items:\n            type: object\n            properties:\n              t:\n                type: integer\n                format: uint32\n                description: time in milliseconds since the last reboot\n              lt:\n                type: number\n                format: double\n                description: GPS-latitude\n              lg:\n                type: number\n                format: double\n                description: GPS-longitude\n    CreateSession:\n      type: object\n      properties:\n        username:\n          type: string\n        password:\n          type: string\n    ScheduleEntry:\n      type: object\n      properties:\n        activeWeekdays:\n          type: array\n          description: array of weekdays (starting with monday, tuesday...). True means mowing should be conducted this day of the week.\n          items:\n            type: boolean\n          minItems: 7\n          maxItems: 7\n        startTime:\n          type: string\n          description: time when mowing should begin. In the format \"HH:MM\", and we use a 24 hours notation.\n        stopTime:\n          type: string\n          description: time when mowing should end. In the format \"HH:MM\", and we use a 24 hours notation.\nsecurity:\n  - basicAuth: []\n  - apiKeyAuth: []\nservers:\n  - description: Liam mower\n    url: /api/v1\n  - description: Running local mock\n    url: 'http://localhost:8080/api/v1'\n",
			"canonicalURL": "/github.com/trycoon/liam-esp@08e543e89b853a0b2b1df0b2dce69747d89a9063/-/blob/web/src/html/swagger/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/trycoon/liam-esp/blob/08e543e89b853a0b2b1df0b2dce69747d89a9063/web/src/html/swagger/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}