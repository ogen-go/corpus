{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/losikov/api-example"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "config/openapi.yml",
			"byteSize": 4783,
			"content": "openapi: 3.0.3\ninfo:\n  title: Backend API example\n  description: Backend API example API declaration\n  termsOfService: http://swagger.io/terms/\n  contact:\n    email: losikov@gmail.com\n  license:\n    name: MIT\n    url: https://opensource.org/licenses/MIT\n  version: 1.0.0\nexternalDocs:\n  description: Find out more about Swagger\n  url: http://swagger.io\nservers:\n- url: /api/v1\n \ntags:\n  - name: greeting\n    description: Greeting APIs\n \n  - name: user\n    description: User APIs\n \npaths:\n  /hello:\n    get:\n      description: Returns 'Hello \u003cname\u003e/stranger!!!' to the caller\n      tags: \n        - greeting\n      operationId: hello\n      parameters:\n      - name: name\n        required: false\n        in: query\n        description: The name of a caller\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HelloResponse'\n\n  /goodbye:\n    get:\n      description: Returns 'Goodbye \\\u003cname\\\u003e!!!' to the authenticated caller\n      tags: \n        - greeting\n      operationId: goodbye\n      security: \n        - bearerAuth: []\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HelloResponse'\n  /login:\n    post:\n      summary: Login\n      tags:\n        - user\n      operationId: login\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              additionalProperties: false\n              required:\n                - email\n                - password\n              properties:\n                email:\n                  type: string\n                  format: email\n                password:\n                  type: string\n      responses:\n        200:\n          description: Success\n          headers:\n            X-Expires-After:\n              description: date in UTC when token expires\n              required: true\n              schema:\n                type: string\n                format: date-time\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: false\n                required:\n                  - userId\n                properties:\n                  userId:\n                    type: string\n                  token:\n                    type: string\n                    format: '^[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+/=]*$'\n        404:\n          description: Invalid Login/Password\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FailResponse'\n        500:\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FailResponse'\n \n  /user:\n    post:\n      summary: Create User\n      tags:\n        - user\n      operationId: createUser\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              additionalProperties: false\n              required:\n                - email\n                - password\n                - name\n              properties:\n                email:\n                  type: string\n                  format: email\n                password:\n                  type: string\n                name:\n                  type: string\n      responses:\n        201:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: false\n                required:\n                  - userId\n                properties:\n                  userId:\n                    type: string\n        409:\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FailResponse'\n        500:\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FailResponse'\n\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n\n  schemas:\n    HelloResponse:\n      type: object\n      additionalProperties: false\n      required:\n        - message\n      properties:\n        message:\n          type: string\n\n    FailResponse:\n      type: object\n      additionalProperties: false\n      required:\n        - success\n        - error\n      properties:\n        success:\n          type: boolean\n        error:\n          type: string\n",
			"canonicalURL": "/github.com/losikov/api-example@25da953a0f9af326baf3cc7e75401307b68afa91/-/blob/config/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/losikov/api-example/blob/25da953a0f9af326baf3cc7e75401307b68afa91/config/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}