{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/TeamWanari/tutelar"
		},
		"file": {
			"name": "swagger.yml",
			"size": 0,
			"path": "swagger.yml",
			"byteSize": 20135,
			"content": "openapi: 3.0.1\r\ninfo:\r\n  title: Tutelar\r\n  description: Auth microservice\r\n  version: '0.1'\r\nservers:\r\n  - url: 'https://lvh.me:9443'\r\ncomponents:\r\n  securitySchemes:\r\n    bearerAuth:\r\n      type: http\r\n      scheme: bearer\r\n      bearerFormat: JWT\r\n  schemas:\r\n    TokenData:\r\n      type: object\r\n      properties:\r\n        token:\r\n          type: string\r\n        refreshToken:\r\n          type: string\r\n      example:\r\n        {\r\n          \"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1NTM1Mjk4MjcsImlkIjoiODVhYjE4MjEtODVjYy00NTc5LTg2OWQtZDdkNjU1ODM5ZjhhIn0.TMwADN7addtQPo39KcbF9yVrk-CHv4eSsiA8wNJxfsk\",\r\n          \"refreshToken\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1NTM1Mjk4MjcsImlkIjoiODVhYjE4MjEtODVjYy00NTc5LTg2OWQtZDdkNjU1ODM5ZjhhIn0.TMwADN7addtQPo39KcbF9yVrk-CHv4eSsiA8wNJxfsk\"\r\n        }\r\n    AccessToken:\r\n      type: object\r\n      properties:\r\n        accessToken:\r\n          type: string\r\n      example:\r\n        {\r\n          \"accessToken\":\"MTQ0NjJkZmQ5OTM2NDE1ZTZjNGZmZjI3\"\r\n        }\r\npaths:\r\n  /core/delete:\r\n    post:\r\n      description: Delete own user\r\n      security:\r\n        - bearerAuth: []\r\n      responses:\r\n        '200':\r\n          description: Success\r\n  /core/unlink:\r\n    post:\r\n      description: Unlink an account from user\r\n      security:\r\n        - bearerAuth: []\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              type: object\r\n              required: [\"authType\"]\r\n              properties:\r\n                authType:\r\n                  type: string\r\n            examples:\r\n              '0':\r\n                value: \u003e-\r\n                  {\"authType\":\"github\"}\r\n      responses:\r\n        '200':\r\n          description: Success\r\n  /core/refresh-token:\r\n    post:\r\n      description: Get new tokens by refresh token\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              type: object\r\n              required: [\"refreshToken\"]\r\n              properties:\r\n                refreshToken:\r\n                  type: string\r\n            examples:\r\n              '0':\r\n                value: \u003e-\r\n                  {\"refreshToken\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1NTM1Mjk4MjcsImlkIjoiODVhYjE4MjEtODVjYy00NTc5LTg2OWQtZDdkNjU1ODM5ZjhhIn0.TMwADN7addtQPo39KcbF9yVrk-CHv4eSsiA8wNJxfsk\"}\r\n      responses:\r\n        '200':\r\n          description: User tokens\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/TokenData'\r\n  /basic/register:\r\n    post:\r\n      description: Simple user-pass register\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              type: object\r\n              required: [\"username\", \"password\"]\r\n              properties:\r\n                password:\r\n                  type: string\r\n                data:\r\n                  type: object\r\n                username:\r\n                  type: string\r\n                refreshToken:\r\n                  type: string\r\n            examples:\r\n              '0':\r\n                value: \u003e-\r\n                  {\"username\":\"bob\",\"password\":\"pw\",\"data\":{\"fullname\":\"Bob Name\"}}\r\n      responses:\r\n        '200':\r\n          description: User tokens\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/TokenData'\r\n  /basic/login:\r\n    post:\r\n      description: Simple user-pass login\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              type: object\r\n              required: [\"password\", \"username\"]\r\n              properties:\r\n                password:\r\n                  type: string\r\n                data:\r\n                  type: object\r\n                username:\r\n                  type: string\r\n                refreshToken:\r\n                  type: string\r\n            examples:\r\n              '0':\r\n                value: \u003e-\r\n                  {\"username\":\"bob\",\"password\":\"pw\",\"data\":{\"fullname\":\"Bob  Name\"}}\r\n      responses:\r\n        '200':\r\n          description: User tokens\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/TokenData'\r\n  /email/send-register:\r\n    post:\r\n      description: Email-pass send register email\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              type: object\r\n              required: [\"email\"]\r\n              properties:\r\n                email:\r\n                  type: string\r\n            examples:\r\n              '0':\r\n                value: '{\"email\": \"bob@bobemail.com\"}'\r\n      responses:\r\n        '200':\r\n          description: Email sent\r\n  /email/register:\r\n    post:\r\n      description: Email-pass register\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              type: object\r\n              required: [\"token\", \"password\"]\r\n              properties:\r\n                password:\r\n                  type: string\r\n                data:\r\n                  type: object\r\n                token:\r\n                  type: string\r\n                refreshToken:\r\n                  type: string\r\n            examples:\r\n              '0':\r\n                value: \u003e-\r\n                  {\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1NTM1Mjk4ODQsImVtYWlsIjoiYm9iQGJvYmVtYWlsLmNvbSIsInR5cGUiOiJyZWdpc3RlciJ9.ERObZTjxTxJk9XtttWobylBFI4nbm3dZymoT6jy5iMk\",\r\n                  \"password\": \"pw\", \"data\": {\"fullname\": \"Bob Name\"}}\r\n      responses:\r\n        '200':\r\n          description: User tokens\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/TokenData'\r\n  /email/login:\r\n    post:\r\n      description: Email-pass login\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              type: object\r\n              required: [\"email\", \"password\"]\r\n              properties:\r\n                password:\r\n                  type: string\r\n                data:\r\n                  type: object\r\n                email:\r\n                  type: string\r\n                refreshToken:\r\n                  type: string\r\n            examples:\r\n              '0':\r\n                value: \u003e-\r\n                  {\"email\":\"bob@bobemail.com\", \"password\": \"pw\", \"data\":\r\n                  {\"fullname\": \"Bob Name\"}}\r\n      responses:\r\n        '200':\r\n          description: User tokens\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/TokenData'\r\n  /email/send-reset-password:\r\n    post:\r\n      description: Email-pass send reset password email\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              type: object\r\n              required: [\"email\"]\r\n              properties:\r\n                email:\r\n                  type: string\r\n            examples:\r\n              '0':\r\n                value: '{\"email\":\"bob@bobemail.com\"}'\r\n      responses:\r\n        '200':\r\n          description: Email sent\r\n  /email/reset-password:\r\n    post:\r\n      description: Email-pass change the password\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              type: object\r\n              required: [\"token\", \"password\"]\r\n              properties:\r\n                password:\r\n                  type: string\r\n                data:\r\n                  type: object\r\n                token:\r\n                  type: string\r\n            examples:\r\n              '0':\r\n                value: \u003e-\r\n                  {\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1NTM1MzAxOTMsImVtYWlsIjoiYm9iQGJvYmVtYWlsLmNvbSIsInR5cGUiOiJyZXNldCJ9.Z-Y-S27wfTDJyuSC0QiD0ST9W-FjfTg5phoQO9Wgy10\",\r\n                  \"password\": \"newpw\", \"data\": {\"fullname\": \"Bob Name\"}}\r\n      responses:\r\n        '200':\r\n          description: User tokens\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/TokenData'\r\n  /ldap/login:\r\n    post:\r\n      description: LDAP login\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              type: object\r\n              required: [\"username\", \"password\"]\r\n              properties:\r\n                password:\r\n                  type: string\r\n                username:\r\n                  type: string\r\n                refreshToken:\r\n                  type: string\r\n            examples:\r\n              '0':\r\n                value: '{\"username\":\"bob\",\"password\":\"bobpw\"}'\r\n      responses:\r\n        '200':\r\n          description: User tokens\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/TokenData'\r\n  /ldap/users:\r\n    get:\r\n      description: List all LDAP user\r\n      responses:\r\n        '200':\r\n          description: LDAP users with data from LDAP and tutelar id if exists\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  type: object\r\n                  properties:\r\n                    id:\r\n                      type: string\r\n                    ldapData:\r\n                      type: object\r\n                  required:\r\n                    - ldapData\r\n              examples:\r\n                '0':\r\n                  value:\r\n                    - id: '93571113-42d5-4e88-b347-95dafda4b6eb'\r\n                      ldapData:\r\n                        cn: bob\r\n                        givenName: Bob\r\n                        memberOf:\r\n                          - 'cn=group1,ou=groups,dc=wanari,dc=com'\r\n                        sn: Dilday\r\n                    - ldapData:\r\n                        cn: alice\r\n                        givenName: Alice\r\n                        memberOf:\r\n                          - 'cn=group1,ou=groups,dc=wanari,dc=com'\r\n                          - 'cn=group2,ou=groups,dc=wanari,dc=com'\r\n                        sn: Smith\r\n  /totp/register:\r\n    post:\r\n      description: TOTP register\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              type: object\r\n              required: [\"username\", \"password\", \"token\"]\r\n              properties:\r\n                password:\r\n                  type: string\r\n                token:\r\n                  type: string\r\n                data:\r\n                  type: object\r\n                username:\r\n                  type: string\r\n                refreshToken:\r\n                  type: string\r\n            examples:\r\n              '0':\r\n                value: \u003e-\r\n                  {\"username\":\"bob\",\"password\":\"pw\",\"token\": \"asdfgh9876\", \"data\":{\"fullname\":\"Bob Name\"}}\r\n      responses:\r\n        '200':\r\n          description: User tokens\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/TokenData'\r\n  /totp/qr-code:\r\n    get:\r\n      description: Generate QR code for register\r\n      responses:\r\n        '200':\r\n          description: QR code token and uri\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  uri:\r\n                    type: string\r\n                  token:\r\n                    type: string\r\n  /totp/login:\r\n    post:\r\n      description: TOTP login\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              type: object\r\n              required: [\"username\", \"password\"]\r\n              properties:\r\n                password:\r\n                  type: string\r\n                username:\r\n                  type: string\r\n                refreshToken:\r\n                  type: string\r\n            examples:\r\n              '0':\r\n                value: '{\"username\":\"bob\",\"password\":\"665483\"}'\r\n      responses:\r\n        '200':\r\n          description: User tokens\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/TokenData'\r\n  /github/login:\r\n    get:\r\n      description: Login with GitHub\r\n      parameters:\r\n        - name: refresh_token\r\n          in: query\r\n          schema:\r\n            type: string\r\n      responses:\r\n        default:\r\n          description: Redirect to GitHub login page\r\n    post:\r\n      description: Login with GitHub access token\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              type: object\r\n              required: [\"accessToken\"]\r\n              properties:\r\n                accessToken:\r\n                  type: string\r\n                refreshToken:\r\n                  type: string\r\n            examples:\r\n              '0':\r\n                value: '{\"accessToken\":\"TOKEN\"}'\r\n      responses:\r\n        '200':\r\n          description: User tokens\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/TokenData'\r\n  /github/callback:\r\n    get:\r\n      description: GitHub login callback\r\n      parameters:\r\n        - name: code\r\n          in: query\r\n          schema:\r\n            type: string\r\n        - name: state\r\n          in: query\r\n          schema:\r\n            type: string\r\n      responses:\r\n        default:\r\n          description: Redirect to frontend with user token\r\n  /github/token:\r\n    get:\r\n      description: Get Github access token for userId\r\n      parameters:\r\n        - name: userId\r\n          in: query\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: Access token\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/AccessToken'\r\n  /facebook/login:\r\n    get:\r\n      description: Login with Facebook\r\n      parameters:\r\n        - name: refresh_token\r\n          in: query\r\n          schema:\r\n            type: string\r\n      responses:\r\n        default:\r\n          description: Redirect to Facebook login page\r\n    post:\r\n      description: Login with Facebook access token\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              type: object\r\n              required: [\"accessToken\"]\r\n              properties:\r\n                accessToken:\r\n                  type: string\r\n                refreshToken:\r\n                  type: string\r\n            examples:\r\n              '0':\r\n                value: '{\"accessToken\":\"TOKEN\"}'\r\n      responses:\r\n        '200':\r\n          description: User tokens\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/TokenData'\r\n  /facebook/callback:\r\n    get:\r\n      description: Facebook login callback\r\n      parameters:\r\n        - name: code\r\n          in: query\r\n          schema:\r\n            type: string\r\n        - name: state\r\n          in: query\r\n          schema:\r\n            type: string\r\n      responses:\r\n        default:\r\n          description: Redirect to frontend with user token\r\n  /facebook/token:\r\n    get:\r\n      description: Get Facebook access token for userId\r\n      parameters:\r\n        - name: userId\r\n          in: query\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: Access token\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/AccessToken'\r\n  /google/login:\r\n    get:\r\n      description: Login with Google\r\n      parameters:\r\n        - name: refresh_token\r\n          in: query\r\n          schema:\r\n            type: string\r\n      responses:\r\n        default:\r\n          description: Redirect to Google login page\r\n    post:\r\n      description: Login with Google access token\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              type: object\r\n              required: [\"accessToken\"]\r\n              properties:\r\n                accessToken:\r\n                  type: string\r\n                refreshToken:\r\n                  type: string\r\n            examples:\r\n              '0':\r\n                value: '{\"accessToken\":\"TOKEN\"}'\r\n      responses:\r\n        '200':\r\n          description: User tokens\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/TokenData'\r\n  /google/callback:\r\n    get:\r\n      description: Google login callback\r\n      parameters:\r\n        - name: code\r\n          in: query\r\n          schema:\r\n            type: string\r\n        - name: state\r\n          in: query\r\n          schema:\r\n            type: string\r\n      responses:\r\n        default:\r\n          description: Redirect to frontend with user token\r\n  /google/token:\r\n    get:\r\n      description: Get Google access token for userId\r\n      parameters:\r\n        - name: userId\r\n          in: query\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: Access token\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/AccessToken'\r\n  /microsoft/login:\r\n    get:\r\n      description: Login with Microsoft\r\n      parameters:\r\n        - name: refresh_token\r\n          in: query\r\n          schema:\r\n            type: string\r\n      responses:\r\n        default:\r\n          description: Redirect to Microsoft login page\r\n    post:\r\n      description: Login with Microsoft access token\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              type: object\r\n              required: [\"accessToken\"]\r\n              properties:\r\n                accessToken:\r\n                  type: string\r\n                refreshToken:\r\n                  type: string\r\n            examples:\r\n              '0':\r\n                value: '{\"accessToken\":\"TOKEN\"}'\r\n      responses:\r\n        '200':\r\n          description: User tokens\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/TokenData'\r\n  /microsoft/callback:\r\n    get:\r\n      description: Microsoft login callback\r\n      parameters:\r\n        - name: code\r\n          in: query\r\n          schema:\r\n            type: string\r\n        - name: state\r\n          in: query\r\n          schema:\r\n            type: string\r\n      responses:\r\n        default:\r\n          description: Redirect to frontend with user token\r\n  /microsoft/token:\r\n    get:\r\n      description: Get Microsoft access token for userId\r\n      parameters:\r\n        - name: userId\r\n          in: query\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: Access token\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/AccessToken'\r\n        '401':\r\n          description: Unauthorized\r\n        '404':\r\n          description: Account doesn't exist for given userId\r\n  /healthCheck:\r\n    get:\r\n      description: Service status page\r\n      responses:\r\n        '200':\r\n          description: Service status\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  database:\r\n                    type: boolean\r\n                  success:\r\n                    type: boolean\r\n                  version:\r\n                    type: string\r\n                  buildAtString:\r\n                    type: string\r\n                  buildAtMillis:\r\n                    type: number\r\n                  commitHash:\r\n                    type: string\r\n              examples:\r\n                '0':\r\n                  value: \u003e-\r\n                    {\"database\":true,\"success\":true,\"version\":\"development\",\"buildAtString\":\"2019-05-05 08:07:09.309\",\"buildAtMillis\":1557043629309,\"commitHash\":\"7919619d80b76ff5804e30880bea696cd605a635\"}\r\n",
			"canonicalURL": "/github.com/TeamWanari/tutelar@7eb281e82941a2796e0daeccc816a0946992a61d/-/blob/swagger.yml",
			"externalURLs": [
				{
					"url": "https://github.com/TeamWanari/tutelar/blob/7eb281e82941a2796e0daeccc816a0946992a61d/swagger.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}