{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/anchore/kubernetes-admission-controller"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "pkg/anchore/client/api/openapi.yaml",
			"byteSize": 176781,
			"content": "openapi: 3.0.1\ninfo:\n  contact:\n    email: nurmi@anchore.com\n  description: This is the Anchore Engine API. Provides the primary external API for\n    users of the service.\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  title: Anchore Engine API Server\n  version: 0.1.12\nservers:\n- url: /\nsecurity:\n- basicAuth: []\ntags:\n- description: Subscription Management\n  name: Subscriptions\n- description: Policy Management\n  name: Policies\n- description: Image Management\n  name: Images\n- description: View Image Content\n  name: Image Content\n- description: Vulnerability checks and reports\n  name: Vulnerabilities\n- description: Evaluate images against policies\n  name: Policy Evaluation\n- description: Registry Management\n  name: Registries\n- description: Repository Credential Management\n  name: Repository Credentials\n- description: System Management\n  name: System\n- description: Service Management\n  name: Services\n- description: Resource Summaries\n  name: Summaries\n- description: View and delete events\n  name: Events\n- description: Resource Queries\n  name: Queries\n- description: Manage Accounts, Users, and Credentials\n  name: User Management\n- description: Get and operate on the authenticated user's identity\n  name: Identity\n- description: Data Archiving Management\n  name: Archives\npaths:\n  /:\n    get:\n      description: Simple status check\n      operationId: ping\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: string\n          description: Version check response, returns the api version prefix (e.g.\n            'v1')\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.system\n      x-anchore-authz-action: None\n  /health:\n    get:\n      description: Health check, returns 200 and no body if service is running\n      operationId: health_noop\n      responses:\n        200:\n          content: {}\n          description: Empty body on success\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.system\n      x-anchore-authz-action: None\n  /version:\n    get:\n      description: Returns the version object for the service, including db schema\n        version info\n      operationId: version_noop\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceVersion'\n          description: Version object describing version state\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.system\n      x-anchore-authz-action: None\n  /policies:\n    get:\n      description: List all saved policy bundles\n      operationId: list_policies\n      parameters:\n      - description: Include policy bundle detail in the form of the full bundle content\n          for each entry\n        in: query\n        name: detail\n        schema:\n          type: boolean\n      - description: An account name to change the resource scope of the request to\n          that account, if permissions allow (admin only)\n        in: header\n        name: x-anchore-account\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PolicyBundleList'\n          description: Policy listing\n      summary: List policies\n      tags:\n      - Policies\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.policies\n      x-anchore-authz-action: listPolicies\n    post:\n      description: Adds a new policy bundle to the system\n      operationId: add_policy\n      parameters:\n      - description: An account name to change the resource scope of the request to\n          that account, if permissions allow (admin only)\n        in: header\n        name: x-anchore-account\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PolicyBundle'\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PolicyBundleRecord'\n          description: Saved bundle\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal Error\n      summary: Add a new policy\n      tags:\n      - Policies\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.policies\n      x-anchore-authz-action: createPolicy\n      x-codegen-request-body-name: bundle\n  /policies/{policyId}:\n    delete:\n      description: Delete the specified policy\n      operationId: delete_policy\n      parameters:\n      - in: path\n        name: policyId\n        required: true\n        schema:\n          type: string\n      - description: An account name to change the resource scope of the request to\n          that account, if permissions allow (admin only)\n        in: header\n        name: x-anchore-account\n        schema:\n          type: string\n      responses:\n        200:\n          content: {}\n          description: Delete success\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Policy not found to delete\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal Error\n      summary: Delete policy\n      tags:\n      - Policies\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.policies\n      x-anchore-authz-action: deletePolicy\n    get:\n      description: Get the policy bundle content\n      operationId: get_policy\n      parameters:\n      - in: path\n        name: policyId\n        required: true\n        schema:\n          type: string\n      - description: Include policy bundle detail in the form of the full bundle content\n          for each entry\n        in: query\n        name: detail\n        schema:\n          type: boolean\n      - description: An account name to change the resource scope of the request to\n          that account, if permissions allow (admin only)\n        in: header\n        name: x-anchore-account\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PolicyBundleList'\n          description: A list with a single fetched policy bundle record\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal Error\n      summary: Get specific policy\n      tags:\n      - Policies\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.policies\n      x-anchore-authz-action: getPolicy\n    put:\n      description: Update/replace and existing policy\n      operationId: update_policy\n      parameters:\n      - in: path\n        name: policyId\n        required: true\n        schema:\n          type: string\n      - description: Mark policy as active\n        in: query\n        name: active\n        schema:\n          type: boolean\n      - description: An account name to change the resource scope of the request to\n          that account, if permissions allow (admin only)\n        in: header\n        name: x-anchore-account\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PolicyBundleRecord'\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PolicyBundleList'\n          description: A list with a single updated policy bundle record\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal Error\n      summary: Update policy\n      tags:\n      - Policies\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.policies\n      x-anchore-authz-action: updatePolicy\n      x-codegen-request-body-name: bundle\n  /subscriptions:\n    get:\n      operationId: list_subscriptions\n      parameters:\n      - description: filter only subscriptions matching key\n        in: query\n        name: subscription_key\n        schema:\n          type: string\n      - description: filter only subscriptions matching type\n        in: query\n        name: subscription_type\n        schema:\n          type: string\n      - description: An account name to change the resource scope of the request to\n          that account, if permissions allow (admin only)\n        in: header\n        name: x-anchore-account\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubscriptionList'\n          description: Subscription listing\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal Error\n      summary: List all subscriptions\n      tags:\n      - Subscriptions\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.subscriptions\n      x-anchore-authz-action: listSubscriptions\n    post:\n      description: Create a new subscription to watch a tag and get notifications\n        of changes\n      operationId: add_subscription\n      parameters:\n      - description: An account name to change the resource scope of the request to\n          that account, if permissions allow (admin only)\n        in: header\n        name: x-anchore-account\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SubscriptionRequest'\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubscriptionList'\n          description: Subscription add success\n      summary: Add a subscription of a specific type\n      tags:\n      - Subscriptions\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.subscriptions\n      x-anchore-authz-action: createSubscription\n      x-codegen-request-body-name: subscription\n  /subscriptions/{subscriptionId}:\n    delete:\n      operationId: delete_subscription\n      parameters:\n      - in: path\n        name: subscriptionId\n        required: true\n        schema:\n          type: string\n      - description: An account name to change the resource scope of the request to\n          that account, if permissions allow (admin only)\n        in: header\n        name: x-anchore-account\n        schema:\n          type: string\n      responses:\n        200:\n          content: {}\n          description: Delete success\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal Error\n      summary: Delete subscriptions of a specific type\n      tags:\n      - Subscriptions\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.subscriptions\n      x-anchore-authz-action: deleteSubscription\n    get:\n      operationId: get_subscription\n      parameters:\n      - in: path\n        name: subscriptionId\n        required: true\n        schema:\n          type: string\n      - description: An account name to change the resource scope of the request to\n          that account, if permissions allow (admin only)\n        in: header\n        name: x-anchore-account\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubscriptionList'\n          description: Filtered subscription list by type\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal Error\n      summary: Get a specific subscription set\n      tags:\n      - Subscriptions\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.subscriptions\n      x-anchore-authz-action: getSubscription\n    put:\n      operationId: update_subscription\n      parameters:\n      - in: path\n        name: subscriptionId\n        required: true\n        schema:\n          type: string\n      - description: An account name to change the resource scope of the request to\n          that account, if permissions allow (admin only)\n        in: header\n        name: x-anchore-account\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SubscriptionUpdate'\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubscriptionList'\n          description: Subscription add success\n      summary: Update an existing and specific subscription\n      tags:\n      - Subscriptions\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.subscriptions\n      x-anchore-authz-action: updateSubscription\n      x-codegen-request-body-name: subscription\n  /summaries/imagetags:\n    get:\n      description: List all image tags visible to the user\n      operationId: list_imagetags\n      parameters:\n      - description: An account name to change the resource scope of the request to\n          that account, if permissions allow (admin only)\n        in: header\n        name: x-anchore-account\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AnchoreImageTagSummaryList'\n          description: successful operation\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal Error\n      summary: List all visible image digests and tags\n      tags:\n      - Summaries\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.images\n      x-anchore-authz-action: listImages\n  /images:\n    get:\n      description: List all images visible to the user\n      operationId: list_images\n      parameters:\n      - description: Include image history in the response\n        in: query\n        name: history\n        schema:\n          type: boolean\n      - description: Full docker-pull string to filter results by (e.g. docker.io/library/nginx:latest,\n          or myhost.com:5000/testimages:v1.1.1)\n        in: query\n        name: fulltag\n        schema:\n          type: string\n      - description: An account name to change the resource scope of the request to\n          that account, if permissions allow (admin only)\n        in: header\n        name: x-anchore-account\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ImageFilter'\n        required: false\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AnchoreImageList'\n          description: successful operation\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal Error\n      summary: List all visible images\n      tags:\n      - Images\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.images\n      x-anchore-authz-action: listImages\n      x-codegen-request-body-name: image_to_get\n    post:\n      description: Creates a new analysis task that is executed asynchronously\n      operationId: add_image\n      parameters:\n      - description: Override any existing entry in the system\n        in: query\n        name: force\n        schema:\n          type: boolean\n      - description: Instruct engine to automatically begin watching the added tag\n          for updates from registry\n        in: query\n        name: autosubscribe\n        schema:\n          type: boolean\n      - description: An account name to change the resource scope of the request to\n          that account, if permissions allow (admin only)\n        in: header\n        name: x-anchore-account\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ImageAnalysisRequest'\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AnchoreImageList'\n          description: Successfully added image to analysis queue\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal Error\n      summary: Submit a new image for analysis by the engine\n      tags:\n      - Images\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.images\n      x-anchore-authz-action: createImage\n      x-codegen-request-body-name: image\n  /import/images:\n    post:\n      operationId: import_image_archive\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                archive_file:\n                  description: anchore image tar archive.\n                  format: binary\n                  type: string\n              required:\n              - archive_file\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AnchoreImageList'\n          description: Successfully imported image to the engine\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal Error\n      summary: Import an anchore image tar.gz archive file.\n      tags:\n      - Import\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.images\n      x-anchore-authz-action: importImage\n  /images/{imageDigest}:\n    delete:\n      operationId: delete_image\n      parameters:\n      - in: path\n        name: imageDigest\n        required: true\n        schema:\n          type: string\n      - in: query\n        name: force\n        schema:\n          type: boolean\n      - description: An account name to change the resource scope of the request to\n          that account, if permissions allow (admin only)\n        in: header\n        name: x-anchore-account\n        schema:\n          type: string\n      responses:\n        200:\n          content: {}\n          description: Image deletion success\n      summary: Delete an image analysis\n      tags:\n      - Images\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.images\n      x-anchore-authz-action: deleteImage\n    get:\n      operationId: get_image\n      parameters:\n      - in: path\n        name: imageDigest\n        required: true\n        schema:\n          type: string\n      - description: An account name to change the resource scope of the request to\n          that account, if permissions allow (admin only)\n        in: header\n        name: x-anchore-account\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AnchoreImageList'\n          description: Image lookup success\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal error\n      summary: Get image metadata\n      tags:\n      - Images\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.images\n      x-anchore-authz-action: getImage\n  /images/by_id/{imageId}:\n    delete:\n      operationId: delete_image_by_imageId\n      parameters:\n      - in: path\n        name: imageId\n        required: true\n        schema:\n          type: string\n      - in: query\n        name: force\n        schema:\n          type: boolean\n      - description: An account name to change the resource scope of the request to\n          that account, if permissions allow (admin only)\n        in: header\n        name: x-anchore-account\n        schema:\n          type: string\n      responses:\n        200:\n          content: {}\n          description: Image deletion success\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal error\n      summary: Delete image by docker imageId\n      tags:\n      - Images\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.images\n      x-anchore-authz-action: deleteImage\n    get:\n      operationId: get_image_by_imageId\n      parameters:\n      - in: path\n        name: imageId\n        required: true\n        schema:\n          type: string\n      - description: An account name to change the resource scope of the request to\n          that account, if permissions allow (admin only)\n        in: header\n        name: x-anchore-account\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AnchoreImageList'\n          description: Image lookup success\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal error\n      summary: Lookup image by docker imageId\n      tags:\n      - Images\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.images\n      x-anchore-authz-action: getImage\n  /images/{imageDigest}/check:\n    get:\n      description: Get the policy evaluation for the given image\n      operationId: get_image_policy_check\n      parameters:\n      - in: path\n        name: imageDigest\n        required: true\n        schema:\n          type: string\n      - in: query\n        name: policyId\n        schema:\n          type: string\n      - in: query\n        name: tag\n        required: true\n        schema:\n          type: string\n      - in: query\n        name: detail\n        schema:\n          type: boolean\n      - in: query\n        name: history\n        schema:\n          type: boolean\n      - in: query\n        name: interactive\n        schema:\n          type: boolean\n      - description: An account name to change the resource scope of the request to\n          that account, if permissions allow (admin only)\n        in: header\n        name: x-anchore-account\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PolicyEvaluationList'\n          description: Policy evaluation success\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal Error\n      summary: Check policy evaluation status for image\n      tags:\n      - Images\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.images\n      x-anchore-authz-action: getImageEvaluation\n  /images/by_id/{imageId}/check:\n    get:\n      description: Get the policy evaluation for the given image\n      operationId: get_image_policy_check_by_imageId\n      parameters:\n      - in: path\n        name: imageId\n        required: true\n        schema:\n          type: string\n      - in: query\n        name: policyId\n        schema:\n          type: string\n      - in: query\n        name: tag\n        required: true\n        schema:\n          type: string\n      - in: query\n        name: detail\n        schema:\n          type: boolean\n      - in: query\n        name: history\n        schema:\n          type: boolean\n      - description: An account name to change the resource scope of the request to\n          that account, if permissions allow (admin only)\n        in: header\n        name: x-anchore-account\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PolicyEvaluationList'\n          description: Policy evaluation success\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal Error\n      summary: Check policy evaluation status for image\n      tags:\n      - Images\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.images\n      x-anchore-authz-action: getImageEvaluation\n  /images/{imageDigest}/vuln:\n    get:\n      operationId: get_image_vulnerability_types\n      parameters:\n      - in: path\n        name: imageDigest\n        required: true\n        schema:\n          type: string\n      - description: An account name to change the resource scope of the request to\n          that account, if permissions allow (admin only)\n        in: header\n        name: x-anchore-account\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                items:\n                  enum:\n                  - all\n                  - os\n                  - non-os\n                  type: string\n                type: array\n          description: Vulnerability listing for the image\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal Error\n      summary: Get vulnerability types\n      tags:\n      - Images\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.images\n      x-anchore-authz-action: getImage\n  /images/{imageDigest}/vuln/{vtype}:\n    get:\n      operationId: get_image_vulnerabilities_by_type\n      parameters:\n      - in: path\n        name: imageDigest\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: vtype\n        required: true\n        schema:\n          type: string\n      - in: query\n        name: force_refresh\n        schema:\n          type: boolean\n      - in: query\n        name: vendor_only\n        schema:\n          type: boolean\n      - description: An account name to change the resource scope of the request to\n          that account, if permissions allow (admin only)\n        in: header\n        name: x-anchore-account\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VulnerabilityResponse'\n          description: Vulnerability listing for the image\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal Error\n      summary: Get vulnerabilities by type\n      tags:\n      - Images\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.images\n      x-anchore-authz-action: getImage\n  /images/by_id/{imageId}/vuln:\n    get:\n      operationId: get_image_vulnerability_types_by_imageId\n      parameters:\n      - in: path\n        name: imageId\n        required: true\n        schema:\n          type: string\n      - description: An account name to change the resource scope of the request to\n          that account, if permissions allow (admin only)\n        in: header\n        name: x-anchore-account\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                items:\n                  enum:\n                  - all\n                  - os\n                  - non-os\n                  type: string\n                type: array\n          description: Vulnerability listing for the image\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal Error\n      summary: Get vulnerability types\n      tags:\n      - Images\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.images\n      x-anchore-authz-action: getImage\n  /images/by_id/{imageId}/vuln/{vtype}:\n    get:\n      operationId: get_image_vulnerabilities_by_type_imageId\n      parameters:\n      - in: path\n        name: imageId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: vtype\n        required: true\n        schema:\n          type: string\n      - description: An account name to change the resource scope of the request to\n          that account, if permissions allow (admin only)\n        in: header\n        name: x-anchore-account\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VulnerabilityResponse'\n          description: Vulnerability listing for the image\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal Error\n      summary: Get vulnerabilities by type\n      tags:\n      - Images\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.images\n      x-anchore-authz-action: getImage\n  /images/{imageDigest}/content:\n    get:\n      operationId: list_image_content\n      parameters:\n      - in: path\n        name: imageDigest\n        required: true\n        schema:\n          type: string\n      - description: An account name to change the resource scope of the request to\n          that account, if permissions allow (admin only)\n        in: header\n        name: x-anchore-account\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: Content listing for the image\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal Error\n      summary: List image content types\n      tags:\n      - Images\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.images\n      x-anchore-authz-action: getImage\n  /images/by_id/{imageId}/content:\n    get:\n      operationId: list_image_content_by_imageid\n      parameters:\n      - in: path\n        name: imageId\n        required: true\n        schema:\n          type: string\n      - description: An account name to change the resource scope of the request to\n          that account, if permissions allow (admin only)\n        in: header\n        name: x-anchore-account\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: Content of specified type from the image\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal error\n      summary: List image content types\n      tags:\n      - Images\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.images\n      x-anchore-authz-action: getImage\n  /images/{imageDigest}/content/{ctype}:\n    get:\n      operationId: get_image_content_by_type\n      parameters:\n      - in: path\n        name: imageDigest\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: ctype\n        required: true\n        schema:\n          type: string\n      - description: An account name to change the resource scope of the request to\n          that account, if permissions allow (admin only)\n        in: header\n        name: x-anchore-account\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContentPackageResponse'\n          description: Content of specified type from the image\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal error\n      summary: Get the content of an image by type\n      tags:\n      - Images\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.images\n      x-anchore-authz-action: getImage\n  /images/{imageDigest}/content/files:\n    get:\n      operationId: get_image_content_by_type_files\n      parameters:\n      - in: path\n        name: imageDigest\n        required: true\n        schema:\n          type: string\n      - description: An account name to change the resource scope of the request to\n          that account, if permissions allow (admin only)\n        in: header\n        name: x-anchore-account\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContentFilesResponse'\n          description: Content of specified type from the image\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal error\n      summary: Get the content of an image by type files\n      tags:\n      - Images\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.images\n      x-anchore-authz-action: getImage\n  /images/{imageDigest}/content/java:\n    get:\n      operationId: get_image_content_by_type_javapackage\n      parameters:\n      - in: path\n        name: imageDigest\n        required: true\n        schema:\n          type: string\n      - description: An account name to change the resource scope of the request to\n          that account, if permissions allow (admin only)\n        in: header\n        name: x-anchore-account\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContentJAVAPackageResponse'\n          description: Content of specified type from the image\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal error\n      summary: Get the content of an image by type java\n      tags:\n      - Images\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.images\n      x-anchore-authz-action: getImage\n  /images/by_id/{imageId}/content/{ctype}:\n    get:\n      operationId: get_image_content_by_type_imageId\n      parameters:\n      - in: path\n        name: imageId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: ctype\n        required: true\n        schema:\n          type: string\n      - description: An account name to change the resource scope of the request to\n          that account, if permissions allow (admin only)\n        in: header\n        name: x-anchore-account\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContentPackageResponse'\n          description: Content of specified type from the image\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal error\n      summary: Get the content of an image by type\n      tags:\n      - Images\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.images\n      x-anchore-authz-action: getImage\n  /images/by_id/{imageId}/content/files:\n    get:\n      operationId: get_image_content_by_type_imageId_files\n      parameters:\n      - in: path\n        name: imageId\n        required: true\n        schema:\n          type: string\n      - description: An account name to change the resource scope of the request to\n          that account, if permissions allow (admin only)\n        in: header\n        name: x-anchore-account\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContentFilesResponse'\n          description: Content of specified type from the image\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal error\n      summary: Get the content of an image by type files\n      tags:\n      - Images\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.images\n      x-anchore-authz-action: getImage\n  /images/by_id/{imageId}/content/java:\n    get:\n      operationId: get_image_content_by_type_imageId_javapackage\n      parameters:\n      - in: path\n        name: imageId\n        required: true\n        schema:\n          type: string\n      - description: An account name to change the resource scope of the request to\n          that account, if permissions allow (admin only)\n        in: header\n        name: x-anchore-account\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContentJAVAPackageResponse'\n          description: Content of specified type from the image\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal error\n      summary: Get the content of an image by type java\n      tags:\n      - Images\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.images\n      x-anchore-authz-action: getImage\n  /images/{imageDigest}/metadata:\n    get:\n      operationId: list_image_metadata\n      parameters:\n      - in: path\n        name: imageDigest\n        required: true\n        schema:\n          type: string\n      - description: An account name to change the resource scope of the request to\n          that account, if permissions allow (admin only)\n        in: header\n        name: x-anchore-account\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: Metadata listing for the image\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal Error\n      summary: List image metadata types\n      tags:\n      - Images\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.images\n      x-anchore-authz-action: getImage\n  /images/{imageDigest}/metadata/{mtype}:\n    get:\n      operationId: get_image_metadata_by_type\n      parameters:\n      - in: path\n        name: imageDigest\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: mtype\n        required: true\n        schema:\n          type: string\n      - description: An account name to change the resource scope of the request to\n          that account, if permissions allow (admin only)\n        in: header\n        name: x-anchore-account\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MetadataResponse'\n          description: Metadata of specified type from the image\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal error\n      summary: Get the metadata of an image by type\n      tags:\n      - Images\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.images\n      x-anchore-authz-action: getImage\n  /repositories:\n    post:\n      operationId: add_repository\n      parameters:\n      - description: full repository to add e.g. docker.io/library/alpine\n        in: query\n        name: repository\n        required: true\n        schema:\n          type: string\n      - description: flag to enable/disable auto tag_update activation when new images\n          from a repo are added\n        in: query\n        name: autosubscribe\n        schema:\n          type: boolean\n      - description: use specified existing tag to perform repo scan (default is 'latest')\n        in: query\n        name: lookuptag\n        schema:\n          type: string\n      - description: An account name to change the resource scope of the request to\n          that account, if permissions allow (admin only)\n        in: header\n        name: x-anchore-account\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubscriptionList'\n          description: Repository and discovered tags added\n      summary: Add repository to watch\n      tags:\n      - Repository Credentials\n      x-anchore-authz-action: createRepository\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.images\n  /registries:\n    get:\n      description: List all configured registries the system can/will watch\n      operationId: list_registries\n      parameters:\n      - description: An account name to change the resource scope of the request to\n          that account, if permissions allow (admin only)\n        in: header\n        name: x-anchore-account\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RegistryConfigurationList'\n          description: Registry listing\n      summary: List configured registries\n      tags:\n      - Registries\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.registries\n      x-anchore-authz-action: listRegistries\n    post:\n      description: Adds a new registry to the system\n      operationId: create_registry\n      parameters:\n      - description: flag to determine whether or not to validate registry/credential\n          at registry add time\n        in: query\n        name: validate\n        schema:\n          type: boolean\n      - description: An account name to change the resource scope of the request to\n          that account, if permissions allow (admin only)\n        in: header\n        name: x-anchore-account\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegistryConfigurationRequest'\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RegistryConfigurationList'\n          description: Saved registry configuration\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal Error\n      summary: Add a new registry\n      tags:\n      - Registries\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.registries\n      x-anchore-authz-action: createRegistry\n      x-codegen-request-body-name: registrydata\n  /registries/{registry}:\n    delete:\n      description: Delete a registry configuration record from the system. Does not\n        remove any images.\n      operationId: delete_registry\n      parameters:\n      - in: path\n        name: registry\n        required: true\n        schema:\n          format: path\n          type: string\n      - description: An account name to change the resource scope of the request to\n          that account, if permissions allow (admin only)\n        in: header\n        name: x-anchore-account\n        schema:\n          type: string\n      responses:\n        200:\n          content: {}\n          description: Delete success\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal Error\n      summary: Delete a registry configuration\n      tags:\n      - Registries\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.registries\n      x-anchore-authz-action: deleteRegistry\n    get:\n      description: Get information on a specific registry\n      operationId: get_registry\n      parameters:\n      - in: path\n        name: registry\n        required: true\n        schema:\n          format: path\n          type: string\n      - description: An account name to change the resource scope of the request to\n          that account, if permissions allow (admin only)\n        in: header\n        name: x-anchore-account\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RegistryConfiguration'\n          description: Registry configuration\n      summary: Get a specific registry configuration\n      tags:\n      - Registries\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.registries\n      x-anchore-authz-action: getRegistry\n    put:\n      description: Replaces an existing registry record with the given record\n      operationId: update_registry\n      parameters:\n      - in: path\n        name: registry\n        required: true\n        schema:\n          format: path\n          type: string\n      - description: flag to determine whether or not to validate registry/credential\n          at registry update time\n        in: query\n        name: validate\n        schema:\n          type: boolean\n      - description: An account name to change the resource scope of the request to\n          that account, if permissions allow (admin only)\n        in: header\n        name: x-anchore-account\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegistryConfigurationRequest'\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RegistryConfigurationList'\n          description: Updated registry configuration\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal Error\n      summary: Update/replace a registry configuration\n      tags:\n      - Registries\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.registries\n      x-anchore-authz-action: updateRegistry\n      x-codegen-request-body-name: registrydata\n  /status:\n    get:\n      description: Get the API service status\n      operationId: get_status\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatusResponse'\n          description: Status listing\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal error\n      summary: Service status\n      tags:\n      - System\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.system\n      x-anchore-authz-action: None\n  /system:\n    get:\n      description: Get the system status including queue lengths\n      operationId: get_service_detail\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SystemStatusResponse'\n          description: Status listing\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal error\n      summary: System status\n      tags:\n      - System\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.system\n      x-anchore-authz-action: None\n  /system/feeds:\n    get:\n      operationId: get_system_feeds\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/FeedMetadata'\n                type: array\n          description: success\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal Error\n      summary: list feeds operations and information\n      tags:\n      - System\n      x-anchore-authz-action: listFeeds\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.system\n    post:\n      operationId: post_system_feeds\n      parameters:\n      - description: instruct system to flush existing data feeds records from anchore-engine\n        in: query\n        name: flush\n        schema:\n          type: boolean\n      - description: instruct system to re-sync data feeds\n        in: query\n        name: sync\n        schema:\n          type: boolean\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FeedSyncResults'\n          description: Feeds operation success\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal Error\n      summary: trigger feeds operations\n      tags:\n      - System\n      x-anchore-authz-action: updateFeeds\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.system\n  /system/services:\n    get:\n      operationId: list_services\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceList'\n          description: Service listing\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal Error\n      summary: List system services\n      tags:\n      - System\n      - Services\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.system\n      x-anchore-authz-action: listServices\n  /system/services/{servicename}:\n    get:\n      operationId: get_services_by_name\n      parameters:\n      - in: path\n        name: servicename\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceList'\n          description: Service Info\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal Error\n      summary: Get a service configuration and state\n      tags:\n      - System\n      - Services\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.system\n      x-anchore-authz-action: getService\n  /system/services/{servicename}/{hostid}:\n    delete:\n      operationId: delete_service\n      parameters:\n      - in: path\n        name: servicename\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: hostid\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content: {}\n          description: Delete success\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal error\n      summary: Delete the service config\n      tags:\n      - System\n      - Services\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.system\n      x-anchore-authz-action: deleteService\n    get:\n      operationId: get_services_by_name_and_host\n      parameters:\n      - in: path\n        name: servicename\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: hostid\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceList'\n          description: Listing of registered services\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal error\n      summary: Get service config for a specific host\n      tags:\n      - System\n      - Services\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.system\n      x-anchore-authz-action: getService\n  /system/policy_spec:\n    get:\n      description: Get the policy language spec for this service\n      operationId: describe_policy\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                description: List of Gate specifications\n                items:\n                  $ref: '#/components/schemas/GateSpec'\n                type: array\n          description: Policy Language Description\n      summary: Describe the policy language spec implemented by this service.\n      tags:\n      - System\n      - Policy\n      x-anchore-authz-action: None\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.system\n  /system/error_codes:\n    get:\n      description: Describe anchore engine error codes.\n      operationId: describe_error_codes\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                description: List of Error Code Descriptions\n                items:\n                  $ref: '#/components/schemas/AnchoreErrorCode'\n                type: array\n          description: Error Codes Description\n      summary: Describe anchore engine error codes.\n      tags:\n      - System\n      x-anchore-authz-action: None\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.system\n  /events:\n    delete:\n      description: Delete all or a subset of events filtered using the optional query\n        parameters\n      operationId: delete_events\n      parameters:\n      - description: Delete events that occurred before the timestamp\n        in: query\n        name: before\n        schema:\n          type: string\n      - description: Delete events that occurred after the timestamp\n        in: query\n        name: since\n        schema:\n          type: string\n      - description: Delete events that match the level - INFO or ERROR\n        in: query\n        name: level\n        schema:\n          type: string\n      - description: An account name to change the resource scope of the request to\n          that account, if permissions allow (admin only)\n        in: header\n        name: x-anchore-account\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: List of deleted event IDs\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal Error\n      summary: Delete Events\n      tags:\n      - Events\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.events\n      x-anchore-authz-action: deleteEvents\n    get:\n      description: Returns a paginated list of events in the descending order of their\n        occurrence. Optional query parameters may be used for filtering results\n      operationId: list_events\n      parameters:\n      - description: Filter events by the originating service\n        in: query\n        name: source_servicename\n        schema:\n          type: string\n      - description: Filter events by the originating host ID\n        in: query\n        name: source_hostid\n        schema:\n          type: string\n      - description: Filter events by the type of resource - tag, imageDigest, repository\n          etc\n        in: query\n        name: resource_type\n        schema:\n          type: string\n      - description: Filter events by the id of the resource\n        in: query\n        name: resource_id\n        schema:\n          type: string\n      - description: Filter events by the level - INFO or ERROR\n        in: query\n        name: level\n        schema:\n          type: string\n      - description: Return events that occurred after the timestamp\n        in: query\n        name: since\n        schema:\n          type: string\n      - description: Return events that occurred before the timestamp\n        in: query\n        name: before\n        schema:\n          type: string\n      - description: Pagination controls - return the nth page of results. Defaults\n          to first page if left empty\n        in: query\n        name: page\n        schema:\n          default: 1\n          type: integer\n      - description: Number of events in the result set. Defaults to 100 if left empty\n        in: query\n        name: limit\n        schema:\n          default: 100\n          type: integer\n      - description: An account name to change the resource scope of the request to\n          that account, if permissions allow (admin only)\n        in: header\n        name: x-anchore-account\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EventsList'\n          description: Paginated list of event records and the next token\n      summary: List Events\n      tags:\n      - Events\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.events\n      x-anchore-authz-action: listEvents\n  /events/{eventId}:\n    delete:\n      description: Delete an event by its event ID\n      operationId: delete_event\n      parameters:\n      - description: Event ID of the event to be deleted\n        in: path\n        name: eventId\n        required: true\n        schema:\n          type: string\n      - description: An account name to change the resource scope of the request to\n          that account, if permissions allow (admin only)\n        in: header\n        name: x-anchore-account\n        schema:\n          type: string\n      responses:\n        200:\n          content: {}\n          description: Delete success\n      summary: Delete Event\n      tags:\n      - Events\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.events\n      x-anchore-authz-action: getEvent\n    get:\n      description: Lookup an event by its event ID\n      operationId: get_event\n      parameters:\n      - description: Event ID of the event for lookup\n        in: path\n        name: eventId\n        required: true\n        schema:\n          type: string\n      - description: An account name to change the resource scope of the request to\n          that account, if permissions allow (admin only)\n        in: header\n        name: x-anchore-account\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EventResponse'\n          description: Single event record\n      summary: Get Event\n      tags:\n      - Events\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.events\n      x-anchore-authz-action: getEvent\n  /query/images/by_vulnerability:\n    get:\n      description: Returns a listing of images and their respective packages vulnerable\n        to the given vulnerability ID\n      operationId: query_images_by_vulnerability\n      parameters:\n      - description: The ID of the vulnerability to search for within all images stored\n          in anchore-engine (e.g. CVE-1999-0001)\n        in: query\n        name: vulnerability_id\n        required: true\n        schema:\n          type: string\n      - description: Filter results to images within the given vulnerability namespace\n          (e.g. debian:8, ubuntu:14.04)\n        in: query\n        name: namespace\n        schema:\n          type: string\n      - description: Filter results to images with vulnable packages with the given\n          package name (e.g. libssl)\n        in: query\n        name: affected_package\n        schema:\n          type: string\n      - description: Filter results to vulnerable package/vulnerability with the given\n          severity\n        in: query\n        name: severity\n        schema:\n          enum:\n          - Unknown\n          - Negligible\n          - Low\n          - Medium\n          - High\n          - Critical\n          type: string\n      - description: Filter results to include only vulnerabilities that are not marked\n          as invalid by upstream OS vendor data\n        in: query\n        name: vendor_only\n        schema:\n          default: true\n          type: boolean\n      - description: The page of results to fetch. Pages start at 1\n        in: query\n        name: page\n        schema:\n          type: integer\n      - description: Limit the number of records for the requested page. If omitted\n          or set to 0, return all results in a single page\n        in: query\n        name: limit\n        schema:\n          type: integer\n      - description: An account name to change the resource scope of the request to\n          that account, if permissions allow (admin only)\n        in: header\n        name: x-anchore-account\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedVulnerableImageList'\n          description: Image lookup success\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Invalid filter parameters\n      summary: List images vulnerable to the specific vulnerability ID.\n      tags:\n      - Vulnerabilities\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.query\n      x-anchore-authz-action: listImages\n  /query/images/by_package:\n    get:\n      description: Filterable query interface to search for images containing specified\n        package\n      operationId: query_images_by_package\n      parameters:\n      - description: Name of package to search for (e.g. sed)\n        in: query\n        name: name\n        required: true\n        schema:\n          type: string\n      - description: Type of package to filter on (e.g. dpkg)\n        in: query\n        name: package_type\n        schema:\n          type: string\n      - description: Version of named package to filter on (e.g. 4.4-1)\n        in: query\n        name: version\n        schema:\n          type: string\n      - description: The page of results to fetch. Pages start at 1\n        in: query\n        name: page\n        schema:\n          type: string\n      - description: Limit the number of records for the requested page. If omitted\n          or set to 0, return all results in a single page\n        in: query\n        name: limit\n        schema:\n          type: integer\n      - description: An account name to change the resource scope of the request to\n          that account, if permissions allow (admin only)\n        in: header\n        name: x-anchore-account\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedImageList'\n          description: Image listing\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Bad filter parameters\n      summary: List of images containing given package\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.query\n      x-anchore-authz-action: listImages\n  /query/vulnerabilities:\n    get:\n      description: List (w/filters) vulnerability records known by the system, with\n        affected packages information if present\n      operationId: query_vulnerabilities\n      parameters:\n      - description: The ID of the vulnerability (e.g. CVE-1999-0001)\n        in: query\n        name: id\n        required: true\n        schema:\n          type: string\n      - description: Filter results by specified package name (e.g. sed)\n        in: query\n        name: affected_package\n        schema:\n          type: string\n      - description: Filter results by specified package version (e.g. 4.4-1)\n        in: query\n        name: affected_package_version\n        schema:\n          type: string\n      - description: The page of results to fetch. Pages start at 1\n        in: query\n        name: page\n        schema:\n          default: \"1\"\n          type: string\n      - description: Limit the number of records for the requested page. If omitted\n          or set to 0, return all results in a single page\n        in: query\n        name: limit\n        schema:\n          type: integer\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedVulnerabilityList'\n          description: Vulnerability listing paginated\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Invalid filter parameters\n      summary: Listing information about given vulnerability\n      tags:\n      - Vulnerabilities\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.query\n      x-anchore-authz-action: None\n  /accounts:\n    get:\n      operationId: list_accounts\n      parameters:\n      - description: Filter accounts by state\n        in: query\n        name: state\n        schema:\n          enum:\n          - active\n          - disabled\n          - deleting\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccountList'\n          description: Accound summary listing\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal error\n      summary: List user summaries. Only available to the system admin user.\n      tags:\n      - User Management\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.accounts\n      x-anchore-authz-action: listAccounts\n    post:\n      operationId: create_account\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AccountCreationRequest'\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Account'\n          description: Account Record\n        409:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Conflicting user information. User already exists.\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal error\n      summary: Create a new user. Only avaialble to admin user.\n      tags:\n      - User Management\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.accounts\n      x-anchore-authz-action: createAccount\n      x-codegen-request-body-name: account\n  /accounts/{accountname}:\n    delete:\n      operationId: delete_account\n      parameters:\n      - in: path\n        name: accountname\n        required: true\n        schema:\n          type: string\n      responses:\n        204:\n          content: {}\n          description: Successful deletion\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal error\n      summary: Delete the specified account, only allowed if the account is in the\n        disabled state. All users will be deleted along with the account and all resources\n        will be garbage collected\n      tags:\n      - User Management\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.accounts\n      x-anchore-authz-action: deleteAccount\n    get:\n      operationId: get_account\n      parameters:\n      - in: path\n        name: accountname\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Account'\n          description: Get user information\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal error\n      summary: Get info about an user. Only available to admin user. Uses the main\n        user Id, not a username.\n      tags:\n      - User Management\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.accounts\n      x-anchore-authz-action: getAccount\n  /accounts/{accountname}/state:\n    put:\n      operationId: update_account_state\n      parameters:\n      - in: path\n        name: accountname\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AccountStatus'\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccountStatus'\n          description: Updated state of the account\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: State requested is invalid based on current state of the account\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal error\n      summary: Update the state of an account to either enabled or disabled. For deletion\n        use the DELETE route\n      tags:\n      - User Management\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.accounts\n      x-anchore-authz-action: updateAccount\n      x-codegen-request-body-name: desired_state\n  /accounts/{accountname}/users:\n    get:\n      operationId: list_users\n      parameters:\n      - in: path\n        name: accountname\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                description: List of user credential records\n                items:\n                  $ref: '#/components/schemas/User'\n                type: array\n          description: User listing\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal error\n      summary: List accounts for the user\n      tags:\n      - User Management\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.accounts\n      x-anchore-authz-action: listUsers\n    post:\n      operationId: create_user\n      parameters:\n      - in: path\n        name: accountname\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserCreationRequest'\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: Credential summary\n      summary: Create a new user\n      tags:\n      - User Management\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.accounts\n      x-anchore-authz-action: createUser\n      x-codegen-request-body-name: user\n  /accounts/{accountname}/users/{username}:\n    delete:\n      operationId: delete_user\n      parameters:\n      - in: path\n        name: accountname\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: username\n        required: true\n        schema:\n          type: string\n      responses:\n        204:\n          content: {}\n          description: Deleted credential\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal error\n      summary: Delete a specific user credential by username of the credential. Cannot\n        be the credential used to authenticate the request.\n      tags:\n      - User Management\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.accounts\n      x-anchore-authz-action: deleteUser\n    get:\n      operationId: get_account_user\n      parameters:\n      - in: path\n        name: accountname\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: username\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: User record\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal error\n      summary: Get a specific user in the specified account\n      tags:\n      - User Management\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.accounts\n      x-anchore-authz-action: getUser\n  /accounts/{accountname}/users/{username}/credentials:\n    delete:\n      operationId: delete_user_credential\n      parameters:\n      - in: path\n        name: accountname\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: username\n        required: true\n        schema:\n          type: string\n      - in: query\n        name: credential_type\n        required: true\n        schema:\n          enum:\n          - password\n          type: string\n      responses:\n        204:\n          content: {}\n          description: Successful deletion\n        400:\n          content: {}\n          description: Conflict, cannot delete the credential used to authenticate\n            this request\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal error\n      summary: Delete a credential by type\n      tags:\n      - User Management\n      x-anchore-authz-action: updateUser\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.accounts\n    get:\n      operationId: list_user_credentials\n      parameters:\n      - in: path\n        name: accountname\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: username\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CredentialList'\n          description: User credential listing\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal error\n      summary: Get current credential summary\n      tags:\n      - User Management\n      x-anchore-authz-action: getUser\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.accounts\n    post:\n      operationId: create_user_credential\n      parameters:\n      - in: path\n        name: accountname\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: username\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AccessCredential'\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: Add a credential, overwritting if already exists\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal error\n      summary: add/replace credential\n      tags:\n      - User Management\n      x-anchore-authz-action: updateUser\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.accounts\n      x-codegen-request-body-name: credential\n  /account:\n    get:\n      operationId: get_users_account\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Account'\n          description: User details for caller's user\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal error\n      summary: List the account for the authenticated user\n      tags:\n      - Identity\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.accounts\n      x-anchore-authz-action: getAccount\n  /user:\n    get:\n      operationId: get_user\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: User details for caller's user\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal error\n      summary: List authenticated user info\n      tags:\n      - Identity\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.user\n      x-anchore-authz-action: None\n  /user/credentials:\n    get:\n      operationId: get_credentials\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CredentialList'\n          description: User credential listing\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal error\n      summary: Get current credential summary\n      tags:\n      - Identity\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.user\n      x-anchore-authz-action: None\n    post:\n      operationId: add_credential\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AccessCredential'\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: Add a credential, overwritting if already exists\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal error\n      summary: add/replace credential\n      tags:\n      - Identity\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.user\n      x-anchore-authz-action: None\n      x-codegen-request-body-name: credential\n  /archives:\n    get:\n      operationId: list_archives\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArchiveSummary'\n          description: Archive summary listing\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal error\n      tags:\n      - Archives\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.archive\n      x-anchore-authz-action: listArchives\n  /archives/rules:\n    get:\n      operationId: list_analysis_archive_rules\n      parameters:\n      - description: If true include system global rules (owned by admin) even for\n          non-admin users. Defaults to true if not set. Can be set to false to exclude\n          globals\n        in: query\n        name: system_global\n        schema:\n          type: boolean\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AnalysisArchiveRules'\n          description: Archive transition rules\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal error\n      tags:\n      - Archives\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.archive\n      x-anchore-authz-action: listArchiveTransitionRules\n    post:\n      operationId: create_analysis_archive_rule\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AnalysisArchiveTransitionRule'\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AnalysisArchiveTransitionRule'\n          description: Archive transition rule\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal error\n      tags:\n      - Archives\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.archive\n      x-anchore-authz-action: createArchiveTransitionRule\n      x-codegen-request-body-name: rule\n  /archives/rules/{ruleId}:\n    delete:\n      operationId: delete_analysis_archive_rule\n      parameters:\n      - in: path\n        name: ruleId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AnalysisArchiveTransitionRule'\n          description: Archive transition rule\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal error\n      tags:\n      - Archives\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.archive\n      x-anchore-authz-action: deleteArchiveTransitionRule\n    get:\n      operationId: get_analysis_archive_rule\n      parameters:\n      - in: path\n        name: ruleId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AnalysisArchiveTransitionRule'\n          description: Archive transition rule\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal error\n      tags:\n      - Archives\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.archive\n      x-anchore-authz-action: getArchiveTransitionRule\n  /archives/images:\n    get:\n      operationId: list_analysis_archive\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArchivedAnalyses'\n          description: Image analysis archive listing for the requesting account (not\n            the whole system)\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal error\n      tags:\n      - Archives\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.archive\n      x-anchore-authz-action: listArchivedImageAnalysis\n    post:\n      operationId: archive_image_analysis\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ImageAnalysisReferences'\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AddAnalysisArchiveResult'\n          description: Archive statuses\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal error\n      tags:\n      - Archives\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.archive\n      x-anchore-authz-action: createArchivedImageAnalysis\n      x-codegen-request-body-name: imageReferences\n  /archives/images/{imageDigest}:\n    delete:\n      description: Performs a synchronous archive deletion\n      operationId: delete_archived_analysis\n      parameters:\n      - in: path\n        name: imageDigest\n        required: true\n        schema:\n          type: string\n      - in: query\n        name: force\n        schema:\n          type: boolean\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArchivedAnalysis'\n          description: ArchivdImageAnalysis record but with status 'deleted'\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal error\n      tags:\n      - Archives\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.archive\n      x-anchore-authz-action: deleteArchivedImageAnalysis\n    get:\n      description: Returns the archive metadata record identifying the image and tags\n        for the analysis in the archive.\n      operationId: get_archived_analysis\n      parameters:\n      - description: The image digest to identify the image analysis\n        in: path\n        name: imageDigest\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArchivedAnalysis'\n          description: Archived Image\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal error\n      tags:\n      - Archives\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.archive\n      x-anchore-authz-action: getArchivedImageAnalysis\n  /oauth/token:\n    post:\n      description: Request a jwt token for subsequent operations, this request is\n        authenticated with normal HTTP auth\n      operationId: get_oauth_token\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TokenResponse'\n          description: Resulting JWT token\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n          description: Internal error\n      x-swagger-router-controller: anchore_engine.services.apiext.api.controllers.oauth\n      x-anchore-authz-action: None\ncomponents:\n  parameters:\n    AsAccountParameter:\n      description: An account name to change the resource scope of the request to\n        that account, if permissions allow (admin only)\n      in: header\n      name: x-anchore-account\n      schema:\n        type: string\n  schemas:\n    PaginationProperties:\n      description: Properties for common pagination handling to be included in any\n        wrapping object that needs pagination elements\n      properties:\n        page:\n          description: The page number returned (should match the requested page query\n            string param)\n          type: string\n        next_page:\n          description: True if additional pages exist (page + 1) or False if this\n            is the last page\n          type: string\n        returned_count:\n          description: The number of items sent in this response\n          type: integer\n      type: object\n    PackageReference:\n      description: A record of a software item which is vulnerable or carries a fix\n        for a vulnerability\n      properties:\n        name:\n          description: Package name\n          type: string\n        version:\n          description: A version for the package. If null, then references all versions\n          nullable: true\n          type: string\n        type:\n          description: Package type (e.g. package, rpm, deb, apk, jar, npm, gem, ...)\n          type: string\n      type: object\n    VulnerablePackageReference:\n      description: A record of a software item which is vulnerable or carries a fix\n        for a vulnerability\n      properties:\n        name:\n          description: Package name\n          type: string\n        version:\n          description: A version for the package. If null, then references all versions\n          nullable: true\n          type: string\n        type:\n          description: Package type (e.g. package, rpm, deb, apk, jar, npm, gem, ...)\n          type: string\n        severity:\n          description: Severity of vulnerability affecting package\n          type: string\n        namespace:\n          description: Vulnerability namespace of affected package\n          type: string\n      type: object\n    StandaloneVulnerability:\n      description: A single vulnerability record in a single namespace, the unique\n        key is the combinatino of the id and namespace\n      properties:\n        id:\n          description: Vulnerability identifier. May be CVE-X, RHSA-X, etc. Not necessarily\n            unique across namespaces\n          type: string\n        namespace:\n          description: The namespace for the vulnerability record to avoid conflicts\n            for the same id in different distros or sources (e.g. deb vs ubuntu for\n            same CVE)\n          type: string\n        affected_packages:\n          description: The array of packages (typically packages) that are vulnerable-to\n            or provide fixes-for this vulnerability\n          items:\n            $ref: '#/components/schemas/PackageReference'\n          type: array\n        severity:\n          description: Severity label specific to the namepsace\n          enum:\n          - Unknown\n          - Negligible\n          - Low\n          - Medium\n          - High\n          - Critical\n          type: string\n        link:\n          description: URL for the upstream CVE record in the reporting source (e.g.\n            ubuntu security tracker)\n          type: string\n        nvd_data:\n          description: List of Nvd Data objects\n          items:\n            $ref: '#/components/schemas/NvdDataObject'\n          type: array\n        vendor_data:\n          description: List of Vendor Data objects\n          items:\n            $ref: '#/components/schemas/VendorDataObject'\n          type: array\n      type: object\n    ImageReference:\n      description: A summary of an image identity, including digest, id (if available),\n        and any tags known to have ever been mapped to the digest\n      properties:\n        digest:\n          description: The image digest\n          type: string\n        id:\n          description: The image id if available\n          type: string\n        analyzed_at:\n          description: Timestamp, in rfc3339 format, indicating when the image state\n            became 'analyzed' in Anchore Engine.\n          type: string\n        tag_history:\n          items:\n            $ref: '#/components/schemas/TagEntry'\n          type: array\n      type: object\n    TagEntry:\n      description: A docker-pullable tag value as well as deconstructed components\n      example:\n        registry: registry\n        detected_at: 2000-01-23T04:56:07.000+00:00\n        pullstring: pullstring\n        tag: tag\n        repository: repository\n      properties:\n        pullstring:\n          description: The pullable string for the tag. E.g. \"docker.io/library/node:latest\"\n          type: string\n        registry:\n          description: The registry hostname:port section of the pull string\n          type: string\n        repository:\n          description: The repository section of the pull string\n          type: string\n        tag:\n          description: The tag-only section of the pull string\n          type: string\n        detected_at:\n          description: The timestamp at which the Anchore Engine detected this tag\n            was mapped to the image digest. Does not necessarily indicate when the\n            tag was actually pushed to the registry.\n          format: date-time\n          type: string\n      type: object\n    VulnerableImage:\n      description: A record of an image vulnerable to some known vulnerability. Includes\n        vulnerable package information\n      properties:\n        image:\n          $ref: '#/components/schemas/ImageReference'\n        affected_packages:\n          items:\n            $ref: '#/components/schemas/VulnerablePackageReference'\n          type: array\n      type: object\n    ImageWithPackages:\n      description: An image record that contains packages\n      properties:\n        image:\n          $ref: '#/components/schemas/ImageReference'\n        packages:\n          items:\n            $ref: '#/components/schemas/PackageReference'\n          type: array\n      type: object\n    PaginatedVulnerableImageList:\n      allOf:\n      - $ref: '#/components/schemas/PaginationProperties'\n      - $ref: '#/components/schemas/PaginatedVulnerableImageList_allOf'\n      description: Pagination wrapped list of images with vulnerabilties that match\n        some filter\n    PaginatedVulnerabilityList:\n      allOf:\n      - $ref: '#/components/schemas/PaginationProperties'\n      - $ref: '#/components/schemas/PaginatedVulnerabilityList_allOf'\n      description: A paginated listing of vulnerability records sorted by ID in descending\n        order\n    PaginatedImageList:\n      allOf:\n      - $ref: '#/components/schemas/PaginationProperties'\n      - $ref: '#/components/schemas/PaginatedImageList_allOf'\n      description: Pagination wrapped list of images that match some filter\n    ImageAnalysisRequest:\n      description: A request to add an image to be watched and analyzed by the engine.\n        Optionally include the dockerfile content. Either source, digest or tag must\n        be present.\n      example:\n        dockerfile: dockerfile\n        digest: digest\n        created_at: 2000-01-23T04:56:07.000+00:00\n        annotations: '{}'\n        tag: tag\n        source:\n          digest:\n            creation_timestamp_override: 2000-01-23T04:56:07.000+00:00\n            dockerfile: dockerfile\n            pullstring: pullstring\n            tag: tag\n          archive:\n            digest: digest\n          tag:\n            dockerfile: dockerfile\n            pullstring: pullstring\n        image_type: image_type\n      properties:\n        dockerfile:\n          description: Base64 encoded content of the dockerfile for the image, if\n            available. Deprecated in favor of the 'source' field.\n          pattern: ^[a-zA-Z0-9+/=]+$\n          type: string\n        digest:\n          description: A digest string for an image, maybe a pull string or just a\n            digest. e.g. nginx@sha256:123 or sha256:abc123. If a pull string, it must\n            have same regisry/repo as the tag field. Deprecated in favor of the 'source'\n            field\n          type: string\n        tag:\n          description: Full pullable tag reference for image. e.g. docker.io/nginx:latest.\n            Deprecated in favor of the 'source' field\n          type: string\n        created_at:\n          description: Optional override of the image creation time, only honored\n            when both tag and digest are also supplied  e.g. 2018-10-17T18:14:00Z.\n            Deprecated in favor of the 'source' field\n          format: date-time\n          type: string\n        image_type:\n          description: Optional. The type of image this is adding, defaults to \"docker\".\n            This can be ommitted until multiple image types are supported.\n          type: string\n        annotations:\n          description: Annotations to be associated with the added image in key/value\n            form\n          properties: {}\n          type: object\n        source:\n          $ref: '#/components/schemas/ImageSource'\n      type: object\n    ImageSource:\n      description: A set of analysis source types. Only one may be set in any given\n        request.\n      example:\n        digest:\n          creation_timestamp_override: 2000-01-23T04:56:07.000+00:00\n          dockerfile: dockerfile\n          pullstring: pullstring\n          tag: tag\n        archive:\n          digest: digest\n        tag:\n          dockerfile: dockerfile\n          pullstring: pullstring\n      properties:\n        tag:\n          $ref: '#/components/schemas/RegistryTagSource'\n        digest:\n          $ref: '#/components/schemas/RegistryDigestSource'\n        archive:\n          $ref: '#/components/schemas/AnalysisArchiveSource'\n      type: object\n    RegistryTagSource:\n      description: An image reference using a tag in a registry, this is the most\n        common source type.\n      example:\n        dockerfile: dockerfile\n        pullstring: pullstring\n      properties:\n        pullstring:\n          description: A docker pull string (e.g. docker.io/nginx:latest, or docker.io/nginx@sha256:abd)\n            to retrieve the image\n          type: string\n        dockerfile:\n          description: Base64 encoded content of the dockerfile used to build the\n            image, if available.\n          pattern: ^[a-zA-Z0-9+/=]+$\n          type: string\n      required:\n      - pullstring\n      type: object\n    RegistryDigestSource:\n      description: An image reference using a digest in a registry, includes some\n        extra tag and timestamp info in addition to the pull string to allow proper\n        tag history reconstruction.\n      example:\n        creation_timestamp_override: 2000-01-23T04:56:07.000+00:00\n        dockerfile: dockerfile\n        pullstring: pullstring\n        tag: tag\n      properties:\n        pullstring:\n          description: A digest-based pullstring (e.g. docker.io/nginx@sha256:123abc)\n          type: string\n        tag:\n          description: A docker pull string (e.g. docker.io/nginx:latest, or docker.io/nginx@sha256:abd)\n            to retrieve the image\n          type: string\n        creation_timestamp_override:\n          description: Optional override of the image creation time to support proper\n            tag history construction in cases of out-of-order analysis compared to\n            registry history for the tag\n          format: date-time\n          type: string\n        dockerfile:\n          description: Base64 encoded content of the dockerfile used to build the\n            image, if available.\n          pattern: ^[a-zA-Z0-9+/=]+$\n          type: string\n      required:\n      - creation_timestamp_override\n      - pullstring\n      - tag\n      type: object\n    AnalysisArchiveSource:\n      description: An image reference in the analysis archive for the purposes of\n        loading analysis from the archive into th working set\n      example:\n        digest: digest\n      properties:\n        digest:\n          description: The image digest identify the analysis. Archived analyses are\n            based on digest, tag records are restored as analysis is restored.\n          pattern: ^sha256:[a-fA-F0-9]{64}$\n          type: string\n      required:\n      - digest\n      type: object\n    PolicyBundle:\n      description: A bundle containing a set of policies, whitelists, and rules for\n        mapping them to specific images\n      example:\n        blacklisted_images:\n        - registry: registry\n          image:\n            type: tag\n            value: value\n          name: name\n          id: id\n          repository: repository\n        - registry: registry\n          image:\n            type: tag\n            value: value\n          name: name\n          id: id\n          repository: repository\n        mappings:\n        - whitelist_ids:\n          - whitelist_ids\n          - whitelist_ids\n          registry: registry\n          image:\n            type: tag\n            value: value\n          policy_id: policy_id\n          name: name\n          id: id\n          policy_ids:\n          - policy_ids\n          - policy_ids\n          repository: repository\n        - whitelist_ids:\n          - whitelist_ids\n          - whitelist_ids\n          registry: registry\n          image:\n            type: tag\n            value: value\n          policy_id: policy_id\n          name: name\n          id: id\n          policy_ids:\n          - policy_ids\n          - policy_ids\n          repository: repository\n        whitelists:\n        - name: name\n          comment: comment\n          id: id\n          version: version\n          items:\n          - trigger_id: trigger_id\n            id: id\n            gate: gate\n          - trigger_id: trigger_id\n            id: id\n            gate: gate\n        - name: name\n          comment: comment\n          id: id\n          version: version\n          items:\n          - trigger_id: trigger_id\n            id: id\n            gate: gate\n          - trigger_id: trigger_id\n            id: id\n            gate: gate\n        name: name\n        policies:\n        - name: name\n          comment: comment\n          rules:\n          - action: GO\n            id: id\n            gate: gate\n            trigger: trigger\n            params:\n            - name: name\n              value: value\n            - name: name\n              value: value\n          - action: GO\n            id: id\n            gate: gate\n            trigger: trigger\n            params:\n            - name: name\n              value: value\n            - name: name\n              value: value\n          id: id\n          version: version\n        - name: name\n          comment: comment\n          rules:\n          - action: GO\n            id: id\n            gate: gate\n            trigger: trigger\n            params:\n            - name: name\n              value: value\n            - name: name\n              value: value\n          - action: GO\n            id: id\n            gate: gate\n            trigger: trigger\n            params:\n            - name: name\n              value: value\n            - name: name\n              value: value\n          id: id\n          version: version\n        whitelisted_images:\n        - registry: registry\n          image:\n            type: tag\n            value: value\n          name: name\n          id: id\n          repository: repository\n        - registry: registry\n          image:\n            type: tag\n            value: value\n          name: name\n          id: id\n          repository: repository\n        comment: comment\n        id: id\n        version: version\n      properties:\n        id:\n          description: Id of the bundle\n          type: string\n        name:\n          description: Human readable name for the bundle\n          type: string\n        comment:\n          description: Description of the bundle, human readable\n          type: string\n        version:\n          description: Version id for this bundle format\n          type: string\n        whitelists:\n          description: Whitelists which define which policy matches to disregard explicitly\n            in the final policy decision\n          items:\n            $ref: '#/components/schemas/Whitelist'\n          type: array\n        policies:\n          description: Policies which define the go/stop/warn status of an image using\n            rule matches on image properties\n          items:\n            $ref: '#/components/schemas/Policy'\n          type: array\n        mappings:\n          description: Mapping rules for defining which policy and whitelist(s) to\n            apply to an image based on a match of the image tag or id. Evaluated in\n            order.\n          items:\n            $ref: '#/components/schemas/MappingRule'\n          type: array\n        whitelisted_images:\n          description: List of mapping rules that define which images should always\n            be passed (unless also on the blacklist), regardless of policy result.\n          items:\n            $ref: '#/components/schemas/ImageSelectionRule'\n          type: array\n        blacklisted_images:\n          description: List of mapping rules that define which images should always\n            result in a STOP/FAIL policy result regardless of policy content or presence\n            in whitelisted_images\n          items:\n            $ref: '#/components/schemas/ImageSelectionRule'\n          type: array\n      required:\n      - id\n      - mappings\n      - policies\n      - version\n      type: object\n    WhitelistItem:\n      description: Identifies a specific gate and trigger match from a policy against\n        an image and indicates it should be ignored in final policy decisions\n      example:\n        trigger_id: trigger_id\n        id: id\n        gate: gate\n      properties:\n        id:\n          type: string\n        gate:\n          type: string\n        trigger_id:\n          type: string\n      required:\n      - gate\n      - trigger_id\n      type: object\n    PolicyRule:\n      description: A rule that defines and decision value if the match is found true\n        for a given image.\n      example:\n        action: GO\n        id: id\n        gate: gate\n        trigger: trigger\n        params:\n        - name: name\n          value: value\n        - name: name\n          value: value\n      properties:\n        id:\n          type: string\n        gate:\n          type: string\n        trigger:\n          type: string\n        action:\n          enum:\n          - GO\n          - STOP\n          - WARN\n          type: string\n        params:\n          items:\n            $ref: '#/components/schemas/PolicyRule_params'\n          type: array\n      required:\n      - action\n      - gate\n      - trigger\n      type: object\n    Whitelist:\n      description: A collection of whitelist items to match a policy evaluation against.\n      example:\n        name: name\n        comment: comment\n        id: id\n        version: version\n        items:\n        - trigger_id: trigger_id\n          id: id\n          gate: gate\n        - trigger_id: trigger_id\n          id: id\n          gate: gate\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        version:\n          type: string\n        comment:\n          type: string\n        items:\n          items:\n            $ref: '#/components/schemas/WhitelistItem'\n          type: array\n      required:\n      - id\n      - version\n      type: object\n    ImageRef:\n      description: A reference to an image\n      example:\n        type: tag\n        value: value\n      properties:\n        type:\n          enum:\n          - tag\n          - digest\n          - id\n          type: string\n        value:\n          type: string\n      required:\n      - type\n      - value\n      type: object\n    Policy:\n      example:\n        name: name\n        comment: comment\n        rules:\n        - action: GO\n          id: id\n          gate: gate\n          trigger: trigger\n          params:\n          - name: name\n            value: value\n          - name: name\n            value: value\n        - action: GO\n          id: id\n          gate: gate\n          trigger: trigger\n          params:\n          - name: name\n            value: value\n          - name: name\n            value: value\n        id: id\n        version: version\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        comment:\n          type: string\n        version:\n          type: string\n        rules:\n          items:\n            $ref: '#/components/schemas/PolicyRule'\n          type: array\n      required:\n      - id\n      - version\n      type: object\n    ImageSelectionRule:\n      example:\n        registry: registry\n        image:\n          type: tag\n          value: value\n        name: name\n        id: id\n        repository: repository\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        registry:\n          type: string\n        repository:\n          type: string\n        image:\n          $ref: '#/components/schemas/ImageRef'\n      required:\n      - image\n      - name\n      - registry\n      - repository\n      type: object\n    MappingRule:\n      example:\n        whitelist_ids:\n        - whitelist_ids\n        - whitelist_ids\n        registry: registry\n        image:\n          type: tag\n          value: value\n        policy_id: policy_id\n        name: name\n        id: id\n        policy_ids:\n        - policy_ids\n        - policy_ids\n        repository: repository\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        whitelist_ids:\n          items:\n            type: string\n          type: array\n        policy_id:\n          description: Optional single policy to evalute, if set will override any\n            value in policy_ids, for backwards compatibility. Generally, policy_ids\n            should be used even with a array of length 1.\n          type: string\n        policy_ids:\n          description: List of policyIds to evaluate in order, to completion\n          items:\n            description: PolicyId to evaluate\n            type: string\n          type: array\n        registry:\n          type: string\n        repository:\n          type: string\n        image:\n          $ref: '#/components/schemas/ImageRef'\n      required:\n      - image\n      - name\n      - registry\n      - repository\n      type: object\n    PolicyBundleRecord:\n      description: A policy bundle plus some metadata\n      example:\n        policybundle:\n          blacklisted_images:\n          - registry: registry\n            image:\n              type: tag\n              value: value\n            name: name\n            id: id\n            repository: repository\n          - registry: registry\n            image:\n              type: tag\n              value: value\n            name: name\n            id: id\n            repository: repository\n          mappings:\n          - whitelist_ids:\n            - whitelist_ids\n            - whitelist_ids\n            registry: registry\n            image:\n              type: tag\n              value: value\n            policy_id: policy_id\n            name: name\n            id: id\n            policy_ids:\n            - policy_ids\n            - policy_ids\n            repository: repository\n          - whitelist_ids:\n            - whitelist_ids\n            - whitelist_ids\n            registry: registry\n            image:\n              type: tag\n              value: value\n            policy_id: policy_id\n            name: name\n            id: id\n            policy_ids:\n            - policy_ids\n            - policy_ids\n            repository: repository\n          whitelists:\n          - name: name\n            comment: comment\n            id: id\n            version: version\n            items:\n            - trigger_id: trigger_id\n              id: id\n              gate: gate\n            - trigger_id: trigger_id\n              id: id\n              gate: gate\n          - name: name\n            comment: comment\n            id: id\n            version: version\n            items:\n            - trigger_id: trigger_id\n              id: id\n              gate: gate\n            - trigger_id: trigger_id\n              id: id\n              gate: gate\n          name: name\n          policies:\n          - name: name\n            comment: comment\n            rules:\n            - action: GO\n              id: id\n              gate: gate\n              trigger: trigger\n              params:\n              - name: name\n                value: value\n              - name: name\n                value: value\n            - action: GO\n              id: id\n              gate: gate\n              trigger: trigger\n              params:\n              - name: name\n                value: value\n              - name: name\n                value: value\n            id: id\n            version: version\n          - name: name\n            comment: comment\n            rules:\n            - action: GO\n              id: id\n              gate: gate\n              trigger: trigger\n              params:\n              - name: name\n                value: value\n              - name: name\n                value: value\n            - action: GO\n              id: id\n              gate: gate\n              trigger: trigger\n              params:\n              - name: name\n                value: value\n              - name: name\n                value: value\n            id: id\n            version: version\n          whitelisted_images:\n          - registry: registry\n            image:\n              type: tag\n              value: value\n            name: name\n            id: id\n            repository: repository\n          - registry: registry\n            image:\n              type: tag\n              value: value\n            name: name\n            id: id\n            repository: repository\n          comment: comment\n          id: id\n          version: version\n        policy_source: policy_source\n        last_updated: 2000-01-23T04:56:07.000+00:00\n        policyId: policyId\n        created_at: 2000-01-23T04:56:07.000+00:00\n        active: true\n        userId: userId\n      properties:\n        created_at:\n          format: date-time\n          type: string\n        last_updated:\n          format: date-time\n          type: string\n        policyId:\n          description: The bundle's identifier\n          type: string\n        active:\n          description: True if the bundle is currently defined to be used automatically\n          type: boolean\n        userId:\n          description: UserId of the user that owns the bundle\n          type: string\n        policy_source:\n          description: Source location of where the policy bundle originated\n          type: string\n        policybundle:\n          $ref: '#/components/schemas/PolicyBundle'\n      type: object\n    PolicyBundleList:\n      description: List of PolicyBundleRecord objects\n      items:\n        $ref: '#/components/schemas/PolicyBundleRecord'\n      type: array\n    ImageContent:\n      description: A metadata content record for a specific image, containing different\n        content type entries\n      type: object\n    ImageDetail:\n      description: A metadata detail record for a specific image. Multiple detail\n        records may map a single catalog image.\n      example:\n        registry: registry\n        last_updated: 2000-01-23T04:56:07.000+00:00\n        imageId: imageId\n        fulldigest: fulldigest\n        repo: repo\n        dockerfile: dockerfile\n        created_at: 2000-01-23T04:56:07.000+00:00\n        fulltag: fulltag\n        userId: userId\n        imageDigest: imageDigest\n      properties:\n        created_at:\n          format: date-time\n          type: string\n        last_updated:\n          format: date-time\n          type: string\n        fulltag:\n          description: Full docker-pullable tag string referencing the image\n          type: string\n        fulldigest:\n          description: Full docker-pullable digest string including the registry url\n            and repository necessary get the image\n          type: string\n        userId:\n          type: string\n        imageId:\n          type: string\n        registry:\n          type: string\n        repo:\n          type: string\n        dockerfile:\n          nullable: true\n          type: string\n        imageDigest:\n          description: The parent Anchore Image record to which this detail maps\n          type: string\n      type: object\n    AnchoreImageTagSummaryList:\n      description: a list of AnchoreImageTagSummary objects\n      items:\n        $ref: '#/components/schemas/AnchoreImageTagSummary'\n      type: array\n    AnchoreImageTagSummary:\n      description: A unique image in the engine.\n      example:\n        tag_detected_at: 1\n        imageId: imageId\n        analysis_status: analysis_status\n        parentDigest: parentDigest\n        analyzed_at: 6\n        created_at: 0\n        fulltag: fulltag\n        imageDigest: imageDigest\n      properties:\n        imageDigest:\n          type: string\n        parentDigest:\n          type: string\n        imageId:\n          type: string\n        analysis_status:\n          type: string\n        fulltag:\n          type: string\n        created_at:\n          type: integer\n        analyzed_at:\n          type: integer\n        tag_detected_at:\n          type: integer\n      type: object\n    AnchoreImage:\n      description: A unique image in the engine. May have multiple tags or references.\n        Unique to an image content across registries or repositories.\n      example:\n        last_updated: 2000-01-23T04:56:07.000+00:00\n        analysis_status: not_analyzed\n        created_at: 2000-01-23T04:56:07.000+00:00\n        annotations: '{}'\n        image_status: active\n        userId: userId\n        image_content: '{}'\n        image_detail:\n        - registry: registry\n          last_updated: 2000-01-23T04:56:07.000+00:00\n          imageId: imageId\n          fulldigest: fulldigest\n          repo: repo\n          dockerfile: dockerfile\n          created_at: 2000-01-23T04:56:07.000+00:00\n          fulltag: fulltag\n          userId: userId\n          imageDigest: imageDigest\n        - registry: registry\n          last_updated: 2000-01-23T04:56:07.000+00:00\n          imageId: imageId\n          fulldigest: fulldigest\n          repo: repo\n          dockerfile: dockerfile\n          created_at: 2000-01-23T04:56:07.000+00:00\n          fulltag: fulltag\n          userId: userId\n          imageDigest: imageDigest\n        imageDigest: imageDigest\n      properties:\n        image_content:\n          description: A metadata content record for a specific image, containing\n            different content type entries\n          type: object\n        image_detail:\n          description: Details specific to an image reference and type such as tag\n            and image source\n          items:\n            $ref: '#/components/schemas/ImageDetail'\n          type: array\n        last_updated:\n          format: date-time\n          type: string\n        created_at:\n          format: date-time\n          type: string\n        imageDigest:\n          type: string\n        userId:\n          type: string\n        annotations:\n          properties: {}\n          type: object\n        image_status:\n          description: State of the image\n          enum:\n          - active\n          - inactive\n          - disabled\n          type: string\n        analysis_status:\n          description: A state value for the current status of the analysis progress\n            of the image\n          enum:\n          - not_analyzed\n          - analyzing\n          - analyzed\n          - analysis_failed\n          type: string\n      type: object\n    AnchoreImageList:\n      description: A list of Anchore Images\n      items:\n        $ref: '#/components/schemas/AnchoreImage'\n      type: array\n    SystemStatusResponse:\n      description: System status response\n      example:\n        service_states:\n        - status_message: status_message\n          base_url: base_url\n          hostid: hostid\n          servicename: servicename\n          service_detail:\n            db_version: db_version\n            busy: true\n            available: true\n            up: true\n            detail: '{}'\n            message: message\n            version: version\n          version: version\n          status: true\n        - status_message: status_message\n          base_url: base_url\n          hostid: hostid\n          servicename: servicename\n          service_detail:\n            db_version: db_version\n            busy: true\n            available: true\n            up: true\n            detail: '{}'\n            message: message\n            version: version\n          version: version\n          status: true\n      properties:\n        service_states:\n          description: A list of service objects\n          items:\n            $ref: '#/components/schemas/Service'\n          type: array\n      type: object\n    StatusResponse:\n      description: System status response\n      example:\n        db_version: db_version\n        busy: true\n        available: true\n        up: true\n        detail: '{}'\n        message: message\n        version: version\n      properties:\n        available:\n          type: boolean\n        busy:\n          type: boolean\n        up:\n          type: boolean\n        message:\n          type: string\n        version:\n          type: string\n        db_version:\n          type: string\n        detail:\n          properties: {}\n          type: object\n      type: object\n    ImageAnalysisReport:\n      description: Analysis report json to be imported\n      type: object\n    ApiErrorResponse:\n      description: Generic HTTP API error response\n      properties:\n        code:\n          format: int32\n          type: integer\n        error_type:\n          type: string\n        message:\n          type: string\n        detail:\n          description: Details structure for additional information about the error\n            if available. Content and structure will be error specific.\n          properties: {}\n          type: object\n      type: object\n    Service:\n      description: A service status record\n      example:\n        status_message: status_message\n        base_url: base_url\n        hostid: hostid\n        servicename: servicename\n        service_detail:\n          db_version: db_version\n          busy: true\n          available: true\n          up: true\n          detail: '{}'\n          message: message\n          version: version\n        version: version\n        status: true\n      properties:\n        hostid:\n          description: The unique id of the host on which the service is executing\n          type: string\n        servicename:\n          description: Registered service name\n          type: string\n        base_url:\n          description: The url to reach the service, including port as needed\n          type: string\n        status_message:\n          description: A state indicating the condition of the service. Normal operation\n            is 'registered'\n          type: string\n        service_detail:\n          $ref: '#/components/schemas/StatusResponse'\n        status:\n          type: boolean\n        version:\n          description: The version of the service as reported by the service implementation\n            on registration\n          type: string\n      type: object\n    ServiceList:\n      description: A list of service objects\n      items:\n        $ref: '#/components/schemas/Service'\n      type: array\n    ContentResponse:\n      description: Generic wrapper for content listings from images\n      properties:\n        imageDigest:\n          type: string\n        content_type:\n          type: string\n        content:\n          items:\n            properties: {}\n            type: object\n          type: array\n      type: object\n    ContentFilesResponse:\n      description: File content listings from images\n      example:\n        content_type: content_type\n        content:\n        - mode: mode\n          uid: 1\n          filename: filename\n          gid: 0\n          sha256: sha256\n          size: 6\n          linkdest: linkdest\n          type: type\n        - mode: mode\n          uid: 1\n          filename: filename\n          gid: 0\n          sha256: sha256\n          size: 6\n          linkdest: linkdest\n          type: type\n        imageDigest: imageDigest\n      properties:\n        imageDigest:\n          type: string\n        content_type:\n          type: string\n        content:\n          items:\n            $ref: '#/components/schemas/ContentFilesResponse_content'\n          type: array\n      type: object\n    ContentPackageResponse:\n      description: Package content listings from images\n      example:\n        content_type: content_type\n        content:\n        - license: license\n          package: package\n          size: size\n          origin: origin\n          location: location\n          type: type\n          version: version\n        - license: license\n          package: package\n          size: size\n          origin: origin\n          location: location\n          type: type\n          version: version\n        imageDigest: imageDigest\n      properties:\n        imageDigest:\n          type: string\n        content_type:\n          type: string\n        content:\n          items:\n            $ref: '#/components/schemas/ContentPackageResponse_content'\n          type: array\n      type: object\n    ContentJAVAPackageResponse:\n      description: Java package content listings from images\n      example:\n        content_type: content_type\n        content:\n        - package: package\n          implementation-version: implementation-version\n          origin: origin\n          maven-version: maven-version\n          location: location\n          type: type\n          specification-version: specification-version\n        - package: package\n          implementation-version: implementation-version\n          origin: origin\n          maven-version: maven-version\n          location: location\n          type: type\n          specification-version: specification-version\n        imageDigest: imageDigest\n      properties:\n        imageDigest:\n          type: string\n        content_type:\n          type: string\n        content:\n          items:\n            $ref: '#/components/schemas/ContentJAVAPackageResponse_content'\n          type: array\n      type: object\n    MetadataResponse:\n      description: Generic wrapper for metadata listings from images\n      example:\n        metadata: '{}'\n        metadata_type: metadata_type\n        imageDigest: imageDigest\n      properties:\n        imageDigest:\n          type: string\n        metadata_type:\n          type: string\n        metadata:\n          type: object\n      type: object\n    PolicyEvaluation:\n      description: Evaluation response object\n      type: object\n    PolicyEvaluationList:\n      description: Evaluation response object\n      items:\n        $ref: '#/components/schemas/PolicyEvaluation'\n      type: array\n    SubscriptionUpdate:\n      description: A modification to a subscription entry to change its status or\n        value\n      example:\n        subscription_value: subscription_value\n        active: true\n      properties:\n        subscription_value:\n          description: The new subscription value, e.g. the new tag to be subscribed\n            to\n          nullable: true\n          type: string\n        active:\n          description: Toggle the subscription processing on or off\n          type: boolean\n      type: object\n    SubscriptionRequest:\n      description: A subscription entry to add to the system\n      example:\n        subscription_value: subscription_value\n        subscription_key: subscription_key\n        subscription_type: policy_eval\n      properties:\n        subscription_key:\n          type: string\n        subscription_value:\n          nullable: true\n          type: string\n        subscription_type:\n          enum:\n          - policy_eval\n          - tag_update\n          - vuln_update\n          - repo_update\n          - analysis_update\n          type: string\n      type: object\n    Subscription:\n      description: Subscription entry\n      example:\n        subscription_id: subscription_id\n        subscription_value: subscription_value\n        active: true\n        subscription_key: subscription_key\n        subscription_type: policy_eval\n        userId: userId\n      properties:\n        subscription_key:\n          description: The key value that the subscription references. E.g. a tag\n            value or a repo name.\n          type: string\n        subscription_type:\n          description: The type of the subscription\n          enum:\n          - policy_eval\n          - tag_update\n          - vuln_update\n          - repo_update\n          - analysis_update\n          type: string\n        subscription_value:\n          description: The value of the subscription target\n          nullable: true\n          type: string\n        userId:\n          description: The userId of the subscribed user\n          type: string\n        active:\n          description: Is the subscription currently active\n          type: boolean\n        subscription_id:\n          description: the unique id for this subscription record\n          type: string\n      type: object\n    SubscriptionList:\n      description: List of subscriptions\n      items:\n        $ref: '#/components/schemas/Subscription'\n      type: array\n    RepositoryTagList:\n      description: List of discovered tags in a repository\n      items:\n        type: string\n      type: array\n    RegistryConfigurationList:\n      description: List of registry configurations\n      items:\n        $ref: '#/components/schemas/RegistryConfiguration'\n      type: array\n    RegistryConfigurationRequest:\n      description: A registry record describing the endpoint and credentials for a\n        registry\n      example:\n        registry: registry\n        registry_user: registry_user\n        registry_type: registry_type\n        registry_name: registry_name\n        registry_pass: registry_pass\n        registry_verify: true\n      properties:\n        registry_user:\n          description: Username portion of credential to use for this registry\n          type: string\n        registry_pass:\n          description: Password portion of credential to use for this registry\n          type: string\n        registry_type:\n          description: Type of registry\n          type: string\n        registry:\n          description: hostname:port string for accessing the registry, as would be\n            used in a docker pull operation. May include some or all of a repository\n            and wildcards (e.g. docker.io/library/* or gcr.io/myproject/myrepository)\n          type: string\n        registry_name:\n          description: human readable name associated with registry record\n          type: string\n        registry_verify:\n          description: Use TLS/SSL verification for the registry URL\n          type: boolean\n      type: object\n    RegistryConfiguration:\n      description: A registry entry describing the endpoint and credentials for a\n        registry to pull images from\n      example:\n        registry: registry\n        last_upated: 2000-01-23T04:56:07.000+00:00\n        registry_user: registry_user\n        registry_type: registry_type\n        created_at: 2000-01-23T04:56:07.000+00:00\n        registry_name: registry_name\n        userId: userId\n        registry_verify: true\n      properties:\n        created_at:\n          format: date-time\n          type: string\n        last_upated:\n          format: date-time\n          type: string\n        registry_user:\n          description: Username portion of credential to use for this registry\n          type: string\n        registry_type:\n          description: Type of registry\n          type: string\n        userId:\n          description: Engine user that owns this registry entry\n          type: string\n        registry:\n          description: hostname:port string for accessing the registry, as would be\n            used in a docker pull operation\n          type: string\n        registry_name:\n          description: human readable name associated with registry record\n          type: string\n        registry_verify:\n          description: Use TLS/SSL verification for the registry URL\n          type: boolean\n      type: object\n    Vulnerability:\n      example:\n        severity: severity\n        package: package\n        package_path: package_path\n        nvd_data:\n        - cvss_v3:\n            base_score: 5.962133916683182\n            impact_score: 2.3021358869347655\n            exploitability_score: 5.637376656633329\n          cvss_v2:\n            base_score: 0.8008281904610115\n            impact_score: 1.4658129805029452\n            exploitability_score: 6.027456183070403\n          id: id\n        - cvss_v3:\n            base_score: 5.962133916683182\n            impact_score: 2.3021358869347655\n            exploitability_score: 5.637376656633329\n          cvss_v2:\n            base_score: 0.8008281904610115\n            impact_score: 1.4658129805029452\n            exploitability_score: 6.027456183070403\n          id: id\n        vendor_data:\n        - cvss_v3:\n            base_score: 5.962133916683182\n            impact_score: 2.3021358869347655\n            exploitability_score: 5.637376656633329\n          cvss_v2:\n            base_score: 0.8008281904610115\n            impact_score: 1.4658129805029452\n            exploitability_score: 6.027456183070403\n          id: id\n        - cvss_v3:\n            base_score: 5.962133916683182\n            impact_score: 2.3021358869347655\n            exploitability_score: 5.637376656633329\n          cvss_v2:\n            base_score: 0.8008281904610115\n            impact_score: 1.4658129805029452\n            exploitability_score: 6.027456183070403\n          id: id\n        package_type: package_type\n        package_cpe: package_cpe\n        url: url\n        feed: feed\n        package_version: package_version\n        fix: fix\n        vuln: vuln\n        feed_group: feed_group\n        package_name: package_name\n      properties:\n        vuln:\n          description: The vulnerability identifier, such as CVE-2017-100, or RHSA-2017123\n          type: string\n        fix:\n          description: The package containing a fix, if available\n          type: string\n        severity:\n          description: The severity of the vulnerability\n          type: string\n        package:\n          description: The package name and version that are vulnerable in the image\n          type: string\n        url:\n          description: The url for more information about the vulnerability\n          type: string\n        feed:\n          description: The name of the feed where vulnerability match was made\n          type: string\n        feed_group:\n          description: The name of the feed group where vulnerability match was made\n          type: string\n        package_name:\n          description: The name of the vulnerable package artifact\n          type: string\n        package_version:\n          description: The version of the vulnerable package artifact\n          type: string\n        package_type:\n          description: The type of vulnerable package\n          type: string\n        package_cpe:\n          description: The CPE string (if applicable) describing the package to vulnerability\n            match\n          type: string\n        package_path:\n          description: The location (if applicable) of the vulnerable package in the\n            container filesystem\n          type: string\n        nvd_data:\n          description: List of Nvd Data objects\n          items:\n            $ref: '#/components/schemas/NvdDataObject'\n          type: array\n        vendor_data:\n          description: List of Vendor Data objects\n          items:\n            $ref: '#/components/schemas/VendorDataObject'\n          type: array\n      type: object\n    NvdDataList:\n      description: List of Nvd Data objects\n      items:\n        $ref: '#/components/schemas/NvdDataObject'\n      type: array\n    NvdDataObject:\n      example:\n        cvss_v3:\n          base_score: 5.962133916683182\n          impact_score: 2.3021358869347655\n          exploitability_score: 5.637376656633329\n        cvss_v2:\n          base_score: 0.8008281904610115\n          impact_score: 1.4658129805029452\n          exploitability_score: 6.027456183070403\n        id: id\n      properties:\n        id:\n          description: NVD Vulnerability ID\n          type: string\n        cvss_v2:\n          $ref: '#/components/schemas/CVSSV2Scores'\n        cvss_v3:\n          $ref: '#/components/schemas/CVSSV3Scores'\n      type: object\n    VendorDataList:\n      description: List of Vendor Data objects\n      items:\n        $ref: '#/components/schemas/VendorDataObject'\n      type: array\n    VendorDataObject:\n      example:\n        cvss_v3:\n          base_score: 5.962133916683182\n          impact_score: 2.3021358869347655\n          exploitability_score: 5.637376656633329\n        cvss_v2:\n          base_score: 0.8008281904610115\n          impact_score: 1.4658129805029452\n          exploitability_score: 6.027456183070403\n        id: id\n      properties:\n        id:\n          description: Vendor Vulnerability ID\n          type: string\n        cvss_v2:\n          $ref: '#/components/schemas/CVSSV2Scores'\n        cvss_v3:\n          $ref: '#/components/schemas/CVSSV3Scores'\n      type: object\n    CVSSV2Scores:\n      example:\n        base_score: 0.8008281904610115\n        impact_score: 1.4658129805029452\n        exploitability_score: 6.027456183070403\n      properties:\n        base_score:\n          nullable: true\n          type: number\n        exploitability_score:\n          nullable: true\n          type: number\n        impact_score:\n          nullable: true\n          type: number\n      type: object\n    CVSSV3Scores:\n      example:\n        base_score: 5.962133916683182\n        impact_score: 2.3021358869347655\n        exploitability_score: 5.637376656633329\n      properties:\n        base_score:\n          nullable: true\n          type: number\n        exploitability_score:\n          nullable: true\n          type: number\n        impact_score:\n          nullable: true\n          type: number\n      type: object\n    VulnerabilityList:\n      description: List of Vulnerability objects\n      items:\n        $ref: '#/components/schemas/Vulnerability'\n      type: array\n    VulnerabilityResponse:\n      description: envelope containing list of vulnerabilities\n      example:\n        vulnerability_type: vulnerability_type\n        vulnerabilities:\n        - severity: severity\n          package: package\n          package_path: package_path\n          nvd_data:\n          - cvss_v3:\n              base_score: 5.962133916683182\n              impact_score: 2.3021358869347655\n              exploitability_score: 5.637376656633329\n            cvss_v2:\n              base_score: 0.8008281904610115\n              impact_score: 1.4658129805029452\n              exploitability_score: 6.027456183070403\n            id: id\n          - cvss_v3:\n              base_score: 5.962133916683182\n              impact_score: 2.3021358869347655\n              exploitability_score: 5.637376656633329\n            cvss_v2:\n              base_score: 0.8008281904610115\n              impact_score: 1.4658129805029452\n              exploitability_score: 6.027456183070403\n            id: id\n          vendor_data:\n          - cvss_v3:\n              base_score: 5.962133916683182\n              impact_score: 2.3021358869347655\n              exploitability_score: 5.637376656633329\n            cvss_v2:\n              base_score: 0.8008281904610115\n              impact_score: 1.4658129805029452\n              exploitability_score: 6.027456183070403\n            id: id\n          - cvss_v3:\n              base_score: 5.962133916683182\n              impact_score: 2.3021358869347655\n              exploitability_score: 5.637376656633329\n            cvss_v2:\n              base_score: 0.8008281904610115\n              impact_score: 1.4658129805029452\n              exploitability_score: 6.027456183070403\n            id: id\n          package_type: package_type\n          package_cpe: package_cpe\n          url: url\n          feed: feed\n          package_version: package_version\n          fix: fix\n          vuln: vuln\n          feed_group: feed_group\n          package_name: package_name\n        - severity: severity\n          package: package\n          package_path: package_path\n          nvd_data:\n          - cvss_v3:\n              base_score: 5.962133916683182\n              impact_score: 2.3021358869347655\n              exploitability_score: 5.637376656633329\n            cvss_v2:\n              base_score: 0.8008281904610115\n              impact_score: 1.4658129805029452\n              exploitability_score: 6.027456183070403\n            id: id\n          - cvss_v3:\n              base_score: 5.962133916683182\n              impact_score: 2.3021358869347655\n              exploitability_score: 5.637376656633329\n            cvss_v2:\n              base_score: 0.8008281904610115\n              impact_score: 1.4658129805029452\n              exploitability_score: 6.027456183070403\n            id: id\n          vendor_data:\n          - cvss_v3:\n              base_score: 5.962133916683182\n              impact_score: 2.3021358869347655\n              exploitability_score: 5.637376656633329\n            cvss_v2:\n              base_score: 0.8008281904610115\n              impact_score: 1.4658129805029452\n              exploitability_score: 6.027456183070403\n            id: id\n          - cvss_v3:\n              base_score: 5.962133916683182\n              impact_score: 2.3021358869347655\n              exploitability_score: 5.637376656633329\n            cvss_v2:\n              base_score: 0.8008281904610115\n              impact_score: 1.4658129805029452\n              exploitability_score: 6.027456183070403\n            id: id\n          package_type: package_type\n          package_cpe: package_cpe\n          url: url\n          feed: feed\n          package_version: package_version\n          fix: fix\n          vuln: vuln\n          feed_group: feed_group\n          package_name: package_name\n        imageDigest: imageDigest\n      properties:\n        imageDigest:\n          type: string\n        vulnerability_type:\n          type: string\n        vulnerabilities:\n          description: List of Vulnerability objects\n          items:\n            $ref: '#/components/schemas/Vulnerability'\n          type: array\n      type: object\n    ImageFilter:\n      description: Filter for an image list by id, tag, or digest, but not both\n      example:\n        digest: digest\n        tag: tag\n      properties:\n        tag:\n          type: string\n        digest:\n          type: string\n      type: object\n    AnchoreErrorCode:\n      description: A description of an anchore error code (name, description)\n      example:\n        name: name\n        description: description\n      properties:\n        name:\n          description: Error code name\n          type: string\n        description:\n          description: Description of the error code\n          type: string\n      type: object\n    GateSpec:\n      description: A description of the set of gates available in this engine and\n        the triggers and parameters supported\n      example:\n        name: name\n        description: description\n        superceded_by: superceded_by\n        state: active\n        triggers:\n        - name: name\n          description: description\n          superceded_by: superceded_by\n          state: active\n          parameters:\n          - name: name\n            validator: '{}'\n            description: description\n            superceded_by: superceded_by\n            state: active\n            required: true\n            example: example\n          - name: name\n            validator: '{}'\n            description: description\n            superceded_by: superceded_by\n            state: active\n            required: true\n            example: example\n        - name: name\n          description: description\n          superceded_by: superceded_by\n          state: active\n          parameters:\n          - name: name\n            validator: '{}'\n            description: description\n            superceded_by: superceded_by\n            state: active\n            required: true\n            example: example\n          - name: name\n            validator: '{}'\n            description: description\n            superceded_by: superceded_by\n            state: active\n            required: true\n            example: example\n      properties:\n        name:\n          description: Gate name, as it would appear in a policy document\n          type: string\n        description:\n          description: Description of the gate\n          type: string\n        state:\n          description: State of the gate and transitively all triggers it contains\n            if not 'active'\n          enum:\n          - active\n          - deprecated\n          - eol\n          type: string\n        superceded_by:\n          description: The name of another trigger that supercedes this on functionally\n            if this is deprecated\n          nullable: true\n          type: string\n        triggers:\n          description: List of the triggers that can fire for this Gate\n          items:\n            $ref: '#/components/schemas/TriggerSpec'\n          type: array\n      type: object\n    TriggerSpec:\n      description: Definition of a trigger and its parameters\n      example:\n        name: name\n        description: description\n        superceded_by: superceded_by\n        state: active\n        parameters:\n        - name: name\n          validator: '{}'\n          description: description\n          superceded_by: superceded_by\n          state: active\n          required: true\n          example: example\n        - name: name\n          validator: '{}'\n          description: description\n          superceded_by: superceded_by\n          state: active\n          required: true\n          example: example\n      properties:\n        name:\n          description: Name of the trigger as it would appear in a policy document\n          type: string\n        description:\n          description: Trigger description for what it tests and when it will fire\n            during evaluation\n          type: string\n        state:\n          description: State of the trigger\n          enum:\n          - active\n          - deprecated\n          - eol\n          type: string\n        superceded_by:\n          description: The name of another trigger that supercedes this on functionally\n            if this is deprecated\n          nullable: true\n          type: string\n        parameters:\n          description: The list of parameters that are valid for this trigger\n          items:\n            $ref: '#/components/schemas/TriggerParamSpec'\n          type: array\n      type: object\n    TriggerParamSpec:\n      example:\n        name: name\n        validator: '{}'\n        description: description\n        superceded_by: superceded_by\n        state: active\n        required: true\n        example: example\n      properties:\n        name:\n          description: Parameter name as it appears in policy document\n          type: string\n        description:\n          type: string\n        example:\n          description: An example value for the parameter (encoded as a string if\n            the parameter is an object or list type)\n          nullable: true\n          type: string\n        state:\n          description: State of the trigger parameter\n          enum:\n          - active\n          - deprecated\n          - eol\n          type: string\n        superceded_by:\n          description: The name of another trigger that supercedes this on functionally\n            if this is deprecated\n          nullable: true\n          type: string\n        required:\n          description: Is this a required parameter or optional\n          type: boolean\n        validator:\n          description: If present, a definition for validation of input. Typically\n            a jsonschema object that can be used to validate an input against.\n          properties: {}\n          type: object\n      type: object\n    FeedMetadata:\n      description: Metadata on a single feed based on what the engine finds from querying\n        the endpoints\n      example:\n        last_full_sync: 2000-01-23T04:56:07.000+00:00\n        updated_at: 2000-01-23T04:56:07.000+00:00\n        name: name\n        created_at: 2000-01-23T04:56:07.000+00:00\n        groups:\n        - record_count: 0\n          last_sync: 2000-01-23T04:56:07.000+00:00\n          name: name\n          created_at: 2000-01-23T04:56:07.000+00:00\n        - record_count: 0\n          last_sync: 2000-01-23T04:56:07.000+00:00\n          name: name\n          created_at: 2000-01-23T04:56:07.000+00:00\n      properties:\n        name:\n          description: name of the feed\n          type: string\n        created_at:\n          description: Date the metadata record was created in engine (first seen\n            on source)\n          format: date-time\n          type: string\n        updated_at:\n          description: Date the metadata was last updated\n          format: date-time\n          type: string\n        groups:\n          items:\n            $ref: '#/components/schemas/FeedGroupMetadata'\n          type: array\n        last_full_sync:\n          format: date-time\n          type: string\n      type: object\n    FeedGroupMetadata:\n      example:\n        record_count: 0\n        last_sync: 2000-01-23T04:56:07.000+00:00\n        name: name\n        created_at: 2000-01-23T04:56:07.000+00:00\n      properties:\n        name:\n          type: string\n        created_at:\n          format: date-time\n          type: string\n        last_sync:\n          format: date-time\n          type: string\n        record_count:\n          type: integer\n      type: object\n    EventResponse:\n      description: A record of occurance of an asynchronous event triggered either\n        by system or by user activity\n      example:\n        generated_uuid: generated_uuid\n        created_at: 2000-01-23T04:56:07.000+00:00\n        event:\n          resource:\n            user_id: user_id\n            id: id\n            type: type\n          level: level\n          details: '{}'\n          source:\n            base_url: base_url\n            hostid: hostid\n            servicename: servicename\n            request_id: request_id\n          type: type\n          message: message\n          timestamp: 2000-01-23T04:56:07.000+00:00\n      properties:\n        generated_uuid:\n          type: string\n        created_at:\n          format: date-time\n          type: string\n        event:\n          $ref: '#/components/schemas/EventResponse_event'\n      type: object\n    EventsList:\n      description: Response envelope for paginated listing of events\n      example:\n        next_page: true\n        item_count: 0\n        page: 6\n        results:\n        - generated_uuid: generated_uuid\n          created_at: 2000-01-23T04:56:07.000+00:00\n          event:\n            resource:\n              user_id: user_id\n              id: id\n              type: type\n            level: level\n            details: '{}'\n            source:\n              base_url: base_url\n              hostid: hostid\n              servicename: servicename\n              request_id: request_id\n            type: type\n            message: message\n            timestamp: 2000-01-23T04:56:07.000+00:00\n        - generated_uuid: generated_uuid\n          created_at: 2000-01-23T04:56:07.000+00:00\n          event:\n            resource:\n              user_id: user_id\n              id: id\n              type: type\n            level: level\n            details: '{}'\n            source:\n              base_url: base_url\n              hostid: hostid\n              servicename: servicename\n              request_id: request_id\n            type: type\n            message: message\n            timestamp: 2000-01-23T04:56:07.000+00:00\n      properties:\n        results:\n          description: List of events\n          items:\n            $ref: '#/components/schemas/EventResponse'\n          type: array\n        next_page:\n          description: Boolean flag, True indicates there are more events and False\n            otherwise\n          type: boolean\n        item_count:\n          description: Number of events in this page\n          type: integer\n        page:\n          description: Page number of this result set\n          type: integer\n      type: object\n    AccountCreationRequest:\n      description: An account to create/add to the system. If already exists will\n        return 400.\n      example:\n        name: name\n        email: email\n      properties:\n        name:\n          description: The account name to use. This will identify the account and\n            must be globally unique in the system.\n          pattern: ^[a-zA-Z0-9][a-zA-Z0-9@.!#$+-=^_`~;]{1,126}[a-zA-Z0-9]$\n          type: string\n        email:\n          description: An optional email to associate with the account for contact\n            purposes\n          pattern: '[a-z0-9!#$%\u0026''*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%\u0026''*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?'\n          type: string\n      required:\n      - name\n      type: object\n    Account:\n      description: Account information\n      example:\n        last_updated: 2000-01-23T04:56:07.000+00:00\n        name: name\n        created_at: 2000-01-23T04:56:07.000+00:00\n        state: enabled\n        type: user\n        email: email\n      properties:\n        name:\n          description: The account identifier, not updatable after creation\n          type: string\n        type:\n          description: The user type (admin vs user). If not specified in a POST request,\n            'user' is default\n          enum:\n          - user\n          - admin\n          - service\n          type: string\n        state:\n          description: State of the account. Disabled accounts prevent member users\n            from logging in, deleting accounts are disabled and pending deletion and\n            will be removed once all owned resources are garbage collected by the\n            system\n          enum:\n          - enabled\n          - disabled\n          - deleting\n          type: string\n        email:\n          description: Optional email address associated with the account\n          type: string\n        created_at:\n          description: The timestamp when the account was created\n          format: date-time\n          type: string\n        last_updated:\n          description: The timestamp of the last update to the account metadata itself\n            (not users or creds)\n          format: date-time\n          type: string\n      required:\n      - name\n      type: object\n    AccountStatus:\n      description: A summary of account status\n      example:\n        state: enabled\n      properties:\n        state:\n          description: The status of the account\n          enum:\n          - enabled\n          - disabled\n          type: string\n      type: object\n    User:\n      description: A username for authenticating with one or more types of credentials.\n        User type defines the expected credentials allowed for the user. Native users\n        have passwords, External users have no credential internally. Internal users\n        are service/system users for inter-service communication.\n      example:\n        last_updated: 2000-01-23T04:56:07.000+00:00\n        created_at: 2000-01-23T04:56:07.000+00:00\n        source: source\n        type: native\n        username: username\n      properties:\n        username:\n          description: The username to authenticate with\n          type: string\n        type:\n          description: The user's type\n          enum:\n          - native\n          - internal\n          - external\n          type: string\n        source:\n          description: If the user is external, this is the source that the user was\n            initialized from. All other user types have this set to null\n          type: string\n        created_at:\n          description: The timestampt the user record was created\n          format: date-time\n          type: string\n        last_updated:\n          description: The timestamp of the last update to this record\n          format: date-time\n          type: string\n      required:\n      - username\n      type: object\n    UserCreationRequest:\n      description: A payload for creating a new user, includes the username and password\n        in a single request\n      example:\n        password: password\n        username: username\n      properties:\n        username:\n          description: The username to create\n          pattern: ^[a-zA-Z0-9][a-zA-Z0-9@.!#$+-=^_`~;]{1,126}[a-zA-Z0-9]$\n          type: string\n        password:\n          description: The initial password for the user, must be at least 6 characters,\n            up to 128\n          pattern: .{6,128}$\n          type: string\n      required:\n      - password\n      - username\n      type: object\n    AccessCredential:\n      description: A login credential mapped to a user identity. For password credentials,\n        the username to present for Basic auth is the user's username from the user\n        record\n      example:\n        created_at: created_at\n        type: password\n        value: value\n      properties:\n        type:\n          description: The type of credential\n          enum:\n          - password\n          type: string\n        value:\n          description: The credential value (e.g. the password)\n          type: string\n        created_at:\n          description: The timestamp of creation of the credential\n          type: string\n      required:\n      - type\n      - value\n      type: object\n    AccountList:\n      items:\n        $ref: '#/components/schemas/Account'\n      type: array\n    UserList:\n      items:\n        $ref: '#/components/schemas/User'\n      type: array\n    CredentialList:\n      items:\n        $ref: '#/components/schemas/AccessCredential'\n      type: array\n    ServiceVersion:\n      description: Version information for a service\n      example:\n        service:\n          version: version\n        api:\n          version: version\n        db:\n          schema_version: schema_version\n      properties:\n        service:\n          $ref: '#/components/schemas/ServiceVersion_service'\n        api:\n          $ref: '#/components/schemas/ServiceVersion_api'\n        db:\n          $ref: '#/components/schemas/ServiceVersion_db'\n      type: object\n    ArchiveSummary:\n      description: A summarization of the available archives, a place to for long-term\n        storage of audit, analysis, or other data to remove it from the system's working\n        set but keep it available.\n      example:\n        images:\n          last_updated: 2000-01-23T04:56:07.000+00:00\n          total_image_count: 0\n          total_tag_count: 6\n          total_data_bytes: 1\n        rules:\n          last_updated: 2000-01-23T04:56:07.000+00:00\n          count: 5\n      properties:\n        images:\n          $ref: '#/components/schemas/AnalysisArchiveSummary'\n        rules:\n          $ref: '#/components/schemas/AnalysisArchiveRulesSummary'\n      type: object\n    AnalysisArchiveSummary:\n      description: A summarization of the analysis archive, including size, counts,\n        etc. This archive stores image analysis only, never the actual image content\n        or layers.\n      example:\n        last_updated: 2000-01-23T04:56:07.000+00:00\n        total_image_count: 0\n        total_tag_count: 6\n        total_data_bytes: 1\n      properties:\n        total_image_count:\n          description: The number of unique images (digests) in the archive\n          type: integer\n        total_tag_count:\n          description: The number of tag records (registry/repo:tag pull strings)\n            in the archive. This may include repeated tags but will always have a\n            unique tag-\u003edigest mapping per record.\n          type: integer\n        total_data_bytes:\n          description: The total sum of all the bytes stored to the backing storage.\n            Accounts for anchore-applied compression, but not compression by the underlying\n            storage system.\n          type: integer\n        last_updated:\n          description: The timestamp of the most recent archived image\n          format: date-time\n          type: string\n      type: object\n    AnalysisArchiveRulesSummary:\n      description: Summary of the transition rule set\n      example:\n        last_updated: 2000-01-23T04:56:07.000+00:00\n        count: 5\n      properties:\n        count:\n          description: The number of rules for this account\n          type: integer\n        last_updated:\n          description: The newest last_updated timestamp from the set of rules\n          format: date-time\n          type: string\n      type: object\n    ImageAnalysisReferences:\n      description: List of image digests to archive\n      items:\n        description: Image digest\n        type: string\n      type: array\n    AddAnalysisArchiveResult:\n      description: List of analysis archive add results\n      items:\n        $ref: '#/components/schemas/AnalysisArchiveAddResult'\n      type: array\n    AnalysisArchiveAddResult:\n      description: The result of adding a single digest to the archive\n      example:\n        digest: digest\n        detail: detail\n        status: archived\n      properties:\n        digest:\n          description: The image digest requested to be added\n          type: string\n        status:\n          description: The status of the archive add operation. Typically either 'archived'\n            or 'error'\n          enum:\n          - archived\n          - archiving\n          - error\n          type: string\n        detail:\n          description: Details on the status, e.g. the error message\n          type: string\n      type: object\n    ArchivedAnalyses:\n      description: List of archived analyses\n      items:\n        $ref: '#/components/schemas/ArchivedAnalysis'\n      type: array\n    ArchivedAnalysis:\n      example:\n        last_updated: 2000-01-23T04:56:07.000+00:00\n        parentDigest: parentDigest\n        analyzed_at: 2000-01-23T04:56:07.000+00:00\n        annotations: '{}'\n        created_at: 2000-01-23T04:56:07.000+00:00\n        archive_size_bytes: 0\n        imageDigest: imageDigest\n        status: archiving\n        image_detail:\n        - registry: registry\n          detected_at: 2000-01-23T04:56:07.000+00:00\n          pullstring: pullstring\n          tag: tag\n          repository: repository\n        - registry: registry\n          detected_at: 2000-01-23T04:56:07.000+00:00\n          pullstring: pullstring\n          tag: tag\n          repository: repository\n      properties:\n        imageDigest:\n          description: The image digest (digest of the manifest describing the image,\n            per docker spec)\n          type: string\n        parentDigest:\n          description: The digest of a parent manifest (for manifest-list images)\n          type: string\n        annotations:\n          description: User provided annotations as key-value pairs\n          properties: {}\n          type: object\n        status:\n          description: The archival status\n          enum:\n          - archiving\n          - archived\n          - deleting\n          - deleted\n          type: string\n        image_detail:\n          description: List of tags associated with the image digest\n          items:\n            $ref: '#/components/schemas/TagEntry'\n          type: array\n        created_at:\n          format: date-time\n          type: string\n        last_updated:\n          format: date-time\n          type: string\n        analyzed_at:\n          format: date-time\n          type: string\n        archive_size_bytes:\n          description: The size, in bytes, of the analysis archive file\n          type: integer\n      type: object\n    AnalysisArchiveRules:\n      description: Rule set for automatic archiving of system objects and flushing\n        of archived objects (permament delete).\n      items:\n        $ref: '#/components/schemas/AnalysisArchiveTransitionRule'\n      type: array\n    AnalysisArchiveTransitionRule:\n      description: A rule for auto-archiving image analysis by time and/or tag-history\n      example:\n        tag_versions_newer: 0\n        last_updated: 2000-01-23T04:56:07.000+00:00\n        created_at: 2000-01-23T04:56:07.000+00:00\n        selector:\n          registry: registry\n          tag: tag\n          repository: repository\n        analysis_age_days: 6\n        system_global: true\n        transition: archive\n      properties:\n        selector:\n          $ref: '#/components/schemas/ImageSelector'\n        tag_versions_newer:\n          description: Number of images mapped to the tag that are newer\n          type: integer\n        analysis_age_days:\n          description: Matches if the analysis is strictly older than this number\n            of days\n          type: integer\n        transition:\n          description: The type of transition to make. If \"archive\", then archive\n            an image from the working set and remove it from the working set. If \"delete\",\n            then match against archived images and delete from the archive if match.\n          enum:\n          - archive\n          - delete\n          type: string\n        system_global:\n          description: True if the rule applies to all accounts in the system. This\n            is only available to admin users to update/modify, but all users with\n            permission to list rules can see them\n          type: boolean\n        created_at:\n          format: date-time\n          type: string\n        last_updated:\n          format: date-time\n          type: string\n      required:\n      - transition\n      type: object\n    AnalysisArchiveTransitionHistory:\n      description: A rule for auto-archiving image analysis by time and/or tag-history\n      properties:\n        transition_task_id:\n          description: The task that created \u0026 updated this entry\n          type: string\n        rule_id:\n          type: string\n        imageDigest:\n          type: string\n        transition:\n          enum:\n          - archive\n          - delete\n          type: string\n        created_at:\n          format: date-time\n          type: string\n        last_updated:\n          format: date-time\n          type: string\n      type: object\n    ImageSelector:\n      description: A set of selection criteria to match an image by a tagged pullstring\n        based on its components, with regex support in each field\n      example:\n        registry: registry\n        tag: tag\n        repository: repository\n      properties:\n        registry:\n          description: The registry section of a pull string. e.g. with \"docker.io/anchore/anchore-engine:latest\",\n            this is \"docker.io\"\n          type: string\n        repository:\n          description: The repository section of a pull string. e.g. with \"docker.io/anchore/anchore-engine:latest\",\n            this is \"anchore/anchore-engine\"\n          type: string\n        tag:\n          description: The tag-only section of a pull string. e.g. with \"docker.io/anchore/anchore-engine:latest\",\n            this is \"latest\"\n          type: string\n      type: object\n    FeedSyncResults:\n      description: An array of feed sync summaries representing the result of an explicit\n        feed sync operation\n      items:\n        $ref: '#/components/schemas/FeedSyncResult'\n      type: array\n    FeedSyncResult:\n      description: The result of a sync of a single feed\n      example:\n        feed: feed\n        total_time_seconds: 0.8008281904610115\n        groups:\n        - total_time_seconds: 5.962133916683182\n          updated_image_count: 6\n          updated_record_count: 1\n          group: group\n          status: success\n        - total_time_seconds: 5.962133916683182\n          updated_image_count: 6\n          updated_record_count: 1\n          group: group\n          status: success\n        status: success\n      properties:\n        feed:\n          description: The name of the feed synced\n          type: string\n        status:\n          description: The result of the sync operations, either co\n          enum:\n          - success\n          - failure\n          type: string\n        total_time_seconds:\n          description: The duratin, in seconds, of the sync of the feed, the sum of\n            all the group syncs\n          type: number\n        groups:\n          description: Array of group sync results\n          items:\n            $ref: '#/components/schemas/GroupSyncResult'\n          type: array\n      type: object\n    GroupSyncResult:\n      example:\n        total_time_seconds: 5.962133916683182\n        updated_image_count: 6\n        updated_record_count: 1\n        group: group\n        status: success\n      properties:\n        group:\n          description: The name of the group\n          type: string\n        status:\n          enum:\n          - success\n          - failure\n          type: string\n        updated_image_count:\n          description: The number of images updated by the this group sync, across\n            all accounts. This is typically only non-zero for vulnerability feeds\n            which update images' vulnerability results during the sync.\n          type: integer\n        updated_record_count:\n          description: The number of feed data records synced down as either updates\n            or new records\n          type: integer\n        total_time_seconds:\n          description: The duration of the group sync in seconds\n          type: number\n      type: object\n    TokenResponse:\n      example:\n        token: token\n      properties:\n        token:\n          description: The token content\n          type: string\n      required:\n      - token\n      type: object\n    PaginatedVulnerableImageList_allOf:\n      properties:\n        images:\n          items:\n            $ref: '#/components/schemas/VulnerableImage'\n          type: array\n    PaginatedVulnerabilityList_allOf:\n      properties:\n        vulnerabilities:\n          description: The listing of matching vulnerabilities for the query subject\n            to pagination\n          items:\n            $ref: '#/components/schemas/StandaloneVulnerability'\n          type: array\n    PaginatedImageList_allOf:\n      properties:\n        images:\n          items:\n            $ref: '#/components/schemas/ImageWithPackages'\n          type: array\n    PolicyRule_params:\n      example:\n        name: name\n        value: value\n      properties:\n        name:\n          type: string\n        value:\n          type: string\n      required:\n      - name\n      - value\n    ContentFilesResponse_content:\n      example:\n        mode: mode\n        uid: 1\n        filename: filename\n        gid: 0\n        sha256: sha256\n        size: 6\n        linkdest: linkdest\n        type: type\n      properties:\n        filename:\n          type: string\n        gid:\n          type: integer\n        linkdest:\n          nullable: true\n          type: string\n        mode:\n          type: string\n        sha256:\n          nullable: true\n          type: string\n        size:\n          type: integer\n        type:\n          type: string\n        uid:\n          type: integer\n    ContentPackageResponse_content:\n      example:\n        license: license\n        package: package\n        size: size\n        origin: origin\n        location: location\n        type: type\n        version: version\n      properties:\n        package:\n          type: string\n        version:\n          type: string\n        size:\n          type: string\n        type:\n          type: string\n        origin:\n          type: string\n        license:\n          type: string\n        location:\n          type: string\n    ContentJAVAPackageResponse_content:\n      example:\n        package: package\n        implementation-version: implementation-version\n        origin: origin\n        maven-version: maven-version\n        location: location\n        type: type\n        specification-version: specification-version\n      properties:\n        package:\n          type: string\n        implementation-version:\n          type: string\n        specification-version:\n          type: string\n        maven-version:\n          type: string\n        location:\n          type: string\n        type:\n          type: string\n        origin:\n          type: string\n    EventResponse_event_source:\n      example:\n        base_url: base_url\n        hostid: hostid\n        servicename: servicename\n        request_id: request_id\n      properties:\n        servicename:\n          type: string\n        hostid:\n          type: string\n        base_url:\n          type: string\n        request_id:\n          type: string\n    EventResponse_event_resource:\n      example:\n        user_id: user_id\n        id: id\n        type: type\n      properties:\n        user_id:\n          type: string\n        id:\n          type: string\n        type:\n          type: string\n    EventResponse_event:\n      example:\n        resource:\n          user_id: user_id\n          id: id\n          type: type\n        level: level\n        details: '{}'\n        source:\n          base_url: base_url\n          hostid: hostid\n          servicename: servicename\n          request_id: request_id\n        type: type\n        message: message\n        timestamp: 2000-01-23T04:56:07.000+00:00\n      properties:\n        source:\n          $ref: '#/components/schemas/EventResponse_event_source'\n        resource:\n          $ref: '#/components/schemas/EventResponse_event_resource'\n        type:\n          type: string\n        level:\n          type: string\n        message:\n          type: string\n        details:\n          properties: {}\n          type: object\n        timestamp:\n          format: date-time\n          type: string\n    ServiceVersion_service:\n      example:\n        version: version\n      properties:\n        version:\n          description: Semantic Version string of the service implementation\n          type: string\n    ServiceVersion_api:\n      description: Api Version string\n      example:\n        version: version\n      properties:\n        version:\n          description: Semantic version of the api\n          type: string\n    ServiceVersion_db:\n      example:\n        schema_version: schema_version\n      properties:\n        schema_version:\n          description: Semantic version of the db schema\n          type: string\n  securitySchemes:\n    basicAuth:\n      scheme: basic\n      type: http\n",
			"canonicalURL": "/github.com/anchore/kubernetes-admission-controller@b6dd2b3b51f2f91c52c16e640b2e44e26a827e4f/-/blob/pkg/anchore/client/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/anchore/kubernetes-admission-controller/blob/b6dd2b3b51f2f91c52c16e640b2e44e26a827e4f/pkg/anchore/client/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}