{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/plantbreeding/BrAPI"
		},
		"file": {
			"name": "Variant.yaml",
			"size": 0,
			"path": "Specification/BrAPI-Genotyping/Variants/Schemas/Variant.yaml",
			"byteSize": 4939,
			"content": "info:\n  title: BrAPI\n  version: ''\nopenapi: 3.0.0\npaths: {}\ncomponents:\n  schemas:\n    Variant:\n      type: object\n      description: |-\n        A `Variant` represents a change in DNA sequence relative to some reference.\n        For example, a variant could represent a SNP or an insertion.\n        Variants belong to a `VariantSet`.\n        This is equivalent to a row in VCF.\n      properties:\n        alternate_bases:\n          description: The bases that appear instead of the reference bases. Multiple alternate alleles are possible.\n          items:\n            type: string\n          type: array\n          example: ['TAGGATTGAGCTCTATAT']\n        additionalInfo:\n          additionalProperties:\n            type: string\n          description: Additional arbitrary info\n          type: object\n        ciend:\n          items:\n            type: integer\n          description: Similar to \"cipos\", but for the variant's end position (which is derived from start + svlen).\n          example: [ -1000, 0 ]\n          type: array\n        cipos:\n          items:\n            type: integer\n          description: |-\n            In the case of structural variants, start and end of the variant may not\n            be known with an exact base position. \"cipos\" provides an interval with\n            high confidence for the start position. The interval is provided by 0 or\n            2 signed integers which are added to the start position.\n            Based on the use in VCF v4.2\n          example: [ -12000, 1000 ]\n          type: array\n        created:\n          description: The timestamp when this variant was created.\n          type: string\n          format: date-time\n        end:\n          description: |-\n            This field is optional and may be ignored if there is no relevant map or reference to be associated with.\n          \n            The end position (exclusive), resulting in [start, end) closed-open interval. This is typically calculated \n            by `start + referenceBases.length`.\n          type: integer\n          example: 518\n        filtersApplied:\n          description: True if filters were applied for this variant. VCF column 7 \"FILTER\" any value other than the missing value.\n          format: boolean\n          type: boolean\n          example: True\n        filtersFailed:\n          description: Zero or more filters that failed for this variant. VCF column 7 \"FILTER\" shared across all alleles in the same VCF record.\n          items:\n            type: string\n          type: array\n          example: ['d629a669', '3f14f578']\n        filtersPassed:\n          description: True if all filters for this variant passed. VCF column 7 \"FILTER\" value PASS.\n          format: boolean\n          type: boolean\n          example: True\n        variantDbId:\n          description: The variant ID.\n          type: string\n          example: 628e89c5\n        variantNames:\n          description: Names for the variant, for example a RefSNP ID.\n          items:\n            type: string\n          type: array\n          example: ['RefSNP_ID_1', '06ea312e']\n        referenceBases:\n          description: The reference bases for this variant. They start at the given start position.\n          type: string\n          example: TAGGATTGAGCTCTATAT\n        referenceName:\n          description: The reference on which this variant occurs. (e.g. `chr_20` or `X`)\n          type: string\n          example: chr_20\n        start:\n          description: |-\n            This field is optional and may be ignored if there is no relevant map or reference to be associated with.\n          \n            The start position at which this variant occurs (0-based). This corresponds to the first base of the string \n            of reference bases. Genomic positions are non-negative integers less than reference length. Variants spanning \n            the join of circular genomes are represented as two variants one on each side of the join (position 0).\n          type: integer\n          example: 500\n        svlen:\n          description: Length of the - if labeled as such in variant_type - structural variation. Based on the use in VCF v4.2\n          type: integer\n          example: 1500\n        updated:\n          description: The time at which this variant was last updated.\n          type: string\n          format: date-time\n        variantSetDbId: \n          description: An array of `VariantSet` IDs this variant belongs to. This also defines the `ReferenceSet` against which the `Variant` is to be interpreted.\n          type: array\n          items: \n            type: string\n          example: ['c8ae400b', 'ef2c204b']\n        variantType:\n          description: |-\n            The \"variant_type\" is used to denote e.g. structural variants.\n            Examples:\n              DUP  : duplication of sequence following \"start\"\n              DEL  : deletion of sequence following \"start\"\n          type: string\n          example: DUP\n",
			"canonicalURL": "/github.com/plantbreeding/BrAPI@5252d84f331840650fffbca6cb8cece10a65cea6/-/blob/Specification/BrAPI-Genotyping/Variants/Schemas/Variant.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/plantbreeding/BrAPI/blob/5252d84f331840650fffbca6cb8cece10a65cea6/Specification/BrAPI-Genotyping/Variants/Schemas/Variant.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}