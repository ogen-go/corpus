{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/eesast/training2020"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "web/backend/api/docs/swagger.yaml",
			"byteSize": 97886,
			"content": "openapi: 3.0.0\n\nservers:\n  - url: \"https://api.eesast.com\"\n    description: Remote API Server\n  - url: \"http://localhost:{port}\"\n    description: Local API Server\n    variables:\n      port:\n        description: 端口号\n        default: \"28888\"\n\ninfo:\n  title: API Backend for EESAST\n  description: |\n    清华大学电子工程系学生科协后端 API。了解更多 EESAST 内容，请访问：[GitHub 主页](https://github.com/eesast/)或 [EESAST 官方网站](https://eesast.com/)。\n  version: 1.0.0\n  contact:\n    name: API Support\n    email: i@raineggplant.com\n\ntags:\n  - name: static\n    description: 静态文件\n  - name: articles\n    description: 文章\n  - name: comments\n    description: 评论\n  - name: users\n    description: 用户\n  - name: teams\n    description: 队伍\n  - name: contests\n    description: 比赛\n  - name: announcements\n    description: 公告\n  - name: emails\n    description: 邮件\n  - name: rooms\n    description: 房间\n  - name: tracks\n    description: 赛道\n  - name: codes\n    description: 代码\n\npaths:\n  \"/static/files/:filename\":\n    get:\n      tags:\n        - static\n      summary: 下载文件\n      operationId: getFile\n      parameters:\n        - name: filename\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n                format: binary\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        404:\n          description: \"Not Found: File does not exist\"\n        500:\n          description: Server error\n\n  \"/static/images/:filename\":\n    get:\n      tags:\n        - static\n      summary: 下载图片\n      description: 下载webp格式或其本身\n      operationId: getImage\n      parameters:\n        - name: filename\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n                format: binary\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        404:\n          description: \"Not Found: File does not exist\"\n        500:\n          description: Server error\n\n  \"/static/thuai/:filename\":\n    get:\n      tags:\n        - static\n      summary: 下载thuai相关文件（目前为回放）\n      description: 下载thuai相关文件（目前为回放）\n      operationId: getThuaiFile\n      parameters:\n        - name: filename\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n                format: binary\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        404:\n          description: \"Not Found: File does not exist\"\n        500:\n          description: Server error\n\n  \"/static/{category}\":\n    post:\n      tags:\n        - static\n      summary: 上传文件\n      description: 需要已登录用户\n      operationId: uploadFile\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: category\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                file:\n                  type: string\n                  format: binary\n      responses:\n        201:\n          description: Successful operation\n          headers:\n            Location:\n              description: 新增文件的 URL\n              schema:\n                type: string\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        500:\n          description: Server error\n\n  \"/static/{category}/{filename}\":\n    delete:\n      tags:\n        - static\n      summary: 删除一个文件\n      description: 需要 `root`, `writer`, `editor`, `keeper`, `organizer` 或 `counselor` 角色\n      operationId: deleteFile\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: category\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: filename\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: Successful operation\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        404:\n          description: \"Not Found: File does not exist\"\n        500:\n          description: Server error\n\n  \"/v1/articles\":\n    get:\n      tags:\n        - articles\n      summary: 返回匹配查询的文章\n      description: 可以通过 query 进行筛选 查看隐藏文章需要是作者、发布者、`root`或`editor`角色\n      operationId: findArticles\n      parameters:\n        - name: title\n          in: query\n          description: 文章标题，采用部分匹配\n          schema:\n            type: string\n        - name: author\n          in: query\n          description: 作者\n          schema:\n            type: string\n        - name: authorId\n          in: query\n          description: 作者的用户id\n          schema:\n            type: number\n        - name: createdBy\n          in: query\n          description: 发布文章的用户的id\n          schema:\n            type: number\n        - name: alias\n          in: query\n          description: 别名，通常是文章的 URL\n          schema:\n            type: string\n        - name: tag\n          in: query\n          description: 标签\n          schema:\n            type: string\n        - name: likedBy\n          in: query\n          description: 点赞者 ID\n          schema:\n            type: number\n        - name: begin\n          in: query\n          description: 按时间降序排列，起始文章的位置\n          schema:\n            type: number\n        - name: end\n          in: query\n          description: 按时间降序排列，结束文章的位置\n          schema:\n            type: number\n        - name: noContent\n          in: query\n          description: \"设置是否需要获取文章内容。若设置为 `true`, 则响应中不包含 `content` 键值对\"\n          schema:\n            type: boolean\n        - name: invisible\n          in: query\n          description: 设置是否查看隐藏的文章\n          schema:\n            type: boolean\n        - name: count\n          in: query\n          description: 设置是否查看对应authorId或createdBy文章的数量\n          schema:\n            type: boolean\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Article\"\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        500:\n          description: Server error\n\n    post:\n      tags:\n        - articles\n      summary: 发布一篇新文章\n      description: 需要 `root` 或 `writer` 角色\n      operationId: addArticle\n      security:\n        - bearerAuth: []\n      requestBody:\n        $ref: \"#/components/requestBodies/addArticle\"\n      responses:\n        201:\n          description: Successful operation\n          headers:\n            Location:\n              description: 新发布文章的 URL\n              schema:\n                type: string\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        409:\n          description: \"Conflict: Alias already exists\"\n        422:\n          description: \"UnProcessable Entity: Missing contents\"\n        500:\n          description: Server error\n\n  \"/v1/articles/{articleId}\":\n    get:\n      tags:\n        - articles\n      summary: 根据 ID 获取文章\n      operationId: getArticleById\n      parameters:\n        - name: articleId\n          in: path\n          description: 文章 ID\n          required: true\n          schema:\n            type: number\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Article\"\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        404:\n          description: \"Not Found: Article does not exist\"\n        500:\n          description: Server error\n\n    put:\n      tags:\n        - articles\n      summary: 更新已存在的文章\n      description: 需要 `root` 角色，或待更新文章的作者为请求者\n      operationId: updateArticle\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: articleId\n          in: path\n          description: 待更新文章的 ID\n          required: true\n          schema:\n            type: number\n      requestBody:\n        $ref: \"#/components/requestBodies/updateArticle\"\n      responses:\n        204:\n          description: Successful operation\n          headers:\n            Location:\n              description: 被更新文章的 URL\n              schema:\n                type: string\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          description: \"Forbidden: Article is under review\"\n        404:\n          description: \"Not Found: Article does not exist\"\n        500:\n          description: Server error\n\n    delete:\n      tags:\n        - articles\n      summary: 删除一篇文章\n      description: 需要 `root` 角色\n      operationId: deleteArticle\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: articleId\n          in: path\n          description: 要删除文章的 ID\n          required: true\n          schema:\n            type: number\n      responses:\n        204:\n          description: Successful operation\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        404:\n          description: \"Not Found: Article does not exist\"\n        500:\n          description: Server error\n\n  \"/v1/articles/{articleId}/like\":\n    get:\n      tags:\n        - articles\n      summary: 点赞\n      description: 需要已登录用户\n      operationId: likeArticle\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: articleId\n          in: path\n          description: 点赞文章的 ID\n          required: true\n          schema:\n            type: number\n      responses:\n        204:\n          description: Successful operation\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        404:\n          description: \"Not Found: Article does not exist\"\n        500:\n          description: Server error\n\n  \"/v1/articles/{articleId}/unlike\":\n    get:\n      tags:\n        - articles\n      summary: 取消点赞\n      description: 需要已登录用户\n      operationId: unlikeArticle\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: articleId\n          in: path\n          description: 取消点赞文章的 ID\n          required: true\n          schema:\n            type: number\n      responses:\n        204:\n          description: Successful operation\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        404:\n          description: \"Not Found: Article does not exist\"\n        500:\n          description: Server error\n\n  \"/v1/comments\":\n    get:\n      tags:\n        - comments\n      summary: 返回匹配查询的评论\n      description: 可以通过 query 进行筛选\n      operationId: findComments\n      parameters:\n        - name: replyTo\n          in: query\n          description: 回复的上级评论的 ID, -1 代表一级（独立）评论\n          schema:\n            type: number\n        - name: likedBy\n          in: query\n          description: 点赞者 ID\n          schema:\n            type: number\n        - name: articleId\n          in: query\n          schema:\n            type: number\n        - name: authorId\n          in: query\n          schema:\n            type: number\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Comment\"\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        500:\n          description: Server error\n\n    post:\n      tags:\n        - comments\n      summary: 发布一条新评论\n      description: \"需要 `root`, `writer` 或 `reader` 角色\"\n      operationId: addComment\n      security:\n        - bearerAuth: []\n      requestBody:\n        $ref: \"#/components/requestBodies/addComment\"\n      responses:\n        201:\n          description: Successful operation\n          headers:\n            Location:\n              description: 新发布评论的 URL\n              schema:\n                type: string\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        500:\n          description: Server error\n\n  \"/v1/comments/{commentId}\":\n    get:\n      tags:\n        - comments\n      summary: 根据 ID 获取评论\n      operationId: getCommentById\n      parameters:\n        - name: commentId\n          in: path\n          description: 评论 ID\n          required: true\n          schema:\n            type: number\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Comment\"\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        404:\n          description: \"Not Found: Comment does not exist\"\n        500:\n          description: Server error\n\n    put:\n      tags:\n        - comments\n      summary: 更新已存在的评论\n      description: 需要 `root` 角色，或待更新评论的作者为请求者\n      operationId: updateComment\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: commentId\n          in: path\n          description: 待更新评论的 ID\n          required: true\n          schema:\n            type: number\n      requestBody:\n        $ref: \"#/components/requestBodies/updateComment\"\n      responses:\n        204:\n          description: Successful operation\n          headers:\n            Location:\n              description: 被更新评论的 URL\n              schema:\n                type: string\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        404:\n          description: \"Not Found: Comment does not exist\"\n        500:\n          description: Server error\n\n    delete:\n      tags:\n        - comments\n      summary: 删除一条评论\n      description: 需要 `root` 角色\n      operationId: deleteComment\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: commentId\n          in: path\n          description: 待删除评论的 ID\n          required: true\n          schema:\n            type: number\n      responses:\n        204:\n          description: Successful operation\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        404:\n          description: \"Not Found: Comment does not exist\"\n        500:\n          description: Server error\n\n  \"/v1/comments/{commentId}/like\":\n    get:\n      tags:\n        - comments\n      summary: 点赞\n      description: 需要已登录用户\n      operationId: likeComment\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: commentId\n          in: path\n          description: 点赞评论的 ID\n          required: true\n          schema:\n            type: number\n      responses:\n        204:\n          description: Successful operation\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        404:\n          description: \"Not Found: Comment does not exist\"\n        500:\n          description: Server error\n\n  \"/v1/comments/{commentId}/unlike\":\n    get:\n      tags:\n        - comments\n      summary: 取消点赞\n      description: 需要已登录用户\n      operationId: unlikeComment\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: commentId\n          in: path\n          description: 取消点赞评论的 ID\n          required: true\n          schema:\n            type: number\n      responses:\n        204:\n          description: Successful operation\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        404:\n          description: \"Not Found: Comment does not exist\"\n        500:\n          description: Server error\n\n  \"/v1/contests\":\n    get:\n      tags:\n        - contests\n      summary: 返回匹配查询的比赛\n      description: 可以通过 query 进行筛选\n      operationId: findContests\n      parameters:\n        - name: type\n          in: query\n          description: 比赛分类，目前为[\"电设\", \"队式\", \"软设\"]\n          schema:\n            type: string\n        - name: year\n          in: query\n          description: 比赛开展的年份\n          schema:\n            type: number\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Contest\"\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        500:\n          description: Server error\n\n    post:\n      tags:\n        - contests\n      summary: 发布一场新比赛\n      description: 需要 `root` 或 `organizer` 角色\n      operationId: addContest\n      security:\n        - bearerAuth: []\n      requestBody:\n        $ref: \"#/components/requestBodies/addContest\"\n      responses:\n        201:\n          description: Successful operation\n          headers:\n            Location:\n              description: 新发布比赛的 URL\n              schema:\n                type: string\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        500:\n          description: Server error\n\n  \"/v1/contests/{contestId}\":\n    get:\n      tags:\n        - contests\n      summary: 根据 ID 获取比赛\n      description: 同时返回totalTeams\n      operationId: getContestById\n      parameters:\n        - name: contestId\n          in: path\n          description: 比赛 ID\n          required: true\n          schema:\n            type: number\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Contest\"\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        404:\n          description: \"Not Found: Contest does not exist\"\n        500:\n          description: Server error\n\n    put:\n      tags:\n        - contests\n      summary: 更新已存在的比赛\n      description: 需要 `root` 或 `organizer` 角色\n      operationId: updateContest\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: contestId\n          in: path\n          description: 待更新比赛的 ID\n          required: true\n          schema:\n            type: number\n      requestBody:\n        $ref: \"#/components/requestBodies/updateContest\"\n      responses:\n        204:\n          description: Successful operation\n          headers:\n            Location:\n              description: 被更新比赛的 URL\n              schema:\n                type: string\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        404:\n          description: \"Not Found: Contest does not exist\"\n        500:\n          description: Server error\n\n    delete:\n      tags:\n        - contests\n      summary: 删除一场比赛\n      description: 需要 `root` 或 `organizer` 角色\n      operationId: deleteContest\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: contestId\n          in: path\n          description: 要删除比赛的 ID\n          required: true\n          schema:\n            type: number\n      responses:\n        204:\n          description: Successful operation\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        404:\n          description: \"Not Found: Contest does not exist\"\n        500:\n          description: Server error\n\n  \"/v1/users\":\n    get:\n      tags:\n        - users\n      summary: 返回匹配查询的用户\n      description: 需要已登录用户或第三方令牌，可以通过 query 进行筛选\n      operationId: getUsers\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: username\n          in: query\n          schema:\n            type: string\n        - name: department\n          in: query\n          schema:\n            type: string\n        - name: class\n          in: query\n          schema:\n            type: string\n        - name: begin\n          in: query\n          description: 按创建时间降序排列，起始用户的位置\n          schema:\n            type: number\n        - name: end\n          in: query\n          description: 按创建时间降序排列，结束用户的位置\n          schema:\n            type: number\n        - name: detailInfo\n          in: query\n          description: \u003e-\n            设置是否需要获取用户具体信息。若设置为 `false`, 则响应中仅包含 `id`, `createdAt`, `createdBy`,\n            `updatedAt` 和 `updatedBy` 键值对\n          schema:\n            type: boolean\n        - name: isTeacher\n          in: query\n          schema:\n            type: boolean\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/User\"\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        500:\n          description: Server error\n\n    post:\n      tags:\n        - users\n      summary: 新建用户\n      description: \"新增用户的默认用户组为 `student`, 角色为 `reader`\"\n      operationId: addUser\n      requestBody:\n        $ref: \"#/components/requestBodies/addUser\"\n      responses:\n        201:\n          description: Successful operation\n          headers:\n            Location:\n              description: 新增用户的 URL\n              schema:\n                type: string\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        422:\n          description: \"Unprocessable Entity: Missing form data\"\n        500:\n          description: Server error\n\n  \"/v1/users/details\":\n    post:\n      tags:\n        - users\n      summary: 返回匹配查询的用户\n      description: 需要已登录用户或第三方令牌，可以通过 query 进行筛选\n      operationId: getUsersDetails\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: username\n          in: query\n          schema:\n            type: string\n        - name: department\n          in: query\n          schema:\n            type: string\n        - name: class\n          in: query\n          schema:\n            type: string\n        - name: begin\n          in: query\n          description: 按创建时间降序排列，起始用户的位置\n          schema:\n            type: number\n        - name: end\n          in: query\n          description: 按创建时间降序排列，结束用户的位置\n          schema:\n            type: number\n        - name: detailInfo\n          in: query\n          description: \u003e-\n            设置是否需要获取用户具体信息。若设置为 `false`, 则响应中仅包含 `id`, `createdAt`, `createdBy`,\n            `updatedAt` 和 `updatedBy` 键值对\n          schema:\n            type: boolean\n        - name: isTeacher\n          in: query\n          schema:\n            type: boolean\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/User\"\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        500:\n          description: Server error\n\n  \"/v1/users/login\":\n    post:\n      tags:\n        - users\n      summary: 用户登录\n      operationId: loginUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - password\n              properties:\n                username:\n                  type: string\n                id:\n                  type: number\n                email:\n                  type: string\n                password:\n                  type: string\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  token:\n                    type: string\n                    example: \u003e-\n                      eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MCwidXNlcm5hbWUiOiJhZG1pbiIsImdyb3VwIjoiYWRtaW4iLCJyb2xlIjoicm9vdCIsImlhdCI6MTU0OTE2MTI5NiwiZXhwIjoxNTQ5MjA0NDk2fQ.1__SnI_vAeMrIZe6D0mXv4_umQEg53_iUHNeGJOQSoU\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        401:\n          description: Invalid password supplied\n        404:\n          description: \"Not Found: User does not exist\"\n        500:\n          description: Server error\n\n  \"/v1/users/forgot\":\n    get:\n      tags:\n        - users\n      summary: 忘记密码\n      operationId: recoverAccount\n      responses:\n        404:\n          description: Operation not implemented yet\n\n  \"/v1/users/reset\":\n    post:\n      tags:\n        - users\n      summary: 重设密码\n      operationId: resetPassword\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - action\n              properties:\n                action:\n                  type: string\n                username:\n                  type: string\n                id:\n                  type: number\n                email:\n                  type: string\n                password:\n                  type: string\n                token:\n                  type: string\n      responses:\n        201:\n          description: Successful operation\n        204:\n          description: Successful operation\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        401:\n          description: Missing token / Wrong token\n        404:\n          description: \"Not Found: User does not exist / User does not have an email\"\n        422:\n          description: \"Unprocessable Entity: Missing essential information\"\n        500:\n          description: Server error\n\n  \"/v1/users/reset/{token}\":\n    get:\n      tags:\n        - users\n      summary: 检查重设密码的token\n      operationId: checkResetToken\n      parameters:\n        - name: token\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successful operation\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        401:\n          description: Wrong token\n        500:\n          description: Server error\n\n  \"/v1/users/{userId}\":\n    get:\n      tags:\n        - users\n      summary: 根据 ID 获取用户\n      description: 需要已登录用户或第三方令牌\n      operationId: getUserById\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: number\n        - name: detailInfo\n          in: query\n          description: \u003e-\n            设置是否需要获取用户具体信息。若设置为 `false`, 则响应中仅包含 `id`, `createdAt`, `createdBy`,\n            `updatedAt` 和 `updatedBy` 键值对\n          schema:\n            type: boolean\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        404:\n          description: \"Not Found: User does not exist\"\n        500:\n          description: Server error\n\n    put:\n      tags:\n        - users\n      summary: 更新已存在的用户\n      description: 需要 `root` 角色，或待更新用户为请求者自身\n      operationId: updateUser\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: number\n      requestBody:\n        $ref: \"#/components/requestBodies/updateUser\"\n      responses:\n        204:\n          description: Successful operation\n          headers:\n            Location:\n              description: 更新用户的 URL\n              schema:\n                type: string\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        404:\n          description: \"Not Found: User does not exist\"\n        500:\n          description: Server error\n\n    delete:\n      tags:\n        - users\n      summary: 删除一个用户\n      description: 需要 `root` 角色\n      operationId: deleteUser\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: number\n      responses:\n        204:\n          description: Successful operation\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        404:\n          description: \"Not Found: User does not exist\"\n        500:\n          description: Server error\n\n  \"/v1/users/token/apply\":\n    post:\n      tags:\n        - users\n      summary: 获得第三方令牌\n      operationId: getPublicToken\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: userId\n          in: query\n          description: 用户id\n          schema:\n            type: number\n      requestBody:\n        $ref: \"#/components/requestBodies/getPublicToken\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  token:\n                    type: string\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        403:\n          description: Permission denied\n        500:\n          description: Server error\n\n  \"/v1/users/token/validate\":\n    post:\n      tags:\n        - users\n      summary: 校验第三方令牌\n      operationId: validatePublicToken\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                token:\n                  type: string\n      responses:\n        200:\n          description: good Token\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: number\n                    description: userId\n                  allowedEndpoints:\n                    $ref: \"#/components/schemas/allowedEndpoints\"\n\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        401:\n          description: Invalid/Expired Token\n        500:\n          description: Server error\n\n  \"/v1/users/username/{userId}\":\n    summary: 返回`userId`对应的用户名\n    get:\n      tags:\n        - users\n      summary: 返回`userId`对应的用户名\n      description: 对外显示的用户名，不需要权限\n      operationId: getUsername\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: number\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  username:\n                    type: string\n        404:\n          description: \"Not Found: User does not exist\"\n        500:\n          description: Server error\n\n  \"/v1/teams\":\n    get:\n      tags:\n        - teams\n      summary: 返回匹配查询的队伍\n      description: 可以通过 query 进行筛选，已登录用户可以查询本队邀请码， `root` 角色可查询所有邀请码\n      operationId: findTeams\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: contestId\n          in: query\n          description: 比赛ID\n          schema:\n            type: number\n        - name: available\n          in: query\n          description: 队伍是否仍具有参赛资格\n          schema:\n            type: boolean\n        - name: self\n          in: query\n          description: 是否只查询含有自身的队伍\n          schema:\n            type: boolean\n        - name: begin\n          in: query\n          description: 按时间降序排列，起始队伍的位置\n          schema:\n            type: number\n        - name: end\n          in: query\n          description: 按时间降序排列，结束队伍的位置\n          schema:\n            type: number\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Team\"\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        500:\n          description: Server error\n\n    post:\n      tags:\n        - teams\n      summary: 新建队伍\n      description: 需要已登录用户\n      operationId: addTeam\n      security:\n        - bearerAuth: []\n      requestBody:\n        $ref: \"#/components/requestBodies/addTeam\"\n      responses:\n        201:\n          description: Successful operation\n          headers:\n            Location:\n              description: 新建队伍的 URL\n              schema:\n                type: string\n        400:\n          # TODO: Solve status code conflict\n          # $ref: \"#/components/responses/BadRequest\"\n          description: \"TODO: Solve status code conflict. --- Contest not available / User not in track\"\n        409:\n          description: Team name already exists / User is already in a team\n        500:\n          description: Server error\n\n  \"/v1/teams/{teamId}\":\n    get:\n      tags:\n        - teams\n      summary: 根据 ID 获取队伍\n      description: 本队用户或 `root` 角色可见邀请码\n      operationId: getTeamById\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: teamId\n          in: path\n          description: 队伍 ID\n          required: true\n          schema:\n            type: number\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Team\"\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        404:\n          description: \"Not Found: Team does not exist\"\n        500:\n          description: Server error\n\n    put:\n      tags:\n        - teams\n      summary: 更新已存在的队伍\n      description: 需要 `root` 角色，或待更新队伍的队长为请求者\n      operationId: updateTeam\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: teamId\n          in: path\n          description: 待更新队伍的 ID\n          required: true\n          schema:\n            type: number\n      requestBody:\n        $ref: \"#/components/requestBodies/updateTeam\"\n      responses:\n        204:\n          description: Successful operation\n          headers:\n            Location:\n              description: 被更新队伍的 URL\n              schema:\n                type: string\n        400:\n          # TODO: Solve status code conflict\n          # $ref: \"#/components/responses/BadRequest\"\n          description: \"TODO: Solve status code conflict. --- Invalid members / Captain is not a member of the team / Contest not available\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        404:\n          description: \"Not Found: Team does not exist\"\n        409:\n          description: Team name already exists\n        500:\n          description: Server error\n\n    delete:\n      tags:\n        - teams\n      summary: 删除一支队伍\n      description: 需要 `root` 角色，或待删除队伍的队长为请求者\n      operationId: deleteTeam\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: teamId\n          in: path\n          description: 要删除队伍的 ID\n          required: true\n          schema:\n            type: number\n      responses:\n        204:\n          description: Successful operation\n        400:\n          # TODO: Solve status code conflict\n          # $ref: \"#/components/responses/BadRequest\"\n          description: \"TODO: Solve status code conflict. --- Contest not available\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        404:\n          description: \"Not Found: Team does not exist\"\n        500:\n          description: Server error\n\n  \"/v1/teams/{teamId}/members\":\n    get:\n      tags:\n        - teams\n      summary: 根据队伍 ID 获取队员\n      operationId: getMembersByTeamId\n      parameters:\n        - name: teamId\n          in: path\n          description: 队伍 ID\n          required: true\n          schema:\n            type: number\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: number\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        404:\n          description: \"Not Found: Team does not exist\"\n        500:\n          description: Server error\n\n    post:\n      tags:\n        - teams\n      summary: 根据队伍 ID 向队伍增加队员\n      description: 需要 `root` 角色，或增加队员为请求者自身且邀请码正确\n      operationId: addMemberToTeamId\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: teamId\n          in: path\n          description: 队伍 ID\n          required: true\n          schema:\n            type: number\n      requestBody:\n        $ref: \"#/components/requestBodies/addTeamMember\"\n      responses:\n        201:\n          description: Successful operation\n          headers:\n            Location:\n              description: 新增队员的 URL\n              schema:\n                type: string\n        400:\n          # TODO: Solve status code conflict\n          # $ref: \"#/components/responses/BadRequest\"\n          description: \"TODO: Solve status code conflict. --- Member does not exist / Contest not available / User not in track\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          description: Team is not available / Incorrect invite code\n        404:\n          description: \"Not Found: Team does not exist\"\n        409:\n          description: The number of members exceeds / User is already in a team\n        422:\n          description: Missing credentials\n        500:\n          description: Server error\n\n  \"/v1/teams/{teamId}/members/{memberId}\":\n    delete:\n      tags:\n        - teams\n      summary: 根据ID删除指定队伍中的队员\n      description: 需要 `root` 角色，或队伍队长为请求者自身\n      operationId: deleteMemberFromTeamId\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: teamId\n          in: path\n          description: 队伍 ID\n          required: true\n          schema:\n            type: number\n        - name: memberId\n          in: path\n          description: 队员 ID\n          required: true\n          schema:\n            type: number\n      responses:\n        204:\n          description: Successful operation\n        400:\n          # TODO: Solve status code conflict\n          # $ref: \"#/components/responses/BadRequest\"\n          description: \"TODO: Solve status code conflict. --- Leader cannot be deleted / Contest not available\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        404:\n          description: \"Not Found: Team does not exist / Member does not exist\"\n        500:\n          description: Server error\n\n  \"/v1/teams/scores\":\n    put:\n      tags:\n        - teams\n      summary: 根据比赛结果更新多支队伍分数\n      description: 由server发起\n      operationId: updateTeamsScore\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - scores\n              properties:\n                scores:\n                  type: array\n      responses:\n        204:\n          description: Successful operation\n          headers:\n            Location:\n              description: 被更新队伍的 URL\n              schema:\n                type: string\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          description: \"Forbidden: Permission denied\"\n        404:\n          description: \"Not Found: Team does not exist\"\n        422:\n          description: \"Unprocessable Entity: Missing form data\"\n        500:\n          description: Server error\n\n  \"/v1/teams/{teamId}/score\":\n    put:\n      tags:\n        - teams\n      summary: 根据id更新队伍分数\n      description: 由server发起\n      operationId: updateTeamScore\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: teamId\n          in: path\n          description: 队伍ID\n          required: true\n          schema:\n            type: number\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - score\n              properties:\n                score:\n                  type: number\n                replace:\n                  type: boolean\n      responses:\n        204:\n          description: Successful operation\n          headers:\n            Location:\n              description: 被更新队伍的 URL\n              schema:\n                type: string\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          description: \"Forbidden: Permission denied\"\n        404:\n          description: \"Not Found: Team does not exist\"\n        422:\n          description: \"Unprocessable Entity: Missing form data\"\n        500:\n          description: Server error\n\n  \"/v1/announcements\":\n    get:\n      tags:\n        - announcements\n      summary: 返回匹配查询的公告\n      description: 可以通过 query 进行筛选\n      operationId: findAnnouncements\n      parameters:\n        - name: contestId\n          in: query\n          schema:\n            type: number\n          description: 比赛ID\n        - name: priority\n          in: query\n          schema:\n            type: number\n          description: 公告显示优先级\n        - name: begin\n          in: query\n          schema:\n            type: number\n          description: 按时间降序排列，起始公告的位置\n        - name: end\n          in: query\n          schema:\n            type: number\n          description: 按时间降序排列，结束公告的位置\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Announcement\"\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        500:\n          description: Server error\n\n    post:\n      tags:\n        - announcements\n      summary: 发布一篇新的公告\n      description: 需要 `root` 或 `organizer` 角色\n      operationId: addAnnouncements\n      security:\n        - bearerAuth: []\n      requestBody:\n        $ref: \"#/components/requestBodies/addAnnouncement\"\n      responses:\n        201:\n          description: Successful operation\n          headers:\n            Location:\n              description: 新发布公告的 URL\n              schema:\n                type: string\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        500:\n          description: Server error\n\n  \"/v1/announcements/{announcementId}\":\n    get:\n      tags:\n        - announcements\n      summary: 根据 ID 获取公告\n      operationId: getAnnouncementById\n      parameters:\n        - name: announcementId\n          description: 公告的 ID\n          in: path\n          required: true\n          schema:\n            type: number\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Announcement\"\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        404:\n          description: \"Not Found: Announcement does not exist\"\n        500:\n          description: Server error\n\n    put:\n      tags:\n        - announcements\n      summary: 更新已经存在的公告\n      description: 需要 `root` 或 `organizer` 角色\n      operationId: updateAnnouncement\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: announcementId\n          in: path\n          description: 要更新的公告ID\n          required: true\n          schema:\n            type: number\n      requestBody:\n        $ref: \"#/components/requestBodies/updateAnnouncement\"\n      responses:\n        204:\n          description: Successful operation\n          headers:\n            Location:\n              description: 被更新公告的 URL\n              schema:\n                type: string\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        404:\n          description: \"Not Found: Announcement does not exist\"\n        500:\n          description: Server error\n\n    delete:\n      tags:\n        - announcements\n      summary: 删除一篇公告\n      description: 需要 `root` 或 `organizer` 角色\n      operationId: deleteAnnouncement\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: announcementId\n          in: path\n          description: 要删除的公告ID\n          required: true\n          schema:\n            type: number\n      responses:\n        204:\n          description: Successful operation\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        404:\n          description: \"Not Found: Announcement does not exist\"\n\n  \"/v1/emails\":\n    post:\n      tags:\n        - emails\n      summary: 发送邮件\n      # TODO: Complete requestBody\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n      operationId: sendEmails\n      responses:\n        200:\n          description: Successful operation\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        401:\n          description: Wrong secret\n        404:\n          description: \"Not Found: Sender does not exist / Receiver does not exist / Teacher does not exist / Student does not exist\"\n        422:\n          description: Missing receiver email / Missing student email / Missing teacher email\n        500:\n          description: Server error\n\n  \"/v1/rooms\":\n    get:\n      tags:\n        - rooms\n      summary: 返回匹配查询的房间\n      description: 可以通过 query 进行筛选\n      operationId: findRooms\n      parameters:\n        - name: contestId\n          in: query\n          schema:\n            type: number\n          description: 比赛ID\n        - name: status\n          in: query\n          schema:\n            type: number\n            enum: [0, 1, 2]\n          description: 房间是否开启\n        - name: begin\n          in: query\n          schema:\n            type: number\n          description: 按时间降序排列，起始房间的位置\n        - name: end\n          in: query\n          schema:\n            type: number\n          description: 按时间降序排列，结束房间的位置\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Room\"\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        500:\n          description: Server error\n\n    post:\n      tags:\n        - rooms\n      summary: 开启一个新房间\n      description: 需要已登录用户\n      operationId: addRoom\n      security:\n        - bearerAuth: []\n      requestBody:\n        $ref: \"#/components/requestBodies/addRoom\"\n      responses:\n        201:\n          description: Successful operation\n          headers:\n            Location:\n              description: 新开启房间的 URL\n              schema:\n                type: string\n        400:\n          # TODO: Solve status code conflict\n          # $ref: \"#/components/responses/BadRequest\"\n          description: \"TODO: Solve status code conflict. --- Contest not available\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        500:\n          description: Server error\n        503:\n          description: Failed to start docker container\n\n  \"/v1/rooms/{roomId}\":\n    get:\n      tags:\n        - rooms\n      summary: 根据 ID 获取房间\n      operationId: getRoomById\n      parameters:\n        - name: roomId\n          in: path\n          description: 房间 ID\n          required: true\n          schema:\n            type: number\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Room\"\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        500:\n          description: Server error\n\n    put:\n      tags:\n        - rooms\n      summary: 更新已存在的房间\n      description: 需要 `root` 或 `organizer` 角色\n      operationId: updateRoom\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: roomId\n          in: path\n          description: 待更新房间的 ID\n          required: true\n          schema:\n            type: number\n      requestBody:\n        $ref: \"#/components/requestBodies/updateRoom\"\n      responses:\n        204:\n          description: Successful operation\n          headers:\n            Location:\n              description: 被更新比赛的 URL\n              schema:\n                type: string\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        404:\n          description: \"Not Found: Room does not exist\"\n        500:\n          description: Server error\n\n    delete:\n      tags:\n        - rooms\n      summary: 删除一个房间\n      description: 需要 `root` 或 `organizer` 角色\n      operationId: deleteRoom\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: roomId\n          in: path\n          description: 要删除房间的 ID\n          required: true\n          schema:\n            type: number\n      responses:\n        204:\n          description: Successful operation\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        404:\n          description: \"Not Found: Room does not exist / Docker container does not exist\"\n        422:\n          description: \"Unprocessable Entity: Missing form data\"\n        500:\n          description: Server error\n        503:\n          description: \"Service Unavailable: Failed to stop or remove docker container\"\n\n  \"/v1/rooms/check/{token}\":\n    post:\n      tags:\n        - rooms\n      summary: 验证服务器启动的token\n      operationId: checkRoomToken\n      parameters:\n        - name: token\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: Successful operation\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        401:\n          description: Wrong token\n        500:\n          description: Server error\n\n  \"/v1/rooms/{roomId}/join\":\n    post:\n      tags:\n        - rooms\n      summary: 加入房间\n      description: 由server发起，返回更新后队伍数组，header中为server token\n      operationId: joinRoom\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: roomId\n          in: path\n          description: 加入房间的 ID\n          required: true\n          schema:\n            type: number\n      requestBody:\n        $ref: \"#/components/requestBodies/changeRoomTeam\"\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: number\n        400:\n          # TODO: Solve status code conflict\n          # $ref: \"#/components/responses/BadRequest\"\n          description: \"TODO: Solve status code conflict. --- User not in team\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          description: \"Forbidden: Permission denied\"\n        404:\n          description: \"Not Found: Room does not exist\"\n        409:\n          description: Team already in room\n        500:\n          description: Server error\n\n  \"/v1/rooms/{roomId}/leave\":\n    post:\n      tags:\n        - rooms\n      summary: 退出房间\n      description: 由server发起，返回剩余队伍数组，header中为server token\n      operationId: leaveRoom\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: roomId\n          in: path\n          description: 退出房间的 ID\n          required: true\n          schema:\n            type: number\n      requestBody:\n        $ref: \"#/components/requestBodies/changeRoomTeam\"\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: number\n        400:\n          # TODO: Solve status code conflict\n          # $ref: \"#/components/responses/BadRequest\"\n          description: \"TODO: Solve status code conflict. --- User not in team\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          description: \"Forbidden: Permission denied\"\n        404:\n          description: \"Not Found: Room does not exist\"\n        500:\n          description: Server error\n\n  \"/v1/rooms/{roomId}/status\":\n    put:\n      tags:\n        - rooms\n      summary: 更新房间状态\n      description: 由server发起\n      operationId: updateRoomStatus\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: roomId\n          in: path\n          description: 房间 ID\n          required: true\n          schema:\n            type: number\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - status\n              properties:\n                status:\n                  type: number\n                  enum: [0, 1, 2]\n      responses:\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          description: \"Forbidden: Permission denied\"\n        404:\n          description: \"Not Found: Room does not exist / Docker container does not exist\"\n        422:\n          description: \"Unprocessable Entity: Missing form data\"\n        500:\n          description: Server error\n        503:\n          description: \"Service Unavailable: Failed to stop or remove docker container\"\n\n  \"/v1/tracks\":\n    get:\n      tags:\n        - tracks\n      description: 需要已登录用户，返回不带有参赛选手的赛道名单，可用query限定\n      operationId: getTracks\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: name\n          in: query\n          description: 赛道名称\n          required: false\n          schema:\n            type: string\n        - name: year\n          in: query\n          description: 赛道年份\n          required: false\n          schema:\n            type: number\n        - name: open\n          in: query\n          description: 赛道开放状态\n          required: false\n          schema:\n            type: boolean\n        - name: preOpen\n          in: query\n          description: 赛道预赛报名开放状态\n          required: false\n          schema:\n            type: boolean\n        - name: playerId\n          in: query\n          description: 参赛选手ID\n          schema:\n            type: number\n        - name: prePlayerId\n          in: query\n          description: 预赛参赛选手ID\n          schema:\n            type: number\n\n      responses:\n        200:\n          description: OK\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        500:\n          description: Server error\n\n    post:\n      tags:\n        - tracks\n      description: 添加赛道，需要管理员权限\n      operationId: createATrack\n      security:\n        - bearerAuth: []\n      requestBody:\n        $ref: \"#/components/requestBodies/addTrack\"\n      responses:\n        204:\n          description: Successful operation\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        404:\n          description: \"Not Found: Room does not exist\"\n        500:\n          description: Server error\n\n  \"/v1/tracks/{trackId}\":\n    get:\n      tags:\n        - tracks\n      summary: 需要登录，根据 ID 获取赛道\n      operationId: getTrackById\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: trackId\n          in: path\n          description: 赛道 ID\n          required: true\n          schema:\n            type: number\n        - name: playerInfo\n          in: query\n          description: 是否显示参赛选手ID\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - name: prePlayerInfo\n          in: query\n          description: 是否显示预赛参赛选手ID\n          required: false\n          schema:\n            type: boolean\n            default: false\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Track\"\n        404:\n          description: \"Not Found: Track does not exist\"\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        500:\n          description: Server error\n\n    put:\n      tags:\n        - tracks\n      summary: 更新已存在的赛道\n      description: 需要 `root` 或 `admin` 角色\n      operationId: updateTrack\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: trackId\n          in: path\n          description: 待更新赛道的 ID\n          required: true\n          schema:\n            type: number\n      requestBody:\n        $ref: \"#/components/requestBodies/updateTrack\"\n      responses:\n        204:\n          description: Successful operation\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        404:\n          description: \"Not Found: Track does not exist\"\n        500:\n          description: Server error\n\n    delete:\n      tags:\n        - tracks\n      summary: 删除一个赛道\n      description: 需要 `root` 或 `admin` 角色\n      operationId: deleteTrack\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: trackId\n          in: path\n          description: 要删除赛道的 ID\n          required: true\n          schema:\n            type: number\n      responses:\n        204:\n          description: Successful operation\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        404:\n          description: \"Not Found: Track does not exist\"\n        500:\n          description: Server error\n\n  \"/v1/tracks/{trackId}/players\":\n    post:\n      tags:\n        - tracks\n      description: 添加选手，需要管理员权限（无视赛道开放）或本人\n      operationId: addPlayerToTrack\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: trackId\n          in: path\n          description: 要加入的赛道的 ID\n          required: true\n          schema:\n            type: number\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - playerId\n              properties:\n                playerId:\n                  type: number\n                  description: 选手ID\n      responses:\n        204:\n          description: Successful operation\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          description: \"Forbidden: Track is not open\"\n        404:\n          description: \"Not Found: Track does not exist\"\n        409:\n          description: \"Conflict: One could not join 2 tracks.\"\n        500:\n          description: Server error\n\n  \"/v1/tracks/{trackId}/players/{playerId}\":\n    parameters:\n      - name: trackId\n        in: path\n        description: 赛道 ID\n        required: true\n        schema:\n          type: number\n      - name: playerId\n        in: path\n        description: 选手 ID\n        required: true\n        schema:\n          type: number\n    get:\n      tags:\n        - tracks\n      description: 检验指定选手是否在指定赛道中\n      operationId: checkPlayerInTrack\n      security:\n        - bearerAuth: []\n      responses:\n        200:\n          description: 选手在该赛道中\n        404:\n          description: \"Not Found: Track not found or player is not in\"\n        500:\n          description: Server error\n\n    delete:\n      tags:\n        - tracks\n      description: 选手退赛，需要管理员权限（无视赛道开放）或本人\n      operationId: removePlayerFromTrack\n      security:\n        - bearerAuth: []\n      responses:\n        204:\n          description: Successful operation\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          description: \"Forbidden: Track is not open\"\n        404:\n          description: \"Not Found: Track does not exist\"\n        500:\n          description: Server error\n\n  \"/v1/tracks/{trackId}/prePlayers\":\n    post:\n      tags:\n        - tracks\n      description: 添加选手，需要管理员权限（无视赛道开放）或本人\n      operationId: addPrePlayerToTrack\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: trackId\n          in: path\n          description: 要加入的赛道的 ID\n          required: true\n          schema:\n            type: number\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - playerId\n              properties:\n                playerId:\n                  type: number\n                  description: 选手ID\n      responses:\n        204:\n          description: Successful operation\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          description: \"Forbidden: Track is not open\"\n        404:\n          description: \"Not Found: Track does not exist\"\n        409:\n          description: \"Conflict: One could not join 2 tracks.\"\n        500:\n          description: Server error\n\n  \"/v1/tracks/{trackId}/prePlayers/{playerId}\":\n    parameters:\n      - name: trackId\n        in: path\n        description: 赛道 ID\n        required: true\n        schema:\n          type: number\n      - name: playerId\n        in: path\n        description: 选手 ID\n        required: true\n        schema:\n          type: number\n    get:\n      tags:\n        - tracks\n      description: 检验指定选手是否在指定赛道中\n      operationId: checkPrePlayerInTrack\n      security:\n        - bearerAuth: []\n      responses:\n        200:\n          description: 选手在该赛道中\n        404:\n          description: \"Not Found: Track not found or player is not in\"\n        500:\n          description: Server error\n\n    delete:\n      tags:\n        - tracks\n      description: 选手退赛，需要管理员权限（无视赛道开放）或本人\n      operationId: removePrePlayerFromTrack\n      security:\n        - bearerAuth: []\n      responses:\n        204:\n          description: Successful operation\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          description: \"Forbidden: Track is not open\"\n        404:\n          description: \"Not Found: Track does not exist\"\n        500:\n          description: Server error\n\n  \"/v1/codes\":\n    get:\n      tags:\n        - codes\n      description: 需要已登录用户\n      operationId: getCodes\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: query\n          name: contestId\n          description: 所属比赛\n          required: false\n          schema:\n            type: number\n        - in: query\n          name: teamId\n          description: 队伍Id\n          required: false\n          schema:\n            type: number\n        - name: begin\n          in: query\n          description: 按时间降序排列，起始代码的位置\n          schema:\n            type: number\n        - name: end\n          in: query\n          description: 按时间降序排列，结束代码的位置\n          schema:\n            type: number\n      responses:\n        200:\n          description: Successful\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Code\"\n        403:\n          description: 403 Forbidden\n        404:\n          description: 404 Not Found\n        422:\n          description: 422 Missing contents\n        500:\n          description: Server Error\n\n    post:\n      description: 上传代码\n      tags:\n        - codes\n      operationId: addCode\n      security:\n        - bearerAuth: []\n      requestBody:\n        $ref: \"#/components/requestBodies/addCode\"\n      responses:\n        201:\n          description: Successful operation\n          headers:\n            Location:\n              description: 新上传代码的 URL\n              schema:\n                type: string\n        422:\n          description: 422 Missing contents\n        500:\n          description: Server Error\n\n  \"/v1/codes/{codeId}\":\n    get:\n      tags:\n        - codes\n      description: 通过ID获取代码\n      summary: Describe this route\n      operationId: getCodeById\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: path\n          name: codeId\n          required: true\n          description: 代码Id\n          schema:\n            type: number\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Code\"\n        403:\n          description: Forbidden\n        500:\n          description: Server Error\n\n    put:\n      tags:\n        - codes\n      summary: 更新已存在的代码\n      description: 需要 `root` `organizer` 角色，所属队伍成员\n      operationId: updateCode\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: codeId\n          in: path\n          description: 待更新代码的 ID\n          required: true\n          schema:\n            type: number\n      requestBody:\n        $ref: \"#/components/requestBodies/updateCode\"\n      responses:\n        204:\n          description: Successful operation\n          headers:\n            Location:\n              description: 被更新代码的 URL\n              schema:\n                type: string\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        404:\n          description: \"Not Found: Team / Code does not exist\"\n        500:\n          description: Server error\n\n    delete:\n      tags:\n        - codes\n      summary: 删除代码\n      description: 需要 `root` 角色，所属队伍成员\n      operationId: deleteCode\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: codeId\n          in: path\n          description: 要删除代码的 ID\n          required: true\n          schema:\n            type: number\n      responses:\n        204:\n          description: Successful operation\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        404:\n          description: \"Not Found: Code / Team does not exist\"\n        500:\n          description: Server error\n\n  \"/v1/codes/{codeId}/compile\":\n    post:\n      description: 编译代码\n      tags:\n        - codes\n      operationId: compileCode\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: codeId\n          in: path\n          description: 要编译代码的 ID\n          required: true\n          schema:\n            type: number\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - role\n              properties:\n                role:\n                  type: number\n      responses:\n        200:\n          description: Successful operation\n          headers:\n            Location:\n              description: 编译信息（暂未区分是否成功）\n              schema:\n                type: string\n        400:\n          description: 400 Error (TODO Add info)\n        404:\n          description: 404 Code does not exist\n        409:\n          description: 409 Code is compiling\n        500:\n          description: Server Error\n\n    put:\n      tags:\n        - codes\n      summary: 更新编译信息\n      description: 由server发起\n      operationId: updateCodeCompileInfo\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: codeId\n          in: path\n          description: 代码 ID\n          required: true\n          schema:\n            type: number\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - compileInfo\n              properties:\n                status:\n                  type: string\n      responses:\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        403:\n          description: \"Forbidden: Permission denied\"\n        404:\n          description: \"Not Found: Code does not exist / Docker container does not exist\"\n        422:\n          description: \"Unprocessable Entity: Missing form data\"\n        500:\n          description: Server error\n        503:\n          description: \"Service Unavailable: Failed to stop or remove docker container\"\n\ncomponents:\n  schemas:\n    Article:\n      type: object\n      required:\n        - id\n        - title\n        - alias\n        - authorId\n        - content\n      properties:\n        id:\n          type: number\n          description: 自增值\n        title:\n          type: string\n        alias:\n          type: string\n          description: 用于 SEO 与 URL\n        authorId:\n          type: number\n        content:\n          type: string\n          description: 文章内容(支持 Markdown)\n        abstract:\n          type: string\n          description: 摘要，用于预览功能\n        image:\n          type: string\n          description: 文章标题图片\n        views:\n          type: number\n          default: 0\n        likers:\n          type: array\n          items:\n            type: number\n            description: 点赞用户的 ID\n        tags:\n          type: array\n          items:\n            type: string\n        visible:\n          type: boolean\n          default: false\n          description: 文章可见性，用于审阅功能\n        createdAt:\n          $ref: \"#/components/schemas/Date\"\n        createdBy:\n          type: number\n        updatedAt:\n          $ref: \"#/components/schemas/Date\"\n        updatedBy:\n          type: number\n\n    Comment:\n      type: object\n      required:\n        - id\n        - authorId\n        - articleId\n        - content\n        - replyTo\n      properties:\n        id:\n          type: number\n          description: 自增值\n        authorId:\n          type: number\n        articleId:\n          type: number\n        content:\n          type: string\n          description: 评论内容(支持 Markdown)\n        replyTo:\n          type: number\n          description: \"回复的上级评论的 ID, -1 代表一级（独立）评论\"\n        likers:\n          type: array\n          items:\n            type: number\n            description: 点赞用户的 ID\n        createdAt:\n          $ref: \"#/components/schemas/Date\"\n        createdBy:\n          type: number\n        updatedAt:\n          $ref: \"#/components/schemas/Date\"\n        updatedBy:\n          type: number\n\n    Contest:\n      type: object\n      required:\n        - id\n        - name\n        - type\n        - year\n      properties:\n        id:\n          type: number\n          description: 自增值\n        name:\n          type: string\n          description: 比赛名称\n        type:\n          type: string\n          enum: [电设, 软设, 队式]\n          description: 比赛类别\n        year:\n          type: number\n          description: 比赛开展的年份\n        enrollAvailable:\n          type: boolean\n          default: true\n          description: 当前比赛是否正在进行，允许队伍操作\n        preOpen:\n          type: boolean\n          description: 当前是否在预赛报名期\n        track:\n          type: number\n          description: 赛道ID\n        createdAt:\n          $ref: \"#/components/schemas/Date\"\n        createdBy:\n          type: number\n        updatedAt:\n          $ref: \"#/components/schemas/Date\"\n        updatedBy:\n          type: number\n\n    User:\n      type: object\n      required:\n        - id\n        - username\n        - group\n        - role\n        - password\n        - name\n        - department\n      properties:\n        id:\n          type: number\n          description: 通常是学号\n        username:\n          type: string\n          description: 字母、数字组合\n        group:\n          type: string\n          enum:\n            - admin\n            - student\n            - teacher\n          description: |\n            用户组:\n             * `admin` - 管理员\n             * `student` - 学生\n             * `teacher` - 教师\n        role:\n          type: string\n          enum:\n            - root\n            - editor\n            - keeper\n            - organizer\n            - counselor\n            - student\n            - writer\n            - teacher\n          description: |\n            用户组:\n             * `root` - 权限：weekly(rwe), resource(rwe), user(rwe)\n             * `editor` - 权限：weekly(rwe), resource(r), user(r)\n             * `keeper` - 权限：weekly(r), resource(rwe), user(r)\n             * `reader` - 权限：weekly(r), resource(r), user(r)\n             * `writer` - 权限：weekly(rw), resource(r), user(r)\n        password:\n          type: string\n        email:\n          type: string\n        name:\n          type: string\n        department:\n          type: string\n        phone:\n          type: number\n        class:\n          type: string\n        createdAt:\n          $ref: \"#/components/schemas/Date\"\n        createdBy:\n          type: number\n        updatedAt:\n          $ref: \"#/components/schemas/Date\"\n        updatedBy:\n          type: number\n\n    Counter:\n      type: object\n      required:\n        - _id\n      properties:\n        _id:\n          type: string\n        count:\n          type: number\n          default: 0\n\n    Date:\n      type: string\n      format: date-time\n      description: \u003e-\n        日期对象。使用时采用 ISO\n        格式字符串表示。[更多信息](https://www.iso.org/iso-8601-date-and-time-format.html)\n\n    Team:\n      type: object\n      required:\n        - id\n        - contestId\n        - name\n        - description\n        - leader\n        - members\n        - inviteCode\n      properties:\n        id:\n          type: number\n          description: 自增值\n        contestId:\n          type: number\n          description: 比赛ID\n        name:\n          type: string\n        description:\n          type: string\n          description: 队伍简介\n        leader:\n          type: number\n          description: 队长ID\n        members:\n          type: array\n          items:\n            type: number\n            description: 队员ID\n        inviteCode:\n          type: number\n        available:\n          type: boolean\n          default: true\n          description: 队伍是否仍具有参赛资格\n        score:\n          type: number\n          description: 队伍分数\n        createdAt:\n          $ref: \"#/components/schemas/Date\"\n        createdBy:\n          type: number\n        updatedAt:\n          $ref: \"#/components/schemas/Date\"\n        updatedBy:\n          type: number\n\n    Announcement:\n      type: object\n      required:\n        - id\n        - contestId\n        - title\n        - content\n        - priority\n      properties:\n        id:\n          type: number\n          description: 自增值\n        contestId:\n          type: number\n          description: 比赛ID\n        title:\n          type: string\n          description: 公告标题\n        content:\n          type: string\n          description: 公告内容\n        priority:\n          type: number\n          default: 1\n          description: 公告显示优先级\n        createdAt:\n          $ref: \"#/components/schemas/Date\"\n        createdBy:\n          type: number\n        updatedAt:\n          $ref: \"#/components/schemas/Date\"\n        updatedBy:\n          type: number\n\n    Room:\n      type: object\n      required:\n        - id\n        - contestId\n        - teams\n        - ip\n        - port\n      properties:\n        id:\n          type: number\n          description: 自增值\n        contestId:\n          type: number\n          description: 房间ID\n        status:\n          type: number\n          enum: [0, 1, 2]\n          default: 0\n          description: 房间状态，0表示未开启，1表示已开启，2表示已关闭\n        teams:\n          type: array\n          items:\n            type: number\n            description: 队伍ID(机器人可用-1表示)\n        ip:\n          type: string\n          description: ip地址\n        port:\n          type: number\n          description: 端口\n        createdAt:\n          $ref: \"#/components/schemas/Date\"\n        createdBy:\n          type: number\n        updatedAt:\n          $ref: \"#/components/schemas/Date\"\n        updatedBy:\n          type: number\n\n    allowedEndpoints:\n      type: array\n      items:\n        type: object\n        properties:\n          path:\n            type: string\n            description: 节点路径\n            example: \"/v1/users/\"\n          methods:\n            type: array\n            items:\n              type: string\n              description: 请求方法\n              example: \"GET\"\n\n    Track:\n      type: object\n      required:\n        - id\n        - name\n        - players\n        - year\n        - open\n        - description\n        - preOpen\n        - prePlayers\n      properties:\n        id:\n          type: number\n          description: 自增值\n        name:\n          type: string\n          description: 赛道名称\n        description:\n          type: string\n          description: 赛道简介\n        year:\n          type: number\n          description: 赛道年份\n        open:\n          type: boolean\n          default: false\n          description: 赛道是否开放报名\n        preOpen:\n          type: boolean\n          default: false\n          description: 赛道是否开放预赛报名\n        players:\n          type: array\n          description: 赛道选手 ID 数组\n          items:\n            type: number\n        prePlayers:\n          type: array\n          description: 赛道预赛选手 ID 数组\n          items:\n            type: number\n    Code:\n      type: object\n      required:\n        - id\n        - contestId\n        - teamId\n        - name\n        - content\n        - language\n        - createdAt\n        - createdBy\n        - updatedAt\n        - updatedBy\n      properties:\n        id:\n          type: number\n          description: 自增值\n        contestId:\n          type: number\n          description: 对应比赛\n        teamId:\n          type: number\n          description: 归属队伍\n        name:\n          type: string\n          description: 文件名\n        content:\n          type: string\n          description: 代码内容\n        language:\n          type: string\n          description: 代码所用语言\n        createdAt:\n          $ref: \"#/components/schemas/Date\"\n        createdBy:\n          type: number\n        updatedAt:\n          $ref: \"#/components/schemas/Date\"\n        updatedBy:\n          type: number\n\n  requestBodies:\n    addArticle:\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - title\n              - alias\n              - authorId\n              - content\n            properties:\n              title:\n                type: string\n              alias:\n                type: string\n                description: 用于 SEO 与 URL\n              authorId:\n                type: number\n              content:\n                type: string\n                description: 文章内容(支持 Markdown)\n              abstract:\n                type: string\n                description: 摘要，用于预览功能\n              image:\n                type: string\n                description: 文章标题图片\n              tags:\n                type: array\n                items:\n                  type: string\n              visible:\n                type: boolean\n                default: false\n                description: 文章可见性，用于审阅功能\n      description: 发布文章的提交格式\n      required: true\n\n    updateArticle:\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              title:\n                type: string\n              alias:\n                type: string\n                description: 用于 SEO 与 URL\n              authorId:\n                type: number\n              content:\n                type: string\n                description: 文章内容(支持 Markdown)\n              abstract:\n                type: string\n                description: 摘要，用于预览功能\n              image:\n                type: string\n                description: 文章标题图片\n              views:\n                type: number\n                default: 0\n              likers:\n                type: array\n                items:\n                  type: number\n                  description: 点赞用户的 ID\n              tags:\n                type: array\n                items:\n                  type: string\n              visible:\n                type: boolean\n                default: false\n                description: 文章可见性，用于审阅功能\n      description: 更新文章的提交格式\n      required: true\n\n    addComment:\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - authorId\n              - articleId\n              - content\n              - replyTo\n            properties:\n              authorId:\n                type: number\n              articleId:\n                type: number\n              content:\n                type: string\n                description: 评论内容(支持 Markdown)\n              replyTo:\n                type: number\n                description: \"回复的上级评论的 ID, -1 代表一级（独立）评论\"\n      description: 发布评论的提交格式\n      required: true\n\n    updateComment:\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              authorId:\n                type: number\n              articleId:\n                type: number\n              content:\n                type: string\n                description: 评论内容(支持 Markdown)\n              replyTo:\n                type: number\n                description: \"回复的上级评论的 ID, -1 代表一级（独立）评论\"\n              likers:\n                type: array\n                items:\n                  type: number\n                  description: 点赞用户的 ID\n      description: 更新评论的提交格式\n      required: true\n\n    addContest:\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - name\n              - type\n              - year\n            properties:\n              name:\n                type: string\n                description: 比赛名称\n              type:\n                type: string\n                description: 比赛分类，目前为[\"电设\", \"队式\", \"软设\"]\n              year:\n                type: number\n                description: 比赛举办的年份\n              preOpen:\n                type: boolean\n                description: 比赛是否在预赛报名期\n              track:\n                type: number\n                description: 赛道ID\n      description: 发布比赛的提交格式\n      required: true\n\n    updateContest:\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              name:\n                type: string\n                description: 比赛名称\n              type:\n                type: string\n                description: 比赛分类，目前为[\"电设\", \"队式\", \"软设\"]\n              year:\n                type: number\n                description: 比赛举办的年份\n              enrollAvailable:\n                type: boolean\n                description: 当前比赛是否正在进行，允许队伍操作\n              preOpen:\n                type: boolean\n                description: 比赛是否在预赛报名期\n              track:\n                type: number\n                description: 赛道ID\n      description: 更新比赛的提交格式\n      required: true\n\n    addUser:\n      content:\n        application/json:\n          schema:\n            required:\n              - id\n              - username\n              - password\n            properties:\n              id:\n                type: number\n              username:\n                type: string\n              password:\n                type: string\n              email:\n                type: string\n              name:\n                type: string\n              phone:\n                type: number\n              department:\n                type: string\n              class:\n                type: string\n      description: 新增用户的提交格式\n      required: true\n\n    updateUser:\n      content:\n        application/json:\n          schema:\n            properties:\n              username:\n                type: string\n              password:\n                type: string\n              email:\n                type: string\n              name:\n                type: string\n              phone:\n                type: number\n              department:\n                type: string\n              class:\n                type: string\n      description: 更新用户的提交格式\n      required: true\n\n    getPublicToken:\n      content:\n        application/json:\n          schema:\n            properties:\n              allowedEndpoints:\n                $ref: \"#/components/schemas/allowedEndpoints\"\n      description: 请求使用的节点\n      required: true\n\n    addTeam:\n      content:\n        application/json:\n          schema:\n            required:\n              - contestId\n              - name\n              - description\n            properties:\n              contestId:\n                type: number\n              name:\n                type: string\n              description:\n                type: string\n              leader:\n                type: number\n              members:\n                type: array\n                items:\n                  type: number\n              available:\n                type: boolean\n      description: 新建队伍的提交格式\n      required: true\n\n    updateTeam:\n      content:\n        application/json:\n          schema:\n            properties:\n              name:\n                type: string\n              description:\n                type: string\n              leader:\n                type: number\n              members:\n                type: array\n                items:\n                  type: number\n              available:\n                type: boolean\n              score:\n                type: number\n      description: 更新队伍的提交格式\n      required: true\n\n    addTeamMember:\n      content:\n        application/json:\n          schema:\n            required:\n              - id\n              - inviteCode\n            properties:\n              id:\n                type: number\n              inviteCode:\n                type: string\n      description: 增加队员的提交格式\n      required: true\n\n    addAnnouncement:\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - contestId\n              - title\n              - content\n            properties:\n              contestId:\n                type: number\n                description: 比赛ID\n              title:\n                type: string\n                description: 公告标题\n              content:\n                type: string\n                description: 文章内容(支持 Markdown)\n              priority:\n                type: number\n                description: 优先级，用于排序\n      description: 发布公告的提交格式\n      required: true\n\n    updateAnnouncement:\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              contestId:\n                type: number\n                description: 比赛ID\n              title:\n                type: string\n                description: 公告标题\n              content:\n                type: string\n                description: 公告内容(支持 Markdown)\n              priority:\n                type: number\n                description: 优先级，用于排序\n      description: 更新公告的提交格式\n      required: true\n\n    addRoom:\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - contestId\n              - teams\n              - ip\n              - port\n            properties:\n              contestId:\n                type: number\n                description: 比赛ID\n              teams:\n                type: array\n                items:\n                  type: number\n                  description: 队伍ID(机器人可用-1表示)\n              ip:\n                type: string\n                description: ip地址\n              port:\n                type: number\n                description: 端口\n      description: 新建房间的提交格式\n      required: true\n\n    updateRoom:\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              contestId:\n                type: number\n                description: 比赛ID\n              teams:\n                type: array\n                items:\n                  type: number\n                  description: 队伍ID(机器人可用-1表示)\n              ip:\n                type: string\n                description: ip地址\n              port:\n                type: number\n                description: 端口\n      description: 更新房间的提交格式\n      required: true\n\n    changeRoomTeam:\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - token\n            properties:\n              token:\n                type: string\n                description: 用户token\n      description: 更改房间中队伍的提交格式\n      required: true\n\n    addTrack:\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - name\n              - year\n            properties:\n              name:\n                type: string\n                description: 赛道名称\n              description:\n                type: string\n                description: 赛道简介\n              year:\n                type: number\n                description: 赛道年份\n              open:\n                type: boolean\n                description: 赛道开放报名\n              preOpen:\n                type: boolean\n                description: 赛道开放报名\n\n    updateTrack:\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              name:\n                type: string\n                description: 赛道名称\n              description:\n                type: string\n                description: 赛道简介\n              year:\n                type: number\n                description: 赛道年份\n              open:\n                type: boolean\n                description: 赛道是否开放报名\n              preOpen:\n                type: boolean\n                description: 赛道是否开放报名\n\n    addCode:\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - name\n              - teamId\n              - contestId\n              - content\n              - language\n            properties:\n              name:\n                type: string\n              contestId:\n                type: number\n              teamId:\n                type: number\n              content:\n                type: string\n                description: 代码内容\n              language:\n                type: string\n                description: 代码语言\n      description: 上传代码的提交格式\n      required: true\n\n    updateCode:\n      required: true\n      content:\n        application/json:\n          schema:\n            required:\n              - name\n              - content\n              - language\n            properties:\n              name:\n                type: string\n              content:\n                type: string\n                description: 代码内容\n              language:\n                type: string\n                description: 代码语言\n\n  responses:\n    BadRequest:\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              errors:\n                type: array\n                description: 错误列表\n                items:\n                  type: object\n                  properties:\n                    path:\n                      type: string\n                      description: 错误位置\n                      example: \".params.articleId\"\n                    message:\n                      type: string\n                      description: 错误信息\n                      example: \"should be number\"\n                    errorCode:\n                      type: string\n                      description: 错误码\n                      example: \"type.openapi.validation\"\n      description: 包含请求错误信息的 JSON\n\n    UnauthorizedError:\n      description: \"Access token is missing, invalid or expired / Permission denied\"\n\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n",
			"canonicalURL": "/github.com/eesast/training2020@5b7b4c23598108a61eb5aa7e0216b99ab09e6c20/-/blob/web/backend/api/docs/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/eesast/training2020/blob/5b7b4c23598108a61eb5aa7e0216b99ab09e6c20/web/backend/api/docs/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}