{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/provectus/streaming-data-platform"
		},
		"file": {
			"name": "injection.yaml",
			"size": 0,
			"path": "injection.yaml",
			"byteSize": 9402,
			"content": "AWSTemplateFormatVersion: 2010-09-09\nTransform: AWS::Serverless-2016-10-31\nDescription: Injection part of Streaming Data Platform solution\nMetadata:\n  Authors:\n    Description: German Osin (gosin@provectus.com), Rustam Gimadiev (rgimadiev@provectus.com), Andrew Saushkin (asaushkin@provectus.com), Astamur Kirillin (akirillin@provectus.com)\nParameters:\n  ServicePrefix:\n    AllowedPattern: '^[-a-zA-Z0-9]{4,61}$'\n    ConstraintDescription: Prefix should be DNS compliant\n    Default: testing\n    Type: String\n  BcnStreamName:\n    Type: String\n  LocationStreamName:\n    Type: String\nResources:\n  ApiGatewayRole:\n    Type: AWS::IAM::Role\n    Properties:\n      AssumeRolePolicyDocument:\n        Version: 2012-10-17\n        Statement:\n          - Effect: Allow\n            Principal:\n              Service:\n                - apigateway.amazonaws.com\n            Action:\n              - sts:AssumeRole\n      Policies:\n        - PolicyName: !Sub '${ServicePrefix}ApiGatewayRolePolicy'\n          PolicyDocument:\n            Version: 2012-10-17\n            Statement:\n              - Effect: Allow\n                Sid: LogGroupsAccess\n                Action:\n                  - logs:DescribeLogGroups\n                Resource:\n                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*'\n              - Effect: Allow\n                Sid: CloudWatchAccess\n                Action:\n                  - cloudwatch:*\n                Resource:\n                  - '*'\n              - Effect: Allow\n                Sid: KinesisStreamsAccess\n                Action:\n                  - kinesis:*\n                Resource:\n                  - !Sub 'arn:aws:kinesis:${AWS::Region}:${AWS::AccountId}:stream/${BcnStreamName}'\n                  - !Sub 'arn:aws:kinesis:${AWS::Region}:${AWS::AccountId}:stream/${LocationStreamName}'\n  LogGroupApi:\n    Type: AWS::Logs::LogGroup\n    Properties:\n      LogGroupName: !Sub '/sdp/${ServicePrefix}/ApiGatewayStage'\n  ApiGatewayStage:\n    Type: AWS::ApiGateway::Deployment\n    Properties:\n      RestApiId: !Ref 'Api'\n      StageName: !Sub '${ServicePrefix}'\n      StageDescription:\n        AccessLogSetting:\n          DestinationArn: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${LogGroupApi}'\n  Api:\n    Type: AWS::ApiGateway::RestApi\n    Properties:\n      Name: !Sub '${ServicePrefix}API'\n      Description: API used for requests\n      FailOnWarnings: false\n      Body:\n        openapi: 3.0.0\n        components:\n          schemas:\n            Bid:\n              title: Bid\n              type: object\n              properties:\n                app_uid:\n                  required: true\n                  type: string\n                campaign_item_id:\n                  required: true\n                  type: integer\n                creative_category:\n                  type: string\n                creative_id:\n                  type: string\n                tx_id:\n                  required: true\n                  type: string\n                domain:\n                  type: string\n                win_price:\n                  type: integer\n                type:\n                  type: string\n                  default: bid\n            Impression:\n              title: Impression\n              type: object\n              properties:\n                tx_id:\n                  required: true\n                  type: string\n                win_price:\n                  required: true\n                  type: integer\n                type:\n                  type: string\n                  default: imp\n            Click:\n              title: Click\n              type: object\n              properties:\n                tx_id:\n                  required: true\n                  type: string\n                type:\n                  type: string\n                  default: click\n            Location:\n              title: Location\n              type: object\n              properties:\n                app_uid:\n                  required: true\n                  type: string\n                timestamp:\n                  required: true\n                  type: number\n                longitude:\n                  required: true\n                  type: number\n                latitude:\n                  required: true\n                  type: number\n        info:\n          title: KinesisProxy\n          version: '2016-03-31T18:25:32Z'\n        paths:\n          /bid:\n            post:\n              requestBody:\n                required: true\n                content:\n                  application/json:\n                    schema:\n                      $ref: '#/components/schemas/Bid'\n              responses:\n                '200':\n                  description: 200 response\n              x-amazon-apigateway-integration:\n                credentials: !GetAtt 'ApiGatewayRole.Arn'\n                httpMethod: POST\n                requestParameters:\n                  integration.request.header.Content-Type: '''application/x-amz-json-1.1'''\n                requestTemplates:\n                  application/json: !Sub |\n                    #set($allParams = $input.path('$'))\n                    #set($discard=$allParams.put(\"type\", \"bid\"))\n                    {\n                        \"StreamName\": \"${BcnStreamName}\",\n                        \"Data\": \"$util.base64Encode($input.json('$'))\",\n                        \"PartitionKey\": $input.json('tx_id')\n                    }\n                responses:\n                  default:\n                    statusCode: '200'\n                type: aws\n                uri: !Sub 'arn:aws:apigateway:${AWS::Region}:kinesis:action/PutRecord'\n          /click:\n            post:\n              requestBody:\n                required: true\n                content:\n                  application/json:\n                    schema:\n                      $ref: '#/components/schemas/Click'\n              responses:\n                '200':\n                  description: 200 response\n              x-amazon-apigateway-integration:\n                credentials: !GetAtt 'ApiGatewayRole.Arn'\n                httpMethod: POST\n                requestParameters:\n                  integration.request.header.Content-Type: '''application/x-amz-json-1.1'''\n                requestTemplates:\n                  application/json: !Sub |\n                    #set($allParams = $input.path('$'))\n                    #set($discard=$allParams.put(\"type\", \"click\"))\n                    {\n                        \"StreamName\": \"${BcnStreamName}\",\n                        \"Data\": \"$util.base64Encode($input.json('$'))\",\n                        \"PartitionKey\": $input.json('tx_id')\n                    }\n                responses:\n                  default:\n                    statusCode: '200'\n                type: aws\n                uri: !Sub 'arn:aws:apigateway:${AWS::Region}:kinesis:action/PutRecord'\n          /impression:\n            post:\n              requestBody:\n                required: true\n                content:\n                  application/json:\n                    schema:\n                      $ref: '#/components/schemas/Impression'\n              responses:\n                '200':\n                  description: 200 response\n              x-amazon-apigateway-integration:\n                credentials: !GetAtt 'ApiGatewayRole.Arn'\n                httpMethod: POST\n                requestParameters:\n                  integration.request.header.Content-Type: '''application/x-amz-json-1.1'''\n                requestTemplates:\n                  application/json: !Sub |\n                    #set($allParams = $input.path('$'))\n                    #set($discard=$allParams.put(\"type\", \"imp\"))\n                    {\n                        \"StreamName\": \"${BcnStreamName}\",\n                        \"Data\": \"$util.base64Encode($input.json('$'))\",\n                        \"PartitionKey\": $input.json('tx_id')\n                    }\n                responses:\n                  default:\n                    statusCode: '200'\n                type: aws\n                uri: !Sub 'arn:aws:apigateway:${AWS::Region}:kinesis:action/PutRecord'\n          /location:\n            post:\n              requestBody:\n                required: true\n                content:\n                  application/json:\n                    schema:\n                      $ref: '#/components/schemas/Location'\n              responses:\n                '200':\n                  description: 200 response\n              x-amazon-apigateway-integration:\n                credentials: !GetAtt 'ApiGatewayRole.Arn'\n                httpMethod: POST\n                requestParameters:\n                  integration.request.header.Content-Type: '''application/x-amz-json-1.1'''\n                requestTemplates:\n                  application/json: !Sub |\n                    {\n                        \"StreamName\": \"${LocationStreamName}\",\n                        \"Data\": \"$util.base64Encode($input.json('$'))\",\n                        \"PartitionKey\": $input.json('app_uid')\n                    }\n                responses:\n                  default:\n                    statusCode: '200'\n                type: aws\n                uri: !Sub 'arn:aws:apigateway:${AWS::Region}:kinesis:action/PutRecord'\nOutputs:\n  UrlForAPI:\n    Description: Root URL of the API gateway\n    Value: !Sub 'https://${Api}.execute-api.${AWS::Region}.amazonaws.com/${ServicePrefix}'\n",
			"canonicalURL": "/github.com/provectus/streaming-data-platform@eb8bb744adb962c3e8bda06d53f60bbbbae8f8da/-/blob/injection.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/provectus/streaming-data-platform/blob/eb8bb744adb962c3e8bda06d53f60bbbbae8f8da/injection.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}