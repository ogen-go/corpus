{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/provectus/kafka-ui"
		},
		"file": {
			"name": "kafka-connect-api.yaml",
			"size": 0,
			"path": "kafka-ui-contract/src/main/resources/swagger/kafka-connect-api.yaml",
			"byteSize": 13151,
			"content": "openapi: 3.0.0\ninfo:\n  description: Api Documentation\n  version: 0.1.0\n  title: Api Documentation\n  termsOfService: urn:tos\n  contact: {}\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0\ntags:\n  - name: /connect\nservers:\n  - url: /localhost\n\npaths:\n  /connectors:\n    get:\n      tags:\n        - KafkaConnectClient\n      summary: get all connectors from Kafka Connect service\n      operationId: getConnectors\n      parameters:\n        - name: search\n          in: query\n          required: false\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n    post:\n      tags:\n        - KafkaConnectClient\n      summary: create new connector\n      operationId: createConnector\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NewConnector'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Connector'\n        400:\n          description: Bad request\n        409:\n          description: rebalance is in progress\n        500:\n          description: Internal server error\n\n  /connectors/{connectorName}:\n    get:\n      tags:\n        - KafkaConnectClient\n      summary: get information about the connector\n      operationId: getConnector\n      parameters:\n        - name: connectorName\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Connector'\n    delete:\n      tags:\n        - KafkaConnectClient\n      summary: delete connector\n      operationId: deleteConnector\n      parameters:\n        - name: connectorName\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n        409:\n          description: rebalance is in progress\n\n  /connectors/{connectorName}/config:\n    get:\n      tags:\n        - KafkaConnectClient\n      summary: get connector configuration\n      operationId: getConnectorConfig\n      parameters:\n        - name: connectorName\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConnectorConfig'\n    put:\n      tags:\n        - KafkaConnectClient\n      summary: update or create connector with provided config\n      operationId: setConnectorConfig\n      parameters:\n        - name: connectorName\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConnectorConfig'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Connector'\n        400:\n          description: Bad request\n        409:\n          description: rebalance is in progress\n        500:\n          description: Internal server error\n\n\n  /connectors/{connectorName}/status:\n    get:\n      tags:\n        - KafkaConnectClient\n      summary: get connector status\n      operationId: getConnectorStatus\n      parameters:\n        - name: connectorName\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConnectorStatus'\n\n  /connectors/{connectorName}/restart:\n    post:\n      tags:\n        - KafkaConnectClient\n      summary: restart the connector and its tasks\n      operationId: restartConnector\n      parameters:\n        - name: connectorName\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: includeTasks\n          in: query\n          required: false\n          schema:\n            type: boolean\n            default: false\n          description: Specifies whether to restart the connector instance and task instances or just the connector instance\n        - name: onlyFailed\n          in: query\n          required: false\n          schema:\n            type: boolean\n            default: false\n          description: Specifies whether to restart just the instances with a FAILED status or all instances\n\n      responses:\n        200:\n          description: OK\n        409:\n          description: rebalance is in progress\n\n  /connectors/{connectorName}/pause:\n    put:\n      tags:\n        - KafkaConnectClient\n      summary: pause the connector\n      operationId: pauseConnector\n      parameters:\n        - name: connectorName\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        202:\n          description: Accepted\n\n  /connectors/{connectorName}/resume:\n    put:\n      tags:\n        - KafkaConnectClient\n      summary: resume the connector\n      operationId: resumeConnector\n      parameters:\n        - name: connectorName\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        202:\n          description: Accepted\n\n  /connectors/{connectorName}/tasks:\n    get:\n      tags:\n        - KafkaConnectClient\n      summary: get connector tasks\n      operationId: getConnectorTasks\n      parameters:\n        - name: connectorName\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ConnectorTask'\n\n  /connectors/{connectorName}/topics:\n    get:\n      tags:\n        - KafkaConnectClient\n      summary: The set of topic names the connector has been using since its creation or since the last time its set of active topics was reset\n      operationId: getConnectorTopics\n      parameters:\n        - name: connectorName\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties:\n                  $ref: '#/components/schemas/ConnectorTopics'\n\n  /connectors/{connectorName}/tasks/{taskId}/status:\n    get:\n      tags:\n        - KafkaConnectClient\n      summary: get connector task status\n      operationId: getConnectorTaskStatus\n      parameters:\n        - name: connectorName\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: taskId\n          in: path\n          required: true\n          schema:\n            type: integer\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskStatus'\n\n  /connectors/{connectorName}/tasks/{taskId}/restart:\n    post:\n      tags:\n        - KafkaConnectClient\n      summary: restart connector task\n      operationId: restartConnectorTask\n      parameters:\n        - name: connectorName\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: taskId\n          in: path\n          required: true\n          schema:\n            type: integer\n      responses:\n        200:\n          description: OK\n\n  /connector-plugins:\n    get:\n      tags:\n        - KafkaConnectClient\n      summary: get connector plugins\n      operationId: getConnectorPlugins\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ConnectorPlugin'\n\n  /connector-plugins/{pluginName}/config/validate:\n    put:\n      tags:\n        - KafkaConnectClient\n      summary: validate connector plugin configuration\n      operationId: validateConnectorPluginConfig\n      parameters:\n        - name: pluginName\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConnectorConfig'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConnectorPluginConfigValidationResponse'\n\ncomponents:\n  securitySchemes:\n    basicAuth:\n      type: http\n      scheme: basic\n  schemas:\n    ConnectorConfig:\n      type: object\n      additionalProperties:\n        type: object\n\n    Task:\n      type: object\n      properties:\n        connector:\n          type: string\n        task:\n          type: integer\n\n    ConnectorTask:\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/Task'\n        config:\n          $ref: '#/components/schemas/ConnectorConfig'\n\n    NewConnector:\n      type: object\n      properties:\n        name:\n          type: string\n        config:\n          $ref: '#/components/schemas/ConnectorConfig'\n      required:\n        - name\n        - config\n\n    Connector:\n      allOf:\n        - $ref: '#/components/schemas/NewConnector'\n        - type: object\n          properties:\n            tasks:\n              type: array\n              items:\n                $ref: '#/components/schemas/Task'\n            type:\n              type: string\n              enum:\n                - source\n                - sink\n\n    TaskStatus:\n      type: object\n      properties:\n        id:\n          type: integer\n        state:\n          type: string\n          enum:\n            - RUNNING\n            - FAILED\n            - PAUSED\n            - RESTARTING\n            - UNASSIGNED\n        worker_id:\n          type: string\n        trace:\n          type: string\n\n    ConnectorStatus:\n      type: object\n      properties:\n        name:\n          type: string\n        connector:\n          type: object\n          properties:\n            state:\n              type: string\n              enum:\n                - RUNNING\n                - FAILED\n                - PAUSED\n                - UNASSIGNED\n            worker_id:\n              type: string\n            trace:\n              type: string\n        tasks:\n          type: array\n          items:\n            $ref: '#/components/schemas/TaskStatus'\n\n    ConnectorPlugin:\n      type: object\n      properties:\n        class:\n          type: string\n\n    ConnectorPluginConfigDefinition:\n      type: object\n      properties:\n        name:\n          type: string\n        type:\n          type: string\n          enum:\n            - BOOLEAN\n            - CLASS\n            - DOUBLE\n            - INT\n            - LIST\n            - LONG\n            - PASSWORD\n            - SHORT\n            - STRING\n        required:\n          type: boolean\n        default_value:\n          type: string\n        importance:\n          type: string\n          enum:\n            - LOW\n            - MEDIUM\n            - HIGH\n        documentation:\n          type: string\n        group:\n          type: string\n        width:\n          type: string\n          enum:\n            - SHORT\n            - MEDIUM\n            - LONG\n            - NONE\n        display_name:\n          type: string\n        dependents:\n          type: array\n          items:\n            type: string\n        order:\n          type: integer\n\n    ConnectorPluginConfigValue:\n      type: object\n      properties:\n        name:\n          type: string\n        value:\n          type: string\n        recommended_values:\n          type: array\n          items:\n            type: string\n        errors:\n          type: array\n          items:\n            type: string\n        visible:\n          type: boolean\n\n    ConnectorPluginConfig:\n      type: object\n      properties:\n        definition:\n          $ref: '#/components/schemas/ConnectorPluginConfigDefinition'\n        value:\n          $ref: '#/components/schemas/ConnectorPluginConfigValue'\n\n    ConnectorPluginConfigValidationResponse:\n      type: object\n      properties:\n        name:\n          type: string\n        error_count:\n          type: integer\n        groups:\n          type: array\n          items:\n            type: string\n        configs:\n          type: array\n          items:\n            $ref: '#/components/schemas/ConnectorPluginConfig'\n\n    ConnectorTopics:\n      type: object\n      properties:\n        topics:\n          type: array\n          items:\n            type: string\n\n\nsecurity:\n  - basicAuth: []\n\n",
			"canonicalURL": "/github.com/provectus/kafka-ui@46bcbb3436caf7357ff11eebbd1b49fe4f2cd167/-/blob/kafka-ui-contract/src/main/resources/swagger/kafka-connect-api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/provectus/kafka-ui/blob/46bcbb3436caf7357ff11eebbd1b49fe4f2cd167/kafka-ui-contract/src/main/resources/swagger/kafka-connect-api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}