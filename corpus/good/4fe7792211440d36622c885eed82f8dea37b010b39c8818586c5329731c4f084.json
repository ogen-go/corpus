{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ipfs-search/ipfs-search-api"
		},
		"file": {
			"name": "openapi-v2.yaml",
			"size": 0,
			"path": "openapi-v2.yaml",
			"byteSize": 9754,
			"content": "openapi: 3.0.0\ninfo:\n  description: Search files and directories on the [Interplanetary Filesystem](https://ipfs.io/) through the [ipfs-search.com](https://ipfs-search.com) search API.\n  version: 2.0.0\n  title: ipfs-search API\n  contact:\n    name: ipfs-search.com\n    email: info@ipfs-search.com\n    url: https://ipfs-search.com\n  license:\n    name: AGPL 3.0\n    url: 'https://www.gnu.org/licenses/agpl-3.0.nl.html'\n\nservers:\n  - url: 'https://api.ipfs-search.com/v2'\n\npaths:\n  /search:\n    get:\n      summary: Search for files and directories on IPFS.\n      description:\n        Perform search queries on the [ipfs-search.com](ipfs-search.com) index.\n      parameters:\n        - in: query\n          name: q\n          required: true\n          description: Search string query, based on Elasticsearch's [Query string query](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-query-string-query.html#query-dsl-query-string-query) syntax.\n\n            Allows filtering on indexed fields, as listed in the [index mapping](https://github.com/ipfs-search/ipfs-search/tree/master/docs/indices).\n          schema:\n            type: string\n          examples:\n            simple_example:\n              summary: Simple text search.\n              value: water\n            wildcard_name:\n              summary: Wildcard search by reference (file)name.\n              value: references.name:*.html\n            last_seen:\n              summary: Last seen this month.\n              value: last-seen:\u003enow-1M\n            content_type:\n              summary: Exact match on content-type.\n              value: metadata.Content-Type:\"application/pdf\"\n            parent_hash:\n              summary: Inside a directory.\n              value: references.parent_hash:QmVFHYaqPHJ7vg2DcszELhyQ7pJXLjHgx33FBwgbiWRQKi\n        - in: query\n          name: type\n          required: false\n          description: Resource type. Omit to return results of any type.\n          schema:\n            $ref: '#/components/schemas/Type'\n        - name: offset\n          in: query\n          required: false\n          schema:\n            type: integer\n            minimum: 0\n            maximum: 999\n            default: 0\n            example: 1\n          description: Offset from the first result at which to start returning results. A search with an offset of `10` will start at the 11th result, such that with a `limit` of 10, this effectively returns the 2nd page of results.\n\n            Corresponds to the `from`-parameter in the [Elasticsearch Search API](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-search.html#search-search-api-query-params).\n        - name: limit\n          in: query\n          required: false\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 20\n            default: 10\n            example: 15\n          description: Maximum amount of results to return. Used in conjunction with the `offset` parameter for pagination.\n\n            Corresponds to the `size`-parameter in the [Elasticsearch Search API](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-search.html#search-search-api-query-params).\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchResultList'\n  /metadata/${hash}/:\n    get:\n      summary: Retrieve metadata for resources on IPFS.\n      parameters:\n        - name: hash\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/Hash'\n          description: Content ID; IPLD [CID](https://specs.ipld.io/block-layer/CID.html).\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Metadata'\n\n  /thumbnail/${hash}/{width}x{height}:\n    get:\n      summary: Generate/retrieve thumbnails for resources on IPFS (whenever possible).\n      description: Based on [https://www.thumbnailapi.com/documentation/](https://www.thumbnailapi.com/documentation/). Images generated server-side and served through IPFS by providing a redirect.\n      parameters:\n        - name: hash\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/Hash'\n          description: Content ID; IPLD [CID](https://specs.ipld.io/block-layer/CID.html).\n        - name: width\n          in: path\n          required: true\n          schema:\n            type: integer\n            minimum: 64\n            maximum: 1920\n        - name: height\n          in: path\n          required: true\n          schema:\n            type: integer\n            minimum: 48\n            maximum: 1080\n      responses:\n        '308':\n          description: Permanent redirect to thumbnail of the exact requested dimensions, in WebP format, served through IPFS.\n\ncomponents:\n  schemas:\n    SearchResult:\n      type: object\n      properties:\n        hash:\n          $ref: '#/components/schemas/Hash'\n        title:\n          type: string\n          example: Marine Combat \u003cem\u003eWater\u003c/em\u003e Survival by Anonymous\n        description:\n          type: string\n          example: This publication also teaches Marines to cross \u003cem\u003ewater\u003c/em\u003e obstacles and perform \u003cem\u003ewater\u003c/em\u003e rescues correctly and safely.\n        type:\n          $ref: '#/components/schemas/Type'\n        size:\n          type: integer\n          example: 5605\n        first-seen:\n          type: string\n          example: \"2018-08-18T20:49:17Z\"\n        last-seen:\n          type: string\n          example: \"2020-10-27T12:55:32Z\"\n        score:\n          type: number\n          example: 231.37302\n          description: Relevance of the result. The score for items with a more recent `last-seen` date are positively boosted while 'unnamed' items (without a `reference` or a `title`) are negatively boosted.\n        references:\n          type: array\n          items:\n            $ref: '#/components/schemas/Reference'\n          description: Zero or more named references.\n        mimetype:\n          type: string\n          example: text/html\n    Reference:\n      type: object\n      properties:\n        parent_hash:\n          $ref: '#/components/schemas/Hash'\n        name:\n          type: string\n          description: Filename of a resource, as referred to from `parent_hash`.\n          example: marine-combat-water-survival.html\n      description: Any resource can have zero or more references, such that a link to it can be created as [`/ipfs/\u003cparent_hash\u003e/\u003cname\u003e`. This can be used to generate more semantic links as well as to give a hint for the resolution of mimetypes. For example [`/ipfs/QmcDCte64xtxqTVzdWnT5MG9yi3dFsNuLZjAyess4RJFWc/marine-combat-water-survival.html`](https://gateway.ipfs.io/ipfs/QmcDCte64xtxqTVzdWnT5MG9yi3dFsNuLZjAyess4RJFWc/marine-combat-water-survival.html)).\n    SearchResultList:\n      type: object\n      properties:\n        total:\n          type: integer\n          example: 10000\n        max_score:\n          type: number\n          example: 255.88916\n        hits:\n          type: array\n          items:\n            $ref: '#/components/schemas/SearchResult'\n          description: Search results, sorted in descending order by scoring.\n    Metadata:\n      type: object\n      properties:\n        metadata:\n          type: object\n          example:\n            \"xmpDM:genre\":\n              - \"Soundtrack\"\n            \"xmpDM:composer\":\n              - \"Nobuo Uematsu\"\n            \"X-Parsed-By\":\n              - \"org.apache.tika.parser.DefaultParser\"\n              - \"org.apache.tika.parser.mp3.Mp3Parser\"\n            \"creator\":\n              -  \"\"\n            \"xmpDM:album\":\n              -  \"\\\"Final Fantasy IX\\\" Original Soundtrack, Disk 4\"\n            \"xmpDM:trackNumber\":\n              -  \"24\"\n            \"xmpDM:releaseDate\":\n              -  \"2000\"\n            \"meta:author\":\n              -  \"\"\n            \"xmpDM:artist\":\n              -  \"\"\n            \"dc:creator\":\n              -  \"\"\n            \"xmpDM:audioCompressor\":\n              -  \"MP3\"\n            \"resourceName\":\n              -  \"24-Coca Cola TV CM 1.mp3\"\n            \"title\":\n              -  \"Coca Cola TV CM 1\"\n            \"xmpDM:audioChannelType\":\n              -  \"Stereo\"\n            \"version\":\n              -  \"MPEG 3 Layer III Version 1\"\n            \"xmpDM:logComment\":\n              -  \"eng - \\nhttp://www.ffdream.com\"\n            \"xmpDM:audioSampleRate\":\n              -  \"44100\"\n            \"channels\":\n              - \"2\"\n            \"dc:title\":\n              -  \"Coca Cola TV CM 1\"\n            \"Author\":\n              -  \"\"\n            \"xmpDM:duration\":\n              -  \"20218.76953125\"\n            \"Content-Type\":\n              -  \"audio/mpeg\"\n            \"samplerate\":\n              -\"44100\"\n        version:\n          type: integer\n          example: 2\n        type:\n          $ref: '#/components/schemas/Type'\n    Hash:\n      type: string\n      example: QmcDCte64xtxqTVzdWnT5MG9yi3dFsNuLZjAyess4RJFWc\n      description: Content ID; IPLD [CID](https://specs.ipld.io/block-layer/CID.html), a globally unique reference to a resource determined by its contents.\n    Type:\n      type: string\n      example: file\n      enum: [any, audio, video, document, directory, other]\n      default: any\n      description: Type of returned items. Audio, video and directories should be self-explanatory. Documents are files which can be natively opened on most systems, which typically have a textual representation, such as PDF/DJVU, eBook, Office, HTML or text-files. Other are any files which do not fall in any of the prior categories, such as binary software packages, container images, research datasets etc.\n",
			"canonicalURL": "/github.com/ipfs-search/ipfs-search-api@9b73e184bf5662a9067073f6edc0aae810f07596/-/blob/openapi-v2.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ipfs-search/ipfs-search-api/blob/9b73e184bf5662a9067073f6edc0aae810f07596/openapi-v2.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}