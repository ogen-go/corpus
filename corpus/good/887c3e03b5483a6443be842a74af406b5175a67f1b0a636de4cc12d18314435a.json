{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/combust/mleap"
		},
		"file": {
			"name": "mleap_serving_1.0.0_swagger.yaml",
			"size": 0,
			"path": "mleap-spring-boot/src/main/resources/mleap_serving_1.0.0_swagger.yaml",
			"byteSize": 10476,
			"content": "openapi: 3.0.0\ninfo:\n  description: |\n    This documentation covers the MLeap Serving API. You can findout more about MLeap at\n    [https://combust.github.io/mleap-docs/](https://combust.github.io/mleap-docs/) or on Gitter\n    [Combust/mleap](https://gitter.im/combust/mleap?utm_source=badge\u0026utm_medium=badge\u0026utm_campaign=pr-badge).\n  version: \"1.0.0\"\n  title: Swagger MLeap Serving\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\ntags:\n  - name: models\n    description: Serving machine learning models\npaths:\n  /models:\n    post:\n      tags:\n        - models\n      summary: Load a new model to serve\n      operationId: loadModel\n      parameters:\n        - name: timeout\n          in: header\n          required: false\n          schema:\n            type: integer\n      requestBody:\n        $ref: '#/components/requestBodies/LoadModelRequest'\n      responses:\n        '202':\n          description: accepted operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Model'\n            application/x-protobuf:\n              schema:\n                $ref: '#/components/schemas/Model'      \n        '400':\n          description: Invalid input e.g. model name is empty or model with the same name is loaded twice\n  \n  '/models/{modelName}':\n    get:\n      tags:\n        - models\n      summary: Find model by name\n      description: Returns a single model\n      operationId: getModelByName\n      parameters:\n        - name: timeout\n          in: header\n          required: false\n          schema:\n            type: integer\n        - name: modelName\n          in: path\n          description: name of model to retrieve\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Model'\n            application/x-protobuf:\n              schema:\n                $ref: '#/components/schemas/Model'\n        '404':\n          description: Not found, model not loaded previously\n    delete:\n      tags:\n        - models\n      summary: Delete model by name\n      description: Deletes a model\n      operationId: deleteModel\n      parameters:\n        - name: timeout\n          in: header\n          required: false\n          schema:\n            type: integer      \n        - name: modelName\n          in: path\n          description: The name that needs to be deleted\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Model'\n            application/x-protobuf:\n              schema:\n                $ref: '#/components/schemas/Model'      \n        '404':\n          description: Model not found \n  \n  '/models/{modelName}/meta':\n    get:\n      tags:\n        - models\n      summary: Retrieve model meta by name\n      description: Returns the meta a single model\n      operationId: getModelMetaByName\n      parameters:\n        - name: timeout\n          in: header\n          required: false\n          schema:\n            type: integer      \n        - name: modelName\n          in: path\n          description: name of model to retrieve meta for \n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BundleMeta'\n            application/x-protobuf:\n              schema:\n                $ref: '#/components/schemas/BundleMeta'\n        '404':\n          description: Not found, model not loaded previously  \n  '/models/transform':\n    post:\n      tags:\n        - models\n      summary: Transform an input request\n      description: Scores request using loaded model\n      operationId: transform\n      parameters:\n        - name: timeout\n          in: header\n          required: false\n          schema:\n            type: integer        \n      requestBody:\n        $ref: '#/components/requestBodies/TransformFrameRequest'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransformFrameResponse'\n            application/x-protobuf:\n              schema:\n                $ref: '#/components/schemas/TransformFrameResponse'\n  '/models/{modelName}/transform':\n    post:\n      tags:\n        - models\n      summary: Transform an input frame\n      description: Scores frame using loaded model\n      operationId: transformFrame\n      parameters:\n        - name: timeout\n          in: header\n          required: false\n          schema:\n            type: integer \n        - name: modelName\n          in: path\n          description: name of model to retrieve meta for \n          required: true\n          schema:\n            type: string            \n      requestBody:\n        $ref: '#/components/requestBodies/DefaultLeapFrame'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n               $ref: '#/components/schemas/DefaultLeapFrame'\n            application/x-protobuf:\n              schema:\n                $ref: '#/components/schemas/DefaultLeapFrame'\ncomponents:\n  schemas:\n    LoadModelRequest:\n      type: object\n      properties:\n        modelName: \n          type: string\n        uri:\n          type: string\n        config:\n          $ref: '#/components/schemas/ModelConfig'\n        force:\n          type: boolean\n          default: false  \n    Model:\n      type: object\n      properties:\n        modelName: \n          type: string\n        uri:\n          type: string\n        config:\n          $ref: '#/components/schemas/ModelConfig'\n    BundleMeta:\n      type: object\n      properties:\n        bundle:\n          $ref: '#/components/schemas/Bundle'\n        inputSchema:\n          $ref: '#/components/schemas/Schema'\n        outputSchema:\n          $ref: '#/components/schemas/Schema'\n    TransformFrameRequest:\n      type: object\n      properties:\n        modelName: \n          type: string\n        format:\n          type: string\n        tag:\n          type: integer\n          format: uint64\n        frame:\n          type: string\n        options:\n          $ref: '#/components/schemas/TransformOptions'  \n    TransformFrameResponse:\n      type: object\n      properties:\n        tag:\n          type: integer\n          format: uint64\n        format:\n          type: string\n        frame:\n          type: string\n        status:\n          type: string\n          enum:\n            - STATUS_OK\n            - STATUS_ERROR\n        error:\n          type: string\n        backtrace: \n          type: string\n    TransformOptions:\n      type: object\n      properties:\n        select:\n          type: array\n          items:\n            type: string\n        selectMode:\n          type: string\n          enum: \n            - SELECT_MODE_STRICT\n            - SELECT_MODE_RELAXED\n    ModelConfig:\n      type: object  \n      properties:\n        memoryTimeout:\n          type: integer\n          format: uint64\n        diskTimeout:\n          type: integer\n          format: uint64      \n    Bundle:\n      type: object\n      properties:\n        uid: \n          type: string\n        name: \n          type: string\n        format:\n          $ref: '#/components/schemas/Format'\n        version: \n          type: string\n        timestamp: \n          type: string\n    Format:\n      type: string\n      enum:\n        - JSON\n        - PROTOBUF\n    Schema:\n      type: object\n      properties:\n        fields:\n          type: array\n          items:\n              $ref: '#/components/schemas/Field'\n    Field:\n      type: object\n      properties:\n        name:\n          type: string\n        dataType:\n          $ref: '#/components/schemas/DataType'\n    DataType:\n      type: object\n      properties:\n        base: \n          type: string\n          enum:\n            - BOOLEAN\n            - BYTE\n            - SHORT\n            - INT\n            - LONG\n            - FLOAT\n            - DOUBLE\n            - STRING\n            - BYTE_STRING\n        shape:\n          $ref: '#/components/schemas/DataShape'\n    DataShape:\n      type: object\n      required: [ base, isNullable]\n      properties: \n        base: \n          type: string\n          enum:\n            - SCALAR\n            - LIST\n            - TENSOR\n        isNullable:\n          type: boolean\n        tensorShape:\n          $ref: '#/components/schemas/TensorShape'\n    TensorShape:\n      type: array\n      items:\n        $ref: '#/components/schemas/TensorDimension'\n    TensorDimension:\n      type: object\n      properties:\n        size: \n          type: integer\n          format: int32\n        name:\n          type: string\n    DefaultLeapFrame:\n      type: object\n      properties:\n        schema:\n          $ref: '#/components/schemas/Schema'\n        rows:\n          type: array\n          items:\n            type: array\n            items: \n              type: object\n  requestBodies:\n    LoadModelRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/LoadModelRequest'\n        application/x-protobuf:\n          schema:\n            $ref: '#/components/schemas/LoadModelRequest'\n      description: Request object to load a model\n      required: true\n    TransformFrameRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/TransformFrameRequest'\n        application/x-protobuf:\n          schema:\n            $ref: '#/components/schemas/TransformFrameRequest'\n      description: Request object to transform a model\n      required: true  \n    DefaultLeapFrame:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/DefaultLeapFrame'\n        application/x-protobuf:\n          schema:\n            $ref: '#/components/schemas/DefaultLeapFrame'\n      description: Frame to transform a model\n      required: true          \n# Added by API Auto Mocking Plugin\nservers:\n  - description: SwaggerHub API Auto Mocking\n    url: https://virtserver.swaggerhub.com/asarb/mleap/1.0.0",
			"canonicalURL": "/github.com/combust/mleap@087e8f04f79d08bad5e37600c4668dfb0328013f/-/blob/mleap-spring-boot/src/main/resources/mleap_serving_1.0.0_swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/combust/mleap/blob/087e8f04f79d08bad5e37600c4668dfb0328013f/mleap-spring-boot/src/main/resources/mleap_serving_1.0.0_swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}