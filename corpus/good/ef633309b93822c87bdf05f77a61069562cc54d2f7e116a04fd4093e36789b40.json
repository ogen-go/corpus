{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/solana-labs/solana-program-library"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "farms/farm-rpc/swagger.yaml",
			"byteSize": 33320,
			"content": "openapi: 3.0.1\ninfo:\n  title: Solana Farms RPC Service\n  description: RPC service for interaction with pools, farms and vaults built on Solana\n  version: \"0.1\"\nservers:\n  - url: \"http://127.0.0.1:9090\"\n  - url: \"http://localhost:9090\"\npaths:\n  /api/v1/git_token:\n    get:\n      description: Returns Token metadata from Github\n      parameters:\n        - name: name\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/git_tokens:\n    get:\n      description: Returns all Tokens from Github\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/vault:\n    get:\n      description: Returns the Vault struct for the given name\n      parameters:\n        - name: name\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/vaults:\n    get:\n      description: Returns all Vaults available\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/vault_ref:\n    get:\n      description: Returns the Vault metadata address for the given name\n      parameters:\n        - name: name\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/vault_refs:\n    get:\n      description: Returns Vault refs - a map of Vault name to account address with metadata\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/vault_by_ref:\n    get:\n      description: Loads the Vault struct data from the specified metadata address\n      parameters:\n        - name: vault_ref\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/vault_name:\n    get:\n      description: Returns the Vault name for the given metadata address\n      parameters:\n        - name: vault_ref\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/find_vaults:\n    get:\n      description: Returns all Vaults with tokens A and B sorted by version\n      parameters:\n        - name: token_a\n          in: query\n          schema:\n            type: string\n        - name: token_b\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/pool:\n    get:\n      description: Returns the Pool struct for the given name\n      parameters:\n        - name: name\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/pools:\n    get:\n      description: Returns all Pools available\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/pool_ref:\n    get:\n      description: Returns the Pool metadata address for the given name\n      parameters:\n        - name: name\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/pool_refs:\n    get:\n      description: Returns Pool refs - a map of Pool name to account address with metadata\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/pool_by_ref:\n    get:\n      description: Loads the Pool struct data from the specified metadata address\n      parameters:\n        - name: pool_ref\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/pool_name:\n    get:\n      description: Returns the Pool name for the given metadata address\n      parameters:\n        - name: pool_ref\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/find_pools:\n    get:\n      description: Returns all Pools with tokens A and B sorted by version for the given protocol\n      parameters:\n        - name: protocol\n          in: query\n          schema:\n            type: string\n        - name: token_a\n          in: query\n          schema:\n            type: string\n        - name: token_b\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/find_pools_with_lp:\n    get:\n      description: Returns all Pools sorted by version for the given LP token\n      parameters:\n        - name: lp_token\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/pool_price:\n    get:\n      description: Returns pair's price based on the ratio of tokens in the pool\n      parameters:\n        - name: name\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/farm:\n    get:\n      description: Returns the Farm struct for the given name\n      parameters:\n        - name: name\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/farms:\n    get:\n      description: Returns all Farms available\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/farm_ref:\n    get:\n      description: Returns the Farm metadata address for the given name\n      parameters:\n        - name: name\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/farm_refs:\n    get:\n      description: Returns Farm refs - a map of Farm name to account address with metadata\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/farm_by_ref:\n    get:\n      description: Loads the Farm struct data from the specified metadata address\n      parameters:\n        - name: farm_ref\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/farm_name:\n    get:\n      description: Returns the Farm name for the given metadata address\n      parameters:\n        - name: farm_ref\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/find_farms_with_lp:\n    get:\n      description: Returns all Farms for the given LP token\n      parameters:\n        - name: lp_token\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/token:\n    get:\n      description: Returns the Token struct for the given name\n      parameters:\n        - name: name\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/tokens:\n    get:\n      description: Returns all Tokens available\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/token_ref:\n    get:\n      description: Returns the Token metadata address for the given name\n      parameters:\n        - name: name\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/token_refs:\n    get:\n      description: Returns Token refs - a map of Token name to account address with metadata\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/token_by_ref:\n    get:\n      description: Loads the Token struct data from the specified metadata address\n      parameters:\n        - name: token_ref\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/token_name:\n    get:\n      description: Returns the Token name for the given metadata address\n      parameters:\n        - name: token_ref\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/token_with_mint:\n    get:\n      description: Loads the Token struct data from the specified mint\n      parameters:\n        - name: token_mint\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/program_id:\n    get:\n      description: Returns the official Program ID for the given name\n      parameters:\n        - name: name\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/program_ids:\n    get:\n      description: Returns all official Program IDs available\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/program_name:\n    get:\n      description: Returns the official program name for the given Program ID\n      parameters:\n        - name: prog_id\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/is_official_id:\n    get:\n      description: Checks if the given address is the official Program ID\n      parameters:\n        - name: prog_id\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/associated_token_address:\n    get:\n      description: Returns the associated token account address for the given token name\n      parameters:\n        - name: wallet_address\n          in: query\n          schema:\n            type: string\n        - name: token_name\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/wallet_tokens:\n    get:\n      description: Returns all tokens with active account in the wallet\n      parameters:\n        - name: wallet_address\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/token_account_data:\n    get:\n      description: Returns UiTokenAccount struct data for the associated token account address\n      parameters:\n        - name: wallet_address\n          in: query\n          schema:\n            type: string\n        - name: token_name\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/account_balance:\n    get:\n      description: Returns native SOL balance\n      parameters:\n        - name: wallet_address\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/token_account_balance:\n    get:\n      description: Returns token balance for the associated token account address\n      parameters:\n        - name: wallet_address\n          in: query\n          schema:\n            type: string\n        - name: token_name\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/has_active_token_account:\n    get:\n      description: Returns true if the associated token account exists and is initialized\n      parameters:\n        - name: wallet_address\n          in: query\n          schema:\n            type: string\n        - name: token_name\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/user_stake_balance:\n    get:\n      description: Returns User's stacked balance\n      parameters:\n        - name: wallet_address\n          in: query\n          schema:\n            type: string\n        - name: farm_name\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/vault_stake_balance:\n    get:\n      description: Returns Vault's stacked balance\n      parameters:\n        - name: vault_name\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/vault_user_info:\n    get:\n      description: Returns user stats for specific Vault\n      parameters:\n        - name: wallet_address\n          in: query\n          schema:\n            type: string\n        - name: vault_name\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/vault_info:\n    get:\n      description: Returns Vault stats\n      parameters:\n        - name: vault_name\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/new_instruction_create_system_account:\n    get:\n      description: Returns a new Instruction for creating system account\n      parameters:\n        - name: wallet_address\n          in: query\n          schema:\n            type: string\n        - name: new_address\n          in: query\n          schema:\n            type: string\n        - name: lamports\n          in: query\n          schema:\n            type: string\n        - name: space\n          in: query\n          schema:\n            type: string\n        - name: owner\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/new_instruction_close_system_account:\n    get:\n      description: Returns a new Instruction for closing system account\n      parameters:\n        - name: wallet_address\n          in: query\n          schema:\n            type: string\n        - name: target_address\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/new_instruction_transfer:\n    get:\n      description: Creates the native SOL transfer instruction\n      parameters:\n        - name: wallet_address\n          in: query\n          schema:\n            type: string\n        - name: destination_wallet\n          in: query\n          schema:\n            type: string\n        - name: sol_ui_amount\n          in: query\n          schema:\n            type: number\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/new_instruction_token_transfer:\n    get:\n      description: Creates a tokens transfer instruction\n      parameters:\n        - name: wallet_address\n          in: query\n          schema:\n            type: string\n        - name: token_name\n          in: query\n          schema:\n            type: string\n        - name: destination_wallet\n          in: query\n          schema:\n            type: string\n        - name: ui_amount\n          in: query\n          schema:\n            type: number\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/new_instruction_sync_token_balance:\n    get:\n      description: Creates a new Instruction for syncing token balance for the specified account\n      parameters:\n        - name: wallet_address\n          in: query\n          schema:\n            type: string\n        - name: token_name\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/new_instruction_create_token_account:\n    get:\n      description: Returns a new Instruction for creating associated token account\n      parameters:\n        - name: wallet_address\n          in: query\n          schema:\n            type: string\n        - name: token_name\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/new_instruction_close_token_account:\n    get:\n      description: Returns a new Instruction for closing associated token account\n      parameters:\n        - name: wallet_address\n          in: query\n          schema:\n            type: string\n        - name: token_name\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/new_instruction_user_init_vault:\n    get:\n      description: Creates a new Instruction for initializing a new User for the Vault\n      parameters:\n        - name: wallet_address\n          in: query\n          schema:\n            type: string\n        - name: vault_name\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/new_instruction_add_liquidity_vault:\n    get:\n      description: Creates a new Instruction for adding liquidity to the Vault\n      parameters:\n        - name: wallet_address\n          in: query\n          schema:\n            type: string\n        - name: vault_name\n          in: query\n          schema:\n            type: string\n        - name: max_token_a_ui_amount\n          in: query\n          schema:\n            type: number\n        - name: max_token_b_ui_amount\n          in: query\n          schema:\n            type: number\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/new_instruction_lock_liquidity_vault:\n    get:\n      description: Creates a new Instruction for locking liquidity in the Vault\n      parameters:\n        - name: wallet_address\n          in: query\n          schema:\n            type: string\n        - name: vault_name\n          in: query\n          schema:\n            type: string\n        - name: ui_amount\n          in: query\n          schema:\n            type: number\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/new_instruction_unlock_liquidity_vault:\n    get:\n      description: Creates a new Instruction for unlocking liquidity from the Vault\n      parameters:\n        - name: wallet_address\n          in: query\n          schema:\n            type: string\n        - name: vault_name\n          in: query\n          schema:\n            type: string\n        - name: ui_amount\n          in: query\n          schema:\n            type: number\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/new_instruction_remove_liquidity_vault:\n    get:\n      description: Creates a new Instruction for removing liquidity from the Vault\n      parameters:\n        - name: wallet_address\n          in: query\n          schema:\n            type: string\n        - name: vault_name\n          in: query\n          schema:\n            type: string\n        - name: ui_amount\n          in: query\n          schema:\n            type: number\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/new_instruction_add_liquidity_pool:\n    get:\n      description: Creates a new Instruction for adding liquidity to the Pool\n      parameters:\n        - name: wallet_address\n          in: query\n          schema:\n            type: string\n        - name: pool_name\n          in: query\n          schema:\n            type: string\n        - name: max_token_a_ui_amount\n          in: query\n          schema:\n            type: number\n        - name: max_token_b_ui_amount\n          in: query\n          schema:\n            type: number\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/new_instruction_remove_liquidity_pool:\n    get:\n      description: Creates a new Instruction for removing liquidity from the Pool\n      parameters:\n        - name: wallet_address\n          in: query\n          schema:\n            type: string\n        - name: pool_name\n          in: query\n          schema:\n            type: string\n        - name: ui_amount\n          in: query\n          schema:\n            type: number\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/new_instruction_swap:\n    get:\n      description: Creates a new Instruction for tokens swap\n      parameters:\n        - name: wallet_address\n          in: query\n          schema:\n            type: string\n        - name: protocol\n          in: query\n          schema:\n            type: string\n        - name: from_token\n          in: query\n          schema:\n            type: string\n        - name: to_token\n          in: query\n          schema:\n            type: string\n        - name: ui_amount_in\n          in: query\n          schema:\n            type: number\n        - name: min_ui_amount_out\n          in: query\n          schema:\n            type: number\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/new_instruction_stake:\n    get:\n      description: Creates a new Instruction for tokens staking\n      parameters:\n        - name: wallet_address\n          in: query\n          schema:\n            type: string\n        - name: farm_name\n          in: query\n          schema:\n            type: string\n        - name: ui_amount\n          in: query\n          schema:\n            type: number\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/new_instruction_unstake:\n    get:\n      description: Creates a new Instruction for tokens unstaking\n      parameters:\n        - name: wallet_address\n          in: query\n          schema:\n            type: string\n        - name: farm_name\n          in: query\n          schema:\n            type: string\n        - name: ui_amount\n          in: query\n          schema:\n            type: number\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/new_instruction_harvest:\n    get:\n      description: Creates a new Instruction for rewards harvesting\n      parameters:\n        - name: wallet_address\n          in: query\n          schema:\n            type: string\n        - name: farm_name\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/new_instruction_crank_vault:\n    get:\n      description: Creates a new Vault Crank Instruction\n      parameters:\n        - name: wallet_address\n          in: query\n          schema:\n            type: string\n        - name: vault_name\n          in: query\n          schema:\n            type: string\n        - name: step\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/create_system_account:\n    post:\n      description: Creates a new system account\n      parameters:\n        - name: wallet_keypair\n          in: query\n          schema:\n            type: string\n        - name: new_account_keypair\n          in: query\n          schema:\n            type: string\n        - name: lamports\n          in: query\n          schema:\n            type: string\n        - name: space\n          in: query\n          schema:\n            type: string\n        - name: owner\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/close_system_account:\n    post:\n      description: Closes existing system account\n      parameters:\n        - name: wallet_keypair\n          in: query\n          schema:\n            type: string\n        - name: target_account_keypair\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/transfer:\n    post:\n      description: Transfers native SOL from the wallet to the destination\n      parameters:\n        - name: wallet_keypair\n          in: query\n          schema:\n            type: string\n        - name: destination_wallet\n          in: query\n          schema:\n            type: string\n        - name: sol_ui_amount\n          in: query\n          schema:\n            type: number\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/transfer_sol_to_wsol:\n    post:\n      description: Transfers native SOL from the wallet to the associated Wrapped SOL account.\n      parameters:\n        - name: wallet_keypair\n          in: query\n          schema:\n            type: string\n        - name: sol_ui_amount\n          in: query\n          schema:\n            type: number\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/token_transfer:\n    post:\n      description: Transfers tokens from the wallet to the destination\n      parameters:\n        - name: wallet_keypair\n          in: query\n          schema:\n            type: string\n        - name: token_name\n          in: query\n          schema:\n            type: string\n        - name: destination_wallet\n          in: query\n          schema:\n            type: string\n        - name: ui_amount\n          in: query\n          schema:\n            type: number\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/sync_token_balance:\n    post:\n      description: Updates token balance of the account, usefull after transfer SOL to WSOL account\n      parameters:\n        - name: wallet_keypair\n          in: query\n          schema:\n            type: string\n        - name: token_name\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/create_token_account:\n    post:\n      description: Returns the associated token account or creates one if it doesn't exist\n      parameters:\n        - name: wallet_keypair\n          in: query\n          schema:\n            type: string\n        - name: token_name\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/close_token_account:\n    post:\n      description: Closes existing token account associated with the given user's main account\n      parameters:\n        - name: wallet_keypair\n          in: query\n          schema:\n            type: string\n        - name: token_name\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/user_init_vault:\n    post:\n      description: Initializes a new User for the Vault\n      parameters:\n        - name: wallet_keypair\n          in: query\n          schema:\n            type: string\n        - name: vault_name\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/add_liquidity_vault:\n    post:\n      description: Adds liquidity to the Vault\n      parameters:\n        - name: wallet_keypair\n          in: query\n          schema:\n            type: string\n        - name: vault_name\n          in: query\n          schema:\n            type: string\n        - name: max_token_a_ui_amount\n          in: query\n          schema:\n            type: number\n        - name: max_token_b_ui_amount\n          in: query\n          schema:\n            type: number\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/add_locked_liquidity_vault:\n    post:\n      description: Adds locked liquidity to the Vault\n      parameters:\n        - name: wallet_keypair\n          in: query\n          schema:\n            type: string\n        - name: vault_name\n          in: query\n          schema:\n            type: string\n        - name: ui_amount\n          in: query\n          schema:\n            type: number\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/remove_liquidity_vault:\n    post:\n      description: Removes liquidity from the Vault\n      parameters:\n        - name: wallet_keypair\n          in: query\n          schema:\n            type: string\n        - name: vault_name\n          in: query\n          schema:\n            type: string\n        - name: ui_amount\n          in: query\n          schema:\n            type: number\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/remove_unlocked_liquidity_vault:\n    post:\n      description: Removes unlocked liquidity from the Vault\n      parameters:\n        - name: wallet_keypair\n          in: query\n          schema:\n            type: string\n        - name: vault_name\n          in: query\n          schema:\n            type: string\n        - name: ui_amount\n          in: query\n          schema:\n            type: number\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/add_liquidity_pool:\n    post:\n      description: Adds liquidity to the Pool\n      parameters:\n        - name: wallet_keypair\n          in: query\n          schema:\n            type: string\n        - name: pool_name\n          in: query\n          schema:\n            type: string\n        - name: max_token_a_ui_amount\n          in: query\n          schema:\n            type: number\n        - name: max_token_b_ui_amount\n          in: query\n          schema:\n            type: number\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/remove_liquidity_pool:\n    post:\n      description: Removes liquidity from the Pool\n      parameters:\n        - name: wallet_keypair\n          in: query\n          schema:\n            type: string\n        - name: pool_name\n          in: query\n          schema:\n            type: string\n        - name: ui_amount\n          in: query\n          schema:\n            type: number\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/swap:\n    post:\n      description: Swaps tokens\n      parameters:\n        - name: wallet_keypair\n          in: query\n          schema:\n            type: string\n        - name: protocol\n          in: query\n          schema:\n            type: string\n        - name: from_token\n          in: query\n          schema:\n            type: string\n        - name: to_token\n          in: query\n          schema:\n            type: string\n        - name: ui_amount_in\n          in: query\n          schema:\n            type: number\n        - name: min_ui_amount_out\n          in: query\n          schema:\n            type: number\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/stake:\n    post:\n      description: Stakes tokens to the Farm\n      parameters:\n        - name: wallet_keypair\n          in: query\n          schema:\n            type: string\n        - name: farm_name\n          in: query\n          schema:\n            type: string\n        - name: ui_amount\n          in: query\n          schema:\n            type: number\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/unstake:\n    post:\n      description: Unstakes tokens from the Farm\n      parameters:\n        - name: wallet_keypair\n          in: query\n          schema:\n            type: string\n        - name: farm_name\n          in: query\n          schema:\n            type: string\n        - name: ui_amount\n          in: query\n          schema:\n            type: number\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/harvest:\n    post:\n      description: Harvests rewards from the Pool\n      parameters:\n        - name: wallet_keypair\n          in: query\n          schema:\n            type: string\n        - name: farm_name\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/crank_vault:\n    post:\n      description: Cranks single Vault\n      parameters:\n        - name: wallet_keypair\n          in: query\n          schema:\n            type: string\n        - name: vault_name\n          in: query\n          schema:\n            type: string\n        - name: step\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n  /api/v1/crank_vaults:\n    post:\n      description: Cranks all Vaults\n      parameters:\n        - name: wallet_keypair\n          in: query\n          schema:\n            type: string\n        - name: step\n          in: query\n          schema:\n            type: string\n      responses:\n        default:\n          description: Json object or error string\n",
			"canonicalURL": "/github.com/solana-labs/solana-program-library@7caf27cca6a9f58055f93517774318eb2b2f97bf/-/blob/farms/farm-rpc/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/solana-labs/solana-program-library/blob/7caf27cca6a9f58055f93517774318eb2b2f97bf/farms/farm-rpc/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}