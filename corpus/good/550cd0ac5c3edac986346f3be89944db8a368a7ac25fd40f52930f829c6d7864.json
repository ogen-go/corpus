{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mristin/fastapi-icontract"
		},
		"file": {
			"name": "example_async_schema.json",
			"size": 0,
			"path": "tests_3_8/example_async_schema.json",
			"byteSize": 9155,
			"content": "{\n  \"openapi\": \"3.0.2\",\n  \"info\": {\n    \"title\": \"FastAPI\",\n    \"version\": \"0.1.0\"\n  },\n  \"paths\": {\n    \"/has_author\": {\n      \"get\": {\n        \"summary\": \"Has Author\",\n        \"description\": \"Check if the author exists in the database.\",\n        \"operationId\": \"has_author_has_author_get\",\n        \"parameters\": [\n          {\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"Identifier\",\n              \"type\": \"string\"\n            },\n            \"name\": \"identifier\",\n            \"in\": \"query\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"title\": \"Response Has Author Has Author Get\",\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/has_category\": {\n      \"get\": {\n        \"summary\": \"Has Category\",\n        \"operationId\": \"has_category_has_category_get\",\n        \"parameters\": [\n          {\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"Category\",\n              \"type\": \"string\"\n            },\n            \"name\": \"category\",\n            \"in\": \"query\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"title\": \"Response Has Category Has Category Get\",\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/books_in_category\": {\n      \"get\": {\n        \"summary\": \"Books In Category\",\n        \"description\": \"Retrieve the books of the given category from the database.\",\n        \"operationId\": \"books_in_category_books_in_category_get\",\n        \"parameters\": [\n          {\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"Category\",\n              \"type\": \"string\"\n            },\n            \"name\": \"category\",\n            \"in\": \"query\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"title\": \"Response Books In Category Books In Category Get\",\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Book\"\n                  }\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        },\n        \"x-contracts\": {\n          \"preconditions\": [\n            {\n              \"enforced\": true,\n              \"text\": \"has_category\",\n              \"language\": \"python3\",\n              \"statusCode\": 404,\n              \"description\": \"The category must exist.\"\n            }\n          ],\n          \"snapshots\": [],\n          \"postconditions\": [\n            {\n              \"enforced\": true,\n              \"text\": \"a.all(await_each(has_author(book.author) for book in result))\",\n              \"language\": \"python3\",\n              \"statusCode\": 500,\n              \"description\": \"One ore more authors of the resulting books do not exist.\"\n            }\n          ]\n        }\n      }\n    },\n    \"/has_book\": {\n      \"get\": {\n        \"summary\": \"Has Book\",\n        \"description\": \"Check whether the book exists.\",\n        \"operationId\": \"has_book_has_book_get\",\n        \"parameters\": [\n          {\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"Book Id\",\n              \"type\": \"string\"\n            },\n            \"name\": \"book_id\",\n            \"in\": \"query\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"title\": \"Response Has Book Has Book Get\",\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/book_count\": {\n      \"get\": {\n        \"summary\": \"Book Count\",\n        \"description\": \"Count the available books.\",\n        \"operationId\": \"book_count_book_count_get\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"title\": \"Response Book Count Book Count Get\",\n                  \"type\": \"integer\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/upsert_book\": {\n      \"post\": {\n        \"summary\": \"Add Book\",\n        \"operationId\": \"add_book_upsert_book_post\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Book\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        },\n        \"x-contracts\": {\n          \"preconditions\": [],\n          \"snapshots\": [\n            {\n              \"name\": \"book_count\",\n              \"enabled\": true,\n              \"text\": \"book_count()\",\n              \"language\": \"python3\"\n            },\n            {\n              \"name\": \"has_book\",\n              \"enabled\": true,\n              \"text\": \"has_book(book.identifier)\",\n              \"language\": \"python3\"\n            }\n          ],\n          \"postconditions\": [\n            {\n              \"enforced\": true,\n              \"text\": \"async_apply(\\n        lambda a_book_count: (\\n                OLD.book_count + 1 == a_book_count if not OLD.has_book\\n                else OLD.book_count == a_book_count),\\n        book_count())\",\n              \"language\": \"python3\",\n              \"statusCode\": 500\n            },\n            {\n              \"enforced\": true,\n              \"text\": \"has_book(book.identifier)\",\n              \"language\": \"python3\",\n              \"statusCode\": 500\n            }\n          ]\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Book\": {\n        \"title\": \"Book\",\n        \"required\": [\n          \"identifier\",\n          \"author\",\n          \"category\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"identifier\": {\n            \"title\": \"Identifier\",\n            \"type\": \"string\"\n          },\n          \"author\": {\n            \"title\": \"Author\",\n            \"type\": \"string\"\n          },\n          \"category\": {\n            \"title\": \"Category\",\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"HTTPValidationError\": {\n        \"title\": \"HTTPValidationError\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"detail\": {\n            \"title\": \"Detail\",\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ValidationError\"\n            }\n          }\n        }\n      },\n      \"ValidationError\": {\n        \"title\": \"ValidationError\",\n        \"required\": [\n          \"loc\",\n          \"msg\",\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"loc\": {\n            \"title\": \"Location\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"msg\": {\n            \"title\": \"Message\",\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"title\": \"Error Type\",\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}",
			"canonicalURL": "/github.com/mristin/fastapi-icontract@92eb26b15339677a690371ed218882618d2eb47d/-/blob/tests_3_8/example_async_schema.json",
			"externalURLs": [
				{
					"url": "https://github.com/mristin/fastapi-icontract/blob/92eb26b15339677a690371ed218882618d2eb47d/tests_3_8/example_async_schema.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}