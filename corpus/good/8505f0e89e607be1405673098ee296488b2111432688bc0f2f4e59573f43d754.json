{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/OpenAPITools/openapi-generator"
		},
		"file": {
			"name": "schema-with-special-characters.yaml",
			"size": 0,
			"path": "modules/openapi-generator/src/test/resources/3_0/schema-with-special-characters.yaml",
			"byteSize": 2558,
			"content": "openapi: 3.0.3\ninfo:\n  description: test\n  version: 1.0.0\n  title: test\npaths:\n  /test:\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MySchemaName._-Characters'\n      responses:\n        '200':\n          description: the response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MySchemaName._-Characters'\ncomponents:\n  schemas:\n    Parent:\n      properties:\n        objectType:\n          type: string\n      discriminator:\n        propertyName: objectType\n    ChildSchema:\n      description: A schema that does not have any special character.\n      allOf:\n        - $ref: '#/components/schemas/Parent'\n        - type: object\n          properties:\n            prop1:\n              type: string\n    # Note: the name below with non-ASCII characters is a valid JSON schema name,\n    # however currently OpenAPI generator does not allow special characters beyond [.-_]\n    #\n    # The set of allowed characters for OpenAPI schema names is specified in RFC 8259\n    # at https://tools.ietf.org/html/rfc8259.\n    # The OpenAPI schema uses the JSON schema specification, which references RFC 8259.\n    # A string is a sequence of zero or more Unicode characters [UNICODE].\n    # Note that this citation references the latest version of Unicode\n    # rather than a specific release. Any character may be escaped.\n    # MySchemaNameWithUnusual#$12.3!@#%üçáüçÖüòÄüèÑüèæ‚Äç‚ôÇÔ∏èCharacters:\n    MySchemaName._-Characters:\n      description:\n        A schema name that has letters, numbers, punctuation and non-ASCII characters.\n        The sanitization rules should make it possible to generate a language-specific\n        classname with allowed characters in that programming language. \n      allOf:\n        - $ref: '#/components/schemas/Parent'\n        - type: object\n          properties:\n            prop2:\n              type: string\n    # Below is a schema with the same name, except special characters have been removed.\n    # This causes a codegen issue because the generated code will have exactly the same class name\n    # as the above 'MySchemaName._-Characters'.\n    # Hence the schema is commented out for now.\n    #\n    #MySchemaNameCharacters:\n    #  description:\n    #    A schema with same name as above, without the special characters. \n    #  allOf:\n    #    - $ref: '#/components/schemas/Parent'\n    #    - type: object\n    #      properties:\n    #        prop2:\n    #          type: string\n",
			"canonicalURL": "/github.com/OpenAPITools/openapi-generator@3a2bbbb8501f7238dba0dc124234e9e0459cdd9e/-/blob/modules/openapi-generator/src/test/resources/3_0/schema-with-special-characters.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/OpenAPITools/openapi-generator/blob/3a2bbbb8501f7238dba0dc124234e9e0459cdd9e/modules/openapi-generator/src/test/resources/3_0/schema-with-special-characters.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}