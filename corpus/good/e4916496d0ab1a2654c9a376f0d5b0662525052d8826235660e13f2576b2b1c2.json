{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/everstake/cosmoscan-api"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "resources/static/api.yaml",
			"byteSize": 33593,
			"content": "openapi: 3.0.1\ninfo:\n  title: \"Cosmoscan API\"\n  description: 'Global errors: \u003cul\u003e\u003cli\u003e{\"error\" : \"bad_request\", \"msg\": \"\"} - invalid request from client (Status code:400) \u003c/li\u003e\u003cli\u003e {\"error\" : \"service_error\"} - error on the service side (Status code:500)\u003c/li\u003e\u003c/ul\u003e'\n  version: 1.0.0\ntags:\n  - name: Services\npaths:\n  /meta:\n    get:\n      tags:\n        - Services\n      summary: Meta information\n      responses:\n        200:\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  height:\n                    type: string\n                  latest_validator:\n                    type: string\n                  latest_proposal:\n                    type: string\n                  validator_avg_fee:\n                    type: number\n                  block_time:\n                    type: number\n                  current_price:\n                    type: number\n                example:\n                  height: 500\n                  latest_validator: \"Everstake\"\n                  latest_proposal: \"Free transactions\"\n                  validator_avg_fee: \"10\"\n                  block_time: 6.7\n                  current_price: \"3.2\"\n  /historical-state:\n    get:\n      tags:\n        - Services\n      summary: Get historical state\n      responses:\n        200:\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  current:\n                    type: object\n                    properties:\n                      price:\n                        type: number\n                      market_cap:\n                        type: number\n                      circulating_supply:\n                        type: number\n                      trading_volume:\n                        type: number\n                      staked_ratio:\n                        type: number\n                      transactions_count:\n                        type: number\n                      community_pool:\n                        type: number\n                      top20_weight:\n                        type: number\n                      created_at:\n                        type: number\n                  price_agg:\n                    $ref: '#/components/schemas/agg_item'\n                  market_cap_agg:\n                    $ref: '#/components/schemas/agg_item'\n                  staked_ratio:\n                    $ref: '#/components/schemas/agg_item'\n  /transactions/fee/agg:\n    get:\n      tags:\n        - Services\n      parameters:\n        - name: by\n          in: query\n          required: true\n          schema:\n            type: string\n            enum: [ hour, day, week, month ]\n        - name: from\n          in: query\n          required: false\n          schema:\n            type: number\n          description: timestamp in seconds\n        - name: to\n          in: query\n          required: false\n          schema:\n            type: number\n          description: timestamp in seconds\n      summary: Get aggregeted fee\n      responses:\n        200:\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/agg_item'\n  /transfers/volume/agg:\n    get:\n      tags:\n        - Services\n      parameters:\n        - name: by\n          in: query\n          required: true\n          schema:\n            type: string\n            enum: [ hour, day, week, month ]\n        - name: from\n          in: query\n          required: false\n          schema:\n            type: number\n          description: timestamp in seconds\n        - name: to\n          in: query\n          required: false\n          schema:\n            type: number\n          description: timestamp in seconds\n      summary: Get aggregeted transfers volume\n      responses:\n        200:\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/agg_item'\n  /operations/count/agg:\n    get:\n      tags:\n        - Services\n      parameters:\n        - name: by\n          in: query\n          required: true\n          schema:\n            type: string\n            enum: [ hour, day, week, month ]\n        - name: from\n          in: query\n          required: false\n          schema:\n            type: number\n          description: timestamp in seconds\n        - name: to\n          in: query\n          required: false\n          schema:\n            type: number\n          description: timestamp in seconds\n      summary: Get aggregeted count of operations\n      responses:\n        200:\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/agg_item'\n  /blocks/count/agg:\n    get:\n      tags:\n        - Services\n      parameters:\n        - name: by\n          in: query\n          required: true\n          schema:\n            type: string\n            enum: [ hour, day, week, month ]\n        - name: from\n          in: query\n          required: false\n          schema:\n            type: number\n          description: timestamp in seconds\n        - name: to\n          in: query\n          required: false\n          schema:\n            type: number\n          description: timestamp in seconds\n      summary: Get aggregeted count of blocks\n      responses:\n        200:\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/agg_item'\n  /blocks/delay/agg:\n    get:\n      tags:\n        - Services\n      parameters:\n        - name: by\n          in: query\n          required: true\n          schema:\n            type: string\n            enum: [ hour, day, week, month ]\n        - name: from\n          in: query\n          required: false\n          schema:\n            type: number\n          description: timestamp in seconds\n        - name: to\n          in: query\n          required: false\n          schema:\n            type: number\n          description: timestamp in seconds\n      summary: Get aggregeted average block delay\n      responses:\n        200:\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/agg_item'\n  /blocks/validators/uniq/agg:\n    get:\n      tags:\n        - Services\n      parameters:\n        - name: by\n          in: query\n          required: true\n          schema:\n            type: string\n            enum: [ hour, day, week, month ]\n        - name: from\n          in: query\n          required: false\n          schema:\n            type: number\n          description: timestamp in seconds\n        - name: to\n          in: query\n          required: false\n          schema:\n            type: number\n          description: timestamp in seconds\n      summary: Get aggregeted number of unique validators that signed the blocks\n      responses:\n        200:\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/agg_item'\n  /blocks/operations/agg:\n    get:\n      tags:\n        - Services\n      parameters:\n        - name: by\n          in: query\n          required: true\n          schema:\n            type: string\n            enum: [ hour, day, week, month ]\n        - name: from\n          in: query\n          required: false\n          schema:\n            type: number\n          description: timestamp in seconds\n        - name: to\n          in: query\n          required: false\n          schema:\n            type: number\n          description: timestamp in seconds\n      summary: Get avg number of operations per block by period\n      responses:\n        200:\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/agg_item'\n  /delegations/volume/agg:\n    get:\n      tags:\n        - Services\n      parameters:\n        - name: by\n          in: query\n          required: true\n          schema:\n            type: string\n            enum: [ hour, day, week, month ]\n        - name: from\n          in: query\n          required: false\n          schema:\n            type: number\n          description: timestamp in seconds\n        - name: to\n          in: query\n          required: false\n          schema:\n            type: number\n          description: timestamp in seconds\n      responses:\n        200:\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/agg_item'\n  /undelegations/volume/agg:\n    get:\n      tags:\n        - Services\n      parameters:\n        - name: by\n          in: query\n          required: true\n          schema:\n            type: string\n            enum: [ hour, day, week, month ]\n        - name: from\n          in: query\n          required: false\n          schema:\n            type: number\n          description: timestamp in seconds\n        - name: to\n          in: query\n          required: false\n          schema:\n            type: number\n          description: timestamp in seconds\n      summary: Get aggregeted undelegations volume\n      responses:\n        200:\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/agg_item'\n  /unbonding/volume/agg:\n    get:\n      tags:\n        - Services\n      parameters:\n        - name: by\n          in: query\n          required: true\n          schema:\n            type: string\n            enum: [ hour, day, week, month ]\n        - name: from\n          in: query\n          required: false\n          schema:\n            type: number\n          description: timestamp in seconds\n        - name: to\n          in: query\n          required: false\n          schema:\n            type: number\n          description: timestamp in seconds\n      summary: Get aggregeted unbonding volume\n      responses:\n        200:\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/agg_item'\n  /bonded-ratio/agg:\n    get:\n      tags:\n        - Services\n      parameters:\n        - name: by\n          in: query\n          required: true\n          schema:\n            type: string\n            enum: [ hour, day, week, month ]\n        - name: from\n          in: query\n          required: false\n          schema:\n            type: number\n          description: timestamp in seconds\n        - name: to\n          in: query\n          required: false\n          schema:\n            type: number\n          description: timestamp in seconds\n      summary: Get aggregeted bonded ratio\n      responses:\n        200:\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/agg_item'\n  /network/stats:\n    get:\n      tags:\n        - Services\n      parameters:\n        - name: to\n          in: query\n          required: false\n          schema:\n            type: number\n          description: timestamp in seconds\n      summary: Get network stats\n      responses:\n        200:\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  total_staking_balance:\n                    type: array\n                    items:\n                      type: number\n                  number_delegators:\n                    type: array\n                    items:\n                      type: number\n                  number_multi_delegators:\n                    type: array\n                    items:\n                      type: number\n                  transfer_volume:\n                    type: array\n                    items:\n                      type: number\n                  fee_volume:\n                    type: array\n                    items:\n                      type: number\n                  highest_fee:\n                    type: array\n                    items:\n                      type: number\n                  undelegation_volume:\n                    type: array\n                    items:\n                      type: number\n                  block_delay:\n                    type: array\n                    items:\n                      type: number\n                  total_accounts:\n                    type: array\n                    items:\n                      type: number\n                  total_whale_accounts:\n                    type: array\n                    items:\n                      type: number\n                  total_small_accounts:\n                    type: array\n                    items:\n                      type: number\n                  total_jailers:\n                    type: array\n                    items:\n                      type: number\n  /staking/pie:\n    get:\n      tags:\n        - Services\n      summary: Get top 20 staking shares\n      responses:\n        200:\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  total:\n                    type: number\n                  parts:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        title:\n                          type: string\n                        label:\n                          type: string\n                        value:\n                          type: number\n                example: { total: 4321, parts: [ { title: everstake, value: 123 } ] }\n  /proposals:\n    get:\n      tags:\n        - Services\n      parameters:\n        - name: id\n          in: query\n          required: false\n          schema:\n            type: number\n        - name: limit\n          in: query\n          required: false\n          schema:\n            type: number\n        - name: offset\n          in: query\n          required: false\n          schema:\n            type: number\n      summary: Get proposals\n      responses:\n        200:\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: number\n                    proposer:\n                      type: string\n                    tx_hash:\n                      type: string\n                    title:\n                      type: string\n                    description:\n                      type: string\n                    status:\n                      type: string\n                    votes_yes:\n                      type: number\n                    votes_abstain:\n                      type: number\n                    votes_no:\n                      type: number\n                    votes_no_with_veto:\n                      type: number\n                    submit_time:\n                      type: number\n                    deposit_end_time:\n                      type: number\n                    total_deposits:\n                      type: number\n                    voting_start_time:\n                      type: number\n                    voting_end_time:\n                      type: number\n                    voters:\n                      type: number\n                    participation_rate:\n                      type: number\n                    turnout:\n                      type: number\n                    activity:\n                      $ref: '#/components/schemas/agg_item'\n  /proposals/votes:\n    get:\n      tags:\n        - Services\n      parameters:\n        - name: proposal_id\n          in: query\n          required: true\n          schema:\n            type: number\n        - name: voters\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: limit\n          in: query\n          required: false\n          schema:\n            type: number\n        - name: offset\n          in: query\n          required: false\n          schema:\n            type: number\n      summary: Get proposal votes\n      responses:\n        200:\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    proposal_id:\n                      type: number\n                    voter:\n                      type: string\n                    tx_hash:\n                      type: string\n                    option:\n                      type: string\n                    created_at:\n                      type: number\n                    is_validator:\n                      type: boolean\n                    title:\n                      type: string\n  /proposals/deposits:\n    get:\n      tags:\n        - Services\n      parameters:\n        - name: proposal_id\n          in: query\n          required: false\n          schema:\n            type: number\n      summary: Get proposal deposits\n      responses:\n        200:\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    proposal_id:\n                      type: number\n                    depositor:\n                      type: string\n                    amount:\n                      type: number\n                    created_at:\n                      type: number\n  /proposals/chart:\n    get:\n      tags:\n        - Services\n      summary: Get proposals chart data\n      responses:\n        200:\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    proposal_id:\n                      type: number\n                    voters_total:\n                      type: number\n                    validators_total:\n                      type: number\n                    turnout:\n                      type: number\n                    yes_percent:\n                      type: number\n                    no_percent:\n                      type: number\n                    no_with_veto_percent:\n                      type: number\n                    abstain_percent:\n                      type: number\n  /validators/33power/agg:\n    get:\n      tags:\n        - Services\n      parameters:\n        - name: by\n          in: query\n          required: true\n          schema:\n            type: string\n            enum: [ hour, day, week, month ]\n        - name: from\n          in: query\n          required: false\n          schema:\n            type: number\n          description: timestamp in seconds\n        - name: to\n          in: query\n          required: false\n          schema:\n            type: number\n          description: timestamp in seconds\n      summary: Get count of validators which have more than 33.4% power\n      responses:\n        200:\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/agg_item'\n  /accounts/whale/agg:\n    get:\n      tags:\n        - Services\n      parameters:\n        - name: by\n          in: query\n          required: true\n          schema:\n            type: string\n            enum: [ hour, day, week, month ]\n        - name: from\n          in: query\n          required: false\n          schema:\n            type: number\n          description: timestamp in seconds\n        - name: to\n          in: query\n          required: false\n          schema:\n            type: number\n          description: timestamp in seconds\n      summary: Get aggregetd whale accounts\n      responses:\n        200:\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/agg_item'\n  /validators:\n    get:\n      tags:\n        - Services\n      summary: Get validators info\n      responses:\n        200:\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    title:\n                      type: string\n                    power:\n                      type: number\n                    self_stake:\n                      type: number\n                    fee:\n                      type: number\n                    blocks_proposed:\n                      type: number\n                    delegators:\n                      type: number\n                    power_24_change:\n                      type: number\n                    governance_votes:\n                      type: number\n  /validators/delegators/total:\n    get:\n      tags:\n        - Services\n      summary: Get validators delegators\n      responses:\n        200:\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/validator_item'\n  /validators/top/jailed:\n    get:\n      tags:\n        - Services\n      summary: Get most jailed validators\n      responses:\n        200:\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/validator_item'\n  /validators/top/proposed:\n    get:\n      tags:\n        - Services\n      summary: Get validators with max count of proposed blocks\n      responses:\n        200:\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/validator_item'\n  /validators/fee/ranges:\n    get:\n      tags:\n        - Services\n      summary: Get validators fee range\n      responses:\n        200:\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  from:\n                    type: number\n                  to:\n                    type: number\n                  validators:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        validator:\n                          type: string\n                        fee:\n                          type: number\n  /validator/{address}:\n    get:\n      parameters:\n        - in: path\n          name: address\n          required: true\n          schema:\n            type: string\n      tags:\n        - Services\n      summary: Get validator info\n      responses:\n        200:\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  title:\n                    type: string\n                  website:\n                    type: string\n                  operator_address:\n                    type: string\n                  acc_address:\n                    type: string\n                  cons_address:\n                    type: string\n                  percent_power:\n                    type: number\n                  power:\n                    type: number\n                  self_stake:\n                    type: number\n                  fee:\n                    type: number\n                  blocks_proposed:\n                    type: number\n                  delegators:\n                    type: number\n                  power_24_change:\n                    type: number\n                  governance_votes:\n                    type: number\n  /validator/{address}/balance:\n    get:\n      parameters:\n        - in: path\n          name: address\n          required: true\n          schema:\n            type: string\n      tags:\n        - Services\n      summary: Get validator balance\n      responses:\n        200:\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  self_delegated:\n                    type: number\n                  other_delegated:\n                    type: number\n                  available:\n                    type: number\n  /validator/{address}/delegations/agg:\n    get:\n      parameters:\n        - in: path\n          name: address\n          required: true\n          schema:\n            type: string\n      tags:\n        - Services\n      summary: Get aggregeted validator delegations\n      responses:\n        200:\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/agg_item'\n  /validator/{address}/delegators/agg:\n    get:\n      parameters:\n        - in: path\n          name: address\n          required: true\n          schema:\n            type: string\n      tags:\n        - Services\n      summary: Get aggregeted validator delegators\n      responses:\n        200:\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/agg_item'\n  /validator/{address}/blocks/stats:\n    get:\n      parameters:\n        - in: path\n          name: address\n          required: true\n          schema:\n            type: string\n      tags:\n        - Services\n      summary: Get validator block stats\n      responses:\n        200:\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  proposed:\n                    type: number\n                  missed_validations:\n                    type: number\n                  revenue:\n                    type: number\n  /validator/{address}/delegators:\n    get:\n      parameters:\n        - in: path\n          name: address\n          required: true\n          schema:\n            type: string\n        - name: limit\n          in: query\n          required: false\n          schema:\n            type: number\n            maximum: 20\n        - name: offset\n          in: query\n          required: false\n          schema:\n            type: number\n      tags:\n        - Services\n      summary: Get list of validator delegators\n      responses:\n        200:\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  items:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        delegator:\n                          type: string\n                        amount:\n                          type: number\n                        since:\n                          type: number\n                        delta:\n                          type: number\n                  total:\n                    type: number\n  /blocks:\n    get:\n      parameters:\n        - name: limit\n          in: query\n          required: false\n          schema:\n            type: number\n            maximum: 20\n        - name: offset\n          in: query\n          required: false\n          schema:\n            type: number\n      tags:\n        - Services\n      summary: Get list of blocks\n      responses:\n        200:\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  items:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        height:\n                          type: string\n                        hash:\n                          type: string\n                        proposer:\n                          type: string\n                        proposer_address:\n                          type: string\n                        created_at:\n                          type: number\n                  total:\n                    type: number\n  /block/{height}:\n    get:\n      parameters:\n        - name: height\n          in: path\n          required: true\n          schema:\n            type: number\n      tags:\n        - Services\n      summary: Get block\n      responses:\n        200:\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  height:\n                    type: number\n                  hash:\n                    type: string\n                  total_txs:\n                    type: number\n                  chain_id:\n                    type: string\n                  proposer:\n                    type: string\n                  proposer_address:\n                    type: string\n                  txs:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        height:\n                          type: string\n                        hash:\n                          type: string\n                        proposer:\n                          type: string\n                        proposer_address:\n                          type: string\n                        created_at:\n                          type: number\n                  created_at:\n                    type: number\n  /transactions:\n    get:\n      parameters:\n        - name: limit\n          in: query\n          required: false\n          schema:\n            type: number\n        - name: offset\n          in: query\n          required: false\n          schema:\n            type: number\n        - name: address\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - Services\n      summary: Get list of transactions\n      responses:\n        200:\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  items:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        hash:\n                          type: string\n                        status:\n                          type: boolean\n                        fee:\n                          type: string\n                        height:\n                          type: number\n                        messages:\n                          type: number\n                        created_at:\n                          type: number\n                  total:\n                    type: number\n  /transaction/{hash}:\n    get:\n      parameters:\n        - name: hash\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - Services\n      summary: Get block\n      responses:\n        200:\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  hash:\n                    type: string\n                  type:\n                    type: string\n                  status:\n                    type: boolean\n                  fee:\n                    type: string\n                  height:\n                    type: number\n                  gas_used:\n                    type: number\n                  gas_wanted:\n                    type: number\n                  memo:\n                    type: string\n                  messages:\n                    type: array\n                    items:\n                      type: string\n                  created_at:\n                    type: number\n  /account/{address}:\n    get:\n      parameters:\n        - name: address\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - Services\n      summary: Get Account info\n      responses:\n        200:\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  address:\n                    type: string\n                  balance:\n                    type: number\n                  delegated:\n                    type: number\n                  unbonding:\n                    type: number\n                  stake_reward:\n                    type: number\ncomponents:\n  schemas:\n    agg_item:\n      type: array\n      items:\n        type: object\n        properties:\n          time:\n            type: number\n          value:\n            type: number\n      example:\n        [ { time: 1591258057, value: \"32.32\" }, { time: 1591258052, value: \"5\" } ]\n    validator_item:\n      type: array\n      items:\n        type: object\n        properties:\n          validator:\n            type: string\n          value:\n            type: number\n      example:\n        [ { validator: \"validator1\", value: 2 }, { validator: \"validator2\", value: 32 } ]\n",
			"canonicalURL": "/github.com/everstake/cosmoscan-api@6c27e85138da5b67bd0b27da8b4437d1139fe5fc/-/blob/resources/static/api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/everstake/cosmoscan-api/blob/6c27e85138da5b67bd0b27da8b4437d1139fe5fc/resources/static/api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}