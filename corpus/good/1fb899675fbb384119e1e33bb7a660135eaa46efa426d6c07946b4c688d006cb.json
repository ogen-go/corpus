{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/gojek/turing"
		},
		"file": {
			"name": "logs.yaml",
			"size": 0,
			"path": "api/api/specs/logs.yaml",
			"byteSize": 10581,
			"content": "openapi: 3.0.3\ninfo:\n  title: Endpoints and schemas of Turing Logs\n  version: 0.0.1\n\n.tags: \u0026tags\n  - \"Logs\"\n\n.id: \u0026id\n  type: \"integer\"\n  format: \"int32\"\n  \npaths:\n  \"/projects/{project_id}/routers/{router_id}/logs\":\n    get:\n      tags: *tags\n      summary: \"List logs for a router, default to 'router' component type and the currently deployed version\"\n      parameters:\n        - in: \"path\"\n          name: \"project_id\"\n          description: \"id of the project that the router belongs to\"\n          schema:\n            \u003c\u003c: *id\n          required: true\n        - in: \"path\"\n          name: \"router_id\"\n          description: \"id of the router\"\n          schema:\n            \u003c\u003c: *id\n          required: true\n        - in: \"query\"\n          name: \"component_type\"\n          description: \"component type of the router to get the logs from\"\n          schema:\n            type: \"string\"\n            enum: [ \"router\", \"enricher\", \"ensembler\" ]\n          required: false\n        - in: \"query\"\n          name: \"container\"\n          description: \"container to get the logs from, default to 'user-container', the default container name in Knative\"\n          schema:\n            type: \"string\"\n          required: false\n        - in: \"query\"\n          name: \"since_time\"\n          description: \"RFC 3399 timestamp from which to retrieve the logs e.g. 2002-10-02T15:00:00Z. The logs retrieved will have timestamp after (but not including) since_time\"\n          schema:\n            type: \"string\"\n          required: false\n        - in: \"query\"\n          name: \"tail_lines\"\n          description: \"number of lines from the end of the logs to retrieve. If both tail_lines and head_lines are set, tail_lines will be ignored\"\n          schema:\n            type: \"string\"\n          required: false\n        - in: \"query\"\n          name: \"head_lines\"\n          description: \"number of lines from the start of the logs to retrieve. If both tail_lines and head_lines are set, tail_lines will be ignored\"\n          schema:\n            type: \"string\"\n          required: false\n        - in: \"query\"\n          name: \"previous\"\n          description: \"if true, return the logs from previous terminated container in all pods, default to false\"\n          schema:\n            type: \"boolean\"\n          required: false\n      responses:\n        200:\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                type: \"array\"\n                items:\n                  $ref: \"#/components/schemas/PodLog\"\n        400:\n          description: \"Invalid value for the router id or query strings\"\n        500:\n          description: \"Failed to list pod logs due to internal error\"\n\n  \"/projects/{project_id}/routers/{router_id}/versions/{version}/logs\":\n    get:\n      tags: *tags\n      summary: \"List logs for a router with a specific version, default to 'router' component type\"\n      parameters:\n        - in: \"path\"\n          name: \"project_id\"\n          description: \"id of the project that the router belongs to\"\n          schema:\n            \u003c\u003c: *id\n          required: true\n        - in: \"path\"\n          name: \"router_id\"\n          description: \"id of the router\"\n          schema:\n            \u003c\u003c: *id\n          required: true\n        - in: \"path\"\n          name: \"version\"\n          description: \"router version value to get the logs from\"\n          schema:\n            type: \"string\"\n          required: true\n        - in: \"query\"\n          name: \"component_type\"\n          description: \"component type of the router to get the logs from\"\n          schema:\n            type: \"string\"\n            enum: [ \"router\", \"enricher\", \"ensembler\" ]\n          required: false\n        - in: \"query\"\n          name: \"container\"\n          description: \"container to get the logs from, default to 'user-container', the default container name in Knative\"\n          schema:\n            type: \"string\"\n          required: false\n        - in: \"query\"\n          name: \"since_time\"\n          description: \"RFC 3399 timestamp from which to retrieve the logs e.g. 2002-10-02T15:00:00Z\"\n          schema:\n            type: \"string\"\n          required: false\n        - in: \"query\"\n          name: \"tail_lines\"\n          description: \"number of lines from the end of the logs to retrieve, this takes priority over 'since_time'\"\n          schema:\n            type: \"string\"\n          required: false\n        - in: \"query\"\n          name: \"previous\"\n          description: \"if true, return the logs from previous terminated container in all pods, default to false\"\n          schema:\n            type: \"boolean\"\n          required: false\n      responses:\n        200:\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                type: \"array\"\n                items:\n                  $ref: \"#/components/schemas/PodLog\"\n        400:\n          description: \"Invalid value for the router, version id or query strings\"\n        500:\n          description: \"Failed to list pod logs due to internal error\"\n\n  \"/projects/{project_id}/jobs/{job_id}/logs\":\n    get:\n      tags: *tags\n      summary: \"List logs for an ensembling job, default to 'image_builder' component type\"\n      parameters:\n        - in: \"path\"\n          name: \"project_id\"\n          description: \"id of the project that the ensembling job belongs to\"\n          schema:\n            \u003c\u003c: *id\n          required: true\n        - in: \"path\"\n          name: \"job_id\"\n          description: \"id of the ensembling job\"\n          schema:\n            \u003c\u003c: *id\n          required: true\n        - in: \"query\"\n          name: \"component_type\"\n          description: \"component type of the ensembling job to get the logs from\"\n          schema:\n            type: \"string\"\n            enum: [ \"image_builder\", \"driver\", \"executor\" ]\n          required: false\n        - in: \"query\"\n          name: \"since_time\"\n          description: \"RFC 3399 timestamp from which to retrieve the logs e.g. 2002-10-02T15:00:00Z. The logs retrieved will have timestamp after (but not including) since_time\"\n          schema:\n            type: \"string\"\n          required: false\n        - in: \"query\"\n          name: \"tail_lines\"\n          description: \"number of lines from the end of the logs to retrieve. If both tail_lines and head_lines are set, tail_lines will be ignored\"\n          schema:\n            type: \"string\"\n          required: false\n        - in: \"query\"\n          name: \"head_lines\"\n          description: \"number of lines from the start of the logs to retrieve. If both tail_lines and head_lines are set, tail_lines will be ignored\"\n          schema:\n            type: \"string\"\n          required: false\n        - in: \"query\"\n          name: \"previous\"\n          description: \"if true, return the logs from previous terminated container in all pods, default to false\"\n          schema:\n            type: \"boolean\"\n          required: false\n      responses:\n        200:\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EnsemblingPodLogs\"\n        400:\n          description: \"Invalid value for the ensembling job id or query strings\"\n        404:\n          description: \"Ensembling job not found\"\n        500:\n          description: \"Failed to list pod logs due to internal error\"\n\ncomponents:\n  schemas:\n    EnsemblingPodLog:\n      type: object\n      description: \"EnsemblingPodLog object contains a log item from a container in an ensembling pod\"\n      properties:\n        timestamp:\n          type: \"string\"\n          format: \"date-time\"\n          description: \"Log timestamp in RFC3339 format\"\n          example: \"2020-07-10T21:13:51Z\"\n        pod_name:\n          type: \"string\"\n          description: \"Pod name running the container that produces this log\"\n          example: \"batch-7b49b4bcb5-jlr7n\"\n        text_payload:\n          type: \"string\"\n          description: \"Log in text format, either text_payload or json_payload will be set but not both\"\n          example: \"Example log from a container\"\n\n    EnsemblingPodLogs:\n      type: object\n      description: \"EnsemblingPodLog object contains a log item from a container in an ensembling pod\"\n      properties:\n        environment:\n          type: \"string\"\n          description: \"Environment name of the pod running the container that produces this log\"\n          example: \"staging\"\n        namespace:\n          type: \"string\"\n          description: \"Kubernetes namespace where the pod running the container is created\"\n          example: \"cartography\"\n        logging_url:\n          type: \"string\"\n          description: \"A URL link to the dashboard but might not be present if a logging storage is not configured in your infrastructure.\"\n          example: \"http://www.example.com/logging?pod_name=hello\u0026namespace=world\"\n        logs:\n          type: \"array\"\n          description: \"Logs from the ensembling job pod. Each element represents a line.\"\n          items:\n            $ref: \"#/components/schemas/EnsemblingPodLog\"\n\n    PodLog:\n      type: object\n      description: \"PodLog object contains a log item from a container in a pod\"\n      properties:\n        timestamp:\n          type: \"string\"\n          format: \"date-time\"\n          description: \"Log timestamp in RFC3339 format\"\n          example: \"2020-07-10T21:13:51Z\"\n        environment:\n          type: \"string\"\n          description: \"Environment name of the pod running the container that produces this log\"\n          example: \"staging\"\n        namespace:\n          type: \"string\"\n          description: \"Kubernetes namespace where the pod running the container is created\"\n          example: \"cartography\"\n        pod_name:\n          type: \"string\"\n          description: \"Pod name running the container that produces this log\"\n          example: \"nearby-turing-router-90-deployment-7b49b4bcb5-jlr7n\"\n        container_name:\n          type: \"string\"\n          description: \"Container name that produces this log\"\n          example: \"user-container\"\n        text_payload:\n          type: \"string\"\n          description: \"Log in text format, either text_payload or json_payload will be set but not both\"\n          example: \"Example log from a container\"\n        json_payload:\n          type: \"object\"\n          description: \"Log in JSON format, either text_payload or json_payload will be set but not both\"\n          example: { \"level\": \"info\",\"msg\": \"Initializing Nop Result Logger\",\"router_version\": \"test-1-1.integration-test\",\"ts\": 1594386832.6632557 }\n",
			"canonicalURL": "/github.com/gojek/turing@1af7d9a5519ec6632f1150e53132bd1bb8d62084/-/blob/api/api/specs/logs.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/gojek/turing/blob/1af7d9a5519ec6632f1150e53132bd1bb8d62084/api/api/specs/logs.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}