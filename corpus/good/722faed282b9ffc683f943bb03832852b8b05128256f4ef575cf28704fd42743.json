{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "azure.com-apimanagement-apimauthorizationservers-2017-03-01-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/azure.com-apimanagement-apimauthorizationservers-2017-03-01-swagger.yaml",
			"byteSize": 28269,
			"content": "openapi: 3.0.0\ninfo:\n  description: Use these REST APIs for managing OAuth2 servers configuration in your Azure\n    API Management deployment. OAuth 2.0 can be used to authorize developer\n    accounts for Azure API Management. For more information refer to [How to\n    OAuth2](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-oauth2).\n  title: ApiManagementClient\n  version: 2017-03-01\n  x-apisguru-categories:\n    - cloud\n  x-logo:\n    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png\n  x-origin:\n    - format: swagger\n      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/apimanagement/control-plane/Microsoft.ApiManagement/preview/2017-03-01/apimauthorizationservers.json\n      version: \"2.0\"\n  x-preferred: false\n  x-providerName: azure.com\n  x-serviceName: apimanagement-apimauthorizationservers\n  x-tags:\n    - Azure\n    - Microsoft\nsecurity:\n  - apim_key: []\npaths:\n  /authorizationServers:\n    get:\n      description: Lists a collection of authorization servers defined within a service\n        instance.\n      operationId: AuthorizationServer_List\n      parameters:\n        - description: \u003e-\n            | Field | Supported operators    | Supported\n            functions                         |\n\n            |-------|------------------------|---------------------------------------------|\n\n            | id    | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n\n            | name  | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n          in: query\n          name: $filter\n          required: false\n          schema:\n            type: string\n        - description: Number of records to return.\n          in: query\n          name: $top\n          required: false\n          x-ms-parameter-location: method\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n        - description: Number of records to skip.\n          in: query\n          name: $skip\n          required: false\n          x-ms-parameter-location: method\n          schema:\n            type: integer\n            format: int32\n            minimum: 0\n        - description: Version of the API to be used with the client request.\n          in: query\n          name: api-version\n          required: true\n          schema:\n            type: string\n          examples:\n            ApiManagementListAuthorizationServers:\n              value: 2017-03-01\n      responses:\n        \"200\":\n          description: A Collection of the Authorization Server entities for the specified\n            API Management service instance.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AuthorizationServerCollection\"\n              examples:\n                ApiManagementListAuthorizationServers:\n                  $ref: \"#/components/examples/ApiManagementListAuthorizationServers\"\n      tags:\n        - AuthorizationServers\n      x-ms-odata: \"#/components/schemas/AuthorizationServerContract\"\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/authorizationServers/{authsid}\":\n    delete:\n      description: Deletes specific authorization server instance.\n      operationId: AuthorizationServer_Delete\n      parameters:\n        - $ref: \"#/components/parameters/AuthenticationServerIdParameter\"\n        - description: The entity state (Etag) version of the authentication server to\n            delete. A value of \"*\" can be used for If-Match to unconditionally\n            apply the operation.\n          in: header\n          name: If-Match\n          required: true\n          schema:\n            type: string\n          examples:\n            ApiManagementDeleteAuthorizationServers:\n              value: '\"AAAAAAAAI0Q=\"'\n        - description: Version of the API to be used with the client request.\n          in: query\n          name: api-version\n          required: true\n          schema:\n            type: string\n          examples:\n            ApiManagementDeleteAuthorizationServers:\n              value: 2017-03-01\n      responses:\n        \"204\":\n          description: The authorization server settings were successfully deleted.\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                description: Error Body contract.\n                properties:\n                  code:\n                    description: Service-defined error code. This code serves as a\n                      sub-status for the HTTP error code specified in the\n                      response.\n                    type: string\n                  details:\n                    description: The list of invalid fields send in request, in case of\n                      validation error.\n                    items:\n                      description: Error Field contract.\n                      properties:\n                        code:\n                          description: Property level error code.\n                          type: string\n                        message:\n                          description: Human-readable representation of property-level\n                            error.\n                          type: string\n                        target:\n                          description: Property name.\n                          type: string\n                    type: array\n                  message:\n                    description: Human-readable representation of the error.\n                    type: string\n      tags:\n        - AuthorizationServers\n    get:\n      description: Gets the details of the authorization server specified by its identifier.\n      operationId: AuthorizationServer_Get\n      parameters:\n        - $ref: \"#/components/parameters/AuthenticationServerIdParameter\"\n        - description: Version of the API to be used with the client request.\n          in: query\n          name: api-version\n          required: true\n          schema:\n            type: string\n          examples:\n            ApiManagementGetAuthorizationServers:\n              value: 2017-03-01\n      responses:\n        \"200\":\n          description: Gets the details of the specified authorization server.\n          headers:\n            ETag:\n              description: Current entity state version. Should be treated as opaque and\n                used to make conditional HTTP requests.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AuthorizationServerContract\"\n              examples:\n                ApiManagementGetAuthorizationServers:\n                  $ref: \"#/components/examples/ApiManagementGetAuthorizationServers\"\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                description: Error Body contract.\n                properties:\n                  code:\n                    description: Service-defined error code. This code serves as a\n                      sub-status for the HTTP error code specified in the\n                      response.\n                    type: string\n                  details:\n                    description: The list of invalid fields send in request, in case of\n                      validation error.\n                    items:\n                      description: Error Field contract.\n                      properties:\n                        code:\n                          description: Property level error code.\n                          type: string\n                        message:\n                          description: Human-readable representation of property-level\n                            error.\n                          type: string\n                        target:\n                          description: Property name.\n                          type: string\n                    type: array\n                  message:\n                    description: Human-readable representation of the error.\n                    type: string\n      tags:\n        - AuthorizationServers\n    patch:\n      description: Updates the details of the authorization server specified by its\n        identifier.\n      operationId: AuthorizationServer_Update\n      parameters:\n        - $ref: \"#/components/parameters/AuthenticationServerIdParameter\"\n        - description: The entity state (Etag) version of the authorization server to\n            update. A value of \"*\" can be used for If-Match to unconditionally\n            apply the operation.\n          in: header\n          name: If-Match\n          required: true\n          schema:\n            type: string\n          examples:\n            ApiManagementPatchAuthorizationServers:\n              value: '\"AAAAAAAAIn4=\"'\n        - description: Version of the API to be used with the client request.\n          in: query\n          name: api-version\n          required: true\n          schema:\n            type: string\n          examples:\n            ApiManagementPatchAuthorizationServers:\n              value: 2017-03-01\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AuthorizationServerUpdateContract\"\n        description: OAuth2 Server settings Update parameters.\n        required: true\n      responses:\n        \"204\":\n          description: The authorization server settings were successfully updated.\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                description: Error Body contract.\n                properties:\n                  code:\n                    description: Service-defined error code. This code serves as a\n                      sub-status for the HTTP error code specified in the\n                      response.\n                    type: string\n                  details:\n                    description: The list of invalid fields send in request, in case of\n                      validation error.\n                    items:\n                      description: Error Field contract.\n                      properties:\n                        code:\n                          description: Property level error code.\n                          type: string\n                        message:\n                          description: Human-readable representation of property-level\n                            error.\n                          type: string\n                        target:\n                          description: Property name.\n                          type: string\n                    type: array\n                  message:\n                    description: Human-readable representation of the error.\n                    type: string\n      tags:\n        - AuthorizationServers\n    put:\n      description: Creates new authorization server or updates an existing authorization\n        server.\n      operationId: AuthorizationServer_CreateOrUpdate\n      parameters:\n        - $ref: \"#/components/parameters/AuthenticationServerIdParameter\"\n        - description: Version of the API to be used with the client request.\n          in: query\n          name: api-version\n          required: true\n          schema:\n            type: string\n          examples:\n            ApiManagementPutAuthorizationServers:\n              value: 2017-03-01\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AuthorizationServerContract\"\n        description: Create or update parameters.\n        required: true\n      responses:\n        \"200\":\n          description: Authorization server is already registered.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AuthorizationServerContract\"\n              examples:\n                ApiManagementPutAuthorizationServers:\n                  $ref: \"#/components/examples/ApiManagementPutAuthorizationServers\"\n        \"201\":\n          description: Authorization server was successfully registered.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AuthorizationServerContract\"\n              examples:\n                ApiManagementPutAuthorizationServers:\n                  $ref: \"#/components/examples/ApiManagementPutAuthorizationServers\"\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                description: Error Body contract.\n                properties:\n                  code:\n                    description: Service-defined error code. This code serves as a\n                      sub-status for the HTTP error code specified in the\n                      response.\n                    type: string\n                  details:\n                    description: The list of invalid fields send in request, in case of\n                      validation error.\n                    items:\n                      description: Error Field contract.\n                      properties:\n                        code:\n                          description: Property level error code.\n                          type: string\n                        message:\n                          description: Human-readable representation of property-level\n                            error.\n                          type: string\n                        target:\n                          description: Property name.\n                          type: string\n                    type: array\n                  message:\n                    description: Human-readable representation of the error.\n                    type: string\n      tags:\n        - AuthorizationServers\nservers:\n  - url: https://azure.local\n  - url: \"{apimBaseUrl}\"\n    variables:\n      apimBaseUrl:\n        description: The management endpoint of the API Management service, for example\n          https://myapimservice.management.azure-api.net.\n        x-ms-skip-url-encoding: true\n        default: \"\"\ncomponents:\n  examples:\n    ApiManagementListAuthorizationServers:\n      value:\n        count: 2\n        value:\n          - authorizationEndpoint: https://www.contoso.com/oauth2/auth\n            authorizationMethods:\n              - GET\n            bearerTokenSendingMethods:\n              - authorizationHeader\n            clientAuthenticationMethod:\n              - Basic\n            clientId: \"1\"\n            clientRegistrationEndpoint: https://www.contoso.com/apps\n            clientSecret: \"2\"\n            defaultScope: read write\n            description: test server\n            grantTypes:\n              - authorizationCode\n            id: /authorizationServers/5a58bb95a40f7ef2e05be74b\n            name: 2d0057b0-bf3a-4c54-9de7-0e5e39789c1b\n            resourceOwnerPassword: pwd\n            resourceOwnerUsername: un\n            supportState: true\n            tokenEndpoint: https://www.contoso.com/oauth2/token\n          - authorizationEndpoint: https://www.contoso.com/oauth2/auth\n            authorizationMethods:\n              - GET\n            bearerTokenSendingMethods:\n              - authorizationHeader\n            clientAuthenticationMethod:\n              - Basic\n            clientId: \"1\"\n            clientRegistrationEndpoint: https://www.contoso.com/apps\n            clientSecret: \"2\"\n            defaultScope: read write\n            description: test server\n            grantTypes:\n              - authorizationCode\n            id: /authorizationServers/5a58bb37a40f7ef2e05bd7f3\n            name: f3e4a805-3d6e-48e1-839d-05da510d84a5\n            resourceOwnerPassword: pwd\n            resourceOwnerUsername: un\n            supportState: true\n            tokenEndpoint: https://www.contoso.com/oauth2/token\n    ApiManagementGetAuthorizationServers:\n      value:\n        authorizationEndpoint: https://www.contoso.com/oauth2/auth\n        authorizationMethods:\n          - GET\n        bearerTokenSendingMethods:\n          - authorizationHeader\n        clientId: \"1\"\n        clientRegistrationEndpoint: https://www.contoso.com/apps\n        clientSecret: \"2\"\n        defaultScope: read write\n        description: test server\n        grantTypes:\n          - authorizationCode\n          - implicit\n          - resourceOwnerPassword\n        id: /authorizationServers/5a58bd24a40f7e104892a241\n        name: 660e8b6e-baa4-443e-ae8d-208b25ee560b\n        resourceOwnerPassword: pwd\n        resourceOwnerUsername: un\n        supportState: true\n        tokenEndpoint: https://www.contoso.com/oauth2/token\n    ApiManagementPutAuthorizationServers:\n      value:\n        authorizationEndpoint: https://www.contoso.com/oauth2/auth\n        authorizationMethods:\n          - GET\n        bearerTokenSendingMethods:\n          - authorizationHeader\n        clientAuthenticationMethod:\n          - Basic\n        clientId: \"1\"\n        clientRegistrationEndpoint: https://www.contoso.com/apps\n        clientSecret: \"2\"\n        defaultScope: read write\n        description: test server\n        grantTypes:\n          - authorizationCode\n        id: /authorizationServers/5a58bb1ca40f7ef2e05bd557\n        name: 68d89b6f-a724-4035-bc3c-a7ab17d849d8\n        resourceOwnerPassword: pwd\n        resourceOwnerUsername: un\n        supportState: true\n        tokenEndpoint: https://www.contoso.com/oauth2/token\n  parameters:\n    AuthenticationServerIdParameter:\n      description: Identifier of the authorization server.\n      in: path\n      name: authsid\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n        maxLength: 256\n        pattern: ^[^*#\u0026+:\u003c\u003e?]+$\n      examples:\n        ApiManagementDeleteAuthorizationServers:\n          value: 5a58bebda40f7e104892b414\n        ApiManagementGetAuthorizationServers:\n          value: 5a58bd24a40f7e104892a241\n        ApiManagementPatchAuthorizationServers:\n          value: 5a58be75a40f7e104892b205\n        ApiManagementPutAuthorizationServers:\n          value: 5a58bb1ca40f7ef2e05bd557\n  securitySchemes:\n    apim_key:\n      in: header\n      name: Authorization\n      type: apiKey\n  schemas:\n    AuthorizationServerCollection:\n      description: Paged OAuth2 Authorization Servers list representation.\n      properties:\n        count:\n          description: Total record count number across all pages.\n          format: int64\n          type: integer\n        nextLink:\n          description: Next page link if any.\n          type: string\n        value:\n          description: Page values.\n          items:\n            $ref: \"#/components/schemas/AuthorizationServerContract\"\n          type: array\n    AuthorizationServerContract:\n      allOf:\n        - $ref: \"#/components/schemas/AuthorizationServerContractProperties\"\n      description: External OAuth authorization server settings.\n      properties:\n        id:\n          description: Identifier of the Authorization Server entity.\n          type: string\n    AuthorizationServerContractBaseProperties:\n      description: External OAuth authorization server Update settings contract.\n      properties:\n        authorizationMethods:\n          description: HTTP verbs supported by the authorization endpoint. GET must be\n            always present. POST is optional.\n          items:\n            enum:\n              - HEAD\n              - OPTIONS\n              - TRACE\n              - GET\n              - POST\n              - PUT\n              - PATCH\n              - DELETE\n            type: string\n            x-ms-enum:\n              modelAsString: false\n              name: AuthorizationMethod\n          type: array\n        bearerTokenSendingMethods:\n          description: \"Specifies the mechanism by which access token is passed to the API.\n            \"\n          externalDocs:\n            url: http://tools.ietf.org/html/rfc6749#section-4\n          items:\n            enum:\n              - authorizationHeader\n              - query\n            type: string\n            x-ms-enum:\n              modelAsString: true\n              name: BearerTokenSendingMethod\n          type: array\n        clientAuthenticationMethod:\n          description: Method of authentication supported by the token endpoint of this\n            authorization server. Possible values are Basic and/or Body. When\n            Body is specified, client credentials and other parameters are\n            passed within the request body in the\n            application/x-www-form-urlencoded format.\n          items:\n            enum:\n              - Basic\n              - Body\n            type: string\n            x-ms-enum:\n              modelAsString: true\n              name: ClientAuthenticationMethod\n              values:\n                - description: Basic Client Authentication method.\n                  value: Basic\n                - description: Body based Authentication method.\n                  value: Body\n          type: array\n        clientSecret:\n          description: Client or app secret registered with this authorization server.\n          type: string\n        defaultScope:\n          description: Access token scope that is going to be requested by default. Can be\n            overridden at the API level. Should be provided in the form of a\n            string containing space-delimited values.\n          externalDocs:\n            url: http://tools.ietf.org/html/rfc6749#section-3.3\n          type: string\n        description:\n          description: Description of the authorization server. Can contain HTML formatting\n            tags.\n          type: string\n        resourceOwnerPassword:\n          description: Can be optionally specified when resource owner password grant type\n            is supported by this authorization server. Default resource owner\n            password.\n          type: string\n        resourceOwnerUsername:\n          description: Can be optionally specified when resource owner password grant type\n            is supported by this authorization server. Default resource owner\n            username.\n          type: string\n        supportState:\n          description: If true, authorization server will include state parameter from the\n            authorization request to its response. Client may use state\n            parameter to raise protocol security.\n          externalDocs:\n            url: http://tools.ietf.org/html/rfc6749#section-3.1\n          type: boolean\n        tokenBodyParameters:\n          description: 'Additional parameters required by the token endpoint of this\n            authorization server represented as an array of JSON objects with\n            name and value string properties, i.e. {\"name\" : \"name value\",\n            \"value\": \"a value\"}.'\n          items:\n            $ref: \"#/components/schemas/TokenBodyParameterContract\"\n          type: array\n        tokenEndpoint:\n          description: OAuth token endpoint. Contains absolute URI to entity being\n            referenced.\n          externalDocs:\n            url: http://tools.ietf.org/html/rfc6749#section-3.1\n          type: string\n    AuthorizationServerContractProperties:\n      allOf:\n        - $ref: \"#/components/schemas/AuthorizationServerContractBaseProperties\"\n      description: External OAuth authorization server settings Properties.\n      properties:\n        authorizationEndpoint:\n          description: OAuth authorization endpoint. See\n            http://tools.ietf.org/html/rfc6749#section-3.2.\n          type: string\n        clientId:\n          description: Client or app id registered with this authorization server.\n          type: string\n        clientRegistrationEndpoint:\n          description: Optional reference to a page where client or app registration for\n            this authorization server is performed. Contains absolute URL to\n            entity being referenced.\n          type: string\n        grantTypes:\n          description: Form of an authorization grant, which the client uses to request the\n            access token.\n          externalDocs:\n            url: http://tools.ietf.org/html/rfc6749#section-4\n          items:\n            enum:\n              - authorizationCode\n              - implicit\n              - resourceOwnerPassword\n              - clientCredentials\n            type: string\n            x-ms-enum:\n              modelAsString: true\n              name: GrantType\n              values:\n                - description: Authorization Code Grant flow as described\n                    https://tools.ietf.org/html/rfc6749#section-4.1.\n                  value: authorizationCode\n                - description: Implicit Code Grant flow as described\n                    https://tools.ietf.org/html/rfc6749#section-4.2.\n                  value: implicit\n                - description: Resource Owner Password Grant flow as described\n                    https://tools.ietf.org/html/rfc6749#section-4.3.\n                  value: resourceOwnerPassword\n                - description: Client Credentials Grant flow as described\n                    https://tools.ietf.org/html/rfc6749#section-4.4.\n                  value: clientCredentials\n          type: array\n        name:\n          description: User-friendly authorization server name.\n          maxLength: 50\n          minLength: 1\n          type: string\n      required:\n        - name\n        - clientRegistrationEndpoint\n        - authorizationEndpoint\n        - clientId\n        - grantTypes\n    AuthorizationServerUpdateContract:\n      allOf:\n        - $ref: \"#/components/schemas/AuthorizationServerContractBaseProperties\"\n      description: External OAuth authorization server Update settings contract.\n      properties:\n        authorizationEndpoint:\n          description: OAuth authorization endpoint. See\n            http://tools.ietf.org/html/rfc6749#section-3.2.\n          type: string\n        clientId:\n          description: Client or app id registered with this authorization server.\n          type: string\n        clientRegistrationEndpoint:\n          description: Optional reference to a page where client or app registration for\n            this authorization server is performed. Contains absolute URL to\n            entity being referenced.\n          type: string\n        grantTypes:\n          description: Form of an authorization grant, which the client uses to request the\n            access token.\n          externalDocs:\n            url: http://tools.ietf.org/html/rfc6749#section-4\n          items:\n            enum:\n              - authorizationCode\n              - implicit\n              - resourceOwnerPassword\n              - clientCredentials\n            type: string\n            x-ms-enum:\n              modelAsString: true\n              name: GrantType\n              values:\n                - description: Authorization Code Grant flow as described\n                    https://tools.ietf.org/html/rfc6749#section-4.1.\n                  value: authorizationCode\n                - description: Implicit Code Grant flow as described\n                    https://tools.ietf.org/html/rfc6749#section-4.2.\n                  value: implicit\n                - description: Resource Owner Password Grant flow as described\n                    https://tools.ietf.org/html/rfc6749#section-4.3.\n                  value: resourceOwnerPassword\n                - description: Client Credentials Grant flow as described\n                    https://tools.ietf.org/html/rfc6749#section-4.4.\n                  value: clientCredentials\n          type: array\n        name:\n          description: User-friendly authorization server name.\n          maxLength: 50\n          minLength: 1\n          type: string\n    TokenBodyParameterContract:\n      description: OAuth acquire token request body parameter (www-url-form-encoded).\n      properties:\n        name:\n          description: body parameter name.\n          type: string\n        value:\n          description: body parameter value.\n          type: string\n      required:\n        - name\n        - value\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/azure.com-apimanagement-apimauthorizationservers-2017-03-01-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/azure.com-apimanagement-apimauthorizationservers-2017-03-01-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}