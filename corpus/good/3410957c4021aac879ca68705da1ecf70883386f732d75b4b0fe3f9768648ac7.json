{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/eclipse/microprofile-open-api"
		},
		"file": {
			"name": "simpleapi.yaml",
			"size": 0,
			"path": "tck/src/main/resources/simpleapi.yaml",
			"byteSize": 4301,
			"content": "openapi: 3.0.2\nservers:\n  - description: MySimpleAPI\n    url: https:///MySimpleAPI/1.0.0\ninfo:\n  description: This is a simple API\n  version: \"1.0.0\"\n  title: Simple Inventory API\n  contact:\n    email: you@your-company.com\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\ntags:\n  - name: admins\n    description: Secured Admin-only calls\n  - name: developers\n    description: Operations available to regular developers\npaths:\n  /inventory:\n    get:\n      tags:\n        - developers\n      summary: searches inventory\n      operationId: searchInventory\n      description: |\n        By passing in the appropriate options, you can search for\n        available inventory in the system\n      parameters:\n        - in: query\n          name: searchString\n          description: pass an optional search string for looking up inventory\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: skip\n          description: number of records to skip for pagination\n          schema:\n            type: integer\n            format: int32\n            minimum: 0\n        - in: query\n          name: limit\n          description: maximum number of records to return\n          schema:\n            type: integer\n            format: int32\n            minimum: 0\n            maximum: 50\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/InventoryItem'\n        '400':\n          description: bad input parameter\n    post:\n      tags:\n        - admins\n      summary: adds an inventory item\n      operationId: addInventory\n      description: Adds an item to the system\n      responses:\n        '201':\n          description: item created\n        '400':\n          description: 'invalid input, object invalid'\n        '409':\n          description: an existing item already exists\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InventoryItem'\n        description: Inventory item to add\n    put:\n      summary: put operation\n      operationId: putInventory\n      description: tests the put operation\n      responses:\n        '200':\n          description: put operation tested\n    delete:\n      summary: delete operation\n      operationId: deleteInventory\n      description: tests the delete operation\n      responses:\n        '200':\n          description: delete operation tested\n    options:\n      summary: options operation\n      operationId: optionsInventory\n      description: tests the options operation\n      responses:\n        '200':\n          description: options operation tested\n    head:\n      summary: head operation\n      operationId: headInventory\n      description: tests the head operation\n      responses:\n        '200':\n          description: head operation tested\n    patch:\n      summary: patch operation\n      operationId: patchInventory\n      description: tests the patch operation\n      responses:\n        '200':\n          description: patch operation tested\n    trace:\n      summary: trace operation\n      operationId: traceInventory\n      description: tests the trace operation\n      responses:\n        '200':\n          description: trace operation tested\ncomponents:\n  schemas:\n    InventoryItem:\n      type: object\n      required:\n        - id\n        - name\n        - manufacturer\n        - releaseDate\n      properties:\n        id:\n          type: string\n          format: uuid\n          example: d290f1ee-6c54-4b01-90e6-d701748f0851\n        name:\n          type: string\n          example: Widget Adapter\n        releaseDate:\n          type: string\n          format: int32\n          example: '2016-08-29T09:12:33.001Z'\n        manufacturer:\n          $ref: '#/components/schemas/Manufacturer'\n    Manufacturer:\n      required:\n        - name\n      properties:\n        name:\n          type: string\n          example: ACME Corporation\n        homePage:\n          type: string\n          format: url\n          example: 'https://www.acme-corp.com'\n        phone:\n          type: string\n          example: 408-867-5309\n      type: object",
			"canonicalURL": "/github.com/eclipse/microprofile-open-api@181c08eb4535d2e102fec69cf9fbbe3267c2e7bd/-/blob/tck/src/main/resources/simpleapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/eclipse/microprofile-open-api/blob/181c08eb4535d2e102fec69cf9fbbe3267c2e7bd/tck/src/main/resources/simpleapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}