{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/grokify/go-ringcentral-client"
		},
		"file": {
			"name": "openapi-spec_contents.json",
			"size": 0,
			"path": "codegen/specs-engagedigital_v3.0.0/openapi-spec_contents.json",
			"byteSize": 15525,
			"content": "{\n  \"openapi\":\"3.0.0\",\n  \"info\":{\n    \"description\":\"\",\n    \"version\":\"1.0\",\n    \"title\":\"Engage Digital API\",\n    \"termsOfService\":\"https://developer.ringcentral.com\"\n  },\n  \"tags\":[\n    {\n      \"name\":\"Contents\"\n    }\n  ],\n  \"paths\":{\n    \"/contents\":{\n      \"get\":{\n        \"tags\":[\n          \"Contents\"\n        ],\n        \"summary\":\"Contents\",\n        \"operationId\":\"getAllContents\",\n        \"description\":\"This method renders contents ordered by creation date (descending). Only contents in sources where token’s user has “read” permission are returned.\\n\\nAuthorization​: no.\",\n        \"parameters\":[\n          {\n            \"name\":\"q\",\n            \"in\":\"query\",\n            \"description\":\"To filter contents on given query. Query works exactly like threads query but only have those keywords: intervention,identity, identity_group, source, status_in, thread or text. Order can be created_at.desc (default) or created_at.asc. e.g. q=intervention:\\\"7f946431b6eebffafae642cc\\\"%20source:\\\"d19c81948c137d86dac77216\\\" Please refer to ​Search \u0026 filtering parameters​ for more details.\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"offset\",\n            \"in\":\"query\",\n            \"description\":\"The record index to start. Default value is 0.\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"integer\",\n              \"format\":\"int32\"\n            }\n          },\n          {\n            \"name\":\"limit\",\n            \"in\":\"query\",\n            \"description\":\"The max number of records to return. Default value is 30, max value is 150.\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"integer\",\n              \"format\":\"int32\"\n            }\n          }\n        ],\n        \"responses\":{\n          \"200\":{\n            \"description\":\"Success\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/GetAllContentsResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\":{\n        \"tags\":[\n          \"Contents\"\n        ],\n        \"summary\":\"Creating a content\",\n        \"operationId\":\"createContent\",\n        \"description\":\"This method allows you to create an new content. It can be a reply to another content or a content that initiate discussion. It use token’s user as content user if he is authorized. Content will be created in Dimelo Digital and pushed asynchronously to the source.\\n\\nReplying to a customer content is usually possible (unless the source/conversation is read only).\\n\\nComposing a content on the contrary depend on the source itself:\\n* The source may not support it (and be purely reactive like Instagram, Messenger ...)\\n* Some sources (usually public account) like Twitter or Facebook page allows to publish content without targeting specific individuals.\\n* Some sources (usually non public media) require specific targeting (phone number for SMS, email address for email, customer_id ...) to be able to create a content. This is source specific and detailed under the generic parameters.\\n\\nAuthorization​: only users that can reply or initiate discussion (= compose) on given source. it renders also an error if in_reply_to isn’t synchronized or if in_reply_to content is not under an ​open intervention.\",\n        \"parameters\":[\n          {\n            \"name\":\"author_id\",\n            \"description\":\"The identity id of content. This parameter is not mandatory, by default it use the token’s user first identity on source.\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"body\",\n            \"description\":\"The content’s body. This parameter is mandatory.\",\n            \"in\":\"query\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"in_reply_to_id\",\n            \"description\":\"The content’s id you want to reply to. If omitted, a new discussion will be created. If source does not support to initiate discussion this parameter is mandatory.\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"private\",\n            \"description\":\"Created contents are public by default, set this parameter to \\\"1\\\" in order to create a private reply. It is NOT supported on every source.\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"source_id\",\n            \"description\":\"The source to create content to. If you specify `in_reply_to_id` parameter, source will be determined from it. Otherwise, this parameter is mandatory.\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"attachment_ids[]\",\n            \"description\":\"An array containing the attachments’ ids that need to be attached to this content.\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"explode\":true,\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          },\n          {\n            \"name\":\"title\",\n            \"description\":\"For an email source. The subject of the email. This parameter is mandatory when initiating a discussion.\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"to[]\",\n            \"description\":\"For an email or SMS source. For an email, an array containing the email addresses used in the “To” section of the email. This parameter is mandatory when initiating a discussion. For a SMS, the number the SMS will be sent to. It must start with 00 or +, example: +33634231224 or 0033634231224. This parameter is mandatory when initiating a discussion.\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"explode\":true,\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          },\n          {\n            \"name\":\"cc[]\",\n            \"description\":\"For an email source. An array containing the email addresses used in the “Cc” section of the email.\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"explode\":true,\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          },\n          {\n            \"name\":\"bcc[]\",\n            \"description\":\"For an email source. An array containing the email addresses used in the “Bcc” section of the email.\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"explode\":true,\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          }\n        ],\n        \"responses\":{\n          \"200\":{\n            \"description\":\"Success\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/Content\"\n                }\n              }\n            }\n          },\n          \"422\":{\n            \"description\":\"Unprocessable Entity\"\n          }\n        }\n      }\n    },\n    \"/contents/{contentId}\":{\n      \"get\":{\n        \"tags\":[\n          \"Contents\"\n        ],\n        \"summary\":\"Getting a content from its id\",\n        \"operationId\":\"getContent\",\n        \"description\":\"This method renders a content from given id. If token’s user does not have “read” on content’s source a 404 HTTP response will be returned.\\n\\nAuthorization​: no.\",\n        \"parameters\":[\n          {\n            \"name\":\"contentId\",\n            \"in\":\"path\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          }\n        ],\n        \"responses\":{\n          \"200\":{\n            \"description\":\"Success\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/Content\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/contents/{contentId}/update_categories\":{\n      \"put\":{\n        \"tags\":[\n          \"Contents\"\n        ],\n        \"summary\":\"Categorizing a content\",\n        \"operationId\":\"categorizeContent\",\n        \"description\":\"This method updates the categories of a content. If token’s user does not have “read” on this content’s source a 404 HTTP response will be returned.\\n\\nAuthorization​: no.\",\n        \"parameters\":[\n          {\n            \"name\":\"contentId\",\n            \"in\":\"path\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"category_ids[]\",\n            \"description\":\"An array containing the new categories to set on the content.\",\n            \"in\":\"query\",\n            \"required\":true,\n            \"explode\":true,\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          }\n        ],\n        \"responses\":{\n          \"200\":{\n            \"description\":\"Success\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/Content\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/contents/{contentId}/ignore\":{\n      \"put\":{\n        \"tags\":[\n          \"Contents\"\n        ],\n        \"summary\":\"Ignoring a content\",\n        \"operationId\":\"ignoreContent\",\n        \"description\":\"Ignores a content. If token’s user does not have “read” on content’s source a 404 HTTP response will be returned.\\n\\nAuthorization​: no.\",\n        \"parameters\":[\n          {\n            \"name\":\"contentId\",\n            \"in\":\"path\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          }\n        ],\n        \"responses\":{\n          \"200\":{\n            \"description\":\"Success\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/Content\"\n                }\n              }\n            }\n          },\n          \"404\":{\n            \"description\":\"Not Found\"\n          }\n        }\n      }\n    }\n  },\n  \"servers\":[\n    {\n      \"url\":\"https://DOMAIN.api.engagement.dimelo.com/1.0\"\n    }\n  ],\n  \"components\":{\n    \"schemas\":{\n      \"GetAllContentsResponse\":{\n        \"properties\":{\n          \"count\":{\n            \"type\":\"integer\",\n            \"format\":\"int32\"\n          },\n          \"limit\":{\n            \"type\":\"integer\",\n            \"format\":\"int32\"\n          },\n          \"offset\":{\n            \"type\":\"integer\",\n            \"format\":\"int32\"\n          },\n          \"records\":{\n            \"type\":\"array\",\n            \"items\":{\n              \"$ref\":\"#/components/schemas/Content\"\n            }\n          }\n        }\n      },\n      \"Content\":{\n        \"required\":[\n          \"id\"\n        ],\n        \"properties\":{\n          \"id\":{\n            \"type\":\"string\"\n          },\n          \"source_id\":{\n            \"type\":\"string\"\n          },\n          \"source_url\":{\n            \"type\":\"string\"\n          },\n          \"source_type\":{\n            \"type\":\"string\"\n          },\n          \"thread_id\":{\n            \"type\":\"string\"\n          },\n          \"in_reply_to_id\":{\n            \"type\":\"string\"\n          },\n          \"in_reply_to_author_id\":{\n            \"type\":\"string\"\n          },\n          \"author_id\":{\n            \"type\":\"string\"\n          },\n          \"creator_id\":{\n            \"type\":\"string\"\n          },\n          \"foreign_id\":{\n            \"type\":\"string\"\n          },\n          \"type\":{\n            \"type\":\"string\"\n          },\n          \"created_from\":{\n            \"type\":\"string\"\n          },\n          \"private_message\":{\n            \"type\":\"boolean\"\n          },\n          \"status\":{\n            \"type\":\"string\"\n          },\n          \"intervention_id\":{\n            \"type\":\"string\"\n          },\n          \"language\":{\n            \"type\":\"string\"\n          },\n          \"body\":{\n            \"type\":\"string\"\n          },\n          \"body_formatted\":{\n            \"$ref\":\"#/components/schemas/ContentBodyFormatted\"\n          },\n          \"body_input_format\":{\n            \"type\":\"string\",\n            \"description\":\"values can be: text or html.\",\n            \"enum\":[\n              \"text\",\n              \"html\"\n            ]\n          },\n          \"title\":{\n            \"type\":\"string\"\n          },\n          \"attachments_count\":{\n            \"type\":\"integer\"\n          },\n          \"attachments\":{\n            \"type\":\"array\",\n            \"items\":{\n              \"$ref\":\"#/components/schemas/ContentAttachment\"\n            }\n          },\n          \"synchronization_status\":{\n            \"type\":\"string\"\n          },\n          \"category_ids\":{\n            \"description\":\"are content categories if none, they are default to intervention categories or thread categories\",\n            \"type\":\"array\",\n            \"items\":{\n              \"type\":\"string\"\n            }\n          },\n          \"created_at\":{\n            \"type\":\"string\",\n            \"format\":\"date-time\"\n          },\n          \"updated_at\":{\n            \"type\":\"string\",\n            \"format\":\"date-time\"\n          },\n          \"approval_required\":{\n            \"type\":\"boolean\"\n          },\n          \"remotely_deleted\":{\n            \"type\":\"boolean\"\n          },\n          \"published\":{\n            \"type\":\"boolean\"\n          },\n          \"context_data\":{\n            \"type\":\"object\",\n            \"description\":\"is present only if the content has context_data associated. The context_data hash keys are the custom fields keys.\"\n          }\n        }\n      },\n      \"ContentAttachment\":{\n        \"properties\":{\n          \"id\":{\n            \"type\":\"string\"\n          },\n          \"created_at\":{\n            \"type\":\"string\",\n            \"format\":\"date-time\"\n          },\n          \"updated_at\":{\n            \"type\":\"string\",\n            \"format\":\"date-time\"\n          },\n          \"content_type\":{\n            \"type\":\"string\"\n          },\n          \"size\":{\n            \"type\":\"integer\"\n          },\n          \"filename\":{\n            \"type\":\"string\"\n          },\n          \"foreign_id\":{\n            \"type\":\"string\"\n          },\n          \"embed\":{\n            \"type\":\"string\"\n          },\n          \"public?\":{\n            \"type\":\"string\"\n          },\n          \"url\":{\n            \"type\":\"string\",\n            \"description\":\"You can download the attachments by using an API access token with the following URL: https://[your-domain].engagement.dimelo.com/attachments/[attachment_id]?access_token=[your_​ access_token]\"\n          }\n        }\n      },\n      \"ContentBodyFormatted\":{\n        \"description\":\"always contains text a​nd​ html versions.\",\n        \"properties\":{\n          \"text\":{\n            \"type\":\"string\"\n          },\n          \"html\":{\n            \"type\":\"string\"\n          }\n        }\n      }\n    }\n  }\n}",
			"canonicalURL": "/github.com/grokify/go-ringcentral-client@f1ac48a07735f98ea074106783288f8af49282f3/-/blob/codegen/specs-engagedigital_v3.0.0/openapi-spec_contents.json",
			"externalURLs": [
				{
					"url": "https://github.com/grokify/go-ringcentral-client/blob/f1ac48a07735f98ea074106783288f8af49282f3/codegen/specs-engagedigital_v3.0.0/openapi-spec_contents.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}