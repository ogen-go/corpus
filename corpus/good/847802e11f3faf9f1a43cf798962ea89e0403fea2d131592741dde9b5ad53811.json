{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "sportsdata.io-soccer-v3-stats-1.0-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/sportsdata.io-soccer-v3-stats-1.0-swagger.yaml",
			"byteSize": 58393,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    x-twitter: nfldata\n  title: Soccer v3 Stats\n  version: \"1.0\"\n  x-apisguru-categories:\n    - entertainment\n  x-logo:\n    url: https://twitter.com/nfldata/profile_image?size=original\n  x-origin:\n    - format: swagger\n      url: https://fantasydata.com/downloads/swagger/soccer-v3-stats.json\n      version: \"2.0\"\n  x-providerName: sportsdata.io\n  x-serviceName: soccer-v3-stats\nsecurity:\n  - apiKeyHeader: []\n  - apiKeyQuery: []\ntags: []\npaths:\n  \"/{format}/ActiveMemberships\":\n    get:\n      operationId: MembershipsActive\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Membership\"\n                type: array\n      summary: Memberships (Active)\n  \"/{format}/Areas\":\n    get:\n      operationId: AreasCountries\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Area\"\n                type: array\n      summary: Areas (Countries)\n  \"/{format}/BoxScore/{gameid}\":\n    get:\n      operationId: BoxScore\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n        - description: The GameID of a Soccer game.  GameIDs can be found in the Games\n            API.  Valid entries are \u003ccode\u003e702\u003c/code\u003e, \u003ccode\u003e1274\u003c/code\u003e, etc.\n          in: path\n          name: gameid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BoxScore\"\n      summary: Box Score\n  \"/{format}/BoxScores/{date}\":\n    get:\n      operationId: BoxScoresByDate\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n        - description: |-\n            The date of the game(s).\n            \u003cbr\u003eExamples: \u003ccode\u003e2017-02-27\u003c/code\u003e, \u003ccode\u003e2017-09-01\u003c/code\u003e.\n          in: path\n          name: date\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/BoxScore\"\n                type: array\n      summary: Box Scores by Date\n  \"/{format}/BoxScoresByCompetition/{competition}/{date}\":\n    get:\n      operationId: BoxScoresByDateByCompetition\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n        - description: \"An indication of a soccer competition/league. This value can be the\n            CompetitionId or the Competition Key. Possible values include:\n            \u003ccode\u003eEPL\u003c/code\u003e, \u003ccode\u003e1\u003c/code\u003e, \u003ccode\u003eMLS\u003c/code\u003e, \u003ccode\u003e8\u003c/code\u003e,\n            etc.\"\n          in: path\n          name: competition\n          required: true\n          schema:\n            type: string\n        - description: |-\n            The date of the game(s).\n            \u003cbr\u003eExamples: \u003ccode\u003e2017-02-27\u003c/code\u003e, \u003ccode\u003e2017-09-01\u003c/code\u003e.\n          in: path\n          name: date\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/BoxScore\"\n                type: array\n      summary: Box Scores by Date by Competition\n  \"/{format}/BoxScoresDelta/{date}/{minutes}\":\n    get:\n      operationId: BoxScoresByDateDelta\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n        - description: |-\n            The date of the game(s).\n            \u003cbr\u003eExamples: \u003ccode\u003e2017-02-27\u003c/code\u003e, \u003ccode\u003e2017-09-01\u003c/code\u003e.\n          in: path\n          name: date\n          required: true\n          schema:\n            type: string\n        - description: \u003e-\n            Only returns player statistics that have changed in the last X\n            minutes.  You specify how many minutes in time to go back. Valid\n            entries are:\n\n            \u003ccode\u003e1\u003c/code\u003e, \u003ccode\u003e2\u003c/code\u003e ... \u003ccode\u003eall\u003c/code\u003e.\n          in: path\n          name: minutes\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/BoxScore\"\n                type: array\n      summary: Box Scores by Date Delta\n  \"/{format}/BoxScoresDeltaByCompetition/{competition}/{date}/{minutes}\":\n    get:\n      operationId: BoxScoresDeltaByDateByCompetition\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n        - description: \"An indication of a soccer competition/league. This value can be the\n            CompetitionId or the Competition Key. Possible values include:\n            \u003ccode\u003eEPL\u003c/code\u003e, \u003ccode\u003e1\u003c/code\u003e, \u003ccode\u003eMLS\u003c/code\u003e, \u003ccode\u003e8\u003c/code\u003e,\n            etc.\"\n          in: path\n          name: competition\n          required: true\n          schema:\n            type: string\n        - description: |-\n            The date of the game(s).\n            \u003cbr\u003eExamples: \u003ccode\u003e2017-02-27\u003c/code\u003e, \u003ccode\u003e2017-09-01\u003c/code\u003e.\n          in: path\n          name: date\n          required: true\n          schema:\n            type: string\n        - description: \u003e-\n            Only returns player statistics that have changed in the last X\n            minutes.  You specify how many minutes in time to go back. Valid\n            entries are:\n\n            \u003ccode\u003e1\u003c/code\u003e, \u003ccode\u003e2\u003c/code\u003e ... \u003ccode\u003eall\u003c/code\u003e.\n          in: path\n          name: minutes\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/BoxScore\"\n                type: array\n      summary: Box Scores Delta by Date by Competition\n  \"/{format}/CompetitionDetails/{competition}\":\n    get:\n      operationId: CompetitionFixturesLeagueDetails\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n        - description: \"An indication of a soccer competition/league. This value can be the\n            CompetitionId or the Competition Key. Possible values include:\n            \u003ccode\u003eEPL\u003c/code\u003e, \u003ccode\u003e1\u003c/code\u003e, \u003ccode\u003eMLS\u003c/code\u003e, \u003ccode\u003e8\u003c/code\u003e,\n            etc.\"\n          in: path\n          name: competition\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CompetitionDetail\"\n      summary: Competition Fixtures (League Details)\n  \"/{format}/CompetitionHierarchy\":\n    get:\n      operationId: CompetitionHierarchyLeagueHierarchy\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Area\"\n                type: array\n      summary: Competition Hierarchy (League Hierarchy)\n  \"/{format}/Competitions\":\n    get:\n      operationId: CompetitionsLeagues\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Competition\"\n                type: array\n      summary: Competitions (Leagues)\n  \"/{format}/GamesByDate/{date}\":\n    get:\n      operationId: GamesByDate\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n        - description: |-\n            The date of the game(s).\n            \u003cbr\u003eExamples: \u003ccode\u003e2017-02-27\u003c/code\u003e, \u003ccode\u003e2017-09-01\u003c/code\u003e.\n          in: path\n          name: date\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Game\"\n                type: array\n      summary: Games by Date\n  \"/{format}/HistoricalMemberships\":\n    get:\n      operationId: MembershipsHistorical\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Membership\"\n                type: array\n      summary: Memberships (Historical)\n  \"/{format}/HistoricalMembershipsByCompetition/{competition}\":\n    get:\n      operationId: MembershipsByCompetitionHistorical\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n        - description: \"An indication of a soccer competition/league. This value can be the\n            CompetitionId or the Competition Key. Possible values include:\n            \u003ccode\u003eEPL\u003c/code\u003e, \u003ccode\u003e1\u003c/code\u003e, \u003ccode\u003eMLS\u003c/code\u003e, \u003ccode\u003e8\u003c/code\u003e,\n            etc.\"\n          in: path\n          name: competition\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Membership\"\n                type: array\n      summary: Memberships by Competition (Historical)\n  \"/{format}/HistoricalMembershipsByTeam/{teamid}\":\n    get:\n      operationId: MembershipsByTeamHistorical\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n        - description: |-\n            Unique FantasyData Team ID. \n            Example:\u003ccode\u003e516\u003c/code\u003e.\n          in: path\n          name: teamid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Membership\"\n                type: array\n      summary: Memberships by Team (Historical)\n  \"/{format}/MembershipsByCompetition/{competition}\":\n    get:\n      operationId: MembershipsByCompetitionActive\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n        - description: \"An indication of a soccer competition/league. This value can be the\n            CompetitionId or the Competition Key. Possible values include:\n            \u003ccode\u003eEPL\u003c/code\u003e, \u003ccode\u003e1\u003c/code\u003e, \u003ccode\u003eMLS\u003c/code\u003e, \u003ccode\u003e8\u003c/code\u003e,\n            etc.\"\n          in: path\n          name: competition\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Membership\"\n                type: array\n      summary: Memberships by Competition (Active)\n  \"/{format}/MembershipsByTeam/{teamid}\":\n    get:\n      operationId: MembershipsByTeamActive\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n        - description: |-\n            Unique FantasyData Team ID. \n            Example:\u003ccode\u003e516\u003c/code\u003e.\n          in: path\n          name: teamid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Membership\"\n                type: array\n      summary: Memberships by Team (Active)\n  \"/{format}/Player/{playerid}\":\n    get:\n      operationId: Player\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n        - description: |-\n            Unique FantasyData Player ID.\n            Example:\u003ccode\u003e90026231\u003c/code\u003e.\n          in: path\n          name: playerid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Player\"\n      summary: Player\n  \"/{format}/PlayerGameStatsByDate/{date}\":\n    get:\n      operationId: PlayerGameStatsByDate\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n        - description: |-\n            The date of the game(s).\n            \u003cbr\u003eExamples: \u003ccode\u003e2017-02-27\u003c/code\u003e, \u003ccode\u003e2017-09-01\u003c/code\u003e.\n          in: path\n          name: date\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PlayerGame\"\n                type: array\n      summary: Player Game Stats by Date\n  \"/{format}/PlayerGameStatsByPlayer/{date}/{playerid}\":\n    get:\n      operationId: PlayerGameStatsByPlayer\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n        - description: |-\n            The date of the game(s).\n            \u003cbr\u003eExamples: \u003ccode\u003e2017-02-27\u003c/code\u003e, \u003ccode\u003e2017-09-01\u003c/code\u003e.\n          in: path\n          name: date\n          required: true\n          schema:\n            type: string\n        - description: |-\n            Unique FantasyData Player ID.\n            Example:\u003ccode\u003e90026231\u003c/code\u003e.\n          in: path\n          name: playerid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PlayerGame\"\n                type: array\n      summary: Player Game Stats by Player\n  \"/{format}/PlayerSeasonStats/{roundid}\":\n    get:\n      operationId: PlayerSeasonStats\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n        - description: \u003e-\n            Unique FantasyData Round ID. RoundIDs can be found in the\n            Competition Hierarchy (League Hierarchy). \n\n            Examples: \u003ccode\u003e1\u003c/code\u003e, \u003ccode\u003e2\u003c/code\u003e, \u003ccode\u003e3\u003c/code\u003e, etc\n          in: path\n          name: roundid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PlayerSeason\"\n                type: array\n      summary: Player Season Stats\n  \"/{format}/PlayerSeasonStatsByPlayer/{roundid}/{playerid}\":\n    get:\n      operationId: PlayerSeasonStatsByPlayer\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n        - description: \u003e-\n            Unique FantasyData Round ID. RoundIDs can be found in the\n            Competition Hierarchy (League Hierarchy). \n\n            Examples: \u003ccode\u003e1\u003c/code\u003e, \u003ccode\u003e2\u003c/code\u003e, \u003ccode\u003e3\u003c/code\u003e, etc\n          in: path\n          name: roundid\n          required: true\n          schema:\n            type: string\n        - description: |-\n            Unique FantasyData Player ID.\n            Example:\u003ccode\u003e90026231\u003c/code\u003e.\n          in: path\n          name: playerid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PlayerSeason\"\n                type: array\n      summary: Player Season Stats by Player\n  \"/{format}/PlayerSeasonStatsByTeam/{roundid}/{team}\":\n    get:\n      operationId: PlayerSeasonStatsByTeam\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n        - description: \u003e-\n            Unique FantasyData Round ID. RoundIDs can be found in the\n            Competition Hierarchy (League Hierarchy). \n\n            Examples: \u003ccode\u003e1\u003c/code\u003e, \u003ccode\u003e2\u003c/code\u003e, \u003ccode\u003e3\u003c/code\u003e, etc\n          in: path\n          name: roundid\n          required: true\n          schema:\n            type: string\n        - description: |-\n            Unique FantasyData Team ID. \n            Example:\u003ccode\u003e516\u003c/code\u003e.\n          in: path\n          name: team\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PlayerSeason\"\n                type: array\n      summary: Player Season Stats by Team\n  \"/{format}/Players\":\n    get:\n      operationId: Players\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Player\"\n                type: array\n      summary: Players\n  \"/{format}/PlayersByTeam/{teamid}\":\n    get:\n      operationId: PlayersByTeam\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n        - description: |-\n            Unique FantasyData Team ID. \n            Example:\u003ccode\u003e516\u003c/code\u003e.\n          in: path\n          name: teamid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Player\"\n                type: array\n      summary: Players by Team\n  \"/{format}/RecentlyChangedMemberships/{days}\":\n    get:\n      operationId: MembershipsRecentlyChanged\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n        - description: \"The number of days since memberships were updated. For example, if\n            you pass \u003ccode\u003e3\u003c/code\u003e, you'll receive all memberships that have\n            been updated in the past 3 days. Valid entries are: \u003ccode\u003e1\u003c/code\u003e,\n            \u003ccode\u003e2\u003c/code\u003e ... \u003ccode\u003e30\u003c/code\u003e\"\n          in: path\n          name: days\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Membership\"\n                type: array\n      summary: Memberships (Recently Changed)\n  \"/{format}/Schedule/{roundid}\":\n    get:\n      operationId: Schedule\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n        - description: \u003e-\n            Unique FantasyData Round ID. RoundIDs can be found in the\n            Competition Hierarchy (League Hierarchy). \n\n            Examples: \u003ccode\u003e1\u003c/code\u003e, \u003ccode\u003e2\u003c/code\u003e, \u003ccode\u003e3\u003c/code\u003e, etc\n          in: path\n          name: roundid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Game\"\n                type: array\n      summary: Schedule\n  \"/{format}/SeasonTeams/{seasonid}\":\n    get:\n      operationId: SeasonTeams\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n        - description: \u003e-\n            Unique FantasyData Season ID. SeasonIDs can be found in the\n            Competition Hierarchy (League Hierarchy). \n\n            Examples: \u003ccode\u003e1\u003c/code\u003e, \u003ccode\u003e2\u003c/code\u003e, \u003ccode\u003e3\u003c/code\u003e, etc\n          in: path\n          name: seasonid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SeasonTeam\"\n                type: array\n      summary: Season Teams\n  \"/{format}/Standings/{roundid}\":\n    get:\n      operationId: Standings\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n        - description: \u003e-\n            Unique FantasyData Round ID. RoundIDs can be found in the\n            Competition Hierarchy (League Hierarchy). \n\n            Examples: \u003ccode\u003e1\u003c/code\u003e, \u003ccode\u003e2\u003c/code\u003e, \u003ccode\u003e3\u003c/code\u003e, etc\n          in: path\n          name: roundid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Standing\"\n                type: array\n      summary: Standings\n  \"/{format}/TeamGameStatsByDate/{date}\":\n    get:\n      operationId: TeamGameStatsByDate\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n        - description: |-\n            The date of the game(s).\n            \u003cbr\u003eExamples: \u003ccode\u003e2017-02-27\u003c/code\u003e, \u003ccode\u003e2017-09-01\u003c/code\u003e.\n          in: path\n          name: date\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TeamGame\"\n                type: array\n      summary: Team Game Stats by Date\n  \"/{format}/TeamSeasonStats/{roundid}\":\n    get:\n      operationId: TeamSeasonStats\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n        - description: \u003e-\n            Unique FantasyData Round ID. RoundIDs can be found in the\n            Competition Hierarchy (League Hierarchy). \n\n            Examples: \u003ccode\u003e1\u003c/code\u003e, \u003ccode\u003e2\u003c/code\u003e, \u003ccode\u003e3\u003c/code\u003e, etc\n          in: path\n          name: roundid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TeamSeason\"\n                type: array\n      summary: Team Season Stats\n  \"/{format}/Teams\":\n    get:\n      operationId: Teams\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Team\"\n                type: array\n      summary: Teams\n  \"/{format}/UpcomingScheduleByPlayer/{playerid}\":\n    get:\n      operationId: UpcomingScheduleByPlayer\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n        - description: |-\n            Unique FantasyData Player ID.\n            Example:\u003ccode\u003e90026231\u003c/code\u003e.\n          in: path\n          name: playerid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Game\"\n                type: array\n      summary: Upcoming Schedule By Player\n  \"/{format}/Venues\":\n    get:\n      operationId: Venues\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Venue\"\n                type: array\n      summary: Venues\nservers:\n  - url: http://api.sportsdata.io\n  - url: https://api.sportsdata.io\n  - url: http://api.fantasydata.net\n  - url: https://api.fantasydata.net\ncomponents:\n  securitySchemes:\n    apiKeyHeader:\n      in: header\n      name: Ocp-Apim-Subscription-Key\n      type: apiKey\n    apiKeyQuery:\n      in: query\n      name: subscription-key\n      type: apiKey\n  schemas:\n    Area:\n      properties:\n        AreaId:\n          type: integer\n        Competitions:\n          items:\n            $ref: \"#/components/schemas/Competition\"\n          type: array\n        CountryCode:\n          type: string\n        Name:\n          type: string\n    Booking:\n      properties:\n        BookingId:\n          type: integer\n        GameId:\n          type: integer\n        GameMinute:\n          type: integer\n        GameMinuteExtra:\n          type: integer\n        Name:\n          type: string\n        PlayerId:\n          type: integer\n        TeamId:\n          type: integer\n        Type:\n          type: string\n    BoxScore:\n      properties:\n        AdditionalAssistantReferee1:\n          $ref: \"#/components/schemas/Referee\"\n        AdditionalAssistantReferee2:\n          $ref: \"#/components/schemas/Referee\"\n        AssistantReferee1:\n          $ref: \"#/components/schemas/Referee\"\n        AssistantReferee2:\n          $ref: \"#/components/schemas/Referee\"\n        AwayTeamCoach:\n          $ref: \"#/components/schemas/Coach\"\n        Bookings:\n          items:\n            $ref: \"#/components/schemas/Booking\"\n          type: array\n        FourthReferee:\n          $ref: \"#/components/schemas/Referee\"\n        Game:\n          $ref: \"#/components/schemas/Game\"\n        Goals:\n          items:\n            $ref: \"#/components/schemas/Goal\"\n          type: array\n        HomeTeamCoach:\n          $ref: \"#/components/schemas/Coach\"\n        Lineups:\n          items:\n            $ref: \"#/components/schemas/Lineup\"\n          type: array\n        MainReferee:\n          $ref: \"#/components/schemas/Referee\"\n        PenaltyShootouts:\n          items:\n            $ref: \"#/components/schemas/PenaltyShootout\"\n          type: array\n        PlayerGames:\n          items:\n            $ref: \"#/components/schemas/PlayerGame\"\n          type: array\n        TeamGames:\n          items:\n            $ref: \"#/components/schemas/TeamGame\"\n          type: array\n    Coach:\n      properties:\n        CoachId:\n          type: integer\n        FirstName:\n          type: string\n        LastName:\n          type: string\n        Nationality:\n          type: string\n        ShortName:\n          type: string\n    Competition:\n      properties:\n        AreaId:\n          type: integer\n        AreaName:\n          type: string\n        CompetitionId:\n          type: integer\n        Format:\n          type: string\n        Gender:\n          type: string\n        Key:\n          type: string\n        Name:\n          type: string\n        Seasons:\n          items:\n            $ref: \"#/components/schemas/Season\"\n          type: array\n        Type:\n          type: string\n    CompetitionDetail:\n      properties:\n        AreaId:\n          type: integer\n        AreaName:\n          type: string\n        CompetitionId:\n          type: integer\n        CurrentSeason:\n          $ref: \"#/components/schemas/Season\"\n        Format:\n          type: string\n        Games:\n          items:\n            $ref: \"#/components/schemas/Game\"\n          type: array\n        Gender:\n          type: string\n        Key:\n          type: string\n        Name:\n          type: string\n        Seasons:\n          items:\n            $ref: \"#/components/schemas/Season\"\n          type: array\n        Teams:\n          items:\n            $ref: \"#/components/schemas/TeamDetail\"\n          type: array\n        Type:\n          type: string\n    Game:\n      properties:\n        Attendance:\n          type: integer\n        AwayTeamCountryCode:\n          type: string\n        AwayTeamId:\n          type: integer\n        AwayTeamKey:\n          type: string\n        AwayTeamMoneyLine:\n          type: integer\n        AwayTeamName:\n          type: string\n        AwayTeamPointSpreadPayout:\n          type: integer\n        AwayTeamScore:\n          type: integer\n        AwayTeamScoreExtraTime:\n          type: integer\n        AwayTeamScorePenalty:\n          type: integer\n        AwayTeamScorePeriod1:\n          type: integer\n        AwayTeamScorePeriod2:\n          type: integer\n        Clock:\n          type: integer\n        ClockDisplay:\n          type: string\n        ClockExtra:\n          type: integer\n        DateTime:\n          type: string\n        Day:\n          type: string\n        DrawMoneyLine:\n          type: integer\n        GameId:\n          type: integer\n        GlobalAwayTeamId:\n          type: integer\n        GlobalGameId:\n          type: integer\n        GlobalHomeTeamId:\n          type: integer\n        Group:\n          type: string\n        HomeTeamCountryCode:\n          type: string\n        HomeTeamId:\n          type: integer\n        HomeTeamKey:\n          type: string\n        HomeTeamMoneyLine:\n          type: integer\n        HomeTeamName:\n          type: string\n        HomeTeamPointSpreadPayout:\n          type: integer\n        HomeTeamScore:\n          type: integer\n        HomeTeamScoreExtraTime:\n          type: integer\n        HomeTeamScorePenalty:\n          type: integer\n        HomeTeamScorePeriod1:\n          type: integer\n        HomeTeamScorePeriod2:\n          type: integer\n        IsClosed:\n          type: boolean\n        OverPayout:\n          type: integer\n        OverUnder:\n          type: number\n        Period:\n          type: string\n        PointSpread:\n          type: number\n        RoundId:\n          type: integer\n        Season:\n          type: integer\n        SeasonType:\n          type: integer\n        Status:\n          type: string\n        UnderPayout:\n          type: integer\n        Updated:\n          type: string\n        UpdatedUtc:\n          type: string\n        VenueId:\n          type: integer\n        VenueType:\n          type: string\n        Week:\n          type: integer\n        Winner:\n          type: string\n    Goal:\n      properties:\n        AssistedByPlayerId1:\n          type: integer\n        AssistedByPlayerId2:\n          type: integer\n        AssistedByPlayerName1:\n          type: string\n        AssistedByPlayerName2:\n          type: string\n        GameId:\n          type: integer\n        GameMinute:\n          type: integer\n        GameMinuteExtra:\n          type: integer\n        GoalId:\n          type: integer\n        Name:\n          type: string\n        PlayerId:\n          type: integer\n        TeamId:\n          type: integer\n        Type:\n          type: string\n    Lineup:\n      properties:\n        GameId:\n          type: integer\n        GameMinute:\n          type: integer\n        GameMinuteExtra:\n          type: integer\n        LineupId:\n          type: integer\n        Name:\n          type: string\n        PitchPositionHorizontal:\n          type: integer\n        PitchPositionVertical:\n          type: integer\n        PlayerId:\n          type: integer\n        Position:\n          type: string\n        ReplacedPlayerId:\n          type: integer\n        ReplacedPlayerName:\n          type: string\n        TeamId:\n          type: integer\n        Type:\n          type: string\n    Membership:\n      properties:\n        Active:\n          type: boolean\n        EndDate:\n          type: string\n        MembershipId:\n          type: integer\n        PlayerId:\n          type: integer\n        PlayerName:\n          type: string\n        StartDate:\n          type: string\n        TeamArea:\n          type: string\n        TeamId:\n          type: integer\n        TeamName:\n          type: string\n        Updated:\n          type: string\n    PenaltyShootout:\n      properties:\n        GameId:\n          type: integer\n        Name:\n          type: string\n        Order:\n          type: integer\n        PenaltyShootoutId:\n          type: integer\n        PlayerId:\n          type: integer\n        Position:\n          type: string\n        TeamId:\n          type: integer\n        Type:\n          type: string\n    Player:\n      properties:\n        BirthCity:\n          type: string\n        BirthCountry:\n          type: string\n        BirthDate:\n          type: string\n        CommonName:\n          type: string\n        DraftKingsPosition:\n          type: string\n        FirstName:\n          type: string\n        Foot:\n          type: string\n        Gender:\n          type: string\n        Height:\n          type: integer\n        InjuryBodyPart:\n          type: string\n        InjuryNotes:\n          type: string\n        InjuryStartDate:\n          type: string\n        InjuryStatus:\n          type: string\n        Jersey:\n          type: integer\n        LastName:\n          type: string\n        Nationality:\n          type: string\n        PhotoUrl:\n          type: string\n        PlayerId:\n          type: integer\n        Position:\n          type: string\n        PositionCategory:\n          type: string\n        RotoWirePlayerID:\n          type: integer\n        ShortName:\n          type: string\n        Updated:\n          type: string\n        UsaTodayHeadshotNoBackgroundUpdated:\n          type: string\n        UsaTodayHeadshotNoBackgroundUrl:\n          type: string\n        UsaTodayHeadshotUpdated:\n          type: string\n        UsaTodayHeadshotUrl:\n          type: string\n        UsaTodayPlayerID:\n          type: integer\n        Weight:\n          type: integer\n    PlayerGame:\n      properties:\n        Assists:\n          type: number\n        BlockedShots:\n          type: number\n        Captain:\n          type: boolean\n        CornersWon:\n          type: number\n        Crosses:\n          type: number\n        DateTime:\n          type: string\n        Day:\n          type: string\n        DefenderCleanSheets:\n          type: number\n        DraftKingsPosition:\n          type: string\n        DraftKingsSalary:\n          type: integer\n        FanDuelPosition:\n          type: string\n        FanDuelSalary:\n          type: integer\n        FantasyPoints:\n          type: number\n        FantasyPointsDraftKings:\n          type: number\n        FantasyPointsFanDuel:\n          type: number\n        FantasyPointsMondogoal:\n          type: number\n        FantasyPointsYahoo:\n          type: number\n        Fouled:\n          type: number\n        Fouls:\n          type: number\n        GameId:\n          type: integer\n        Games:\n          type: integer\n        GlobalGameId:\n          type: integer\n        GlobalOpponentId:\n          type: integer\n        GlobalTeamId:\n          type: integer\n        GoalkeeperCleanSheets:\n          type: number\n        GoalkeeperGoalsAgainst:\n          type: number\n        GoalkeeperSaves:\n          type: number\n        GoalkeeperSingleGoalAgainst:\n          type: number\n        GoalkeeperWins:\n          type: number\n        Goals:\n          type: number\n        HomeOrAway:\n          type: string\n        InjuryBodyPart:\n          type: string\n        InjuryNotes:\n          type: string\n        InjuryStartDate:\n          type: string\n        InjuryStatus:\n          type: string\n        Interceptions:\n          type: number\n        IsGameOver:\n          type: boolean\n        Jersey:\n          type: integer\n        LastManTackle:\n          type: number\n        Minutes:\n          type: number\n        MondogoalPosition:\n          type: string\n        MondogoalSalary:\n          type: integer\n        Name:\n          type: string\n        Offsides:\n          type: number\n        Opponent:\n          type: string\n        OpponentId:\n          type: integer\n        OpponentScore:\n          type: number\n        OwnGoals:\n          type: number\n        Passes:\n          type: number\n        PassesCompleted:\n          type: number\n        PenaltiesConceded:\n          type: number\n        PenaltiesWon:\n          type: number\n        PenaltyKickGoals:\n          type: number\n        PenaltyKickMisses:\n          type: number\n        PenaltyKickSaves:\n          type: number\n        PlayerId:\n          type: integer\n        Position:\n          type: string\n        PositionCategory:\n          type: string\n        RedCards:\n          type: number\n        RoundId:\n          type: integer\n        Score:\n          type: number\n        Season:\n          type: integer\n        SeasonType:\n          type: integer\n        ShortName:\n          type: string\n        Shots:\n          type: number\n        ShotsOnGoal:\n          type: number\n        Started:\n          type: integer\n        StatId:\n          type: integer\n        Suspension:\n          type: boolean\n        SuspensionReason:\n          type: string\n        TacklesWon:\n          type: number\n        Team:\n          type: string\n        TeamId:\n          type: integer\n        Touches:\n          type: number\n        Updated:\n          type: string\n        UpdatedUtc:\n          type: string\n        YahooPosition:\n          type: string\n        YahooSalary:\n          type: integer\n        YellowCards:\n          type: number\n        YellowRedCards:\n          type: number\n    PlayerSeason:\n      properties:\n        Assists:\n          type: number\n        BlockedShots:\n          type: number\n        CornersWon:\n          type: number\n        Crosses:\n          type: number\n        DefenderCleanSheets:\n          type: number\n        FantasyPoints:\n          type: number\n        FantasyPointsDraftKings:\n          type: number\n        FantasyPointsFanDuel:\n          type: number\n        FantasyPointsMondogoal:\n          type: number\n        FantasyPointsYahoo:\n          type: number\n        Fouled:\n          type: number\n        Fouls:\n          type: number\n        Games:\n          type: integer\n        GlobalTeamId:\n          type: integer\n        GoalkeeperCleanSheets:\n          type: number\n        GoalkeeperGoalsAgainst:\n          type: number\n        GoalkeeperSaves:\n          type: number\n        GoalkeeperSingleGoalAgainst:\n          type: number\n        GoalkeeperWins:\n          type: number\n        Goals:\n          type: number\n        Interceptions:\n          type: number\n        LastManTackle:\n          type: number\n        Minutes:\n          type: number\n        Name:\n          type: string\n        Offsides:\n          type: number\n        OpponentScore:\n          type: number\n        OwnGoals:\n          type: number\n        Passes:\n          type: number\n        PassesCompleted:\n          type: number\n        PenaltiesConceded:\n          type: number\n        PenaltiesWon:\n          type: number\n        PenaltyKickGoals:\n          type: number\n        PenaltyKickMisses:\n          type: number\n        PenaltyKickSaves:\n          type: number\n        PlayerId:\n          type: integer\n        Position:\n          type: string\n        PositionCategory:\n          type: string\n        RedCards:\n          type: number\n        RoundId:\n          type: integer\n        Score:\n          type: number\n        Season:\n          type: integer\n        SeasonType:\n          type: integer\n        ShortName:\n          type: string\n        Shots:\n          type: number\n        ShotsOnGoal:\n          type: number\n        Started:\n          type: integer\n        StatId:\n          type: integer\n        TacklesWon:\n          type: number\n        Team:\n          type: string\n        TeamId:\n          type: integer\n        Touches:\n          type: number\n        Updated:\n          type: string\n        UpdatedUtc:\n          type: string\n        YellowCards:\n          type: number\n        YellowRedCards:\n          type: number\n    Referee:\n      properties:\n        FirstName:\n          type: string\n        LastName:\n          type: string\n        Nationality:\n          type: string\n        RefereeId:\n          type: integer\n        ShortName:\n          type: string\n    Round:\n      properties:\n        CurrentRound:\n          type: boolean\n        CurrentWeek:\n          type: integer\n        EndDate:\n          type: string\n        Name:\n          type: string\n        RoundId:\n          type: integer\n        Season:\n          type: integer\n        SeasonId:\n          type: integer\n        SeasonType:\n          type: integer\n        StartDate:\n          type: string\n        Type:\n          type: string\n    Season:\n      properties:\n        CompetitionId:\n          type: integer\n        CompetitionName:\n          type: string\n        CurrentSeason:\n          type: boolean\n        EndDate:\n          type: string\n        Name:\n          type: string\n        Rounds:\n          items:\n            $ref: \"#/components/schemas/Round\"\n          type: array\n        Season:\n          type: integer\n        SeasonId:\n          type: integer\n        StartDate:\n          type: string\n    SeasonTeam:\n      properties:\n        Active:\n          type: boolean\n        Gender:\n          type: string\n        SeasonId:\n          type: integer\n        SeasonTeamId:\n          type: integer\n        Team:\n          $ref: \"#/components/schemas/Team\"\n        TeamId:\n          type: integer\n        TeamName:\n          type: string\n        Type:\n          type: string\n    Standing:\n      properties:\n        Draws:\n          type: integer\n        Games:\n          type: integer\n        GlobalTeamID:\n          type: integer\n        GoalsAgainst:\n          type: integer\n        GoalsDifferential:\n          type: integer\n        GoalsScored:\n          type: integer\n        Group:\n          type: string\n        Losses:\n          type: integer\n        Name:\n          type: string\n        Points:\n          type: integer\n        RoundId:\n          type: integer\n        Scope:\n          type: string\n        ShortName:\n          type: string\n        StandingId:\n          type: integer\n        TeamId:\n          type: integer\n        Wins:\n          type: integer\n        \"[Order]\":\n          type: integer\n    Team:\n      properties:\n        Active:\n          type: boolean\n        Address:\n          type: string\n        AreaId:\n          type: integer\n        AreaName:\n          type: string\n        City:\n          type: string\n        ClubColor1:\n          type: string\n        ClubColor2:\n          type: string\n        ClubColor3:\n          type: string\n        Email:\n          type: string\n        Fax:\n          type: string\n        Founded:\n          type: integer\n        FullName:\n          type: string\n        Gender:\n          type: string\n        GlobalTeamId:\n          type: integer\n        Name:\n          type: string\n        Nickname1:\n          type: string\n        Nickname2:\n          type: string\n        Nickname3:\n          type: string\n        Phone:\n          type: string\n        TeamId:\n          type: integer\n        Type:\n          type: string\n        VenueId:\n          type: integer\n        VenueName:\n          type: string\n        Website:\n          type: string\n        WikipediaLogoUrl:\n          type: string\n        WikipediaWordMarkUrl:\n          type: string\n        Zip:\n          type: string\n        \"[Key]\":\n          type: string\n    TeamDetail:\n      properties:\n        Active:\n          type: boolean\n        Address:\n          type: string\n        AreaId:\n          type: integer\n        AreaName:\n          type: string\n        City:\n          type: string\n        ClubColor1:\n          type: string\n        ClubColor2:\n          type: string\n        ClubColor3:\n          type: string\n        Email:\n          type: string\n        Fax:\n          type: string\n        Founded:\n          type: integer\n        FullName:\n          type: string\n        Gender:\n          type: string\n        GlobalTeamId:\n          type: integer\n        Name:\n          type: string\n        Nickname1:\n          type: string\n        Nickname2:\n          type: string\n        Nickname3:\n          type: string\n        Phone:\n          type: string\n        Players:\n          items:\n            $ref: \"#/components/schemas/Player\"\n          type: array\n        TeamId:\n          type: integer\n        Type:\n          type: string\n        VenueId:\n          type: integer\n        VenueName:\n          type: string\n        Website:\n          type: string\n        WikipediaLogoUrl:\n          type: string\n        WikipediaWordMarkUrl:\n          type: string\n        Zip:\n          type: string\n        \"[Key]\":\n          type: string\n    TeamGame:\n      properties:\n        Assists:\n          type: number\n        BlockedShots:\n          type: number\n        CornersWon:\n          type: number\n        Crosses:\n          type: number\n        DateTime:\n          type: string\n        Day:\n          type: string\n        DefenderCleanSheets:\n          type: number\n        FantasyPoints:\n          type: number\n        FantasyPointsDraftKings:\n          type: number\n        FantasyPointsFanDuel:\n          type: number\n        FantasyPointsMondogoal:\n          type: number\n        FantasyPointsYahoo:\n          type: number\n        Fouled:\n          type: number\n        Fouls:\n          type: number\n        GameId:\n          type: integer\n        Games:\n          type: integer\n        GlobalGameId:\n          type: integer\n        GlobalOpponentId:\n          type: integer\n        GlobalTeamId:\n          type: integer\n        GoalkeeperCleanSheets:\n          type: number\n        GoalkeeperGoalsAgainst:\n          type: number\n        GoalkeeperSaves:\n          type: number\n        GoalkeeperSingleGoalAgainst:\n          type: number\n        GoalkeeperWins:\n          type: number\n        Goals:\n          type: number\n        HomeOrAway:\n          type: string\n        Interceptions:\n          type: number\n        IsGameOver:\n          type: boolean\n        LastManTackle:\n          type: number\n        Minutes:\n          type: number\n        Name:\n          type: string\n        Offsides:\n          type: number\n        Opponent:\n          type: string\n        OpponentId:\n          type: integer\n        OpponentScore:\n          type: number\n        OwnGoals:\n          type: number\n        Passes:\n          type: number\n        PassesCompleted:\n          type: number\n        PenaltiesConceded:\n          type: number\n        PenaltiesWon:\n          type: number\n        PenaltyKickGoals:\n          type: number\n        PenaltyKickMisses:\n          type: number\n        PenaltyKickSaves:\n          type: number\n        RedCards:\n          type: number\n        RoundId:\n          type: integer\n        Score:\n          type: number\n        Season:\n          type: integer\n        SeasonType:\n          type: integer\n        Shots:\n          type: number\n        ShotsOnGoal:\n          type: number\n        StatId:\n          type: integer\n        TacklesWon:\n          type: number\n        Team:\n          type: string\n        TeamId:\n          type: integer\n        Touches:\n          type: number\n        Updated:\n          type: string\n        UpdatedUtc:\n          type: string\n        YellowCards:\n          type: number\n        YellowRedCards:\n          type: number\n    TeamSeason:\n      properties:\n        Assists:\n          type: number\n        BlockedShots:\n          type: number\n        CornersWon:\n          type: number\n        Crosses:\n          type: number\n        DefenderCleanSheets:\n          type: number\n        FantasyPoints:\n          type: number\n        FantasyPointsDraftKings:\n          type: number\n        FantasyPointsFanDuel:\n          type: number\n        FantasyPointsMondogoal:\n          type: number\n        FantasyPointsYahoo:\n          type: number\n        Fouled:\n          type: number\n        Fouls:\n          type: number\n        Games:\n          type: integer\n        GlobalTeamId:\n          type: integer\n        GoalkeeperCleanSheets:\n          type: number\n        GoalkeeperGoalsAgainst:\n          type: number\n        GoalkeeperSaves:\n          type: number\n        GoalkeeperSingleGoalAgainst:\n          type: number\n        GoalkeeperWins:\n          type: number\n        Goals:\n          type: number\n        Interceptions:\n          type: number\n        LastManTackle:\n          type: number\n        Minutes:\n          type: number\n        Name:\n          type: string\n        Offsides:\n          type: number\n        OpponentScore:\n          type: number\n        OwnGoals:\n          type: number\n        Passes:\n          type: number\n        PassesCompleted:\n          type: number\n        PenaltiesConceded:\n          type: number\n        PenaltiesWon:\n          type: number\n        PenaltyKickGoals:\n          type: number\n        PenaltyKickMisses:\n          type: number\n        PenaltyKickSaves:\n          type: number\n        RedCards:\n          type: number\n        RoundId:\n          type: integer\n        Score:\n          type: number\n        Season:\n          type: integer\n        SeasonType:\n          type: integer\n        Shots:\n          type: number\n        ShotsOnGoal:\n          type: number\n        StatId:\n          type: integer\n        TacklesWon:\n          type: number\n        Team:\n          type: string\n        TeamId:\n          type: integer\n        Touches:\n          type: number\n        Updated:\n          type: string\n        UpdatedUtc:\n          type: string\n        YellowCards:\n          type: number\n        YellowRedCards:\n          type: number\n    Venue:\n      properties:\n        Address:\n          type: string\n        Capacity:\n          type: integer\n        City:\n          type: string\n        Country:\n          type: string\n        GeoLat:\n          type: number\n        GeoLong:\n          type: number\n        Name:\n          type: string\n        Nickname1:\n          type: string\n        Nickname2:\n          type: string\n        Opened:\n          type: integer\n        Surface:\n          type: string\n        VenueId:\n          type: integer\n        Zip:\n          type: string\n        \"[Open]\":\n          type: boolean\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/sportsdata.io-soccer-v3-stats-1.0-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/sportsdata.io-soccer-v3-stats-1.0-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}