{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/JanssenProject/jans"
		},
		"file": {
			"name": "jansFido2Swagger.yaml",
			"size": 0,
			"path": "jans-fido2/docs/jansFido2Swagger.yaml",
			"byteSize": 18015,
			"content": "# raw swagger spec link:\n# https://raw.githubusercontent.com/JanssenProject/jans-fido2/master/docs/jansFido2Swagger.yaml\n# https://gluu.org/swagger-ui/?url=https://raw.githubusercontent.com/JanssenProject/jans-fido2/master/docs/jansFido2Swagger.yaml\nopenapi: 3.0.1\ninfo:\n  title: Janssen Fido2\n  description: Janssen Fido2 - FIDO 2.0 is an open authentication standard that enables leveraging common devices to authenticate to online services in both mobile and desktop environments.\n  contact:\n    email: xx@gluu.org\n  license:\n    name: License\n    url: https://github.com/JanssenProject/jans-fido2/blob/master/LICENSE\n  version: 1.0.0-SNAPSHOT\ntags:\n  - name: developers\n    description: Janssen includes a FIDO2 component to implement a two-step, two-factor authentication (2FA) with username / password as the first step, and any FIDO2 device as the second step.\n  - name: FIDO2 configuration\n  - name: FIDO2 Assertion\n  - name: FIDO2 Attestation\npaths:\n  /fido2/configuration:\n    get:\n      tags:\n        - FIDO2 configuration\n      summary: FIDO2 configuration\n      description: FIDO2 configuration\n      operationId: get-fido2-configuration\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                title: FIDO2 configuration\n                description: FIDO2 configuration.\n                required:\n                  - version\n                  - issuer\n                  - attestation\n                properties:\n                  version:\n                    type: string\n                    description: The version of the FIDO2 U2F core protocol to which this server conforms. The value MUST be the string 1.0.\n                  issuer:\n                    type: string\n                    description: A URI indicating the party operating the FIDO U2F server.\n                  attestation:\n                    type: array\n                    items:\n                      type: object\n                      description: list of fido2 attestation endpoints\n                      properties:\n                        base_path:\n                          type: string\n                          description: fido2 attestation endpoint\n                        options_enpoint:\n                          type: string\n                          description: fido2 attestation options endpoint\n                        result_enpoint:\n                          type: string\n                          description: fido2 attestation result endpoint\n                  assertion:\n                    type: array\n                    items:\n                      type: object\n                      description: list of fido2 assertion endpoints\n                      properties:\n                        base_path:\n                          type: string\n                          description: fido2 assertion endpoint\n                        options_enpoint:\n                          type: string\n                          description: fido2 assertion options endpoint\n                        result_enpoint:\n                          type: string\n                          description: fido2 assertion result endpoint\n        403:\n          $ref: '#/components/responses/AccessDenied'\n        406:\n          $ref: '#/components/responses/NotAcceptable'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /fido2/assertion/options:\n    post:\n      tags:\n        - FIDO2 Assertion\n      summary: FIDO2 Assertion Options\n      description: FIDO2 Assertion Options\n      operationId: options\n      requestBody:\n        content:\n          application/json:\n            schema:\n              title: AssertionOptions\n              type: object\n              properties:\n                content:\n                  type: object\n                  description: An object that contains the extensions to enable, and the options to use for each of them.\n                  properties:\n                    username:\n                      type: string\n                    authenticatorSelection:\n                      type: array\n                      items:\n                        type: string\n                        description: Set of parameters required for FIDO2 assertion option.\n                    documentDomain:\n                      type: string\n                    extensions:\n                      type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                title: AssertionOptionsResponse\n                type: object\n                required:\n                  - challenge\n                  - user\n                  - allowCredentials\n                  - userVerification\n                  - extensions\n                properties:\n                  challenge:\n                    type: string\n                    description: Websafe-base64 encoding of the challenge.\n                  user:\n                    type: string\n                    description: username\n                  allowCredentials:\n                    type: array\n                    items:\n                      type: string\n                    example:\n                      - type\n                      - transports\n                      - id\n                  userVerification:\n                    type: string\n                  extensions:\n                    type: string\n        403:\n          $ref: '#/components/responses/AccessDenied'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /fido2/assertion/result:\n    post:\n      tags:\n        - FIDO2 Assertion\n      summary: FIDO2 Assertion Result - Parses and validates an assertion response from the client.\n      description: FIDO2 Assertion Result.\n      operationId: result\n      requestBody:\n        content:\n          application/json:\n            schema:\n              title: AssertionOptions\n              required:\n                - clientDataJSON\n              type: object\n              properties:\n                id:\n                  type: string\n                  description: The base64url encoded id returned by the client\n                type:\n                  type: string\n                  example:\n                    - public-key\n                rawId:\n                  type: string\n                  description: The base64url encoded rawId returned by the client. If res.rawId is missing, res.id will be used instead. If both are missing an error will be thrown.\n                userHandle:\n                  type: string\n                  description: The base64url encoded userHandle returned by the client. May be null or an empty string.\n                clientDataJSON:\n                  type: array\n                  description: The base64url encoded clientDataJSON returned by the client\n                  items:\n                    type: string\n                  example:\n                    - challenge\n                    - origin\n      responses:\n        200:\n          description: OK\n          content: {}\n        403:\n          $ref: '#/components/responses/AccessDenied'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /fido2/attestation/options:\n    post:\n      tags:\n        - FIDO2 Attestation\n      summary: Created new registration.\n      description: Created new registration.\n      operationId: attestation-options\n      requestBody:\n        content:\n          application/json:\n            schema:\n              title: AttestationOptions\n              description: An object containing various options for the option creation\n              type: object\n              properties:\n                username:\n                  type: string\n                displayName:\n                  type: string\n                attestation:\n                  type: string\n                  format: enum\n                   - direct\n                   - indirect\n                   - none\n                authenticatorSelection:\n                  type: object\n                  properties:\n                   authenticatorAttachment:\n                     type: string\n                     format: enum\n                       - platform\n                       - cross-platform\n                   userVerification:\n                     type: string\n                     format: enum\n                       - direct\n                       - indirect\n                       - none\n                   requireResidentKey:\n                     type: boolean\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                title: CredentialCreationOptions\n                type: object\n                properties:\n                  attestation:\n                    type: string\n                    format: enum\n                     - direct\n                     - indirect\n                     - none\n                  authenticatorSelection:\n                    type: object\n                    properties:\n                      authenticatorAttachment:\n                        type: string\n                        format: enum\n                         - platform\n                         - cross-platform\n                      userVerification:\n                        type: string\n                        format: enum\n                         - required\n                         - preferred\n                         - discouraged\n                      requireResidentKey:\n                        type: boolean\n                  challenge:\n                    type: string\n                    description: The base64url encoded challenge that was sent to the client, as generated by assertionOptions.\n                  pubKeyCredParams:\n                    type: object\n                    properties:\n                     type:\n                       type: string\n                     alg:\n                       type: string\t\t\t\t  \n                  rp:\n                    type: object\n                    description: RP credentials\n                    properties:\n                     name:\n                       type: string\n                     id:\n                       type: string\t\n                  username:\n                    type: string\n                  displayName:\n                    type: string\n                  user:\n                    type: object\n                    description: User object\n                    properties:\n                      id:\n                        type: string\n                      name:\n                        type: string\n                      displayName:\n                        type: string\n                  excludeCredentials:\n                    type: object\n                    properties:\n                      type:\n                        type: string\n                      id:\n                        type: string\n                  timeout: \n                    type: integer\n                  extensions:\n                    type: array\n                    items:\n                      type: string\n                  status:\n                    type: string\n                  errorMessage:\n                    type: string\n        403:\n          $ref: '#/components/responses/AccessDenied'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /fido2/attestation/result:\n    post:\n      tags:\n        - FIDO2 Attestation\n      summary: FIDO2 attestation result.\n      description: FIDO2 attestation result\n      operationId: attestation-result\n      requestBody:\n        content:\n          application/json:\n            schema:\n              title: AttestationOptions\n              description: An object containing various options for the option creation\n              type: object\n              required:\n                - type\n                - response\n              properties:\n                type:\n                  type: string\n                  enum: \n                    - public-key\n                response:\n                  type: object\n                  required:\n                    - clientDataJSON\n                  properties:\n                    clientDataJSON:\n                      type: object\n                      description: The base64url encoded clientDataJSON returned by the client\n                      required:\n                        - challenge\n                        - origin\n                        - type\n                      properties:\n                        type:\n                          type: string\n                          enum: \n                            - webauthn.create\n                        origin:\n                          type: string\n                        challenge:\n                          type: string\n                        tokenBinding:\n                          type: object\n                          required:\n                            - status\n                          properties:\n                            status:\n                              type: string\n                            id:\n                              type: string\n      responses:        \n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                title: Fido2RegistrationData\n                type: object\n                properties:\n                  createdDate:\n                    type: string\n                    format: date-time\n                  updatedDate:\n                    type: string\n                    format: date-time\n                  createdBy:\n                    type: string\n                  updatedBy:\n                    type: string\n                  username:\n                    type: string\n                  domain:\n                    type: string\n                  userId:\n                    type: string\n                  challenge:\n                    type: string\n                  attenstationRequest:\n                    type: string\n                  attenstationResponse:\n                    type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                          - public-key\n                      id:\n                        type: string\n                      response:\n                        type: object\n                        required:\n                          - attestationObject\n                          - clientDataJSON\n                        properties:\n                          attestationObject:\n                            type: string\n                          clientDataJSON:\n                            type: string\n                          clientExtensionResults:\n                            type: array\n                            items:\n                              type: string\n                  uncompressedECPoint:\n                    type: string\n                  publicKeyId:\n                    type: string\n                  type:\n                    type: string\n                    enum:\n                      - public-key\n                  status:\n                    type: string\n                    enum:\n                      - registered\n                  counter:\n                    type: integer\n                  attestationType:\n                    type: string\n                  signatureAlgorithm:\n                    type: integer\n                  applicationId:\n                    type: string\t\t\t\t\t\n                  authenticatorSelection:\n                    type: object\n                    properties:\n                      authenticatorAttachment:\n                        type: string\n                        format: enum\n                         - platform\n                         - cross-platform\n                      userVerification:\n                        type: string\n                        format: enum\n                         - required\n                         - preferred\n                         - discouraged\n                      requireResidentKey:\n                        type: boolean\n                  errorMessage:\n                    type: string\n\n          $ref: '#/components/responses/AccessDenied'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n\ncomponents:\n  responses:\n    Found: #302 - FOUND\n      description: Resource Found.\n      content: {}\n    InvalidRequest: #400 - BAD_REQUEST\n      description: Invalid parameters are provided to endpoint.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorResponse'\n    Unauthorized: #401 - UNAUTHORIZED\n      description: Unauthorized access request.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorResponse'\n    AccessDenied: #403 - FORBIDDEN\n      description: Invalid details provided hence access denied.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorResponse'\n    NotFound: #404 - NOT_FOUND\n      description: Resource Not Found.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorResponse'\n    NotAcceptable: #406 - NOT_ACCEPTABLE\n      description: Request Not Acceptable.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorResponse'\n    InternalServerError: #500 - INTERNAL_SERVER_ERROR\n      description: Internal error occured. Please check log file for details.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorResponse'\n\n  schemas:\n    ErrorResponse:\n      required:\n        - error\n        - error_description\n      type: object\n      properties:\n        error:\n          type: string\n        error_description:\n          type: string\n        details:\n          type: string\n",
			"canonicalURL": "/github.com/JanssenProject/jans@8d57d01b998bfe87a2377bbe9023dd97fb03cc9f/-/blob/jans-fido2/docs/jansFido2Swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/JanssenProject/jans/blob/8d57d01b998bfe87a2377bbe9023dd97fb03cc9f/jans-fido2/docs/jansFido2Swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}