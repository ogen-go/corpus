{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/zeit.co/v2019-01-07/openapi.yaml",
			"byteSize": 33367,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://api.zeit.co\ninfo:\n  contact:\n    email: javi@zeit.co\n    name: Javi Velasco\n    url: zeit.co\n  title: ZEIT API\n  version: v2019-01-07\n  x-apisguru-categories:\n    - hosting\n  x-logo:\n    url: https://logo-core.clearbit.com/zeit.co\n  x-origin:\n    - format: openapi\n      url: https://unpkg.com/@zeit/openapi\n      version: \"3.0\"\n  x-providerName: zeit.co\nexternalDocs:\n  url: https://zeit.co/docs/api/\nsecurity:\n  - bearerAuth: []\ntags:\n  - description: Manage custom domains to use with ZEIT\n    name: domains\n  - description: Manage webhooks where you can receive ZEIT events\n    name: webhooks\npaths:\n  /v1/integrations/webhooks:\n    get:\n      operationId: getWebhooks\n      parameters:\n        - description: A team id in case you want to act on behalf of a team\n          in: query\n          name: teamId\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                description: An Array of webhooks for the given account\n                items:\n                  $ref: \"#/components/schemas/webhook\"\n                type: array\n          description: OK\n      summary: Get a list of existent webhooks\n      tags:\n        - webhooks\n    post:\n      callbacks:\n        alias:\n          \"{$request.body#/url}\":\n            post:\n              operationId: aliasEvent\n              requestBody:\n                $ref: \"#/components/requestBodies/aliasEvent\"\n              responses:\n                \"200\":\n                  description: OK\n        deployment:\n          \"{$request.body#/url}\":\n            post:\n              operationId: deploymentEvent\n              requestBody:\n                $ref: \"#/components/requestBodies/deploymentEvent\"\n              responses:\n                \"200\":\n                  description: OK\n        deploymentError:\n          \"{$request.body#/url}\":\n            post:\n              operationId: deploymentErrorEvent\n              requestBody:\n                $ref: \"#/components/requestBodies/deploymentErrorEvent\"\n              responses:\n                \"200\":\n                  description: OK\n        deploymentReady:\n          \"{$request.body#/url}\":\n            post:\n              operationId: deploymentReadyEvent\n              requestBody:\n                $ref: \"#/components/requestBodies/deploymentReadyEvent\"\n              responses:\n                \"200\":\n                  description: OK\n        domain:\n          \"{$request.body#/url}\":\n            post:\n              operationId: addDomainEvent\n              requestBody:\n                $ref: \"#/components/requestBodies/domainEvent\"\n              responses:\n                \"200\":\n                  description: OK\n        domainDelete:\n          \"{$request.body#/url}\":\n            post:\n              operationId: domainDeletedEvent\n              requestBody:\n                $ref: \"#/components/requestBodies/domainDeleteEvent\"\n              responses:\n                \"200\":\n                  description: OK\n        domainVerify:\n          \"{$request.body#/url}\":\n            post:\n              operationId: domainVerifiedEvent\n              requestBody:\n                $ref: \"#/components/requestBodies/domainVerifyEvent\"\n              responses:\n                \"200\":\n                  description: OK\n      operationId: createWebhook\n      parameters:\n        - description: A team id in case you want to act on behalf of a team\n          in: query\n          name: teamId\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                name:\n                  description: A name to assign to the webhook\n                  type: string\n                url:\n                  description: The URL ZEIT will post to when events happen\n                  type: string\n              required:\n                - name\n                - url\n              type: object\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/webhook\"\n          description: OK\n      summary: Create a new webhook\n      tags:\n        - webhooks\n  /v1/integrations/webhooks/:id:\n    delete:\n      operationId: deleteWebhooks\n      parameters:\n        - description: A team id in case you want to act on behalf of a team\n          in: query\n          name: teamId\n          required: false\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: OK\n      summary: Remove a webhook by id\n      tags:\n        - webhooks\n  /v4/domains:\n    get:\n      operationId: getDomains\n      parameters:\n        - description: A team id in case you want to act on behalf of a team\n          in: query\n          name: teamId\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                example:\n                  domains:\n                    - boughtAt: 1549492066000\n                      cdnEnabled: false\n                      createdAt: 1549492062697\n                      expiresAt: 1581033599000\n                      id: Qmf2RSrNz5sqt6nznp4JpAyXgT6pY65qwJJn8gESt2iKoi\n                      intendedNameservers:\n                        - b.zeit-world.co.uk\n                        - c.zeit-world.org\n                        - e.zeit-world.com\n                        - f.zeit-world.net\n                      name: zeit.rocks\n                      nameservers:\n                        - f.zeit-world.net\n                        - e.zeit-world.com\n                        - b.zeit-world.co.uk\n                        - c.zeit-world.org\n                      nsVerifiedAt: 1549492417256\n                      orderedAt: 1549492057859\n                      serviceType: zeit.world\n                      txtVerifiedAt: null\n                      verificationRecord: QmReErtvkKUkogSYEAFJCQVPboxRcrCygaFG8xUKinurD4\n                      verified: true\n                properties:\n                  domains:\n                    description: An Array of domains for the given account\n                    items:\n                      properties:\n                        boughtAt:\n                          description: A timestamp to tell when the domain was purchase if it was purchased with ZEIT\n                          nullable: true\n                          type: integer\n                        cdnEnabled:\n                          description: Wether the Cloudfare CDN is enabled for the domain or not\n                          type: boolean\n                        createdAt:\n                          description: A timestamp that shows when the domain was created\n                          nullable: true\n                          type: integer\n                        expiresAt:\n                          description: The expiration date for the domain in case it's in ZEIT\n                          nullable: true\n                          type: integer\n                        id:\n                          description: The unique identifier of the domain.\n                          type: string\n                        intendedNameservers:\n                          description: The set of nameservers ZEIT requires the user to set to verify the domain with Nameservers\n                          items:\n                            description: An intended nameserver for the domain\n                            type: string\n                          type: array\n                        name:\n                          description: The domain name including the TLD\n                          type: string\n                        nameservers:\n                          description: The current nameservers we have detected for the domain\n                          items:\n                            description: A nameserver the domain has set\n                            type: string\n                          type: array\n                        nsVerifiedAt:\n                          description: The timestamp of the last time the domain was verified using Nameservers\n                          nullable: true\n                          type: integer\n                        orderedAt:\n                          description: A timestamp indicating when the domain was ordered if it was purchased with ZEIT\n                          nullable: true\n                          type: integer\n                        serviceType:\n                          description: Indicates the current DNS service the domain is using\n                          enum:\n                            - zeit.world\n                            - external\n                            - na\n                          type: string\n                        transferredAt:\n                          description: If the domain was transferred to ZEIT, it indicates the timestamp for when the transfer was started\n                          nullable: true\n                          type: integer\n                        txtVerifiedAt:\n                          description: The timestamp of the last time the domain was verified using a TXT record\n                          nullable: true\n                          type: integer\n                        verificationRecord:\n                          description: Indicates the verification record that should be used to verify the domain using a TXT record\n                          type: string\n                        verified:\n                          description: Indicates if the domain ownership was already verified\n                          type: boolean\n                      required:\n                        - boughtAt\n                        - cdnEnabled\n                        - createdAt\n                        - expiresAt\n                        - id\n                        - intendedNameservers\n                        - name\n                        - nameservers\n                        - nsVerifiedAt\n                        - serviceType\n                        - txtVerifiedAt\n                        - verificationRecord\n                        - verified\n                      type: object\n                    type: array\n                required:\n                  - domains\n                type: object\n          description: OK\n      summary: Gets a list of domains registered for the authenticating user.\n      tags:\n        - domains\n  \"/v4/domains/{name}\":\n    get:\n      operationId: getDomain\n      parameters:\n        - description: A team id in case you want to act on behalf of a team\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: A team id in case you want to act on behalf of a team\n          in: query\n          name: teamId\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                example:\n                  domain:\n                    aliases: []\n                    boughtAt: null\n                    cdnEnabled: false\n                    certs: []\n                    createdAt: 1544658552174\n                    creator:\n                      customerId: cus_COxSxT1ysva5Xa\n                      email: demo@zeit.co\n                      id: ZspSRT4ljIEEmMHgoDwKWDei\n                      username: zeit_user\n                    expiresAt: null\n                    id: EmTbe5CEJyTk2yVAHBUWy4A3sRusca3GCwRjTC1bpeVnt1\n                    intendedNameservers:\n                      - a.zeit-world.co.uk\n                      - c.zeit-world.org\n                      - d.zeit-world.com\n                      - f.zeit-world.net\n                    name: my-zeit-domain.website\n                    nameservers:\n                      - ns1.nameserver.net\n                      - ns2.nameserver.net\n                    nsVerifiedAt: null\n                    serviceType: external\n                    suffix: false\n                    txtVerifiedAt: null\n                    verificationRecord: YMc9dEJKbAncYtTqSH8dp1j5NXycfEzyjkzBJ3m3UGwR43\n                    verified: false\n                properties:\n                  domain:\n                    description: The domain information\n                    properties:\n                      aliases:\n                        description: Collection of aliases where the domain is used.\n                        items:\n                          properties:\n                            alias:\n                              type: string\n                            created:\n                              type: integer\n                            id:\n                              type: string\n                          required:\n                            - id\n                            - alias\n                            - created\n                          type: object\n                        type: array\n                      boughtAt:\n                        description: A timestamp to tell when the domain was purchase if it was purchased with ZEIT\n                        nullable: true\n                        type: integer\n                      cdnEnabled:\n                        description: Wether the Cloudfare CDN is enabled for the domain or not\n                        type: boolean\n                      certs:\n                        description: Collection of certs for the domain\n                        items:\n                          properties:\n                            cns:\n                              items:\n                                type: string\n                              type: array\n                            created:\n                              type: integer\n                            id:\n                              type: string\n                          required:\n                            - id\n                            - cns\n                            - created\n                          type: object\n                        type: array\n                      createdAt:\n                        description: A timestamp that shows when the domain was created\n                        nullable: true\n                        type: integer\n                      creator:\n                        description: Information about who added the domain\n                        properties:\n                          customerId:\n                            type: string\n                          email:\n                            type: string\n                          id:\n                            type: string\n                          isDomainReseller:\n                            type: boolean\n                          username:\n                            type: string\n                        required:\n                          - id\n                          - email\n                          - username\n                        type: object\n                      expiresAt:\n                        description: The expiration date for the domain in case it's in ZEIT\n                        nullable: true\n                        type: integer\n                      id:\n                        description: The unique identifier of the domain.\n                        type: string\n                      intendedNameservers:\n                        description: The set of nameservers ZEIT requires the user to set to verify the domain with Nameservers\n                        items:\n                          description: An intended nameserver for the domain\n                          type: string\n                        type: array\n                      name:\n                        description: The domain name including the TLD\n                        type: string\n                      nameservers:\n                        description: The current nameservers we have detected for the domain\n                        items:\n                          description: A nameserver the domain has set\n                          type: string\n                        type: array\n                      nsVerifiedAt:\n                        description: The timestamp of the last time the domain was verified using Nameservers\n                        nullable: true\n                        type: integer\n                      orderedAt:\n                        description: A timestamp indicating when the domain was ordered if it was purchased with ZEIT\n                        nullable: true\n                        type: integer\n                      serviceType:\n                        description: Indicates the current DNS service the domain is using\n                        enum:\n                          - zeit.world\n                          - external\n                          - na\n                        type: string\n                      suffix:\n                        description: Tells if the domain is being used as a custom suffix for the user or team\n                        type: boolean\n                      transferredAt:\n                        description: If the domain was transferred to ZEIT, it indicates the timestamp for when the transfer was started\n                        nullable: true\n                        type: integer\n                      txtVerifiedAt:\n                        description: The timestamp of the last time the domain was verified using a TXT record\n                        nullable: true\n                        type: integer\n                      verificationRecord:\n                        description: Indicates the verification record that should be used to verify the domain using a TXT record\n                        type: string\n                      verified:\n                        description: Indicates if the domain ownership was already verified\n                        type: boolean\n                    required:\n                      - boughtAt\n                      - cdnEnabled\n                      - createdAt\n                      - expiresAt\n                      - id\n                      - intendedNameservers\n                      - name\n                      - nameservers\n                      - nsVerifiedAt\n                      - serviceType\n                      - txtVerifiedAt\n                      - verificationRecord\n                      - verified\n                      - suffix\n                      - aliases\n                      - certs\n                      - creator\n                    type: object\n                required:\n                  - domain\n                type: object\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                example:\n                  error:\n                    code: not_found\n                    message: The domain with name zeit.rocks could not be found\n                    name: zeit.rocks\n                properties:\n                  error:\n                    properties:\n                      code:\n                        enum:\n                          - not_found\n                        type: string\n                      message:\n                        type: string\n                      name:\n                        type: string\n                    required:\n                      - code\n                      - message\n                      - name\n                    type: object\n                required:\n                  - error\n                type: object\n          description: Not Found\n      summary: Get a domain for the authenticated user by name\n      tags:\n        - domains\ncomponents:\n  parameters:\n    teamId:\n      description: A team id in case you want to act on behalf of a team\n      in: query\n      name: teamId\n      required: false\n      schema:\n        type: string\n  requestBodies:\n    aliasEvent:\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/event\"\n              - properties:\n                  payload:\n                    properties:\n                      alias:\n                        type: string\n                      aliasId:\n                        type: string\n                      deployment:\n                        $ref: \"#/components/schemas/deployment\"\n                      deploymentId:\n                        type: string\n                      deploymentUrl:\n                        type: string\n                      oldDeploymentId:\n                        type: string\n                      ruleCount:\n                        type: integer\n                    required:\n                      - alias\n                    type: object\n                  type:\n                    enum:\n                      - alias\n                    type: string\n                required:\n                  - type\n                  - payload\n                type: object\n      required: true\n    deploymentErrorEvent:\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/event\"\n              - properties:\n                  payload:\n                    properties:\n                      deployment:\n                        $ref: \"#/components/schemas/deployment\"\n                      deploymentId:\n                        type: string\n                      name:\n                        type: string\n                      plan:\n                        type: string\n                      project:\n                        type: string\n                      regions:\n                        items:\n                          type: string\n                        type: array\n                      type:\n                        enum:\n                          - NPM\n                          - STATIC\n                          - DOCKER\n                          - LAMBDA\n                        type: string\n                      url:\n                        type: string\n                    required:\n                      - deployment\n                      - deploymentId\n                      - name\n                      - plan\n                      - project\n                      - type\n                      - url\n                    type: object\n                  type:\n                    enum:\n                      - deployment-error\n                    type: string\n                required:\n                  - type\n                  - payload\n                type: object\n      required: true\n    deploymentEvent:\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/event\"\n              - properties:\n                  payload:\n                    properties:\n                      deployment:\n                        $ref: \"#/components/schemas/deployment\"\n                      deploymentId:\n                        type: string\n                      name:\n                        type: string\n                      plan:\n                        type: string\n                      project:\n                        type: string\n                      regions:\n                        items:\n                          type: string\n                        type: array\n                      scale:\n                        properties:\n                          bru1:\n                            nullable: true\n                            properties:\n                              maxInstances:\n                                type: integer\n                              minInstances:\n                                type: integer\n                            type: object\n                          iad1:\n                            nullable: true\n                            properties:\n                              maxInstances:\n                                type: integer\n                              minInstances:\n                                type: integer\n                            type: object\n                          sfo1:\n                            nullable: true\n                            properties:\n                              maxInstances:\n                                type: integer\n                              minInstances:\n                                type: integer\n                            type: object\n                        type: object\n                      type:\n                        enum:\n                          - NPM\n                          - STATIC\n                          - DOCKER\n                          - LAMBDA\n                        type: string\n                      url:\n                        type: string\n                    required:\n                      - name\n                      - string\n                    type: object\n                  type:\n                    enum:\n                      - deployment\n                    type: string\n                required:\n                  - type\n                  - payload\n                type: object\n      required: true\n    deploymentReadyEvent:\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/event\"\n              - properties:\n                  payload:\n                    properties:\n                      deployment:\n                        $ref: \"#/components/schemas/deployment\"\n                      deploymentId:\n                        type: string\n                      name:\n                        type: string\n                      plan:\n                        type: string\n                      project:\n                        type: string\n                      regions:\n                        items:\n                          type: string\n                        type: array\n                      type:\n                        enum:\n                          - NPM\n                          - STATIC\n                          - DOCKER\n                          - LAMBDA\n                        type: string\n                      url:\n                        type: string\n                    required:\n                      - deployment\n                      - deploymentId\n                      - name\n                      - plan\n                      - project\n                      - type\n                      - url\n                    type: object\n                  type:\n                    enum:\n                      - deployment-ready\n                    type: string\n                required:\n                  - type\n                  - payload\n                type: object\n      required: true\n    domainDeleteEvent:\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/event\"\n              - properties:\n                  payload:\n                    properties:\n                      domainId:\n                        type: string\n                      name:\n                        type: string\n                    required:\n                      - name\n                    type: object\n                  type:\n                    enum:\n                      - domain-delete\n                    type: string\n                required:\n                  - type\n                  - payload\n                type: object\n      required: true\n    domainEvent:\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/event\"\n              - properties:\n                  payload:\n                    properties:\n                      domainId:\n                        type: string\n                      name:\n                        type: string\n                      zoneId:\n                        type: number\n                    required:\n                      - name\n                    type: object\n                  type:\n                    enum:\n                      - domain\n                    type: string\n                required:\n                  - type\n                  - payload\n                type: object\n      required: true\n    domainVerifyEvent:\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/event\"\n              - properties:\n                  payload:\n                    properties:\n                      domainId:\n                        type: string\n                      name:\n                        type: string\n                    required:\n                      - name\n                    type: object\n                  type:\n                    enum:\n                      - domain-verify\n                    type: string\n                required:\n                  - type\n                  - payload\n                type: object\n      required: true\n  schemas:\n    deployment:\n      properties:\n        id:\n          description: Unique identifier of the deployment\n          type: string\n        meta:\n          properties:\n            BK_JOB_ID:\n              type: string\n            BUILD_NUMBER:\n              type: string\n            CIRCLE_BUILD_URL:\n              type: string\n            CIRCLE_COMPARE_URL:\n              type: string\n            COMMIT:\n              type: string\n            GITHUB_SHA:\n              type: string\n            TRAVIS_BUILD_WEB_URL:\n              type: string\n            created-by:\n              type: string\n            created_by:\n              type: string\n            deploymentPrefix:\n              type: string\n            gitSha:\n              type: string\n            githubCommitAuthorLogin:\n              type: string\n            githubCommitAuthorName:\n              type: string\n            githubCommitMessage:\n              type: string\n            githubCommitOrg:\n              type: string\n            githubCommitRef:\n              type: string\n            githubCommitRepo:\n              type: string\n            githubCommitSha:\n              type: string\n            githubDeployment:\n              type: string\n            githubDeploymentAuthorizedBy:\n              type: string\n            githubOrg:\n              type: string\n            githubPrId:\n              type: string\n            githubRepo:\n              type: string\n            gitlabCommitAuthorAvatar:\n              type: string\n            gitlabCommitAuthorLogin:\n              type: string\n            gitlabCommitAuthorName:\n              type: string\n            gitlabCommitMessage:\n              type: string\n            gitlabCommitRef:\n              type: string\n            gitlabCommitSha:\n              type: string\n            gitlabDeployment:\n              type: string\n            gitlabProjectId:\n              type: string\n            gitlabProjectName:\n              type: string\n            gitlabProjectNamespace:\n              type: string\n            gitlabProjectPath:\n              type: string\n            gl:\n              type: string\n            targetDomain:\n              type: string\n            useOldPipeline:\n              type: string\n          type: object\n        name:\n          type: string\n        url:\n          type: string\n      required:\n        - id\n        - name\n        - url\n        - meta\n    event:\n      properties:\n        created:\n          type: integer\n        createdAt:\n          type: integer\n        id:\n          type: string\n        ownerId:\n          type: string\n        region:\n          type: string\n        teamId:\n          type: string\n        userId:\n          type: string\n      required:\n        - created\n        - id\n        - ownerId\n        - type\n        - userId\n    webhook:\n      description: A webhook subscription with an URL where ZEIT will POST events.\n      properties:\n        configurationId:\n          description: An id that corresponds to the configuration that generated the token that was used to create the webhook\n          type: string\n        createdAt:\n          description: Timestamp that tells when was the webhook created\n          type: integer\n        events:\n          description: An array with the event identifiers that the webhook can receive\n          items:\n            type: string\n          type: array\n        id:\n          description: Id of the webhook\n          type: string\n        name:\n          description: A name for the webhook that serves as a canonical description\n          type: string\n        ownerId:\n          description: Id of the owner which can be a user or a team\n          type: string\n        url:\n          description: The URL where the POST request will be sent\n          type: string\n      required:\n        - id\n        - url\n        - name\n        - events\n        - onwerId\n        - createdAt\n        - configurationId\n  securitySchemes:\n    bearerAuth:\n      scheme: bearer\n      type: http\n    oauthAuthentication:\n      description: This API uses OAuth 2 with the authorizationCode flow\n      flows:\n        authorizationCode:\n          authorizationUrl: https://zeit.co/oauth/authorize\n          scopes: {}\n          tokenUrl: https://api.zeit.co/v2/oauth/access_token\n      type: oauth2\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/zeit.co/v2019-01-07/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/zeit.co/v2019-01-07/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}