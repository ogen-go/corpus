{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/cbsinteractive/hawkeye"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "api.yaml",
			"byteSize": 14306,
			"content": "openapi: 3.0.3\ninfo:\n  title: Hawkeye\n  description: Detect images in a video stream and execute automated actions.\n  version: 1.0.0\n  license:\n    name: MIT\nservers:\n  - url: 'https'\npaths:\n  \"/v1/watchers\":\n    get:\n      summary: List all watchers\n      operationId: handlers::watchers_list\n      responses:\n        \"200\":\n          description: Successfull response.\n          content:\n            application/json:\n              examples:\n                simple:\n                  $ref: '#/components/examples/ListWatchers'\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/WatcherFull'\n    post:\n      summary: Create a new Watcher\n      operationId: handlers::create_watcher\n      requestBody:\n        content:\n          application/json:\n            examples:\n              basic:\n                $ref: '#/components/examples/CreationPayload'\n            schema:\n              $ref: '#/components/schemas/WatcherBase'\n      responses:\n        \"201\":\n          description: Successfull response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WatcherFull'\n\n  \"/v1/watchers/{watcher_id}\":\n    parameters:\n      - $ref: '#/components/parameters/WatcherIdPath'\n    get:\n      summary: Get a Watcher\n      operationId: handlers::get_watcher\n      responses:\n        \"200\":\n          description: Successfull response.\n          content:\n            application/json:\n              examples:\n                basic:\n                  $ref: '#/components/examples/SingleWatcherResult'\n              schema:\n                $ref: '#/components/schemas/WatcherFull'\n    delete:\n      summary: Delete a Watcher\n      operationId: handlers::delete_watcher\n      responses:\n        \"200\":\n          description: Successfull executed operation.\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - message\n                properties:\n                  message:\n                    type: string\n                    description: Description of successfull operation.\n\n  \"/v1/watchers/{watcher_id}/start\":\n    parameters:\n      - $ref: '#/components/parameters/WatcherIdPath'\n    post:\n      summary: Start the Watcher\n      operationId: handlers::start_watcher\n      responses:\n        \"200\":\n          description: Watcher is starting.\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - message\n                properties:\n                  message:\n                    type: string\n                    description: Description of successfull operation.\n\n\n  \"/v1/watchers/{watcher_id}/stop\":\n    parameters:\n      - $ref: '#/components/parameters/WatcherIdPath'\n    post:\n      summary: Stop the Watcher\n      operationId: handlers::stop_watcher\n      responses:\n        \"200\":\n          description: Watcher is stopping.\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - message\n                properties:\n                  message:\n                    type: string\n                    description: Description of successfull operation.\n\n\n  \"/v1/watchers/{watcher_id}/video-frame\":\n    parameters:\n      - $ref: '#/components/parameters/WatcherIdPath'\n    get:\n      summary: Latest video frame\n      description: Expose the latest video frame the Watcher has captured.\n      operationId: handlers::get_video_frame\n      responses:\n        \"200\":\n          description: The image bytes\n          content:\n            image/png:\n              schema:\n                type: string\n                format: binary\ncomponents:\n\n  parameters:\n    WatcherIdPath:\n      name: watcher_id\n      in: path\n      description: The Watcher ID.\n      required: true\n      allowEmptyValue: false\n      schema:\n        type: string\n\n  schemas:\n    WatcherFull:\n      allOf:\n        - type: object\n          required:\n            - id\n          properties:\n            id:\n              type: string\n              description: Unique identifier for the watcher.\n            status:\n              type: string\n              enum:\n                - ready\n                - running\n                - pending\n                - error\n            status_description:\n              type: string\n              description: A more detailed description of the status of the Watcher.\n            source:\n              type: object\n              properties:\n                ingest_ip:\n                  type: string\n                  format: uri\n                  example: dc401bafb-15a.elb.us-east-1.amazonaws.com\n        - $ref: '#/components/schemas/WatcherBase'\n\n    WatcherBase:\n      type: object\n      required:\n        - slate_url\n        - source\n        - transitions\n      properties:\n        description:\n          type: string\n          description: A human readable description of the watcher.\n        slate_url:\n            type: string\n            format: uri\n            description: The slate image url, needs to be publicly accessible.\n        source:\n          type: object\n          description: Sepecify the video source configurations.\n          properties:\n            codec:\n              type: string\n              enum:\n                - h264\n            container:\n              type: string\n              enum:\n                - mpeg-ts\n                - raw_video\n            ingest_port:\n              type: number\n              description: Port to be used by the server to receive the video feed.\n            transport:\n              type: object\n              properties:\n                protocol:\n                  type: string\n                  enum:\n                    - rtp\n                  description: Protocol the watcher is expecting to receive the video feed.\n        transitions:\n          type: array\n          items:\n            type: object\n            properties:\n              actions:\n                type: array\n                items:\n                  oneOf:\n                    - $ref: '#/components/schemas/HttpCallAction'\n              from:\n                type: string\n                enum:\n                  - content\n                  - slate\n              to:\n                type: string\n                enum:\n                  - content\n                  - slate\n\n    Action:\n      type: object\n      properties:\n        description:\n          type: string\n          description: Description of the action.\n\n    HttpCallAction:\n      allOf:\n        - $ref: '#/components/schemas/Action'\n        - type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - http_call\n            authorization:\n              type: object\n              properties:\n                basic:\n                  type: object\n                  properties:\n                    username:\n                      type: string\n                    password:\n                      type: string\n            body:\n              type: string\n              description: Body of the request to be used.\n            headers:\n              type: object\n              description: Key value pair of headers the action HTTP call should use.\n            method:\n              type: string\n              enum:\n                - POST\n                - GET\n                - PUT\n                - PATCH\n                - DELETE\n            retires:\n              type: number\n              description: Number of times the action should be retried.\n            timeout:\n              type: number\n              description: Timeout in seconds for the HTTP request to execute.\n\n  examples:\n\n    ListWatchers:\n      description: A list of Wachers as it is returned by the API.\n      value:\n        [\n          {\n            \"id\": \"ad128d51-9a1c-407d-9edb-d590eb9c3d74\",\n            \"description\": \"Test watcher\",\n            \"slate_url\": \"https://github.com/cbsinteractive/hawkeye/raw/master/resources/slate_120px.jpg\",\n            \"source\": {\n              \"ingest_ip\": \"uniqueservername.example.com\",\n              \"ingest_port\": 5000,\n              \"container\": \"raw-video\",\n              \"codec\": \"h264\",\n              \"transport\": {\n                \"protocol\": \"rtp\"\n              }\n            },\n            \"status\": \"ready\",\n            \"transitions\": [\n              {\n                \"from\": \"content\",\n                \"to\": \"slate\",\n                \"actions\": [\n                  {\n                    \"description\": \"Trigger AdBreak using API\",\n                    \"type\": \"http_call\",\n                    \"method\": \"POST\",\n                    \"retries\": 3,\n                    \"timeout\": 10,\n                    \"url\": \"http://api.example.com/v1/organization/cbsa6fhh/channel/slate4g85/ad-break\",\n                    \"authorization\": {\n                      \"basic\": {\n                        \"username\": \"myusername\",\n                        \"password\": \"somepassword\"\n                      }\n                    },\n                    \"headers\": {\n                      \"Content-Type\": \"application/json\"\n                    },\n                    \"body\": \"{\\\"duration\\\":300}\"\n                  }\n                ]\n              },\n              {\n                \"from\": \"slate\",\n                \"to\": \"content\",\n                \"actions\": [\n                  {\n                    \"description\": \"Use dump out of AdBreak API call\",\n                    \"type\": \"http_call\",\n                    \"method\": \"DELETE\",\n                    \"timeout\": 10,\n                    \"url\": \"http://api.example.com/v1/organization/cbsa6fhh/channel/slate4g85/ad-break\",\n                    \"authorization\": {\n                      \"basic\": {\n                        \"username\": \"myusername\",\n                        \"password\": \"somepassword\"\n                      }\n                    }\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n\n    SingleWatcherResult:\n      description: Watcher that is returned by the API.\n      value:\n        {\n          \"id\": \"ad128d51-9a1c-407d-9edb-d590eb9c3d74\",\n          \"description\": \"Test watcher\",\n          \"slate_url\": \"https://github.com/cbsinteractive/hawkeye/raw/master/resources/slate_120px.jpg\",\n          \"source\": {\n            \"ingest_ip\": \"uniqueservername.example.com\",\n            \"ingest_port\": 5000,\n            \"container\": \"raw-video\",\n            \"codec\": \"h264\",\n            \"transport\": {\n              \"protocol\": \"rtp\"\n            }\n          },\n          \"status\": \"ready\",\n          \"transitions\": [\n            {\n              \"from\": \"content\",\n              \"to\": \"slate\",\n              \"actions\": [\n                {\n                  \"description\": \"Trigger AdBreak using API\",\n                  \"type\": \"http_call\",\n                  \"method\": \"POST\",\n                  \"retries\": 3,\n                  \"timeout\": 10,\n                  \"url\": \"http://api.example.com/v1/organization/cbsa6fhh/channel/slate4g85/ad-break\",\n                  \"authorization\": {\n                    \"basic\": {\n                      \"username\": \"myusername\",\n                      \"password\": \"somepassword\"\n                    }\n                  },\n                  \"headers\": {\n                    \"Content-Type\": \"application/json\"\n                  },\n                  \"body\": \"{\\\"duration\\\":300}\"\n                }\n              ]\n            },\n            {\n              \"from\": \"slate\",\n              \"to\": \"content\",\n              \"actions\": [\n                {\n                  \"description\": \"Use dump out of AdBreak API call\",\n                  \"type\": \"http_call\",\n                  \"method\": \"DELETE\",\n                  \"timeout\": 10,\n                  \"url\": \"http://api.example.com/v1/organization/cbsa6fhh/channel/slate4g85/ad-break\",\n                  \"authorization\": {\n                    \"basic\": {\n                      \"username\": \"myusername\",\n                      \"password\": \"somepassword\"\n                    }\n                  }\n                }\n              ]\n            }\n          ]\n        }\n\n    CreationPayload:\n      description: A valid JSON payload that can be used to create a Watcher.\n      value:\n        {\n          \"description\": \"Test watcher\",\n          \"slate_url\": \"https://github.com/cbsinteractive/hawkeye/raw/master/resources/slate_120px.jpg\",\n          \"source\": {\n            \"ingest_port\": 5000,\n            \"container\": \"raw-video\",\n            \"codec\": \"h264\",\n            \"transport\": {\n              \"protocol\": \"rtp\"\n            }\n          },\n          \"transitions\": [\n            {\n              \"from\": \"content\",\n              \"to\": \"slate\",\n              \"actions\": [\n                {\n                  \"description\": \"Trigger AdBreak using API\",\n                  \"type\": \"http_call\",\n                  \"method\": \"POST\",\n                  \"retries\": 3,\n                  \"timeout\": 10,\n                  \"url\": \"http://api.example.com/v1/organization/cbsa6fhh/channel/slate4g85/ad-break\",\n                  \"authorization\": {\n                    \"basic\": {\n                      \"username\": \"myusername\",\n                      \"password\": \"somepassword\"\n                    }\n                  },\n                  \"headers\": {\n                    \"Content-Type\": \"application/json\"\n                  },\n                  \"body\": \"{\\\"duration\\\":300}\"\n                }\n              ]\n            },\n            {\n              \"from\": \"slate\",\n              \"to\": \"content\",\n              \"actions\": [\n                {\n                  \"description\": \"Use dump out of AdBreak API call\",\n                  \"type\": \"http_call\",\n                  \"method\": \"DELETE\",\n                  \"timeout\": 10,\n                  \"url\": \"http://api.example.com/v1/organization/cbsa6fhh/channel/slate4g85/ad-break\",\n                  \"authorization\": {\n                    \"basic\": {\n                      \"username\": \"myusername\",\n                      \"password\": \"somepassword\"\n                    }\n                  }\n                }\n              ]\n            }\n          ]\n        }\n\n",
			"canonicalURL": "/github.com/cbsinteractive/hawkeye@21d2505f001596a30791d66fba549ae95e57ec2e/-/blob/api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/cbsinteractive/hawkeye/blob/21d2505f001596a30791d66fba549ae95e57ec2e/api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}