{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stichtingsem/technology-prototype"
		},
		"file": {
			"name": "catalogue.v1.yaml",
			"size": 0,
			"path": "reference/catalogue.v1.yaml",
			"byteSize": 10174,
			"content": "openapi: 3.0.0\ninfo:\n  title: Provider Catalogue API\n  version: '1.0'\n  description: |-\n    This API enables a learning application provider (or anyone who wants to sell products in a Marketplace) to provide information about their products to a Marketplace.\n\n    It is envisaged that the service implementing this API, also implements the generic [Events](https://stichtingsem.stoplight.io/docs/sem-technology-prototype/reference/events.v1.yaml) and [Webhooks](https://stichtingsem.stoplight.io/docs/sem-technology-prototype/reference/webhooks.v1.yaml) API to enable subscription to changes vs polling.\n\n    ## Scopes and Data\n\n    It is envisaged that when a connection is made between a Marketplace and a Learning Application, that the API Key then provided is connected to that specific marketplace. \n\n    This connection ensures that the Learning Application can provide information that may be specific to commercial agreements with a specific marketplace (e.g. pricing information).\n\n    This specification provides the placeholders for this information to be exchanged, but has no restriction on what is agreed between parties offline.\n  contact:\n    name: Stichting SEM\n    url: 'https://stichtingsem.org/'\nservers:\n  - url: 'https://example.stichtingsem.org/api'\n    description: catalogue\npaths:\n  /products:\n    get:\n      summary: Get Products from Catalogue\n      tags: []\n      parameters:\n        - in: query\n          name: subjectCode\n          description: |\n            Filter by specific subject code\n          schema:\n            type: string\n            example: math\n        - in: query\n          name: level\n          description: |\n            Filter by specific level\n          schema:\n            type: string\n            example: havo-1\n        - in: query\n          name: start\n          description: 'Start point for pagination of results, defaults to 0,'\n          schema:\n            type: integer\n            format: int32\n          examples:\n            default:\n              value: 0\n              summary: The start point for pagination\n        - in: query\n          name: limit\n          description: 'Limit of number of results returned by page, defaults to 20 with max 100.'\n          schema:\n            type: integer\n            maximum: 100\n            format: int32\n          examples:\n            default:\n              value: 20\n              summary: The default value if none is provided\n            max:\n              value: 100\n              summary: The largest recommended page size\n        - schema:\n            type: string\n            enum:\n              - active\n              - not-for-sale\n          in: query\n          name: status\n          description: |\n            Filter by status\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Product'\n      operationId: get-products\n      description: Get products from the catalogue - either all or those matching specific criteria.\n  '/product/{ean}':\n    parameters:\n      - schema:\n          type: string\n        name: ean\n        in: path\n        required: true\n    get:\n      summary: Get specific Product by ID\n      tags: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Product'\n      operationId: get-product-ean\n      description: Get a specific product by EAN\ncomponents:\n  schemas:\n    Product:\n      title: Product\n      type: object\n      description: A product that is available for sale or selection within a marketplace.  This entity captures the basic commercial information needed for selection and sale.\n      x-tags:\n        - catalogue\n      properties:\n        ean:\n          type: string\n          description: |\n            The unique EAN for this product.\n        type:\n          type: string\n          description: |\n            Type of product\n          enum:\n            - physical\n            - digital\n            - blended\n        status:\n          type: string\n          description: |\n            Status of product\n          enum:\n            - active\n            - not-for-sale\n        name:\n          type: string\n          description: A short name\n        streams:\n          type: array\n          description: The groupings (e.g method or methods) that this product is a part of.\n          items:\n            $ref: '#/components/schemas/Stream'\n        levelSubjects:\n          type: array\n          description: The set of levels and subjects that this product is targeted at.\n          items:\n            $ref: '#/components/schemas/LevelSubjects'\n        models:\n          type: array\n          description: |\n            Business models that are available for this product to be sold under.\n          items:\n            $ref: '#/components/schemas/BusinessModel'\n        trialAccessUrl:\n          type: string\n          description: Optional trial / preview URL.\n        defaultAccessUrl:\n          type: string\n          description: The default url used to access the product after selection or purchase.\n        shortDescription:\n          type: string\n          description: |\n            Short description for display on search pages or other marketing blocks.\n        longDescription:\n          type: string\n          description: |\n            Long description for display on a product page.\n        media:\n          type: object\n          description: A collection of media for use in the marketplace.\n          properties:\n            mainThumbnailUrl:\n              $ref: '#/components/schemas/Media'\n            productImageUrls:\n              type: array\n              description: A collection of image urls for a product.\n              items:\n                $ref: '#/components/schemas/Media'\n            productVideoUrls:\n              type: array\n              description: A collection of video urls for a product.\n              items:\n                $ref: '#/components/schemas/Media'\n            productPdfUrls:\n              type: array\n              description: A collection of PDF links for a product.\n              items:\n                $ref: '#/components/schemas/Media'\n        relatedProducts:\n          type: array\n          description: |\n            An array of related product ID's (for display alongside a product in a marketplace).\n          items:\n            type: string\n        bundledProducts:\n          type: array\n          description: A link to any other products that are included in this one if it is a package / bundle.\n          items:\n            type: string\n      required:\n        - ean\n        - type\n        - name\n        - models\n        - defaultAccessUrl\n        - shortDescription\n    BusinessModel:\n      title: BusinessModel\n      type: object\n      description: |-\n        The model under which a product can be sold in the marketplace, this is later communicated back at the point of selection so that the provider understands what additional steps may need to be taken (depending on the business model selected).\n\n        The list of possible models is not defined within this specification, it is entirely up to each Marketplace and Provider to agree.\n      properties:\n        id:\n          type: string\n          description: Unique identifier of the business model recognised by both the marketplace and the learning application.\n          example: 24e39454-5360-4ba4-819f-03e59b8dd679\n        name:\n          type: string\n          description: |\n            A description of the business model so it can be displayed in the Marketplace or LMS if needed.\n          example: pre-pay\n        description:\n          type: string\n          description: A longer description of the business model - used optionally for display in the marketplace if needed.\n          example: 'Pre-Pay: This product must be paid for before it can be used.'\n        price:\n          type: number\n          description: |\n            The price under which it is sold under this model, this may be exchanged via other mechanisms between parties, so is optional.\n        price_period:\n          type: string\n          description: |\n            The period the price applies to (optional - for recurring subscriptions; e.g. month, year).\n        price_currency:\n          type: string\n          description: |\n            EUR etc.\n      required:\n        - id\n        - name\n      x-tags:\n        - catalogue\n    Media:\n      title: Media\n      type: object\n      properties:\n        url:\n          type: string\n        type:\n          type: string\n        description:\n          type: string\n        width:\n          type: string\n        height:\n          type: string\n      description: 'A reference to a video, image or document that can be used by a Marketplace (or LMS).'\n      x-tags:\n        - catalogue\n    ProductComponents:\n      title: ProductComponents\n      type: object\n      properties:\n        id:\n          type: string\n      description: Sub-elements of the product - used for scheduling in the LMS?  We could probably create a better name.\n      x-tags:\n        - planning\n    Stream:\n      title: Stream\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n      description: A grouping of products into a set - like a method (?)\n    LevelSubjects:\n      title: LevelSubjects\n      type: object\n      description: The combination of level and subject that indicates what a product is targeted at.\n      properties:\n        level:\n          type: string\n          description: Government level - e.g. havo-1\n        subjectCode:\n          type: string\n          description: |\n            Subject code for specific subject at this level\n  securitySchemes:\n    API Key - 1:\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: ''\n          refreshUrl: ''\n          scopes:\n            la.catalogue: Access to the basic provider catalogue\n",
			"canonicalURL": "/github.com/stichtingsem/technology-prototype@3bf27b60f5566865821b0496df27c73dc3e3c5e2/-/blob/reference/catalogue.v1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stichtingsem/technology-prototype/blob/3bf27b60f5566865821b0496df27c73dc3e3c5e2/reference/catalogue.v1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}