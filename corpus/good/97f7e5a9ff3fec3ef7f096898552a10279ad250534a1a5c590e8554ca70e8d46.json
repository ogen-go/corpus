{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/dmca-services/api"
		},
		"file": {
			"name": "dmca-2.1.1.yaml",
			"size": 0,
			"path": "dmca-2.1.1.yaml",
			"byteSize": 21864,
			"content": "openapi: 3.0.1\ninfo:\n  title: DMCA API\n  description: \"This is the documentation for dmca services API. You can create a\n     free account at dmca.com for use with many of these API calls.You can also use\n     any existing DMCA account.\\n\\n[Visit DMCA.com for access to this API ](https://www.dmca.com?api)\n     \"\n  termsOfService: https://www.dmca.com/TermsOfService\n  version: 2.1.1\nservers:\n- url: https://api.dmca.com\ntags:\n- name: Public API\n  description: Common API methods for using DMCA services\n  externalDocs:\n    description: Find out more\n    url: https://www.dmca.com/?r=oasapi\n- name: DMCA Takedowns Public API\n  description: CRUD Operations for DMCA Cases\n  externalDocs:\n    description: Find out more\n    url: https://www.dmca.com/takedowns.aspx?r=oasapi\n- name: DMCA DIY Cases\n  description: CRUD Operations for do-it-yourself (DIY cases - not managed or processed)\n  externalDocs:\n    description: Find out more\n    url: https://www.dmca.com/ProtectionPro.aspx#DIYCaseManagement?r=oasapi\n- name: DMCA Compliance API\n  description: CRUD Operations for DMCA Compliance\n  externalDocs:\n    description: Find out more\n    url: https://www.dmca.com/compliant.aspx?r=oasapi\n- name: DMCA Badges\n  description: Management and CRUD Operations for DMCA Badge related services\n  externalDocs:\n    description: Find out more\n    url: https://www.dmca.com/badges.aspx\n- name: DMCA.com Affiliate\n  description: Common API methods for using DMCA services\n  externalDocs:\n    description: Find out more\n    url: https://www.dmca.com/Affiliates/Signup.aspx?r=oasapi\n- name: DMCA Site Report\n  description: Common API methods for using DMCA services\n  externalDocs:\n    description: Find out more\n    url: https://www.dmca.com/?r=oasapi\npaths:\n  /register:\n    post:\n      tags:\n      - Public API\n      summary: register a new user for dmca.com and this API\n      description: Registers a new dmca.com user and returns a badge ID. A confirmation\n        email will be sent to the email provided with login instructions.\n      operationId: /register/post\n      requestBody:\n        description: create a new child object under your account\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/newUserObj'\n        required: true\n      responses:\n        200:\n          description: Success operation\n        401:\n          description: Failed operation\n      security:\n      - apikeyQuery: []\n  /login:\n    post:\n      tags:\n      - Public API\n      summary: login to the DMCA.com API\n      description: Logs you in with standard email and password credentials, returns\n        a token for use in API calls. Please make sure you're only doing this in the\n        !!BODY!! with !!HTTPS only!!. HTTPS is MANDATORY.\n      operationId: /login/post\n      requestBody:\n        description: create a new child object under your account\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/loginObj'\n        required: true\n      responses:\n        200:\n          description: Success operation\n        401:\n          description: Failed operation\n      security:\n      - apikeyQuery: []\n  /createCase:\n    post:\n      tags:\n      - DMCA Takedowns Public API\n      summary: Creates a new takedown case and returns a case ID\n      description: Creates a Takedown case to be processed by DMCA.com, the user that's\n        creating the case will get a case creation email notice\n      operationId: /createCase/post\n      parameters:\n      - name: Token\n        in: header\n        description: Security token from Login method or from API section of DMCA.com\n          website\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        description: create a new dmca takedown case object under your account\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/createCaseObj'\n        required: true\n      responses:\n        200:\n          description: Success operation - Returns Case ID\n        429:\n          description: Failed request - Rate limit exceeded\n      security:\n      - apikeyQuery: []\n  /updateCase:\n    post:\n      tags:\n      - DMCA Takedowns Public API\n      summary: Updates an existing takedown case and returns a case ID\n      description: Updates an existing case object. Max 100 executions per day (email\n        api@dmca.com to have limit increased) Parameter names are case sensitive\n      operationId: /updateCase/post\n      parameters:\n      - name: Token\n        in: header\n        description: Security token from Login method or from API section of DMCA.com\n          website\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        description: create a new dmca takedown case object under your account\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/updateCaseObj'\n        required: true\n      responses:\n        200:\n          description: Success operation - Returns Case ID\n      security:\n      - apikeyQuery: []\n  /listCases:\n    get:\n      tags:\n      - DMCA Takedowns Public API\n      summary: gets a list of account cases\n      description: Returns a list of takedown cases associated with the account\n      operationId: /listCases/get\n      parameters:\n      - name: Token\n        in: header\n        description: Security token from Login method or from API section of DMCA.com\n          website\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: page\n        in: query\n        description: allows for paging through result set, max results is 50 per page.\n          i.e. page=3\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: number\n      responses:\n        200:\n          description: Success operation - Returns list of cases\n      security:\n      - apikeyQuery: []\n  /getCaseById:\n    get:\n      tags:\n      - DMCA Takedowns Public API\n      - DMCA Compliance API\n      - DMCA DIY Cases\n      summary: gets a case by its ID, must be owned by the API users account\n      description: Returns a single case object\n      operationId: /getCaseById/get\n      parameters:\n      - name: Token\n        in: header\n        description: Security token from Login method or from API section of DMCA.com\n          website\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: id\n        in: query\n        description: case the ID that's returned by listCases or createCase method\n        required: true\n        style: form\n        explode: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success operation - Returns the requested case object\n        404:\n          description: Failed operation - Case not found\n      security:\n      - apikeyQuery: []\n  /listDIYCases:\n    get:\n      tags:\n      - DMCA DIY Cases\n      summary: Gets a list of DIY cases on your account\n      description: Returns a list of takedown cases associated with the account\n      operationId: /listDIYCases/get\n      parameters:\n      - name: Token\n        in: header\n        description: Security token from Login method or from API section of DMCA.com\n          website\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: page\n        in: query\n        description: allows for paging through result set, max results is 50 per page.\n          i.e. page=3\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: number\n      responses:\n        200:\n          description: Success operation - Returns list of cases\n      security:\n      - apikeyQuery: []\n  /createDIYCase:\n    post:\n      tags:\n      - DMCA DIY Cases\n      summary: Creates a new DIY takedown case\n      description: Creates a new DIY Case and returns its ID (A free do it yourself\n        takedown case). This will not be reviewed, processed or sent anywhere.\n      operationId: /createDIYCase/post\n      parameters:\n      - name: Token\n        in: header\n        description: Security token from Login method or from API section of DMCA.com\n          website\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        description: create a new DIY case object under your account\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/createDIYCaseObj'\n        required: true\n      responses:\n        200:\n          description: Success operation - Returns Case ID\n      security:\n      - apikeyQuery: []\n  /createComplianceCase:\n    post:\n      tags:\n      - DMCA Compliance API\n      summary: Creates a new compliance case for site specified\n      description: On Accounts with compliance case submission services enabled this\n        method will add a case to the compliance list on the site owners account.\n        The site must have this service enabled.\n      operationId: /createComplianceCase/post\n      requestBody:\n        description: create a new compliance case under the site id provided\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/complianceCaseObj'\n        required: true\n      responses:\n        200:\n          description: Success operation - Returns Case ID. Case creation email will\n            be sent\n      security:\n      - apikeyQuery: []\n  /listComplianceCases:\n    get:\n      tags:\n      - DMCA Compliance API\n      summary: Gets a list of Compliance cases\n      description: Returns a list of takedown cases associated with the account\n      operationId: /listComplianceCases/get\n      parameters:\n      - name: Token\n        in: header\n        description: Security token from Login method or from API section of DMCA.com\n          website\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: page\n        in: query\n        description: allows for paging through result set, max results is 50 per page.\n          i.e. page=3\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: number\n      responses:\n        200:\n          description: Success operation - Returns list of cases\n      security:\n      - apikeyQuery: []\n  /queuePage:\n    get:\n      tags:\n      - DMCA Badges\n      summary: Queue a page to be scanned\n      description: Queue a page to scanned\n      operationId: /queuePage/get\n      parameters:\n      - name: id\n        in: query\n        description: badge id\n        required: true\n        style: form\n        explode: true\n        schema:\n          type: string\n      - name: refurl\n        in: query\n        description: url to be scanned. should include https:// or http://\n        required: true\n        style: form\n        explode: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success operation\n      security:\n      - apikeyQuery: []\n  /getRegisteredBadges:\n    get:\n      tags:\n      - DMCA Badges\n      summary: Get DMCA badge embed codes\n      description: Use this to generate badge codes for a given badge / account\n      operationId: /getRegisteredBadges/get\n      parameters:\n      - name: AccountID\n        in: query\n        description: badge or account id\n        required: true\n        style: form\n        explode: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success operation\n      security:\n      - apikeyQuery: []\n  /registerAffiliate:\n    post:\n      tags:\n      - DMCA.com Affiliate\n      summary: Registers a child account\n      description: Creates a new affiliate / child account and returns the new child\n        account username and pw. Child account will be emailed to confirm\n      operationId: /registerAffiliate/post\n      parameters:\n      - name: Token\n        in: header\n        description: Security token from Login method or from API section of DMCA.com\n          website\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        description: create a new child object under your account\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/newChildObj'\n        required: true\n      responses:\n        200:\n          description: Success operation\n        401:\n          description: Failed operation\n      security:\n      - apikeyQuery: []\n  /listAffiliates:\n    get:\n      tags:\n      - DMCA.com Affiliate\n      summary: Returns list of child accounts\n      description: Returns a list of affiliate under your account\n      operationId: /listAffiliates/get\n      parameters:\n      - name: page\n        in: query\n        description: allows for paging through result set, max results is 50 per page.\n          i.e. page=3\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: number\n      - name: Token\n        in: header\n        description: Security token from Login method or from API section of DMCA.com\n          website\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success operation - Returns list of affiliates\n      security:\n      - apikeyQuery: []\n  /getAffiliateStats:\n    get:\n      tags:\n      - DMCA.com Affiliate\n      summary: Returns commission report\n      description: Returns a breakdown of orders that have come in, what will be paid\n        or whats owed\n      operationId: /getAffiliateStats/get\n      parameters:\n      - name: Token\n        in: header\n        description: Security token from Login method or from API section of DMCA.com\n          website\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: page\n        in: query\n        description: allows for paging through result set, max results is 50 per page.\n          i.e. page=3\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: number\n      responses:\n        200:\n          description: Success operation - Returns list of affiliates\n      security:\n      - apikeyQuery: []\n  /resetChildPw:\n    post:\n      tags:\n      - DMCA.com Affiliate\n      summary: Reset and resend the pw of a child account\n      description: This operation will reset and resend a new PW to a child account.\n        It will first verify that the child account belongs to the corresponding security\n        token\n      operationId: /resetChildPw/post\n      parameters:\n      - name: Token\n        in: header\n        description: Security token from Login method or from API section of DMCA.com\n          website\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        description: email address of the child account  to have its password reset\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/emailObj'\n        required: true\n      responses:\n        200:\n          description: Success operation\n        401:\n          description: Failed operation\n      security:\n      - apikeyQuery: []\n  /enableProtectionPro:\n    post:\n      tags:\n      - DMCA.com Affiliate\n      summary: Enable Protection Pro on affiliate/child account\n      description: This operation will enable protection pro on the account specified.\n        They will receive a welcome email that will direct them into the dmca.com\n        dashboard.\n      operationId: /enableProtectionPro/post\n      parameters:\n      - name: childAccountId\n        in: query\n        description: account id of the child account to be upgraded\n        required: true\n        style: form\n        explode: true\n        schema:\n          type: string\n      - name: Token\n        in: header\n        description: Security token from Login method or from API section of DMCA.com\n          website\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success operation\n        401:\n          description: Failed operation\n      security:\n      - apikeyQuery: []\n  /disableProtectionPro:\n    post:\n      tags:\n      - DMCA.com Affiliate\n      summary: Disable Protection Pro on affiliate/child account\n      description: This operation will disable protection pro on the account specified.\n      operationId: /disableProtectionPro/post\n      parameters:\n      - name: childAccountId\n        in: query\n        description: account id of the child account to be upgraded\n        required: true\n        style: form\n        explode: true\n        schema:\n          type: string\n      - name: Token\n        in: header\n        description: Security token from Login method or from API section of DMCA.com\n          website\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success operation\n        401:\n          description: Failed operation\n      security:\n      - apikeyQuery: []\n  /getSiteReport/{domain}:\n    get:\n      tags:\n      - DMCA Site Report\n      summary: Returns a single site report object\n      description: Returns a single site report object. If the site report (profile)\n        for the given domain doesn't exist, the base record will be created but will\n        still need to be claimed, validated etc. to be edited.\n      operationId: /getSiteReport/{domain}\n      parameters:\n      - name: domain\n        in: path\n        description: the fully qualified domain name of the site report\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success operation\ncomponents:\n  schemas:\n    createCaseObj:\n      type: object\n      properties:\n        subject:\n          type: string\n        description:\n          type: string\n        copiedFromUrl:\n          type: string\n        infringingUrl:\n          type: string\n        infringingSiteIp:\n          type: string\n      xml:\n        name: createCaseObj\n    createDIYCaseObj:\n      type: object\n      properties:\n        subject:\n          type: string\n        description:\n          type: string\n        copiedFromUrl:\n          type: string\n        infringingUrl:\n          type: string\n        infringingSiteIp:\n          type: string\n        type:\n          type: string\n          enum:\n          - Business - General\n          - Personal - General\n          - Toolkit Business Request CAN\n          - Toolkit Business Request EU\n          - Toolkit Personal Request CAN\n          - Toolkit Personal Request EU\n          - Toolkit Personal Request India\n          - Toolkit Business Request India\n      xml:\n        name: createCaseObj\n    updateCaseObj:\n      type: object\n      properties:\n        case_id:\n          type: string\n        status:\n          type: string\n        subject:\n          type: string\n        description:\n          type: string\n        copiedFromUrl:\n          type: string\n        infringingUrl:\n          type: string\n        infringingSiteIp:\n          type: string\n        priority:\n          type: string\n      xml:\n        name: updateCaseObj\n    complianceCaseObj:\n      type: object\n      properties:\n        submitterEmail:\n          type: string\n        submitterFirstName:\n          type: string\n        submitterLastName:\n          type: string\n        submitterCompanyName:\n          type: string\n        description:\n          type: string\n        copiedFromUrl:\n          type: string\n        infringingUrl:\n          type: string\n        infringingSiteIp:\n          type: string\n        siteId:\n          type: string\n          description: id of the site the case is being submitted to. (note the site\n            owner must have this feature enabled)\n      xml:\n        name: complianceCaseObj\n    newChildObj:\n      type: object\n      properties:\n        FirstName:\n          type: string\n        LastName:\n          type: string\n        ClientEmail:\n          type: string\n          description: New clients email\n          example: john@dmca.com\n        CompanyName:\n          type: string\n        AffiliateToken:\n          type: string\n          description: 10 digit affiliate token\n      xml:\n        name: newChildObj\n    newUserObj:\n      type: object\n      properties:\n        FirstName:\n          type: string\n        LastName:\n          type: string\n        Email:\n          type: string\n          description: email address. (will be emailed to validate)\n          example: john@dmca.com\n        CompanyName:\n          type: string\n        mpi:\n          type: string\n          description: Main Product Interest\n          enum:\n          - Protection Pro\n          - DMCA Takedowns\n          - DMCA Compliance\n      xml:\n        name: newUserObj\n    loginObj:\n      type: object\n      properties:\n        email:\n          type: string\n          example: john@dmca.com\n        password:\n          type: string\n      xml:\n        name: loginObj\n    emailObj:\n      type: object\n      properties:\n        ClientEmail:\n          type: string\n          example: john@dmca.com\n      xml:\n        name: emailObj\n  securitySchemes:\n    apikeyQuery:\n      type: apiKey\n      name: Token\n      in: header\n",
			"canonicalURL": "/github.com/dmca-services/api@cade32010c61e06d152faa659570cfb8f8b6af7a/-/blob/dmca-2.1.1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/dmca-services/api/blob/cade32010c61e06d152faa659570cfb8f8b6af7a/dmca-2.1.1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}