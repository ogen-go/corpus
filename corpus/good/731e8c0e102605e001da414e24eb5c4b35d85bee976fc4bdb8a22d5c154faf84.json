{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "vonage.com-account-1.11.7-openapi.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/vonage.com-account-1.11.7-openapi.yaml",
			"byteSize": 8411,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://api.vonage.com/t/vbc.prod/provisioning\ninfo:\n  contact:\n    name: Account API\n    url: https://businesssupport.vonage.com/contactus\n  description: Retrieve information about accounts.\n  license:\n    name: Vonage\n    url: https://www.vonage.com/business/legal-policy-center/business-cloud/tos\n  title: Account\n  version: 1.11.7\n  x-origin:\n    - converter:\n        url: https://github.com/lucybot/api-spec-converter\n        version: 2.7.31\n      format: openapi\n      url: https://raw.githubusercontent.com/nexmo/api-specification/master/definitions/vonage-business-cloud/account.yml\n      version: \"3.0\"\n  x-providerName: vonage.com\n  x-serviceName: account\npaths:\n  \"/api/accounts/{account_id}\":\n    get:\n      operationId: AccountCtrl.getAccountServicesByAccountID\n      parameters:\n        - $ref: \"#/components/parameters/AccountID\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccountHalResponse\"\n          description: Success\n        \"404\":\n          description: Account not found\n      security:\n        - bearerAuth: []\n      summary: Get account data by ID\n  \"/api/accounts/{account_id}/locations\":\n    get:\n      operationId: AccountCtrl.getLocationsByAccountID\n      parameters:\n        - $ref: \"#/components/parameters/AccountID\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LocationsHalResponse\"\n          description: Success\n      security:\n        - bearerAuth: []\n      summary: Get account locations data by account ID\n  \"/api/accounts/{account_id}/locations/{location_id}\":\n    get:\n      operationId: AccountCtrl.getLocationByID\n      parameters:\n        - $ref: \"#/components/parameters/AccountID\"\n        - description: The location ID\n          example: 123456\n          in: path\n          name: location_id\n          required: true\n          schema:\n            type: number\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LocationHalResponse\"\n          description: Success\n        \"404\":\n          description: Location not found\n      security:\n        - bearerAuth: []\n      summary: Get location data by account ID and location ID\ncomponents:\n  parameters:\n    AccountID:\n      description: The account ID\n      example: 123456\n      in: path\n      name: account_id\n      required: true\n      schema:\n        type: number\n  schemas:\n    Account:\n      properties:\n        address:\n          $ref: \"#/components/schemas/Address\"\n        id:\n          description: Unique identifier of the account\n          example: 123456\n          type: number\n        name:\n          description: Name of the account\n          example: Vonage\n          type: string\n        status:\n          description: Status of the account\n          example: ACTIVE\n          type: string\n      type: object\n    AccountEmbeddedObject:\n      description: Account object\n      properties:\n        data:\n          $ref: \"#/components/schemas/Account\"\n      type: object\n    AccountHalResponse:\n      properties:\n        _embedded:\n          $ref: \"#/components/schemas/AccountEmbeddedObject\"\n        _links:\n          $ref: \"#/components/schemas/Links\"\n        page:\n          description: Current page number\n          example: 1\n          type: number\n        page_size:\n          description: Number of records per page\n          example: 100\n          type: number\n        total_items:\n          description: Total number of records\n          example: 100\n          type: number\n        total_pages:\n          description: Total number of pages\n          example: 10\n          type: number\n      type: object\n    Address:\n      properties:\n        address_1:\n          description: Street portion of the address\n          example: 123 Example Street\n          type: string\n        address_2:\n          description: Additional address information\n          example: Apt. 456\n          type: string\n        city:\n          description: City name\n          example: Holmdel\n          type: string\n        country:\n          description: Country code\n          example: US\n          type: string\n        postal_code:\n          description: Postal code\n          example: \"07733\"\n          type: string\n        state:\n          description: State/Province code\n          example: NJ\n          type: string\n      type: object\n    AddressWithTimeZone:\n      properties:\n        address_1:\n          description: Street portion of the address\n          example: 123 Example Street\n          type: string\n        address_2:\n          description: Additional address information\n          example: Apt. 456\n          type: string\n        city:\n          description: City name\n          example: Holmdel\n          type: string\n        country:\n          description: Country code\n          example: US\n          type: string\n        postal_code:\n          description: Postal code\n          example: \"07733\"\n          type: string\n        state:\n          description: State/Province code\n          example: NJ\n          type: string\n        time_zone:\n          description: Time zone\n          example: America/New York\n          type: string\n      type: object\n    FirstHref:\n      description: URL to the first page of records\n      properties:\n        href:\n          type: string\n      type: object\n    LastHref:\n      description: URL to the last page of records\n      properties:\n        href:\n          type: string\n      type: object\n    Links:\n      properties:\n        first:\n          $ref: \"#/components/schemas/FirstHref\"\n        last:\n          $ref: \"#/components/schemas/LastHref\"\n        next:\n          $ref: \"#/components/schemas/NextHref\"\n        prev:\n          $ref: \"#/components/schemas/PrevHref\"\n        self:\n          $ref: \"#/components/schemas/SelfHref\"\n      type: object\n    Location:\n      properties:\n        address:\n          $ref: \"#/components/schemas/AddressWithTimeZone\"\n        id:\n          description: Unique identifier of the location\n          example: 123456\n          type: number\n        name:\n          description: Name of the location\n          example: Headquarters\n          type: string\n      type: object\n    LocationEmbeddedObject:\n      description: Location object\n      properties:\n        data:\n          $ref: \"#/components/schemas/Location\"\n      type: object\n    LocationHalResponse:\n      properties:\n        _embedded:\n          $ref: \"#/components/schemas/LocationEmbeddedObject\"\n        _links:\n          $ref: \"#/components/schemas/Links\"\n        page:\n          description: Current page number\n          example: 1\n          type: number\n        page_size:\n          description: Number of records per page\n          example: 100\n          type: number\n        total_items:\n          description: Total number of records\n          example: 100\n          type: number\n        total_pages:\n          description: Total number of pages\n          example: 10\n          type: number\n      type: object\n    LocationsEmbeddedObject:\n      description: Collection of location objects\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/Location\"\n          type: array\n      type: object\n    LocationsHalResponse:\n      properties:\n        _embedded:\n          $ref: \"#/components/schemas/LocationsEmbeddedObject\"\n        _links:\n          $ref: \"#/components/schemas/Links\"\n        page:\n          example: 1\n          type: number\n        page_size:\n          example: 100\n          type: number\n        total_items:\n          example: 100\n          type: number\n        total_pages:\n          example: 10\n          type: number\n      type: object\n    NextHref:\n      description: URL to the next page of records\n      properties:\n        href:\n          type: string\n      type: object\n    PrevHref:\n      description: URL to the previous page of records\n      properties:\n        href:\n          type: string\n      type: object\n    SelfHref:\n      description: URL to the current page of records\n      properties:\n        href:\n          type: string\n      type: object\n  securitySchemes:\n    bearerAuth:\n      bearerFormat: OAuth\n      scheme: bearer\n      type: http\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/vonage.com-account-1.11.7-openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/vonage.com-account-1.11.7-openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}