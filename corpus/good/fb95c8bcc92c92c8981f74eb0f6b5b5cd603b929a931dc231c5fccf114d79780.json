{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/imfht/flaskapps"
		},
		"file": {
			"name": "pets-api.yaml",
			"size": 0,
			"path": "connexion-master/examples/openapi3/methodresolver/openapi/pets-api.yaml",
			"byteSize": 4106,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  title: Swagger Petstore\n  license:\n    name: MIT\nservers:\n  - url: http://localhost:9090/v1.0\npaths:\n  /pets:\n    get:\n      summary: List all pets\n      tags:\n        - pets\n      parameters:\n        - name: limit\n          in: query\n          description: How many items to return at one time (max 100)\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: An paged array of pets\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pets\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      summary: Create a pet\n      tags:\n        - pets\n      requestBody:\n        description: Pet to add to the system\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Pet\"\n      responses:\n        '201':\n          description: Pet record interpreted by backend\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pet\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n\n  '/pets/{petId}':\n    get:\n      summary: Info for a specific pet\n      tags:\n        - pets\n      parameters:\n        - name: petId\n          in: path\n          required: true\n          description: The id of the pet to retrieve\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pet\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n\n    put:\n      summary: Update a pet\n      tags:\n        - pets\n      parameters:\n        - name: petId\n          in: path\n          required: true\n          description: The id of the pet to update\n          schema:\n            type: integer\n      requestBody:\n        description: Pet data to update\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Pet\"\n      responses:\n        '201':\n          description: Pet record interpreted by backend\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pet\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    delete:\n      summary: Update a pet\n      tags:\n        - pets\n      parameters:\n        - name: petId\n          in: path\n          required: true\n          description: The id of the pet to update\n          schema:\n            type: integer\n      responses:\n        '204':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n\ncomponents:\n  schemas:\n    Pet:\n      required:\n        - name\n      properties:\n        name:\n          type: string\n          example: fluffy\n        tag:\n          type: string\n          example: red\n        id:\n          type: integer\n          format: int64\n          readOnly: true\n          example: 1\n        last_updated:\n          type: string\n          readOnly: true\n          example: 2019-01-16T23:52:54.309102Z\n\n    Pets:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Pet\"\n\n    Error:\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string\n",
			"canonicalURL": "/github.com/imfht/flaskapps@d6fc9b7e32d7dc6b493c269b8ccbaa6ee2d690c1/-/blob/connexion-master/examples/openapi3/methodresolver/openapi/pets-api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/imfht/flaskapps/blob/d6fc9b7e32d7dc6b493c269b8ccbaa6ee2d690c1/connexion-master/examples/openapi3/methodresolver/openapi/pets-api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}