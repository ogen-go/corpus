{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/FGRibreau/scaleway-api-client"
		},
		"file": {
			"name": "scaleway.k8s.v1.Api.yml",
			"size": 0,
			"path": "openapi/scaleway.k8s.v1.Api.yml",
			"byteSize": 81848,
			"content": "openapi: 3.0.0\ninfo:\n  title: Kapsule API\n  description: |\n    # Introduction\n\n    Kubernetes Kapsule by Scaleway is a managed, production-ready environment for deploying, managing and scaling containerized applications. It installs and operates Kubernetes Clusters, allowing you to get up and running with them in no time.\n\n    \"Kubernetes is a portable, extensible open-source platform for managing containerized workloads and services, that facilitates both declarative configuration and automation. It has a large, rapidly growing ecosystem. Kubernetes services, support, and tools are widely available.\" [-- What is kubernetes](https://kubernetes.io/docs/concepts/overview/what-is-kubernetes/)\n\n    # Current Phase: General Availibility\n\n    ## Features\n\n    - Persistant Volume Claims (PVC) are available through Scaleway Block Volumes.\n    - Pool autoscaling and autohealing is available.\n    - Multiple container runtimes available (Only `docker` is officially supported, `containerd` and `crio` are experimental. NB: `containerd` ships with `gvisor` for untrusted workloads).\n    - Kubernetes auto upgrades features is available.\n\n    ## Technical Limitations\n\n    - Clusters can't be isolated in a VPC (Virtual Private Cloud).\n    - The maximum of pod per node is 110.\n\n    # Concepts\n\n    This API allows you to:\n\n    - create, update and delete a Kubernetes cluster\n    - manage cluster resources using node pools\n\n    ## Master (aka Control plane)\n\n    The Cluster Master directs the worker nodes, making scheduling decisions, responding to events, implementing changes, and monitoring the Cluster. Its components (kube-apiserver, kube-scheduler and kube-controller-manager) are managed by Scaleway to ensure the Master remains highly available. Consequently, you cannot set your own parameters on the Kubernetes api-server, controller-manager and scheduler. Scaleway takes care of your control plane: its health is continuously monitored and watched by a dedicated team. Its availability enables the Master to get upgraded or rebooted without any downtime, and the team can perform maintenance operations on your clusters in total transparency.\n\n    ### kube-apiserver\n\n    Component on the master that exposes the Kubernetes API. It is the front-end for the Kubernetes control plane. It is managed by Scaleway.\n\n    ### kube-scheduler\n\n    Component on the master that watches newly created pods that have no assigned node, and selects a node for them to run on. It is managed by Scaleway.\n\n    ### kube-controller-manager\n\n    Component on the master that runs controllers of Kubernetes. It is managed by Scaleway.\n\n    ### load balancer for kube-apiserver\n\n    Scaleway Load Balancers are used to route requests toward the multiple control-plane replicas. This enables high availability for your Cluster.\n\n    ### etcd\n\n    Consistent and highly-available key value store used as Kubernetes backing store for all cluster data.\n\n    ### scaleway-cloud-controller-manager\n\n    The Cloud Controller Manager runs controllers that interact with Scaleway cloud, allowing to create load balancer objects and to retrieve information about your cluster (node public IP, node location, node commercial type...)\n\n    ### scaleway-node-problem-detector\n\n    Deamon that reports nodes statuses to the orchestrator, allowing -for instance- healing actions when a node has been down for a certain period of time.\n\n    ## Pools\n\n    Cluster resources (i.e. nodes) are managed within pools. A pool has a name (optional), a size (its current number of nodes), and nodes number limits (min, max). Changing those limits increases/decreases the size of a pool. Thus, when autoscaling is enabled, the pool will grow or shrink inside those limits, depending on its cluster load. A \"default pool\" is automatically created with every Cluster and can't be deleted.\n\n    ## Nodes\n\n    A Node (short for Worker Node) is an abstraction for a Scaleway instance. It is part of a pool and is instantiated by Scaleway, making Kubernetes software installed and configured automatically on it. Please note that Kubernetes nodes cannot be accessed with ssh.\n\n    ## Container Network Interface\n\n    Container Network Interface (https://github.com/containernetworking/cni) is a standard designed to ease configuration of container networking at their creation/deletion. Various projects have been released to address Kubernetes networking requirements and provide the networking features that cluster administrators require. Kubernetes Kapsule supports the following CNI plugins : cilium (https://cilium.io/), flannel (https://github.com/coreos/flannel), calico (https://github.com/projectcalico/cni-plugin) \u0026 weave (https://www.weave.works/oss/net/). Flannel plugin is installed by default, but you can customize your cluster picking the one that suits your need.\n  version: v1\nservers:\n- url: https://api.scaleway.com\ntags:\n- name: Clusters\n  description: |\n    A cluster is a fully managed Kubernetes cluster.\n\n    It is composed of different pools, each pool containing the same kind of nodes.\n- name: Pools\n  description: |\n    A pool is a set of identical Nodes. A pool has a name, a size (its current number of nodes), nodes number limits (min, max) and a Scaleway instance type.\n    Changing those limits increases/decreases the size of a pool. Thus, when autoscaling is enabled, the pool will grow or shrink inside those limits, depending on its load.\n    A \"default pool\" is automatically created with every cluster.\n- name: Nodes\n  description: |\n    A node (short for worker node) is an abstraction for a Scaleway Instance.\n    It is part of a pool and is instantiated by Scaleway, making Kubernetes software installed and configured automatically on it.\n    Please note that Kubernetes nodes cannot be accessed with ssh.\n- name: Versions\n  description: |\n    A version is a vanilla Kubernetes version like `x.y.z`.\n    It is composed of a major version x, a minor version y and a patch version z.\n    Scaleway's managed Kubernetes, Kapsule, will at least support the last patch version for the last three minor release.\n\n    Also each version have a different set of container runtimes, CNIs, ingresses, feature gates and admission plugins available.\ncomponents:\n  schemas:\n    scaleway.k8s.v1.CNI:\n      type: string\n      enum:\n      - unknown_cni\n      - cilium\n      - calico\n      - weave\n      - flannel\n      default: unknown_cni\n    scaleway.k8s.v1.Cluster:\n      type: object\n      properties:\n        id:\n          type: string\n          description: The ID of the cluster\n        name:\n          type: string\n          description: The name of the cluster\n        status:\n          type: string\n          description: The status of the cluster\n          enum:\n          - unknown\n          - creating\n          - ready\n          - deleting\n          - deleted\n          - updating\n          - locked\n          - pool_required\n          default: unknown\n        version:\n          type: string\n          description: The Kubernetes version of the cluster\n        region:\n          type: string\n          description: The region in which the cluster is\n        organization_id:\n          type: string\n          description: The ID of the organization owning the cluster\n        project_id:\n          type: string\n          description: The ID of the project owning the cluster\n        tags:\n          type: array\n          description: The tags associated with the cluster\n          items:\n            type: string\n        cni:\n          type: string\n          description: The Container Network Interface (CNI) plugin running in the\n            cluster\n          enum:\n          - unknown_cni\n          - cilium\n          - calico\n          - weave\n          - flannel\n          default: unknown_cni\n        description:\n          type: string\n          description: The description of the cluster\n        cluster_url:\n          type: string\n          description: The Kubernetes API server URL of the cluster\n        dns_wildcard:\n          type: string\n          description: The DNS wildcard resovling all the ready nodes of the cluster\n        created_at:\n          type: string\n          description: The date at which the cluster was created\n          format: date-time\n        updated_at:\n          type: string\n          description: The date at which the cluster was last updated\n          format: date-time\n        autoscaler_config:\n          type: object\n          description: The autoscaler config for the cluster\n          properties:\n            scale_down_disabled:\n              type: boolean\n              description: Disable the cluster autoscaler\n            scale_down_delay_after_add:\n              type: string\n              description: How long after scale up that scale down evaluation resumes\n            estimator:\n              type: string\n              description: Type of resource estimator to be used in scale up\n              enum:\n              - unknown_estimator\n              - binpacking\n              default: unknown_estimator\n            expander:\n              type: string\n              description: Type of node group expander to be used in scale up\n              enum:\n              - unknown_expander\n              - random\n              - most_pods\n              - least_waste\n              - priority\n              default: unknown_expander\n            ignore_daemonsets_utilization:\n              type: boolean\n              description: Ignore DaemonSet pods when calculating resource utilization\n                for scaling down\n            balance_similar_node_groups:\n              type: boolean\n              description: Detect similar node groups and balance the number of nodes\n                between them\n            expendable_pods_priority_cutoff:\n              type: number\n              description: Pods with priority below cutoff will be expendable. They\n                can be killed without any consideration during scale down and they\n                don't cause scale up. Pods with null priority (PodPriority disabled)\n                are non expendable.\n            scale_down_unneeded_time:\n              type: string\n              description: How long a node should be unneeded before it is eligible\n                for scale down\n          x-properties-order:\n          - scale_down_disabled\n          - scale_down_delay_after_add\n          - estimator\n          - expander\n          - ignore_daemonsets_utilization\n          - balance_similar_node_groups\n          - expendable_pods_priority_cutoff\n          - scale_down_unneeded_time\n        dashboard_enabled:\n          type: boolean\n          description: The enablement of the Kubernetes Dashboard in the cluster\n        ingress:\n          type: string\n          description: The ingress controller used in the cluster\n          enum:\n          - unknown_ingress\n          - none\n          - nginx\n          - traefik\n          - traefik2\n          default: unknown_ingress\n        auto_upgrade:\n          type: object\n          description: The auo upgrade configuration of the cluster\n          properties:\n            enabled:\n              type: boolean\n              description: Whether or not auto upgrade is enabled for the cluster\n            maintenance_window:\n              type: object\n              description: The maintenance window of the cluster auto upgrades\n              properties:\n                start_hour:\n                  type: number\n                  description: The start hour of the 2-hour maintenance window\n                day:\n                  type: string\n                  description: The day of the week for the maintenance window\n                  enum:\n                  - any\n                  - monday\n                  - tuesday\n                  - wednesday\n                  - thursday\n                  - friday\n                  - saturday\n                  - sunday\n                  default: any\n              x-properties-order:\n              - start_hour\n              - day\n          x-properties-order:\n          - enabled\n          - maintenance_window\n        upgrade_available:\n          type: boolean\n          description: True if a new Kubernetes version is available\n        feature_gates:\n          type: array\n          description: List of enabled feature gates\n          items:\n            type: string\n        admission_plugins:\n          type: array\n          description: List of enabled admission plugins\n          items:\n            type: string\n        open_id_connect_config:\n          type: object\n          description: This feature is in ALPHA state, it may be deleted or modified.\n            This configuration is the [OpenID Connect configuration](https://kubernetes.io/docs/reference/access-authn-authz/authentication/#openid-connect-tokens)\n            of the Kubernetes API server.\n          properties:\n            issuer_url:\n              type: string\n              description: |\n                URL of the provider which allows the API server to discover public signing keys. Only URLs which use the `https://` scheme are accepted. This is typically the provider's discovery URL without a path, for example \"https://accounts.google.com\" or \"https://login.salesforce.com\". This URL should point to the level below .well-known/openid-configuration.\n            client_id:\n              type: string\n              description: A client id that all tokens must be issued for\n            username_claim:\n              type: string\n              description: |\n                JWT claim to use as the user name. By default `sub`, which is expected to be a unique identifier of the end user. Admins can choose other claims, such as `email` or `name`, depending on their provider. However, claims other than `email` will be prefixed with the issuer URL to prevent naming clashes with other plugins.\n            username_prefix:\n              type: string\n              description: |\n                Prefix prepended to username claims to prevent clashes with existing names (such as `system:` users). For example, the value `oidc:` will create usernames like `oidc:jane.doe`. If this flag isn't provided and `username_claim` is a value other than `email` the prefix defaults to `( Issuer URL )#` where `( Issuer URL )` is the value of `issuer_url`. The value `-` can be used to disable all prefixing.\n            groups_claim:\n              type: array\n              description: JWT claim to use as the user's group\n              items:\n                type: string\n            groups_prefix:\n              type: string\n              description: |\n                Prefix prepended to group claims to prevent clashes with existing names (such as `system:` groups). For example, the value `oidc:` will create group names like `oidc:engineering` and `oidc:infra`.\n            required_claim:\n              type: array\n              description: |\n                Multiple key=value pairs that describes a required claim in the ID Token. If set, the claims are verified to be present in the ID Token with a matching value.\n              items:\n                type: string\n          x-properties-order:\n          - issuer_url\n          - client_id\n          - username_claim\n          - username_prefix\n          - groups_claim\n          - groups_prefix\n          - required_claim\n      x-properties-order:\n      - id\n      - name\n      - status\n      - version\n      - region\n      - organization_id\n      - project_id\n      - tags\n      - cni\n      - description\n      - cluster_url\n      - dns_wildcard\n      - created_at\n      - updated_at\n      - autoscaler_config\n      - dashboard_enabled\n      - ingress\n      - auto_upgrade\n      - upgrade_available\n      - feature_gates\n      - admission_plugins\n      - open_id_connect_config\n    scaleway.k8s.v1.CreateClusterRequest.PoolConfig:\n      type: object\n      properties:\n        name:\n          type: string\n        node_type:\n          type: string\n          description: The node type is the type of Scaleway Instance wanted for the\n            pool\n        placement_group_id:\n          type: string\n          description: The placement group ID in which all the nodes of the pool will\n            be created\n          nullable: true\n        autoscaling:\n          type: boolean\n          description: The enablement of the autoscaling feature for the pool\n        size:\n          type: number\n          description: The size (number of nodes) of the pool\n        min_size:\n          type: number\n          description: The minimun size of the pool. Note that this fields will be\n            used only when autoscaling is enabled.\n          nullable: true\n        max_size:\n          type: number\n          description: The maximum size of the pool. Note that this fields will be\n            used only when autoscaling is enabled.\n          nullable: true\n        container_runtime:\n          type: string\n          description: |\n            The customization of the container runtime is available for each pool. Note that `docker` is the only supporter runtime at the moment. Others are to be considered experimental.\n          enum:\n          - unknown_runtime\n          - docker\n          - containerd\n          - crio\n          default: unknown_runtime\n        autohealing:\n          type: boolean\n          description: The enablement of the autohealing feature for the pool\n        tags:\n          type: array\n          description: The tags associated with the pool\n          items:\n            type: string\n      required:\n      - node_type\n      - size\n      x-properties-order:\n      - name\n      - node_type\n      - placement_group_id\n      - autoscaling\n      - size\n      - min_size\n      - max_size\n      - container_runtime\n      - autohealing\n      - tags\n    scaleway.k8s.v1.Ingress:\n      type: string\n      enum:\n      - unknown_ingress\n      - none\n      - nginx\n      - traefik\n      - traefik2\n      default: unknown_ingress\n    scaleway.k8s.v1.ListClusterAvailableVersionsResponse:\n      type: object\n      properties:\n        versions:\n          type: array\n          description: The available Kubernetes version for the cluster\n          items:\n            $ref: '#/components/schemas/scaleway.k8s.v1.Version'\n      x-properties-order:\n      - versions\n    scaleway.k8s.v1.ListClustersResponse:\n      type: object\n      properties:\n        total_count:\n          type: number\n          description: The total number of clusters\n        clusters:\n          type: array\n          description: The paginated returned clusters\n          items:\n            $ref: '#/components/schemas/scaleway.k8s.v1.Cluster'\n      x-properties-order:\n      - total_count\n      - clusters\n    scaleway.k8s.v1.ListNodesResponse:\n      type: object\n      properties:\n        total_count:\n          type: number\n          description: The total number of nodes\n        nodes:\n          type: array\n          description: The paginated returned nodes\n          items:\n            $ref: '#/components/schemas/scaleway.k8s.v1.Node'\n      x-properties-order:\n      - total_count\n      - nodes\n    scaleway.k8s.v1.ListPoolsResponse:\n      type: object\n      properties:\n        total_count:\n          type: number\n          description: The total number of pools that exists for the cluster\n        pools:\n          type: array\n          description: The paginated returned pools\n          items:\n            $ref: '#/components/schemas/scaleway.k8s.v1.Pool'\n      x-properties-order:\n      - total_count\n      - pools\n    scaleway.k8s.v1.ListVersionsResponse:\n      type: object\n      properties:\n        versions:\n          type: array\n          description: The available Kubernetes versions\n          items:\n            $ref: '#/components/schemas/scaleway.k8s.v1.Version'\n      x-properties-order:\n      - versions\n    scaleway.k8s.v1.Node:\n      type: object\n      properties:\n        id:\n          type: string\n          description: The ID of the node\n        pool_id:\n          type: string\n          description: The pool ID of the node\n        cluster_id:\n          type: string\n          description: The cluster ID of the node\n        region:\n          type: string\n          description: The cluster region of the node\n        name:\n          type: string\n          description: The name of the node\n        public_ip_v4:\n          type: string\n          description: The public IPv4 address of the node (IPv4 address)\n          example: 1.2.3.4\n          nullable: true\n        public_ip_v6:\n          type: string\n          description: The public IPv6 address of the node (IPv6 address)\n          example: 2001:0db8:85a3:0000:0000:8a2e:0370:7334\n          nullable: true\n        conditions:\n          type: object\n          description: These conditions contains the Node Problem Detector conditions,\n            as well as some in house conditions.\n          properties:\n            \u003cconditionKey\u003e:\n              type: string\n          additionalProperties: true\n        status:\n          type: string\n          description: The status of the node\n          enum:\n          - unknown\n          - creating\n          - not_ready\n          - ready\n          - deleting\n          - deleted\n          - locked\n          - rebooting\n          - creation_error\n          default: unknown\n        created_at:\n          type: string\n          description: The date at which the node was created\n          format: date-time\n        updated_at:\n          type: string\n          description: The date at which the node was last updated\n          format: date-time\n      x-properties-order:\n      - id\n      - pool_id\n      - cluster_id\n      - region\n      - name\n      - public_ip_v4\n      - public_ip_v6\n      - conditions\n      - status\n      - created_at\n      - updated_at\n    scaleway.k8s.v1.Pool:\n      type: object\n      properties:\n        id:\n          type: string\n          description: The ID of the pool\n        cluster_id:\n          type: string\n          description: The cluster ID of the pool\n        created_at:\n          type: string\n          description: The date at which the pool was created\n          format: date-time\n        updated_at:\n          type: string\n          description: The date at which the pool was last updated\n          format: date-time\n        name:\n          type: string\n          description: The name of the pool\n        status:\n          type: string\n          description: The status of the pool\n          enum:\n          - unknown\n          - ready\n          - deleting\n          - deleted\n          - scaling\n          - warning\n          - locked\n          - upgrading\n          default: unknown\n        version:\n          type: string\n          description: The version of the pool\n        node_type:\n          type: string\n          description: The node type is the type of Scaleway Instance wanted for the\n            pool\n        autoscaling:\n          type: boolean\n          description: The enablement of the autoscaling feature for the pool\n        size:\n          type: number\n          description: The size (number of nodes) of the pool\n        min_size:\n          type: number\n          description: The minimun size of the pool. Note that this fields will be\n            used only when autoscaling is enabled.\n        max_size:\n          type: number\n          description: The maximum size of the pool. Note that this fields will be\n            used only when autoscaling is enabled.\n        container_runtime:\n          type: string\n          description: |\n            The customization of the container runtime is available for each pool. Note that `docker` is the only supporter runtime at the moment. Others are to be considered experimental.\n          enum:\n          - unknown_runtime\n          - docker\n          - containerd\n          - crio\n          default: unknown_runtime\n        autohealing:\n          type: boolean\n          description: The enablement of the autohealing feature for the pool\n        tags:\n          type: array\n          description: The tags associated with the pool\n          items:\n            type: string\n        placement_group_id:\n          type: string\n          description: The placement group ID in which all the nodes of the pool will\n            be created\n          nullable: true\n        region:\n          type: string\n          description: The cluster region of the pool\n      required:\n      - node_type\n      - size\n      x-properties-order:\n      - id\n      - cluster_id\n      - created_at\n      - updated_at\n      - name\n      - status\n      - version\n      - node_type\n      - autoscaling\n      - size\n      - min_size\n      - max_size\n      - container_runtime\n      - autohealing\n      - tags\n      - placement_group_id\n      - region\n    scaleway.k8s.v1.Runtime:\n      type: string\n      enum:\n      - unknown_runtime\n      - docker\n      - containerd\n      - crio\n      default: unknown_runtime\n    scaleway.k8s.v1.Version:\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of the Kubernetes version\n        label:\n          type: string\n          description: The label of the Kubernetes version\n        region:\n          type: string\n          description: The region in which this version is available\n        available_cnis:\n          type: array\n          description: The supported Container Network Interface (CNI) plugins for\n            this version\n          items:\n            $ref: '#/components/schemas/scaleway.k8s.v1.CNI'\n        available_ingresses:\n          type: array\n          description: The supported Ingress Controllers for this version\n          items:\n            $ref: '#/components/schemas/scaleway.k8s.v1.Ingress'\n        available_container_runtimes:\n          type: array\n          description: The supported container runtimes for this version\n          items:\n            $ref: '#/components/schemas/scaleway.k8s.v1.Runtime'\n        available_feature_gates:\n          type: array\n          description: The supported feature gates for this version\n          items:\n            type: string\n        available_admission_plugins:\n          type: array\n          description: The supported admission plugins for this version\n          items:\n            type: string\n      x-properties-order:\n      - name\n      - label\n      - region\n      - available_cnis\n      - available_ingresses\n      - available_container_runtimes\n      - available_feature_gates\n      - available_admission_plugins\n    scaleway.std.File:\n      type: object\n      properties:\n        name:\n          type: string\n        content_type:\n          type: string\n        content:\n          type: string\n      x-properties-order:\n      - name\n      - content_type\n      - content\n  securitySchemes:\n    scaleway:\n      in: header\n      name: X-Auth-Token\n      type: apiKey\npaths:\n  /k8s/v1/regions/{region}/clusters:\n    get:\n      tags:\n      - Clusters\n      operationId: ListClusters\n      summary: List all the clusters\n      description: This method allows to list all the existing Kubernetes clusters\n        in an account.\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: query\n        name: organization_id\n        description: The organization ID on which to filter the returned clusters\n        schema:\n          type: string\n          description: The organization ID on which to filter the returned clusters\n          nullable: true\n      - in: query\n        name: project_id\n        description: The project ID on which to filter the returned clusters\n        schema:\n          type: string\n          description: The project ID on which to filter the returned clusters\n          nullable: true\n      - in: query\n        name: order_by\n        description: The sort order of the returned clusters\n        schema:\n          type: string\n          description: The sort order of the returned clusters\n          enum:\n          - created_at_asc\n          - created_at_desc\n          - updated_at_asc\n          - updated_at_desc\n          - name_asc\n          - name_desc\n          - status_asc\n          - status_desc\n          - version_asc\n          - version_desc\n          default: created_at_asc\n      - in: query\n        name: page\n        description: The page number for the returned clusters\n        schema:\n          type: number\n          description: The page number for the returned clusters\n          default: 1\n      - in: query\n        name: page_size\n        description: The maximum number of clusters per page\n        schema:\n          type: number\n          description: The maximum number of clusters per page\n          default: 20\n      - in: query\n        name: name\n        description: The name on which to filter the returned clusters\n        schema:\n          type: string\n          description: The name on which to filter the returned clusters\n          nullable: true\n      - in: query\n        name: status\n        description: The status on which to filter the returned clusters\n        schema:\n          type: string\n          description: The status on which to filter the returned clusters\n          enum:\n          - unknown\n          - creating\n          - ready\n          - deleting\n          - deleted\n          - updating\n          - locked\n          - pool_required\n          default: unknown\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.k8s.v1.ListClustersResponse'\n      security:\n      - scaleway: []\n    post:\n      tags:\n      - Clusters\n      operationId: CreateCluster\n      summary: Create a new cluster\n      description: This method allows to create a new Kubernetes cluster on an account.\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.k8s.v1.Cluster'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                organization_id:\n                  type: string\n                  description: The organization ID where the cluster will be created\n                  deprecated: true\n                  x-one-of: ProjectIdentifier\n                project_id:\n                  type: string\n                  description: The project ID where the cluster will be created\n                  x-one-of: ProjectIdentifier\n                name:\n                  type: string\n                  description: The name of the cluster\n                description:\n                  type: string\n                  description: The description of the cluster\n                tags:\n                  type: array\n                  description: The tags associated with the cluster\n                  items:\n                    type: string\n                version:\n                  type: string\n                  description: The Kubernetes version of the cluster\n                cni:\n                  type: string\n                  description: The Container Network Interface (CNI) plugin that will\n                    run in the cluster\n                  enum:\n                  - unknown_cni\n                  - cilium\n                  - calico\n                  - weave\n                  - flannel\n                  default: unknown_cni\n                enable_dashboard:\n                  type: boolean\n                  description: The enablement of the Kubernetes Dashboard in the cluster\n                ingress:\n                  type: string\n                  description: The Ingress Controller that will run in the cluster\n                  enum:\n                  - unknown_ingress\n                  - none\n                  - nginx\n                  - traefik\n                  - traefik2\n                  default: unknown_ingress\n                pools:\n                  type: array\n                  description: The pools to be created along with the cluster\n                  items:\n                    $ref: '#/components/schemas/scaleway.k8s.v1.CreateClusterRequest.PoolConfig'\n                autoscaler_config:\n                  type: object\n                  description: This field allows to specify some configuration for\n                    the autoscaler, which is an implementation of the [cluster-autoscaler](https://github.com/kubernetes/autoscaler/tree/master/cluster-autoscaler/).\n                  properties:\n                    scale_down_disabled:\n                      type: boolean\n                      description: Disable the cluster autoscaler\n                      nullable: true\n                    scale_down_delay_after_add:\n                      type: string\n                      description: How long after scale up that scale down evaluation\n                        resumes\n                      nullable: true\n                    estimator:\n                      type: string\n                      description: Type of resource estimator to be used in scale\n                        up\n                      enum:\n                      - unknown_estimator\n                      - binpacking\n                      default: unknown_estimator\n                    expander:\n                      type: string\n                      description: Type of node group expander to be used in scale\n                        up\n                      enum:\n                      - unknown_expander\n                      - random\n                      - most_pods\n                      - least_waste\n                      - priority\n                      default: unknown_expander\n                    ignore_daemonsets_utilization:\n                      type: boolean\n                      description: Ignore DaemonSet pods when calculating resource\n                        utilization for scaling down\n                      nullable: true\n                    balance_similar_node_groups:\n                      type: boolean\n                      description: Detect similar node groups and balance the number\n                        of nodes between them\n                      nullable: true\n                    expendable_pods_priority_cutoff:\n                      type: number\n                      description: Pods with priority below cutoff will be expendable.\n                        They can be killed without any consideration during scale\n                        down and they don't cause scale up. Pods with null priority\n                        (PodPriority disabled) are non expendable.\n                      nullable: true\n                    scale_down_unneeded_time:\n                      type: string\n                      description: How long a node should be unneeded before it is\n                        eligible for scale down\n                      nullable: true\n                  x-properties-order:\n                  - scale_down_disabled\n                  - scale_down_delay_after_add\n                  - estimator\n                  - expander\n                  - ignore_daemonsets_utilization\n                  - balance_similar_node_groups\n                  - expendable_pods_priority_cutoff\n                  - scale_down_unneeded_time\n                auto_upgrade:\n                  type: object\n                  description: This configuratiom enables to set a speicific 2-hour\n                    time window in which the cluster can be automatically updated\n                    to the latest patch version in the current minor one.\n                  properties:\n                    enable:\n                      type: boolean\n                      description: Whether or not auto upgrade is enabled for the\n                        cluster\n                    maintenance_window:\n                      type: object\n                      description: The maintenance window of the cluster auto upgrades\n                      properties:\n                        start_hour:\n                          type: number\n                          description: The start hour of the 2-hour maintenance window\n                        day:\n                          type: string\n                          description: The day of the week for the maintenance window\n                          enum:\n                          - any\n                          - monday\n                          - tuesday\n                          - wednesday\n                          - thursday\n                          - friday\n                          - saturday\n                          - sunday\n                          default: any\n                      x-properties-order:\n                      - start_hour\n                      - day\n                  x-properties-order:\n                  - enable\n                  - maintenance_window\n                feature_gates:\n                  type: array\n                  description: List of feature gates to enable\n                  items:\n                    type: string\n                admission_plugins:\n                  type: array\n                  description: List of admission plugins to enable\n                  items:\n                    type: string\n                open_id_connect_config:\n                  type: object\n                  description: This feature is in ALPHA state, it may be deleted or\n                    modified. This configuration enables to set the [OpenID Connect\n                    configuration](https://kubernetes.io/docs/reference/access-authn-authz/authentication/#openid-connect-tokens)\n                    of the Kubernetes API server.\n                  properties:\n                    issuer_url:\n                      type: string\n                      description: |\n                        URL of the provider which allows the API server to discover public signing keys. Only URLs which use the `https://` scheme are accepted. This is typically the provider's discovery URL without a path, for example \"https://accounts.google.com\" or \"https://login.salesforce.com\". This URL should point to the level below .well-known/openid-configuration.\n                    client_id:\n                      type: string\n                      description: A client id that all tokens must be issued for\n                    username_claim:\n                      type: string\n                      description: |\n                        JWT claim to use as the user name. By default `sub`, which is expected to be a unique identifier of the end user. Admins can choose other claims, such as `email` or `name`, depending on their provider. However, claims other than `email` will be prefixed with the issuer URL to prevent naming clashes with other plugins.\n                      nullable: true\n                    username_prefix:\n                      type: string\n                      description: |\n                        Prefix prepended to username claims to prevent clashes with existing names (such as `system:` users). For example, the value `oidc:` will create usernames like `oidc:jane.doe`. If this flag isn't provided and `username_claim` is a value other than `email` the prefix defaults to `( Issuer URL )#` where `( Issuer URL )` is the value of `issuer_url`. The value `-` can be used to disable all prefixing.\n                      nullable: true\n                    groups_claim:\n                      type: array\n                      description: JWT claim to use as the user's group\n                      nullable: true\n                      items:\n                        type: string\n                    groups_prefix:\n                      type: string\n                      description: |\n                        Prefix prepended to group claims to prevent clashes with existing names (such as `system:` groups). For example, the value `oidc:` will create group names like `oidc:engineering` and `oidc:infra`.\n                      nullable: true\n                    required_claim:\n                      type: array\n                      description: |\n                        Multiple key=value pairs that describes a required claim in the ID Token. If set, the claims are verified to be present in the ID Token with a matching value.\n                      nullable: true\n                      items:\n                        type: string\n                  x-properties-order:\n                  - issuer_url\n                  - client_id\n                  - username_claim\n                  - username_prefix\n                  - groups_claim\n                  - groups_prefix\n                  - required_claim\n              required:\n              - name\n              - version\n              - cni\n              x-properties-order:\n              - organization_id\n              - project_id\n              - name\n              - description\n              - tags\n              - version\n              - cni\n              - enable_dashboard\n              - ingress\n              - pools\n              - autoscaler_config\n              - auto_upgrade\n              - feature_gates\n              - admission_plugins\n              - open_id_connect_config\n      security:\n      - scaleway: []\n  /k8s/v1/regions/{region}/clusters/{cluster_id}:\n    get:\n      tags:\n      - Clusters\n      operationId: GetCluster\n      summary: Get a cluster\n      description: This method allows to get details about a specific Kubernetes cluster.\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: cluster_id\n        description: The ID of the requested cluster\n        required: true\n        schema:\n          type: string\n          description: The ID of the requested cluster\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.k8s.v1.Cluster'\n      security:\n      - scaleway: []\n    patch:\n      tags:\n      - Clusters\n      operationId: UpdateCluster\n      summary: Update a cluster\n      description: This method allows to update a specific Kubernetes cluster. Note\n        that this method is not made to upgrade a Kubernetes cluster.\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: cluster_id\n        description: The ID of the cluster to update\n        required: true\n        schema:\n          type: string\n          description: The ID of the cluster to update\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.k8s.v1.Cluster'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  description: This field allows to update the external name of the\n                    cluster. The internal name (used for instance in hostname) won't\n                    change.\n                  nullable: true\n                description:\n                  type: string\n                  description: The new description of the cluster\n                  nullable: true\n                tags:\n                  type: array\n                  description: The new tags associated with the cluster\n                  nullable: true\n                  items:\n                    type: string\n                autoscaler_config:\n                  type: object\n                  description: This field allows to update some configuration for\n                    the autoscaler, which is an implementation of the [cluster-autoscaler](https://github.com/kubernetes/autoscaler/tree/master/cluster-autoscaler/).\n                  properties:\n                    scale_down_disabled:\n                      type: boolean\n                      description: Disable the cluster autoscaler\n                      nullable: true\n                    scale_down_delay_after_add:\n                      type: string\n                      description: How long after scale up that scale down evaluation\n                        resumes\n                      nullable: true\n                    estimator:\n                      type: string\n                      description: Type of resource estimator to be used in scale\n                        up\n                      enum:\n                      - unknown_estimator\n                      - binpacking\n                      default: unknown_estimator\n                    expander:\n                      type: string\n                      description: Type of node group expander to be used in scale\n                        up\n                      enum:\n                      - unknown_expander\n                      - random\n                      - most_pods\n                      - least_waste\n                      - priority\n                      default: unknown_expander\n                    ignore_daemonsets_utilization:\n                      type: boolean\n                      description: Ignore DaemonSet pods when calculating resource\n                        utilization for scaling down\n                      nullable: true\n                    balance_similar_node_groups:\n                      type: boolean\n                      description: Detect similar node groups and balance the number\n                        of nodes between them\n                      nullable: true\n                    expendable_pods_priority_cutoff:\n                      type: number\n                      description: Pods with priority below cutoff will be expendable.\n                        They can be killed without any consideration during scale\n                        down and they don't cause scale up. Pods with null priority\n                        (PodPriority disabled) are non expendable.\n                      nullable: true\n                    scale_down_unneeded_time:\n                      type: string\n                      description: How long a node should be unneeded before it is\n                        eligible for scale down\n                      nullable: true\n                  x-properties-order:\n                  - scale_down_disabled\n                  - scale_down_delay_after_add\n                  - estimator\n                  - expander\n                  - ignore_daemonsets_utilization\n                  - balance_similar_node_groups\n                  - expendable_pods_priority_cutoff\n                  - scale_down_unneeded_time\n                enable_dashboard:\n                  type: boolean\n                  description: The new value of the Kubernetes Dashboard enablement\n                  nullable: true\n                ingress:\n                  type: string\n                  description: The new Ingress Controller for the cluster\n                  enum:\n                  - unknown_ingress\n                  - none\n                  - nginx\n                  - traefik\n                  - traefik2\n                  default: unknown_ingress\n                auto_upgrade:\n                  type: object\n                  description: The new auo upgrade configuration of the cluster. Note\n                    that all the fields needs to be set.\n                  properties:\n                    enable:\n                      type: boolean\n                      description: Whether or not auto upgrade is enabled for the\n                        cluster\n                      nullable: true\n                    maintenance_window:\n                      type: object\n                      description: The maintenance window of the cluster auto upgrades\n                      properties:\n                        start_hour:\n                          type: number\n                          description: The start hour of the 2-hour maintenance window\n                        day:\n                          type: string\n                          description: The day of the week for the maintenance window\n                          enum:\n                          - any\n                          - monday\n                          - tuesday\n                          - wednesday\n                          - thursday\n                          - friday\n                          - saturday\n                          - sunday\n                          default: any\n                      x-properties-order:\n                      - start_hour\n                      - day\n                  x-properties-order:\n                  - enable\n                  - maintenance_window\n                feature_gates:\n                  type: array\n                  description: List of feature gates to enable\n                  nullable: true\n                  items:\n                    type: string\n                admission_plugins:\n                  type: array\n                  description: List of admission plugins to enable\n                  nullable: true\n                  items:\n                    type: string\n                open_id_connect_config:\n                  type: object\n                  description: This feature is in ALPHA state, it may be deleted or\n                    modified. This configuration enables to update the [OpenID Connect\n                    configuration](https://kubernetes.io/docs/reference/access-authn-authz/authentication/#openid-connect-tokens)\n                    of the Kubernetes API server.\n                  properties:\n                    issuer_url:\n                      type: string\n                      description: |\n                        URL of the provider which allows the API server to discover public signing keys. Only URLs which use the `https://` scheme are accepted. This is typically the provider's discovery URL without a path, for example \"https://accounts.google.com\" or \"https://login.salesforce.com\". This URL should point to the level below .well-known/openid-configuration.\n                      nullable: true\n                    client_id:\n                      type: string\n                      description: A client id that all tokens must be issued for\n                      nullable: true\n                    username_claim:\n                      type: string\n                      description: |\n                        JWT claim to use as the user name. By default `sub`, which is expected to be a unique identifier of the end user. Admins can choose other claims, such as `email` or `name`, depending on their provider. However, claims other than `email` will be prefixed with the issuer URL to prevent naming clashes with other plugins.\n                      nullable: true\n                    username_prefix:\n                      type: string\n                      description: |\n                        Prefix prepended to username claims to prevent clashes with existing names (such as `system:` users). For example, the value `oidc:` will create usernames like `oidc:jane.doe`. If this flag isn't provided and `username_claim` is a value other than `email` the prefix defaults to `( Issuer URL )#` where `( Issuer URL )` is the value of `issuer_url`. The value `-` can be used to disable all prefixing.\n                      nullable: true\n                    groups_claim:\n                      type: array\n                      description: JWT claim to use as the user's group\n                      nullable: true\n                      items:\n                        type: string\n                    groups_prefix:\n                      type: string\n                      description: |\n                        Prefix prepended to group claims to prevent clashes with existing names (such as `system:` groups). For example, the value `oidc:` will create group names like `oidc:engineering` and `oidc:infra`.\n                      nullable: true\n                    required_claim:\n                      type: array\n                      description: |\n                        Multiple key=value pairs that describes a required claim in the ID Token. If set, the claims are verified to be present in the ID Token with a matching value.\n                      nullable: true\n                      items:\n                        type: string\n                  x-properties-order:\n                  - issuer_url\n                  - client_id\n                  - username_claim\n                  - username_prefix\n                  - groups_claim\n                  - groups_prefix\n                  - required_claim\n              x-properties-order:\n              - name\n              - description\n              - tags\n              - autoscaler_config\n              - enable_dashboard\n              - ingress\n              - auto_upgrade\n              - feature_gates\n              - admission_plugins\n              - open_id_connect_config\n      security:\n      - scaleway: []\n    delete:\n      tags:\n      - Clusters\n      operationId: DeleteCluster\n      summary: Delete a cluster\n      description: This method allows to delete a specific cluster and all its associated\n        pools and nodes. Note that this method will not delete any Load Balancers\n        or Block Volumes that are associated with the cluster.\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: cluster_id\n        description: The ID of the cluster to delete\n        required: true\n        schema:\n          type: string\n          description: The ID of the cluster to delete\n      - in: query\n        name: with_additional_resources\n        description: Set true if you want to delete all volumes (including retain\n          volume type) and loadbalancers whose name start with cluster ID\n        schema:\n          type: boolean\n          description: Set true if you want to delete all volumes (including retain\n            volume type) and loadbalancers whose name start with cluster ID\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.k8s.v1.Cluster'\n      security:\n      - scaleway: []\n  /k8s/v1/regions/{region}/clusters/{cluster_id}/available-versions:\n    get:\n      tags:\n      - Clusters\n      operationId: ListClusterAvailableVersions\n      summary: List available versions for a cluster\n      description: This method allows to list the versions that a specific Kubernetes\n        cluster is allowed to upgrade to. Note that it will be every patch version\n        greater than the actual one as well a one minor version ahead of the actual\n        one. Upgrades skipping a minor version will not work.\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: cluster_id\n        description: The ID of the cluster which the available Kuberentes versions\n          will be listed from\n        required: true\n        schema:\n          type: string\n          description: The ID of the cluster which the available Kuberentes versions\n            will be listed from\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.k8s.v1.ListClusterAvailableVersionsResponse'\n      security:\n      - scaleway: []\n  /k8s/v1/regions/{region}/clusters/{cluster_id}/kubeconfig:\n    get:\n      tags:\n      - Clusters\n      operationId: GetClusterKubeConfig\n      summary: Download the kubeconfig for a cluster\n      description: |\n        This method allows to download the Kubernetes cluster config file (AKA kubeconfig) for a specific cluster in order to use it with, for instance, `kubectl`. Tips: add `?dl=1` at the end of the URL to directly get the base64 decoded kubeconfig. If not, the kubeconfig will be base64 encoded.\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: cluster_id\n        description: The ID of the cluster to download the kubeconfig from\n        required: true\n        schema:\n          type: string\n          description: The ID of the cluster to download the kubeconfig from\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.std.File'\n      security:\n      - scaleway: []\n  /k8s/v1/regions/{region}/clusters/{cluster_id}/nodes:\n    get:\n      tags:\n      - Nodes\n      operationId: ListNodes\n      summary: List all the nodes in a cluster\n      description: This method allows to list all the existing nodes for a specific\n        Kubernetes cluster.\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: cluster_id\n        description: The cluster ID from which the nodes will be listed from\n        required: true\n        schema:\n          type: string\n          description: The cluster ID from which the nodes will be listed from\n      - in: query\n        name: pool_id\n        description: The pool ID on which to filter the returned nodes\n        schema:\n          type: string\n          description: The pool ID on which to filter the returned nodes\n          nullable: true\n      - in: query\n        name: order_by\n        description: The sort order of the returned nodes\n        schema:\n          type: string\n          description: The sort order of the returned nodes\n          enum:\n          - created_at_asc\n          - created_at_desc\n          default: created_at_asc\n      - in: query\n        name: page\n        description: The page number for the returned nodes\n        schema:\n          type: number\n          description: The page number for the returned nodes\n          default: 1\n      - in: query\n        name: page_size\n        description: The maximum number of nodes per page\n        schema:\n          type: number\n          description: The maximum number of nodes per page\n          default: 20\n      - in: query\n        name: name\n        description: The name on which to filter the returned nodes\n        schema:\n          type: string\n          description: The name on which to filter the returned nodes\n          nullable: true\n      - in: query\n        name: status\n        description: The status on which to filter the returned nodes\n        schema:\n          type: string\n          description: The status on which to filter the returned nodes\n          enum:\n          - unknown\n          - creating\n          - not_ready\n          - ready\n          - deleting\n          - deleted\n          - locked\n          - rebooting\n          - creation_error\n          default: unknown\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.k8s.v1.ListNodesResponse'\n      security:\n      - scaleway: []\n  /k8s/v1/regions/{region}/clusters/{cluster_id}/pools:\n    get:\n      tags:\n      - Pools\n      operationId: ListPools\n      summary: List all the pools in a cluster\n      description: This method allows to list all the existing pools for a specific\n        Kubernetes cluster.\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: cluster_id\n        description: The ID of the cluster from which the pools will be listed from\n        required: true\n        schema:\n          type: string\n          description: The ID of the cluster from which the pools will be listed from\n      - in: query\n        name: order_by\n        description: The sort order of the returned pools\n        schema:\n          type: string\n          description: The sort order of the returned pools\n          enum:\n          - created_at_asc\n          - created_at_desc\n          - updated_at_asc\n          - updated_at_desc\n          - name_asc\n          - name_desc\n          - status_asc\n          - status_desc\n          - version_asc\n          - version_desc\n          default: created_at_asc\n      - in: query\n        name: page\n        description: The page number for the returned pools\n        schema:\n          type: number\n          description: The page number for the returned pools\n          default: 1\n      - in: query\n        name: page_size\n        description: The maximum number of pools per page\n        schema:\n          type: number\n          description: The maximum number of pools per page\n          default: 20\n      - in: query\n        name: name\n        description: The name on which to filter the returned pools\n        schema:\n          type: string\n          description: The name on which to filter the returned pools\n          nullable: true\n      - in: query\n        name: status\n        description: The status on which to filter the returned pools\n        schema:\n          type: string\n          description: The status on which to filter the returned pools\n          enum:\n          - unknown\n          - ready\n          - deleting\n          - deleted\n          - scaling\n          - warning\n          - locked\n          - upgrading\n          default: unknown\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.k8s.v1.ListPoolsResponse'\n      security:\n      - scaleway: []\n    post:\n      tags:\n      - Pools\n      operationId: CreatePool\n      summary: Create a new pool in a cluster\n      description: This method allows to create a new pool in a specific Kubernetes\n        cluster.\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: cluster_id\n        description: The ID of the cluster in which the pool will be created\n        required: true\n        schema:\n          type: string\n          description: The ID of the cluster in which the pool will be created\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.k8s.v1.Pool'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  description: The name of the pool\n                node_type:\n                  type: string\n                  description: The node type is the type of Scaleway Instance wanted\n                    for the pool\n                placement_group_id:\n                  type: string\n                  description: The placement group ID in which all the nodes of the\n                    pool will be created\n                  nullable: true\n                autoscaling:\n                  type: boolean\n                  description: The enablement of the autoscaling feature for the pool\n                size:\n                  type: number\n                  description: The size (number of nodes) of the pool\n                min_size:\n                  type: number\n                  description: The minimun size of the pool. Note that this fields\n                    will be used only when autoscaling is enabled.\n                  nullable: true\n                max_size:\n                  type: number\n                  description: The maximum size of the pool. Note that this fields\n                    will be used only when autoscaling is enabled.\n                  nullable: true\n                container_runtime:\n                  type: string\n                  description: |\n                    The customization of the container runtime is available for each pool. Note that `docker` is the only supporter runtime at the moment. Others are to be considered experimental.\n                  enum:\n                  - unknown_runtime\n                  - docker\n                  - containerd\n                  - crio\n                  default: unknown_runtime\n                autohealing:\n                  type: boolean\n                  description: The enablement of the autohealing feature for the pool\n                tags:\n                  type: array\n                  description: The tags associated with the pool\n                  items:\n                    type: string\n              required:\n              - name\n              - node_type\n              - size\n              x-properties-order:\n              - name\n              - node_type\n              - placement_group_id\n              - autoscaling\n              - size\n              - min_size\n              - max_size\n              - container_runtime\n              - autohealing\n              - tags\n      security:\n      - scaleway: []\n  /k8s/v1/regions/{region}/clusters/{cluster_id}/reset-admin-token:\n    post:\n      tags:\n      - Clusters\n      operationId: ResetClusterAdminToken\n      summary: Reset the admin token of a cluster\n      description: This method allows to reset the admin token for a specific Kubernetes\n        cluster. This will invalidate the old admin token (which will not be usable\n        after) and create a new one. Note that the redownload of the kubeconfig will\n        be necessary to keep interacting with the cluster (if the old admin token\n        was used).\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: cluster_id\n        description: The ID of the cluster of which the admin token will be renewed\n        required: true\n        schema:\n          type: string\n          description: The ID of the cluster of which the admin token will be renewed\n      responses:\n        \"204\":\n          description: \"\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n      security:\n      - scaleway: []\n  /k8s/v1/regions/{region}/clusters/{cluster_id}/upgrade:\n    post:\n      tags:\n      - Clusters\n      operationId: UpgradeCluster\n      summary: Upgrade a cluster\n      description: This method allows to upgrade a specific Kubernetes cluster and/or\n        its associated pools to a specific and supported Kubernetes version.\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: cluster_id\n        description: The ID of the cluster to upgrade\n        required: true\n        schema:\n          type: string\n          description: The ID of the cluster to upgrade\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.k8s.v1.Cluster'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                version:\n                  type: string\n                  description: The new Kubernetes version of the cluster. Note that\n                    the version shoud either be a higher patch version of the same\n                    minor version or the direct minor version after the current one.\n                upgrade_pools:\n                  type: boolean\n                  description: This field makes the upgrade upgrades the pool once\n                    the Kubernetes master in upgrade.\n              required:\n              - version\n              x-properties-order:\n              - version\n              - upgrade_pools\n      security:\n      - scaleway: []\n  /k8s/v1/regions/{region}/nodes/{node_id}:\n    get:\n      tags:\n      - Nodes\n      operationId: GetNode\n      summary: Get a node in a cluster\n      description: This method allows to get details about a specific Kubernetes node.\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: node_id\n        description: The ID of the requested node\n        required: true\n        schema:\n          type: string\n          description: The ID of the requested node\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.k8s.v1.Node'\n      security:\n      - scaleway: []\n  /k8s/v1/regions/{region}/nodes/{node_id}/reboot:\n    post:\n      tags:\n      - Nodes\n      operationId: RebootNode\n      summary: Reboot a node in a cluster\n      description: This method allows to reboot a specific node. This node will frist\n        be cordoned, meaning that scheduling will be disabled. Then the existing pods\n        on the node will be drained and reschedule onto another schedulable node.\n        Note that when there is not enough space to reschedule all the pods (in a\n        one node cluster for instance), you may experience some disruption of your\n        applications.\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: node_id\n        description: The ID of the node to reboot\n        required: true\n        schema:\n          type: string\n          description: The ID of the node to reboot\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.k8s.v1.Node'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n      security:\n      - scaleway: []\n  /k8s/v1/regions/{region}/nodes/{node_id}/replace:\n    post:\n      tags:\n      - Nodes\n      operationId: ReplaceNode\n      summary: Replace a node in a cluster\n      description: This method allows to replace a specific node. The node will be\n        set cordoned, meaning that scheduling will be disabled. Then the existing\n        pods on the node will be drained and reschedule onto another schedulable node.\n        Then the node will be deleted, and a new one will be created after the deletion.\n        Note that when there is not enough space to reschedule all the pods (in a\n        one node cluster for instance), you may experience some disruption of your\n        applications.\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: node_id\n        description: The ID of the node to replace\n        required: true\n        schema:\n          type: string\n          description: The ID of the node to replace\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.k8s.v1.Node'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n      security:\n      - scaleway: []\n  /k8s/v1/regions/{region}/pools/{pool_id}:\n    get:\n      tags:\n      - Pools\n      operationId: GetPool\n      summary: Get a pool in a cluster\n      description: This method allows to get details about a specific pool.\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: pool_id\n        description: The ID of the requested pool\n        required: true\n        schema:\n          type: string\n          description: The ID of the requested pool\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.k8s.v1.Pool'\n      security:\n      - scaleway: []\n    patch:\n      tags:\n      - Pools\n      operationId: UpdatePool\n      summary: Update a pool in a cluster\n      description: This method allows to update some attributes of a specific pool\n        such as the size, the autoscaling enablement, the tags, ...\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: pool_id\n        description: The ID of the pool to update\n        required: true\n        schema:\n          type: string\n          description: The ID of the pool to update\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.k8s.v1.Pool'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                autoscaling:\n                  type: boolean\n                  description: The new value for the enablement of autoscaling for\n                    the pool\n                  nullable: true\n                size:\n                  type: number\n                  description: The new size for the pool\n                  nullable: true\n                min_size:\n                  type: number\n                  description: The new minimun size for the pool\n                  nullable: true\n                max_size:\n                  type: number\n                  description: The new maximum size for the pool\n                  nullable: true\n                autohealing:\n                  type: boolean\n                  description: The new value for the enablement of autohealing for\n                    the pool\n                  nullable: true\n                tags:\n                  type: array\n                  description: The new tags associated with the pool\n                  nullable: true\n                  items:\n                    type: string\n              x-properties-order:\n              - autoscaling\n              - size\n              - min_size\n              - max_size\n              - autohealing\n              - tags\n      security:\n      - scaleway: []\n    delete:\n      tags:\n      - Pools\n      operationId: DeletePool\n      summary: Delete a pool in a cluster\n      description: This method allows to delete a specific pool from a cluster, deleting\n        all the nodes associated with it.\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: pool_id\n        description: The ID of the pool to delete\n        required: true\n        schema:\n          type: string\n          description: The ID of the pool to delete\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.k8s.v1.Pool'\n      security:\n      - scaleway: []\n  /k8s/v1/regions/{region}/pools/{pool_id}/upgrade:\n    post:\n      tags:\n      - Pools\n      operationId: UpgradePool\n      summary: Upgrade a pool in a cluster\n      description: This method allows to upgrade the Kubernetes version of a specific\n        pool. Note that this will work when the targeted version is the same than\n        the version of the cluster.\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: pool_id\n        description: The ID of the pool to upgrade\n        required: true\n        schema:\n          type: string\n          description: The ID of the pool to upgrade\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.k8s.v1.Pool'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                version:\n                  type: string\n                  description: The new Kubernetes version for the pool\n              required:\n              - version\n              x-properties-order:\n              - version\n      security:\n      - scaleway: []\n  /k8s/v1/regions/{region}/versions:\n    get:\n      tags:\n      - Versions\n      operationId: ListVersions\n      summary: List all available versions\n      description: This method allows to list all available versions for the creation\n        of a new Kubernetes cluster.\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.k8s.v1.ListVersionsResponse'\n      security:\n      - scaleway: []\n  /k8s/v1/regions/{region}/versions/{version_name}:\n    get:\n      tags:\n      - Versions\n      operationId: GetVersion\n      summary: Get details about a specific version\n      description: This method allows to get a specific Kubernetes version and the\n        details about the version.\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: version_name\n        description: The requested version name\n        required: true\n        schema:\n          type: string\n          description: The requested version name\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.k8s.v1.Version'\n      security:\n      - scaleway: []\n",
			"canonicalURL": "/github.com/FGRibreau/scaleway-api-client@d59b9b59cc7a7b9a29a50481008d67382fe78871/-/blob/openapi/scaleway.k8s.v1.Api.yml",
			"externalURLs": [
				{
					"url": "https://github.com/FGRibreau/scaleway-api-client/blob/d59b9b59cc7a7b9a29a50481008d67382fe78871/openapi/scaleway.k8s.v1.Api.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}