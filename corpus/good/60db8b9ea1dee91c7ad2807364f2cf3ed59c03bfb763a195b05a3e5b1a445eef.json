{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/harness/harness-core"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "960-continuous-features/src/generated/api/openapi.yaml",
			"byteSize": 38778,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    email: ff@harness.io\n    name: Feature Flag - developers\n    url: https://www.harness.io\n  title: Harness feature flag service\n  version: 1.0.0\nservers:\n- description: no host specified\n  url: /api/1.0\n- description: Server description.\n  url: http://localhost:3000/api/1.0\npaths:\n  /admin/features:\n    get:\n      description: Used to retrieve all feature activations for certain account id.\n      operationId: GetAllFeatures\n      parameters:\n      - description: Account\n        examples:\n          default:\n            value: default\n        explode: true\n        in: query\n        name: accountIdentifier\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Organization Identifier\n        examples:\n          default:\n            value: default_org\n        explode: true\n        in: query\n        name: org\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Project\n        explode: true\n        in: query\n        name: project\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Environment\n        explode: true\n        in: query\n        name: environment\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: PageNumber\n        explode: true\n        in: query\n        name: pageNumber\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: PageSize\n        explode: true\n        in: query\n        name: pageSize\n        required: false\n        schema:\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Features'\n          description: OK\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthenticated\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The specified resource was not found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - BearerAuth: []\n      - ApiKeyAuth: []\n      summary: Retrieve all feature activations.\n      x-accepts: application/json\n    post:\n      description: Create a feature flag.\n      operationId: CreateFeatureFlag\n      parameters:\n      - description: Account\n        examples:\n          default:\n            value: default\n        explode: true\n        in: query\n        name: accountIdentifier\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Organization Identifier\n        examples:\n          default:\n            value: default_org\n        explode: true\n        in: query\n        name: org\n        required: true\n        schema:\n          type: string\n        style: form\n      requestBody:\n        $ref: '#/components/requestBodies/inline_object'\n        content:\n          application/json:\n            schema:\n              properties:\n                project:\n                  type: string\n                prerequisites:\n                  items:\n                    $ref: '#/components/schemas/Prerequisite'\n                  type: array\n                name:\n                  type: string\n                description:\n                  type: string\n                identifier:\n                  type: string\n                owner:\n                  type: string\n                kind:\n                  enum:\n                  - boolean\n                  - int\n                  - string\n                  - json\n                  type: string\n                archived:\n                  type: boolean\n                variations:\n                  items:\n                    $ref: '#/components/schemas/Variation'\n                  minItems: 2\n                  type: array\n                tags:\n                  items:\n                    $ref: '#/components/schemas/Tag'\n                  type: array\n                defaultOnVariation:\n                  type: string\n                defaultOffVariation:\n                  type: string\n                permanent:\n                  type: boolean\n              required:\n              - archived\n              - defaultOffVariation\n              - defaultOnVariation\n              - identifier\n              - kind\n              - name\n              - permanent\n              - project\n              - variations\n              type: object\n      responses:\n        \"201\":\n          description: Created\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthenticated\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The specified resource already exists\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - BearerAuth: []\n      - ApiKeyAuth: []\n      summary: Create a feature\n      x-contentType: application/json\n      x-accepts: application/json\n  /admin/features/{identifier}:\n    delete:\n      description: Delete feature with certain identifier and account id.\n      operationId: DeleteFeatureFlag\n      parameters:\n      - description: Unique identifier for the object in the API.\n        explode: false\n        in: path\n        name: identifier\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Account\n        examples:\n          default:\n            value: default\n        explode: true\n        in: query\n        name: accountIdentifier\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Organization Identifier\n        examples:\n          default:\n            value: default_org\n        explode: true\n        in: query\n        name: org\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Project\n        explode: true\n        in: query\n        name: project\n        required: true\n        schema:\n          type: string\n        style: form\n      responses:\n        \"204\":\n          description: No content\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthenticated\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The specified resource was not found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - BearerAuth: []\n      - ApiKeyAuth: []\n      summary: Delete a feature\n      x-accepts: application/json\n    get:\n      description: Retrieve certain feature flag with certain identifier and account\n        id.\n      operationId: GetFeatureFlag\n      parameters:\n      - description: Unique identifier for the object in the API.\n        explode: false\n        in: path\n        name: identifier\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Account\n        examples:\n          default:\n            value: default\n        explode: true\n        in: query\n        name: accountIdentifier\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Organization Identifier\n        examples:\n          default:\n            value: default_org\n        explode: true\n        in: query\n        name: org\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Project\n        explode: true\n        in: query\n        name: project\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Environment\n        explode: true\n        in: query\n        name: environment\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Feature'\n          description: OK\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthenticated\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The specified resource was not found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - BearerAuth: []\n      - ApiKeyAuth: []\n      summary: Retrieve a feature\n      x-accepts: application/json\n    patch:\n      description: Modify feature flag with certain identifier and account id.\n      operationId: PatchFeature\n      parameters:\n      - description: Unique identifier for the object in the API.\n        explode: false\n        in: path\n        name: identifier\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Account\n        examples:\n          default:\n            value: default\n        explode: true\n        in: query\n        name: accountIdentifier\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Organization Identifier\n        examples:\n          default:\n            value: default_org\n        explode: true\n        in: query\n        name: org\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Project\n        explode: true\n        in: query\n        name: project\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Environment\n        explode: true\n        in: query\n        name: environment\n        required: true\n        schema:\n          type: string\n        style: form\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                comment:\n                  example: This is a comment string\n                  type: string\n                executionTime:\n                  description: Time of execution in unix epoch milliseconds when the\n                    scheduled changes will be applied\n                  type: integer\n                instructions:\n                  items:\n                    properties:\n                      kind:\n                        description: The name of the modification you would like to\n                          perform on a resource.\n                        example: enableFeatureFlag\n                        type: string\n                      parameters:\n                        example:\n                          ruleId: TestRule\n                          variationID: TestVariation\n                        type: object\n                    required:\n                    - kind\n                    - parameters\"\n                  type: array\n              required:\n              - instructions\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Feature'\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthenticated\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The specified resource was not found\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The specified resource already exists\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - BearerAuth: []\n      - ApiKeyAuth: []\n      summary: Modify a feature using instructions\n      x-contentType: application/json\n      x-accepts: application/json\ncomponents:\n  parameters:\n    accountQueryParam:\n      description: Account\n      examples:\n        default:\n          value: default\n      explode: true\n      in: query\n      name: accountIdentifier\n      required: true\n      schema:\n        type: string\n      style: form\n    orgQueryParam:\n      description: Organization Identifier\n      examples:\n        default:\n          value: default_org\n      explode: true\n      in: query\n      name: org\n      required: true\n      schema:\n        type: string\n      style: form\n    projectQueryParam:\n      description: Project\n      explode: true\n      in: query\n      name: project\n      required: true\n      schema:\n        type: string\n      style: form\n    environmentOptionalQueryParam:\n      description: Environment\n      explode: true\n      in: query\n      name: environment\n      required: false\n      schema:\n        type: string\n      style: form\n    pageNumber:\n      description: PageNumber\n      explode: true\n      in: query\n      name: pageNumber\n      required: false\n      schema:\n        type: integer\n      style: form\n    pageSize:\n      description: PageSize\n      explode: true\n      in: query\n      name: pageSize\n      required: false\n      schema:\n        type: integer\n      style: form\n    identifier:\n      description: Unique identifier for the object in the API.\n      explode: false\n      in: path\n      name: identifier\n      required: true\n      schema:\n        type: string\n      style: simple\n    environmentQueryParam:\n      description: Environment\n      explode: true\n      in: query\n      name: environment\n      required: true\n      schema:\n        type: string\n      style: form\n  requestBodies:\n    inline_object:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/inline_object'\n  responses:\n    FeaturesResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Features'\n      description: OK\n    Unauthenticated:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Unauthenticated\n    Unauthorized:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Unauthorized\n    NotFound:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: The specified resource was not found\n    InternalServerError:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Internal server error\n    BadRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Bad request\n    Conflict:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: The specified resource already exists\n    FeatureResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Feature'\n      description: OK\n  schemas:\n    Prerequisite:\n      example:\n        feature: feature\n        variations:\n        - variations\n        - variations\n      properties:\n        feature:\n          type: string\n        variations:\n          items:\n            type: string\n          type: array\n      required:\n      - feature\n      - variations\n      type: object\n    Variation:\n      example:\n        identifier: identifier\n        name: name\n        description: description\n        value: value\n      properties:\n        identifier:\n          type: string\n        value:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n      required:\n      - identifier\n      - value\n      type: object\n    TargetMap:\n      example:\n        identifier: identifier\n        name: name\n      properties:\n        identifier:\n          type: string\n        name:\n          type: string\n      required:\n      - idenfifier\n      - name\n      type: object\n    VariationMap:\n      example:\n        targetSegments:\n        - targetSegments\n        - targetSegments\n        targets:\n        - identifier: identifier\n          name: name\n        - identifier: identifier\n          name: name\n        variation: variation\n      properties:\n        variation:\n          type: string\n        targets:\n          items:\n            $ref: '#/components/schemas/TargetMap'\n          type: array\n        targetSegments:\n          items:\n            type: string\n          type: array\n      required:\n      - variation\n      type: object\n    Clause:\n      example:\n        op: op\n        negate: true\n        values:\n        - values\n        - values\n        id: id\n        attribute: attribute\n      properties:\n        id:\n          type: string\n        attribute:\n          type: string\n        op:\n          type: string\n        values:\n          items:\n            type: string\n          type: array\n        negate:\n          type: boolean\n      required:\n      - attribute\n      - id\n      - negate\n      - op\n      - values\n      type: object\n    WeightedVariation:\n      example:\n        weight: 5\n        variation: variation\n      properties:\n        variation:\n          type: string\n        weight:\n          type: integer\n      required:\n      - variation\n      - weight\n      type: object\n    Distribution:\n      example:\n        variations:\n        - weight: 5\n          variation: variation\n        - weight: 5\n          variation: variation\n        bucketBy: bucketBy\n      properties:\n        bucketBy:\n          type: string\n        variations:\n          items:\n            $ref: '#/components/schemas/WeightedVariation'\n          type: array\n      required:\n      - bucketBy\n      - variations\n      type: object\n    Serve:\n      example:\n        distribution:\n          variations:\n          - weight: 5\n            variation: variation\n          - weight: 5\n            variation: variation\n          bucketBy: bucketBy\n        variation: variation\n      properties:\n        distribution:\n          $ref: '#/components/schemas/Distribution'\n        variation:\n          type: string\n      type: object\n    ServingRule:\n      example:\n        clauses:\n        - op: op\n          negate: true\n          values:\n          - values\n          - values\n          id: id\n          attribute: attribute\n        - op: op\n          negate: true\n          values:\n          - values\n          - values\n          id: id\n          attribute: attribute\n        serve:\n          distribution:\n            variations:\n            - weight: 5\n              variation: variation\n            - weight: 5\n              variation: variation\n            bucketBy: bucketBy\n          variation: variation\n        ruleId: ruleId\n        priority: 1\n      properties:\n        ruleId:\n          type: string\n        priority:\n          type: integer\n        clauses:\n          items:\n            $ref: '#/components/schemas/Clause'\n          type: array\n        serve:\n          $ref: '#/components/schemas/Serve'\n      required:\n      - clauses\n      - priority\n      - ruleId\n      - serve\n      type: object\n    FeatureState:\n      enum:\n      - \"on\"\n      - \"off\"\n      type: string\n    Tag:\n      description: A name and value pair.\n      example:\n        name: name\n        value: value\n      properties:\n        name:\n          type: string\n        value:\n          type: string\n      required:\n      - name\n      type: object\n    Feature:\n      example:\n        owner:\n        - owner\n        - owner\n        identifier: identifier\n        defaultOnVariation: defaultOnVariation\n        kind: boolean\n        modifiedAt: 9\n        project: project\n        description: description\n        defaultOffVariation: defaultOffVariation\n        tags:\n        - name: name\n          value: value\n        - name: name\n          value: value\n        prerequisites:\n        - feature: feature\n          variations:\n          - variations\n          - variations\n        - feature: feature\n          variations:\n          - variations\n          - variations\n        envProperties:\n          defaultServe:\n            distribution:\n              variations:\n              - weight: 5\n                variation: variation\n              - weight: 5\n                variation: variation\n              bucketBy: bucketBy\n            variation: variation\n          environment: environment\n          modifiedAt: 5\n          variationMap:\n          - targetSegments:\n            - targetSegments\n            - targetSegments\n            targets:\n            - identifier: identifier\n              name: name\n            - identifier: identifier\n              name: name\n            variation: variation\n          - targetSegments:\n            - targetSegments\n            - targetSegments\n            targets:\n            - identifier: identifier\n              name: name\n            - identifier: identifier\n              name: name\n            variation: variation\n          rules:\n          - clauses:\n            - op: op\n              negate: true\n              values:\n              - values\n              - values\n              id: id\n              attribute: attribute\n            - op: op\n              negate: true\n              values:\n              - values\n              - values\n              id: id\n              attribute: attribute\n            serve:\n              distribution:\n                variations:\n                - weight: 5\n                  variation: variation\n                - weight: 5\n                  variation: variation\n                bucketBy: bucketBy\n              variation: variation\n            ruleId: ruleId\n            priority: 1\n          - clauses:\n            - op: op\n              negate: true\n              values:\n              - values\n              - values\n              id: id\n              attribute: attribute\n            - op: op\n              negate: true\n              values:\n              - values\n              - values\n              id: id\n              attribute: attribute\n            serve:\n              distribution:\n                variations:\n                - weight: 5\n                  variation: variation\n                - weight: 5\n                  variation: variation\n                bucketBy: bucketBy\n              variation: variation\n            ruleId: ruleId\n            priority: 1\n          offVariation: offVariation\n          version: 2\n        evaluation: evaluation\n        archived: true\n        createdAt: 7\n        variations:\n        - identifier: identifier\n          name: name\n          description: description\n          value: value\n        - identifier: identifier\n          name: name\n          description: description\n          value: value\n        permanent: true\n        name: name\n      properties:\n        project:\n          type: string\n        identifier:\n          type: string\n        prerequisites:\n          items:\n            $ref: '#/components/schemas/Prerequisite'\n          type: array\n        name:\n          type: string\n        description:\n          type: string\n        owner:\n          items:\n            type: string\n          type: array\n        kind:\n          enum:\n          - boolean\n          - int\n          - string\n          - json\n          type: string\n        archived:\n          type: boolean\n        variations:\n          items:\n            $ref: '#/components/schemas/Variation'\n          minItems: 2\n          type: array\n        defaultOnVariation:\n          type: string\n        defaultOffVariation:\n          type: string\n        permanent:\n          type: boolean\n        envProperties:\n          $ref: '#/components/schemas/Feature_envProperties'\n        createdAt:\n          format: int64\n          type: integer\n        modifiedAt:\n          format: int64\n          type: integer\n        tags:\n          items:\n            $ref: '#/components/schemas/Tag'\n          type: array\n        evaluation:\n          type: string\n      required:\n      - archived\n      - createdAt\n      - defaultOffVariation\n      - defaultOnVariation\n      - identifier\n      - kind\n      - modifiedAt\n      - name\n      - permanent\n      - permanent\n      - project\n      - variations\n      type: object\n    FeatureObj:\n      items:\n        $ref: '#/components/schemas/Feature'\n      type: array\n    Features:\n      example:\n        features:\n        - owner:\n          - owner\n          - owner\n          identifier: identifier\n          defaultOnVariation: defaultOnVariation\n          kind: boolean\n          modifiedAt: 9\n          project: project\n          description: description\n          defaultOffVariation: defaultOffVariation\n          tags:\n          - name: name\n            value: value\n          - name: name\n            value: value\n          prerequisites:\n          - feature: feature\n            variations:\n            - variations\n            - variations\n          - feature: feature\n            variations:\n            - variations\n            - variations\n          envProperties:\n            defaultServe:\n              distribution:\n                variations:\n                - weight: 5\n                  variation: variation\n                - weight: 5\n                  variation: variation\n                bucketBy: bucketBy\n              variation: variation\n            environment: environment\n            modifiedAt: 5\n            variationMap:\n            - targetSegments:\n              - targetSegments\n              - targetSegments\n              targets:\n              - identifier: identifier\n                name: name\n              - identifier: identifier\n                name: name\n              variation: variation\n            - targetSegments:\n              - targetSegments\n              - targetSegments\n              targets:\n              - identifier: identifier\n                name: name\n              - identifier: identifier\n                name: name\n              variation: variation\n            rules:\n            - clauses:\n              - op: op\n                negate: true\n                values:\n                - values\n                - values\n                id: id\n                attribute: attribute\n              - op: op\n                negate: true\n                values:\n                - values\n                - values\n                id: id\n                attribute: attribute\n              serve:\n                distribution:\n                  variations:\n                  - weight: 5\n                    variation: variation\n                  - weight: 5\n                    variation: variation\n                  bucketBy: bucketBy\n                variation: variation\n              ruleId: ruleId\n              priority: 1\n            - clauses:\n              - op: op\n                negate: true\n                values:\n                - values\n                - values\n                id: id\n                attribute: attribute\n              - op: op\n                negate: true\n                values:\n                - values\n                - values\n                id: id\n                attribute: attribute\n              serve:\n                distribution:\n                  variations:\n                  - weight: 5\n                    variation: variation\n                  - weight: 5\n                    variation: variation\n                  bucketBy: bucketBy\n                variation: variation\n              ruleId: ruleId\n              priority: 1\n            offVariation: offVariation\n            version: 2\n          evaluation: evaluation\n          archived: true\n          createdAt: 7\n          variations:\n          - identifier: identifier\n            name: name\n            description: description\n            value: value\n          - identifier: identifier\n            name: name\n            description: description\n            value: value\n          permanent: true\n          name: name\n        - owner:\n          - owner\n          - owner\n          identifier: identifier\n          defaultOnVariation: defaultOnVariation\n          kind: boolean\n          modifiedAt: 9\n          project: project\n          description: description\n          defaultOffVariation: defaultOffVariation\n          tags:\n          - name: name\n            value: value\n          - name: name\n            value: value\n          prerequisites:\n          - feature: feature\n            variations:\n            - variations\n            - variations\n          - feature: feature\n            variations:\n            - variations\n            - variations\n          envProperties:\n            defaultServe:\n              distribution:\n                variations:\n                - weight: 5\n                  variation: variation\n                - weight: 5\n                  variation: variation\n                bucketBy: bucketBy\n              variation: variation\n            environment: environment\n            modifiedAt: 5\n            variationMap:\n            - targetSegments:\n              - targetSegments\n              - targetSegments\n              targets:\n              - identifier: identifier\n                name: name\n              - identifier: identifier\n                name: name\n              variation: variation\n            - targetSegments:\n              - targetSegments\n              - targetSegments\n              targets:\n              - identifier: identifier\n                name: name\n              - identifier: identifier\n                name: name\n              variation: variation\n            rules:\n            - clauses:\n              - op: op\n                negate: true\n                values:\n                - values\n                - values\n                id: id\n                attribute: attribute\n              - op: op\n                negate: true\n                values:\n                - values\n                - values\n                id: id\n                attribute: attribute\n              serve:\n                distribution:\n                  variations:\n                  - weight: 5\n                    variation: variation\n                  - weight: 5\n                    variation: variation\n                  bucketBy: bucketBy\n                variation: variation\n              ruleId: ruleId\n              priority: 1\n            - clauses:\n              - op: op\n                negate: true\n                values:\n                - values\n                - values\n                id: id\n                attribute: attribute\n              - op: op\n                negate: true\n                values:\n                - values\n                - values\n                id: id\n                attribute: attribute\n              serve:\n                distribution:\n                  variations:\n                  - weight: 5\n                    variation: variation\n                  - weight: 5\n                    variation: variation\n                  bucketBy: bucketBy\n                variation: variation\n              ruleId: ruleId\n              priority: 1\n            offVariation: offVariation\n            version: 2\n          evaluation: evaluation\n          archived: true\n          createdAt: 7\n          variations:\n          - identifier: identifier\n            name: name\n            description: description\n            value: value\n          - identifier: identifier\n            name: name\n            description: description\n            value: value\n          permanent: true\n          name: name\n        pageCount: 6\n        pageIndex: 0\n        pageSize: 1\n        version: 0\n        itemCount: 1\n      properties:\n        version:\n          type: integer\n        pageCount:\n          type: integer\n        itemCount:\n          example: 1\n          type: integer\n        pageSize:\n          example: 1\n          type: integer\n        pageIndex:\n          example: 0\n          type: integer\n        features:\n          items:\n            $ref: '#/components/schemas/Feature'\n          type: array\n      required:\n      - features\n      - itemCount\n      - pageCount\n      - pageIndex\n      - pageSize\n      type: object\n    Error:\n      properties:\n        code:\n          type: string\n        message:\n          type: string\n      required:\n      - code\n      - message\n      type: object\n    inline_object:\n      properties:\n        project:\n          type: string\n        prerequisites:\n          items:\n            $ref: '#/components/schemas/Prerequisite'\n          type: array\n        name:\n          type: string\n        description:\n          type: string\n        identifier:\n          type: string\n        owner:\n          type: string\n        kind:\n          enum:\n          - boolean\n          - int\n          - string\n          - json\n          type: string\n        archived:\n          type: boolean\n        variations:\n          items:\n            $ref: '#/components/schemas/Variation'\n          minItems: 2\n          type: array\n        tags:\n          items:\n            $ref: '#/components/schemas/Tag'\n          type: array\n        defaultOnVariation:\n          type: string\n        defaultOffVariation:\n          type: string\n        permanent:\n          type: boolean\n      required:\n      - archived\n      - defaultOffVariation\n      - defaultOnVariation\n      - identifier\n      - kind\n      - name\n      - permanent\n      - project\n      - variations\n      type: object\n    Feature_envProperties:\n      example:\n        defaultServe:\n          distribution:\n            variations:\n            - weight: 5\n              variation: variation\n            - weight: 5\n              variation: variation\n            bucketBy: bucketBy\n          variation: variation\n        environment: environment\n        modifiedAt: 5\n        variationMap:\n        - targetSegments:\n          - targetSegments\n          - targetSegments\n          targets:\n          - identifier: identifier\n            name: name\n          - identifier: identifier\n            name: name\n          variation: variation\n        - targetSegments:\n          - targetSegments\n          - targetSegments\n          targets:\n          - identifier: identifier\n            name: name\n          - identifier: identifier\n            name: name\n          variation: variation\n        rules:\n        - clauses:\n          - op: op\n            negate: true\n            values:\n            - values\n            - values\n            id: id\n            attribute: attribute\n          - op: op\n            negate: true\n            values:\n            - values\n            - values\n            id: id\n            attribute: attribute\n          serve:\n            distribution:\n              variations:\n              - weight: 5\n                variation: variation\n              - weight: 5\n                variation: variation\n              bucketBy: bucketBy\n            variation: variation\n          ruleId: ruleId\n          priority: 1\n        - clauses:\n          - op: op\n            negate: true\n            values:\n            - values\n            - values\n            id: id\n            attribute: attribute\n          - op: op\n            negate: true\n            values:\n            - values\n            - values\n            id: id\n            attribute: attribute\n          serve:\n            distribution:\n              variations:\n              - weight: 5\n                variation: variation\n              - weight: 5\n                variation: variation\n              bucketBy: bucketBy\n            variation: variation\n          ruleId: ruleId\n          priority: 1\n        offVariation: offVariation\n        version: 2\n      properties:\n        environment:\n          type: string\n        variationMap:\n          items:\n            $ref: '#/components/schemas/VariationMap'\n          type: array\n        rules:\n          items:\n            $ref: '#/components/schemas/ServingRule'\n          type: array\n        state:\n          $ref: '#/components/schemas/FeatureState'\n        defaultServe:\n          $ref: '#/components/schemas/Serve'\n        offVariation:\n          type: string\n        modifiedAt:\n          format: int64\n          type: integer\n        version:\n          format: int64\n          type: integer\n      required:\n      - createdAt\n      - defaultServe\n      - environment\n      - modifiedAt\n      - offVariation\n      - state\n  securitySchemes:\n    ApiKeyAuth:\n      in: header\n      name: api-key\n      type: apiKey\n    BearerAuth:\n      scheme: bearer\n      type: http\n\n",
			"canonicalURL": "/github.com/harness/harness-core@fb76ceccecf39d5f955df6716b2bc6e9e41572cc/-/blob/960-continuous-features/src/generated/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/harness/harness-core/blob/fb76ceccecf39d5f955df6716b2bc6e9e41572cc/960-continuous-features/src/generated/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}