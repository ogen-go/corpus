{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/devtron-labs/devtron"
		},
		"file": {
			"name": "gitops_bitbucket.yaml",
			"size": 0,
			"path": "specs/gitops_bitbucket.yaml",
			"byteSize": 5177,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  title: GitOps bitbucket support\npaths:\n  /orchestrator/gitops/validate:\n    post:\n      description: Validate gitops configuration by dry run\n      operationId: GitOpsValidateDryRun\n      requestBody:\n        description: A JSON object containing the gitops configuration\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GitOpsConfigDto'\n      responses:\n        '200':\n          description: Successfully return all validation stages results\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DetailedError'\n        '400':\n          description: Bad Request. Input Validation error/wrong request body.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Unauthorized User\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /orchestrator/gitops/config:\n    post:\n      description: create/save new configuration and validate them before saving\n      operationId: CreateGitOpsConfig\n      requestBody:\n        description: A JSON object containing the gitops configuration\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GitOpsConfigDto'\n      responses:\n        '200':\n          description: Successfully return all validation stages results and if validation is correct then saves the configuration in the backend\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DetailedError'\n        '400':\n          description: Bad Request. Input Validation error/wrong request body.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Unauthorized User\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    put:\n      description: update configuration and validate them before saving\n      operationId: UpdateGitOpsConfig\n      requestBody:\n        description: A JSON object containing the gitops configuration\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GitOpsConfigDto'\n      responses:\n        '200':\n          description: Successfully return all validation stages results and if validation is correct then updates the configuration in the backend\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DetailedError'\n        '400':\n          description: Bad Request. Input Validation error/wrong request body.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Unauthorized User\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\ncomponents:\n  schemas:\n    GitOpsConfigDto:\n      type: object\n      properties:\n        id:\n          type: integer\n        provider:\n          type: string\n        username:\n          type: string\n        token:\n          type: string\n        gitLabGroupId:\n          type: string\n        gitHubOrgId:\n          type: string\n        host:\n          type: string\n        active:\n          type: boolean\n        azureProjectName:\n          type: string\n        bitBucketWorkspaceId:\n          type: string\n        bitBucketProjectKey:\n          type: string\n        userId:\n          type: integer\n    DetailedError:\n      type: object\n      properties:\n        successfulStages:\n          type: array\n          items:\n            type: string\n          description: All successful stages\n        validatedOn:\n          type: string\n          description: Timestamp of validation\n        stageErrorMap:\n          type: array\n          items:\n            type: object\n            properties:\n              stage:\n                type: string\n              error:\n                type: string\n          description: map of stage and their respective errors\n    Error:\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          description: Error code\n        message:\n          type: string\n          description: Error message",
			"canonicalURL": "/github.com/devtron-labs/devtron@62f6101b37819e1ac319a744bbf3438184f0c8d5/-/blob/specs/gitops_bitbucket.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/devtron-labs/devtron/blob/62f6101b37819e1ac319a744bbf3438184f0c8d5/specs/gitops_bitbucket.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}