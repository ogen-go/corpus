{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/parliament.uk/writtenquestions/v1/openapi.yaml",
			"byteSize": 31154,
			"content": "openapi: 3.0.1\ninfo:\n  contact:\n    email: softwareengineering@parliament.uk\n    name: UK Parliament\n    url: https://www.parliament.uk\n  description: Data around written questions and answers, as well as written ministerial statements.\n  title: Written Questions Service API\n  version: v1\n  x-apisguru-categories:\n    - open_data\n  x-origin:\n    - format: openapi\n      url: https://writtenquestions-api.parliament.uk/swagger/v1/swagger.json\n      version: \"3.0\"\n  x-providerName: parliament.uk\n  x-serviceName: writtenquestions\npaths:\n  /api/dailyreports/dailyreports:\n    get:\n      parameters:\n        - description: Daily report with report date on or after the date specified. Date format yyyy-mm-dd\n          in: query\n          name: dateFrom\n          schema:\n            description: Daily report with report date on or after the date specified. Date format yyyy-mm-dd\n            format: date-time\n            nullable: true\n            type: string\n        - description: Daily report with report date on or before the date specified. Date format yyyy-mm-dd\n          in: query\n          name: dateTo\n          schema:\n            description: Daily report with report date on or before the date specified. Date format yyyy-mm-dd\n            format: date-time\n            nullable: true\n            type: string\n        - description: Daily report relating to the House specified. Defaults to Bicameral\n          in: query\n          name: house\n          schema:\n            $ref: \"#/components/schemas/HouseEnum\"\n        - description: Number of records to skip, default is 0\n          in: query\n          name: skip\n          schema:\n            description: Number of records to skip, default is 0\n            format: int32\n            maximum: 2147483647\n            minimum: 0\n            nullable: true\n            type: integer\n        - description: Number of records to take, default is 20\n          in: query\n          name: take\n          schema:\n            description: Number of records to take, default is 20\n            format: int32\n            maximum: 2147483647\n            minimum: 0\n            nullable: true\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DailyReportViewModelSearchResult\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/DailyReportViewModelSearchResult\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/DailyReportViewModelSearchResult\"\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProblemDetails\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ProblemDetails\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ProblemDetails\"\n          description: Bad Request\n      summary: Returns a list of daily reports\n      tags:\n        - DailyReports\n  /api/writtenquestions/questions:\n    get:\n      parameters:\n        - description: Written questions asked by member with member ID specified\n          in: query\n          name: askingMemberId\n          schema:\n            description: Written questions asked by member with member ID specified\n            format: int32\n            maximum: 2147483647\n            minimum: 1\n            nullable: true\n            type: integer\n        - description: Written questions answered by member with member ID specified\n          in: query\n          name: answeringMemberId\n          schema:\n            description: Written questions answered by member with member ID specified\n            format: int32\n            maximum: 2147483647\n            minimum: 1\n            nullable: true\n            type: integer\n        - description: Written questions tabled on or after the date specified. Date format yyyy-mm-dd\n          in: query\n          name: tabledWhenFrom\n          schema:\n            description: Written questions tabled on or after the date specified. Date format yyyy-mm-dd\n            format: date-time\n            nullable: true\n            type: string\n        - description: Written questions tabled on or before the date specified. Date format yyyy-mm-dd\n          in: query\n          name: tabledWhenTo\n          schema:\n            description: Written questions tabled on or before the date specified. Date format yyyy-mm-dd\n            format: date-time\n            nullable: true\n            type: string\n        - description: Written questions that have been answered, unanswered or either.\n          in: query\n          name: answered\n          schema:\n            $ref: \"#/components/schemas/Answered\"\n        - description: Written questions answered on or after the date specified. Date format yyyy-mm-dd\n          in: query\n          name: answeredWhenFrom\n          schema:\n            description: Written questions answered on or after the date specified. Date format yyyy-mm-dd\n            format: date-time\n            nullable: true\n            type: string\n        - description: Written questions answered on or before the date specified. Date format yyyy-mm-dd\n          in: query\n          name: answeredWhenTo\n          schema:\n            description: Written questions answered on or before the date specified. Date format yyyy-mm-dd\n            format: date-time\n            nullable: true\n            type: string\n        - description: Written questions with the status specified\n          in: query\n          name: questionStatus\n          schema:\n            $ref: \"#/components/schemas/QuestionStatusEnum\"\n        - description: Include written questions that have been withdrawn\n          in: query\n          name: includeWithdrawn\n          schema:\n            description: Include written questions that have been withdrawn\n            type: boolean\n        - description: Expand the details of Members in the results\n          in: query\n          name: expandMember\n          schema:\n            description: Expand the details of Members in the results\n            type: boolean\n        - description: Written questions corrected on or after the date specified. Date format yyyy-mm-dd\n          in: query\n          name: correctedWhenFrom\n          schema:\n            description: Written questions corrected on or after the date specified. Date format yyyy-mm-dd\n            format: date-time\n            nullable: true\n            type: string\n        - description: Written questions corrected on or before the date specified. Date format yyyy-mm-dd\n          in: query\n          name: correctedWhenTo\n          schema:\n            description: Written questions corrected on or before the date specified. Date format yyyy-mm-dd\n            format: date-time\n            nullable: true\n            type: string\n        - description: Written questions / statements containing the search term specified, searches item content\n          in: query\n          name: searchTerm\n          schema:\n            description: Written questions / statements containing the search term specified, searches item content\n            nullable: true\n            type: string\n        - description: Written questions / statements with the uin specified\n          in: query\n          name: uIN\n          schema:\n            description: Written questions / statements with the uin specified\n            nullable: true\n            type: string\n        - description: Written questions / statements relating to the answering bodies with the IDs specified\n          in: query\n          name: answeringBodies\n          schema:\n            description: Written questions / statements relating to the answering bodies with the IDs specified\n            items:\n              format: int32\n              type: integer\n            nullable: true\n            type: array\n        - description: Written questions / statements relating to the members with the IDs specified\n          in: query\n          name: members\n          schema:\n            description: Written questions / statements relating to the members with the IDs specified\n            items:\n              format: int32\n              type: integer\n            nullable: true\n            type: array\n        - description: Written questions / statements relating to the House specified\n          in: query\n          name: house\n          schema:\n            $ref: \"#/components/schemas/HouseEnum\"\n        - description: Number of records to skip, default is 0\n          in: query\n          name: skip\n          schema:\n            description: Number of records to skip, default is 0\n            format: int32\n            maximum: 2147483647\n            minimum: 0\n            nullable: true\n            type: integer\n        - description: Number of records to take, default is 20\n          in: query\n          name: take\n          schema:\n            description: Number of records to take, default is 20\n            format: int32\n            maximum: 2147483647\n            minimum: 0\n            nullable: true\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/QuestionsViewModelSearchResult\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/QuestionsViewModelSearchResult\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/QuestionsViewModelSearchResult\"\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProblemDetails\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ProblemDetails\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ProblemDetails\"\n          description: Bad Request\n      summary: Returns a list of written questions\n      tags:\n        - WrittenQuestions\n  \"/api/writtenquestions/questions/{date}/{uin}\":\n    get:\n      parameters:\n        - description: Written question on date specified\n          in: path\n          name: date\n          required: true\n          schema:\n            description: Written question on date specified\n            format: date-time\n            type: string\n        - description: Written question with uid specified\n          in: path\n          name: uin\n          required: true\n          schema:\n            description: Written question with uid specified\n            nullable: true\n            type: string\n        - description: Expand the details of Members in the results\n          in: query\n          name: expandMember\n          schema:\n            description: Expand the details of Members in the results\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/QuestionsViewModelItem\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/QuestionsViewModelItem\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/QuestionsViewModelItem\"\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProblemDetails\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ProblemDetails\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ProblemDetails\"\n          description: Bad Request\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProblemDetails\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ProblemDetails\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ProblemDetails\"\n          description: Not Found\n      summary: Returns a written question\n      tags:\n        - WrittenQuestions\n  \"/api/writtenquestions/questions/{id}\":\n    get:\n      parameters:\n        - description: written question with ID specified\n          in: path\n          name: id\n          required: true\n          schema:\n            description: written question with ID specified\n            format: int32\n            type: integer\n        - description: Expand the details of Members in the result\n          in: query\n          name: expandMember\n          schema:\n            description: Expand the details of Members in the result\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/QuestionsViewModelItem\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/QuestionsViewModelItem\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/QuestionsViewModelItem\"\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProblemDetails\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ProblemDetails\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ProblemDetails\"\n          description: Bad Request\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProblemDetails\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ProblemDetails\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ProblemDetails\"\n          description: Not Found\n      summary: Returns a written question\n      tags:\n        - WrittenQuestions\n  /api/writtenstatements/statements:\n    get:\n      parameters:\n        - description: Written statements made on or after the date specified. Date format yyyy-mm-dd\n          in: query\n          name: madeWhenFrom\n          schema:\n            description: Written statements made on or after the date specified. Date format yyyy-mm-dd\n            format: date-time\n            nullable: true\n            type: string\n        - description: Written statements made on or before the date specified. Date format yyyy-mm-dd\n          in: query\n          name: madeWhenTo\n          schema:\n            description: Written statements made on or before the date specified. Date format yyyy-mm-dd\n            format: date-time\n            nullable: true\n            type: string\n        - description: Written questions / statements containing the search term specified, searches item content\n          in: query\n          name: searchTerm\n          schema:\n            description: Written questions / statements containing the search term specified, searches item content\n            nullable: true\n            type: string\n        - description: Written questions / statements with the uin specified\n          in: query\n          name: uIN\n          schema:\n            description: Written questions / statements with the uin specified\n            nullable: true\n            type: string\n        - description: Written questions / statements relating to the answering bodies with the IDs specified\n          in: query\n          name: answeringBodies\n          schema:\n            description: Written questions / statements relating to the answering bodies with the IDs specified\n            items:\n              format: int32\n              type: integer\n            nullable: true\n            type: array\n        - description: Written questions / statements relating to the members with the IDs specified\n          in: query\n          name: members\n          schema:\n            description: Written questions / statements relating to the members with the IDs specified\n            items:\n              format: int32\n              type: integer\n            nullable: true\n            type: array\n        - description: Written questions / statements relating to the House specified\n          in: query\n          name: house\n          schema:\n            $ref: \"#/components/schemas/HouseEnum\"\n        - description: Number of records to skip, default is 0\n          in: query\n          name: skip\n          schema:\n            description: Number of records to skip, default is 0\n            format: int32\n            maximum: 2147483647\n            minimum: 0\n            nullable: true\n            type: integer\n        - description: Number of records to take, default is 20\n          in: query\n          name: take\n          schema:\n            description: Number of records to take, default is 20\n            format: int32\n            maximum: 2147483647\n            minimum: 0\n            nullable: true\n            type: integer\n        - description: Expand the details of Members in the results\n          in: query\n          name: expandMember\n          schema:\n            description: Expand the details of Members in the results\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StatementsViewModelSearchResult\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/StatementsViewModelSearchResult\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/StatementsViewModelSearchResult\"\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProblemDetails\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ProblemDetails\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ProblemDetails\"\n          description: Bad Request\n      summary: Returns a list of written statements\n      tags:\n        - WrittenStatements\n  \"/api/writtenstatements/statements/{date}/{uin}\":\n    get:\n      parameters:\n        - description: Written statement on date specified\n          in: path\n          name: date\n          required: true\n          schema:\n            description: Written statement on date specified\n            format: date-time\n            type: string\n        - description: Written statement with uid specified\n          in: path\n          name: uin\n          required: true\n          schema:\n            description: Written statement with uid specified\n            nullable: true\n            type: string\n        - description: Expand the details of Members in the results\n          in: query\n          name: expandMember\n          schema:\n            description: Expand the details of Members in the results\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StatementsViewModelItem\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/StatementsViewModelItem\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/StatementsViewModelItem\"\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProblemDetails\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ProblemDetails\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ProblemDetails\"\n          description: Bad Request\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProblemDetails\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ProblemDetails\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ProblemDetails\"\n          description: Not Found\n      summary: Returns a written statemnet\n      tags:\n        - WrittenStatements\n  \"/api/writtenstatements/statements/{id}\":\n    get:\n      parameters:\n        - description: Written statement with ID specified\n          in: path\n          name: id\n          required: true\n          schema:\n            description: Written statement with ID specified\n            format: int32\n            type: integer\n        - description: Expand the details of Members in the results\n          in: query\n          name: expandMember\n          schema:\n            description: Expand the details of Members in the results\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StatementsViewModelSearchResult\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/StatementsViewModelSearchResult\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/StatementsViewModelSearchResult\"\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProblemDetails\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ProblemDetails\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ProblemDetails\"\n          description: Bad Request\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProblemDetails\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ProblemDetails\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ProblemDetails\"\n          description: Not Found\n      summary: Returns a written statement\n      tags:\n        - WrittenStatements\ncomponents:\n  schemas:\n    Answered:\n      enum:\n        - Any\n        - Answered\n        - Unanswered\n      type: string\n    AttachmentViewModel:\n      additionalProperties: false\n      properties:\n        fileSizeBytes:\n          format: int64\n          type: integer\n        fileType:\n          nullable: true\n          type: string\n        title:\n          nullable: true\n          type: string\n        url:\n          nullable: true\n          type: string\n      type: object\n    DailyReportViewModel:\n      additionalProperties: false\n      properties:\n        date:\n          format: date-time\n          type: string\n        fileSizeBytes:\n          format: int64\n          type: integer\n        house:\n          $ref: \"#/components/schemas/HouseEnum\"\n        url:\n          nullable: true\n          type: string\n      type: object\n    DailyReportViewModelItem:\n      additionalProperties: false\n      properties:\n        links:\n          items:\n            $ref: \"#/components/schemas/Link\"\n          nullable: true\n          type: array\n        value:\n          $ref: \"#/components/schemas/DailyReportViewModel\"\n      type: object\n    DailyReportViewModelSearchResult:\n      additionalProperties: false\n      properties:\n        results:\n          items:\n            $ref: \"#/components/schemas/DailyReportViewModelItem\"\n          nullable: true\n          type: array\n        totalResults:\n          format: int32\n          type: integer\n      type: object\n    GroupedQuestionViewModel:\n      additionalProperties: false\n      properties:\n        dateTabled:\n          format: date-time\n          type: string\n        questionUin:\n          nullable: true\n          type: string\n      type: object\n    HouseEnum:\n      enum:\n        - Bicameral\n        - Commons\n        - Lords\n      type: string\n    Link:\n      additionalProperties: false\n      properties:\n        href:\n          nullable: true\n          type: string\n        method:\n          nullable: true\n          type: string\n        rel:\n          nullable: true\n          type: string\n      type: object\n    LinkedStatements:\n      additionalProperties: false\n      properties:\n        linkDate:\n          format: date-time\n          type: string\n        linkType:\n          $ref: \"#/components/schemas/StatementLinkTypeEnum\"\n        linkedStatementId:\n          format: int32\n          type: integer\n      type: object\n    MemberViewModel:\n      additionalProperties: false\n      properties:\n        id:\n          format: int32\n          type: integer\n        listAs:\n          nullable: true\n          type: string\n        memberFrom:\n          nullable: true\n          type: string\n        name:\n          nullable: true\n          type: string\n        party:\n          nullable: true\n          type: string\n        partyAbbreviation:\n          nullable: true\n          type: string\n        partyColour:\n          nullable: true\n          type: string\n        thumbnailUrl:\n          nullable: true\n          type: string\n      type: object\n    ProblemDetails:\n      additionalProperties:\n        additionalProperties: false\n        type: object\n      properties:\n        detail:\n          nullable: true\n          type: string\n        instance:\n          nullable: true\n          type: string\n        status:\n          format: int32\n          nullable: true\n          type: integer\n        title:\n          nullable: true\n          type: string\n        type:\n          nullable: true\n          type: string\n      type: object\n    QuestionStatusEnum:\n      enum:\n        - NotAnswered\n        - AnsweredOnly\n        - AllQuestions\n      type: string\n    QuestionsViewModel:\n      additionalProperties: false\n      properties:\n        answerIsCorrection:\n          nullable: true\n          type: boolean\n        answerIsHolding:\n          nullable: true\n          type: boolean\n        answerText:\n          nullable: true\n          type: string\n        answeringBodyId:\n          format: int32\n          type: integer\n        answeringBodyName:\n          nullable: true\n          type: string\n        answeringMember:\n          $ref: \"#/components/schemas/MemberViewModel\"\n        answeringMemberId:\n          format: int32\n          nullable: true\n          type: integer\n        askingMember:\n          $ref: \"#/components/schemas/MemberViewModel\"\n        askingMemberId:\n          format: int32\n          type: integer\n        attachmentCount:\n          format: int32\n          type: integer\n        attachments:\n          items:\n            $ref: \"#/components/schemas/AttachmentViewModel\"\n          nullable: true\n          type: array\n        comparableAnswerText:\n          nullable: true\n          type: string\n        correctingMember:\n          $ref: \"#/components/schemas/MemberViewModel\"\n        correctingMemberId:\n          format: int32\n          nullable: true\n          type: integer\n        dateAnswerCorrected:\n          format: date-time\n          nullable: true\n          type: string\n        dateAnswered:\n          format: date-time\n          nullable: true\n          type: string\n        dateForAnswer:\n          format: date-time\n          type: string\n        dateHoldingAnswer:\n          format: date-time\n          nullable: true\n          type: string\n        dateTabled:\n          format: date-time\n          type: string\n        groupedQuestions:\n          items:\n            type: string\n          nullable: true\n          type: array\n        groupedQuestionsDates:\n          items:\n            $ref: \"#/components/schemas/GroupedQuestionViewModel\"\n          nullable: true\n          type: array\n        heading:\n          nullable: true\n          type: string\n        house:\n          $ref: \"#/components/schemas/HouseEnum\"\n        id:\n          format: int32\n          type: integer\n        isNamedDay:\n          type: boolean\n        isWithdrawn:\n          type: boolean\n        memberHasInterest:\n          type: boolean\n        originalAnswerText:\n          nullable: true\n          type: string\n        questionText:\n          nullable: true\n          type: string\n        uin:\n          nullable: true\n          type: string\n      type: object\n    QuestionsViewModelItem:\n      additionalProperties: false\n      properties:\n        links:\n          items:\n            $ref: \"#/components/schemas/Link\"\n          nullable: true\n          type: array\n        value:\n          $ref: \"#/components/schemas/QuestionsViewModel\"\n      type: object\n    QuestionsViewModelSearchResult:\n      additionalProperties: false\n      properties:\n        results:\n          items:\n            $ref: \"#/components/schemas/QuestionsViewModelItem\"\n          nullable: true\n          type: array\n        totalResults:\n          format: int32\n          type: integer\n      type: object\n    StatementLinkTypeEnum:\n      enum:\n        - CorrectedStatement\n        - CorrectedAnswer\n        - JointStatement\n      type: string\n    StatementsViewModel:\n      additionalProperties: false\n      properties:\n        answeringBodyId:\n          format: int32\n          type: integer\n        answeringBodyName:\n          nullable: true\n          type: string\n        attachments:\n          items:\n            $ref: \"#/components/schemas/AttachmentViewModel\"\n          nullable: true\n          type: array\n        dateMade:\n          format: date-time\n          type: string\n        hasAttachments:\n          type: boolean\n        hasLinkedStatements:\n          type: boolean\n        house:\n          $ref: \"#/components/schemas/HouseEnum\"\n        id:\n          format: int32\n          type: integer\n        linkedStatements:\n          items:\n            $ref: \"#/components/schemas/LinkedStatements\"\n          nullable: true\n          type: array\n        member:\n          $ref: \"#/components/schemas/MemberViewModel\"\n        memberId:\n          format: int32\n          type: integer\n        memberRole:\n          nullable: true\n          type: string\n        noticeNumber:\n          format: int32\n          type: integer\n        text:\n          nullable: true\n          type: string\n        title:\n          nullable: true\n          type: string\n        uin:\n          nullable: true\n          type: string\n      type: object\n    StatementsViewModelItem:\n      additionalProperties: false\n      properties:\n        links:\n          items:\n            $ref: \"#/components/schemas/Link\"\n          nullable: true\n          type: array\n        value:\n          $ref: \"#/components/schemas/StatementsViewModel\"\n      type: object\n    StatementsViewModelSearchResult:\n      additionalProperties: false\n      properties:\n        results:\n          items:\n            $ref: \"#/components/schemas/StatementsViewModelItem\"\n          nullable: true\n          type: array\n        totalResults:\n          format: int32\n          type: integer\n      type: object\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/parliament.uk/writtenquestions/v1/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/parliament.uk/writtenquestions/v1/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}