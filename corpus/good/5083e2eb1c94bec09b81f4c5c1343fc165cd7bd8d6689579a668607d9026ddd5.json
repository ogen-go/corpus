{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "azure.com-apimanagement-2019-01-01-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/azure.com-apimanagement-2019-01-01-swagger.yaml",
			"byteSize": 20334,
			"content": "openapi: 3.0.0\ninfo:\n  description: Use these REST APIs for performing operations on entities like API, Product,\n    and Subscription associated with your Azure API Management deployment.\n  title: ApiManagementClient\n  version: 2019-01-01\n  x-apisguru-categories:\n    - cloud\n  x-logo:\n    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png\n  x-origin:\n    - format: swagger\n      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2019-01-01/apimanagement.json\n      version: \"2.0\"\n  x-preferred: true\n  x-providerName: azure.com\n  x-serviceName: apimanagement\n  x-tags:\n    - Azure\n    - Microsoft\nsecurity:\n  - azure_auth:\n      - user_impersonation\npaths: {}\nservers:\n  - url: https://management.azure.com\ncomponents:\n  parameters:\n    AccessParameter:\n      description: The identifier of the Access configuration.\n      in: path\n      name: accessName\n      required: true\n      x-ms-enum:\n        modelAsString: true\n        name: AccessIdName\n      x-ms-parameter-location: method\n      schema:\n        type: string\n        enum:\n          - access\n    ApiIdParameter:\n      description: API identifier. Must be unique in the current API Management service\n        instance.\n      in: path\n      name: apiId\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n        minLength: 1\n        maxLength: 80\n    ApiIdRevParameter:\n      description: API revision identifier. Must be unique in the current API Management\n        service instance. Non-current revision has ;rev=n as a suffix where n is\n        the revision number.\n      in: path\n      name: apiId\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n        minLength: 1\n        maxLength: 256\n        pattern: ^[^*#\u0026+:\u003c\u003e?]+$\n    ApiVersionParameter:\n      description: Version of the API to be used with the client request.\n      in: query\n      name: api-version\n      required: true\n      schema:\n        type: string\n    ApiVersionSetIdParameter:\n      description: Api Version Set identifier. Must be unique in the current API Management\n        service instance.\n      in: path\n      name: versionSetId\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n        minLength: 1\n        maxLength: 80\n        pattern: ^[^*#\u0026+:\u003c\u003e?]+$\n    AttachmentIdParameter:\n      description: Attachment identifier within an Issue. Must be unique in the current\n        Issue.\n      in: path\n      name: attachmentId\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n        minLength: 1\n        maxLength: 256\n        pattern: ^[^*#\u0026+:\u003c\u003e?]+$\n    AuthenticationServerIdParameter:\n      description: Identifier of the authorization server.\n      in: path\n      name: authsid\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n        minLength: 1\n        maxLength: 80\n        pattern: ^[^*#\u0026+:\u003c\u003e?]+$\n    BackendIdParameter:\n      description: Identifier of the Backend entity. Must be unique in the current API\n        Management service instance.\n      in: path\n      name: backendId\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n        minLength: 1\n        maxLength: 80\n    CacheIdParameter:\n      description: Identifier of the Cache entity. Cache identifier (should be either\n        'default' or valid Azure region identifier).\n      in: path\n      name: cacheId\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n        minLength: 1\n        maxLength: 80\n        pattern: ^[^*#\u0026+:\u003c\u003e?]+$\n    CertificateIdParameter:\n      description: Identifier of the certificate entity. Must be unique in the current API\n        Management service instance.\n      in: path\n      name: certificateId\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n        minLength: 1\n        maxLength: 80\n        pattern: ^[^*#\u0026+:\u003c\u003e?]+$\n    CommentIdParameter:\n      description: Comment identifier within an Issue. Must be unique in the current Issue.\n      in: path\n      name: commentId\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n        minLength: 1\n        maxLength: 256\n        pattern: ^[^*#\u0026+:\u003c\u003e?]+$\n    ConfigurationParameter:\n      description: The identifier of the Git Configuration Operation.\n      in: path\n      name: configurationName\n      required: true\n      x-ms-enum:\n        modelAsString: true\n        name: configurationIdName\n      x-ms-parameter-location: method\n      schema:\n        type: string\n        enum:\n          - configuration\n    DiagnosticIdParameter:\n      description: Diagnostic identifier. Must be unique in the current API Management\n        service instance.\n      in: path\n      name: diagnosticId\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n        minLength: 1\n        maxLength: 80\n        pattern: ^[^*#\u0026+:\u003c\u003e?]+$\n    EmailParameter:\n      description: Email identifier.\n      in: path\n      name: email\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    GroupIdParameter:\n      description: Group identifier. Must be unique in the current API Management service\n        instance.\n      in: path\n      name: groupId\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n        minLength: 1\n        maxLength: 256\n    IdentityProviderNameParameter:\n      description: Identity Provider Type identifier.\n      in: path\n      name: identityProviderName\n      required: true\n      x-ms-enum:\n        modelAsString: true\n        name: IdentityProviderType\n        values:\n          - description: Facebook as Identity provider.\n            value: facebook\n          - description: Google as Identity provider.\n            value: google\n          - description: Microsoft Live as Identity provider.\n            value: microsoft\n          - description: Twitter as Identity provider.\n            value: twitter\n          - description: Azure Active Directory as Identity provider.\n            value: aad\n          - description: Azure Active Directory B2C as Identity provider.\n            value: aadB2C\n      x-ms-parameter-location: method\n      schema:\n        type: string\n        enum:\n          - facebook\n          - google\n          - microsoft\n          - twitter\n          - aad\n          - aadB2C\n    IfMatchOptionalParameter:\n      description: ETag of the Entity. Not required when creating an entity, but required\n        when updating an entity.\n      in: header\n      name: If-Match\n      required: false\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    IfMatchRequiredParameter:\n      description: ETag of the Entity. ETag should match the current entity state from the\n        header response of the GET request or it should be * for unconditional\n        update.\n      in: header\n      name: If-Match\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    IssueIdParameter:\n      description: Issue identifier. Must be unique in the current API Management service\n        instance.\n      in: path\n      name: issueId\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n        minLength: 1\n        maxLength: 256\n        pattern: ^[^*#\u0026+:\u003c\u003e?]+$\n    LocationNameParameter:\n      description: Location in which the API Management service is deployed. This is one of\n        the Azure Regions like West US, East US, South Central US.\n      in: path\n      name: locationName\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n        minLength: 1\n    LoggerIdParameter:\n      description: Logger identifier. Must be unique in the API Management service instance.\n      in: path\n      name: loggerId\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n        maxLength: 256\n        pattern: ^[^*#\u0026+:\u003c\u003e?]+$\n    NotificationNameParameter:\n      description: Notification Name Identifier.\n      in: path\n      name: notificationName\n      required: true\n      x-ms-enum:\n        modelAsString: true\n        name: NotificationName\n        values:\n          - description: The following email recipients and users will receive email\n              notifications about subscription requests for API products\n              requiring approval.\n            value: RequestPublisherNotificationMessage\n          - description: The following email recipients and users will receive email\n              notifications about new API product subscriptions.\n            value: PurchasePublisherNotificationMessage\n          - description: The following email recipients and users will receive email\n              notifications when new applications are submitted to the\n              application gallery.\n            value: NewApplicationNotificationMessage\n          - description: The following recipients will receive blind carbon copies of all\n              emails sent to developers.\n            value: BCC\n          - description: The following email recipients and users will receive email\n              notifications when a new issue or comment is submitted on the\n              developer portal.\n            value: NewIssuePublisherNotificationMessage\n          - description: The following email recipients and users will receive email\n              notifications when developer closes his account.\n            value: AccountClosedPublisher\n          - description: The following email recipients and users will receive email\n              notifications when subscription usage gets close to usage quota.\n            value: QuotaLimitApproachingPublisherNotificationMessage\n      x-ms-parameter-location: method\n      schema:\n        type: string\n        enum:\n          - RequestPublisherNotificationMessage\n          - PurchasePublisherNotificationMessage\n          - NewApplicationNotificationMessage\n          - BCC\n          - NewIssuePublisherNotificationMessage\n          - AccountClosedPublisher\n          - QuotaLimitApproachingPublisherNotificationMessage\n    NotifySubscriptionStateChangeParameter:\n      description: \u003e-\n        Notify change in Subscription State. \n         - If false, do not send any email notification for change of state of subscription \n         - If true, send email notification of change of state of subscription \n      in: query\n      name: notify\n      required: false\n      x-ms-parameter-location: method\n      schema:\n        type: boolean\n    OpenIdConnectIdParameter:\n      description: Identifier of the OpenID Connect Provider.\n      in: path\n      name: opid\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n        maxLength: 256\n        pattern: ^[^*#\u0026+:\u003c\u003e?]+$\n    OperationIdParameter:\n      description: Operation identifier within an API. Must be unique in the current API\n        Management service instance.\n      in: path\n      name: operationId\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n        minLength: 1\n        maxLength: 80\n    PolicyExportFormat:\n      description: Policy Export Format.\n      in: query\n      name: format\n      required: false\n      x-ms-enum:\n        modelAsString: true\n        name: PolicyExportFormat\n        values:\n          - description: The contents are inline and Content type is an XML document.\n            value: xml\n          - description: The contents are inline and Content type is a non XML encoded\n              policy document.\n            value: rawxml\n      x-ms-parameter-location: method\n      schema:\n        type: string\n        enum:\n          - xml\n          - rawxml\n        default: xml\n    PolicyIdParameter:\n      description: The identifier of the Policy.\n      in: path\n      name: policyId\n      required: true\n      x-ms-enum:\n        modelAsString: true\n        name: PolicyIdName\n      x-ms-parameter-location: method\n      schema:\n        type: string\n        enum:\n          - policy\n    ProductIdParameter:\n      description: Product identifier. Must be unique in the current API Management service\n        instance.\n      in: path\n      name: productId\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n        minLength: 1\n        maxLength: 256\n    PropertyIdParameter:\n      description: Identifier of the property.\n      in: path\n      name: propId\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n        maxLength: 256\n        pattern: ^[^*#\u0026+:\u003c\u003e?]+$\n    QuotaCounterKeyParameter:\n      description: Quota counter key identifier.This is the result of expression defined in\n        counter-key attribute of the quota-by-key policy.For Example, if you\n        specify counter-key=\"boo\" in the policy, then it’s accessible by \"boo\"\n        counter key. But if it’s defined as counter-key=\"@(\"b\"+\"a\")\" then it\n        will be accessible by \"ba\" key\n      in: path\n      name: quotaCounterKey\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    QuotaPeriodKeyParameter:\n      description: Quota period key identifier.\n      in: path\n      name: quotaPeriodKey\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    ReleaseIdParameter:\n      description: Release identifier within an API. Must be unique in the current API\n        Management service instance.\n      in: path\n      name: releaseId\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n        minLength: 1\n        maxLength: 80\n        pattern: ^[^*#\u0026+:\u003c\u003e?]+$\n    ResourceGroupNameParameter:\n      description: The name of the resource group.\n      in: path\n      name: resourceGroupName\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    SchemaIdParameter:\n      description: Schema identifier within an API. Must be unique in the current API\n        Management service instance.\n      in: path\n      name: schemaId\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n        minLength: 1\n        maxLength: 80\n        pattern: ^[^*#\u0026+:\u003c\u003e?]+$\n    ServiceNameParameter:\n      description: The name of the API Management service.\n      in: path\n      name: serviceName\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n        minLength: 1\n        maxLength: 50\n        pattern: ^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$\n    SkipQueryParameter:\n      description: Number of records to skip.\n      in: query\n      name: $skip\n      required: false\n      x-ms-parameter-location: method\n      schema:\n        type: integer\n        format: int32\n        minimum: 0\n    SubscriptionEntityIdParameter:\n      description: Subscription entity Identifier. The entity represents the association\n        between a user and a product in API Management.\n      in: path\n      name: sid\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n        maxLength: 256\n        pattern: ^[^*#\u0026+:\u003c\u003e?]+$\n    SubscriptionIdParameter:\n      description: Subscription credentials which uniquely identify Microsoft Azure\n        subscription. The subscription ID forms part of the URI for every\n        service call.\n      in: path\n      name: subscriptionId\n      required: true\n      schema:\n        type: string\n    TagIdParameter:\n      description: Tag identifier. Must be unique in the current API Management service\n        instance.\n      in: path\n      name: tagId\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n        minLength: 1\n        maxLength: 80\n        pattern: ^[^*#\u0026+:\u003c\u003e?]+$\n    TemplateNameParameter:\n      description: Email Template Name Identifier.\n      in: path\n      name: templateName\n      required: true\n      x-ms-enum:\n        modelAsString: true\n        name: TemplateName\n      x-ms-parameter-location: method\n      schema:\n        type: string\n        enum:\n          - applicationApprovedNotificationMessage\n          - accountClosedDeveloper\n          - quotaLimitApproachingDeveloperNotificationMessage\n          - newDeveloperNotificationMessage\n          - emailChangeIdentityDefault\n          - inviteUserNotificationMessage\n          - newCommentNotificationMessage\n          - confirmSignUpIdentityDefault\n          - newIssueNotificationMessage\n          - purchaseDeveloperNotificationMessage\n          - passwordResetIdentityDefault\n          - passwordResetByAdminNotificationMessage\n          - rejectDeveloperNotificationMessage\n          - requestDeveloperNotificationMessage\n    TopQueryParameter:\n      description: Number of records to return.\n      in: query\n      name: $top\n      required: false\n      x-ms-parameter-location: method\n      schema:\n        type: integer\n        format: int32\n        minimum: 1\n    UserIdParameter:\n      description: User identifier. Must be unique in the current API Management service\n        instance.\n      in: path\n      name: userId\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n        minLength: 1\n        maxLength: 80\n  securitySchemes:\n    azure_auth:\n      description: Azure Active Directory OAuth2 Flow.\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize\n          scopes:\n            user_impersonation: impersonate your user account\n  schemas:\n    ErrorFieldContract:\n      description: Error Field contract.\n      properties:\n        code:\n          description: Property level error code.\n          type: string\n        message:\n          description: Human-readable representation of property-level error.\n          type: string\n        target:\n          description: Property name.\n          type: string\n    ErrorResponse:\n      description: Error Response.\n      properties:\n        error:\n          $ref: \"#/components/schemas/ErrorResponseBody\"\n    ErrorResponseBody:\n      description: Error Body contract.\n      properties:\n        code:\n          description: Service-defined error code. This code serves as a sub-status for the\n            HTTP error code specified in the response.\n          type: string\n        details:\n          description: The list of invalid fields send in request, in case of validation\n            error.\n          items:\n            $ref: \"#/components/schemas/ErrorFieldContract\"\n          type: array\n        message:\n          description: Human-readable representation of the error.\n          type: string\n    RegionContract:\n      description: Region profile.\n      properties:\n        isDeleted:\n          description: whether Region is deleted.\n          type: boolean\n        isMasterRegion:\n          description: whether Region is the master region.\n          type: boolean\n        name:\n          description: Region name.\n          readOnly: true\n          type: string\n    RegionListResult:\n      description: Lists Regions operation response details.\n      properties:\n        count:\n          description: Total record count number across all pages.\n          format: int64\n          type: integer\n        nextLink:\n          description: Next page link if any.\n          type: string\n        value:\n          description: Lists of Regions.\n          items:\n            $ref: \"#/components/schemas/RegionContract\"\n          type: array\n    Resource:\n      description: The Resource definition.\n      properties:\n        id:\n          description: Resource ID.\n          readOnly: true\n          type: string\n        name:\n          description: Resource name.\n          readOnly: true\n          type: string\n        type:\n          description: Resource type for API Management resource.\n          readOnly: true\n          type: string\n      x-ms-azure-resource: true\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/azure.com-apimanagement-2019-01-01-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/azure.com-apimanagement-2019-01-01-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}