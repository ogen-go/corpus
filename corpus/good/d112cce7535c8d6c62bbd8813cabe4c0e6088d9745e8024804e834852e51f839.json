{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/OpenMSP/OpenMSP-ContainerCloud"
		},
		"file": {
			"name": "virtual_service.gen.json",
			"size": 0,
			"path": "vendor/istio.io/api/networking/v1alpha3/virtual_service.gen.json",
			"byteSize": 39801,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"Configuration affecting label/content routing, sni routing, etc.\",\n    \"version\": \"v1alpha3\"\n  },\n  \"components\": {\n    \"schemas\": {\n      \"istio.networking.v1alpha3.PortSelector\": {\n        \"description\": \"PortSelector specifies the number of a port to be used for matching or selection for final routing.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"number\": {\n            \"description\": \"Valid port number\",\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"istio.networking.v1alpha3.Destination\": {\n        \"description\": \"Destination indicates the network addressable service to which the request/connection will be sent after processing a routing rule. The destination.host should unambiguously refer to a service in the service registry. Istio's service registry is composed of all the services found in the platform's service registry (e.g., Kubernetes services, Consul services), as well as services declared through the [ServiceEntry](https://istio.io/docs/reference/config/networking/service-entry/#ServiceEntry) resource.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"host\": {\n            \"description\": \"The name of a service from the service registry. Service names are looked up from the platform's service registry (e.g., Kubernetes services, Consul services, etc.) and from the hosts declared by [ServiceEntry](https://istio.io/docs/reference/config/networking/service-entry/#ServiceEntry). Traffic forwarded to destinations that are not found in either of the two, will be dropped.\",\n            \"type\": \"string\",\n            \"format\": \"string\"\n          },\n          \"port\": {\n            \"$ref\": \"#/components/schemas/istio.networking.v1alpha3.PortSelector\"\n          },\n          \"subset\": {\n            \"description\": \"The name of a subset within the service. Applicable only to services within the mesh. The subset must be defined in a corresponding DestinationRule.\",\n            \"type\": \"string\",\n            \"format\": \"string\"\n          }\n        }\n      },\n      \"istio.networking.v1alpha3.VirtualService\": {\n        \"description\": \"Configuration affecting traffic routing.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"exportTo\": {\n            \"description\": \"A list of namespaces to which this virtual service is exported. Exporting a virtual service allows it to be used by sidecars and gateways defined in other namespaces. This feature provides a mechanism for service owners and mesh administrators to control the visibility of virtual services across namespace boundaries.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"format\": \"string\"\n            }\n          },\n          \"tls\": {\n            \"description\": \"An ordered list of route rule for non-terminated TLS \\u0026 HTTPS traffic. Routing is typically performed using the SNI value presented by the ClientHello message. TLS routes will be applied to platform service ports named 'https-*', 'tls-*', unterminated gateway ports using HTTPS/TLS protocols (i.e. with \\\"passthrough\\\" TLS mode) and service entry ports using HTTPS/TLS protocols. The first rule matching an incoming request is used. NOTE: Traffic 'https-*' or 'tls-*' ports without associated virtual service will be treated as opaque TCP traffic.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/istio.networking.v1alpha3.TLSRoute\"\n            }\n          },\n          \"tcp\": {\n            \"description\": \"An ordered list of route rules for opaque TCP traffic. TCP routes will be applied to any port that is not a HTTP or TLS port. The first rule matching an incoming request is used.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/istio.networking.v1alpha3.TCPRoute\"\n            }\n          },\n          \"http\": {\n            \"description\": \"An ordered list of route rules for HTTP traffic. HTTP routes will be applied to platform service ports named 'http-*'/'http2-*'/'grpc-*', gateway ports with protocol HTTP/HTTP2/GRPC/ TLS-terminated-HTTPS and service entry ports using HTTP/HTTP2/GRPC protocols. The first rule matching an incoming request is used.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/istio.networking.v1alpha3.HTTPRoute\"\n            }\n          },\n          \"hosts\": {\n            \"description\": \"The destination hosts to which traffic is being sent. Could be a DNS name with wildcard prefix or an IP address. Depending on the platform, short-names can also be used instead of a FQDN (i.e. has no dots in the name). In such a scenario, the FQDN of the host would be derived based on the underlying platform.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"format\": \"string\"\n            }\n          },\n          \"gateways\": {\n            \"description\": \"The names of gateways and sidecars that should apply these routes. Gateways in other namespaces may be referred to by `\\u003cgateway namespace\\u003e/\\u003cgateway name\\u003e`; specifying a gateway with no namespace qualifier is the same as specifying the VirtualService's namespace. A single VirtualService is used for sidecars inside the mesh as well as for one or more gateways. The selection condition imposed by this field can be overridden using the source field in the match conditions of protocol-specific routes. The reserved word `mesh` is used to imply all the sidecars in the mesh. When this field is omitted, the default gateway (`mesh`) will be used, which would apply the rule to all sidecars in the mesh. If a list of gateway names is provided, the rules will apply only to the gateways. To apply the rules to both gateways and sidecars, specify `mesh` as one of the gateway names.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"format\": \"string\"\n            }\n          }\n        }\n      },\n      \"istio.networking.v1alpha3.HTTPRoute\": {\n        \"description\": \"Describes match conditions and actions for routing HTTP/1.1, HTTP2, and gRPC traffic. See VirtualService for usage examples.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"description\": \"The name assigned to the route for debugging purposes. The route's name will be concatenated with the match's name and will be logged in the access logs for requests matching this route/match.\",\n            \"type\": \"string\",\n            \"format\": \"string\"\n          },\n          \"route\": {\n            \"description\": \"A HTTP rule can either redirect or forward (default) traffic. The forwarding target can be one of several versions of a service (see glossary in beginning of document). Weights associated with the service version determine the proportion of traffic it receives.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/istio.networking.v1alpha3.HTTPRouteDestination\"\n            }\n          },\n          \"match\": {\n            \"description\": \"Match conditions to be satisfied for the rule to be activated. All conditions inside a single match block have AND semantics, while the list of match blocks have OR semantics. The rule is matched if any one of the match blocks succeed.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/istio.networking.v1alpha3.HTTPMatchRequest\"\n            }\n          },\n          \"redirect\": {\n            \"$ref\": \"#/components/schemas/istio.networking.v1alpha3.HTTPRedirect\"\n          },\n          \"delegate\": {\n            \"$ref\": \"#/components/schemas/istio.networking.v1alpha3.Delegate\"\n          },\n          \"rewrite\": {\n            \"$ref\": \"#/components/schemas/istio.networking.v1alpha3.HTTPRewrite\"\n          },\n          \"timeout\": {\n            \"description\": \"Timeout for HTTP requests.\",\n            \"type\": \"string\"\n          },\n          \"retries\": {\n            \"$ref\": \"#/components/schemas/istio.networking.v1alpha3.HTTPRetry\"\n          },\n          \"fault\": {\n            \"$ref\": \"#/components/schemas/istio.networking.v1alpha3.HTTPFaultInjection\"\n          },\n          \"mirror\": {\n            \"$ref\": \"#/components/schemas/istio.networking.v1alpha3.Destination\"\n          },\n          \"mirrorPercent\": {\n            \"description\": \"Percentage of the traffic to be mirrored by the `mirror` field. Use of integer `mirror_percent` value is deprecated. Use the double `mirror_percentage` field instead\",\n            \"type\": \"integer\",\n            \"deprecated\": true,\n            \"nullable\": true\n          },\n          \"mirrorPercentage\": {\n            \"$ref\": \"#/components/schemas/istio.networking.v1alpha3.Percent\"\n          },\n          \"corsPolicy\": {\n            \"$ref\": \"#/components/schemas/istio.networking.v1alpha3.CorsPolicy\"\n          },\n          \"headers\": {\n            \"$ref\": \"#/components/schemas/istio.networking.v1alpha3.Headers\"\n          }\n        }\n      },\n      \"istio.networking.v1alpha3.TLSRoute\": {\n        \"description\": \"Describes match conditions and actions for routing unterminated TLS traffic (TLS/HTTPS) The following routing rule forwards unterminated TLS traffic arriving at port 443 of gateway called \\\"mygateway\\\" to internal services in the mesh based on the SNI value.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"route\": {\n            \"description\": \"The destination to which the connection should be forwarded to.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/istio.networking.v1alpha3.RouteDestination\"\n            }\n          },\n          \"match\": {\n            \"description\": \"Match conditions to be satisfied for the rule to be activated. All conditions inside a single match block have AND semantics, while the list of match blocks have OR semantics. The rule is matched if any one of the match blocks succeed.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/istio.networking.v1alpha3.TLSMatchAttributes\"\n            }\n          }\n        }\n      },\n      \"istio.networking.v1alpha3.TCPRoute\": {\n        \"description\": \"Describes match conditions and actions for routing TCP traffic. The following routing rule forwards traffic arriving at port 27017 for mongo.prod.svc.cluster.local to another Mongo server on port 5555.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"route\": {\n            \"description\": \"The destination to which the connection should be forwarded to.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/istio.networking.v1alpha3.RouteDestination\"\n            }\n          },\n          \"match\": {\n            \"description\": \"Match conditions to be satisfied for the rule to be activated. All conditions inside a single match block have AND semantics, while the list of match blocks have OR semantics. The rule is matched if any one of the match blocks succeed.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/istio.networking.v1alpha3.L4MatchAttributes\"\n            }\n          }\n        }\n      },\n      \"istio.networking.v1alpha3.HTTPMatchRequest\": {\n        \"description\": \"HttpMatchRequest specifies a set of criterion to be met in order for the rule to be applied to the HTTP request. For example, the following restricts the rule to match only requests where the URL path starts with /ratings/v2/ and the request contains a custom `end-user` header with value `jason`.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"description\": \"The name assigned to a match. The match's name will be concatenated with the parent route's name and will be logged in the access logs for requests matching this route.\",\n            \"type\": \"string\",\n            \"format\": \"string\"\n          },\n          \"method\": {\n            \"$ref\": \"#/components/schemas/istio.networking.v1alpha3.StringMatch\"\n          },\n          \"port\": {\n            \"description\": \"Specifies the ports on the host that is being addressed. Many services only expose a single port or label ports with the protocols they support, in these cases it is not required to explicitly select the port.\",\n            \"type\": \"integer\"\n          },\n          \"gateways\": {\n            \"description\": \"Names of gateways where the rule should be applied. Gateway names in the top-level `gateways` field of the VirtualService (if any) are overridden. The gateway match is independent of sourceLabels.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"format\": \"string\"\n            }\n          },\n          \"headers\": {\n            \"description\": \"The header keys must be lowercase and use hyphen as the separator, e.g. _x-request-id_.\",\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"$ref\": \"#/components/schemas/istio.networking.v1alpha3.StringMatch\"\n            }\n          },\n          \"uri\": {\n            \"$ref\": \"#/components/schemas/istio.networking.v1alpha3.StringMatch\"\n          },\n          \"scheme\": {\n            \"$ref\": \"#/components/schemas/istio.networking.v1alpha3.StringMatch\"\n          },\n          \"authority\": {\n            \"$ref\": \"#/components/schemas/istio.networking.v1alpha3.StringMatch\"\n          },\n          \"sourceLabels\": {\n            \"description\": \"One or more labels that constrain the applicability of a rule to workloads with the given labels. If the VirtualService has a list of gateways specified in the top-level `gateways` field, it must include the reserved gateway `mesh` for this field to be applicable.\",\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\",\n              \"format\": \"string\"\n            }\n          },\n          \"queryParams\": {\n            \"description\": \"Query parameters for matching.\",\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"$ref\": \"#/components/schemas/istio.networking.v1alpha3.StringMatch\"\n            }\n          },\n          \"ignoreUriCase\": {\n            \"description\": \"Flag to specify whether the URI matching should be case-insensitive.\",\n            \"type\": \"boolean\"\n          },\n          \"withoutHeaders\": {\n            \"description\": \"withoutHeader has the same syntax with the header, but has opposite meaning. If a header is matched with a matching rule among withoutHeader, the traffic becomes not matched one.\",\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"$ref\": \"#/components/schemas/istio.networking.v1alpha3.StringMatch\"\n            }\n          },\n          \"sourceNamespace\": {\n            \"description\": \"Source namespace constraining the applicability of a rule to workloads in that namespace. If the VirtualService has a list of gateways specified in the top-level `gateways` field, it must include the reserved gateway `mesh` for this field to be applicable.\",\n            \"type\": \"string\",\n            \"format\": \"string\"\n          }\n        }\n      },\n      \"istio.networking.v1alpha3.HTTPRouteDestination\": {\n        \"description\": \"Each routing rule is associated with one or more service versions (see glossary in beginning of document). Weights associated with the version determine the proportion of traffic it receives. For example, the following rule will route 25% of traffic for the \\\"reviews\\\" service to instances with the \\\"v2\\\" tag and the remaining traffic (i.e., 75%) to \\\"v1\\\".\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"headers\": {\n            \"$ref\": \"#/components/schemas/istio.networking.v1alpha3.Headers\"\n          },\n          \"destination\": {\n            \"$ref\": \"#/components/schemas/istio.networking.v1alpha3.Destination\"\n          },\n          \"weight\": {\n            \"description\": \"The proportion of traffic to be forwarded to the service version. (0-100). Sum of weights across destinations SHOULD BE == 100. If there is only one destination in a rule, the weight value is assumed to be 100.\",\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        }\n      },\n      \"istio.networking.v1alpha3.HTTPRedirect\": {\n        \"description\": \"HTTPRedirect can be used to send a 301 redirect response to the caller, where the Authority/Host and the URI in the response can be swapped with the specified values. For example, the following rule redirects requests for /v1/getProductRatings API on the ratings service to /v1/bookRatings provided by the bookratings service.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"uri\": {\n            \"description\": \"On a redirect, overwrite the Path portion of the URL with this value. Note that the entire path will be replaced, irrespective of the request URI being matched as an exact path or prefix.\",\n            \"type\": \"string\",\n            \"format\": \"string\"\n          },\n          \"authority\": {\n            \"description\": \"On a redirect, overwrite the Authority/Host portion of the URL with this value.\",\n            \"type\": \"string\",\n            \"format\": \"string\"\n          },\n          \"redirectCode\": {\n            \"description\": \"On a redirect, Specifies the HTTP status code to use in the redirect response. The default response code is MOVED_PERMANENTLY (301).\",\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"istio.networking.v1alpha3.Delegate\": {\n        \"description\": \"Describes the delegate VirtualService. The following routing rules forward the traffic to `/productpage` by a delegate VirtualService named `productpage`, forward the traffic to `/reviews` by a delegate VirtualService named `reviews`.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"description\": \"Name specifies the name of the delegate VirtualService.\",\n            \"type\": \"string\",\n            \"format\": \"string\"\n          },\n          \"namespace\": {\n            \"description\": \"Namespace specifies the namespace where the delegate VirtualService resides. By default, it is same to the root's.\",\n            \"type\": \"string\",\n            \"format\": \"string\"\n          }\n        }\n      },\n      \"istio.networking.v1alpha3.HTTPRewrite\": {\n        \"description\": \"HTTPRewrite can be used to rewrite specific parts of a HTTP request before forwarding the request to the destination. Rewrite primitive can be used only with HTTPRouteDestination. The following example demonstrates how to rewrite the URL prefix for api call (/ratings) to ratings service before making the actual API call.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"uri\": {\n            \"description\": \"rewrite the path (or the prefix) portion of the URI with this value. If the original URI was matched based on prefix, the value provided in this field will replace the corresponding matched prefix.\",\n            \"type\": \"string\",\n            \"format\": \"string\"\n          },\n          \"authority\": {\n            \"description\": \"rewrite the Authority/Host header with this value.\",\n            \"type\": \"string\",\n            \"format\": \"string\"\n          }\n        }\n      },\n      \"istio.networking.v1alpha3.HTTPRetry\": {\n        \"description\": \"Describes the retry policy to use when a HTTP request fails. For example, the following rule sets the maximum number of retries to 3 when calling ratings:v1 service, with a 2s timeout per retry attempt.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"attempts\": {\n            \"description\": \"Number of retries for a given request. The interval between retries will be determined automatically (25ms+). Actual number of retries attempted depends on the request `timeout` of the [HTTP route](https://istio.io/docs/reference/config/networking/virtual-service/#HTTPRoute).\",\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"perTryTimeout\": {\n            \"description\": \"Timeout per retry attempt for a given request. format: 1h/1m/1s/1ms. MUST BE \\u003e=1ms.\",\n            \"type\": \"string\"\n          },\n          \"retryOn\": {\n            \"description\": \"Specifies the conditions under which retry takes place. One or more policies can be specified using a ‘,’ delimited list. See the [retry policies](https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/router_filter#x-envoy-retry-on) and [gRPC retry policies](https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/router_filter#x-envoy-retry-grpc-on) for more details.\",\n            \"type\": \"string\",\n            \"format\": \"string\"\n          },\n          \"retryRemoteLocalities\": {\n            \"description\": \"Flag to specify whether the retries should retry to other localities. See the [retry plugin configuration](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/http/http_connection_management#retry-plugin-configuration) for more details.\",\n            \"type\": \"boolean\",\n            \"nullable\": true\n          }\n        }\n      },\n      \"istio.networking.v1alpha3.HTTPFaultInjection\": {\n        \"description\": \"HTTPFaultInjection can be used to specify one or more faults to inject while forwarding HTTP requests to the destination specified in a route. Fault specification is part of a VirtualService rule. Faults include aborting the Http request from downstream service, and/or delaying proxying of requests. A fault rule MUST HAVE delay or abort or both.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"delay\": {\n            \"$ref\": \"#/components/schemas/istio.networking.v1alpha3.HTTPFaultInjection.Delay\"\n          },\n          \"abort\": {\n            \"$ref\": \"#/components/schemas/istio.networking.v1alpha3.HTTPFaultInjection.Abort\"\n          }\n        }\n      },\n      \"istio.networking.v1alpha3.Percent\": {\n        \"description\": \"Percent specifies a percentage in the range of [0.0, 100.0].\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"value\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          }\n        }\n      },\n      \"istio.networking.v1alpha3.CorsPolicy\": {\n        \"description\": \"Describes the Cross-Origin Resource Sharing (CORS) policy, for a given service. Refer to [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS) for further details about cross origin resource sharing. For example, the following rule restricts cross origin requests to those originating from example.com domain using HTTP POST/GET, and sets the `Access-Control-Allow-Credentials` header to false. In addition, it only exposes `X-Foo-bar` header and sets an expiry period of 1 day.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"allowOrigin\": {\n            \"description\": \"The list of origins that are allowed to perform CORS requests. The content will be serialized into the Access-Control-Allow-Origin header. Wildcard * will allow all origins. $hide_from_docs\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"format\": \"string\"\n            },\n            \"deprecated\": true\n          },\n          \"allowOrigins\": {\n            \"description\": \"String patterns that match allowed origins. An origin is allowed if any of the string matchers match. If a match is found, then the outgoing Access-Control-Allow-Origin would be set to the origin as provided by the client.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/istio.networking.v1alpha3.StringMatch\"\n            }\n          },\n          \"allowMethods\": {\n            \"description\": \"List of HTTP methods allowed to access the resource. The content will be serialized into the Access-Control-Allow-Methods header.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"format\": \"string\"\n            }\n          },\n          \"allowHeaders\": {\n            \"description\": \"List of HTTP headers that can be used when requesting the resource. Serialized to Access-Control-Allow-Headers header.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"format\": \"string\"\n            }\n          },\n          \"exposeHeaders\": {\n            \"description\": \"A white list of HTTP headers that the browsers are allowed to access. Serialized into Access-Control-Expose-Headers header.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"format\": \"string\"\n            }\n          },\n          \"maxAge\": {\n            \"description\": \"Specifies how long the results of a preflight request can be cached. Translates to the `Access-Control-Max-Age` header.\",\n            \"type\": \"string\"\n          },\n          \"allowCredentials\": {\n            \"description\": \"Indicates whether the caller is allowed to send the actual request (not the preflight) using credentials. Translates to `Access-Control-Allow-Credentials` header.\",\n            \"type\": \"boolean\",\n            \"nullable\": true\n          }\n        }\n      },\n      \"istio.networking.v1alpha3.Headers\": {\n        \"description\": \"Message headers can be manipulated when Envoy forwards requests to, or responses from, a destination service. Header manipulation rules can be specified for a specific route destination or for all destinations. The following VirtualService adds a `test` header with the value `true` to requests that are routed to any `reviews` service destination. It also romoves the `foo` response header, but only from responses coming from the `v1` subset (version) of the `reviews` service.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"response\": {\n            \"$ref\": \"#/components/schemas/istio.networking.v1alpha3.Headers.HeaderOperations\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/istio.networking.v1alpha3.Headers.HeaderOperations\"\n          }\n        }\n      },\n      \"istio.networking.v1alpha3.Headers.HeaderOperations\": {\n        \"description\": \"HeaderOperations Describes the header manipulations to apply\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"set\": {\n            \"description\": \"Overwrite the headers specified by key with the given values\",\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\",\n              \"format\": \"string\"\n            }\n          },\n          \"add\": {\n            \"description\": \"Append the given values to the headers specified by keys (will create a comma-separated list of values)\",\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\",\n              \"format\": \"string\"\n            }\n          },\n          \"remove\": {\n            \"description\": \"Remove a the specified headers\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"format\": \"string\"\n            }\n          }\n        }\n      },\n      \"istio.networking.v1alpha3.TLSMatchAttributes\": {\n        \"description\": \"TLS connection match attributes.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"port\": {\n            \"description\": \"Specifies the port on the host that is being addressed. Many services only expose a single port or label ports with the protocols they support, in these cases it is not required to explicitly select the port.\",\n            \"type\": \"integer\"\n          },\n          \"gateways\": {\n            \"description\": \"Names of gateways where the rule should be applied. Gateway names in the top-level `gateways` field of the VirtualService (if any) are overridden. The gateway match is independent of sourceLabels.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"format\": \"string\"\n            }\n          },\n          \"sourceLabels\": {\n            \"description\": \"One or more labels that constrain the applicability of a rule to workloads with the given labels. If the VirtualService has a list of gateways specified in the top-level `gateways` field, it should include the reserved gateway `mesh` in order for this field to be applicable.\",\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\",\n              \"format\": \"string\"\n            }\n          },\n          \"sourceNamespace\": {\n            \"description\": \"Source namespace constraining the applicability of a rule to workloads in that namespace. If the VirtualService has a list of gateways specified in the top-level `gateways` field, it must include the reserved gateway `mesh` for this field to be applicable.\",\n            \"type\": \"string\",\n            \"format\": \"string\"\n          },\n          \"destinationSubnets\": {\n            \"description\": \"IPv4 or IPv6 ip addresses of destination with optional subnet. E.g., a.b.c.d/xx form or just a.b.c.d.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"format\": \"string\"\n            }\n          },\n          \"sniHosts\": {\n            \"description\": \"SNI (server name indicator) to match on. Wildcard prefixes can be used in the SNI value, e.g., *.com will match foo.example.com as well as example.com. An SNI value must be a subset (i.e., fall within the domain) of the corresponding virtual serivce's hosts.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"format\": \"string\"\n            }\n          }\n        }\n      },\n      \"istio.networking.v1alpha3.RouteDestination\": {\n        \"description\": \"L4 routing rule weighted destination.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"destination\": {\n            \"$ref\": \"#/components/schemas/istio.networking.v1alpha3.Destination\"\n          },\n          \"weight\": {\n            \"description\": \"The proportion of traffic to be forwarded to the service version. If there is only one destination in a rule, all traffic will be routed to it irrespective of the weight.\",\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        }\n      },\n      \"istio.networking.v1alpha3.L4MatchAttributes\": {\n        \"description\": \"L4 connection match attributes. Note that L4 connection matching support is incomplete.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"port\": {\n            \"description\": \"Specifies the port on the host that is being addressed. Many services only expose a single port or label ports with the protocols they support, in these cases it is not required to explicitly select the port.\",\n            \"type\": \"integer\"\n          },\n          \"gateways\": {\n            \"description\": \"Names of gateways where the rule should be applied. Gateway names in the top-level `gateways` field of the VirtualService (if any) are overridden. The gateway match is independent of sourceLabels.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"format\": \"string\"\n            }\n          },\n          \"sourceLabels\": {\n            \"description\": \"One or more labels that constrain the applicability of a rule to workloads with the given labels. If the VirtualService has a list of gateways specified in the top-level `gateways` field, it should include the reserved gateway `mesh` in order for this field to be applicable.\",\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\",\n              \"format\": \"string\"\n            }\n          },\n          \"sourceNamespace\": {\n            \"description\": \"Source namespace constraining the applicability of a rule to workloads in that namespace. If the VirtualService has a list of gateways specified in the top-level `gateways` field, it must include the reserved gateway `mesh` for this field to be applicable.\",\n            \"type\": \"string\",\n            \"format\": \"string\"\n          },\n          \"destinationSubnets\": {\n            \"description\": \"IPv4 or IPv6 ip addresses of destination with optional subnet. E.g., a.b.c.d/xx form or just a.b.c.d.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"format\": \"string\"\n            }\n          },\n          \"sourceSubnet\": {\n            \"description\": \"IPv4 or IPv6 ip address of source with optional subnet. E.g., a.b.c.d/xx form or just a.b.c.d $hide_from_docs\",\n            \"type\": \"string\",\n            \"format\": \"string\"\n          }\n        }\n      },\n      \"istio.networking.v1alpha3.StringMatch\": {\n        \"description\": \"Describes how to match a given string in HTTP headers. Match is case-sensitive.\",\n        \"type\": \"object\",\n        \"oneOf\": [\n          {\n            \"not\": {\n              \"anyOf\": [\n                {\n                  \"required\": [\n                    \"exact\"\n                  ],\n                  \"properties\": {\n                    \"exact\": {\n                      \"description\": \"exact string match\",\n                      \"type\": \"string\",\n                      \"format\": \"string\"\n                    }\n                  }\n                },\n                {\n                  \"required\": [\n                    \"prefix\"\n                  ],\n                  \"properties\": {\n                    \"prefix\": {\n                      \"description\": \"prefix-based match\",\n                      \"type\": \"string\",\n                      \"format\": \"string\"\n                    }\n                  }\n                },\n                {\n                  \"required\": [\n                    \"regex\"\n                  ],\n                  \"properties\": {\n                    \"regex\": {\n                      \"description\": \"RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).\",\n                      \"type\": \"string\",\n                      \"format\": \"string\"\n                    }\n                  }\n                }\n              ]\n            }\n          },\n          {\n            \"required\": [\n              \"exact\"\n            ],\n            \"properties\": {\n              \"exact\": {\n                \"description\": \"exact string match\",\n                \"type\": \"string\",\n                \"format\": \"string\"\n              }\n            }\n          },\n          {\n            \"required\": [\n              \"prefix\"\n            ],\n            \"properties\": {\n              \"prefix\": {\n                \"description\": \"prefix-based match\",\n                \"type\": \"string\",\n                \"format\": \"string\"\n              }\n            }\n          },\n          {\n            \"required\": [\n              \"regex\"\n            ],\n            \"properties\": {\n              \"regex\": {\n                \"description\": \"RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).\",\n                \"type\": \"string\",\n                \"format\": \"string\"\n              }\n            }\n          }\n        ]\n      },\n      \"istio.networking.v1alpha3.HTTPFaultInjection.Delay\": {\n        \"description\": \"Delay specification is used to inject latency into the request forwarding path. The following example will introduce a 5 second delay in 1 out of every 1000 requests to the \\\"v1\\\" version of the \\\"reviews\\\" service from all pods with label env: prod\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"percent\": {\n            \"description\": \"Percentage of requests on which the delay will be injected (0-100). Use of integer `percent` value is deprecated. Use the double `percentage` field instead.\",\n            \"type\": \"integer\",\n            \"format\": \"int32\",\n            \"deprecated\": true\n          },\n          \"percentage\": {\n            \"$ref\": \"#/components/schemas/istio.networking.v1alpha3.Percent\"\n          }\n        },\n        \"oneOf\": [\n          {\n            \"not\": {\n              \"anyOf\": [\n                {\n                  \"required\": [\n                    \"fixedDelay\"\n                  ],\n                  \"properties\": {\n                    \"fixedDelay\": {\n                      \"description\": \"Add a fixed delay before forwarding the request. Format: 1h/1m/1s/1ms. MUST be \\u003e=1ms.\",\n                      \"type\": \"string\"\n                    }\n                  }\n                },\n                {\n                  \"required\": [\n                    \"exponentialDelay\"\n                  ],\n                  \"properties\": {\n                    \"exponentialDelay\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              ]\n            }\n          },\n          {\n            \"required\": [\n              \"fixedDelay\"\n            ],\n            \"properties\": {\n              \"fixedDelay\": {\n                \"description\": \"Add a fixed delay before forwarding the request. Format: 1h/1m/1s/1ms. MUST be \\u003e=1ms.\",\n                \"type\": \"string\"\n              }\n            }\n          },\n          {\n            \"required\": [\n              \"exponentialDelay\"\n            ],\n            \"properties\": {\n              \"exponentialDelay\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        ]\n      },\n      \"istio.networking.v1alpha3.HTTPFaultInjection.Abort\": {\n        \"description\": \"Abort specification is used to prematurely abort a request with a pre-specified error code. The following example will return an HTTP 400 error code for 1 out of every 1000 requests to the \\\"ratings\\\" service \\\"v1\\\".\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"percentage\": {\n            \"$ref\": \"#/components/schemas/istio.networking.v1alpha3.Percent\"\n          }\n        },\n        \"oneOf\": [\n          {\n            \"not\": {\n              \"anyOf\": [\n                {\n                  \"required\": [\n                    \"httpStatus\"\n                  ],\n                  \"properties\": {\n                    \"httpStatus\": {\n                      \"description\": \"HTTP status code to use to abort the Http request.\",\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    }\n                  }\n                },\n                {\n                  \"required\": [\n                    \"grpcStatus\"\n                  ],\n                  \"properties\": {\n                    \"grpcStatus\": {\n                      \"type\": \"string\",\n                      \"format\": \"string\"\n                    }\n                  }\n                },\n                {\n                  \"required\": [\n                    \"http2Error\"\n                  ],\n                  \"properties\": {\n                    \"http2Error\": {\n                      \"type\": \"string\",\n                      \"format\": \"string\"\n                    }\n                  }\n                }\n              ]\n            }\n          },\n          {\n            \"required\": [\n              \"httpStatus\"\n            ],\n            \"properties\": {\n              \"httpStatus\": {\n                \"description\": \"HTTP status code to use to abort the Http request.\",\n                \"type\": \"integer\",\n                \"format\": \"int32\"\n              }\n            }\n          },\n          {\n            \"required\": [\n              \"grpcStatus\"\n            ],\n            \"properties\": {\n              \"grpcStatus\": {\n                \"type\": \"string\",\n                \"format\": \"string\"\n              }\n            }\n          },\n          {\n            \"required\": [\n              \"http2Error\"\n            ],\n            \"properties\": {\n              \"http2Error\": {\n                \"type\": \"string\",\n                \"format\": \"string\"\n              }\n            }\n          }\n        ]\n      }\n    }\n  }\n}",
			"canonicalURL": "/github.com/OpenMSP/OpenMSP-ContainerCloud@a365077b14e82dbf3e65a0f49413acbc3e8d5038/-/blob/vendor/istio.io/api/networking/v1alpha3/virtual_service.gen.json",
			"externalURLs": [
				{
					"url": "https://github.com/OpenMSP/OpenMSP-ContainerCloud/blob/a365077b14e82dbf3e65a0f49413acbc3e8d5038/vendor/istio.io/api/networking/v1alpha3/virtual_service.gen.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}