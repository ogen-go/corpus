{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/PaloAltoNetworks/gaia"
		},
		"file": {
			"name": "hostservice.json",
			"size": 0,
			"path": "openapi3_autogen/hostservice.json",
			"byteSize": 8719,
			"content": "{\n  \"openapi\": \"3.0.3\",\n  \"components\": {\n    \"schemas\": {\n      \"hostservice\": {\n        \"description\": \"Represents services that a host must expose and protect.\",\n        \"properties\": {\n          \"ID\": {\n            \"description\": \"Identifier of the object.\",\n            \"readOnly\": true,\n            \"type\": \"string\"\n          },\n          \"annotations\": {\n            \"additionalProperties\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            \"description\": \"Stores additional information about an entity.\",\n            \"type\": \"object\"\n          },\n          \"associatedTags\": {\n            \"description\": \"List of tags attached to an entity.\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"createTime\": {\n            \"description\": \"Creation date of the object.\",\n            \"format\": \"date-time\",\n            \"readOnly\": true,\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"description\": \"Description of the object.\",\n            \"type\": \"string\"\n          },\n          \"hostModeEnabled\": {\n            \"description\": \"Forces the corresponding enforcers to enable host protection. When `true`, all\\nincoming and outgoing flows will be monitored. Flows will be allowed if and only\\nif a network policy has been created to allow the flow. The option applies to\\nall enforcers to which the host service is mapped.\",\n            \"type\": \"boolean\"\n          },\n          \"metadata\": {\n            \"description\": \"Contains tags that can only be set during creation, must all start\\nwith the '@' prefix, and should only be used by external systems.\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"name\": {\n            \"description\": \"Name of the entity.\",\n            \"example\": \"the name\",\n            \"type\": \"string\"\n          },\n          \"namespace\": {\n            \"description\": \"Namespace tag attached to an entity.\",\n            \"readOnly\": true,\n            \"type\": \"string\"\n          },\n          \"normalizedTags\": {\n            \"description\": \"Contains the list of normalized tags of the entities.\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"readOnly\": true,\n            \"type\": \"array\"\n          },\n          \"propagate\": {\n            \"description\": \"Propagates the policy to all of its children.\",\n            \"type\": \"boolean\"\n          },\n          \"protected\": {\n            \"description\": \"Defines if the object is protected.\",\n            \"type\": \"boolean\"\n          },\n          \"services\": {\n            \"description\": \"Lists all protocols and ports a service is running. A service entry can be\\ndefined\\nby a protocol and port `(tcp/80)`, or range of protocol/port pairs\\n`(udp/80:100)`.\\nIf no protocol is provided, it is assumed to be TCP. Only `tcp` and `udp`\\nprotocols\\nare allowed.\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"updateTime\": {\n            \"description\": \"Last update date of the object.\",\n            \"format\": \"date-time\",\n            \"readOnly\": true,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"name\"\n        ],\n        \"type\": \"object\"\n      }\n    }\n  },\n  \"info\": {\n    \"contact\": {\n      \"email\": \"dev@aporeto.com\",\n      \"name\": \"Aporeto Inc.\",\n      \"url\": \"go.aporeto.io/api\"\n    },\n    \"license\": {\n      \"name\": \"TODO\"\n    },\n    \"termsOfService\": \"https://localhost/TODO\",\n    \"title\": \"hostservice\",\n    \"version\": \"1.0\"\n  },\n  \"paths\": {\n    \"/hostservices\": {\n      \"get\": {\n        \"description\": \"Retrieves the list of host services.\",\n        \"operationId\": \"get-all-hostservices\",\n        \"parameters\": [\n          {\n            \"description\": \"Also retrieve the objects that propagate down.\",\n            \"in\": \"query\",\n            \"name\": \"propagated\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"description\": \"Filtering query. Consequent `q` parameters will form an or.\",\n            \"example\": \"associatedTags contains ['$name=hello'] or type == 'Docker'\",\n            \"in\": \"query\",\n            \"name\": \"q\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/hostservice\"\n                  },\n                  \"type\": \"array\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"policy/hosts\",\n          \"squall\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Creates a new host service.\",\n        \"operationId\": \"create-a-new-hostservice\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/hostservice\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/hostservice\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"policy/hosts\",\n          \"squall\"\n        ]\n      }\n    },\n    \"/hostservices/{id}\": {\n      \"delete\": {\n        \"description\": \"Deletes the host service with the given ID.\",\n        \"operationId\": \"delete-hostservice-by-ID\",\n        \"parameters\": [\n          {\n            \"description\": \"Filtering query. Consequent `q` parameters will form an or.\",\n            \"example\": \"associatedTags contains ['$name=hello'] or type == 'Docker'\",\n            \"in\": \"query\",\n            \"name\": \"q\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/hostservice\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"policy/hosts\",\n          \"squall\"\n        ]\n      },\n      \"get\": {\n        \"description\": \"Retrieves the host service with the given ID.\",\n        \"operationId\": \"get-hostservice-by-ID\",\n        \"parameters\": [\n          {\n            \"description\": \"Also retrieve the objects that have been archived.\",\n            \"in\": \"query\",\n            \"name\": \"archived\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"description\": \"Also retrieve the objects that propagate down.\",\n            \"in\": \"query\",\n            \"name\": \"propagated\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/hostservice\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"policy/hosts\",\n          \"squall\"\n        ]\n      },\n      \"parameters\": [\n        {\n          \"in\": \"path\",\n          \"name\": \"id\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"put\": {\n        \"description\": \"Updates the host service with the given ID.\",\n        \"operationId\": \"update-hostservice-by-ID\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/hostservice\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/hostservice\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"policy/hosts\",\n          \"squall\"\n        ]\n      }\n    }\n  },\n  \"tags\": [\n    {\n      \"description\": \"This tag is for group 'policy/hosts'\",\n      \"name\": \"policy/hosts\"\n    },\n    {\n      \"description\": \"This tag is for package 'squall'\",\n      \"name\": \"squall\"\n    }\n  ]\n}\n",
			"canonicalURL": "/github.com/PaloAltoNetworks/gaia@135fa774a34971a04dc7232e029f99de005f0e87/-/blob/openapi3_autogen/hostservice.json",
			"externalURLs": [
				{
					"url": "https://github.com/PaloAltoNetworks/gaia/blob/135fa774a34971a04dc7232e029f99de005f0e87/openapi3_autogen/hostservice.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}