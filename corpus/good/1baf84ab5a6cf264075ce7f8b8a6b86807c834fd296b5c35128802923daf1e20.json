{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/borgoat/farmfa"
		},
		"file": {
			"name": "farmfa.yaml",
			"size": 0,
			"path": "api/farmfa.yaml",
			"byteSize": 8889,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 0.2.0\n  title: farMFA\n  description: An API to manage TOTP with shared secrets\n  contact:\n    name: Giorgio Azzinnaro\n    email: giorgio@azzinna.ro\n    url: https://giorgio.azzinna.ro\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\nservers:\n  - url: http://localhost:8080\n    description: For local development and testing.\n  - url: https://farmfa.example.com/v1alpha1\n\ntags:\n  - name: core\n    description: This functionality is mandatory to implement the _farMFA_ specs\n  - name: optional\n    description: Additional functionality that is not strictly required\n  - name: session\n    description: Actions related to _sessions_ - the core workflow where an applicant joins Tocs to reconstruct a TOTP\n\npaths:\n  #region paths/session\n  /sessions:\n    post:\n      tags:\n        - core\n        - session\n      summary: Start a new session\n      description: |\n        A session describes the workflow in which an applicant requires combining Tocs to generate a TOTP.\n        The applicant must already have a Toc.\n      operationId: createSession\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NewSession'\n      responses:\n        default:\n          $ref: '#/components/responses/DefaultError'\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SessionCredentials'\n\n  /sessions/{id}:\n    get:\n      tags:\n        - core\n        - session\n      summary: Retrieve a session details by its ID\n      operationId: getSession\n      parameters:\n        - name: id\n          in: path\n          description: ID of session to retrieve\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          $ref: '#/components/responses/DefaultError'\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Session'\n\n  /sessions/{id}/tocs:\n    post:\n      tags:\n        - core\n        - session\n      summary: Join a new Toc to an existing session\n      operationId: postToc\n      parameters:\n        - name: id\n          in: path\n          description: ID of session for which to add the Toc\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddToc'\n      responses:\n        default:\n          $ref: '#/components/responses/DefaultError'\n        '200':\n          description: OK\n\n  /sessions/{id}/totp:\n    post:\n      summary: Close the session and generate the TOTP\n      operationId: generateTotp\n      tags:\n        - core\n        - session\n      parameters:\n        - name: id\n          in: path\n          description: ID of session for which to generate the TOTP\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SessionKeyEncryptionKey'\n        required: true\n      responses:\n        default:\n          $ref: '#/components/responses/DefaultError'\n        # TODO: not yet ready error\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TOTPCode'\n  #endregion paths/session\n\ncomponents:\n  schemas:\n    #region components.schemas/session\n    NewSession:\n      type: object\n      properties:\n        toc_zero:\n          $ref: '#/components/schemas/Toc'\n        ttl:\n          type: integer\n          minimum: 60\n          maximum: 86400\n          default: 60\n          description: Seconds until the TOTP generation endpoint expires, starting from the first TOTP generated.\n      required:\n        - toc_zero\n\n    SessionCredentials:\n      type: object\n      description: |\n        Returned when creating a new Session.\n        This object should be kept secret by the applicant, and used when generating the TOTP.\n      allOf:\n        - $ref: '#/components/schemas/Session'\n        - $ref: '#/components/schemas/SessionTocEncryptionKey'\n        - $ref: '#/components/schemas/SessionKeyEncryptionKey'\n\n    SessionTocEncryptionKey:\n      type: object\n      properties:\n        tek:\n          type: string\n          description: |\n            A public key used by constituents to encrypt their Tocs before sharing them with the oracle.\n            The applicant receives it when creating a sessions,\n            and must share it with constituents when requesting their approval.\n      required:\n        - tek\n\n    SessionKeyEncryptionKey:\n      type: object\n      properties:\n        kek:\n          type: string\n          format: byte\n          description: |\n            A key used to encrypt the Toc encryption key held by the oracle.\n            This key is kept by the applicant and shared when a TOTP is generated.\n      required:\n        - kek\n\n    Session:\n      type: object\n      properties:\n        id:\n          type: string\n          description: The identifier of a session\n        toc_group_id:\n          type: string\n          description: An identifier for the group of Tocs used in this session\n        expires_at:\n          type: string\n          format: date-time\n          description: When the sessions will expire and no longer accept Tocs\n        created_at:\n          type: string\n          format: date-time\n          description: The time when the session started\n        ttl:\n          type: integer\n          minimum: 60\n          maximum: 86400\n          description: Seconds until the TOTP generation endpoint expires, starting from the first token generated.\n        complete:\n          type: boolean\n          description: True when enough Tocs have been provided and TOTPs may be generated\n        tocs_in_group:\n          type: integer\n          minimum: 2\n          description: The total number of Tocs in the group\n        tocs_threshold:\n          type: integer\n          minimum: 2\n          description: The minimum number of Tocs required\n        tocs_provided:\n          type: integer\n          minimum: 1\n          description: The number of Tocs already provided by consituents to the oracle for this session\n      required:\n        - id\n        - toc_group_id\n        - created_at\n        - complete\n        - tocs_in_group\n        - tocs_threshold\n        - tocs_provided\n\n    AddToc:\n      type: object\n      properties:\n        encrypted_toc:\n          type: string\n          description: The constituent's Toc encrypted with the session's public key\n      required:\n        - encrypted_toc\n\n    Toc:\n      description: A Toc is a \"piece\" in which a TOTP secret gets split.\n      type: object\n      properties:\n        toc_id:\n          type: string\n          format: byte\n          description: A Toc is unique, this ID ensures a Toc is not reused\n        group_id:\n          type: string\n          description: Each Toc is part of a group. Tocs from the same group can reconstruct a secret\n        group_size:\n          type: integer\n          description: The number of Tocs in the group\n          minimum: 2\n        group_threshold:\n          type: integer\n          description: The nubmer of Tocs needed to reconstruct the secret\n          minimum: 2\n        note:\n          type: string\n          description: Free-text to describe the purpose of a Toc\n        share:\n          type: string\n          format: byte\n          description: The actual share that players should keep secret\n      required:\n        - toc_id\n        - group_id\n        - group_size\n        - group_threshold\n        - share\n\n    TOTPCode:\n      type: object\n      properties:\n        totp:\n          type: string\n          pattern: '^\\d{6}$'\n          description: The current TOTP\n        totp_expires_at:\n          type: string\n          format: date-time\n          description: The time when the current TOTP will expire\n        session_expires_at:\n          type: string\n          format: date-time\n          description: The time when this session will expire and cannot be called again\n      required:\n        - totp\n        - totp_expires_at\n        - session_expires_at\n    #endregion components.schemas/session\n\n# All errors\n    Error:\n      type: object\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: string\n          enum:\n            - InvalidTOTPSecret\n        message:\n          type: string\n  responses:\n    DefaultError:\n      description: unexpected error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n",
			"canonicalURL": "/github.com/borgoat/farmfa@2a66f93e4979669573390b752a4d3643314b7afc/-/blob/api/farmfa.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/borgoat/farmfa/blob/2a66f93e4979669573390b752a4d3643314b7afc/api/farmfa.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}