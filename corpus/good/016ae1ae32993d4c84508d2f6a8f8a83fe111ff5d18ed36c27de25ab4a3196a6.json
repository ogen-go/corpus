{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql-provider-registry"
		},
		"file": {
			"name": "IdentityProvider.yaml",
			"size": 0,
			"path": "providers/src/okta/v0.1.0/services/IdentityProvider.yaml",
			"byteSize": 60986,
			"content": "components:\n  schemas:\n    AppAndInstanceConditionEvaluatorAppOrInstance:\n      properties:\n        id:\n          readOnly: true\n          type: string\n        name:\n          type: string\n        type:\n          enum:\n          - APP_TYPE\n          - APP\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    AppAndInstancePolicyRuleCondition:\n      properties:\n        exclude:\n          items:\n            $ref: '#/components/schemas/AppAndInstanceConditionEvaluatorAppOrInstance'\n          type: array\n        include:\n          items:\n            $ref: '#/components/schemas/AppAndInstanceConditionEvaluatorAppOrInstance'\n          type: array\n      type: object\n      x-okta-tags:\n      - Policy\n    AppInstancePolicyRuleCondition:\n      properties:\n        exclude:\n          items:\n            type: string\n          type: array\n        include:\n          items:\n            type: string\n          type: array\n      type: object\n      x-okta-tags:\n      - Policy\n    BeforeScheduledActionPolicyRuleCondition:\n      properties:\n        duration:\n          $ref: '#/components/schemas/Duration'\n        lifecycleAction:\n          $ref: '#/components/schemas/ScheduledUserLifecycleAction'\n      type: object\n      x-okta-tags:\n      - Policy\n    ClientPolicyCondition:\n      properties:\n        include:\n          items:\n            type: string\n          type: array\n      type: object\n      x-okta-tags:\n      - Policy\n    ContextPolicyRuleCondition:\n      properties:\n        expression:\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    Csr:\n      properties:\n        created:\n          format: date-time\n          readOnly: true\n          type: string\n        csr:\n          readOnly: true\n          type: string\n        id:\n          readOnly: true\n          type: string\n        kty:\n          readOnly: true\n          type: string\n      type: object\n      x-okta-tags:\n      - Application\n    CsrMetadata:\n      properties:\n        subject:\n          $ref: '#/components/schemas/CsrMetadataSubject'\n        subjectAltNames:\n          $ref: '#/components/schemas/CsrMetadataSubjectAltNames'\n      type: object\n      x-okta-tags:\n      - Application\n    CsrMetadataSubject:\n      properties:\n        commonName:\n          type: string\n        countryName:\n          type: string\n        localityName:\n          type: string\n        organizationName:\n          type: string\n        organizationalUnitName:\n          type: string\n        stateOrProvinceName:\n          type: string\n      type: object\n      x-okta-tags:\n      - Application\n    CsrMetadataSubjectAltNames:\n      properties:\n        dnsNames:\n          items:\n            type: string\n          type: array\n      type: object\n      x-okta-tags:\n      - Application\n    DevicePolicyRuleCondition:\n      properties:\n        migrated:\n          type: boolean\n        platform:\n          $ref: '#/components/schemas/DevicePolicyRuleConditionPlatform'\n        rooted:\n          type: boolean\n        trustLevel:\n          enum:\n          - ANY\n          - TRUSTED\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    DevicePolicyRuleConditionPlatform:\n      properties:\n        supportedMDMFrameworks:\n          items:\n            enum:\n            - AFW\n            - SAFE\n            - NATIVE\n            type: string\n          type: array\n        types:\n          items:\n            enum:\n            - IOS\n            - ANDROID\n            - OSX\n            - WINDOWS\n            type: string\n          type: array\n      type: object\n      x-okta-tags:\n      - Policy\n    Duration:\n      properties:\n        number:\n          type: integer\n        unit:\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    GrantTypePolicyRuleCondition:\n      properties:\n        include:\n          items:\n            type: string\n          type: array\n      type: object\n      x-okta-tags:\n      - Policy\n    GroupCondition:\n      properties:\n        exclude:\n          items:\n            type: string\n          type: array\n        include:\n          items:\n            type: string\n          type: array\n      type: object\n      x-okta-tags:\n      - Policy\n    GroupPolicyRuleCondition:\n      properties:\n        exclude:\n          items:\n            type: string\n          type: array\n        include:\n          items:\n            type: string\n          type: array\n      type: object\n      x-okta-tags:\n      - Policy\n    IdentityProvider:\n      properties:\n        _links:\n          additionalProperties:\n            properties: {}\n            type: object\n          readOnly: true\n          type: object\n        created:\n          format: date-time\n          readOnly: true\n          type: string\n        id:\n          readOnly: true\n          type: string\n        issuerMode:\n          enum:\n          - ORG_URL\n          - CUSTOM_URL\n          type: string\n        lastUpdated:\n          format: date-time\n          readOnly: true\n          type: string\n        name:\n          type: string\n        policy:\n          $ref: '#/components/schemas/IdentityProviderPolicy'\n        protocol:\n          $ref: '#/components/schemas/Protocol'\n        status:\n          enum:\n          - ACTIVE\n          - INACTIVE\n          type: string\n        type:\n          enum:\n          - SAML2\n          - GOOGLE\n          - FACEBOOK\n          - LINKEDIN\n          - MICROSOFT\n          - OIDC\n          - OKTA\n          - IWA\n          - AgentlessDSSO\n          - X509\n          type: string\n      type: object\n      x-okta-crud:\n      - alias: create\n        arguments:\n        - dest: idpTrust\n          self: true\n        operationId: createIdentityProvider\n      - alias: read\n        arguments: []\n        operationId: getIdentityProvider\n      - alias: update\n        arguments:\n        - dest: idpId\n          src: id\n        - dest: idpTrust\n          self: true\n        operationId: updateIdentityProvider\n      - alias: delete\n        arguments:\n        - dest: idpId\n          src: id\n        operationId: deleteIdentityProvider\n      x-okta-operations:\n      - alias: listSigningCsrs\n        arguments:\n        - dest: idpId\n          src: id\n        operationId: listCsrsForIdentityProvider\n      - alias: generateCsr\n        arguments:\n        - dest: idpId\n          src: id\n        operationId: generateCsrForIdentityProvider\n      - alias: deleteSigningCsr\n        arguments:\n        - dest: idpId\n          src: id\n        operationId: revokeCsrForIdentityProvider\n      - alias: getSigningCsr\n        arguments:\n        - dest: idpId\n          src: id\n        operationId: getCsrForIdentityProvider\n      - alias: listSigningKeys\n        arguments:\n        - dest: idpId\n          src: id\n        operationId: listIdentityProviderSigningKeys\n      - alias: generateSigningKey\n        arguments:\n        - dest: idpId\n          src: id\n        operationId: generateIdentityProviderSigningKey\n      - alias: getSigningKey\n        arguments:\n        - dest: idpId\n          src: id\n        operationId: getIdentityProviderSigningKey\n      - alias: cloneKey\n        arguments:\n        - dest: idpId\n          src: id\n        operationId: cloneIdentityProviderKey\n      - alias: activate\n        arguments:\n        - dest: idpId\n          src: id\n        operationId: activateIdentityProvider\n      - alias: deactivate\n        arguments:\n        - dest: idpId\n          src: id\n        operationId: deactivateIdentityProvider\n      - alias: listUsers\n        arguments:\n        - dest: idpId\n          src: id\n        operationId: listIdentityProviderApplicationUsers\n      - alias: unlinkUser\n        arguments:\n        - dest: idpId\n          src: id\n        operationId: unlinkUserFromIdentityProvider\n      - alias: getUser\n        arguments:\n        - dest: idpId\n          src: id\n        operationId: getIdentityProviderApplicationUser\n      - alias: linkUser\n        arguments:\n        - dest: idpId\n          src: id\n        operationId: linkUserToIdentityProvider\n      - alias: listSocialAuthTokens\n        arguments:\n        - dest: idpId\n          src: id\n        operationId: listSocialAuthTokens\n      x-okta-tags:\n      - IdentityProvider\n    IdentityProviderApplicationUser:\n      properties:\n        _embedded:\n          additionalProperties:\n            properties: {}\n            type: object\n          readOnly: true\n          type: object\n        _links:\n          additionalProperties:\n            properties: {}\n            type: object\n          readOnly: true\n          type: object\n        created:\n          type: string\n        externalId:\n          type: string\n        id:\n          readOnly: true\n          type: string\n        lastUpdated:\n          type: string\n        profile:\n          additionalProperties:\n            properties: {}\n            type: object\n          type: object\n      type: object\n      x-okta-tags:\n      - IdentityProvider\n    IdentityProviderCredentials:\n      properties:\n        client:\n          $ref: '#/components/schemas/IdentityProviderCredentialsClient'\n        signing:\n          $ref: '#/components/schemas/IdentityProviderCredentialsSigning'\n        trust:\n          $ref: '#/components/schemas/IdentityProviderCredentialsTrust'\n      type: object\n      x-okta-tags:\n      - IdentityProvider\n    IdentityProviderCredentialsClient:\n      properties:\n        client_id:\n          type: string\n        client_secret:\n          type: string\n      type: object\n      x-okta-tags:\n      - IdentityProvider\n    IdentityProviderCredentialsSigning:\n      properties:\n        kid:\n          type: string\n      type: object\n      x-okta-tags:\n      - IdentityProvider\n    IdentityProviderCredentialsTrust:\n      properties:\n        audience:\n          type: string\n        issuer:\n          type: string\n        kid:\n          type: string\n        revocation:\n          enum:\n          - CRL\n          - DELTA_CRL\n          - OCSP\n          type: string\n        revocationCacheLifetime:\n          type: integer\n      type: object\n      x-okta-tags:\n      - IdentityProvider\n    IdentityProviderPolicy:\n      properties:\n        accountLink:\n          $ref: '#/components/schemas/PolicyAccountLink'\n        maxClockSkew:\n          type: integer\n        provisioning:\n          $ref: '#/components/schemas/Provisioning'\n        subject:\n          $ref: '#/components/schemas/PolicySubject'\n      type: object\n      x-okta-parent: '#/components/schemas/Policy'\n      x-okta-tags:\n      - Policy\n    IdentityProviderPolicyRuleCondition:\n      properties:\n        idpIds:\n          items:\n            type: string\n          type: array\n        provider:\n          enum:\n          - ANY\n          - OKTA\n          - SPECIFIC_IDP\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    InactivityPolicyRuleCondition:\n      properties:\n        number:\n          type: integer\n        unit:\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    JsonWebKey:\n      properties:\n        _links:\n          additionalProperties:\n            properties: {}\n            type: object\n          readOnly: true\n          type: object\n        alg:\n          type: string\n        created:\n          format: date-time\n          type: string\n        e:\n          type: string\n        expiresAt:\n          format: date-time\n          type: string\n        key_ops:\n          items:\n            type: string\n          type: array\n        kid:\n          type: string\n        kty:\n          type: string\n        lastUpdated:\n          format: date-time\n          type: string\n        n:\n          type: string\n        status:\n          type: string\n        use:\n          type: string\n        x5c:\n          items:\n            type: string\n          type: array\n        x5t:\n          type: string\n        x5t#S256:\n          type: string\n        x5u:\n          type: string\n      type: object\n      x-okta-tags:\n      - Application\n    LifecycleExpirationPolicyRuleCondition:\n      properties:\n        lifecycleStatus:\n          type: string\n        number:\n          type: integer\n        unit:\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    MDMEnrollmentPolicyRuleCondition:\n      properties:\n        blockNonSafeAndroid:\n          type: boolean\n        enrollment:\n          enum:\n          - OMM\n          - ANY_OR_NONE\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    OAuth2ScopesMediationPolicyRuleCondition:\n      properties:\n        include:\n          items:\n            type: string\n          type: array\n      type: object\n      x-okta-tags:\n      - Application\n    OAuthAuthorizationPolicy:\n      type: object\n      x-okta-parent: '#/components/schemas/Policy'\n      x-okta-tags:\n      - Policy\n    OktaSignOnPolicy:\n      properties:\n        conditions:\n          $ref: '#/components/schemas/OktaSignOnPolicyConditions'\n      type: object\n      x-okta-parent: '#/components/schemas/Policy'\n      x-okta-tags:\n      - Policy\n    OktaSignOnPolicyConditions:\n      properties:\n        people:\n          $ref: '#/components/schemas/PolicyPeopleCondition'\n      type: object\n      x-okta-parent: '#/components/schemas/PolicyRuleConditions'\n      x-okta-tags:\n      - Policy\n    PasswordDictionary:\n      properties:\n        common:\n          $ref: '#/components/schemas/PasswordDictionaryCommon'\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordDictionaryCommon:\n      properties:\n        exclude:\n          default: false\n          type: boolean\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordExpirationPolicyRuleCondition:\n      properties:\n        number:\n          type: integer\n        unit:\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicy:\n      properties:\n        conditions:\n          $ref: '#/components/schemas/PasswordPolicyConditions'\n        settings:\n          $ref: '#/components/schemas/PasswordPolicySettings'\n      type: object\n      x-okta-parent: '#/components/schemas/Policy'\n      x-okta-tags:\n      - Policy\n    PasswordPolicyAuthenticationProviderCondition:\n      properties:\n        include:\n          items:\n            type: string\n          type: array\n        provider:\n          enum:\n          - ACTIVE_DIRECTORY\n          - ANY\n          - LDAP\n          - OKTA\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyConditions:\n      properties:\n        authProvider:\n          $ref: '#/components/schemas/PasswordPolicyAuthenticationProviderCondition'\n        people:\n          $ref: '#/components/schemas/PolicyPeopleCondition'\n      type: object\n      x-okta-parent: '#/components/schemas/PolicyRuleConditions'\n      x-okta-tags:\n      - Policy\n    PasswordPolicyDelegationSettings:\n      properties:\n        options:\n          $ref: '#/components/schemas/PasswordPolicyDelegationSettingsOptions'\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyDelegationSettingsOptions:\n      properties:\n        skipUnlock:\n          type: boolean\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyPasswordSettings:\n      properties:\n        age:\n          $ref: '#/components/schemas/PasswordPolicyPasswordSettingsAge'\n        complexity:\n          $ref: '#/components/schemas/PasswordPolicyPasswordSettingsComplexity'\n        lockout:\n          $ref: '#/components/schemas/PasswordPolicyPasswordSettingsLockout'\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyPasswordSettingsAge:\n      properties:\n        expireWarnDays:\n          type: integer\n        historyCount:\n          type: integer\n        maxAgeDays:\n          type: integer\n        minAgeMinutes:\n          type: integer\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyPasswordSettingsComplexity:\n      properties:\n        dictionary:\n          $ref: '#/components/schemas/PasswordDictionary'\n        excludeAttributes:\n          items:\n            type: string\n          type: array\n        excludeUsername:\n          default: true\n          type: boolean\n        minLength:\n          type: integer\n        minLowerCase:\n          type: integer\n        minNumber:\n          type: integer\n        minSymbol:\n          type: integer\n        minUpperCase:\n          type: integer\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyPasswordSettingsLockout:\n      properties:\n        autoUnlockMinutes:\n          type: integer\n        maxAttempts:\n          type: integer\n        showLockoutFailures:\n          type: boolean\n        userLockoutNotificationChannels:\n          items:\n            type: string\n          type: array\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyRecoveryEmail:\n      properties:\n        properties:\n          $ref: '#/components/schemas/PasswordPolicyRecoveryEmailProperties'\n        status:\n          enum:\n          - ACTIVE\n          - INACTIVE\n          readOnly: true\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyRecoveryEmailProperties:\n      properties:\n        recoveryToken:\n          $ref: '#/components/schemas/PasswordPolicyRecoveryEmailRecoveryToken'\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyRecoveryEmailRecoveryToken:\n      properties:\n        tokenLifetimeMinutes:\n          type: integer\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyRecoveryFactorSettings:\n      properties:\n        status:\n          default: INACTIVE\n          enum:\n          - ACTIVE\n          - INACTIVE\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyRecoveryFactors:\n      properties:\n        okta_call:\n          $ref: '#/components/schemas/PasswordPolicyRecoveryFactorSettings'\n        okta_email:\n          $ref: '#/components/schemas/PasswordPolicyRecoveryEmail'\n        okta_sms:\n          $ref: '#/components/schemas/PasswordPolicyRecoveryFactorSettings'\n        recovery_question:\n          $ref: '#/components/schemas/PasswordPolicyRecoveryQuestion'\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyRecoveryQuestion:\n      properties:\n        properties:\n          $ref: '#/components/schemas/PasswordPolicyRecoveryQuestionProperties'\n        status:\n          enum:\n          - ACTIVE\n          - INACTIVE\n          readOnly: true\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyRecoveryQuestionComplexity:\n      properties:\n        minLength:\n          readOnly: true\n          type: integer\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyRecoveryQuestionProperties:\n      properties:\n        complexity:\n          $ref: '#/components/schemas/PasswordPolicyRecoveryQuestionComplexity'\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyRecoverySettings:\n      properties:\n        factors:\n          $ref: '#/components/schemas/PasswordPolicyRecoveryFactors'\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicySettings:\n      properties:\n        delegation:\n          $ref: '#/components/schemas/PasswordPolicyDelegationSettings'\n        password:\n          $ref: '#/components/schemas/PasswordPolicyPasswordSettings'\n        recovery:\n          $ref: '#/components/schemas/PasswordPolicyRecoverySettings'\n      type: object\n      x-okta-tags:\n      - Policy\n    PlatformConditionEvaluatorPlatform:\n      properties:\n        os:\n          $ref: '#/components/schemas/PlatformConditionEvaluatorPlatformOperatingSystem'\n        type:\n          enum:\n          - DESKTOP\n          - MOBILE\n          - OTHER\n          - ANY\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    PlatformConditionEvaluatorPlatformOperatingSystem:\n      properties:\n        expression:\n          type: string\n        type:\n          enum:\n          - ANDROID\n          - IOS\n          - WINDOWS\n          - OSX\n          - OTHER\n          - ANY\n          type: string\n        version:\n          $ref: '#/components/schemas/PlatformConditionEvaluatorPlatformOperatingSystemVersion'\n      type: object\n      x-okta-tags:\n      - Policy\n    PlatformConditionEvaluatorPlatformOperatingSystemVersion:\n      properties:\n        matchType:\n          enum:\n          - EXPRESSION\n          - SEMVER\n          type: string\n        value:\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    PlatformPolicyRuleCondition:\n      properties:\n        exclude:\n          items:\n            $ref: '#/components/schemas/PlatformConditionEvaluatorPlatform'\n          type: array\n        include:\n          items:\n            $ref: '#/components/schemas/PlatformConditionEvaluatorPlatform'\n          type: array\n      type: object\n      x-okta-tags:\n      - Policy\n    Policy:\n      properties:\n        _embedded:\n          additionalProperties:\n            properties: {}\n            type: object\n          readOnly: true\n          type: object\n        _links:\n          additionalProperties:\n            properties: {}\n            type: object\n          readOnly: true\n          type: object\n        conditions:\n          $ref: '#/components/schemas/PolicyRuleConditions'\n        created:\n          format: date-time\n          readOnly: true\n          type: string\n        description:\n          type: string\n        id:\n          readOnly: true\n          type: string\n        lastUpdated:\n          format: date-time\n          readOnly: true\n          type: string\n        name:\n          type: string\n        priority:\n          type: integer\n        status:\n          enum:\n          - ACTIVE\n          - INACTIVE\n          type: string\n        system:\n          type: boolean\n        type:\n          $ref: '#/components/schemas/PolicyType'\n      type: object\n      x-okta-crud:\n      - alias: read\n        arguments:\n        - dest: policyId\n          src: id\n        operationId: getPolicy\n      - alias: update\n        arguments:\n        - dest: policyId\n          src: id\n        - dest: policy\n          self: true\n        operationId: updatePolicy\n      - alias: delete\n        arguments:\n        - dest: policyId\n          src: id\n        operationId: deletePolicy\n      x-okta-operations:\n      - alias: activate\n        arguments:\n        - dest: policyId\n          src: id\n        operationId: activatePolicy\n      - alias: deactivate\n        arguments:\n        - dest: policyId\n          src: id\n        operationId: deactivatePolicy\n      - alias: listPolicyRules\n        arguments:\n        - dest: policyId\n          src: id\n        operationId: listPolicyRules\n      - alias: createRule\n        arguments:\n        - dest: policyId\n          src: id\n        operationId: createPolicyRule\n      - alias: getPolicyRule\n        arguments:\n        - dest: policyId\n          src: id\n        operationId: getPolicyRule\n      x-okta-tags:\n      - Policy\n      x-openapi-v3-discriminator:\n        mapping:\n          IDP_DISCOVERY: '#/components/schemas/IdentityProviderPolicy'\n          OAUTH_AUTHORIZATION_POLICY: '#/components/schemas/OAuthAuthorizationPolicy'\n          OKTA_SIGN_ON: '#/components/schemas/OktaSignOnPolicy'\n          PASSWORD: '#/components/schemas/PasswordPolicy'\n        propertyName: type\n    PolicyAccountLink:\n      properties:\n        action:\n          enum:\n          - AUTO\n          - DISABLED\n          type: string\n        filter:\n          $ref: '#/components/schemas/PolicyAccountLinkFilter'\n      type: object\n      x-okta-tags:\n      - Policy\n    PolicyAccountLinkFilter:\n      properties:\n        groups:\n          $ref: '#/components/schemas/PolicyAccountLinkFilterGroups'\n      type: object\n      x-okta-tags:\n      - Policy\n    PolicyAccountLinkFilterGroups:\n      properties:\n        include:\n          items:\n            type: string\n          type: array\n      type: object\n      x-okta-tags:\n      - Policy\n    PolicyNetworkCondition:\n      properties:\n        connection:\n          enum:\n          - ANYWHERE\n          - ZONE\n          type: string\n        exclude:\n          items:\n            type: string\n          type: array\n        include:\n          items:\n            type: string\n          type: array\n      type: object\n      x-okta-tags:\n      - Policy\n    PolicyPeopleCondition:\n      properties:\n        groups:\n          $ref: '#/components/schemas/GroupCondition'\n        users:\n          $ref: '#/components/schemas/UserCondition'\n      type: object\n      x-okta-tags:\n      - Policy\n    PolicyRuleAuthContextCondition:\n      properties:\n        authType:\n          enum:\n          - ANY\n          - RADIUS\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    PolicyRuleConditions:\n      properties:\n        app:\n          $ref: '#/components/schemas/AppAndInstancePolicyRuleCondition'\n        apps:\n          $ref: '#/components/schemas/AppInstancePolicyRuleCondition'\n        authContext:\n          $ref: '#/components/schemas/PolicyRuleAuthContextCondition'\n        authProvider:\n          $ref: '#/components/schemas/PasswordPolicyAuthenticationProviderCondition'\n        beforeScheduledAction:\n          $ref: '#/components/schemas/BeforeScheduledActionPolicyRuleCondition'\n        clients:\n          $ref: '#/components/schemas/ClientPolicyCondition'\n        context:\n          $ref: '#/components/schemas/ContextPolicyRuleCondition'\n        device:\n          $ref: '#/components/schemas/DevicePolicyRuleCondition'\n        grantTypes:\n          $ref: '#/components/schemas/GrantTypePolicyRuleCondition'\n        groups:\n          $ref: '#/components/schemas/GroupPolicyRuleCondition'\n        identityProvider:\n          $ref: '#/components/schemas/IdentityProviderPolicyRuleCondition'\n        mdmEnrollment:\n          $ref: '#/components/schemas/MDMEnrollmentPolicyRuleCondition'\n        network:\n          $ref: '#/components/schemas/PolicyNetworkCondition'\n        people:\n          $ref: '#/components/schemas/PolicyPeopleCondition'\n        platform:\n          $ref: '#/components/schemas/PlatformPolicyRuleCondition'\n        risk:\n          $ref: '#/components/schemas/RiskPolicyRuleCondition'\n        riskScore:\n          $ref: '#/components/schemas/RiskScorePolicyRuleCondition'\n        scopes:\n          $ref: '#/components/schemas/OAuth2ScopesMediationPolicyRuleCondition'\n        userIdentifier:\n          $ref: '#/components/schemas/UserIdentifierPolicyRuleCondition'\n        userStatus:\n          $ref: '#/components/schemas/UserStatusPolicyRuleCondition'\n        users:\n          $ref: '#/components/schemas/UserPolicyRuleCondition'\n      type: object\n      x-okta-tags:\n      - Policy\n    PolicySubject:\n      properties:\n        filter:\n          type: string\n        format:\n          items:\n            type: string\n          type: array\n        matchAttribute:\n          type: string\n        matchType:\n          $ref: '#/components/schemas/PolicySubjectMatchType'\n        userNameTemplate:\n          $ref: '#/components/schemas/PolicyUserNameTemplate'\n      type: object\n      x-okta-tags:\n      - Policy\n    PolicySubjectMatchType:\n      enum:\n      - USERNAME\n      - EMAIL\n      - USERNAME_OR_EMAIL\n      - CUSTOM_ATTRIBUTE\n      type: string\n      x-okta-tags:\n      - Policy\n    PolicyType:\n      enum:\n      - OAUTH_AUTHORIZATION_POLICY\n      - OKTA_SIGN_ON\n      - PASSWORD\n      - IDP_DISCOVERY\n      type: string\n      x-okta-tags:\n      - Policy\n    PolicyUserNameTemplate:\n      properties:\n        template:\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    Protocol:\n      properties:\n        algorithms:\n          $ref: '#/components/schemas/ProtocolAlgorithms'\n        credentials:\n          $ref: '#/components/schemas/IdentityProviderCredentials'\n        endpoints:\n          $ref: '#/components/schemas/ProtocolEndpoints'\n        issuer:\n          $ref: '#/components/schemas/ProtocolEndpoint'\n        relayState:\n          $ref: '#/components/schemas/ProtocolRelayState'\n        scopes:\n          items:\n            type: string\n          type: array\n        settings:\n          $ref: '#/components/schemas/ProtocolSettings'\n        type:\n          enum:\n          - SAML2\n          - OIDC\n          - OAUTH2\n          - MTLS\n          type: string\n      type: object\n      x-okta-tags:\n      - IdentityProvider\n    ProtocolAlgorithmType:\n      properties:\n        signature:\n          $ref: '#/components/schemas/ProtocolAlgorithmTypeSignature'\n      type: object\n      x-okta-tags:\n      - IdentityProvider\n    ProtocolAlgorithmTypeSignature:\n      properties:\n        algorithm:\n          type: string\n        scope:\n          enum:\n          - RESPONSE\n          - TOKEN\n          - ANY\n          - REQUEST\n          - NONE\n          type: string\n      type: object\n      x-okta-tags:\n      - IdentityProvider\n    ProtocolAlgorithms:\n      properties:\n        request:\n          $ref: '#/components/schemas/ProtocolAlgorithmType'\n        response:\n          $ref: '#/components/schemas/ProtocolAlgorithmType'\n      type: object\n      x-okta-tags:\n      - IdentityProvider\n    ProtocolEndpoint:\n      properties:\n        binding:\n          enum:\n          - HTTP-POST\n          - HTTP-REDIRECT\n          type: string\n        destination:\n          type: string\n        type:\n          enum:\n          - INSTANCE\n          - ORG\n          type: string\n        url:\n          type: string\n      type: object\n      x-okta-tags:\n      - IdentityProvider\n    ProtocolEndpoints:\n      properties:\n        acs:\n          $ref: '#/components/schemas/ProtocolEndpoint'\n        authorization:\n          $ref: '#/components/schemas/ProtocolEndpoint'\n        jwks:\n          $ref: '#/components/schemas/ProtocolEndpoint'\n        metadata:\n          $ref: '#/components/schemas/ProtocolEndpoint'\n        slo:\n          $ref: '#/components/schemas/ProtocolEndpoint'\n        sso:\n          $ref: '#/components/schemas/ProtocolEndpoint'\n        token:\n          $ref: '#/components/schemas/ProtocolEndpoint'\n        userInfo:\n          $ref: '#/components/schemas/ProtocolEndpoint'\n      type: object\n      x-okta-tags:\n      - IdentityProvider\n    ProtocolRelayState:\n      properties:\n        format:\n          $ref: '#/components/schemas/ProtocolRelayStateFormat'\n      type: object\n      x-okta-tags:\n      - IdentityProvider\n    ProtocolRelayStateFormat:\n      enum:\n      - OPAQUE\n      - FROM_URL\n      type: string\n      x-okta-tags:\n      - IdentityProvider\n    ProtocolSettings:\n      properties:\n        nameFormat:\n          type: string\n      type: object\n      x-okta-tags:\n      - IdentityProvider\n    Provisioning:\n      properties:\n        action:\n          enum:\n          - AUTO\n          - CALLOUT\n          - DISABLED\n          type: string\n        conditions:\n          $ref: '#/components/schemas/ProvisioningConditions'\n        groups:\n          $ref: '#/components/schemas/ProvisioningGroups'\n        profileMaster:\n          type: boolean\n      type: object\n      x-okta-tags:\n      - IdentityProvider\n    ProvisioningConditions:\n      properties:\n        deprovisioned:\n          $ref: '#/components/schemas/ProvisioningDeprovisionedCondition'\n        suspended:\n          $ref: '#/components/schemas/ProvisioningSuspendedCondition'\n      type: object\n      x-okta-tags:\n      - IdentityProvider\n    ProvisioningDeprovisionedCondition:\n      properties:\n        action:\n          enum:\n          - NONE\n          - REACTIVATE\n          type: string\n      type: object\n      x-okta-tags:\n      - IdentityProvider\n    ProvisioningGroups:\n      properties:\n        action:\n          enum:\n          - NONE\n          - APPEND\n          - SYNC\n          - ASSIGN\n          type: string\n        assignments:\n          items:\n            type: string\n          type: array\n        filter:\n          items:\n            type: string\n          type: array\n        sourceAttributeName:\n          type: string\n      type: object\n      x-okta-tags:\n      - IdentityProvider\n    ProvisioningSuspendedCondition:\n      properties:\n        action:\n          enum:\n          - NONE\n          - UNSUSPEND\n          type: string\n      type: object\n      x-okta-tags:\n      - IdentityProvider\n    RiskPolicyRuleCondition:\n      properties:\n        behaviors:\n          items:\n            type: string\n          type: array\n          uniqueItems: true\n      type: object\n      x-okta-tags:\n      - Policy\n    RiskScorePolicyRuleCondition:\n      properties:\n        level:\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    ScheduledUserLifecycleAction:\n      properties:\n        status:\n          enum:\n          - ACTIVE\n          - INACTIVE\n          - PENDING\n          - DELETED\n          - EXPIRED_PASSWORD\n          - ACTIVATING\n          - SUSPENDED\n          - DELETING\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    SocialAuthToken:\n      properties:\n        expiresAt:\n          format: date-time\n          readOnly: true\n          type: string\n        id:\n          readOnly: true\n          type: string\n        scopes:\n          items:\n            type: string\n          type: array\n        token:\n          type: string\n        tokenAuthScheme:\n          type: string\n        tokenType:\n          type: string\n      type: object\n      x-okta-tags:\n      - IdentityProvider\n    UserCondition:\n      properties:\n        exclude:\n          items:\n            type: string\n          type: array\n        include:\n          items:\n            type: string\n          type: array\n      type: object\n      x-okta-tags:\n      - Policy\n    UserIdentifierConditionEvaluatorPattern:\n      properties:\n        matchType:\n          enum:\n          - SUFFIX\n          - EXPRESSION\n          - STARTS_WITH\n          - EQUALS\n          - CONTAINS\n          type: string\n        value:\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    UserIdentifierPolicyRuleCondition:\n      properties:\n        attribute:\n          type: string\n        patterns:\n          items:\n            $ref: '#/components/schemas/UserIdentifierConditionEvaluatorPattern'\n          type: array\n        type:\n          enum:\n          - IDENTIFIER\n          - ATTRIBUTE\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    UserIdentityProviderLinkRequest:\n      properties:\n        externalId:\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    UserLifecycleAttributePolicyRuleCondition:\n      properties:\n        attributeName:\n          type: string\n        matchingValue:\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    UserPolicyRuleCondition:\n      properties:\n        exclude:\n          items:\n            type: string\n          type: array\n        inactivity:\n          $ref: '#/components/schemas/InactivityPolicyRuleCondition'\n        include:\n          items:\n            type: string\n          type: array\n        lifecycleExpiration:\n          $ref: '#/components/schemas/LifecycleExpirationPolicyRuleCondition'\n        passwordExpiration:\n          $ref: '#/components/schemas/PasswordExpirationPolicyRuleCondition'\n        userLifecycleAttribute:\n          $ref: '#/components/schemas/UserLifecycleAttributePolicyRuleCondition'\n      type: object\n      x-okta-tags:\n      - Policy\n    UserStatusPolicyRuleCondition:\n      properties:\n        value:\n          enum:\n          - ACTIVE\n          - INACTIVE\n          - PENDING\n          - DELETED\n          - EXPIRED_PASSWORD\n          - ACTIVATING\n          - SUSPENDED\n          - DELETING\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n  securitySchemes:\n    api_token:\n      description: SSWS {API Token}\n      in: header\n      name: Authorization\n      type: apiKey\n  x-stackQL-resources:\n    csrs:\n      id: okta.identityprovider.csrs\n      methods:\n        delete:\n          operation:\n            $ref: '#/paths/~1api~1v1~1idps~1{idpId}~1credentials~1csrs~1{csrId}/DELETE'\n          response:\n            openAPIDocKey: '204'\n        get:\n          operation:\n            $ref: '#/paths/~1api~1v1~1idps~1{idpId}~1credentials~1csrs~1{csrId}/GET'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        insert:\n          operation:\n            $ref: '#/paths/~1api~1v1~1idps~1{idpId}~1credentials~1csrs/POST'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        list:\n          operation:\n            $ref: '#/paths/~1api~1v1~1idps~1{idpId}~1credentials~1csrs/GET'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      name: csrs\n      title: csrs\n    idpkeys:\n      id: okta.identityprovider.idpkeys\n      methods:\n        clone:\n          operation:\n            $ref: '#/paths/~1api~1v1~1idps~1{idpId}~1credentials~1keys~1{keyId}~1clone/POST'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        get:\n          operation:\n            $ref: '#/paths/~1api~1v1~1idps~1{idpId}~1credentials~1keys~1{keyId}/GET'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        insert:\n          operation:\n            $ref: '#/paths/~1api~1v1~1idps~1{idpId}~1credentials~1keys~1generate/POST'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list:\n          operation:\n            $ref: '#/paths/~1api~1v1~1idps~1{idpId}~1credentials~1keys/GET'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      name: idpkeys\n      title: idpkeys\n    idps:\n      id: okta.identityprovider.idps\n      methods:\n        activate:\n          operation:\n            $ref: '#/paths/~1api~1v1~1idps~1{idpId}~1lifecycle~1activate/POST'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        deactivate:\n          operation:\n            $ref: '#/paths/~1api~1v1~1idps~1{idpId}~1lifecycle~1activate/POST'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        delete:\n          operation:\n            $ref: '#/paths/~1api~1v1~1idps~1{idpId}/DELETE'\n          response:\n            openAPIDocKey: '204'\n        get:\n          operation:\n            $ref: '#/paths/~1api~1v1~1idps~1{idpId}/GET'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        insert:\n          operation:\n            $ref: '#/paths/~1api~1v1~1idps/POST'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list:\n          operation:\n            $ref: '#/paths/~1api~1v1~1idps/GET'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        update:\n          operation:\n            $ref: '#/paths/~1api~1v1~1idps~1{idpId}/PUT'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      name: idps\n      title: idps\n    keys:\n      id: okta.identityprovider.keys\n      methods:\n        delete:\n          operation:\n            $ref: '#/paths/~1api~1v1~1idps~1credentials~1keys~1{keyId}/DELETE'\n          response:\n            openAPIDocKey: '204'\n        get:\n          operation:\n            $ref: '#/paths/~1api~1v1~1idps~1credentials~1keys~1{keyId}/GET'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        insert:\n          operation:\n            $ref: '#/paths/~1api~1v1~1idps~1credentials~1keys/POST'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list:\n          operation:\n            $ref: '#/paths/~1api~1v1~1idps~1credentials~1keys/GET'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      name: keys\n      title: keys\n    users:\n      id: okta.identityprovider.users\n      methods:\n        delete:\n          operation:\n            $ref: '#/paths/~1api~1v1~1idps~1{idpId}~1users~1{userId}/DELETE'\n          response:\n            openAPIDocKey: '204'\n        get:\n          operation:\n            $ref: '#/paths/~1api~1v1~1idps~1{idpId}~1users~1{userId}/GET'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        insert:\n          operation:\n            $ref: '#/paths/~1api~1v1~1idps~1{idpId}~1users~1{userId}/POST'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list:\n          operation:\n            $ref: '#/paths/~1api~1v1~1idps~1{idpId}~1users/GET'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      name: users\n      title: users\n    usertokens:\n      id: okta.identityprovider.usertokens\n      methods:\n        list:\n          operation:\n            $ref: '#/paths/~1api~1v1~1idps~1{idpId}~1users~1{userId}~1credentials~1tokens/GET'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      name: usertokens\n      title: usertokens\nexternalDocs:\n  description: Find more info here\n  url: https://developer.okta.com/docs/api/getting_started/design_principles.html\ninfo:\n  contact:\n    email: devex-public@okta.com\n    name: Okta Developer Team\n    url: https://developer.okta.com/\n  description: Allows customers to easily access the Okta API\n  license:\n    name: Apache-2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\n  termsOfService: https://developer.okta.com/terms/\n  title: Okta API\n  version: 2.8.0\nopenapi: 3.0.1\npaths:\n  /api/v1/idps:\n    get:\n      description: Enumerates IdPs in your organization with pagination. A subset\n        of IdPs can be returned that match a supported filter expression or query.\n      operationId: listIdentityProviders\n      parameters:\n      - description: Searches the name property of IdPs for matching value\n        in: query\n        name: q\n        schema:\n          type: string\n      - description: Specifies the pagination cursor for the next page of IdPs\n        in: query\n        name: after\n        schema:\n          type: string\n      - description: Specifies the number of IdP results in a page\n        in: query\n        name: limit\n        schema:\n          default: 20\n          format: int32\n          type: integer\n      - description: Filters IdPs by type\n        in: query\n        name: type\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/IdentityProvider'\n                type: array\n          description: Success\n      security:\n      - api_token: []\n      summary: List Identity Providers\n      tags:\n      - IdentityProvider\n    post:\n      description: Adds a new IdP to your organization.\n      operationId: createIdentityProvider\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/IdentityProvider'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdentityProvider'\n          description: Success\n      security:\n      - api_token: []\n      summary: Add Identity Provider\n      tags:\n      - IdentityProvider\n      x-codegen-request-body-name: identityProvider\n  /api/v1/idps/credentials/keys:\n    get:\n      description: Enumerates IdP key credentials.\n      operationId: listIdentityProviderKeys\n      parameters:\n      - description: Specifies the pagination cursor for the next page of keys\n        in: query\n        name: after\n        schema:\n          type: string\n      - description: Specifies the number of key results in a page\n        in: query\n        name: limit\n        schema:\n          default: 20\n          format: int32\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/JsonWebKey'\n                type: array\n          description: Success\n      security:\n      - api_token: []\n      summary: List Keys\n      tags:\n      - IdentityProvider\n    post:\n      description: Adds a new X.509 certificate credential to the IdP key store.\n      operationId: createIdentityProviderKey\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/JsonWebKey'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JsonWebKey'\n          description: Success\n      security:\n      - api_token: []\n      summary: Add X.509 Certificate Public Key\n      tags:\n      - IdentityProvider\n      x-codegen-request-body-name: jsonWebKey\n  /api/v1/idps/credentials/keys/{keyId}:\n    delete:\n      description: Deletes a specific IdP Key Credential by `kid` if it is not currently\n        being used by an Active or Inactive IdP.\n      operationId: deleteIdentityProviderKey\n      parameters:\n      - in: path\n        name: keyId\n        required: true\n        schema:\n          type: string\n      responses:\n        '204':\n          content: {}\n          description: No Content\n      security:\n      - api_token: []\n      summary: Delete Key\n      tags:\n      - IdentityProvider\n    get:\n      description: Gets a specific IdP Key Credential by `kid`\n      operationId: getIdentityProviderKey\n      parameters:\n      - in: path\n        name: keyId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JsonWebKey'\n          description: Success\n      security:\n      - api_token: []\n      summary: Get Key\n      tags:\n      - IdentityProvider\n  /api/v1/idps/{idpId}:\n    delete:\n      description: Removes an IdP from your organization.\n      operationId: deleteIdentityProvider\n      parameters:\n      - in: path\n        name: idpId\n        required: true\n        schema:\n          type: string\n      responses:\n        '204':\n          content: {}\n          description: No Content\n      security:\n      - api_token: []\n      summary: Delete Identity Provider\n      tags:\n      - IdentityProvider\n    get:\n      description: Fetches an IdP by `id`.\n      operationId: getIdentityProvider\n      parameters:\n      - in: path\n        name: idpId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdentityProvider'\n          description: Success\n      security:\n      - api_token: []\n      summary: Get Identity Provider\n      tags:\n      - IdentityProvider\n    put:\n      description: Updates the configuration for an IdP.\n      operationId: updateIdentityProvider\n      parameters:\n      - in: path\n        name: idpId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/IdentityProvider'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdentityProvider'\n          description: Success\n      security:\n      - api_token: []\n      summary: Update Identity Provider\n      tags:\n      - IdentityProvider\n      x-codegen-request-body-name: identityProvider\n  /api/v1/idps/{idpId}/credentials/csrs:\n    get:\n      description: Enumerates Certificate Signing Requests for an IdP\n      operationId: listCsrsForIdentityProvider\n      parameters:\n      - in: path\n        name: idpId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Csr'\n                type: array\n          description: Success\n      security:\n      - api_token: []\n      summary: List Certificate Signing Requests for IdP\n      tags:\n      - IdentityProvider\n    post:\n      description: Generates a new key pair and returns a Certificate Signing Request\n        for it.\n      operationId: generateCsrForIdentityProvider\n      parameters:\n      - in: path\n        name: idpId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CsrMetadata'\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Csr'\n          description: Created\n      security:\n      - api_token: []\n      summary: Generate Certificate Signing Request for IdP\n      tags:\n      - IdentityProvider\n      x-codegen-request-body-name: metadata\n  /api/v1/idps/{idpId}/credentials/csrs/{csrId}:\n    delete:\n      description: Revoke a Certificate Signing Request and delete the key pair from\n        the IdP\n      operationId: revokeCsrForIdentityProvider\n      parameters:\n      - in: path\n        name: idpId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: csrId\n        required: true\n        schema:\n          type: string\n      responses:\n        '204':\n          content: {}\n          description: No Content\n      security:\n      - api_token: []\n      tags:\n      - IdentityProvider\n    get:\n      description: Gets a specific Certificate Signing Request model by id\n      operationId: getCsrForIdentityProvider\n      parameters:\n      - in: path\n        name: idpId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: csrId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Csr'\n          description: Success\n      security:\n      - api_token: []\n      tags:\n      - IdentityProvider\n  /api/v1/idps/{idpId}/credentials/csrs/{csrId}/lifecycle/publish:\n    post:\n      description: Update the Certificate Signing Request with a signed X.509 certificate\n        and add it into the signing key credentials for the IdP.\n      parameters:\n      - in: path\n        name: idpId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: csrId\n        required: true\n        schema:\n          type: string\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JsonWebKey'\n          description: Created\n      security:\n      - api_token: []\n      tags:\n      - IdentityProvider\n      x-okta-multi-operation:\n      - consumes:\n        - application/x-x509-ca-cert\n        encoding: base64\n        operationId: publishCerCertForIdentityProvider\n        parameters:\n        - in: body\n          name: certificate\n          required: true\n          type: string\n      - consumes:\n        - application/x-x509-ca-cert\n        operationId: publishBinaryCerCertForIdentityProvider\n        parameters:\n        - format: binary\n          in: body\n          name: certificate\n          required: true\n          type: string\n      - consumes:\n        - application/pkix-cert\n        encoding: base64\n        operationId: publishDerCertForIdentityProvider\n        parameters:\n        - in: body\n          name: certificate\n          required: true\n          type: string\n      - consumes:\n        - application/pkix-cert\n        operationId: publishBinaryDerCertForIdentityProvider\n        parameters:\n        - format: binary\n          in: body\n          name: certificate\n          required: true\n          type: string\n      - consumes:\n        - application/x-pem-file\n        operationId: publishBinaryPemCertForIdentityProvider\n        parameters:\n        - format: binary\n          in: body\n          name: certificate\n          required: true\n          type: string\n  /api/v1/idps/{idpId}/credentials/keys:\n    get:\n      description: Enumerates signing key credentials for an IdP\n      operationId: listIdentityProviderSigningKeys\n      parameters:\n      - in: path\n        name: idpId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/JsonWebKey'\n                type: array\n          description: Success\n      security:\n      - api_token: []\n      summary: List Signing Key Credentials for IdP\n      tags:\n      - IdentityProvider\n  /api/v1/idps/{idpId}/credentials/keys/generate:\n    post:\n      description: Generates a new X.509 certificate for an IdP signing key credential\n        to be used for signing assertions sent to the IdP\n      operationId: generateIdentityProviderSigningKey\n      parameters:\n      - in: path\n        name: idpId\n        required: true\n        schema:\n          type: string\n      - description: expiry of the IdP Key Credential\n        in: query\n        name: validityYears\n        required: true\n        schema:\n          format: int32\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JsonWebKey'\n          description: Success\n      security:\n      - api_token: []\n      summary: Generate New IdP Signing Key Credential\n      tags:\n      - IdentityProvider\n  /api/v1/idps/{idpId}/credentials/keys/{keyId}:\n    get:\n      description: Gets a specific IdP Key Credential by `kid`\n      operationId: getIdentityProviderSigningKey\n      parameters:\n      - in: path\n        name: idpId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: keyId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JsonWebKey'\n          description: Success\n      security:\n      - api_token: []\n      summary: Get Signing Key Credential for IdP\n      tags:\n      - IdentityProvider\n  /api/v1/idps/{idpId}/credentials/keys/{keyId}/clone:\n    post:\n      description: Clones a X.509 certificate for an IdP signing key credential from\n        a source IdP to target IdP\n      operationId: cloneIdentityProviderKey\n      parameters:\n      - in: path\n        name: idpId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: keyId\n        required: true\n        schema:\n          type: string\n      - in: query\n        name: targetIdpId\n        required: true\n        schema:\n          type: string\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JsonWebKey'\n          description: Created\n      security:\n      - api_token: []\n      summary: Clone Signing Key Credential for IdP\n      tags:\n      - IdentityProvider\n  /api/v1/idps/{idpId}/lifecycle/activate:\n    post:\n      description: Activates an inactive IdP.\n      operationId: activateIdentityProvider\n      parameters:\n      - in: path\n        name: idpId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdentityProvider'\n          description: Success\n      security:\n      - api_token: []\n      summary: Activate Identity Provider\n      tags:\n      - IdentityProvider\n  /api/v1/idps/{idpId}/lifecycle/deactivate:\n    post:\n      description: Deactivates an active IdP.\n      operationId: deactivateIdentityProvider\n      parameters:\n      - in: path\n        name: idpId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdentityProvider'\n          description: Success\n      security:\n      - api_token: []\n      summary: Deactivate Identity Provider\n      tags:\n      - IdentityProvider\n  /api/v1/idps/{idpId}/users:\n    get:\n      description: Find all the users linked to an identity provider\n      operationId: listIdentityProviderApplicationUsers\n      parameters:\n      - in: path\n        name: idpId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/IdentityProviderApplicationUser'\n                type: array\n          description: Success\n      security:\n      - api_token: []\n      summary: Find Users\n      tags:\n      - IdentityProvider\n  /api/v1/idps/{idpId}/users/{userId}:\n    delete:\n      description: Removes the link between the Okta user and the IdP user.\n      operationId: unlinkUserFromIdentityProvider\n      parameters:\n      - in: path\n        name: idpId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      responses:\n        '204':\n          content: {}\n          description: No Content\n      security:\n      - api_token: []\n      summary: Unlink User from IdP\n      tags:\n      - IdentityProvider\n    get:\n      description: Fetches a linked IdP user by ID\n      operationId: getIdentityProviderApplicationUser\n      parameters:\n      - in: path\n        name: idpId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdentityProviderApplicationUser'\n          description: Success\n      security:\n      - api_token: []\n      tags:\n      - IdentityProvider\n    post:\n      description: Links an Okta user to an existing Social Identity Provider. This\n        does not support the SAML2 Identity Provider Type\n      operationId: linkUserToIdentityProvider\n      parameters:\n      - in: path\n        name: idpId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserIdentityProviderLinkRequest'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdentityProviderApplicationUser'\n          description: Success\n      security:\n      - api_token: []\n      summary: Link a user to a Social IdP without a transaction\n      tags:\n      - IdentityProvider\n      x-codegen-request-body-name: userIdentityProviderLinkRequest\n  /api/v1/idps/{idpId}/users/{userId}/credentials/tokens:\n    get:\n      description: Fetches the tokens minted by the Social Authentication Provider\n        when the user authenticates with Okta via Social Auth.\n      operationId: listSocialAuthTokens\n      parameters:\n      - in: path\n        name: idpId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/SocialAuthToken'\n                type: array\n          description: Success\n      security:\n      - api_token: []\n      summary: Social Authentication Token Operation\n      tags:\n      - IdentityProvider\nservers:\n- url: https://{subdomain}.okta.com/\n  variables:\n    subdomain:\n      default: my-domain\n",
			"canonicalURL": "/github.com/stackql/stackql-provider-registry@7482bc9b2425a6491d640bf921a1dc9cf508f339/-/blob/providers/src/okta/v0.1.0/services/IdentityProvider.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stackql/stackql-provider-registry/blob/7482bc9b2425a6491d640bf921a1dc9cf508f339/providers/src/okta/v0.1.0/services/IdentityProvider.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}