{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/cardbox/backend"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "api-admin/openapi.yaml",
			"byteSize": 7151,
			"content": "openapi: 3.0.1\ninfo:\n  title: Cardbox Admin API.\n  version: 0.1.0\n  description: API for Management\nexternalDocs:\n  url: https://cardbox.github.io/backend/api-admin/index.html\nservers:\n  - url: http://localhost:9105/\n  - url: https://cardbox.sova.dev/api/admin\npaths:\n  \"/scope/object-action\":\n    post:\n      operationId: scopeObjectAction\n      tags: [ Sample ]\n      description: Authorization request\n      requestBody:\n        $ref: \"#/components/requestBodies/OAuthAuthorize\"\n      responses:\n        200:\n          $ref: \"#/components/responses/OAuthAuthorizeDone\"\n        400:\n          $ref: \"#/components/responses/OAuthAuthorizeRequestFailure\"\n        500:\n          description: Something goes wrong\n\ncomponents:\n  responses:\n    OAuthAuthorizeDone:\n      description: Authorization completed, now access token can be obtained.\n      content:\n        application/json:\n          schema:\n            required:\n              - redirectUri\n              - code\n            properties:\n              redirectUri:\n                description: User should be redirected to\n                type: string\n                format: url\n              code:\n                description: This parameter contains the authorization code which the client will later exchange for an access token.\n                type: string\n              state:\n                description:\n                  If the initial request contained a state parameter, the response must also include the exact value from the request.\n                  The client will be using this to associate this response with the initial request.\n                type: string\n\n    OAuthAuthorizeRequestFailure:\n      description:\n        There are two different kinds of errors to handle. The first kind of error is when the developer did something wrong when creating the authorization request. The other kind of error is when the user rejects the request (clicks the “Deny” button).\n        \u003cbr/\u003e\n        If there is something wrong with the syntax of the request, such as the redirect_uri or client_id is invalid, then it’s important not to redirect the user and instead you should show the error message directly. This is to avoid letting your authorization server be used as an open redirector.\n        \u003cbr/\u003e\n        If the redirect_uri and client_id are both valid, but there is still some other problem, it’s okay to redirect the user back to the redirect URI with the error in the query string.\n      content:\n        application/json:\n          schema:\n            required:\n              - error\n            properties:\n              error:\n                description: |\n                  Possible errors: \u003cbr/\u003e\n                  If the user denies the authorization request, the server will redirect the user back to the redirect URL with error=`access_denied` in the query string, and no code will be present. It is up to the app to decide what to display to the user at this point.\u003cbr/\u003e\n                  `invalid_request` — The request is missing a required parameter, includes an invalid parameter value, or is otherwise malformed.\u003cbr/\u003e\n                  `unsupported_response_type` — The authorization server does not support obtaining an authorization code using this method.\u003cbr/\u003e\n                  `invalid_scope` — The requested scope is invalid, unknown, or malformed.\u003cbr/\u003e\n                  `server_error` — The authorization server encountered an unexpected condition which prevented it from fulfilling the request.\u003cbr/\u003e\n                  `temporarily_unavailable` — The authorization server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\u003cbr/\u003e\n                  [OAuth2 Possible Errors](https://www.oauth.com/oauth2-servers/server-side-apps/possible-errors/)\n                type: string\n                enum:\n                  - access_denied\n                  - invalid_request\n                  - invalid_scope\n                  - server_error\n                  - temporarily_unavailable\n                  - unauthenticated_user\n                  - unauthorized_client\n                  - unsupported_response_type\n              redirectUri:\n                description: User should be redirected to if passed redirectUri and clientId is correct\n                type: string\n                format: url\n              state:\n                description:\n                  If the initial request contained a state parameter, the response must also include the exact value from the request.\n                  The client will be using this to associate this response with the initial request.\n                type: string\n\n  requestBodies:\n    OAuthAuthorize:\n      required: true\n      content:\n        application/json:\n          schema:\n            required:\n              - responseType\n              - clientId\n              - redirectUri\n            properties:\n              responseType:\n                description: responseType is set to code indicating that you want an authorization code as the response.\n                type: string\n                enum: [ code ]\n              clientId:\n                description: The clientId is the identifier for your app.\n                  You will have received a clientId when first registering your app with the service.\n                type: string\n                format: uuid\n                example: 41190cee-5231-4dcc-8167-ebf798b55ce3\n              redirectUri:\n                description: |\n                  The redirectUri may be optional depending on the API, but is highly recommended.\u003cbr/\u003e\n                  This is the URL to which you want the user to be redirected after the authorization is complete.\u003cbr/\u003e\n                  This must match the redirect URL that you have previously registered with the service.\u003cbr/\u003e\n                type: string\n                format: uri\n                example: https://example-app.com/oauth/callback\n              scope:\n                description: Include one or more scope values (space-separated) to request additional levels of access.\u003cbr/\u003e\n                type: string\n                example: \"user:view user:edit\"\n              state:\n                description: The state parameter serves two functions.\u003cbr/\u003e\n                  When the user is redirected back to your app, whatever value you include as the state will also be included in the redirect.\u003cbr/\u003e\n                  This gives your app a chance to persist data between the user being directed to the authorization server and back again,\n                  such as using the state parameter as a session key. This may be used to indicate what action in the app to perform after authorization is complete,\n                  for example, indicating which of your app’s pages to redirect to after authorization. This also serves as a CSRF protection mechanism.\u003cbr/\u003e\n                  When the user is redirected back to your app, double check that the state value matches what you set it to originally.\n                  This will ensure an attacker can’t intercept the authorization flow.\n                type: string\n",
			"canonicalURL": "/github.com/cardbox/backend@be6455ff1f24370ac7e957acb4dc9f7819e03d71/-/blob/api-admin/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/cardbox/backend/blob/be6455ff1f24370ac7e957acb4dc9f7819e03d71/api-admin/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}