{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/wafflestudio/snuboard-server"
		},
		"file": {
			"name": "user.v1.yaml",
			"size": 0,
			"path": "reference/user.v1.yaml",
			"byteSize": 10685,
			"content": "openapi: 3.0.0\ninfo:\n  title: user\n  version: '1.0'\nservers:\n  - url: 'http://localhost:3000'\npaths:\n  /user/me/:\n    parameters: []\n    get:\n      summary: Get User Info by User ID\n      tags: []\n      responses:\n        '200':\n          description: User Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n              examples:\n                Get user me:\n                  value:\n                    id: 1\n                    username: eldpswp99\n                    nickname: nickname\n                    keywords:\n                      - 장학\n                      - 인턴\n        '401':\n          description: |-\n            Unauthorized\n            access_token 신규 혹은 재발급 필요\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  message:\n                    type: string\n                    minLength: 1\n                required:\n                  - message\n              examples:\n                invalid token:\n                  value:\n                    message: Invalid token\n      operationId: get-user-me\n      description: Retrieve the information of the user him/herself.\n      parameters:\n        - schema:\n            type: string\n          in: header\n          name: Authorization\n          description: 'Bearer [access_token]'\n    patch:\n      summary: Update User Information\n      operationId: patch-user-userId\n      responses:\n        '200':\n          description: User Updated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n              examples:\n                update user me:\n                  value:\n                    id: 1\n                    username: eldpswp99\n                    nickname: Rebecca\n                    keywords:\n                      - 장학\n                      - 인턴\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  message:\n                    type: string\n                    minLength: 1\n                required:\n                  - message\n              examples:\n                Bad request:\n                  value:\n                    message: Invalid nickname\n        '401':\n          description: |-\n            Unauthorized\n            access_token 신규 혹은 재발급 필요\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  message:\n                    type: string\n                    minLength: 1\n                required:\n                  - message\n              examples:\n                Invalid token:\n                  value:\n                    message: Invalid token\n      description: Update the infromation of an existing user.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                nickname:\n                  type: string\n                password:\n                  type: string\n                keywords:\n                  type: array\n                  items:\n                    type: string\n            examples:\n              Update nickname:\n                value:\n                  nickname: Rebecca\n        description: Patch user properties to update.\n      parameters:\n        - schema:\n            type: string\n          in: header\n          name: Authorization\n          description: 'Bearer [token]'\n  /user/:\n    post:\n      summary: Create New User\n      operationId: post-user\n      responses:\n        '200':\n          description: |-\n            User Created,\n\n            expires_at은 ISO_8601 포맷(yyyy-mm-ddThh:mm:ss.sssZ)을 사용합니다.\n            access_token을 통해 authentication을 진행하며, 만료 후에는 /user/auth/를 통해 access_token을 새로 발급받아야합니다. access token을 새로 발급받을 때에 refresh_token 또한 새로 발급됩니다.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/tokenUser'\n              examples:\n                post user example:\n                  value:\n                    id: 1\n                    username: eldpswp99\n                    nickname: nickname\n                    access_token: access_token\n                    refresh_token: refresh_token\n                    expires_at: '2020-03-16T17:40:00+09:00'\n                    keywords: []\n            application/xml:\n              schema:\n                type: object\n                properties: {}\n            multipart/form-data:\n              schema:\n                type: object\n                properties: {}\n            text/html:\n              schema:\n                type: object\n                properties: {}\n            text/plain:\n              schema:\n                type: object\n                properties: {}\n            application/EDI-X12:\n              schema:\n                type: object\n                properties: {}\n            json:\n              schema:\n                type: object\n                properties: {}\n          headers: {}\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  message:\n                    type: string\n                    minLength: 1\n                required:\n                  - message\n              examples:\n                example-1:\n                  value:\n                    message: Invalid Username\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                username:\n                  type: string\n                password:\n                  type: string\n                nickname:\n                  type: string\n              required:\n                - username\n                - password\n                - nickname\n            examples:\n              post user example:\n                value:\n                  username: eldpswp99\n                  password: password\n                  nickname: nickname\n        description: Post the necessary fields for the API to create a new user.\n      description: Create a new user.\n    parameters: []\n  /user/auth/token/:\n    parameters: []\n    post:\n      summary: User Authentication\n      operationId: post-user-auth\n      responses:\n        '200':\n          description: |-\n            expires_at은 ISO_8601 포맷(yyyy-mm-ddThh:mm:ss.sssZ)을 사용합니다.\n\n            access_token을 통해 authentication을 진행하며, 만료 후에는 /user/auth/token/를 통해 access_token을 새로 발급받아야합니다. access token을 새로 발급받을 때에 refresh_token 또한 새로 발급됩니다.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/tokenUser'\n              examples:\n                example-1:\n                  value:\n                    id: 1\n                    username: eldpswp99\n                    nickname: nickname\n                    access_token: access_token\n                    refresh_token: refresh_token\n                    expires_at: '2020-03-16T17:40:00+09:00'\n                    keywords: []\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  message:\n                    type: string\n                    minLength: 1\n                required:\n                  - message\n              examples:\n                Invalid:\n                  value:\n                    message: Invalid refesh_token\n      description: user authentication\n      requestBody:\n        content:\n          application/json:\n            schema:\n              description: ''\n              type: object\n              properties:\n                grant_type:\n                  type: string\n                  minLength: 1\n                username:\n                  type: string\n                  minLength: 1\n                password:\n                  type: string\n                  minLength: 1\n                refresh_token:\n                  type: string\n              required:\n                - grant_type\n            examples:\n              password authentication:\n                value:\n                  grant_type: password\n                  username: eldpswp99\n                  password: password\n              refresh_token authentication:\n                value:\n                  grant_type: refresh_token\n                  refresh_token: '{example_token}'\ncomponents:\n  schemas:\n    User:\n      description: ''\n      type: object\n      x-examples:\n        example-1:\n          id: 1\n          username: eldpswp99\n          nickname: nickname\n          keywords:\n            - 장학\n            - 인턴\n      properties:\n        id:\n          type: number\n        username:\n          type: string\n          minLength: 1\n        nickname:\n          type: string\n          minLength: 1\n        keywords:\n          type: array\n          items:\n            type: string\n      required:\n        - id\n        - username\n        - nickname\n        - keywords\n    tokenUser:\n      description: ''\n      type: object\n      x-examples:\n        example-1:\n          id: 1\n          username: eldpswp99\n          nickname: nickname\n          access_token: access_token\n          refresh_token: refresh_token\n          expires_at: '2020-03-16T17:40:00+09:00'\n          keywords:\n            - 장학\n      properties:\n        id:\n          type: number\n        username:\n          type: string\n          minLength: 1\n        nickname:\n          type: string\n          minLength: 1\n        access_token:\n          type: string\n          minLength: 1\n        refresh_token:\n          type: string\n          minLength: 1\n        expires_at:\n          type: string\n          minLength: 1\n        keywords:\n          type: array\n          items:\n            type: string\n      required:\n        - id\n        - username\n        - nickname\n        - access_token\n        - refresh_token\n        - expires_at\n        - keywords\n",
			"canonicalURL": "/github.com/wafflestudio/snuboard-server@e7adf9f29888c135a7c2b1c9143bcb08f81365d1/-/blob/reference/user.v1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/wafflestudio/snuboard-server/blob/e7adf9f29888c135a7c2b1c9143bcb08f81365d1/reference/user.v1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}