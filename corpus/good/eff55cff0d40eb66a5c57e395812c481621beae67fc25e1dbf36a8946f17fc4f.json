{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "azure.com-apimanagement-apimloggers-2017-03-01-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/azure.com-apimanagement-apimloggers-2017-03-01-swagger.yaml",
			"byteSize": 19878,
			"content": "openapi: 3.0.0\ninfo:\n  description: Use these REST APIs for performing operations on logger entity Azure API\n    Management deployment.The Logger entity in API Management represents an\n    event sink that you can use to log API Management events. Currently the\n    Logger entity supports logging API Management events to Azure EventHub.\n  title: ApiManagementClient\n  version: 2017-03-01\n  x-apisguru-categories:\n    - cloud\n  x-logo:\n    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png\n  x-origin:\n    - format: swagger\n      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/apimanagement/control-plane/Microsoft.ApiManagement/preview/2017-03-01/apimloggers.json\n      version: \"2.0\"\n  x-preferred: false\n  x-providerName: azure.com\n  x-serviceName: apimanagement-apimloggers\n  x-tags:\n    - Azure\n    - Microsoft\nsecurity:\n  - apim_key: []\npaths:\n  /loggers:\n    get:\n      description: Lists a collection of loggers in the specified service instance.\n      externalDocs:\n        url: https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-log-event-hubs\n      operationId: Logger_List\n      parameters:\n        - description: \u003e-\n            | Field | Supported operators    | Supported\n            functions                         |\n\n            |-------|------------------------|---------------------------------------------|\n\n            | id    | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n\n            | type  | eq                     |                                             |\n          in: query\n          name: $filter\n          required: false\n          schema:\n            type: string\n        - description: Number of records to return.\n          in: query\n          name: $top\n          required: false\n          x-ms-parameter-location: method\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n        - description: Number of records to skip.\n          in: query\n          name: $skip\n          required: false\n          x-ms-parameter-location: method\n          schema:\n            type: integer\n            format: int32\n            minimum: 0\n        - description: Version of the API to be used with the client request.\n          in: query\n          name: api-version\n          required: true\n          schema:\n            type: string\n          examples:\n            ApiManagementListLoggers:\n              value: 2017-03-01\n      responses:\n        \"200\":\n          description: Lists a collection of Logger entities.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LoggerCollection\"\n              examples:\n                ApiManagementListLoggers:\n                  $ref: \"#/components/examples/ApiManagementListLoggers\"\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                description: Error Body contract.\n                properties:\n                  code:\n                    description: Service-defined error code. This code serves as a\n                      sub-status for the HTTP error code specified in the\n                      response.\n                    type: string\n                  details:\n                    description: The list of invalid fields send in request, in case of\n                      validation error.\n                    items:\n                      description: Error Field contract.\n                      properties:\n                        code:\n                          description: Property level error code.\n                          type: string\n                        message:\n                          description: Human-readable representation of property-level\n                            error.\n                          type: string\n                        target:\n                          description: Property name.\n                          type: string\n                    type: array\n                  message:\n                    description: Human-readable representation of the error.\n                    type: string\n      tags:\n        - Loggers\n      x-ms-odata: \"#/components/schemas/LoggerContract\"\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/loggers/{loggerid}\":\n    delete:\n      description: Deletes the specified logger.\n      operationId: Logger_Delete\n      parameters:\n        - $ref: \"#/components/parameters/LoggerIdParameter\"\n        - description: The entity state (Etag) version of the logger to delete. A value of\n            \"*\" can be used for If-Match to unconditionally apply the operation.\n          in: header\n          name: If-Match\n          required: true\n          schema:\n            type: string\n          examples:\n            ApiManagementDeleteLoggers:\n              value: '\"AAAAAAAAF30=\"'\n        - description: Version of the API to be used with the client request.\n          in: query\n          name: api-version\n          required: true\n          schema:\n            type: string\n          examples:\n            ApiManagementDeleteLoggers:\n              value: 2017-03-01\n      responses:\n        \"204\":\n          description: The logger was successfully deleted.\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                description: Error Body contract.\n                properties:\n                  code:\n                    description: Service-defined error code. This code serves as a\n                      sub-status for the HTTP error code specified in the\n                      response.\n                    type: string\n                  details:\n                    description: The list of invalid fields send in request, in case of\n                      validation error.\n                    items:\n                      description: Error Field contract.\n                      properties:\n                        code:\n                          description: Property level error code.\n                          type: string\n                        message:\n                          description: Human-readable representation of property-level\n                            error.\n                          type: string\n                        target:\n                          description: Property name.\n                          type: string\n                    type: array\n                  message:\n                    description: Human-readable representation of the error.\n                    type: string\n      tags:\n        - Loggers\n    get:\n      description: Gets the details of the logger specified by its identifier.\n      operationId: Logger_Get\n      parameters:\n        - $ref: \"#/components/parameters/LoggerIdParameter\"\n        - description: Version of the API to be used with the client request.\n          in: query\n          name: api-version\n          required: true\n          schema:\n            type: string\n          examples:\n            ApiManagementGetLoggers:\n              value: 2017-03-01\n      responses:\n        \"200\":\n          description: The response body contains the specified Logger entity.\n          headers:\n            ETag:\n              description: Current entity state version. Should be treated as opaque and\n                used to make conditional HTTP requests.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LoggerContract\"\n              examples:\n                ApiManagementGetLoggers:\n                  $ref: \"#/components/examples/ApiManagementGetLoggers\"\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                description: Error Body contract.\n                properties:\n                  code:\n                    description: Service-defined error code. This code serves as a\n                      sub-status for the HTTP error code specified in the\n                      response.\n                    type: string\n                  details:\n                    description: The list of invalid fields send in request, in case of\n                      validation error.\n                    items:\n                      description: Error Field contract.\n                      properties:\n                        code:\n                          description: Property level error code.\n                          type: string\n                        message:\n                          description: Human-readable representation of property-level\n                            error.\n                          type: string\n                        target:\n                          description: Property name.\n                          type: string\n                    type: array\n                  message:\n                    description: Human-readable representation of the error.\n                    type: string\n      tags:\n        - Loggers\n    patch:\n      description: Updates an existing logger.\n      operationId: Logger_Update\n      parameters:\n        - $ref: \"#/components/parameters/LoggerIdParameter\"\n        - description: The entity state (Etag) version of the logger to update. A value of\n            \"*\" can be used for If-Match to unconditionally apply the operation.\n          in: header\n          name: If-Match\n          required: true\n          schema:\n            type: string\n          examples:\n            ApiManagementPatchLoggers:\n              value: '\"AAAAAAAAHDE=\"'\n        - description: Version of the API to be used with the client request.\n          in: query\n          name: api-version\n          required: true\n          schema:\n            type: string\n          examples:\n            ApiManagementPatchLoggers:\n              value: 2017-03-01\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/LoggerUpdateContract\"\n        description: Update parameters.\n        required: true\n      responses:\n        \"204\":\n          description: The existing logger was successfully updated.\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                description: Error Body contract.\n                properties:\n                  code:\n                    description: Service-defined error code. This code serves as a\n                      sub-status for the HTTP error code specified in the\n                      response.\n                    type: string\n                  details:\n                    description: The list of invalid fields send in request, in case of\n                      validation error.\n                    items:\n                      description: Error Field contract.\n                      properties:\n                        code:\n                          description: Property level error code.\n                          type: string\n                        message:\n                          description: Human-readable representation of property-level\n                            error.\n                          type: string\n                        target:\n                          description: Property name.\n                          type: string\n                    type: array\n                  message:\n                    description: Human-readable representation of the error.\n                    type: string\n      tags:\n        - Loggers\n    put:\n      description: Creates or Updates a logger.\n      operationId: Logger_CreateOrUpdate\n      parameters:\n        - $ref: \"#/components/parameters/LoggerIdParameter\"\n        - description: Version of the API to be used with the client request.\n          in: query\n          name: api-version\n          required: true\n          schema:\n            type: string\n          examples:\n            ApiManagementPutLoggers:\n              value: 2017-03-01\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/LoggerContract\"\n        description: Create parameters.\n        required: true\n      responses:\n        \"200\":\n          description: The existing logger was successfully updated.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LoggerContract\"\n              examples:\n                ApiManagementPutLoggers:\n                  $ref: \"#/components/examples/ApiManagementPutLoggers\"\n        \"201\":\n          description: Logger was successfully created.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LoggerContract\"\n              examples:\n                ApiManagementPutLoggers:\n                  $ref: \"#/components/examples/ApiManagementPutLoggers\"\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                description: Error Body contract.\n                properties:\n                  code:\n                    description: Service-defined error code. This code serves as a\n                      sub-status for the HTTP error code specified in the\n                      response.\n                    type: string\n                  details:\n                    description: The list of invalid fields send in request, in case of\n                      validation error.\n                    items:\n                      description: Error Field contract.\n                      properties:\n                        code:\n                          description: Property level error code.\n                          type: string\n                        message:\n                          description: Human-readable representation of property-level\n                            error.\n                          type: string\n                        target:\n                          description: Property name.\n                          type: string\n                    type: array\n                  message:\n                    description: Human-readable representation of the error.\n                    type: string\n      tags:\n        - Loggers\nservers:\n  - url: https://azure.local\n  - url: \"{apimBaseUrl}\"\n    variables:\n      apimBaseUrl:\n        description: The management endpoint of the API Management service, for example\n          https://myapimservice.management.azure-api.net.\n        x-ms-skip-url-encoding: true\n        default: \"\"\ncomponents:\n  examples:\n    ApiManagementListLoggers:\n      value:\n        count: 2\n        value:\n          - credentials:\n              connectionString: \"{{Logger-Credentials-5a58bc31a40f7e10489292a5}}\"\n              name: testeventhub3\n            description: first eventhub logger\n            id: /loggers/5a58bc28a40f7e10489292a3\n            isBuffered: true\n            loggerType: azureEventHub\n          - credentials:\n              connectionString: \"{{Logger-Credentials-5a58bc39a40f7e104892931b}}\"\n              name: testeventhub3\n            description: first eventhub logger\n            id: /loggers/5a58bc37a40f7e1048929319\n            isBuffered: true\n            loggerType: azureEventHub\n    ApiManagementGetLoggers:\n      value:\n        credentials:\n          connectionString: \"{{Logger-Credentials-5a58bc39a40f7e104892931b}}\"\n          name: testeventhub3\n        description: first eventhub logger\n        id: /loggers/5a58bc37a40f7e1048929319\n        isBuffered: true\n        loggerType: azureEventHub\n    ApiManagementPutLoggers:\n      value:\n        credentials:\n          connectionString: \"{{Logger-Credentials-5a58bc31a40f7e10489292a5}}\"\n          name: testeventhub3\n        description: first eventhub logger\n        id: /loggers/5a58bc28a40f7e10489292a3\n        isBuffered: true\n        loggerType: azureEventHub\n  parameters:\n    LoggerIdParameter:\n      description: Logger identifier. Must be unique in the API Management service instance.\n      in: path\n      name: loggerid\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n        maxLength: 256\n        pattern: ^[^*#\u0026+:\u003c\u003e?]+$\n      examples:\n        ApiManagementDeleteLoggers:\n          value: 5a58bc70a40f7e1048929950\n        ApiManagementGetLoggers:\n          value: 5a58bc37a40f7e1048929319\n        ApiManagementPatchLoggers:\n          value: 5a58bd45a40f7e104892a3aa\n        ApiManagementPutLoggers:\n          value: 5a58bc28a40f7e10489292a3\n  securitySchemes:\n    apim_key:\n      in: header\n      name: Authorization\n      type: apiKey\n  schemas:\n    LoggerCollection:\n      description: Paged Logger list representation.\n      properties:\n        count:\n          description: Total record count number across all pages.\n          format: int64\n          type: integer\n        nextLink:\n          description: Next page link if any.\n          type: string\n        value:\n          description: Logger values.\n          items:\n            $ref: \"#/components/schemas/LoggerContract\"\n          type: array\n    LoggerContract:\n      allOf:\n        - $ref: \"#/components/schemas/LoggerContractProperties\"\n      description: Logger details.\n      properties:\n        id:\n          description: Identifier of the Logger Entity.\n          type: string\n    LoggerContractProperties:\n      description: The Logger entity in API Management represents an event sink that you\n        can use to log API Management events. Currently the Logger entity\n        supports logging API Management events to Azure Event Hubs.\n      properties:\n        credentials:\n          additionalProperties:\n            type: string\n          description: The name and SendRule connection string of the event hub.\n          example:\n            connectionString: Endpoint=sb://contoso-ns.servicebus.windows.net/;SharedAccessKeyName=Sender;SharedAccessKey=...\n            name: apim\n          type: object\n        description:\n          description: Logger description.\n          maxLength: 256\n          type: string\n        isBuffered:\n          description: Whether records are buffered in the logger before publishing.\n            Default is assumed to be true.\n          type: boolean\n        loggerType:\n          description: Logger type.\n          enum:\n            - azureEventHub\n          type: string\n          x-ms-enum:\n            modelAsString: true\n            name: LoggerType\n            values:\n              - description: Azure Event Hub as log destination.\n                value: azureEventHub\n      required:\n        - loggerType\n        - credentials\n    LoggerUpdateContract:\n      description: Parameters supplied to the Update Logger operation.\n      properties:\n        credentials:\n          additionalProperties:\n            type: string\n          description: Logger credentials.\n          type: object\n        description:\n          description: Logger description.\n          type: string\n        isBuffered:\n          description: Whether records are buffered in the logger before publishing.\n            Default is assumed to be true.\n          type: boolean\n        loggerType:\n          description: Logger type.\n          enum:\n            - azureEventHub\n          type: string\n          x-ms-enum:\n            modelAsString: true\n            name: LoggerType\n            values:\n              - description: Azure Event Hub as log destination.\n                value: azureEventHub\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/azure.com-apimanagement-apimloggers-2017-03-01-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/azure.com-apimanagement-apimloggers-2017-03-01-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}