{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/devtron-labs/devtron"
		},
		"file": {
			"name": "delete-options.yaml",
			"size": 0,
			"path": "specs/delete-options.yaml",
			"byteSize": 17703,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  title: Delete Option support for various components\npaths:\n  /orchestrator/cluster/delete:\n    post:\n      description: Delete Cluster\n      operationId: DeleteFromDb\n      requestBody:\n        description: A JSON object containing the cluster config\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ClusterBean'\n      responses:\n        '200':\n          description: Successfully delete the cluster\n          content:\n            application/json:\n              schema:\n                type: string\n                example: \"Cluster deleted successfully.\"\n        '400':\n          description: Bad Request. Input Validation(decode) error/wrong request body.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized User\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /orchestrator/env/delete:\n    post:\n      description: Delete Environment\n      operationId: Delete\n      requestBody:\n        description: A JSON object containing the env config\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EnvironmentBean'\n      responses:\n        '200':\n          description: Successfully delete the environment\n          content:\n            application/json:\n              schema:\n                type: string\n                example: \"Environment deleted successfully.\"\n        '400':\n          description: Bad Request. Input Validation(decode) error/wrong request body.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized User\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /orchestrator/team/delete:\n    post:\n      description: Delete Project\n      operationId: DeleteTeam\n      requestBody:\n        description: A JSON object containing the project config\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TeamRequest'\n      responses:\n        '200':\n          description: Successfully delete the project\n          content:\n            application/json:\n              schema:\n                type: string\n                example: \"Project deleted successfully.\"\n        '400':\n          description: Bad Request. Input Validation(decode) error/wrong request body.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized User\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /orchestrator/git/provider/delete:\n    post:\n      description: Delete Git Provider\n      operationId: DeleteGitRepoConfig\n      requestBody:\n        description: A JSON object containing the provider config\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GitRegistry'\n      responses:\n        '200':\n          description: Successfully delete the git provider\n          content:\n            application/json:\n              schema:\n                type: string\n                example: \"Git Account deleted successfully.\"\n        '400':\n          description: Bad Request. Input Validation(decode) error/wrong request body.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized User\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /orchestrator/docker/registry/delete:\n    post:\n      description: Delete Docker Registry\n      operationId: DeleteDockerRegistryConfig\n      requestBody:\n        description: A JSON object containing the registry config\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DockerArtifactStoreBean'\n      responses:\n        '200':\n          description: Successfully delete the registry\n          content:\n            application/json:\n              schema:\n                type: string\n                example: \"Container Registry deleted successfully.\"\n        '400':\n          description: Bad Request. Input Validation(decode) error/wrong request body.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized User\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /orchestrator/app-store/repo/delete:\n    post:\n      description: Delete Chart Repo\n      operationId: DeleteChartRepo\n      requestBody:\n        description: A JSON object containing the registry config\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ChartRepoDto'\n      responses:\n        '200':\n          description: Successfully delete the chart repo\n          content:\n            application/json:\n              schema:\n                type: string\n                example: \"Chart repo deleted successfully.\"\n        '400':\n          description: Bad Request. Input Validation(decode) error/wrong request body.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized User\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /orchestrator/app/material/delete:\n    post:\n      description: Delete Git Material\n      operationId: DeleteMaterial\n      requestBody:\n        description: A JSON object containing the material config\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateMaterialDTO'\n      responses:\n        '200':\n          description: Successfully delete the git material\n          content:\n            application/json:\n              schema:\n                type: string\n                example: \"Git material deleted successfully.\"\n        '400':\n          description: Bad Request. Input Validation(decode) error/wrong request body.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized User\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /orchestrator/chart-group/delete:\n    post:\n      description: Delete Chart Group\n      operationId: DeleteChartgroup\n      requestBody:\n        description: A JSON object containing the chart group\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ChartGroupBean'\n      responses:\n        '200':\n          description: Successfully delete the chart group\n          content:\n            application/json:\n              schema:\n                type: string\n                example: \"Chart group deleted successfully.\"\n        '400':\n          description: Bad Request. Input Validation(decode) error/wrong request body.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized User\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /orchestrator/notification/channel/delete:\n    post:\n      description: Delete Notification Channel\n      operationId: DeleteNotificationChannelConfig\n      requestBody:\n        description: A JSON object containing the channel config\n        required: true\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: '#/components/schemas/ChannelDto'\n                - $ref: '#/components/schemas/SlackConfigDto'\n                - $ref: '#/components/schemas/SESConfigDto'\n      responses:\n        '200':\n          description: Successfully delete the channel\n          content:\n            application/json:\n              schema:\n                type: string\n                example: \"Slack config deleted successfully.\"\n        '400':\n          description: Bad Request. Input Validation(decode) error/wrong request body.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized User\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\ncomponents:\n  schemas:\n    ClusterBean:\n      type: object\n      properties:\n        id:\n          type: integer\n        cluster_name:\n          type: string\n        server_url:\n          type: string\n        prometheus_url:\n          type: string\n        active:\n          type: boolean\n        config:\n          type: object\n          properties:\n            stage:\n              type: string\n            error:\n              type: string\n        k8sversion:\n          type: string\n        prometheusAuth:\n          $ref: '#/components/schemas/PrometheusAuth'\n        defaultClusterComponent:\n          type: array\n          items:\n            $ref: '#/components/schemas/DefaultClusterComponent'\n    EnvironmentBean:\n      type: object\n      properties:\n        id:\n          type: integer\n        cluster_name:\n          type: string\n        cluster_id:\n          type: integer\n        environment_name:\n          type: string\n        active:\n          type: boolean\n        default:\n          type: boolean\n        prometheus_endpoint:\n          $ref: '#/components/schemas/PrometheusAuth'\n        namespace:\n          type: string\n        isClusterCdActive:\n          type: boolean\n    TeamRequest:\n      type: object\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        active:\n          type: boolean\n    GitRegistry:\n      type: object\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        url:\n          type: string\n        userName:\n          type: string\n        password:\n          type: string\n        sshPrivateKey:\n          type: string\n        accessToken:\n          type: string\n        authMode:\n          type: string\n        active:\n          type: boolean\n        gitHostId:\n          type: integer\n    DockerArtifactStoreBean:\n      type: object\n      properties:\n        id:\n          type: integer\n        pluginId:\n          type: string\n        registryUrl:\n          type: string\n        registryType:\n          type: string\n        awsAccessKeyId:\n          type: string\n        awsSecretAccessKey:\n          type: string\n        awsRegion:\n          type: string\n        username:\n          type: string\n        password:\n          type: string\n        isDefault:\n          type: boolean\n        active:\n          type: boolean\n        connection:\n          type: string\n        cert:\n          type: string\n    ChartRepoDto:\n      type: object\n      properties:\n        id:\n          type: integer\n        url:\n          type: string\n        name:\n          type: string\n        accessToken:\n          type: string\n        sshKey:\n          type: string\n        userName:\n          type: string\n        password:\n          type: string\n        default:\n          type: boolean\n        active:\n          type: boolean\n        authMode:\n          type: string\n    UpdateMaterialDTO:\n      type: object\n      properties:\n        appId:\n          type: integer\n        material:\n          $ref: '#/components/schemas/GitMaterial'\n    ChartGroupBean:\n      type: object\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n        id:\n          type: integer\n        chartGroupEntries:\n          type: array\n          items:\n            $ref: '#/components/schemas/ChartGroupEntryBean'\n        installedChartData:\n          type: array\n          items:\n            $ref: '#/components/schemas/InstalledChartData'\n    ChartGroupEntryBean:\n      type: object\n      properties:\n        id:\n          type: integer\n        appStoreValuesVersionId:\n          type: integer\n        appStoreApplicationVersionId:\n          type: integer\n        appStoreValuesVersionName:\n          type: string\n        appStoreValuesChartVersion:\n          type: string\n        referenceType:\n          type: string\n        chartMetaData:\n          $ref: '#/components/schemas/ChartMetaData'\n    ChartMetaData:\n      type: object\n      properties:\n        appStoreId:\n          type: integer\n        environmentId:\n          type: integer\n        isChartRepoActive:\n          type: boolean\n        chartName:\n          type: string\n        chartRepoName:\n          type: string\n        icon:\n          type: string\n        environmentName:\n          type: string\n        appStoreApplicationVersion:\n          type: string\n    InstalledChartData:\n      type: object\n      properties:\n        installationTime:\n          type: string\n          description: time type\n        installedCharts:\n          $ref: '#/components/schemas/InstalledChart'\n    InstalledChart:\n      type: string\n      properties:\n        installedAppId:\n          type: integer\n    ChannelDto:\n      type: object\n      properties:\n        channel:\n          type: string\n          description: type of channel, i.e. slack or SES\n    SlackConfigDto:\n      type: object\n      properties:\n        id:\n          type: integer\n        userId:\n          type: integer\n        teamId:\n          type: integer\n        webhookUrl:\n          type: string\n        configName:\n          type: string\n        description:\n          type: string\n    SESConfigDto:\n      type: object\n      properties:\n        id:\n          type: integer\n        userId:\n          type: integer\n        teamId:\n          type: integer\n        region:\n          type: string\n        accessKey:\n          type: string\n        secretKey:\n          type: string\n        fromEmail:\n          type: string\n        toEmail:\n          type: string\n        sessionToken:\n          type: string\n        configName:\n          type: string\n        description:\n          type: string\n        default:\n          type: boolean\n    PrometheusAuth:\n      type: object\n      properties:\n        userName:\n          type: string\n        password:\n          type: string\n        tlsClientCert:\n          type: string\n        tlsClientKey:\n          type: string\n    DefaultClusterComponent:\n        type: object\n        properties:\n          name:\n            type: string\n          appId:\n            type: integer\n          installedAppId:\n            type: integer\n          envId:\n            type: integer\n          envname:\n            type: string\n          status:\n            type: string\n    GitMaterial:\n      type: object\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        url:\n          type: string\n        gitProviderId:\n          type: integer\n        checkoutPath:\n          type: string\n        fetchSubmodules:\n          type: boolean\n    Error:\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          description: Error code\n        message:\n          type: string\n          description: Error message",
			"canonicalURL": "/github.com/devtron-labs/devtron@62f6101b37819e1ac319a744bbf3438184f0c8d5/-/blob/specs/delete-options.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/devtron-labs/devtron/blob/62f6101b37819e1ac319a744bbf3438184f0c8d5/specs/delete-options.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}