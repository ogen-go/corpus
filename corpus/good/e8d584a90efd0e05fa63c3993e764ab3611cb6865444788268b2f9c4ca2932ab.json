{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/making/spring-socks"
		},
		"file": {
			"name": "doc.yml",
			"size": 0,
			"path": "cart-spec/openapi/doc.yml",
			"byteSize": 4971,
			"content": "servers:\n  - description: Local\n    url: 'http://localhost:5005'\n  - url: 'https://sock-cart.apps.pcfone.io'\n    description: PCF One\n  - url: 'https://sock-cart.apps.cf.maki.lol'\n    description: CF for K8s\ncomponents:\n  schemas:\n    CartResponse:\n      title: CartResponse\n      type: object\n      properties:\n        customerId:\n          type: string\n        items:\n          type: array\n          items:\n            $ref: '#/components/schemas/CartItemResponse'\n      x-tags:\n        - Cart\n    CartItemResponse:\n      title: CartItemResponse\n      type: object\n      properties:\n        itemId:\n          type: string\n        quantity:\n          type: integer\n          format: int32\n        unitPrice:\n          type: number\n      x-tags:\n        - Cart\n    CartItemRequest:\n      title: CartItemRequest\n      type: object\n      properties:\n        itemId:\n          type: string\n        quantity:\n          type: integer\n          format: int32\n        unitPrice:\n          type: number\n      x-tags:\n        - Cart\ninfo:\n  contact: {}\n  description: Cart API\n  license:\n    name: Apache 2.0\n  title: 'Spring Sock Shop: Cart API'\n  version: 0.1.0-SNAPSHOT\nopenapi: 3.0.1\npaths:\n  '/carts/{customerId}':\n    parameters:\n      - schema:\n          type: string\n        name: customerId\n        in: path\n        required: true\n    get:\n      summary: Get a cart\n      tags:\n        - Cart\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CartResponse'\n      operationId: get-cart-by-customerId\n      description: Get a cart for the requested customer id\n    delete:\n      summary: Delete a cart\n      operationId: delete-cart-by-customerId\n      responses:\n        '202':\n          description: Accepted\n      description: Delete a cart for the requested customer id\n      tags:\n        - Cart\n  '/carts/{customerId}/items':\n    parameters:\n      - schema:\n          type: string\n        name: customerId\n        in: path\n        required: true\n    get:\n      summary: Get cart items\n      tags:\n        - Cart\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CartItemResponse'\n      operationId: get-items-by-customerId\n      description: Get cart items for the requested customer id\n    post:\n      summary: Add a cart item\n      operationId: post-items-by-customerId\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CartItemResponse'\n        '400':\n          description: Bad Request\n      description: Add a cart item for the requested customer id\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CartItemRequest'\n      tags:\n        - Cart\n    patch:\n      summary: Update a cart item\n      operationId: patch-items-by-customerId\n      responses:\n        '202':\n          description: Accepted\n        '400':\n          description: Bad Request\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CartItemRequest'\n      description: Update a cart item for the requested customer id\n      tags:\n        - Cart\n  '/carts/{customerId}/items/{itemId}':\n    parameters:\n      - schema:\n          type: string\n        name: customerId\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: itemId\n        in: path\n        required: true\n    get:\n      summary: Get a cart item\n      tags:\n        - Cart\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CartItemResponse'\n      operationId: get-cartItem-by-cartId-and-ItemId\n      description: Get a cart item for the requested customer id and item id\n    delete:\n      summary: Delete a cart item\n      operationId: delete-cartItem-by-cartId-and-ItemId\n      responses:\n        '202':\n          description: Accepted\n      description: Delete a cart item for the requested customer id and item id\n      tags:\n        - Cart\n  '/carts/{customerId}/merge':\n    parameters:\n      - schema:\n          type: string\n        name: customerId\n        in: path\n        required: true\n    get:\n      summary: Merge carts\n      tags:\n        - Cart\n      responses:\n        '202':\n          description: Accepted\n      operationId: merge-carts-by-customerId\n      parameters:\n        - schema:\n            type: string\n          in: query\n          name: sessionId\n          required: true\n      description: Merge carts on the database and on the session for the requested customer id.\n",
			"canonicalURL": "/github.com/making/spring-socks@20ea1d0fa5e6e3bc34a399d8693600ebe7f50607/-/blob/cart-spec/openapi/doc.yml",
			"externalURLs": [
				{
					"url": "https://github.com/making/spring-socks/blob/20ea1d0fa5e6e3bc34a399d8693600ebe7f50607/cart-spec/openapi/doc.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}