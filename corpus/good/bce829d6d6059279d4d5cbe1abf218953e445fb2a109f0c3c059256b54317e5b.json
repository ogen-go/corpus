{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/intercept6/bottom-up-ddd-ts-sample"
		},
		"file": {
			"name": "apiSpecification.yaml",
			"size": 0,
			"path": "apiSpecification.yaml",
			"byteSize": 8711,
			"content": "openapi: 3.0.1\ninfo:\n  title: Bottom up ddd\n  description: ボトムアップDDDのサンプル実装\n  version: 1.0.0\nservers:\n  - url: 'https://api.example.com'\npaths:\n  /users:\n    get:\n      summary: すべてのユーザーを一覧表示する\n      operationId: listUser\n      tags:\n        - users\n      parameters:\n        - name: limit\n          in: query\n          description: 一度にレスポンスするアイテムの数（最大100）\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: next-token\n          in: query\n          description: 途中からレスポンスを再開するためのトークン\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ページングされたユーザーの配列\n          headers:\n            x-next:\n              description: レスポンスの次のページを取得する為のリンク\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Users'\n        default:\n          description: 予期しないエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      summary: ユーザーを登録する\n      operationId: registerUser\n      tags:\n        - users\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                user_name:\n                  type: string\n                mail_address:\n                  type: string\n      responses:\n        '201':\n          description: レスポンス無し\n          headers:\n            location:\n              description: 作成されたユーザーの為のリンク\n              schema:\n                type: string\n        default:\n          description: 予期しないエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /users/{userId}:\n    get:\n      summary: 特定のユーザーの情報を取得する\n      operationId: getUserbyId\n      tags:\n        - users\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          description: 取得するユーザーのID\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 適切なリクエスト時の応答\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        default:\n          description: 予期しないエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      summary: 特定のユーザーの情報を更新する\n      operationId: updateUserById\n      tags:\n        - users\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          description: 更新するユーザーのID\n          schema:\n            type: string\n      responses:\n        '204':\n          description: レスポンス無し\n        default:\n          description: 予期しないエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    delete:\n      summary: 特定のユーザーを削除する\n      operationId: deleteUserById\n      tags:\n        - users\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          description: 削除するユーザーのID\n          schema:\n            type: string\n      responses:\n        '204':\n          description: レスポンス無し\n        default:\n          description: 予期しないエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n\n  /circles:\n    get:\n      summary: すべてのサークルを一覧表示する\n      operationId: listCircles\n      tags:\n        - circles\n      parameters:\n        - name: limit\n          in: query\n          description: 一度にレスポンスするアイテムの数（最大100）\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: ページングされたサークルの配列\n          headers:\n            x-next:\n              description: レスポンスの次のページを取得する為のリンク\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Circles'\n        default:\n          description: 予期しないエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      summary: サークルを登録する\n      operationId: registerCircle\n      tags:\n        - circles\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                circle_name:\n                  type: string\n                mail_address:\n                  type: string\n      responses:\n        '201':\n          description: レスポンス無し\n          headers:\n            location:\n              description: 作成されたサークルの為のリンク\n              schema:\n                type: string\n        default:\n          description: 予期しないエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /circles/{circleId}:\n    get:\n      summary: 特定のサークルの情報を取得する\n      operationId: getCirclebyId\n      tags:\n        - circles\n      parameters:\n        - name: circleId\n          in: path\n          required: true\n          description: 取得するサークルのID\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 適切なリクエスト時の応答\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Circle'\n        default:\n          description: 予期しないエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      summary: 特定のサークルの情報を更新する\n      operationId: updateCircleById\n      tags:\n        - circles\n      parameters:\n        - name: circleId\n          in: path\n          required: true\n          description: 更新するサークルのID\n          schema:\n            type: string\n      responses:\n        '204':\n          description: レスポンス無し\n        default:\n          description: 予期しないエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    delete:\n      summary: 特定のサークルを削除する\n      operationId: deleteCircleById\n      tags:\n        - circles\n      parameters:\n        - name: circleId\n          in: path\n          required: true\n          description: 削除するサークルのID\n          schema:\n            type: string\n      responses:\n        '204':\n          description: レスポンス無し\n        default:\n          description: 予期しないエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\ncomponents:\n  schemas:\n    User:\n      type: object\n      required:\n        - user_id\n        - user_name\n        - mail_address\n      properties:\n        user_id:\n          type: string\n        user_name:\n          type: string\n        mail_address:\n          type: string\n    Users:\n      type: array\n      items:\n        $ref: '#/components/schemas/User'\n    Circle:\n      type: object\n      required:\n        - circle_id\n        - circle_name\n        - ownwer_id\n        - member_ids\n      properties:\n        circle_id:\n          type: string\n        circle_name:\n          type: string\n        owner_id:\n          type: string\n        member_ids:\n          type: array\n          items:\n            type: string\n    Circles:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Circle\"\n    Error:\n      type: object\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string\n",
			"canonicalURL": "/github.com/intercept6/bottom-up-ddd-ts-sample@66085d247b7438f1c600fea22a49cb663fb2bf06/-/blob/apiSpecification.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/intercept6/bottom-up-ddd-ts-sample/blob/66085d247b7438f1c600fea22a49cb663fb2bf06/apiSpecification.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}