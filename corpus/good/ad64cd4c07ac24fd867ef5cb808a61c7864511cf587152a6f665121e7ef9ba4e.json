{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/pingcap/tiflow"
		},
		"file": {
			"name": "dm.yaml",
			"size": 0,
			"path": "dm/openapi/spec/dm.yaml",
			"byteSize": 64004,
			"content": "openapi: \"3.0.0\"\ninfo:\n  title: DM OpenAPI DOC\n  version: \"6.0.0\"\nexternalDocs:\n  description: \"DM OpenAPI DOC\"\n  url: \"https://docs.pingcap.com/zh/tidb-data-migration/stable\"\nservers:\n  - url: \"https://you.domain.com/\"\ntags:\n  - name: source\n    description: source\n    externalDocs:\n      description: doc\n      url: \"https://docs.pingcap.com/zh/tidb/stable/quick-start-create-source\"\n  - name: task\n    description: task\n    externalDocs:\n      description: doc\n      url: \"https://docs.pingcap.com/zh/tidb/stable/quick-start-with-dm\"\n  - name: cluster\n    description: cluster\n\npaths:\n  /api/v1/docs:\n    get:\n      tags:\n        - doc\n      summary: \"get doc html\"\n      operationId: \"GetDocHTML\"\n      responses:\n        \"200\":\n          description: HTML content\n  /api/v1/dm.json:\n    get:\n      tags:\n        - doc\n      summary: \"get doc json\"\n      operationId: \"GetDocJSON\"\n      responses:\n        \"200\":\n          description: json content\n\n  /api/v1/sources:\n    post:\n      tags:\n        - source\n      summary: \"create and enable a new data source\"\n      operationId: \"DMAPICreateSource\"\n      requestBody:\n        description: \"request body\"\n        content:\n          \"application/json\":\n            schema:\n              $ref: \"#/components/schemas/CreateSourceRequest\"\n      responses:\n        \"201\":\n          description: \"success\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Source\"\n        \"400\":\n          description: \"failed\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/ErrorWithMessage\"\n    get:\n      tags:\n        - source\n      summary: \"get data source list\"\n      operationId: \"DMAPIGetSourceList\"\n      parameters:\n        - name: \"with_status\"\n          in: query\n          required: false\n          description: \"list source with status\"\n          schema:\n            type: boolean\n            example: true\n        - name: \"enable_relay\"\n          in: query\n          required: false\n          description: \"only return the enable-relay source\"\n          schema:\n            type: boolean\n            example: true\n      responses:\n        \"200\":\n          description: \"data source list\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/GetSourceListResponse\"\n  /api/v1/sources/{source-name}:\n    get:\n      tags:\n        - source\n      summary: \"get source\"\n      operationId: \"DMAPIGetSource\"\n      parameters:\n        - name: \"source-name\"\n          in: path\n          description: \"globally unique data source name\"\n          required: true\n          schema:\n            type: string\n            example: \"mysql-01\"\n        - name: \"with_status\"\n          in: query\n          required: false\n          description: \"list source with status\"\n          schema:\n            type: boolean\n            example: true\n      responses:\n        \"200\":\n          description: \"source\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Source\"\n        \"404\":\n          description: \"source not found\"\n    delete:\n      tags:\n        - source\n      summary: \"delete a data source\"\n      operationId: \"DMAPIDeleteSource\"\n      parameters:\n        - name: \"source-name\"\n          in: path\n          description: \"globally unique data source name\"\n          required: true\n          schema:\n            type: string\n            example: \"mysql-01\"\n        - name: \"force\"\n          in: query\n          required: false\n          description: \"force stop source also stop the related tasks\"\n          schema:\n            type: boolean\n            example: true\n      responses:\n        \"204\":\n          description: \"success\"\n        \"400\":\n          description: \"failed\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/ErrorWithMessage\"\n    put:\n      tags:\n        - source\n      summary: \"update a data source\"\n      operationId: \"DMAPIUpdateSource\"\n      parameters:\n        - name: \"source-name\"\n          in: path\n          description: \"globally unique data source name\"\n          required: true\n          schema:\n            type: string\n            example: \"mysql-01\"\n      requestBody:\n        required: true\n        content:\n          \"application/json\":\n            schema:\n              $ref: \"#/components/schemas/UpdateSourceRequest\"\n      responses:\n        \"200\":\n          description: \"success\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Source\"\n        \"400\":\n          description: \"failed\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/ErrorWithMessage\"\n  /api/v1/sources/{source-name}/status:\n    get:\n      tags:\n        - source\n      summary: \"get the current status of the data source\"\n      operationId: \"DMAPIGetSourceStatus\"\n      parameters:\n        - name: source-name\n          in: path\n          description: \"globally unique data source name\"\n          required: true\n          schema:\n            type: string\n            example: \"mysql-replica-01\"\n      responses:\n        \"200\":\n          description: \"success\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/GetSourceStatusResponse\"\n        \"400\":\n          description: \"failed\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/ErrorWithMessage\"\n  /api/v1/sources/{source-name}/enable:\n    post:\n      tags:\n        - source\n      summary: \"enable a data source\"\n      operationId: \"DMAPIEnableSource\"\n      parameters:\n        - name: \"source-name\"\n          in: path\n          description: \"globally unique data source name\"\n          required: true\n          schema:\n            type: string\n            example: \"mysql-01\"\n      responses:\n        \"200\":\n          description: \"success\"\n        \"400\":\n          description: \"failed\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/ErrorWithMessage\"\n  /api/v1/sources/{source-name}/disable:\n    post:\n      tags:\n        - source\n      summary: \"disable a data source\"\n      operationId: \"DMAPIDisableSource\"\n      parameters:\n        - name: \"source-name\"\n          in: path\n          description: \"globally unique data source name\"\n          required: true\n          schema:\n            type: string\n            example: \"mysql-01\"\n      responses:\n        \"200\":\n          description: \"success\"\n        \"400\":\n          description: \"failed\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/ErrorWithMessage\"\n  /api/v1/sources/{source-name}/transfer:\n    post:\n      tags:\n        - source\n      summary: \"transfer source to a free worker\"\n      operationId: \"DMAPITransferSource\"\n      parameters:\n        - name: \"source-name\"\n          in: path\n          description: \"globally unique data source name\"\n          required: true\n          schema:\n            type: string\n            example: \"mysql-01\"\n      requestBody:\n        required: true\n        content:\n          \"application/json\":\n            schema:\n              $ref: \"#/components/schemas/WorkerNameRequest\"\n      responses:\n        \"200\":\n          description: \"success\"\n        \"400\":\n          description: \"failed\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/ErrorWithMessage\"\n  /api/v1/sources/{source-name}/relay/enable:\n    post:\n      tags:\n        - source\n      summary: \"enable relay log function for the data source\"\n      parameters:\n        - name: \"source-name\"\n          in: path\n          description: \"globally unique data source name\"\n          required: true\n          schema:\n            type: string\n            example: \"mysql-01\"\n      operationId: \"DMAPIEnableRelay\"\n      requestBody:\n        required: false\n        content:\n          \"application/json\":\n            schema:\n              $ref: \"#/components/schemas/EnableRelayRequest\"\n      responses:\n        \"200\":\n          description: \"success\"\n        \"400\":\n          description: \"failed\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/ErrorWithMessage\"\n  /api/v1/sources/{source-name}/relay/disable:\n    post:\n      tags:\n        - source\n      summary: \"disable relay log function for the data source\"\n      operationId: \"DMAPIDisableRelay\"\n      parameters:\n        - name: \"source-name\"\n          in: path\n          description: \"globally unique data source name\"\n          required: true\n          schema:\n            type: string\n            example: \"mysql-01\"\n      requestBody:\n        required: false\n        content:\n          \"application/json\":\n            schema:\n              $ref: \"#/components/schemas/DisableRelayRequest\"\n      responses:\n        \"200\":\n          description: \"success\"\n        \"400\":\n          description: \"failed\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/ErrorWithMessage\"\n  /api/v1/sources/{source-name}/relay/purge:\n    post:\n      tags:\n        - source\n      summary: \"purge relay log\"\n      operationId: \"DMAPIPurgeRelay\"\n      parameters:\n        - name: \"source-name\"\n          in: path\n          description: \"globally unique data source name\"\n          required: true\n          schema:\n            type: string\n            example: \"mysql-01\"\n      requestBody:\n        required: true\n        content:\n          \"application/json\":\n            schema:\n              $ref: \"#/components/schemas/PurgeRelayRequest\"\n      responses:\n        \"200\":\n          description: \"success\"\n        \"400\":\n          description: \"failed\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/ErrorWithMessage\"\n\n  /api/v1/sources/{source-name}/schemas:\n    get:\n      tags:\n        - source\n      summary: \"get source schema list\"\n      operationId: \"DMAPIGetSourceSchemaList\"\n      parameters:\n        - name: source-name\n          in: path\n          description: \"source name\"\n          required: true\n          schema:\n            type: string\n            example: \"source-1\"\n      responses:\n        \"200\":\n          description: \"success\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/SchemaNameList\"\n        \"400\":\n          description: \"failed\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/ErrorWithMessage\"\n  /api/v1/sources/{source-name}/schemas/{schema-name}:\n    get:\n      tags:\n        - source\n      summary: \"get source table list\"\n      operationId: \"DMAPIGetSourceTableList\"\n      parameters:\n        - name: source-name\n          in: path\n          description: \"source name\"\n          required: true\n          schema:\n            type: string\n            example: \"source-1\"\n        - name: schema-name\n          in: path\n          description: \"schema name\"\n          required: true\n          schema:\n            type: string\n            example: \"db1\"\n      responses:\n        \"200\":\n          description: \"success\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TableNameList\"\n        \"400\":\n          description: \"failed\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/ErrorWithMessage\"\n\n  /api/v1/tasks:\n    post:\n      tags:\n        - task\n      summary: \"create a task\"\n      operationId: \"DMAPICreateTask\"\n      requestBody:\n        description: \"request body\"\n        content:\n          \"application/json\":\n            schema:\n              $ref: \"#/components/schemas/CreateTaskRequest\"\n      responses:\n        \"201\":\n          description: \"success\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/OperateTaskResponse\"\n        \"400\":\n          description: \"failed\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/ErrorWithMessage\"\n    get:\n      tags:\n        - task\n      summary: \"get task list\"\n      parameters:\n        - name: \"with_status\"\n          in: query\n          required: false\n          description: \"get task with status\"\n          schema:\n            type: boolean\n            example: true\n        - name: \"stage\"\n          in: query\n          required: false\n          description: \"filter by task stage\"\n          schema:\n            $ref: \"#/components/schemas/TaskStage\"\n        - name: source_name_list\n          in: query\n          required: false\n          description: \"filter by source name\"\n          schema:\n            $ref: \"#/components/schemas/SourceNameList\"\n      operationId: \"DMAPIGetTaskList\"\n      responses:\n        \"200\":\n          description: \"task list\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/GetTaskListResponse\"\n        \"400\":\n          description: \"failed\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/ErrorWithMessage\"\n  /api/v1/tasks/{task-name}:\n    get:\n      tags:\n        - task\n      summary: \"get a task\"\n      parameters:\n        - name: task-name\n          in: path\n          description: \"globally unique task name\"\n          required: true\n          schema:\n            type: string\n            example: \"task-1\"\n        - name: \"with_status\"\n          in: query\n          required: false\n          description: \"get task with status\"\n          schema:\n            type: boolean\n            example: true\n      operationId: \"DMAPIGetTask\"\n      responses:\n        \"200\":\n          description: \"task list\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Task\"\n        \"404\":\n          description: \"task not found\"\n    delete:\n      tags:\n        - task\n      summary: \"delete a task\"\n      operationId: \"DMAPIDeleteTask\"\n      parameters:\n        - name: task-name\n          in: path\n          description: \"globally unique task name\"\n          required: true\n          schema:\n            type: string\n            example: \"task-1\"\n        - name: \"force\"\n          in: query\n          required: false\n          description: \"force stop task even if some subtask is running\"\n          schema:\n            type: boolean\n            example: true\n      responses:\n        \"204\":\n          description: \"success\"\n        \"400\":\n          description: \"failed\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/ErrorWithMessage\"\n    put:\n      tags:\n        - task\n      summary: \"update a task\"\n      operationId: \"DMAPIUpdateTask\"\n      requestBody:\n        description: \"request body\"\n        content:\n          \"application/json\":\n            schema:\n              $ref: \"#/components/schemas/UpdateTaskRequest\"\n      parameters:\n        - name: task-name\n          in: path\n          description: \"globally unique task name\"\n          required: true\n          schema:\n            type: string\n            example: \"task-1\"\n      responses:\n        \"200\":\n          description: \"success\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/OperateTaskResponse\"\n        \"400\":\n          description: \"failed\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/ErrorWithMessage\"\n  /api/v1/tasks/{task-name}/status:\n    get:\n      tags:\n        - task\n      summary: \"get task status\"\n      operationId: \"DMAPIGetTaskStatus\"\n      parameters:\n        - name: task-name\n          in: path\n          description: \"globally unique task name\"\n          required: true\n          schema:\n            type: string\n            example: \"task-1\"\n        - name: source_name_list\n          in: query\n          description: \"source name list\"\n          required: false\n          schema:\n            $ref: \"#/components/schemas/SourceNameList\"\n      responses:\n        \"200\":\n          description: \"success\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/GetTaskStatusResponse\"\n        \"400\":\n          description: \"failed\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/ErrorWithMessage\"\n  /api/v1/tasks/{task-name}/start:\n    post:\n      tags:\n        - task\n      summary: \"start a task\"\n      operationId: \"DMAPIStartTask\"\n      parameters:\n        - name: task-name\n          in: path\n          description: \"globally unique task name\"\n          required: true\n          schema:\n            type: string\n            example: \"task-1\"\n      requestBody:\n        required: false\n        content:\n          \"application/json\":\n            schema:\n              $ref: \"#/components/schemas/StartTaskRequest\"\n      responses:\n        \"200\":\n          description: \"success\"\n        \"400\":\n          description: \"failed\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/ErrorWithMessage\"\n  /api/v1/tasks/{task-name}/stop:\n    post:\n      tags:\n        - task\n      summary: \"stop a task\"\n      operationId: \"DMAPIStopTask\"\n      parameters:\n        - name: task-name\n          in: path\n          description: \"globally unique task name\"\n          required: true\n          schema:\n            type: string\n            example: \"task-1\"\n      requestBody:\n        required: false\n        content:\n          \"application/json\":\n            schema:\n              $ref: \"#/components/schemas/StopTaskRequest\"\n      responses:\n        \"200\":\n          description: \"success\"\n        \"400\":\n          description: \"failed\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/ErrorWithMessage\"\n\n  /api/v1/tasks/{task-name}/sources/{source-name}/migrate_targets:\n    get:\n      tags:\n        - task\n      summary: \"get task source table and target table route relation\"\n      operationId: \"DMAPIGetTaskMigrateTargets\"\n      parameters:\n        - name: task-name\n          in: path\n          description: \"globally unique task name\"\n          required: true\n          schema:\n            type: string\n            example: \"task-1\"\n        - name: source-name\n          in: path\n          description: \"source name\"\n          required: true\n          schema:\n            type: string\n            example: \"source-1\"\n        - name: \"schema_pattern\"\n          in: query\n          required: false\n          schema:\n            type: string\n            example: \"db*\"\n        - name: \"table_pattern\"\n          in: query\n          required: false\n          schema:\n            type: string\n            example: \"table*\"\n      responses:\n        \"200\":\n          description: \"success\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/GetTaskMigrateTargetsResponse\"\n        \"400\":\n          description: \"failed\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/ErrorWithMessage\"\n  /api/v1/tasks/{task-name}/sources/{source-name}/schemas:\n    get:\n      tags:\n        - task\n      summary: \"get task source schema list\"\n      operationId: \"DMAPIGetSchemaListByTaskAndSource\"\n      parameters:\n        - name: task-name\n          in: path\n          description: \"globally unique task name\"\n          required: true\n          schema:\n            type: string\n            example: \"task-1\"\n        - name: source-name\n          in: path\n          description: \"source name\"\n          required: true\n          schema:\n            type: string\n            example: \"source-1\"\n      responses:\n        \"200\":\n          description: \"success\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/SchemaNameList\"\n        \"400\":\n          description: \"failed\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/ErrorWithMessage\"\n  /api/v1/tasks/{task-name}/sources/{source-name}/schemas/{schema-name}:\n    get:\n      tags:\n        - task\n      summary: \"get task source table list\"\n      operationId: \"DMAPIGetTableListByTaskAndSource\"\n      parameters:\n        - name: task-name\n          in: path\n          description: \"globally unique task name\"\n          required: true\n          schema:\n            type: string\n            example: \"task-1\"\n        - name: source-name\n          in: path\n          description: \"source name\"\n          required: true\n          schema:\n            type: string\n            example: \"source-1\"\n        - name: schema-name\n          in: path\n          description: \"schema name\"\n          required: true\n          schema:\n            type: string\n            example: \"db1\"\n      responses:\n        \"200\":\n          description: \"success\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TableNameList\"\n        \"400\":\n          description: \"failed\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/ErrorWithMessage\"\n  /api/v1/tasks/{task-name}/sources/{source-name}/schemas/{schema-name}/{table-name}:\n    get:\n      tags:\n        - task\n      summary: \"get task source table structure\"\n      operationId: \"DMAPIGetTableStructure\"\n      parameters:\n        - name: task-name\n          in: path\n          description: \"globally unique task name\"\n          required: true\n          schema:\n            type: string\n            example: \"task-1\"\n        - name: source-name\n          in: path\n          description: \"source name\"\n          required: true\n          schema:\n            type: string\n            example: \"source-1\"\n        - name: schema-name\n          in: path\n          description: \"schema name\"\n          required: true\n          schema:\n            type: string\n            example: \"db1\"\n        - name: table-name\n          in: path\n          description: \"table name\"\n          required: true\n          schema:\n            type: string\n            example: \"table1\"\n      responses:\n        \"200\":\n          description: \"success\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetTaskTableStructureResponse\"\n        \"400\":\n          description: \"failed\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/ErrorWithMessage\"\n    put:\n      tags:\n        - task\n      summary: \"operate task source table structure\"\n      operationId: \"DMAPIOperateTableStructure\"\n      parameters:\n        - name: task-name\n          in: path\n          description: \"globally unique task name\"\n          required: true\n          schema:\n            type: string\n            example: \"task-1\"\n        - name: source-name\n          in: path\n          description: \"source name\"\n          required: true\n          schema:\n            type: string\n            example: \"task-1\"\n        - name: schema-name\n          in: path\n          description: \"schema name\"\n          required: true\n          schema:\n            type: string\n            example: \"db1\"\n        - name: table-name\n          in: path\n          description: \"table name\"\n          required: true\n          schema:\n            type: string\n            example: \"table1\"\n      requestBody:\n        required: true\n        content:\n          \"application/json\":\n            schema:\n              $ref: \"#/components/schemas/OperateTaskTableStructureRequest\"\n      responses:\n        \"200\":\n          description: \"success\"\n        \"400\":\n          description: \"failed\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/ErrorWithMessage\"\n    delete:\n      tags:\n        - task\n      summary: \"delete task source table structure\"\n      operationId: \"DMAPIDeleteTableStructure\"\n      parameters:\n        - name: task-name\n          in: path\n          description: \"globally unique task name\"\n          required: true\n          schema:\n            type: string\n            example: \"task-1\"\n        - name: source-name\n          in: path\n          description: \"source name\"\n          required: true\n          schema:\n            type: string\n            example: \"source-1\"\n        - name: schema-name\n          in: path\n          description: \"schema name\"\n          required: true\n          schema:\n            type: string\n            example: \"db1\"\n        - name: table-name\n          in: path\n          description: \"table name\"\n          required: true\n          schema:\n            type: string\n            example: \"table1\"\n      responses:\n        \"204\":\n          description: \"success\"\n        \"400\":\n          description: \"failed\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/ErrorWithMessage\"\n\n  /api/v1/tasks/converters:\n    post:\n      tags:\n        - task\n      summary: \"Turn task into the format of a configuration file or vice versa.\"\n      operationId: \"DMAPIConvertTask\"\n      requestBody:\n        description: \"if task is input this task will be converted to task_config file or vice versa\"\n        content:\n          \"application/json\":\n            schema:\n              $ref: \"#/components/schemas/ConverterTaskRequest\"\n      responses:\n        \"201\":\n          description: \"success\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/ConverterTaskResponse\"\n        \"400\":\n          description: \"failed\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/ErrorWithMessage\"\n\n  /api/v1/tasks/templates:\n    post:\n      tags:\n        - task\n      summary: \"create task template\"\n      operationId: \"DMAPICreateTaskTemplate\"\n      requestBody:\n        description: \"request body\"\n        content:\n          \"application/json\":\n            schema:\n              $ref: \"#/components/schemas/Task\"\n      responses:\n        \"201\":\n          description: \"success\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Task\"\n        \"400\":\n          description: \"failed\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/ErrorWithMessage\"\n    get:\n      tags:\n        - task\n      summary: \"get task template list\"\n      operationId: \"DMAPIGetTaskTemplateList\"\n      responses:\n        \"200\":\n          description: \"task list\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/GetTaskListResponse\"\n        \"400\":\n          description: \"failed\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/ErrorWithMessage\"\n  /api/v1/tasks/templates/import:\n    post:\n      tags:\n        - task\n      summary: \"import task template\"\n      operationId: \"DMAPIImportTaskTemplate\"\n      requestBody:\n        description: \"request body\"\n        content:\n          \"application/json\":\n            schema:\n              $ref: \"#/components/schemas/TaskTemplateRequest\"\n      responses:\n        \"202\":\n          description: \"success\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/TaskTemplateResponse\"\n        \"400\":\n          description: \"failed\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/ErrorWithMessage\"\n  /api/v1/tasks/templates/{task-name}:\n    get:\n      tags:\n        - task\n      summary: \"get task template template\"\n      operationId: \"DMAPIGetTaskTemplate\"\n      parameters:\n        - name: task-name\n          in: path\n          description: \"globally unique task name\"\n          required: true\n          schema:\n            type: string\n            example: \"task-1\"\n      responses:\n        \"200\":\n          description: \"success\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Task\"\n        \"400\":\n          description: \"failed\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/ErrorWithMessage\"\n    put:\n      tags:\n        - task\n      summary: \"update task template template\"\n      operationId: \"DMAPUpdateTaskTemplate\"\n      parameters:\n        - name: task-name\n          in: path\n          description: \"globally unique task name\"\n          required: true\n          schema:\n            type: string\n            example: \"task-1\"\n      responses:\n        \"200\":\n          description: \"success\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Task\"\n        \"400\":\n          description: \"failed\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/ErrorWithMessage\"\n    delete:\n      tags:\n        - task\n      summary: \"delete task template template\"\n      operationId: \"DMAPIDeleteTaskTemplate\"\n      parameters:\n        - name: task-name\n          in: path\n          description: \"globally unique task name\"\n          required: true\n          schema:\n            type: string\n            example: \"task-1\"\n      responses:\n        \"204\":\n          description: \"success\"\n        \"400\":\n          description: \"failed\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/ErrorWithMessage\"\n\n  /api/v1/cluster/info:\n    get:\n      tags:\n        - cluster\n      summary: \"get cluster info such as cluster id\"\n      operationId: \"DMAPIGetClusterInfo\"\n      responses:\n        \"200\":\n          description: \"success\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/GetClusterInfoResponse\"\n    put:\n      tags:\n        - cluster\n      summary: \"update cluster info.\"\n      operationId: \"DMAPIUpdateClusterInfo\"\n      requestBody:\n        description: \"request body\"\n        content:\n          \"application/json\":\n            schema:\n              $ref: \"#/components/schemas/ClusterTopology\"\n      responses:\n        \"200\":\n          description: \"success\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/GetClusterInfoResponse\"\n  /api/v1/cluster/masters:\n    get:\n      tags:\n        - cluster\n      summary: \"get cluster master node list\"\n      operationId: \"DMAPIGetClusterMasterList\"\n      responses:\n        \"200\":\n          description: \"success\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/GetClusterMasterListResponse\"\n        \"400\":\n          description: \"failed\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/ErrorWithMessage\"\n  /api/v1/cluster/masters/{master-name}:\n    delete:\n      tags:\n        - cluster\n      summary: \"offline master node\"\n      operationId: \"DMAPIOfflineMasterNode\"\n      parameters:\n        - name: \"master-name\"\n          in: path\n          description: \"master node name\"\n          required: true\n          schema:\n            type: string\n            example: \"master1\"\n      responses:\n        \"204\":\n          description: \"success\"\n        \"400\":\n          description: \"failed\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/ErrorWithMessage\"\n  /api/v1/cluster/workers:\n    get:\n      tags:\n        - cluster\n      summary: \"get cluster worker node list\"\n      operationId: \"DMAPIGetClusterWorkerList\"\n      responses:\n        \"200\":\n          description: \"success\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/GetClusterWorkerListResponse\"\n        \"400\":\n          description: \"failed\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/ErrorWithMessage\"\n  /api/v1/cluster/workers/{worker-name}:\n    delete:\n      tags:\n        - cluster\n      summary: \"offline worker node\"\n      operationId: \"DMAPIOfflineWorkerNode\"\n      parameters:\n        - name: \"worker-name\"\n          in: path\n          description: \"worker node name\"\n          required: true\n          schema:\n            type: string\n            example: \"master1\"\n      responses:\n        \"204\":\n          description: \"success\"\n        \"400\":\n          description: \"failed\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/ErrorWithMessage\"\n\ncomponents:\n  schemas:\n    ErrorWithMessage:\n      description: \"operation error\"\n      type: object\n      properties:\n        error_msg:\n          type: string\n          description: \"error message\"\n        error_code:\n          type: integer\n          description: \"error code\"\n      required:\n        - \"error_msg\"\n        - \"error_code\"\n\n    Security:\n      type: object\n      description: \"data source ssl configuration, the field will be hidden when getting the data source configuration from the interface\"\n      nullable: true\n      properties:\n        ssl_ca_content:\n          type: string\n          example: \"\"\n          description: \"certificate file content\"\n        ssl_cert_content:\n          type: string\n          example: \"\"\n          description: \"File content of PEM format/X509 format certificates\"\n        ssl_key_content:\n          type: string\n          example: \"\"\n          description: \"Content of the private key file in X509 format\"\n        cert_allowed_cn:\n          type: array\n          description: \"Common Name of SSL certificates\"\n          items:\n            type: string\n      required:\n        - \"ssl_ca_content\"\n        - \"ssl_cert_content\"\n        - \"ssl_key_content\"\n    Purge:\n      description: \"relay log cleanup policy configuration\"\n      type: object\n      properties:\n        interval:\n          type: integer\n          default: 3600\n          description: \"The interval to periodically check if the relay log is expired, default value: 3600, in seconds\"\n          format: int64\n          nullable: true\n        expires:\n          type: integer\n          default: 0\n          description: \"expiration time of relay log\"\n          format: int64\n          nullable: true\n        remain_space:\n          type: integer\n          default: 15\n          description: \"Minimum free disk space, in GB\"\n          format: int64\n          nullable: true\n    RelayStatus:\n      description: \"status of relay log\"\n      type: object\n      properties:\n        master_binlog:\n          type: string\n          example: \"(mysql-bin.000001, 1979)\"\n          description: \"upstream binlog file information\"\n        master_binlog_gtid:\n          type: string\n          example: \"e9a1fc22-ec08-11e9-b2ac-0242ac110003:1-7849\"\n          description: \"GTID of the upstream\"\n        relay_dir:\n          type: string\n          description: \"the directory where the relay log is stored\"\n          example: \"./sub_dir\"\n        relay_binlog_gtid:\n          type: string\n          example: \"e9a1fc22-ec08-11e9-b2ac-0242ac110003:1-7849\"\n          description: \"relay current GTID\"\n        relay_catch_up_master:\n          type: boolean\n          description: \"whether to catch up with upstream progress\"\n        stage:\n          type: string\n          description: \"current status\"\n          example: \"Running\"\n      required:\n        - \"master_binlog\"\n        - \"master_binlog_gtid\"\n        - \"relay_dir\"\n        - \"relay_binlog_gtid\"\n        - \"relay_catch_up_master\"\n        - \"stage\"\n    SourceStatus:\n      description: \"source status\"\n      type: object\n      properties:\n        source_name:\n          type: string\n          example: \"mysql-replica-01\"\n          description: \"source name\"\n        worker_name:\n          type: string\n          example: \"worker-1\"\n          description: \"The worker currently bound to the source\"\n        relay_status:\n          $ref: \"#/components/schemas/RelayStatus\"\n        error_msg:\n          type: string\n          description: \"error message when something wrong\"\n      required:\n        - \"source_name\"\n        - \"worker_name\"\n    Source:\n      type: object\n      description: \"source\"\n      properties:\n        source_name:\n          type: string\n          example: \"mysql-01\"\n          description: \"source name\"\n          nullable: false\n        host:\n          type: string\n          example: \"127.0.0.1\"\n          description: \"source address\"\n          nullable: false\n        port:\n          type: integer\n          example: 3306\n          description: \"source port\"\n          nullable: false\n        user:\n          type: string\n          example: \"root\"\n          description: \"source username\"\n          nullable: false\n        password:\n          type: string\n          example: \"123456\"\n          description: \"source password\"\n          nullable: true\n        enable_gtid:\n          type: boolean\n          example: false\n          default: false\n          description: \"whether to use GTID to pull binlogs from upstream\"\n          nullable: false\n        enable:\n          type: boolean\n          example: false\n          default: false\n          description: \"whether this source is enabled\"\n          nullable: false\n        flavor:\n          type: string\n          example: mysql\n          description: \"flavor of this source\"\n        task_name_list:\n          $ref: \"#/components/schemas/TaskNameList\"\n        security:\n          $ref: \"#/components/schemas/Security\"\n        purge:\n          $ref: \"#/components/schemas/Purge\"\n        status_list:\n          type: array\n          items:\n            $ref: \"#/components/schemas/SourceStatus\"\n        relay_config:\n          $ref: \"#/components/schemas/RelayConfig\"\n      required:\n        - \"source_name\"\n        - \"host\"\n        - \"port\"\n        - \"user\"\n        - \"enable_gtid\"\n        - \"enable\"\n    ShardingGroup:\n      type: object\n      properties:\n        target:\n          type: string\n        ddl_list:\n          type: array\n          items:\n            type: string\n          description: \"\"\n        first_location:\n          type: string\n        synced:\n          type: array\n          items:\n            type: string\n          description: \"\"\n        unsynced:\n          type: array\n          items:\n            type: string\n          description: \"\"\n      required:\n        - \"target\"\n        - \"ddl_list\"\n        - \"first_location\"\n        - \"synced\"\n        - \"unsynced\"\n    LoadStatus:\n      type: object\n      description: \"status of load unit\"\n      properties:\n        finished_bytes:\n          type: integer\n          format: int64\n        total_bytes:\n          type: integer\n          format: int64\n        progress:\n          type: string\n        meta_binlog:\n          type: string\n        meta_binlog_gtid:\n          type: string\n      required:\n        - \"finished_bytes\"\n        - \"total_bytes\"\n        - \"progress\"\n        - \"meta_binlog\"\n        - \"meta_binlog_gtid\"\n    SyncStatus:\n      type: object\n      description: \"status of sync unit\"\n      properties:\n        total_events:\n          type: integer\n          format: int64\n        total_tps:\n          type: integer\n          format: int64\n        recent_tps:\n          type: integer\n          format: int64\n        master_binlog:\n          type: string\n        master_binlog_gtid:\n          type: string\n        syncer_binlog:\n          type: string\n        syncer_binlog_gtid:\n          type: string\n        blocking_ddls:\n          type: array\n          items:\n            type: string\n          description: sharding DDL which current is blocking\n        unresolved_groups:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ShardingGroup\"\n          description: sharding groups which current are un-resolved\n        synced:\n          type: boolean\n        binlog_type:\n          type: string\n        seconds_behind_master:\n          type: integer\n          format: int64\n      required:\n        - \"total_events\"\n        - \"total_tps\"\n        - \"recent_tps\"\n        - \"master_binlog\"\n        - \"master_binlog_gtid\"\n        - \"syncer_binlog\"\n        - \"syncer_binlog_gtid\"\n        - \"blocking_ddls\"\n        - \"unresolved_groups\"\n        - \"synced\"\n        - \"binlog_type\"\n        - \"seconds_behind_master\"\n    DumpStatus:\n      type: object\n      description: \"status of dump unit\"\n      properties:\n        total_tables:\n          type: integer\n          format: int64\n        completed_tables:\n          type: number\n          format: double\n        finished_bytes:\n          type: number\n          format: double\n        finished_rows:\n          type: number\n          format: double\n        estimate_total_rows:\n          type: number\n          format: double\n      required:\n        - \"total_tables\"\n        - \"completed_tables\"\n        - \"finished_bytes\"\n        - \"finished_rows\"\n        - \"estimate_total_rows\"\n    SubTaskStatus:\n      type: object\n      properties:\n        name:\n          type: string\n          description: task name\n        source_name:\n          type: string\n          description: source name\n        worker_name:\n          type: string\n          description: worker name\n        stage:\n          $ref: \"#/components/schemas/TaskStage\"\n        unit:\n          type: string\n          example: \"sync\"\n          description: \"task unit type\"\n        unresolved_ddl_lock_id:\n          type: string\n        load_status:\n          nullable: true\n          $ref: \"#/components/schemas/LoadStatus\"\n        sync_status:\n          nullable: true\n          $ref: \"#/components/schemas/SyncStatus\"\n        dump_status:\n          nullable: true\n          $ref: \"#/components/schemas/DumpStatus\"\n        error_msg:\n          type: string\n          description: \"error message when something wrong\"\n      required:\n        - \"name\"\n        - \"source_name\"\n        - \"worker_name\"\n        - \"stage\"\n        - \"unit\"\n    TaskTargetDataBase:\n      type: object\n      description: \"downstream database configuration\"\n      properties:\n        host:\n          type: string\n          example: \"127.0.0.1\"\n          description: \"source address\"\n        port:\n          type: integer\n          example: 3306\n          description: \"source port\"\n        user:\n          type: string\n          example: \"root\"\n          description: \"source username\"\n        password:\n          type: string\n          example: \"123456\"\n          description: \"source password\"\n        security:\n          $ref: \"#/components/schemas/Security\"\n      required:\n        - \"host\"\n        - \"port\"\n        - \"user\"\n        - \"password\"\n    TaskBinLogFilterRule:\n      description: \"Filtering rules at binlog level\"\n      type: object\n      properties:\n        ignore_event:\n          description: \"event type\"\n          type: array\n          items:\n            type: string\n            description: \"event type\"\n            example: \"all dml\"\n        ignore_sql:\n          description: \"sql pattern to filter\"\n          type: array\n          items:\n            type: string\n            description: \"sql pattern to filter\"\n            example: \"^Drop\"\n    TaskTableMigrateRule:\n      type: object\n      description: \"upstream table to downstream migrate rules\"\n      properties:\n        source:\n          type: object\n          description: source-related configuration\n          properties:\n            source_name:\n              type: string\n              description: source name\n              example: \"source-name\"\n            schema:\n              type: string\n              description: schema name, wildcard support\n              example: \"db-*\"\n            table:\n              type: string\n              description: table name, wildcard support\n              example: \"tb-*\"\n          required:\n            - \"source_name\"\n            - \"schema\"\n            - \"table\"\n        target:\n          type: object\n          description: downstream-related configuration\n          properties:\n            schema:\n              type: string\n              description: schema name, does not support wildcards\n              example: \"db1\"\n            table:\n              type: string\n              description: table name, does not support wildcards\n              example: \"tb1\"\n        binlog_filter_rule:\n          type: array\n          description: \"filter rule name\"\n          items:\n            type: string\n            example: rule-1\n      required:\n        - \"source\"\n    TaskFullMigrateConf:\n      description: configuration of full migrate tasks\n      type: object\n      properties:\n        export_threads:\n          type: integer\n          description: full export of concurrent\n          default: 4\n        import_threads:\n          type: integer\n          description: full import of concurrent\n          default: 16\n        data_dir:\n          type: string\n          example: \"./exported_data\"\n          description: \"storage dir name\"\n        consistency:\n          type: string\n          example: \"auto\"\n          description: \"to control the way in which data is exported for consistency assurance\"\n    TaskIncrMigrateConf:\n      description: configuration of incremental tasks\n      type: object\n      properties:\n        repl_threads:\n          type: integer\n          description: incremental task of concurrent\n          default: 16\n        repl_batch:\n          type: integer\n          description: incremental synchronization of batch execution sql quantities\n          default: 100\n    TaskSourceConf:\n      type: object\n      properties:\n        source_name:\n          type: string\n          example: \"mysql-replica-01\"\n          description: \"source name\"\n        binlog_name:\n          type: string\n          example: \"binlog.000001\"\n        binlog_pos:\n          type: integer\n          example: 4\n        binlog_gtid:\n          type: string\n          example: \"03fc0263-28c7-11e7-a653-6c0b84d59f30:1-7041423,05474d3c-28c7-11e7-8352-203db246dd3d:1-170\"\n      required:\n        - \"source_name\"\n    TaskSourceConfig:\n      type: object\n      description: \"source-related configuration\"\n      properties:\n        full_migrate_conf:\n          $ref: \"#/components/schemas/TaskFullMigrateConf\"\n        incr_migrate_conf:\n          $ref: \"#/components/schemas/TaskIncrMigrateConf\"\n        source_conf:\n          type: array\n          description: \"source configuration\"\n          items:\n            $ref: \"#/components/schemas/TaskSourceConf\"\n      required:\n        - \"source_conf\"\n    TaskCheckerConfig:\n      type: object\n      description: \"task status checker configuration\"\n      properties:\n        enable:\n          type: boolean\n          example: false\n          default: true\n          description: \"determines whether to enable task status checker\"\n        backoff_max:\n          type: string\n          example: \"5m0s\"\n          description: \"sets the longest time interval for the automatic recovery after errors are detected.\"\n        backoff_rollback:\n          type: string\n          example: \"5m0s\"\n          description: \"sets the time interval for adjusting the waiting time of the automatic recovery.\"\n    TaskStage:\n      type: string\n      enum:\n        - Stopped\n        - Running\n        - Finished\n    Task:\n      description: \"task\"\n      type: object\n      properties:\n        name:\n          type: string\n          example: \"task-1\"\n          description: \"task name\"\n        task_mode:\n          type: string\n          example: \"all\"\n          description: \"migrate mode\"\n          enum:\n            - \"full\"\n            - \"incremental\"\n            - \"all\"\n        shard_mode:\n          type: string\n          description: the way to coordinate DDL\n          enum:\n            - \"pessimistic\"\n            - \"optimistic\"\n        meta_schema:\n          type: string\n          example: \"dm-meta\"\n          description: \"downstream database for storing meta information\"\n          default: \"dm-meta\"\n        enhance_online_schema_change:\n          type: boolean\n          example: true\n          description: whether to enable support for the online ddl plugin\n          default: true\n        on_duplicate:\n          type: string\n          description: \"how to handle conflicted data\"\n          enum:\n            - \"replace\"\n            - \"error\"\n            - \"ignore\"\n        target_config:\n          $ref: \"#/components/schemas/TaskTargetDataBase\"\n        binlog_filter_rule:\n          type: object\n          additionalProperties:\n            $ref: \"#/components/schemas/TaskBinLogFilterRule\"\n        table_migrate_rule:\n          type: array\n          description: \"table migrate rule\"\n          items:\n            $ref: \"#/components/schemas/TaskTableMigrateRule\"\n        source_config:\n          $ref: \"#/components/schemas/TaskSourceConfig\"\n        status_list:\n          type: array\n          items:\n            $ref: \"#/components/schemas/SubTaskStatus\"\n        ignore_checking_items:\n          type: array\n          description: \"ignore precheck items\"\n          items:\n            type: string\n            example: \"version\"\n      required:\n        - \"name\"\n        - \"task_mode\"\n        - \"enhance_online_schema_change\"\n        - \"on_duplicate\"\n        - \"target_config\"\n        - \"table_migrate_rule\"\n        - \"source_config\"\n\n    ClusterMaster:\n      type: object\n      properties:\n        name:\n          type: string\n          example: master1\n        alive:\n          type: boolean\n          example: true\n          description: \"online status of this master\"\n        leader:\n          type: boolean\n          example: true\n          description: \"is this master the leader\"\n        addr:\n          type: string\n          example: \"127.0.0.1:8261\"\n          description: \"address of the current master node\"\n      required:\n        - \"name\"\n        - \"alive\"\n        - \"leader\"\n        - \"addr\"\n    ClusterWorker:\n      type: object\n      properties:\n        name:\n          type: string\n          example: worker1\n        addr:\n          type: string\n          example: \"127.0.0.1:8261\"\n          description: \"address of the current master node\"\n        bound_stage:\n          type: string\n          example: \"bound\"\n          description: \"bound stage of this worker node\"\n        bound_source_name:\n          type: string\n          example: \"mysql-01\"\n          description: \"bound source name of this worker node\"\n      required:\n        - \"name\"\n        - \"addr\"\n        - \"bound_stage\"\n        - \"bound_source_name\"\n\n    MasterTopology:\n      type: object\n      properties:\n        name:\n          type: string\n          example: master\n        host:\n          type: string\n          example: \"127.0.0.1\"\n        port:\n          type: integer\n          example: 8261\n      required:\n        - \"name\"\n        - \"host\"\n        - \"port\"\n    WorkerTopology:\n      type: object\n      properties:\n        name:\n          type: string\n          example: worker1\n        host:\n          type: string\n          example: \"127.0.0.1\"\n        port:\n          type: integer\n          example: 8261\n      required:\n        - \"name\"\n        - \"host\"\n        - \"port\"\n    GrafanaTopology:\n      type: object\n      properties:\n        host:\n          type: string\n          example: \"127.0.0.1\"\n        port:\n          type: integer\n          example: 3000\n      required:\n        - \"host\"\n        - \"port\"\n    PrometheusTopology:\n      type: object\n      properties:\n        host:\n          type: string\n          example: \"127.0.0.1\"\n        port:\n          type: integer\n          example: 9090\n      required:\n        - \"host\"\n        - \"port\"\n    AlertManagerTopology:\n      type: object\n      properties:\n        host:\n          type: string\n          example: \"127.0.0.1\"\n        port:\n          type: integer\n          example: 9093\n      required:\n        - \"host\"\n        - \"port\"\n    ClusterTopology:\n      type: object\n      properties:\n        master_topology_list:\n          type: array\n          items:\n            $ref: \"#/components/schemas/MasterTopology\"\n        worker_topology_list:\n          type: array\n          items:\n            $ref: \"#/components/schemas/WorkerTopology\"\n        grafana_topology:\n          $ref: \"#/components/schemas/GrafanaTopology\"\n        prometheus_topology:\n          $ref: \"#/components/schemas/PrometheusTopology\"\n        alert_manager_topology:\n          $ref: \"#/components/schemas/AlertManagerTopology\"\n    WorkerNameList:\n      description: worker name list\n      type: array\n      items:\n        type: string\n        example: \"worker-1\"\n    SourceNameList:\n      description: source name list\n      type: array\n      items:\n        type: string\n        example: \"source-1\"\n    SchemaNameList:\n      description: schema name list\n      type: array\n      items:\n        type: string\n        example: \"db1\"\n    TableNameList:\n      description: schema name list\n      type: array\n      items:\n        type: string\n        example: \"table1\"\n    TaskNameList:\n      description: task name list\n      type: array\n      items:\n        type: string\n        example: \"task1\"\n\n    RelayConfig:\n      description: the config of relay\n      type: object\n      properties:\n        enable_relay:\n          type: boolean\n        relay_binlog_name:\n          type: string\n          example: \"mysql-bin.000002\"\n          description: \"starting filename of the upstream binlog\"\n          nullable: true\n        relay_binlog_gtid:\n          type: string\n          example: \"e9a1fc22-ec08-11e9-b2ac-0242ac110003:1-7849\"\n          description: \"starting GTID of the upstream binlog\"\n          nullable: true\n        relay_dir:\n          type: string\n          default: \"./relay_log\"\n          description: \"the directory where the relay log is stored\"\n          nullable: true\n\n    WorkerNameRequest:\n      description: requests related to workers\n      type: object\n      properties:\n        worker_name:\n          type: string\n          example: \"worker-1\"\n          description: \"worker name\"\n      required:\n        - \"worker_name\"\n    EnableRelayRequest:\n      description: action to start a relay request\n      type: object\n      properties:\n        worker_name_list:\n          $ref: \"#/components/schemas/WorkerNameList\"\n        relay_binlog_name:\n          type: string\n          example: \"mysql-bin.000002\"\n          description: \"starting filename of the upstream binlog\"\n          nullable: true\n        relay_binlog_gtid:\n          type: string\n          example: \"e9a1fc22-ec08-11e9-b2ac-0242ac110003:1-7849\"\n          description: \"starting GTID of the upstream binlog\"\n          nullable: true\n        relay_dir:\n          type: string\n          default: \"./relay_log\"\n          description: \"the directory where the relay log is stored\"\n          nullable: true\n    DisableRelayRequest:\n      description: action to stop a relay request\n      type: object\n      properties:\n        worker_name_list:\n          $ref: \"#/components/schemas/WorkerNameList\"\n    PurgeRelayRequest:\n      description: action to stop a relay request\n      type: object\n      properties:\n        relay_binlog_name:\n          type: string\n          example: \"mysql-bin.000002\"\n          description: \"starting filename of the upstream binlog\"\n        relay_dir:\n          type: string\n          description: \"specify relay sub directory for relay_binlog_name. If not specified, the latest one will be used. Sample format: 2ae76434-f79f-11e8-bde2-0242ac130008.000001\"\n          nullable: true\n      required:\n        - \"relay_binlog_name\"\n\n    CreateSourceRequest:\n      type: object\n      properties:\n        source:\n          $ref: \"#/components/schemas/Source\"\n        worker_name:\n          type: string\n          example: worker-1\n      required:\n        - \"source\"\n    UpdateSourceRequest:\n      type: object\n      properties:\n        source:\n          $ref: \"#/components/schemas/Source\"\n      required:\n        - \"source\"\n    GetSourceListResponse:\n      type: object\n      properties:\n        total:\n          type: integer\n        data:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Source\"\n      required:\n        - \"total\"\n        - \"data\"\n    GetSourceStatusResponse:\n      type: object\n      properties:\n        total:\n          type: integer\n        data:\n          type: array\n          items:\n            $ref: \"#/components/schemas/SourceStatus\"\n      required:\n        - \"total\"\n        - \"data\"\n\n    ConverterTaskRequest:\n      type: object\n      properties:\n        task:\n          $ref: \"#/components/schemas/Task\"\n        task_config_file:\n          type: string\n          description: config file in yaml format https://docs.pingcap.com/zh/tidb/stable/task-configuration-file-full.\n    ConverterTaskResponse:\n      type: object\n      properties:\n        task:\n          $ref: \"#/components/schemas/Task\"\n        task_config_file:\n          type: string\n          description: config file in yaml format https://docs.pingcap.com/zh/tidb/stable/task-configuration-file-full.\n      required:\n        - \"task\"\n        - \"task_config_file\"\n\n    TaskMigrateTarget:\n      type: object\n      description: \"task migrate targets\"\n      properties:\n        source_schema:\n          type: string\n          example: \"db1\"\n        source_table:\n          type: string\n          example: \"tb1\"\n        target_schema:\n          type: string\n          example: \"db1\"\n        target_table:\n          type: string\n          example: \"tb1\"\n      required:\n        - \"source_schema\"\n        - \"source_table\"\n        - \"target_schema\"\n        - \"target_table\"\n    GetTaskMigrateTargetsResponse:\n      type: object\n      properties:\n        total:\n          type: integer\n        data:\n          type: array\n          items:\n            $ref: \"#/components/schemas/TaskMigrateTarget\"\n      required:\n        - \"total\"\n        - \"data\"\n\n    CreateTaskRequest:\n      type: object\n      properties:\n        task:\n          $ref: \"#/components/schemas/Task\"\n      required:\n        - \"task\"\n    StartTaskRequest:\n      type: object\n      properties:\n        remove_meta:\n          type: boolean\n          default: false\n          description: whether to remove meta database in downstream database\n        source_name_list:\n          $ref: \"#/components/schemas/SourceNameList\"\n        start_time:\n          type: string\n          example: \"2006-01-02 15:04:05\"\n          description: task start time\n        safe_mode_time_duration:\n          type: string\n          example: \"10s\"\n          description: time duration of safe mode\n    StopTaskRequest:\n      type: object\n      properties:\n        timeout_duration:\n          type: string\n          example: \"15s\"\n          description: time duration waiting task stop\n        source_name_list:\n          $ref: \"#/components/schemas/SourceNameList\"\n    UpdateTaskRequest:\n      type: object\n      properties:\n        task:\n          $ref: \"#/components/schemas/Task\"\n      required:\n        - \"task\"\n    OperateTaskTableStructureRequest:\n      description: action to operate table request\n      type: object\n      properties:\n        sql_content:\n          type: string\n          example: \"CREATE TABLE `t1` ( `c1` int(11) DEFAULT NULL, `c2` int(11) DEFAULT NULL, `c3` int(11) DEFAULT NULL) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin;\"\n          description: \"sql you want to operate\"\n        flush:\n          type: boolean\n          default: true\n          description: \"Writes the schema to the checkpoint so that DM can load it after restarting the task\"\n        sync:\n          type: boolean\n          description: \"Updates the optimistic sharding metadata with this schema only used when an error occurs in the optimistic sharding DDL mode\"\n      required:\n        - \"sql_content\"\n    OperateTaskResponse:\n      type: object\n      properties: \n        task:\n          $ref: \"#/components/schemas/Task\"\n        check_result:\n          type: string\n          description: \"pre-check result\"\n          example: \"pre-check is passed. \"\n      required:\n        - \"task\"\n        - \"check_result\"\n    GetTaskListResponse:\n      type: object\n      properties:\n        total:\n          type: integer\n        data:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Task\"\n      required:\n        - \"total\"\n        - \"data\"\n    GetTaskStatusResponse:\n      type: object\n      properties:\n        total:\n          type: integer\n        data:\n          type: array\n          items:\n            $ref: \"#/components/schemas/SubTaskStatus\"\n      required:\n        - \"total\"\n        - \"data\"\n    GetTaskTableStructureResponse:\n      type: object\n      properties:\n        schema_name:\n          type: string\n          example: \"db1\"\n        table_name:\n          type: string\n          example: \"table1\"\n        schema_create_sql:\n          type: string\n          example: \"CREATE TABLE `t1` (`id` int(11) NOT NULL AUTO_INCREMENT,PRIMARY KEY (`id`) /*T![clustered_index] CLUSTERED */) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin\"\n      required:\n        - \"table_name\"\n        - \"table_create_sql\"\n\n    GetClusterWorkerListResponse:\n      type: object\n      properties:\n        total:\n          type: integer\n        data:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ClusterWorker\"\n      required:\n        - \"total\"\n        - \"data\"\n    GetClusterMasterListResponse:\n      type: object\n      properties:\n        total:\n          type: integer\n        data:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ClusterMaster\"\n      required:\n        - \"total\"\n        - \"data\"\n\n    TaskTemplateRequest:\n      type: object\n      properties:\n        overwrite:\n          type: boolean\n          default: false\n          description: whether to overwrite task template template\n      required:\n        - \"overwrite\"\n    TaskTemplateResponse:\n      type: object\n      properties:\n        success_task_list:\n          type: array\n          items:\n            type: string\n        failed_task_list:\n          type: array\n          items:\n            type: object\n            properties:\n              task_name:\n                type: string\n              error_msg:\n                type: string\n            required:\n              - \"task_name\"\n              - \"error_msg\"\n      required:\n        - \"success_task_list\"\n        - \"failed_task_list\"\n    GetClusterInfoResponse:\n      type: object\n      properties:\n        cluster_id:\n          type: integer\n          format: uint64\n          description: \"cluster id\"\n        topology:\n          $ref: \"#/components/schemas/ClusterTopology\"\n      required:\n        - \"cluster_id\"\n",
			"canonicalURL": "/github.com/pingcap/tiflow@3534963668aa54d010709c3ea45db6b2e58327c7/-/blob/dm/openapi/spec/dm.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/pingcap/tiflow/blob/3534963668aa54d010709c3ea45db6b2e58327c7/dm/openapi/spec/dm.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}