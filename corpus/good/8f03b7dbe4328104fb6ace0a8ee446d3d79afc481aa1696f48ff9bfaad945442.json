{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Web-Dev-Collaborative/Github-Based-Projects"
		},
		"file": {
			"name": "sam.json",
			"size": 0,
			"path": "gr/github-secrets-keeper/sam.json",
			"byteSize": 24838,
			"content": "{\n  \"AWSTemplateFormatVersion\": \"2010-09-09\",\n  \"Transform\": \"AWS::Serverless-2016-10-31\",\n  \"Description\": \"Exported by architect/package@1.0.39 on 2019-08-26T06:09:52.683Z\",\n  \"Resources\": {\n    \"Ghsk\": {\n      \"Type\": \"AWS::Serverless::Api\",\n      \"Properties\": {\n        \"StageName\": \"staging\",\n        \"DefinitionBody\": {\n          \"openapi\": \"3.0.1\",\n          \"info\": {\n            \"title\": {\n              \"Ref\": \"AWS::StackName\"\n            }\n          },\n          \"paths\": {\n            \"/api/user/client-secrets\": {\n              \"get\": {\n                \"responses\": {\n                  \"200\": {\n                    \"description\": \"200 response\"\n                  }\n                },\n                \"x-amazon-apigateway-integration\": {\n                  \"uri\": {\n                    \"Fn::Sub\": \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetApiUserClientSecrets.Arn}/invocations\"\n                  },\n                  \"responses\": {\n                    \"default\": {\n                      \"statusCode\": \"200\",\n                      \"contentHandling\": \"CONVERT_TO_TEXT\"\n                    }\n                  },\n                  \"passthroughBehavior\": \"when_no_match\",\n                  \"httpMethod\": \"POST\",\n                  \"contentHandling\": \"CONVERT_TO_TEXT\",\n                  \"type\": \"aws_proxy\"\n                }\n              },\n              \"post\": {\n                \"responses\": {\n                  \"200\": {\n                    \"description\": \"200 response\"\n                  }\n                },\n                \"x-amazon-apigateway-integration\": {\n                  \"uri\": {\n                    \"Fn::Sub\": \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostApiUserClientSecrets.Arn}/invocations\"\n                  },\n                  \"responses\": {\n                    \"default\": {\n                      \"statusCode\": \"200\",\n                      \"contentHandling\": \"CONVERT_TO_TEXT\"\n                    }\n                  },\n                  \"passthroughBehavior\": \"when_no_match\",\n                  \"httpMethod\": \"POST\",\n                  \"contentHandling\": \"CONVERT_TO_TEXT\",\n                  \"type\": \"aws_proxy\"\n                }\n              }\n            },\n            \"/api/user/client-secrets/{clientId}\": {\n              \"delete\": {\n                \"responses\": {\n                  \"200\": {\n                    \"description\": \"200 response\"\n                  }\n                },\n                \"x-amazon-apigateway-integration\": {\n                  \"uri\": {\n                    \"Fn::Sub\": \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DeleteApiUserClientSecretsClientId.Arn}/invocations\"\n                  },\n                  \"responses\": {\n                    \"default\": {\n                      \"statusCode\": \"200\",\n                      \"contentHandling\": \"CONVERT_TO_TEXT\"\n                    }\n                  },\n                  \"passthroughBehavior\": \"when_no_match\",\n                  \"httpMethod\": \"POST\",\n                  \"contentHandling\": \"CONVERT_TO_TEXT\",\n                  \"type\": \"aws_proxy\"\n                }\n              }\n            },\n            \"/api/{clientId}/{code}\": {\n              \"get\": {\n                \"responses\": {\n                  \"200\": {\n                    \"description\": \"200 response\"\n                  }\n                },\n                \"x-amazon-apigateway-integration\": {\n                  \"uri\": {\n                    \"Fn::Sub\": \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetApiClientIdCode.Arn}/invocations\"\n                  },\n                  \"responses\": {\n                    \"default\": {\n                      \"statusCode\": \"200\",\n                      \"contentHandling\": \"CONVERT_TO_TEXT\"\n                    }\n                  },\n                  \"passthroughBehavior\": \"when_no_match\",\n                  \"httpMethod\": \"POST\",\n                  \"contentHandling\": \"CONVERT_TO_TEXT\",\n                  \"type\": \"aws_proxy\"\n                }\n              }\n            },\n            \"/\": {\n              \"get\": {\n                \"responses\": {\n                  \"200\": {\n                    \"description\": \"200 response\"\n                  }\n                },\n                \"x-amazon-apigateway-integration\": {\n                  \"uri\": {\n                    \"Fn::Sub\": \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetIndex.Arn}/invocations\"\n                  },\n                  \"responses\": {\n                    \"default\": {\n                      \"statusCode\": \"200\",\n                      \"contentHandling\": \"CONVERT_TO_TEXT\"\n                    }\n                  },\n                  \"passthroughBehavior\": \"when_no_match\",\n                  \"httpMethod\": \"POST\",\n                  \"contentHandling\": \"CONVERT_TO_TEXT\",\n                  \"type\": \"aws_proxy\"\n                }\n              }\n            },\n            \"/{proxy+}\": {\n              \"x-amazon-apigateway-any-method\": {\n                \"parameters\": [\n                  {\n                    \"name\": \"proxy\",\n                    \"in\": \"path\",\n                    \"required\": true,\n                    \"schema\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                ],\n                \"x-amazon-apigateway-integration\": {\n                  \"uri\": {\n                    \"Fn::Sub\": \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetIndex.Arn}/invocations\"\n                  },\n                  \"responses\": {\n                    \"default\": {\n                      \"statusCode\": \"200\"\n                    }\n                  },\n                  \"passthroughBehavior\": \"when_no_match\",\n                  \"httpMethod\": \"POST\",\n                  \"cacheNamespace\": \"xlr8r\",\n                  \"cacheKeyParameters\": [\n                    \"method.request.path.proxy\"\n                  ],\n                  \"contentHandling\": \"CONVERT_TO_TEXT\",\n                  \"type\": \"aws_proxy\"\n                }\n              }\n            },\n            \"/_static/{proxy+}\": {\n              \"x-amazon-apigateway-any-method\": {\n                \"parameters\": [\n                  {\n                    \"name\": \"proxy\",\n                    \"in\": \"path\",\n                    \"required\": true,\n                    \"schema\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                ],\n                \"x-amazon-apigateway-integration\": {\n                  \"uri\": {\n                    \"Fn::Sub\": [\n                      \"http://${bukkit}.s3.${AWS::Region}.amazonaws.com/{proxy}\",\n                      {\n                        \"bukkit\": {\n                          \"Ref\": \"StaticBucket\"\n                        }\n                      }\n                    ]\n                  },\n                  \"responses\": {\n                    \"default\": {\n                      \"statusCode\": \"200\"\n                    }\n                  },\n                  \"requestParameters\": {\n                    \"integration.request.path.proxy\": \"method.request.path.proxy\"\n                  },\n                  \"passthroughBehavior\": \"when_no_match\",\n                  \"httpMethod\": \"ANY\",\n                  \"cacheNamespace\": \"xlr8r2\",\n                  \"cacheKeyParameters\": [\n                    \"method.request.path.proxy\"\n                  ],\n                  \"type\": \"http_proxy\"\n                }\n              }\n            }\n          }\n        },\n        \"EndpointConfiguration\": \"REGIONAL\",\n        \"BinaryMediaTypes\": [\n          \"*~1*\"\n        ],\n        \"MinimumCompressionSize\": 0\n      }\n    },\n    \"GetApiUserClientSecrets\": {\n      \"Type\": \"AWS::Serverless::Function\",\n      \"Properties\": {\n        \"Handler\": \"index.handler\",\n        \"CodeUri\": \"./src/http/get-api-user-client_secrets\",\n        \"Runtime\": \"nodejs10.x\",\n        \"MemorySize\": 1152,\n        \"Timeout\": 5,\n        \"Environment\": {\n          \"Variables\": {\n            \"ARC_ROLE\": {\n              \"Ref\": \"Role\"\n            },\n            \"ARC_CLOUDFORMATION\": {\n              \"Ref\": \"AWS::StackName\"\n            },\n            \"ARC_APP_NAME\": \"ghsk\",\n            \"NODE_ENV\": \"staging\",\n            \"SESSION_TABLE_NAME\": \"jwe\",\n            \"PYTHONPATH\": \"/var/task/vendor:/var/runtime:/opt/python\",\n            \"ARC_STATIC_BUCKET\": {\n              \"Ref\": \"StaticBucket\"\n            },\n            \"CLIENT_ID\": \"06515a89ea053688c263\",\n            \"CLIENT_SECRET\": \"758744f36d00b8f76e0bf921dbab50d2d84909b2\"\n          }\n        },\n        \"Role\": {\n          \"Fn::Sub\": [\n            \"arn:aws:iam::${AWS::AccountId}:role/${roleName}\",\n            {\n              \"roleName\": {\n                \"Ref\": \"Role\"\n              }\n            }\n          ]\n        },\n        \"Events\": {\n          \"GetApiUserClientSecretsEvent\": {\n            \"Type\": \"Api\",\n            \"Properties\": {\n              \"Path\": \"/api/user/client-secrets\",\n              \"Method\": \"GET\",\n              \"RestApiId\": {\n                \"Ref\": \"Ghsk\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"PostApiUserClientSecrets\": {\n      \"Type\": \"AWS::Serverless::Function\",\n      \"Properties\": {\n        \"Handler\": \"index.handler\",\n        \"CodeUri\": \"./src/http/post-api-user-client_secrets\",\n        \"Runtime\": \"nodejs10.x\",\n        \"MemorySize\": 1152,\n        \"Timeout\": 5,\n        \"Environment\": {\n          \"Variables\": {\n            \"ARC_ROLE\": {\n              \"Ref\": \"Role\"\n            },\n            \"ARC_CLOUDFORMATION\": {\n              \"Ref\": \"AWS::StackName\"\n            },\n            \"ARC_APP_NAME\": \"ghsk\",\n            \"NODE_ENV\": \"staging\",\n            \"SESSION_TABLE_NAME\": \"jwe\",\n            \"PYTHONPATH\": \"/var/task/vendor:/var/runtime:/opt/python\",\n            \"ARC_STATIC_BUCKET\": {\n              \"Ref\": \"StaticBucket\"\n            },\n            \"CLIENT_ID\": \"06515a89ea053688c263\",\n            \"CLIENT_SECRET\": \"758744f36d00b8f76e0bf921dbab50d2d84909b2\"\n          }\n        },\n        \"Role\": {\n          \"Fn::Sub\": [\n            \"arn:aws:iam::${AWS::AccountId}:role/${roleName}\",\n            {\n              \"roleName\": {\n                \"Ref\": \"Role\"\n              }\n            }\n          ]\n        },\n        \"Events\": {\n          \"PostApiUserClientSecretsEvent\": {\n            \"Type\": \"Api\",\n            \"Properties\": {\n              \"Path\": \"/api/user/client-secrets\",\n              \"Method\": \"POST\",\n              \"RestApiId\": {\n                \"Ref\": \"Ghsk\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"DeleteApiUserClientSecretsClientId\": {\n      \"Type\": \"AWS::Serverless::Function\",\n      \"Properties\": {\n        \"Handler\": \"index.handler\",\n        \"CodeUri\": \"./src/http/delete-api-user-client_secrets-000clientId\",\n        \"Runtime\": \"nodejs10.x\",\n        \"MemorySize\": 1152,\n        \"Timeout\": 5,\n        \"Environment\": {\n          \"Variables\": {\n            \"ARC_ROLE\": {\n              \"Ref\": \"Role\"\n            },\n            \"ARC_CLOUDFORMATION\": {\n              \"Ref\": \"AWS::StackName\"\n            },\n            \"ARC_APP_NAME\": \"ghsk\",\n            \"NODE_ENV\": \"staging\",\n            \"SESSION_TABLE_NAME\": \"jwe\",\n            \"PYTHONPATH\": \"/var/task/vendor:/var/runtime:/opt/python\",\n            \"ARC_STATIC_BUCKET\": {\n              \"Ref\": \"StaticBucket\"\n            },\n            \"CLIENT_ID\": \"06515a89ea053688c263\",\n            \"CLIENT_SECRET\": \"758744f36d00b8f76e0bf921dbab50d2d84909b2\"\n          }\n        },\n        \"Role\": {\n          \"Fn::Sub\": [\n            \"arn:aws:iam::${AWS::AccountId}:role/${roleName}\",\n            {\n              \"roleName\": {\n                \"Ref\": \"Role\"\n              }\n            }\n          ]\n        },\n        \"Events\": {\n          \"DeleteApiUserClientSecretsClientIdEvent\": {\n            \"Type\": \"Api\",\n            \"Properties\": {\n              \"Path\": \"/api/user/client-secrets/{clientId}\",\n              \"Method\": \"DELETE\",\n              \"RestApiId\": {\n                \"Ref\": \"Ghsk\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"GetApiClientIdCode\": {\n      \"Type\": \"AWS::Serverless::Function\",\n      \"Properties\": {\n        \"Handler\": \"index.handler\",\n        \"CodeUri\": \"./src/http/get-api-000clientId-000code\",\n        \"Runtime\": \"nodejs10.x\",\n        \"MemorySize\": 1152,\n        \"Timeout\": 5,\n        \"Environment\": {\n          \"Variables\": {\n            \"ARC_ROLE\": {\n              \"Ref\": \"Role\"\n            },\n            \"ARC_CLOUDFORMATION\": {\n              \"Ref\": \"AWS::StackName\"\n            },\n            \"ARC_APP_NAME\": \"ghsk\",\n            \"NODE_ENV\": \"staging\",\n            \"SESSION_TABLE_NAME\": \"jwe\",\n            \"PYTHONPATH\": \"/var/task/vendor:/var/runtime:/opt/python\",\n            \"ARC_STATIC_BUCKET\": {\n              \"Ref\": \"StaticBucket\"\n            },\n            \"CLIENT_ID\": \"06515a89ea053688c263\",\n            \"CLIENT_SECRET\": \"758744f36d00b8f76e0bf921dbab50d2d84909b2\"\n          }\n        },\n        \"Role\": {\n          \"Fn::Sub\": [\n            \"arn:aws:iam::${AWS::AccountId}:role/${roleName}\",\n            {\n              \"roleName\": {\n                \"Ref\": \"Role\"\n              }\n            }\n          ]\n        },\n        \"Events\": {\n          \"GetApiClientIdCodeEvent\": {\n            \"Type\": \"Api\",\n            \"Properties\": {\n              \"Path\": \"/api/{clientId}/{code}\",\n              \"Method\": \"GET\",\n              \"RestApiId\": {\n                \"Ref\": \"Ghsk\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"GetIndex\": {\n      \"Type\": \"AWS::Serverless::Function\",\n      \"Properties\": {\n        \"Handler\": \"index.handler\",\n        \"CodeUri\": \"/Users/gregor/.npm-packages/lib/node_modules/@architect/cli/node_modules/@architect/package/vendor/arc-proxy-3.2.2/index.js\",\n        \"Runtime\": \"nodejs10.x\",\n        \"MemorySize\": 1152,\n        \"Timeout\": 5,\n        \"Environment\": {\n          \"Variables\": {\n            \"ARC_ROLE\": {\n              \"Ref\": \"Role\"\n            },\n            \"ARC_CLOUDFORMATION\": {\n              \"Ref\": \"AWS::StackName\"\n            },\n            \"ARC_APP_NAME\": \"ghsk\",\n            \"NODE_ENV\": \"staging\",\n            \"SESSION_TABLE_NAME\": \"jwe\",\n            \"PYTHONPATH\": \"/var/task/vendor:/var/runtime:/opt/python\",\n            \"ARC_STATIC_BUCKET\": {\n              \"Ref\": \"StaticBucket\"\n            },\n            \"CLIENT_ID\": \"06515a89ea053688c263\",\n            \"CLIENT_SECRET\": \"758744f36d00b8f76e0bf921dbab50d2d84909b2\"\n          }\n        },\n        \"Role\": {\n          \"Fn::Sub\": [\n            \"arn:aws:iam::${AWS::AccountId}:role/${roleName}\",\n            {\n              \"roleName\": {\n                \"Ref\": \"Role\"\n              }\n            }\n          ]\n        },\n        \"Events\": {\n          \"GetIndexEvent\": {\n            \"Type\": \"Api\",\n            \"Properties\": {\n              \"Path\": \"/\",\n              \"Method\": \"GET\",\n              \"RestApiId\": {\n                \"Ref\": \"Ghsk\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"InvokeProxyPermission\": {\n      \"Type\": \"AWS::Lambda::Permission\",\n      \"Properties\": {\n        \"FunctionName\": {\n          \"Ref\": \"GetIndex\"\n        },\n        \"Action\": \"lambda:InvokeFunction\",\n        \"Principal\": \"apigateway.amazonaws.com\",\n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${restApiId}/*/*\",\n            {\n              \"restApiId\": {\n                \"Ref\": \"Ghsk\"\n              }\n            }\n          ]\n        }\n      }\n    },\n    \"StaticBucket\": {\n      \"Type\": \"AWS::S3::Bucket\",\n      \"Properties\": {\n        \"AccessControl\": \"PublicRead\",\n        \"WebsiteConfiguration\": {\n          \"IndexDocument\": \"index.html\",\n          \"ErrorDocument\": \"404.html\"\n        }\n      }\n    },\n    \"UsersTable\": {\n      \"Type\": \"AWS::DynamoDB::Table\",\n      \"Properties\": {\n        \"KeySchema\": [\n          {\n            \"AttributeName\": \"id\",\n            \"KeyType\": \"HASH\"\n          }\n        ],\n        \"AttributeDefinitions\": [\n          {\n            \"AttributeName\": \"id\",\n            \"AttributeType\": \"N\"\n          }\n        ],\n        \"BillingMode\": \"PAY_PER_REQUEST\"\n      }\n    },\n    \"AppsTable\": {\n      \"Type\": \"AWS::DynamoDB::Table\",\n      \"Properties\": {\n        \"KeySchema\": [\n          {\n            \"AttributeName\": \"clientId\",\n            \"KeyType\": \"HASH\"\n          }\n        ],\n        \"AttributeDefinitions\": [\n          {\n            \"AttributeName\": \"clientId\",\n            \"AttributeType\": \"S\"\n          }\n        ],\n        \"BillingMode\": \"PAY_PER_REQUEST\"\n      }\n    },\n    \"Role\": {\n      \"Type\": \"AWS::IAM::Role\",\n      \"Properties\": {\n        \"AssumeRolePolicyDocument\": {\n          \"Version\": \"2012-10-17\",\n          \"Statement\": [\n            {\n              \"Effect\": \"Allow\",\n              \"Principal\": {\n                \"Service\": \"lambda.amazonaws.com\"\n              },\n              \"Action\": \"sts:AssumeRole\"\n            }\n          ]\n        },\n        \"Policies\": [\n          {\n            \"PolicyName\": \"ArcGlobalPolicy\",\n            \"PolicyDocument\": {\n              \"Statement\": [\n                {\n                  \"Effect\": \"Allow\",\n                  \"Action\": [\n                    \"logs:CreateLogGroup\",\n                    \"logs:CreateLogStream\",\n                    \"logs:PutLogEvents\",\n                    \"logs:DescribeLogStreams\"\n                  ],\n                  \"Resource\": \"arn:aws:logs:*:*:*\"\n                }\n              ]\n            }\n          },\n          {\n            \"PolicyName\": \"ArcStaticBucketPolicy\",\n            \"PolicyDocument\": {\n              \"Statement\": [\n                {\n                  \"Effect\": \"Allow\",\n                  \"Action\": [\n                    \"s3:GetObject\",\n                    \"s3:PutObject\",\n                    \"s3:DeleteObject\"\n                  ],\n                  \"Resource\": {\n                    \"Fn::Sub\": [\n                      \"arn:aws:s3:::${bukkit}\",\n                      {\n                        \"bukkit\": {\n                          \"Ref\": \"StaticBucket\"\n                        }\n                      }\n                    ]\n                  }\n                }\n              ]\n            }\n          },\n          {\n            \"PolicyName\": \"ArcDynamoPolicy\",\n            \"PolicyDocument\": {\n              \"Statement\": [\n                {\n                  \"Effect\": \"Allow\",\n                  \"Action\": [\n                    \"dynamodb:BatchGetItem\",\n                    \"dynamodb:BatchWriteItem\",\n                    \"dynamodb:PutItem\",\n                    \"dynamodb:DeleteItem\",\n                    \"dynamodb:GetItem\",\n                    \"dynamodb:Query\",\n                    \"dynamodb:Scan\",\n                    \"dynamodb:UpdateItem\",\n                    \"dynamodb:GetRecords\",\n                    \"dynamodb:GetShardIterator\",\n                    \"dynamodb:DescribeStream\",\n                    \"dynamodb:ListStreams\"\n                  ],\n                  \"Resource\": [\n                    {\n                      \"Fn::Sub\": [\n                        \"arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}\",\n                        {\n                          \"tablename\": {\n                            \"Ref\": \"UsersTable\"\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      \"Fn::Sub\": [\n                        \"arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}/*\",\n                        {\n                          \"tablename\": {\n                            \"Ref\": \"UsersTable\"\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      \"Fn::Sub\": [\n                        \"arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}/stream/*\",\n                        {\n                          \"tablename\": {\n                            \"Ref\": \"UsersTable\"\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      \"Fn::Sub\": [\n                        \"arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}\",\n                        {\n                          \"tablename\": {\n                            \"Ref\": \"AppsTable\"\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      \"Fn::Sub\": [\n                        \"arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}/*\",\n                        {\n                          \"tablename\": {\n                            \"Ref\": \"AppsTable\"\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      \"Fn::Sub\": [\n                        \"arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}/stream/*\",\n                        {\n                          \"tablename\": {\n                            \"Ref\": \"AppsTable\"\n                          }\n                        }\n                      ]\n                    }\n                  ]\n                }\n              ]\n            }\n          }\n        ]\n      }\n    },\n    \"RoleReflectionPolicy\": {\n      \"Type\": \"AWS::IAM::Policy\",\n      \"DependsOn\": \"Role\",\n      \"Properties\": {\n        \"PolicyName\": \"ArcRoleReflectionPolicy\",\n        \"PolicyDocument\": {\n          \"Statement\": [\n            {\n              \"Effect\": \"Allow\",\n              \"Action\": \"iam:GetRolePolicy\",\n              \"Resource\": {\n                \"Fn::Sub\": [\n                  \"arn:aws:iam::${AWS::AccountId}:role/${role}\",\n                  {\n                    \"role\": {\n                      \"Ref\": \"Role\"\n                    }\n                  }\n                ]\n              }\n            }\n          ]\n        },\n        \"Roles\": [\n          {\n            \"Ref\": \"Role\"\n          }\n        ]\n      }\n    },\n    \"UsersParam\": {\n      \"Type\": \"AWS::SSM::Parameter\",\n      \"Properties\": {\n        \"Type\": \"String\",\n        \"Name\": {\n          \"Fn::Sub\": [\n            \"/${AWS::StackName}/tables/${tablename}\",\n            {\n              \"tablename\": \"users\"\n            }\n          ]\n        },\n        \"Value\": {\n          \"Ref\": \"UsersTable\"\n        }\n      }\n    },\n    \"AppsParam\": {\n      \"Type\": \"AWS::SSM::Parameter\",\n      \"Properties\": {\n        \"Type\": \"String\",\n        \"Name\": {\n          \"Fn::Sub\": [\n            \"/${AWS::StackName}/tables/${tablename}\",\n            {\n              \"tablename\": \"apps\"\n            }\n          ]\n        },\n        \"Value\": {\n          \"Ref\": \"AppsTable\"\n        }\n      }\n    },\n    \"StaticBucketParam\": {\n      \"Type\": \"AWS::SSM::Parameter\",\n      \"Properties\": {\n        \"Type\": \"String\",\n        \"Name\": {\n          \"Fn::Sub\": [\n            \"/${AWS::StackName}/static/${key}\",\n            {\n              \"key\": \"bucket\"\n            }\n          ]\n        },\n        \"Value\": {\n          \"Ref\": \"StaticBucket\"\n        }\n      }\n    },\n    \"StaticFingerprintParam\": {\n      \"Type\": \"AWS::SSM::Parameter\",\n      \"Properties\": {\n        \"Type\": \"String\",\n        \"Name\": {\n          \"Fn::Sub\": [\n            \"/${AWS::StackName}/static/${key}\",\n            {\n              \"key\": \"fingerprint\"\n            }\n          ]\n        },\n        \"Value\": \"false\"\n      }\n    },\n    \"ParameterStorePolicy\": {\n      \"Type\": \"AWS::IAM::Policy\",\n      \"DependsOn\": \"Role\",\n      \"Properties\": {\n        \"PolicyName\": \"ArcParameterStorePolicy\",\n        \"PolicyDocument\": {\n          \"Statement\": [\n            {\n              \"Effect\": \"Allow\",\n              \"Action\": \"ssm:GetParametersByPath\",\n              \"Resource\": {\n                \"Fn::Sub\": [\n                  \"arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}\",\n                  {}\n                ]\n              }\n            }\n          ]\n        },\n        \"Roles\": [\n          {\n            \"Ref\": \"Role\"\n          }\n        ]\n      }\n    }\n  },\n  \"Outputs\": {\n    \"API\": {\n      \"Description\": \"API Gateway\",\n      \"Value\": {\n        \"Fn::Sub\": [\n          \"https://${restApiId}.execute-api.${AWS::Region}.amazonaws.com/staging\",\n          {\n            \"restApiId\": {\n              \"Ref\": \"Ghsk\"\n            }\n          }\n        ]\n      }\n    },\n    \"restApiId\": {\n      \"Description\": \"HTTP restApiId\",\n      \"Value\": {\n        \"Ref\": \"Ghsk\"\n      }\n    },\n    \"BucketURL\": {\n      \"Description\": \"Bucket URL\",\n      \"Value\": {\n        \"Fn::Sub\": [\n          \"http://${bukkit}.s3-website-${AWS::Region}.amazonaws.com\",\n          {\n            \"bukkit\": {\n              \"Ref\": \"StaticBucket\"\n            }\n          }\n        ]\n      }\n    }\n  }\n}",
			"canonicalURL": "/github.com/Web-Dev-Collaborative/Github-Based-Projects@7f8f7189337dfcc351c3215d1b2a7b5e8252c9f0/-/blob/gr/github-secrets-keeper/sam.json",
			"externalURLs": [
				{
					"url": "https://github.com/Web-Dev-Collaborative/Github-Based-Projects/blob/7f8f7189337dfcc351c3215d1b2a7b5e8252c9f0/gr/github-secrets-keeper/sam.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}