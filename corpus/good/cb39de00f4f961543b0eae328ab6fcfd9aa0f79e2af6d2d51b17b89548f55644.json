{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/maasglobal/maas-tsp-api"
		},
		"file": {
			"name": "maas-v1.yml",
			"size": 0,
			"path": "specs/maas-v1.yml",
			"byteSize": 17209,
			"content": "openapi: 3.0.0\nservers: []\ninfo:\n  version: 1.0.0\n  title: MaaS-TSP\n  description: \u003e\n    **DISCLAIMER** This version of TSP API are **deprecated**. Please consult latest version at source code [repository](https://github.com/maasglobal/maas-tsp-api/)\n\n\n    This is a API specification of REST endpoints that a Transport Service\n    Provider (TSP) should implement to receive messages from MaaS. It is written\n    in machine readable [Swagger](http://swagger.io/) format, so thatAPI\n    endpoints, validators and test clients can be generated from the\n    documentation.\n\n\n    In addition to this documentation, MaaS maintains a [reference\n    implementation (**TODO**)](https://github.com/maasglobal/maas-tsp-api) with\n    test cases. It is also running as a [reference service\n    (**TODO**)](https://tsp.maas.global/).\n\n\n    Right now MaaS TSP API consists of the Booking API. In addition, a need for\n    customer feedback API (for mediating customer feedback to a TSP) and\n    administration API (for changing API keys etc.) may be defined.\n\n\n    ## Versions\n\n    ### 1.0.0. Initial release (2018)\n\n    **deprecated**\n      \n      * [OpenAPI Specification](specs/maas-v1.yml)\n      * [Documentation](?maas-v1.yml)\n      * [SwaggerUI](swagger-ui.html?urls.primaryName=maas-v1.yml)\n      * Source code [repository](https://github.com/maasglobal/maas-tsp-api/tree/v1.0)\n\n    ### 1.1.0. Current version\n\n    **under development**\n\n      * [OpenAPI Specification](specs/booking.json)\n      * [Documentation](?booking.json)\n      * [SwaggerUI](swagger-ui.html?urls.primaryName=booking.yml)\n      * Source code [repository](https://github.com/maasglobal/maas-tsp-api/)\n  termsOfService: 'http://api.maas.global/terms/'\n  contact:\n    name: MaaS API Team\n    email: developers@maas.fi\n    url: 'http://maas.fi/'\n  license:\n    name: MIT\n    url: 'http://opensource.org/licenses/MIT'\ntags:\n  - name: Booking\n    description: \u003e-\n      Booking related APIs are the core of a TSP implementation.\n      Correspondingly, a Booking is the main object exchanged between MaaS and a\n      TSP.\n    externalDocs:\n      description: Booking scenarios\n      url: 'https://github.com/maasglobal/maas-tsp-api/blob/master/specs/Booking.md'\n  - name: Listing\n    description: \u003e-\n      Before a booking can be made via a TSP, available options at a given\n      location can be listed as follows\n  - name: TODO Feedback\n    description: \u003e-\n      In order to receive customer feedback through MaaS, TSP may implement\n      these APIs.\n  - name: TODO Admin\n    description: \u003e-\n      In the future MaaS will implement machine-readable APIs that a TSP may use\n      to update GTFS route information, API keys and other information that is\n      needed for communicating between MaaS and a TSP.\nsecurity:\n  - key: []\npaths:\n  /bookings/options/:\n    get:\n      description: \u003e-\n        Returns available transport options for given coordinates. Start time\n        can be defined, but is optional. If startTime is not provided, but\n        required by the third party API, a default value of \"Date.now()\" is\n        used.\n      tags:\n        - Listing\n      parameters:\n        - name: from\n          description: \"User's location in comma separated form e.g. 60.123,27.456\"\n          in: query\n          required: true\n          schema:\n            type: string\n            pattern: \u003e-\n              ^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?),\\s*[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?)$\n        - name: to\n          description: 'A desired destination e.g. 60.123,27.456'\n          in: query\n          required: false\n          schema:\n            type: string\n            pattern: \u003e-\n              ^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?),\\s*[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?)$\n      responses:\n        '200':\n          description: \u003e-\n            Available transport methods matching the given query parameters. If\n            no transport methods are available, an empty array is returned.\n          content:\n            application/json:\n              schema:\n                name: options\n                type: array\n                description: Available transport options for the queried TSP\n                items:\n                  $ref: '#/components/schemas/options'\n        '400':\n          description: \u003e-\n            If coordinates given in the request are invalid the server returns\n            400 Bad request as a response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n  /bookings/:\n    get:\n      description: Returns the `Booking` that has been created earlier\n      tags:\n        - Booking\n      parameters:\n        - name: state\n          description: The state the booking to fetch\n          in: query\n          required: true\n          schema:\n            type: string\n            format: \u003e-\n              enum - BOOKED - CANCELLED - PAID - UPDATE_REQUESTED - UPDATED -\n              STARTED - FINISHED\n      responses:\n        '200':\n          description: The bookings matching the query\n          content:\n            application/json:\n              schema:\n                type: array\n                description: The bookings that matched the query (zero or more)\n                minItems: 0\n                items:\n                  $ref: '#/components/schemas/booking'\n        '400':\n          description: Bad request (invalid query parameters)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        '401':\n          description: Authorization error (invalid API key)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      x-serverless-endpoint: echo~GET\n    post:\n      description: \u003e-\n        Creates a new `Booking` for the TSP in **booked** state. The returned\n        object will be a refrence that is passed back \u0026 forth throughout the\n        booking life cycle.\n\n        The Booking may be modified in the response, e.g. location being\n        adjusted for a more suitable pick-up location.\n\n        In addition, the service may contain a **meta** attribute for arbitrary\n        TSP metadata that the TSP needs later, and **token** attribute depicting\n        how long the current state is valid.\n      tags:\n        - Booking\n      responses:\n        '200':\n          description: A new booking was succesfully created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/booking'\n        '400':\n          description: Bad request (invalid body parameters)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        '401':\n          description: Authorization error (invalid API key)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/newBooking'\n        description: New `Booking` data\n        required: true\n      parameters: []\n  '/bookings/{id}':\n    get:\n      description: Returns the `Bookings` that have been created through the system.\n      tags:\n        - Booking\n      parameters:\n        - name: id\n          in: path\n          description: Booking identifier\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The booking was found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/booking'\n        '400':\n          description: Bad request (invalid query or body parameters)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        '401':\n          description: Authorization error (invalid API key)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        '404':\n          description: The booking was not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    put:\n      description: \u003e-\n        Modifies the state of a `Booking`, e.g. **cancels**, **pays** or\n        **reschedules** it. The previous booking information is passed forward\n        as-is for reference.\n      tags:\n        - Booking\n      parameters:\n        - name: id\n          in: path\n          description: Booking identifier\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The booking was modified\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/booking'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/booking'\n        description: New `Booking` data\n        required: true\ncomponents:\n  securitySchemes:\n    key:\n      description: \u003e\n        MaaS can authenticate using an access token as part of the HTTP(S)\n        headers. The keys are sent as part of every request that MaaS makes to\n        the TSP API with a `x-api-key` custom header option.\n      type: apiKey\n      name: X-Api-Key\n      in: header\n  schemas:\n    error:\n      type: object\n      description: \u003e-\n        An error that the service may send, e.g. in case of invalid input,\n        missing authorization or internal service error.\n      required:\n        - message\n        - code\n      properties:\n        message:\n          type: string\n          description: A human readable error message (preferrably in English)\n        code:\n          type: string\n          description: 'A TSP internal error code, used for reference'\n    newBooking:\n      type: object\n      description: \"A new booking, created by MaaS POST request in 'new' state\"\n      required:\n        - leg\n        - customer\n      properties:\n        state:\n          type: string\n          description: The state of the booking (always new for new bookings)\n          enum:\n            - NEW\n        leg:\n          $ref: '#/components/schemas/leg'\n        customer:\n          $ref: '#/components/schemas/customer'\n    booking:\n      type: object\n      description: \u003e-\n        The booking information describing the state and details of the\n        transaction\n      allOf:\n        - $ref: '#/components/schemas/newBooking'\n      properties:\n        id:\n          description: The identifier MaaS will be using to referring to the booking\n          type: string\n        state:\n          $ref: '#/components/schemas/bookingState'\n        terms:\n          $ref: '#/components/schemas/bookingState'\n        token:\n          $ref: '#/components/schemas/token'\n        meta:\n          description: Arbitrary metadata that a TSP can add\n          type: object\n      required:\n        - id\n        - state\n        - leg\n        - customer\n        - token\n    bookingState:\n      description: The life-cycle state of the booking (from NEW to FINISHED)\n      type: string\n      enum:\n        - NEW\n        - BOOKED\n        - CANCELLED\n        - PAID\n        - UPDATE_REQUESTED\n        - UPDATED\n        - STARTED\n        - FINISHED\n    token:\n      description: \u003e-\n        The validity token (such as booking ID, travel ticket etc.) that MaaS\n        clients will display to validate the trip when starting the leg.\n      properties:\n        validityDuration:\n          description: \u003e-\n            The rules that MaaS will interpret to schedule, re-validate or\n            cancel the booking.\n          type: object\n          properties:\n            from:\n              description: The starting time from which the ticket is valid\n              $ref: '#/components/schemas/time'\n            to:\n              description: The finishing time the ticket is valid for\n              $ref: '#/components/schemas/time'\n        meta:\n          description: \u003e-\n            Arbitrary metadata the TSP may pass along the ticket to the client\n            (e.g. a booking code, base64 encoded binary)\n          type: object\n    customer:\n      type: object\n      required:\n        - id\n        - firstName\n        - lastName\n      properties:\n        id:\n          description: The identifier MaaS uses to identify the customer\n          type: string\n        firstName:\n          description: First name of the customer (e.g. John)\n          type: string\n        lastName:\n          description: Last name of the customer (e.g. Doe)\n          type: string\n        phone:\n          description: Phone number that the customer may be reached from\n          type: string\n    options:\n      type: object\n      description: Containing an array of available options matching the query\n      properties:\n        leg:\n          $ref: '#/components/schemas/options_leg'\n        meta:\n          $ref: '#/components/schemas/options_meta'\n    options_leg:\n      type: object\n      properties:\n        startTime:\n          $ref: '#/components/schemas/time'\n        endTime:\n          $ref: '#/components/schemas/time'\n        from:\n          $ref: '#/components/schemas/options_coordinates'\n        to:\n          $ref: '#/components/schemas/options_coordinates'\n    options_coordinates:\n      type: object\n      properties:\n        lat:\n          $ref: '#/components/schemas/lat'\n        lon:\n          $ref: '#/components/schemas/lon'\n    options_meta:\n      type: object\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n        image:\n          type: string\n          format: url\n        car:\n          type: object\n          properties:\n            passengers:\n              type: integer\n    leg:\n      type: object\n      description: \u003e-\n        A OpenTripPlanner compatible definition of a leg (see OpenTripPlanner\n        docs for reference)\n      additionalProperties: true\n      properties:\n        from:\n          description: The coordinates the TSP should use to resolve leg start location\n          $ref: '#/components/schemas/place'\n        to:\n          description: The coordinates the TSP should use to resolve leg finish location\n          $ref: '#/components/schemas/place'\n        startTime:\n          $ref: '#/components/schemas/time'\n        endTime:\n          $ref: '#/components/schemas/time'\n        mode:\n          $ref: '#/components/schemas/mode'\n        departureDelay:\n          $ref: '#/components/schemas/duration'\n        arrivalDelay:\n          $ref: '#/components/schemas/duration'\n        distance:\n          $ref: '#/components/schemas/distance'\n        fare:\n          $ref: '#/components/schemas/fare'\n        route:\n          type: string\n        routeShortName:\n          type: string\n        routeLongName:\n          type: string\n        agencyId:\n          type: string\n        legGeometry:\n          $ref: '#/components/schemas/legGeometry'\n      required:\n        - from\n        - to\n        - mode\n        - startTime\n        - endTime\n    place:\n      type: object\n      additionalProperties: true\n      properties:\n        name:\n          description: Human readable name of the place\n          type: string\n        stopId:\n          type: string\n        stopCode:\n          type: string\n        lat:\n          $ref: '#/components/schemas/lat'\n        lon:\n          $ref: '#/components/schemas/lon'\n      required:\n        - lon\n        - lat\n    lat:\n      type: number\n      minimum: -90\n      maximum: 90\n    lon:\n      type: number\n      minimum: -180\n      maximum: 180\n    legGeometry:\n      type: object\n      additionalProperties: true\n      properties:\n        points:\n          type: string\n          minLength: 1\n    time:\n      description: \u003e-\n        A UTC timestamp (number of milliseconds in a Date object since January\n        1, 1970, 00:00:00)\n    duration:\n      description: A duration of some time (relative to time) in milliseconds\n      type: integer\n      maximum: 2147483647\n      minimum: 0\n    distance:\n      description: The estimated distance travelled in the leg (in meters)\n      type: integer\n      minimum: 0\n    fare:\n      description: Arbitrary fare data that MaaS will use internally\n      type: object\n    mode:\n      description: The type of the leg MaaS uses to identify the leg\n  links: {}\n  callbacks: {}\n",
			"canonicalURL": "/github.com/maasglobal/maas-tsp-api@66a1e4ed7d7e7449993553dbb66f61d666d51bae/-/blob/specs/maas-v1.yml",
			"externalURLs": [
				{
					"url": "https://github.com/maasglobal/maas-tsp-api/blob/66a1e4ed7d7e7449993553dbb66f61d666d51bae/specs/maas-v1.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}