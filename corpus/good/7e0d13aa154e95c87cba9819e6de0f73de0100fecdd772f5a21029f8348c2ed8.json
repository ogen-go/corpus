{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/sagikazarmark/todobackend-go-kit"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "api/todo/v1/openapi.yaml",
			"byteSize": 6658,
			"content": "openapi: 3.0.0\n\ninfo:\n    title: Todo API\n    description: |\n        The Todo API manages a list of todo items as described by the TodoMVC backend project: http://todobackend.com\n    version: 1.0.0\n\nservers:\n    -   url: https://todo.api/todos\n    -   url: http://todo.api/todos\n    -   url: http://localhost:8000/todos\n\ntags:\n    -   name: TodoList\n        description: Manage a todo list\n\npaths:\n    /todos:\n        post:\n            summary: Add a new item to the list\n            operationId: addItem\n            tags: [TodoList]\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/AddTodoItemRequest\"\n                required: true\n            responses:\n                \"201\":\n                    description: \"Item was created successfully\"\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/TodoItem\"\n                \"400\":\n                    $ref: \"#/components/responses/InvalidRequest\"\n                \"422\":\n                    $ref: \"#/components/responses/ValidationError\"\n                default:\n                    $ref: \"#/components/responses/Error\"\n\n        get:\n            summary: List items\n            operationId: listItems\n            tags: [TodoList]\n            responses:\n                \"200\":\n                    description: \"A list of items\"\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/TodoItems\"\n                default:\n                    $ref: \"#/components/responses/Error\"\n\n        delete:\n            summary: Delete all items\n            operationId: deleteItems\n            tags: [TodoList]\n            responses:\n                \"204\":\n                    description: \"Items were deleted successfully\"\n                default:\n                    $ref: \"#/components/responses/Error\"\n\n    \"/todos/{id}\":\n        parameters:\n            -   in: path\n                name: id\n                required: true\n                description: Item ID\n                schema:\n                    type: string\n\n        get:\n            summary: Get an item\n            operationId: getItem\n            tags: [TodoList]\n            responses:\n                \"200\":\n                    description: \"An item\"\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/TodoItem\"\n                \"404\":\n                    $ref: \"#/components/responses/NotFound\"\n                default:\n                    $ref: \"#/components/responses/Error\"\n\n        patch:\n            summary: Update an existing item\n            operationId: updateItem\n            tags: [TodoList]\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/UpdateTodoItemRequest\"\n                required: true\n            responses:\n                \"200\":\n                    description: \"Item was successfully updated\"\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/TodoItem\"\n                \"404\":\n                    $ref: \"#/components/responses/NotFound\"\n                default:\n                    $ref: \"#/components/responses/Error\"\n\n        delete:\n            summary: Delete an item\n            operationId: deleteItem\n            tags: [TodoList]\n            responses:\n                \"204\":\n                    description: \"Item was successfully deleted\"\n                default:\n                    $ref: \"#/components/responses/Error\"\n\ncomponents:\n    responses:\n        Error:\n            description: \"Unexpected error\"\n            content:\n                application/json:\n                    schema:\n                        $ref: \"#/components/schemas/Error\"\n\n        InvalidRequest:\n            description: \"Invalid request\"\n            content:\n                application/json:\n                    schema:\n                        $ref: \"#/components/schemas/Error\"\n\n        ValidationError:\n            description: \"The request did not pass the business validation rules\"\n            content:\n                application/json:\n                    schema:\n                        $ref: \"#/components/schemas/Error\"\n\n        NotFound:\n            description: \"The resource cannot be found\"\n            content:\n                application/json:\n                    schema:\n                        $ref: \"#/components/schemas/Error\"\n\n    schemas:\n        Error:\n            type: object\n            properties:\n                type:\n                    type: string\n                title:\n                    type: string\n                status:\n                    type: integer\n                detail:\n                    type: string\n                instance:\n                    type: string\n            required:\n                - type\n            example:\n                type: about:blank\n                title: Not Found\n                status: 404\n\n        AddTodoItemRequest:\n            type: object\n            properties:\n                title:\n                    type: string\n                order:\n                    type: integer\n            required:\n                - title\n                - order\n\n        TodoItem:\n            type: object\n            properties:\n                id:\n                    type: string\n                title:\n                    type: string\n                completed:\n                    type: boolean\n                order:\n                    type: integer\n                url:\n                    type: string\n                    format: uri\n            required:\n                - id\n                - title\n                - completed\n                - order\n                - url\n\n        TodoItems:\n            type: array\n            items:\n                $ref: \"#/components/schemas/TodoItem\"\n\n        UpdateTodoItemRequest:\n            type: object\n            properties:\n                title:\n                    type: string\n                    nullable: true\n                completed:\n                    type: boolean\n                    nullable: true\n                order:\n                    type: integer\n                    nullable: true\n",
			"canonicalURL": "/github.com/sagikazarmark/todobackend-go-kit@78d3c55d4e8def8f07e1a4a2794e76794e922538/-/blob/api/todo/v1/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/sagikazarmark/todobackend-go-kit/blob/78d3c55d4e8def8f07e1a4a2794e76794e922538/api/todo/v1/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}