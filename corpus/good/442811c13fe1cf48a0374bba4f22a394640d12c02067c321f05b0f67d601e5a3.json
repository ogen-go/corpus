{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Joystream/joystream"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "storage-node/src/api-spec/openapi.yaml",
			"byteSize": 6831,
			"content": "openapi: 3.0.3\ninfo:\n  title: Storage node API\n  description: Storage node API\n  contact:\n    email: info@joystream.org\n  license:\n    name: GPL-3.0-only\n    url: https://opensource.org/licenses/GPL-3.0\n  version: 0.1.0\nexternalDocs:\n  description: Storage node API\n  url: https://github.com/Joystream/joystream/issues/2224\nservers:\n  - url: http://localhost:3333/api/v1/\n\ntags:\n  - name: files\n    description: Storage node Files API\n  - name: state\n    description: Storage node State API\n\npaths:\n  /files/{id}:\n    get:\n      operationId: filesApi.getFile\n      description: Returns a media file.\n      tags:\n        - files\n      parameters:\n        - name: id\n          required: true\n          in: path\n          description: Data object ID\n          schema:\n            type: string\n      responses:\n        200:\n          description: Ok\n          content:\n            video/*:\n              schema:\n                type: string\n                format: binary\n            audio/*:\n              schema:\n                type: string\n                format: binary\n            image/*:\n              schema:\n                type: string\n                format: binary\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        400:\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: File not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: Unknown server error\n    head:\n      operationId: filesApi.getFileHeaders\n      description: Returns a media file headers.\n      tags:\n        - files\n      parameters:\n        - name: id\n          required: true\n          in: path\n          description: Data object ID\n          schema:\n            type: string\n      responses:\n        200:\n          description: Ok\n        400:\n          description: Bad request\n        404:\n          description: File not found\n        500:\n          description: Unknown server error\n  /files:\n    post:\n      description: Upload data\n      operationId: filesApi.uploadFile\n      tags:\n        - files\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              required:\n                - dataObjectId\n                - storageBucketId\n                - bagId\n              properties:\n                file:\n                  description: Data file\n                  type: string\n                  format: binary\n                dataObjectId:\n                  description: Data object runtime ID\n                  type: string\n                  pattern: '^\\d+$' #integer\n                storageBucketId:\n                  description: Storage bucket ID\n                  type: string\n                  pattern: '^\\d+$' #integer\n                bagId:\n                  description: Bag ID\n                  type: string\n        required: true\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: string\n        400:\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /state/data-objects:\n    get:\n      operationId: stateApi.getAllLocalDataObjects\n      description: Returns all local data objects.\n      tags:\n        - state\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataObjectResponse'\n\n  /state/bags/{bagId}/data-objects:\n    get:\n      operationId: stateApi.getLocalDataObjectsByBagId\n      description: Returns local data objects for the bag.\n      tags:\n        - state\n      parameters:\n        - name: bagId\n          required: true\n          in: path\n          description: Bag ID\n          schema:\n            type: string\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataObjectResponse'\n\n  /version:\n    get:\n      operationId: stateApi.getVersion\n      description: Returns server version.\n      tags:\n        - state\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VersionResponse'\n  /state/data:\n    get:\n      operationId: stateApi.getLocalDataStats\n      description: Returns local uploading directory stats.\n      tags:\n        - state\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataStatsResponse'\n\ncomponents:\n  schemas:\n    TokenRequest:\n      type: object\n      required:\n        - data\n        - signature\n      properties:\n        data:\n          type: object\n          required:\n            - memberId\n            - accountId\n            - dataObjectId\n            - storageBucketId\n            - bagId\n          properties:\n            memberId:\n              type: integer\n              format: int64\n            accountId:\n              type: string\n            dataObjectId:\n              type: integer\n              format: int64\n            storageBucketId:\n              type: integer\n              format: int64\n            bagId:\n              type: string\n        signature:\n          type: string\n    ErrorResponse:\n      type: object\n      required:\n        - message\n      properties:\n        type:\n          type: string\n        message:\n          type: string\n    DataStatsResponse:\n      type: object\n      required:\n        - totalSize\n        - objectNumber\n      properties:\n        totalSize:\n          type: integer\n          format: int64\n        objectNumber:\n          type: integer\n          format: int64\n        tempDirSize:\n          type: integer\n          format: int64\n        tempDownloads:\n          type: integer\n          format: int64\n    VersionResponse:\n      type: object\n      required:\n        - version\n      properties:\n        version:\n          type: string\n        userAgent:\n          type: string\n    DataObjectResponse:\n      type: array\n      items:\n        type: string\n",
			"canonicalURL": "/github.com/Joystream/joystream@5fbe3b7bbb531cabb9f54480dd5092f19bb272e8/-/blob/storage-node/src/api-spec/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Joystream/joystream/blob/5fbe3b7bbb531cabb9f54480dd5092f19bb272e8/storage-node/src/api-spec/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}