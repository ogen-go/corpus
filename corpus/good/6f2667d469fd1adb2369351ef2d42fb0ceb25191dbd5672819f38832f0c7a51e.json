{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "patrowl.local-1.0.0-openapi.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/patrowl.local-1.0.0-openapi.yaml",
			"byteSize": 10459,
			"content": "openapi: 3.0.0\nservers:\n  - url: http://localhost:5001/engines/nmap/\n  - url: http://localhost:5004/engines/ssllabs/\n  - url: http://localhost:5005/engines/arachni/\n  - url: http://localhost:5006/engines/owl_dns/\n  - url: http://localhost:5007/engines/virustotal/\n  - url: http://localhost:5008/engines/urlvoid/\n  - url: http://localhost:5009/engines/cortex/\n  - url: http://localhost:5012/engines/owl_leaks/\n  - url: http://localhost:5013/engines/owl_code/\n  - url: http://localhost:5014/engines/sslscan/\ninfo:\n  contact:\n    email: getsupport@patrowl.io\n    x-twitter: patrowl_io\n  description: This is the API documentation for Patrowl Engines usage.\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  title: Swagger API-REST for Patrowl Engines\n  version: 1.0.0\n  x-apisguru-categories:\n    - security\n  x-logo:\n    url: https://twitter.com/patrowl_io/profile_image?size=original\n  x-origin:\n    - converter:\n        url: https://github.com/lucybot/api-spec-converter\n        version: 2.7.18\n      format: openapi\n      url: https://raw.githubusercontent.com/Patrowl/PatrowlDocs/master/api/openapi-patrowl-engines.yaml\n      version: \"3.0\"\n  x-providerName: patrowl.local\nexternalDocs:\n  description: Find out more about Patrowl\n  url: https://github.com/Patrowl/PatrowlDocs\ntags:\n  - description: SSLScan API documentation\n    externalDocs:\n      description: Find out more\n      url: https://github.com/Patrowl/PatrowlDocs\n    name: patrowl-engine\npaths:\n  /:\n    get:\n      description: Return index page\n      operationId: getDefaultPage\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n          description: successful operation\n      summary: Index page\n      tags:\n        - patrowl-engine\n  /clean:\n    get:\n      description: Clean all current scans.\n      operationId: CleanScansPage\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n          description: successful operation\n      summary: Clean all scans\n      tags:\n        - patrowl-engine\n  \"/clean/{scanId}\":\n    get:\n      description: Clean scan identified by id.\n      operationId: CleanScanPage\n      parameters:\n        - description: Numeric ID of the scan to clean\n          in: path\n          name: scanId\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n          description: successful operation\n      summary: Clean scan\n      tags:\n        - patrowl-engine\n  \"/getfindings/{scanId}\":\n    get:\n      description: Get findings on finished scans.\n      operationId: GetFindingPage\n      parameters:\n        - description: Numeric ID of the scan to get findings\n          in: path\n          name: scanId\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Findings\"\n          description: successful operation\n      summary: Get findings on finished scans\n      tags:\n        - patrowl-engine\n  /info:\n    get:\n      description: Return information on engine.\n      operationId: getInfoPage\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n          description: successful operation\n      summary: Engine info page\n      tags:\n        - patrowl-engine\n  /liveness:\n    get:\n      description: Return liveness page\n      operationId: getLivenessPage\n      responses:\n        \"200\":\n          description: successful operation\n      summary: Liveness page\n      tags:\n        - patrowl-engine\n  /readiness:\n    get:\n      description: Return liveness page\n      operationId: getReadinessPage\n      responses:\n        \"200\":\n          description: successful operation\n      summary: Readiness page\n      tags:\n        - patrowl-engine\n  /reloadconfig:\n    get:\n      description: Reload the configuration file.\n      operationId: reloadConfigurationPage\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n          description: successful operation\n      summary: Configuration reloading page\n      tags:\n        - patrowl-engine\n  /startscan:\n    post:\n      description: Start a new scan.\n      operationId: StartScanPage\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ScanDefinition\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n          description: successful operation\n      summary: Start a new scan\n      tags:\n        - patrowl-engine\n  /status:\n    get:\n      description: Status all current scans.\n      operationId: StatusScansPage\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n          description: successful operation\n      summary: Status on all scans\n      tags:\n        - patrowl-engine\n  \"/status/{scanId}\":\n    get:\n      description: Status of a scan identified by id.\n      operationId: StatusScanPage\n      parameters:\n        - description: Numeric ID of the scan to get status\n          in: path\n          name: scanId\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n          description: successful operation\n      summary: Status of a scan\n      tags:\n        - patrowl-engine\n  \"/stop/{scanId}\":\n    get:\n      description: Stop a scan identified by id.\n      operationId: StopScanPage\n      parameters:\n        - description: Numeric ID of the scan to stop\n          in: path\n          name: scanId\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n          description: successful operation\n      summary: Stop a scan\n      tags:\n        - patrowl-engine\n  /stopscans:\n    get:\n      description: Stop all current scans.\n      operationId: StopScansPage\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n          description: successful operation\n      summary: Stop all scans\n      tags:\n        - patrowl-engine\n  /test:\n    get:\n      description: Return test page\n      operationId: getTestPage\n      responses:\n        \"200\":\n          description: successful operation\n      summary: Test page\n      tags:\n        - patrowl-engine\ncomponents:\n  schemas:\n    ApiResponse:\n      properties:\n        page:\n          type: string\n        status:\n          type: string\n    Findings:\n      items:\n        properties:\n          confidence:\n            type: string\n          description:\n            type: string\n          issue_id:\n            type: integer\n          meta_links:\n            items:\n              type: string\n            type: array\n          meta_risk:\n            properties:\n              cvss_base_score:\n                items:\n                  type: string\n                type: array\n              cvss_vector:\n                items:\n                  type: string\n                type: array\n              exploit_available:\n                items:\n                  type: string\n                type: array\n              exploitability_ease:\n                items:\n                  type: string\n                type: array\n              patch_publication_date:\n                items:\n                  type: string\n                type: array\n            type: object\n          meta_tags:\n            items:\n              type: string\n            type: array\n          meta_vuln_refs:\n            properties:\n              bid:\n                items:\n                  type: string\n                type: array\n              cpe:\n                items:\n                  type: string\n                type: array\n              cve:\n                items:\n                  type: string\n                type: array\n              cwe:\n                items:\n                  type: string\n                type: array\n            type: object\n          raw:\n            type: string\n          severity:\n            enum:\n              - info\n              - low\n              - medium\n              - high\n            type: string\n          solution:\n            type: string\n          target_addrs:\n            items:\n              type: string\n            type: array\n          target_proto:\n            items:\n              type: string\n            type: array\n          timestamp:\n            format: date-time\n            type: string\n          title:\n            type: string\n          type:\n            type: string\n        type: object\n      type: array\n    ScanDefinition:\n      properties:\n        assets:\n          items:\n            properties:\n              criticity:\n                enum:\n                  - low\n                  - medium\n                  - high\n                type: string\n              datatype:\n                enum:\n                  - ip\n                  - ip-range\n                  - ip-subnet\n                  - fqdn\n                  - domain\n                  - url\n                  - keyword\n                  - person\n                  - organisation\n                  - path\n                  - application\n                type: string\n              id:\n                example: \"3\"\n                type: string\n              value:\n                example: 8.8.8.8\n                type: string\n            type: object\n          type: array\n        options:\n          type: object\n        scan_id:\n          example: 1\n          type: integer\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/patrowl.local-1.0.0-openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/patrowl.local-1.0.0-openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}