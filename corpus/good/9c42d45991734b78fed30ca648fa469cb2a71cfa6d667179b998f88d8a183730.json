{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/isa-group/RESTest"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "src/test/resources/Foursquare/swagger.yaml",
			"byteSize": 10552,
			"content": "openapi: 3.0.0\ninfo:\n  description: The Places API offers real-time access to Foursquare’s global database of\n    rich venue data and user content to power your location-based experiences in\n    your app or website.\n  version: 1.0.0\n  title: Places API Foursquare\ntags:\n  - name: Venues\n    description: Foursquare Venues\npaths:\n  /venues/search:\n    get:\n      tags:\n        - Venues\n      summary: Search for Venues\n      description: Returns a list of venues near the current location, optionally matching\n        a search term. To ensure the best possible results, pay attention to the\n        intent parameter below. Note that most of the fields returned inside a\n        venue can be optional. The user may create a venue that has no address,\n        city, or state (the venue is created instead at the lat/long specified).\n        Your client should handle these conditions safely. For more robust venue\n        information (photos/tips/etc.), please see our venue details endpoint.\n      operationId: searchVenues\n      parameters:\n        - in: query\n          required: true\n          name: v\n          description: date in YYYYMMDD format that represents the 'version' of the API for\n            which you expect from Foursquare.\n          schema:\n            type: string\n        - in: query\n          required: false\n          name: locale\n          description: locale\n          schema:\n            type: string\n            enum:\n              - en\n              - es\n              - fr\n              - de\n              - it\n              - ja\n              - th\n              - tr\n              - ko\n              - ru\n              - pt\n              - id\n            default: en\n        - in: query\n          name: ll\n          description: Required unless near is provided. Latitude and longitude of the\n            user’s location. Optional if using intent=global\n          required: false\n          schema:\n            type: string\n        - in: query\n          required: false\n          name: near\n          description: required unless ll is provided. A string naming a place in the\n            world. If the near string is not geocodable, returns a\n            failed_geocode error. Otherwise, searches within the bounds of the\n            geocode and adds a geocode object to the response.\n          schema:\n            type: string\n#        - in: query\n#          name: name\n#          required: false\n#          description: Name of the venue\n#          schema:\n#            type: string\n#        - in: query\n#          required: false\n#          name: intent\n#          description: One of the values below, indicating your intent in performing the\n#            search. If no value is specified, defaults to checkin.\n#          schema:\n#            type: string\n#            enum:\n#              - checkin\n#              - global\n#              - browse\n#              - match\n#            default: checkin\n        - in: query\n          required: false\n          name: radius\n          description: Limit results to venues within this many meters of the specified\n            location. Defaults to a city-wide area. Only valid for requests with\n            intent=browse, or requests with intent=checkin and categoryId or\n            query. Does not apply to intent=match requests. The maximum\n            supported radius is currently 100,000 meters.\n          schema:\n            type: integer\n            maximum: 100000\n#        - in: query\n#          required: false\n#          name: sw\n#          description: With ne, limits results to the bounding box defined by the latitude\n#            and longitude given by sw as its south-west corner, and ne as its\n#            north-east corner. The bounding box is only supported for\n#            intent=browse searches. Not valid with ll or radius. Bounding boxes\n#            with an area up to approximately 10,000 square kilometers are\n#            supported.\n#          schema:\n#            type: string\n#        - in: query\n#          required: false\n#          name: ne\n#          description: See sw\n#          schema:\n#            type: string\n        - in: query\n          required: false\n          name: query\n          description: A search term to be applied against venue names.\n          schema:\n            type: string\n        - in: query\n          required: false\n          name: limit\n          description: Number of results to return, up to 50.\n          schema:\n            type: integer\n            maximum: 50\n        - in: query\n          required: false\n          name: categoryId\n          description: A comma separated list of categories to limit results to. If you\n            specify categoryId. Specifying a radius may improve results. If\n            specifying a top-level category, all sub-categories will also match\n            the query. Does not apply to intent=match requests.\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          required: false\n          name: llAcc\n          description: Accuracy of latitude and longitude, in meters.\n          schema:\n            type: number\n        - in: query\n          required: false\n          name: alt\n          description: Altitude of the user’s location, in meters.\n          schema:\n            type: integer\n        - in: query\n          required: false\n          name: altAcc\n          description: Accuracy of the user’s altitude, in meters.\n          schema:\n            type: number\n        - in: query\n          required: false\n          name: url\n          description: A third-party URL which we will attempt to match against our map of\n            venues to URLs.\n          schema:\n            type: string\n        - in: query\n          required: false\n          name: providerId\n          description: Identifier for a known third party that is part of our map of venues\n            to URLs, used in conjunction with linkedId.\n          schema:\n            type: string\n        - in: query\n          required: false\n          name: linkedId\n          description: Identifier used by third party specified in providerId, which we\n            will attempt to match against our map of venues to URLs.\n          schema:\n            type: string\n      x-dependencies:\n        - Or(ll, near);\n        - IF radius THEN categoryId OR query;\n        - AllOrNone(providerId, linkedId);\n        # Alternative version of dependencies\n#        - IF ZeroOrOne(providerId, linkedId) THEN Or(intent, ll, near);\n#        - IF ZeroOrOne(providerId, linkedId) AND intent=='global' THEN query;\n#        - IF ZeroOrOne(providerId, linkedId) AND intent=='match' THEN (name OR query) AND (ll OR near);\n#        - IF ZeroOrOne(providerId, linkedId) AND intent=='checkin' THEN ll OR near;\n#        - IF ZeroOrOne(providerId, linkedId) AND intent=='browse' THEN OnlyOne(sw AND ne, near OR (ll AND radius)) AND ZeroOrOne(sw AND ne, radius) AND AllOrNone(sw, ne);\n        # Old dependencies\n#        - Or(ll, near);\n#        - IF intent=='browse' THEN OnlyOne(ll AND radius, sw AND ne);\n#        - IF intent=='match' THEN name AND ll;\n#        - IF radius THEN intent=='browse' OR (intent=='checkin' AND (categoryId OR query));\n#        - AllOrNone(sw, ne);\n#        - IF sw OR ne THEN intent=='browse';\n#        - IF sw OR ne THEN NOT (ll OR radius);\n#        - AllOrNone(providerId, linkedId);\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/VenueSearchResponse\"\n        \"400\":\n          description: Bad request\nservers:\n  - url: https://api.foursquare.com/v2\ncomponents:\n  schemas:\n    Venue:\n      type: object\n      properties:\n        id:\n          type: string\n          description: A unique string identifier for this venue.\n        name:\n          type: string\n          description: The best known name for this venue.\n        location:\n          $ref: \"#/components/schemas/Location\"\n        categories:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Category\"\n        venuePage:\n          type: object\n          properties:\n            id:\n              type: string\n    Location:\n      type: object\n      properties:\n        address:\n          type: string\n        crossStreet:\n          type: string\n        cc:\n          type: string\n        city:\n          type: string\n        state:\n          type: string\n        postalCode:\n          type: string\n        country:\n          type: string\n        lat:\n          type: number\n          format: double\n        lng:\n          type: number\n          format: double\n        isFuzzed:\n          type: boolean\n        labeledLatLngs:\n          type: array\n          items:\n            $ref: \"#/components/schemas/LabeledLatLng\"\n        distance:\n          type: integer\n          format: int32\n        formattedAddress:\n          type: array\n          items:\n            type: string\n    LabeledLatLng:\n      type: object\n      properties:\n        label:\n          type: string\n        lat:\n          type: number\n          format: double\n        lng:\n          type: number\n          format: double\n    Category:\n      type: object\n      properties:\n        id:\n          type: string\n          description: A unique identifier for this category.\n        name:\n          type: string\n          description: Name of the category.\n        pluralName:\n          type: string\n          description: Pluralized version of the category name.\n        shortName:\n          type: string\n          description: Shorter version of the category name.\n        icon:\n          $ref: \"#/components/schemas/Icon\"\n        primary:\n          type: boolean\n          description: If this is the primary category for parent venue object.\n    Icon:\n      type: object\n      properties:\n        prefix:\n          type: string\n        suffix:\n          type: string\n    VenueSearchResponse:\n      type: object\n      properties:\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        response:\n          $ref: \"#/components/schemas/Response\"\n    Meta:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        requestId:\n          type: string\n    Response:\n      type: object\n      properties:\n        venues:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Venue\"\n#        geocode:\n#          type: object\n#          additionalProperties: true",
			"canonicalURL": "/github.com/isa-group/RESTest@e54ed029ad579e722668a984c5fa64e20244ce08/-/blob/src/test/resources/Foursquare/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/isa-group/RESTest/blob/e54ed029ad579e722668a984c5fa64e20244ce08/src/test/resources/Foursquare/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}