{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "lotadata.com-2.0.0-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/lotadata.com-2.0.0-swagger.yaml",
			"byteSize": 23692,
			"content": "openapi: 3.0.0\ninfo:\n  description: Access the most exhaustive, accurate and up-to-date collection of global and\n    hyper-local geocoded events and activities across a wide range of categories\n    and genres\n  title: LotaData\n  version: 2.0.0\n  x-apisguru-categories:\n    - location\n  x-logo:\n    backgroundColor: \"#FFFFFF\"\n    url: https://pbs.twimg.com/profile_images/664666044754079744/OtP5eqwm_400x400.png\n  x-origin:\n    - format: swagger\n      url: https://developers.lotadata.com/swagger/spec/apiv2.json\n      version: \"2.0\"\n  x-providerName: lotadata.com\nsecurity:\n  - api_key: []\npaths:\n  /events:\n    get:\n      parameters:\n        - description: List of required EventCategory ids (Tier 1)\n          in: query\n          name: category\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: List of required activity type ids (compliment to category)\n          in: query\n          name: activity\n          schema:\n            type: string\n        - description: List of required ambience ids\n          in: query\n          name: ambience\n          schema:\n            type: string\n        - description: List of required genre ids\n          in: query\n          name: genre\n          schema:\n            type: string\n        - description: Matching on event and place names\n          in: query\n          name: name\n          schema:\n            type: string\n        - description: Text query matching titles, description, various text, tags, category\n          in: query\n          name: q\n          schema:\n            type: string\n        - description: Start on or after date specified (2015-10-16)\n          in: query\n          name: from_day\n          required: false\n          schema:\n            type: string\n        - description: Start on or before date specified (2015-10-16)\n          in: query\n          name: to_day\n          required: false\n          schema:\n            type: string\n        - description: Min capacity at location\n          in: query\n          name: capacity_min\n          required: false\n          schema:\n            type: number\n            format: integer\n        - description: Min capacity at location\n          in: query\n          name: capacity_max\n          required: false\n          schema:\n            type: number\n            format: integer\n        - description: latitude,longitude of the origin point\n          in: query\n          name: center\n          schema:\n            type: string\n        - description: Distance from origin in meters\n          in: query\n          name: radius\n          schema:\n            type: integer\n        - description: Corner of a bounding box (lat,lng). Requires 0 or 2 pairs\n          in: query\n          name: bbox\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Closed custom polygon. Ordered list of lat,lng pairs\n          in: query\n          name: polygon\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Search within specified geopolitical place id\n          in: query\n          name: within\n          required: false\n          schema:\n            type: string\n        - description: Return results starting at specified offset\n          in: query\n          name: offset\n          schema:\n            type: integer\n        - description: Max results to return\n          in: query\n          name: limit\n          schema:\n            type: integer\n        - description: Return results starting at specified offset (summary, context,\n            detail)\n          in: query\n          name: fieldset\n          required: true\n          schema:\n            type: string\n            enum:\n              - summary\n              - detail\n              - context\n              - minicontext\n            default: context\n      responses:\n        \"200\":\n          description: List of matching events\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EventsSearchResponse\"\n        \"400\":\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      summary: Find event occurrences in the area. Returns results at specific place\n        and time, event groups are expanded for every occurrence.\n      tags:\n        - Events\n  \"/events/{id}\":\n    get:\n      parameters:\n        - description: event @id\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: fieldset\n          schema:\n            type: string\n            enum:\n              - summary\n              - detail\n              - context\n              - minicontext\n            default: summary\n      responses:\n        \"200\":\n          description: Requested event\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EventOccurenceDetail\"\n        \"404\":\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      summary: Get Specific event details.\n      tags:\n        - Events\n  /places:\n    get:\n      parameters:\n        - description: List of required PlaceCategory ids (Tier 1)\n          in: query\n          name: category\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: List of required PlaceFunction ids (Tier 2)\n          in: query\n          name: function\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: List of required ambience ids\n          in: query\n          name: ambience\n          schema:\n            type: array\n            items:\n              type: string\n        - description: List of required tags\n          in: query\n          name: tag\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Specific PlaceType to return\n          in: query\n          name: type\n          schema:\n            type: string\n        - description: Match on place names\n          in: query\n          name: name\n          schema:\n            type: string\n        - description: Require an exact name match\n          in: query\n          name: exact\n          schema:\n            type: boolean\n        - description: Min capacity at location\n          in: query\n          name: capacity_min\n          required: false\n          schema:\n            type: number\n            format: integer\n        - description: Min capacity at location\n          in: query\n          name: capacity_max\n          required: false\n          schema:\n            type: number\n            format: integer\n        - description: Address of the place or street component of the address\n          in: query\n          name: street\n          schema:\n            type: string\n        - description: city, town, or neighborhood of the place\n          in: query\n          name: locality\n          schema:\n            type: string\n        - description: region or state\n          in: query\n          name: region\n          schema:\n            type: string\n        - description: Postal or zip code\n          in: query\n          name: postal_code\n          schema:\n            type: string\n        - description: country component of the address\n          in: query\n          name: country\n          schema:\n            type: string\n        - description: latitude,longitude of the origin point\n          in: query\n          name: center\n          schema:\n            type: string\n        - description: Distance from origin in meters\n          in: query\n          name: radius\n          schema:\n            type: integer\n        - description: Corner of a bounding box (lat,lng). Requires 0 or 2 pairs\n          in: query\n          name: bbox\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Closed custom polygon. Ordered list of lat,lng pairs\n          in: query\n          name: polygon\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Search within specified geopolitical place id\n          in: query\n          name: within\n          required: false\n          schema:\n            type: string\n        - description: Return results starting at specified offset\n          in: query\n          name: offset\n          schema:\n            type: integer\n        - description: Max results to return\n          in: query\n          name: limit\n          schema:\n            type: integer\n        - description: Return results starting at specified offset (summary, context,\n            detail)\n          in: query\n          name: fieldset\n          required: true\n          schema:\n            type: string\n            enum:\n              - summary\n              - detail\n              - context\n            default: context\n      responses:\n        \"200\":\n          description: List of matching events\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PlacesSearchResponse\"\n        \"400\":\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      summary: Venues, landmarks, regions, these are all places to search.\n      tags:\n        - Places\n  \"/places/{id}\":\n    get:\n      parameters:\n        - description: place @id\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: fieldset\n          schema:\n            type: string\n            enum:\n              - summary\n              - detail\n              - context\n              - minicontext\n            default: summary\n      responses:\n        \"200\":\n          description: Requested place\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PlaceDetail\"\n        \"404\":\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      summary: Get specific place details\n      tags:\n        - Places\nservers:\n  - url: https://api2.lotadata.com/v2\ncomponents:\n  securitySchemes:\n    api_key:\n      description: Your API key\n      in: query\n      name: api_key\n      type: apiKey\n  schemas:\n    Address:\n      description: Physical world addresss\n      properties:\n        country:\n          type: string\n        formatted:\n          description: Address formatted for display as a single string\n          type: string\n        locality:\n          description: City or town\n          type: string\n        postalCode:\n          type: string\n        region:\n          type: string\n        street:\n          description: Street portion of the address, may sometimes be a common name of the\n            place\n          type: string\n        unit:\n          type: string\n    ContactDetail:\n      properties:\n        displayPhone:\n          type: string\n        email:\n          type: string\n        facebookUrl:\n          type: string\n        instagramName:\n          type: string\n        lastfmUrl:\n          type: string\n        soundcloudUrl:\n          type: string\n        spotifyUrl:\n          type: string\n        twitterName:\n          type: string\n        url:\n          type: string\n        youtubeUrl:\n          type: string\n    Error:\n      properties:\n        cause:\n          properties:\n            expected:\n              type: string\n            path:\n              type: string\n            rule:\n              type: string\n            value:\n              type: string\n        message:\n          type: string\n        status:\n          format: int32\n          type: integer\n        tracking:\n          properties:\n            id:\n              type: string\n            session:\n              type: string\n    EventOccurenceDetail:\n      description: Event Occurrence Detail limited to requested fieldset.\n      properties:\n        \"@id\":\n          description: Unique event id\n          type: string\n        \"@type\":\n          description: Type of occurrence. You will usually see Organized as the type for\n            most events. While Virtual events will get their own Virtual type.\n          enum:\n            - Organized\n            - Screening\n            - Environmental\n            - Virtual\n          type: string\n        activity:\n          description: Associated ActivityType entries\n          items:\n            $ref: \"#/components/schemas/FeatureReference\"\n          type: array\n        ambience:\n          description: expected mood and feel of the event\n          items:\n            $ref: \"#/components/schemas/FeatureReference\"\n          type: array\n        at:\n          $ref: \"#/components/schemas/PlaceReference\"\n        awayTeam:\n          $ref: \"#/components/schemas/FeatureReference\"\n        category:\n          description: Associated EventCategory. May be multiple, such as Charity Music\n            event\n          items:\n            $ref: \"#/components/schemas/FeatureReference\"\n          type: array\n        contactPoint:\n          $ref: \"#/components/schemas/ContactDetail\"\n        description:\n          description: Full description in plain text\n          type: string\n        doorTime:\n          description: Time when the admission starts\n          format: date-time\n          type: string\n        duration:\n          description: Duration of the event in ISO-8601 format (PT45M) - 45 minutes\n          type: string\n        endApprox:\n          description: endDate is approximated based on historical data\n          type: boolean\n        endDate:\n          description: Time when the event ends, if known\n          format: date-time\n          type: string\n        extTaxonomy:\n          description: extended taxonomy such as IAB and Google AdWords\n          items:\n            $ref: \"#/components/schemas/FeatureReference\"\n          type: array\n        genre:\n          description: applicable Genres. (Tier 2 taxonomy). May include related genres\n            from categories, not deemed as primary\n          items:\n            $ref: \"#/components/schemas/FeatureReference\"\n          type: array\n        headline:\n          description: Optional short description in plain text\n          type: string\n        homeTeam:\n          $ref: \"#/components/schemas/FeatureReference\"\n        htmlDescription:\n          description: Full description with HTML formatting, where available\n          type: string\n        image:\n          $ref: \"#/components/schemas/ImageMeta\"\n        inLanguage:\n          $ref: \"#/components/schemas/FeatureReference\"\n        name:\n          description: Name of the event in plain text\n          type: string\n        noTime:\n          description: Specific time of the event is unknown. (shown only when true)\n          type: boolean\n        offers:\n          description: Ticketing options\n          items:\n            $ref: \"#/components/schemas/TicketOffer\"\n          type: array\n        onDemand:\n          description: This event can start at any time during specified window\n          type: boolean\n        performer:\n          description: List of Personas significant for this event\n          items:\n            $ref: \"#/components/schemas/FeatureReference\"\n          type: array\n        photo:\n          description: Primary image\n          items:\n            $ref: \"#/components/schemas/ImageMeta\"\n          type: array\n        startDate:\n          description: Time when the event starts\n          format: date-time\n          type: string\n        superEvent:\n          $ref: \"#/components/schemas/OccurrenceReference\"\n        updated:\n          description: Timestamp of last modification (UTC)\n          format: date-time\n          type: string\n        url:\n          description: Primary url for published event\n          type: string\n        workPerformed:\n          description: Subject matter of the event\n          items:\n            $ref: \"#/components/schemas/FeatureReference\"\n          type: array\n    EventsQuery:\n      description: Specific filters understood and executed for this query. If your\n        parameter is not visible here, then consult the documentation for\n        correct usage.\n      properties:\n        activity:\n          description: required activity types\n          items:\n            type: string\n          type: array\n        category:\n          description: required categories\n          items:\n            type: string\n          type: array\n        limit:\n          description: maximum number of matches to return\n          type: integer\n    EventsSearchResponse:\n      properties:\n        events:\n          items:\n            $ref: \"#/components/schemas/EventOccurenceDetail\"\n          type: array\n        query:\n          $ref: \"#/components/schemas/EventsQuery\"\n        stats:\n          $ref: \"#/components/schemas/SearchStatsMetaResult\"\n    FeatureReference:\n      description: Identifier for a Feature\n      properties:\n        \"@id\":\n          description: Feature id\n          type: string\n        \"@type\":\n          description: Type of specific feature or Taxonomy node such as EventCategory,\n            SportsTeam, Persona.\n          type: string\n        name:\n          description: Display name of the feature\n          type: string\n    GeoJsonObject:\n      description: Shape defined per GeoJSON spec\n    GeoPt:\n      properties:\n        lat:\n          type: number\n        lon:\n          type: number\n    ImageMeta:\n      description: Image meta data\n      properties:\n        \"@id\":\n          type: string\n        caption:\n          type: string\n        height:\n          type: integer\n        url:\n          type: string\n        width:\n          type: integer\n    OccurrenceReference:\n      properties:\n        \"@id\":\n          type: string\n        name:\n          type: string\n        startDate:\n          description: Time when the event starts\n          format: date-time\n          type: string\n    PlaceDetail:\n      allOf:\n        - $ref: \"#/components/schemas/PlaceReference\"\n      properties:\n        ambience:\n          description: expected mood and feel of the event\n          items:\n            $ref: \"#/components/schemas/FeatureReference\"\n          type: array\n        category:\n          description: Associated PlaceCategory. May be multiple (Tier 1)\n          items:\n            $ref: \"#/components/schemas/FeatureReference\"\n          type: array\n        contact:\n          $ref: \"#/components/schemas/ContactDetail\"\n        function:\n          description: PlaceFunction. (Tier 2 taxonomy)\n          items:\n            $ref: \"#/components/schemas/FeatureReference\"\n          type: array\n        openingHours:\n          items:\n            $ref: \"#/components/schemas/Timeframe\"\n          type: array\n        photo:\n          items:\n            $ref: \"#/components/schemas/ImageMeta\"\n          type: array\n    PlaceReference:\n      description: Unique Location\n      properties:\n        \"@id\":\n          type: string\n        \"@type\":\n          description: Type of place where Place is a physical address, LocalBusiness is\n            any type of comercial property, AdministrativeArea is a political or\n            colloquial area, and Virtual is out of this world\n          enum:\n            - Place\n            - LocalBusiness\n            - AdministrativeArea\n            - TouristAttraction\n            - Landform\n            - LandmarksOrHistoricalBuildings\n            - Residence\n            - Virtual\n          type: string\n        address:\n          $ref: \"#/components/schemas/Address\"\n        geo:\n          $ref: \"#/components/schemas/GeoPt\"\n        geometry:\n          $ref: \"#/components/schemas/GeoJsonObject\"\n        location:\n          $ref: \"#/components/schemas/VirtualLocation\"\n        logo:\n          $ref: \"#/components/schemas/ImageMeta\"\n        name:\n          type: string\n        tag:\n          items:\n            $ref: \"#/components/schemas/FeatureReference\"\n          type: array\n    PlacesQuery:\n      description: Specific filters understood and executed for this query. If your\n        parameter is not visible here, then consult the documentation for\n        correct usage.\n      properties:\n        address:\n          $ref: \"#/components/schemas/Address\"\n        category:\n          description: required categories\n          items:\n            type: string\n          type: array\n        limit:\n          description: maximum number of matches to return\n          type: integer\n    PlacesSearchResponse:\n      properties:\n        places:\n          items:\n            $ref: \"#/components/schemas/PlaceDetail\"\n          type: array\n        query:\n          $ref: \"#/components/schemas/PlacesQuery\"\n        stats:\n          $ref: \"#/components/schemas/SearchStatsMetaResult\"\n    SearchStatsMetaResult:\n      description: Shows invocation details about the query. Running query again, could\n        produce different results\n      properties:\n        count:\n          description: Total matches for the query\n          type: integer\n        fieldset:\n          description: Specific fields returned by this query\n          type: string\n        runtime:\n          description: Server side run time in msec for this request\n          type: integer\n    TicketOffer:\n      properties:\n        availability:\n          enum:\n            - Discontinued\n            - InStock\n            - InStoreOnly\n            - LimitedAvailability\n            - OnlineOnly\n            - OutOfStock\n            - PreOrder\n            - SoldOut\n          type: string\n        category:\n          enum:\n            - primary\n            - secondary\n            - presale\n            - member\n            - premium\n            - unknown\n          type: string\n        donation:\n          type: boolean\n        fee:\n          type: number\n        highPrice:\n          type: number\n        inventory:\n          properties:\n            available:\n              type: integer\n            total:\n              type: integer\n          type: object\n        name:\n          type: string\n        price:\n          type: number\n        priceCurrency:\n          type: string\n        priceUnknown:\n          type: boolean\n        url:\n          type: string\n    Timeframe:\n      properties:\n        closes:\n          description: Close time for all days mentioned in the dayOfWeek. If close time is\n            less than open, then it is following day.\n          format: date-time\n          type: string\n        dayOfWeek:\n          description: ISO day of the week. 1- Monday, 7- Sunday\n          items:\n            type: integer\n          type: array\n        open247:\n          description: Open around the clock\n          type: boolean\n        opens:\n          description: Open time for all days mentioned in the dayOfWeek\n          format: date-time\n          type: string\n    VirtualLocation:\n      description: Virtual Address\n      properties:\n        domain:\n          type: string\n        platform:\n          type: string\n        url:\n          type: string\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/lotadata.com-2.0.0-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/lotadata.com-2.0.0-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}