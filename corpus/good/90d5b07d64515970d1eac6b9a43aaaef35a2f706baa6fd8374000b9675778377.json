{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "nexmo.com-media-1.0.0-openapi.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/nexmo.com-media-1.0.0-openapi.yaml",
			"byteSize": 9044,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://api.nexmo.com/v3\ninfo:\n  contact:\n    email: devrel@nexmo.com\n    name: Nexmo DevRel\n    url: https://developer.nexmo.com/\n  description: The Media API can be used to query, download and delete media items such as\n    audio files for use with other Nexmo APIs.\n  title: Media\n  version: 1.0.0\n  x-label: BETA\n  x-origin:\n    - converter:\n        url: https://github.com/lucybot/api-spec-converter\n        version: 2.7.31\n      format: openapi\n      url: https://raw.githubusercontent.com/nexmo/api-specification/master/definitions/media.yml\n      version: \"3.0\"\n  x-providerName: nexmo.com\n  x-serviceName: media\npaths:\n  /media:\n    get:\n      description: Retrieve information about multiple media items with the ability to\n        search and paginate.\n      operationId: list-and-search-media-items\n      parameters:\n        - description: The order of search results.\n          in: query\n          name: order\n          schema:\n            default: descending\n            enum:\n              - assending\n              - descending\n            example: assending\n            type: string\n        - description: Which page to retrieve in pagination\n          in: query\n          name: page_index\n          schema:\n            default: 0\n            example: 1\n            type: integer\n        - description: How many items at most per page\n          in: query\n          name: page_size\n          schema:\n            default: 20\n            example: 50\n            type: integer\n        - description: Retrieve results created on or after this timestap.\n          in: query\n          name: start_time\n          schema:\n            default: 1 week ago\n            example: 2020-01-01T14:00:00.000Z\n            type: string\n          x-default-is-meta: true\n        - description: Retrieve results created on or before this timestamp.\n          in: query\n          name: end_time\n          schema:\n            example: 2020-01-01T14:00:00.000Z\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  _embedded:\n                    description: A collection of media items. See [retrieve a media\n                      item](#retrieve-a-media-item) for a description of the\n                      returned fields\n                    properties:\n                      media:\n                        items:\n                          $ref: \"#/components/schemas/Media\"\n                        type: array\n                    type: object\n                  _links:\n                    properties:\n                      first:\n                        properties:\n                          href:\n                            default: \"\"\n                            example: /v3/media?page_size=20\u0026account_id=abcd1234\u0026order=descending\n                            type: string\n                        type: object\n                      last:\n                        properties:\n                          href:\n                            default: \"\"\n                            example: /v3/media?page_size=20\u0026account_id=abcd1234\u0026order=descending\n                            type: string\n                        type: object\n                      self:\n                        properties:\n                          href:\n                            default: \"\"\n                            example: /v3/media?page_size=20\u0026account_id=abcd1234\u0026order=descending\n                            type: string\n                        type: object\n                    type: object\n                  count:\n                    default: 0\n                    description: The total number of records returned by your request.\n                    example: 1\n                    type: integer\n                  page_index:\n                    default: 0\n                    description: The `page_index` used in your request.\n                    example: 0\n                    type: integer\n                  page_size:\n                    default: 0\n                    description: The amount of records returned in this response.\n                    example: 20\n                    type: integer\n                type: object\n          description: Successfully retrieved\n      summary: List and search media items\n  /media/:id/info:\n    delete:\n      description: Delete a previously created media item by ID.\n      operationId: delete-a-media-item\n      responses:\n        \"204\":\n          description: Successfully deleted\n      summary: Delete a media item\n    get:\n      description: Retrieve information about a single media item\n      operationId: retrieve-a-media-item\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Media\"\n          description: Successfully retrieved\n      summary: Retrieve a media item\n    put:\n      description: Update a previously created media item by ID.\n      operationId: update-a-media-item\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                description:\n                  description: A description of the media file.\n                  example: This is a very important recording. Do not delete.\n                  type: string\n                max_downloads_allowed:\n                  description: The maximum number of times the file may be downloaded.\n                    Unlimited when not provided.\n                  example: 100\n                  type: integer\n                metadata_primary:\n                  description: A string containing metadata about the media file.\n                  example: foo,bar\n                  type: string\n                metadata_secondary:\n                  description: A string containing further metadata about the media file.\n                  example: \"123\"\n                  type: string\n                mime_type:\n                  description: The MIME type of the media file.\n                  example: audio/vnd.wave\n                  type: string\n                public:\n                  description: Whether the item is publicly available without\n                    authentication.\n                  example: true\n                  type: boolean\n                title:\n                  description: A string containing a title for the media file.\n                  example: Very important recording\n                  type: string\n              type: object\n      responses:\n        \"204\":\n          description: Successfully updated\n      summary: Update a media item\ncomponents:\n  schemas:\n    Media:\n      properties:\n        account_id:\n          description: The ID of your Nexmo account. This is the same as your API key.\n          example: abcd1234\n          type: string\n        etag:\n          description: \"An identifier for the content. This will change if the content of\n            the file has been changed (i.e. if you upload a new version of the\n            file). For more information see Wikipedia: [HTTP\n            ETag](https://en.wikipedia.org/wiki/HTTP_ETag)\"\n          example: aaaaaaaabbbbccccdddd0123456789ab\n          type: string\n        id:\n          description: A UUID representing the object.\n          example: aaaaaaaa-bbbb-cccc-dddd-0123456789ab\n          type: string\n        max_downloads_allowed:\n          description: The maximum number of times the file may be downloaded.\n          example: 0\n          type: integer\n        media_size:\n          description: The size of the file in bytes\n          example: 1234567\n          type: integer\n        metadata_primary:\n          description: A user set string containing metadata about the media file.\n          type: string\n        metadata_secondary:\n          description: A user set string containing further metadata about the media file.\n          type: string\n        mime_type:\n          description: The IETF MIME type of the file.\n          example: audio/vnd.wave\n          type: string\n        original_file_name:\n          description: The filename of the object as it was originally uploaded.\n          example: test.wav\n          type: string\n        public:\n          description: Whether the item is available for download without authentication.\n          example: false\n          type: boolean\n        store_id:\n          description: An internal identifier of how the file is stored.\n          example: s3\n          type: string\n        time_created:\n          description: A timestamp for the time that the file was created\n          example: 2020-01-01T14:00:00.000Z\n          type: string\n        time_last_updated:\n          description: A timestamp for the time that the file was last modified\n          example: 2020-01-01T14:00:00.000Z\n          type: string\n        times_downloaded:\n          description: The number of times the file has been downloaded.\n          example: 1\n          type: integer\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/nexmo.com-media-1.0.0-openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/nexmo.com-media-1.0.0-openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}