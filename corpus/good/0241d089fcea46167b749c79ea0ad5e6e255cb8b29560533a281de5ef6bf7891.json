{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "azure.com-keyvault-2016-10-01-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/azure.com-keyvault-2016-10-01-swagger.yaml",
			"byteSize": 152612,
			"content": "openapi: 3.0.0\ninfo:\n  description: The key vault client performs cryptographic key operations and vault\n    operations against the Key Vault service.\n  title: KeyVaultClient\n  version: 2016-10-01\n  x-apisguru-categories:\n    - cloud\n  x-logo:\n    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png\n  x-origin:\n    - format: swagger\n      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/keyvault/data-plane/Microsoft.KeyVault/stable/2016-10-01/keyvault.json\n      version: \"2.0\"\n  x-preferred: false\n  x-providerName: azure.com\n  x-serviceName: keyvault\n  x-tags:\n    - Azure\n    - Microsoft\npaths:\n  /certificates:\n    get:\n      description: The GetCertificates operation returns the set of certificates resources\n        in the specified key vault. This operation requires the\n        certificates/list permission.\n      operationId: GetCertificates\n      parameters:\n        - description: Maximum number of results to return in a page. If not specified the\n            service will return up to 25 results.\n          in: query\n          name: maxresults\n          required: false\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n            maximum: 25\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: A response message containing a list of certificates along with a\n            link to the next page of certificates.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CertificateListResult\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: List certificates in a specified key vault\n      tags:\n        - Certificates\n      x-ms-pageable:\n        nextLinkName: nextLink\n  /certificates/contacts:\n    delete:\n      description: Deletes the certificate contacts for a specified key vault certificate.\n        This operation requires the certificates/managecontacts permission.\n      operationId: DeleteCertificateContacts\n      parameters:\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: The contacts for the key vault certificate.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Contacts\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Deletes the certificate contacts for a specified key vault.\n      tags:\n        - Certificates\n    get:\n      description: The GetCertificateContacts operation returns the set of certificate\n        contact resources in the specified key vault. This operation requires\n        the certificates/managecontacts permission.\n      operationId: GetCertificateContacts\n      parameters:\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: The contacts for the key vault certificate.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Contacts\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Lists the certificate contacts for a specified key vault.\n      tags:\n        - Certificates\n    put:\n      description: Sets the certificate contacts for the specified key vault. This\n        operation requires the certificates/managecontacts permission.\n      operationId: SetCertificateContacts\n      parameters:\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Contacts\"\n        description: The contacts for the key vault certificate.\n        required: true\n      responses:\n        \"200\":\n          description: The contacts for the key vault certificate.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Contacts\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Sets the certificate contacts for the specified key vault.\n      tags:\n        - Certificates\n  /certificates/issuers:\n    get:\n      description: The GetCertificateIssuers operation returns the set of certificate\n        issuer resources in the specified key vault. This operation requires the\n        certificates/manageissuers/getissuers permission.\n      operationId: GetCertificateIssuers\n      parameters:\n        - description: Maximum number of results to return in a page. If not specified the\n            service will return up to 25 results.\n          in: query\n          name: maxresults\n          required: false\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n            maximum: 25\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: A response message containing a list of certificate issuers in a key\n            vault along with a link to the next page of certificate issuers.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CertificateIssuerListResult\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: List certificate issuers for a specified key vault.\n      tags:\n        - Certificates\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/certificates/issuers/{issuer-name}\":\n    delete:\n      description: The DeleteCertificateIssuer operation permanently removes the specified\n        certificate issuer from the vault. This operation requires the\n        certificates/manageissuers/deleteissuers permission.\n      operationId: DeleteCertificateIssuer\n      parameters:\n        - description: The name of the issuer.\n          in: path\n          name: issuer-name\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: The issuer for the key vault certificate.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IssuerBundle\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Deletes the specified certificate issuer.\n      tags:\n        - Certificates\n    get:\n      description: The GetCertificateIssuer operation returns the specified certificate\n        issuer resources in the specified key vault. This operation requires the\n        certificates/manageissuers/getissuers permission.\n      operationId: GetCertificateIssuer\n      parameters:\n        - description: The name of the issuer.\n          in: path\n          name: issuer-name\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: The issuer for the key vault certificate.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IssuerBundle\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Lists the specified certificate issuer.\n      tags:\n        - Certificates\n    patch:\n      description: The UpdateCertificateIssuer operation performs an update on the\n        specified certificate issuer entity. This operation requires the\n        certificates/setissuers permission.\n      operationId: UpdateCertificateIssuer\n      parameters:\n        - description: The name of the issuer.\n          in: path\n          name: issuer-name\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CertificateIssuerUpdateParameters\"\n        description: Certificate issuer update parameter.\n        required: true\n        x-ms-client-flatten: true\n      responses:\n        \"200\":\n          description: The issuer for the key vault certificate.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IssuerBundle\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Updates the specified certificate issuer.\n      tags:\n        - Certificates\n    put:\n      description: The SetCertificateIssuer operation adds or updates the specified\n        certificate issuer. This operation requires the certificates/setissuers\n        permission.\n      operationId: SetCertificateIssuer\n      parameters:\n        - description: The name of the issuer.\n          in: path\n          name: issuer-name\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CertificateIssuerSetParameters\"\n        description: Certificate issuer set parameter.\n        required: true\n        x-ms-client-flatten: true\n      responses:\n        \"200\":\n          description: The issuer for the key vault certificate.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IssuerBundle\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Sets the specified certificate issuer.\n      tags:\n        - Certificates\n  \"/certificates/{certificate-name}\":\n    delete:\n      description: Deletes all versions of a certificate object along with its associated\n        policy. Delete certificate cannot be used to remove individual versions\n        of a certificate object. This operation requires the certificates/delete\n        permission.\n      operationId: DeleteCertificate\n      parameters:\n        - description: The name of the certificate.\n          in: path\n          name: certificate-name\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: The deleted certificate.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeletedCertificateBundle\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Deletes a certificate from a specified key vault.\n      tags:\n        - Certificates\n  \"/certificates/{certificate-name}/create\":\n    post:\n      description: If this is the first version, the certificate resource is created. This\n        operation requires the certificates/create permission.\n      operationId: CreateCertificate\n      parameters:\n        - description: The name of the certificate.\n          in: path\n          name: certificate-name\n          required: true\n          schema:\n            type: string\n            pattern: ^[0-9a-zA-Z-]+$\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CertificateCreateParameters\"\n        description: The parameters to create a certificate.\n        required: true\n        x-ms-client-flatten: true\n      responses:\n        \"202\":\n          description: Created certificate bundle.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CertificateOperation\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Creates a new certificate.\n      tags:\n        - Certificates\n  \"/certificates/{certificate-name}/import\":\n    post:\n      description: Imports an existing valid certificate, containing a private key, into\n        Azure Key Vault. The certificate to be imported can be in either PFX or\n        PEM format. If the certificate is in PEM format the PEM file must\n        contain the key as well as x509 certificates. This operation requires\n        the certificates/import permission.\n      operationId: ImportCertificate\n      parameters:\n        - description: The name of the certificate.\n          in: path\n          name: certificate-name\n          required: true\n          schema:\n            type: string\n            pattern: ^[0-9a-zA-Z-]+$\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CertificateImportParameters\"\n        description: The parameters to import the certificate.\n        required: true\n        x-ms-client-flatten: true\n      responses:\n        \"200\":\n          description: Imported certificate bundle to the vault.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CertificateBundle\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Imports a certificate into a specified key vault.\n      tags:\n        - Certificates\n  \"/certificates/{certificate-name}/pending\":\n    delete:\n      description: Deletes the creation operation for a specified certificate that is in\n        the process of being created. The certificate is no longer created. This\n        operation requires the certificates/update permission.\n      operationId: DeleteCertificateOperation\n      parameters:\n        - description: The name of the certificate.\n          in: path\n          name: certificate-name\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: A message containing the certificate operation response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CertificateOperation\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Deletes the creation operation for a specific certificate.\n      tags:\n        - Certificates\n    get:\n      description: Gets the creation operation associated with a specified certificate.\n        This operation requires the certificates/get permission.\n      operationId: GetCertificateOperation\n      parameters:\n        - description: The name of the certificate.\n          in: path\n          name: certificate-name\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: The certificate operation response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CertificateOperation\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Gets the creation operation of a certificate.\n      tags:\n        - Certificates\n    patch:\n      description: Updates a certificate creation operation that is already in progress.\n        This operation requires the certificates/update permission.\n      operationId: UpdateCertificateOperation\n      parameters:\n        - description: The name of the certificate.\n          in: path\n          name: certificate-name\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CertificateOperationUpdateParameter\"\n        description: The certificate operation response.\n        required: true\n        x-ms-client-flatten: true\n      responses:\n        \"200\":\n          description: A message containing the certificate operation response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CertificateOperation\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Updates a certificate operation.\n      tags:\n        - Certificates\n  \"/certificates/{certificate-name}/pending/merge\":\n    post:\n      description: The MergeCertificate operation performs the merging of a certificate or\n        certificate chain with a key pair currently available in the service.\n        This operation requires the certificates/create permission.\n      operationId: MergeCertificate\n      parameters:\n        - description: The name of the certificate.\n          in: path\n          name: certificate-name\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CertificateMergeParameters\"\n        description: The parameters to merge certificate.\n        required: true\n        x-ms-client-flatten: true\n      responses:\n        \"201\":\n          description: Merged certificate bundle to the vault.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CertificateBundle\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Merges a certificate or a certificate chain with a key pair existing on\n        the server.\n      tags:\n        - Certificates\n  \"/certificates/{certificate-name}/policy\":\n    get:\n      description: The GetCertificatePolicy operation returns the specified certificate\n        policy resources in the specified key vault. This operation requires the\n        certificates/get permission.\n      operationId: GetCertificatePolicy\n      parameters:\n        - description: The name of the certificate in a given key vault.\n          in: path\n          name: certificate-name\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: The certificate policy.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CertificatePolicy\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Lists the policy for a certificate.\n      tags:\n        - Certificates\n    patch:\n      description: Set specified members in the certificate policy. Leave others as null.\n        This operation requires the certificates/update permission.\n      operationId: UpdateCertificatePolicy\n      parameters:\n        - description: The name of the certificate in the given vault.\n          in: path\n          name: certificate-name\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CertificatePolicy\"\n        description: The policy for the certificate.\n        required: true\n      responses:\n        \"200\":\n          description: The certificate policy\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CertificatePolicy\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Updates the policy for a certificate.\n      tags:\n        - Certificates\n  \"/certificates/{certificate-name}/versions\":\n    get:\n      description: The GetCertificateVersions operation returns the versions of a\n        certificate in the specified key vault. This operation requires the\n        certificates/list permission.\n      operationId: GetCertificateVersions\n      parameters:\n        - description: The name of the certificate.\n          in: path\n          name: certificate-name\n          required: true\n          schema:\n            type: string\n        - description: Maximum number of results to return in a page. If not specified the\n            service will return up to 25 results.\n          in: query\n          name: maxresults\n          required: false\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n            maximum: 25\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: A response message containing a list of certificates in the key\n            vault along with a link to the next page of keys.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CertificateListResult\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: List the versions of a certificate.\n      tags:\n        - Certificates\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/certificates/{certificate-name}/{certificate-version}\":\n    get:\n      description: Gets information about a specific certificate. This operation requires\n        the certificates/get permission.\n      operationId: GetCertificate\n      parameters:\n        - description: The name of the certificate in the given vault.\n          in: path\n          name: certificate-name\n          required: true\n          schema:\n            type: string\n        - description: The version of the certificate.\n          in: path\n          name: certificate-version\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: The retrieved certificate.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CertificateBundle\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Gets information about a certificate.\n      tags:\n        - Certificates\n    patch:\n      description: The UpdateCertificate operation applies the specified update on the\n        given certificate; the only elements updated are the certificate's\n        attributes. This operation requires the certificates/update permission.\n      operationId: UpdateCertificate\n      parameters:\n        - description: The name of the certificate in the given key vault.\n          in: path\n          name: certificate-name\n          required: true\n          schema:\n            type: string\n        - description: The version of the certificate.\n          in: path\n          name: certificate-version\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CertificateUpdateParameters\"\n        description: The parameters for certificate update.\n        required: true\n        x-ms-client-flatten: true\n      responses:\n        \"200\":\n          description: The updated certificate.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CertificateBundle\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Updates the specified attributes associated with the given certificate.\n      tags:\n        - Certificates\n  /deletedcertificates:\n    get:\n      description: The GetDeletedCertificates operation retrieves the certificates in the\n        current vault which are in a deleted state and ready for recovery or\n        purging. This operation includes deletion-specific information. This\n        operation requires the certificates/get/list permission. This operation\n        can only be enabled on soft-delete enabled vaults.\n      operationId: GetDeletedCertificates\n      parameters:\n        - description: Maximum number of results to return in a page. If not specified the\n            service will return up to 25 results.\n          in: query\n          name: maxresults\n          required: false\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n            maximum: 25\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: A response message containing a list of deleted certificates in the\n            vault along with a link to the next page of deleted certificates\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeletedCertificateListResult\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Lists the deleted certificates in the specified vault currently\n        available for recovery.\n      tags:\n        - DeletedCertificates\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/deletedcertificates/{certificate-name}\":\n    delete:\n      description: The PurgeDeletedCertificate operation performs an irreversible deletion\n        of the specified certificate, without possibility for recovery. The\n        operation is not available if the recovery level does not specify\n        'Purgeable'. This operation requires the certificate/purge permission.\n      operationId: PurgeDeletedCertificate\n      parameters:\n        - description: The name of the certificate\n          in: path\n          name: certificate-name\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"204\":\n          description: No content signaling that the certificate was purged forever.\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Permanently deletes the specified deleted certificate.\n      tags:\n        - DeletedCertificates\n    get:\n      description: The GetDeletedCertificate operation retrieves the deleted certificate\n        information plus its attributes, such as retention interval, scheduled\n        permanent deletion and the current deletion recovery level. This\n        operation requires the certificates/get permission.\n      operationId: GetDeletedCertificate\n      parameters:\n        - description: The name of the certificate\n          in: path\n          name: certificate-name\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: A Certificate bundle of the certificate and its attributes\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeletedCertificateBundle\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Retrieves information about the specified deleted certificate.\n      tags:\n        - DeletedCertificates\n  \"/deletedcertificates/{certificate-name}/recover\":\n    post:\n      description: The RecoverDeletedCertificate operation performs the reversal of the\n        Delete operation. The operation is applicable in vaults enabled for\n        soft-delete, and must be issued during the retention interval (available\n        in the deleted certificate's attributes). This operation requires the\n        certificates/recover permission.\n      operationId: RecoverDeletedCertificate\n      parameters:\n        - description: The name of the deleted certificate\n          in: path\n          name: certificate-name\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: A Certificate bundle of the original certificate and its attributes\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CertificateBundle\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Recovers the deleted certificate back to its current version under\n        /certificates.\n      tags:\n        - DeletedCertificates\n  /deletedkeys:\n    get:\n      description: Retrieves a list of the keys in the Key Vault as JSON Web Key structures\n        that contain the public part of a deleted key. This operation includes\n        deletion-specific information. The Get Deleted Keys operation is\n        applicable for vaults enabled for soft-delete. While the operation can\n        be invoked on any vault, it will return an error if invoked on a non\n        soft-delete enabled vault. This operation requires the keys/list\n        permission.\n      operationId: GetDeletedKeys\n      parameters:\n        - description: Maximum number of results to return in a page. If not specified the\n            service will return up to 25 results.\n          in: query\n          name: maxresults\n          required: false\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n            maximum: 25\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: A response message containing a list of deleted keys in the vault\n            along with a link to the next page of deleted keys.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeletedKeyListResult\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Lists the deleted keys in the specified vault.\n      tags:\n        - DeletedKeys\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/deletedkeys/{key-name}\":\n    delete:\n      description: The Purge Deleted Key operation is applicable for soft-delete enabled\n        vaults. While the operation can be invoked on any vault, it will return\n        an error if invoked on a non soft-delete enabled vault. This operation\n        requires the keys/purge permission.\n      operationId: PurgeDeletedKey\n      parameters:\n        - description: The name of the key\n          in: path\n          name: key-name\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"204\":\n          description: No content, signaling that the key was permanently purged.\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Permanently deletes the specified key.\n      tags:\n        - DeletedKeys\n    get:\n      description: \"The Get Deleted Key operation is applicable for soft-delete enabled\n        vaults. While the operation can be invoked on any vault, it will return\n        an error if invoked on a non soft-delete enabled vault. This operation\n        requires the keys/get permission. \"\n      operationId: GetDeletedKey\n      parameters:\n        - description: The name of the key.\n          in: path\n          name: key-name\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: A DeletedKeyBundle consisting of a WebKey plus its Attributes and\n            deletion information.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeletedKeyBundle\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Gets the public part of a deleted key.\n      tags:\n        - DeletedKeys\n  \"/deletedkeys/{key-name}/recover\":\n    post:\n      description: The Recover Deleted Key operation is applicable for deleted keys in\n        soft-delete enabled vaults. It recovers the deleted key back to its\n        latest version under /keys. An attempt to recover an non-deleted key\n        will return an error. Consider this the inverse of the delete operation\n        on soft-delete enabled vaults. This operation requires the keys/recover\n        permission.\n      operationId: RecoverDeletedKey\n      parameters:\n        - description: The name of the deleted key.\n          in: path\n          name: key-name\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: A Key bundle of the original key and its attributes\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyBundle\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Recovers the deleted key to its latest version.\n      tags:\n        - DeletedKeys\n  /deletedsecrets:\n    get:\n      description: The Get Deleted Secrets operation returns the secrets that have been\n        deleted for a vault enabled for soft-delete. This operation requires the\n        secrets/list permission.\n      operationId: GetDeletedSecrets\n      parameters:\n        - description: Maximum number of results to return in a page. If not specified the\n            service will return up to 25 results.\n          in: query\n          name: maxresults\n          required: false\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n            maximum: 25\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: A response message containing a list of deleted secrets in the\n            vault, along with a link to the next page of deleted secrets.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeletedSecretListResult\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Lists deleted secrets for the specified vault.\n      tags:\n        - DeletedSecrets\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/deletedsecrets/{secret-name}\":\n    delete:\n      description: The purge deleted secret operation removes the secret permanently,\n        without the possibility of recovery. This operation can only be enabled\n        on a soft-delete enabled vault. This operation requires the\n        secrets/purge permission.\n      operationId: PurgeDeletedSecret\n      parameters:\n        - description: The name of the secret.\n          in: path\n          name: secret-name\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"204\":\n          description: No content signaling that the secret was purged forever.\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Permanently deletes the specified secret.\n      tags:\n        - DeletedSecrets\n    get:\n      description: The Get Deleted Secret operation returns the specified deleted secret\n        along with its attributes. This operation requires the secrets/get\n        permission.\n      operationId: GetDeletedSecret\n      parameters:\n        - description: The name of the secret.\n          in: path\n          name: secret-name\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: A secret bundle of the secret and its attributes.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeletedSecretBundle\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Gets the specified deleted secret.\n      tags:\n        - DeletedSecrets\n  \"/deletedsecrets/{secret-name}/recover\":\n    post:\n      description: Recovers the deleted secret in the specified vault. This operation can\n        only be performed on a soft-delete enabled vault. This operation\n        requires the secrets/recover permission.\n      operationId: RecoverDeletedSecret\n      parameters:\n        - description: The name of the deleted secret.\n          in: path\n          name: secret-name\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: A Secret bundle of the original secret and its attributes.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SecretBundle\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Recovers the deleted secret to the latest version.\n      tags:\n        - DeletedSecrets\n  /keys:\n    get:\n      description: Retrieves a list of the keys in the Key Vault as JSON Web Key structures\n        that contain the public part of a stored key. The LIST operation is\n        applicable to all key types, however only the base key identifier,\n        attributes, and tags are provided in the response. Individual versions\n        of a key are not listed in the response. This operation requires the\n        keys/list permission.\n      operationId: GetKeys\n      parameters:\n        - description: Maximum number of results to return in a page. If not specified the\n            service will return up to 25 results.\n          in: query\n          name: maxresults\n          required: false\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n            maximum: 25\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: A response message containing a list of keys in the vault along with\n            a link to the next page of keys.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyListResult\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: List keys in the specified vault.\n      tags:\n        - Keys\n      x-ms-pageable:\n        nextLinkName: nextLink\n  /keys/restore:\n    post:\n      description: \"Imports a previously backed up key into Azure Key Vault, restoring the\n        key, its key identifier, attributes and access control policies. The\n        RESTORE operation may be used to import a previously backed up key.\n        Individual versions of a key cannot be restored. The key is restored in\n        its entirety with the same key name as it had when it was backed up. If\n        the key name is not available in the target Key Vault, the RESTORE\n        operation will be rejected. While the key name is retained during\n        restore, the final key identifier will change if the key is restored to\n        a different vault. Restore will restore all versions and preserve\n        version identifiers. The RESTORE operation is subject to security\n        constraints: The target Key Vault must be owned by the same Microsoft\n        Azure Subscription as the source Key Vault The user must have RESTORE\n        permission in the target Key Vault. This operation requires the\n        keys/restore permission.\"\n      operationId: RestoreKey\n      parameters:\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/KeyRestoreParameters\"\n        description: The parameters to restore the key.\n        required: true\n        x-ms-client-flatten: true\n      responses:\n        \"200\":\n          description: Restored key bundle in the vault.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyBundle\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Restores a backed up key to a vault.\n      tags:\n        - Keys\n  \"/keys/{key-name}\":\n    delete:\n      description: The delete key operation cannot be used to remove individual versions of\n        a key. This operation removes the cryptographic material associated with\n        the key, which means the key is not usable for Sign/Verify, Wrap/Unwrap\n        or Encrypt/Decrypt operations. This operation requires the keys/delete\n        permission.\n      operationId: DeleteKey\n      parameters:\n        - description: The name of the key to delete.\n          in: path\n          name: key-name\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: The public part of the deleted key and deletion information on when\n            the key will be purged.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeletedKeyBundle\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Deletes a key of any type from storage in Azure Key Vault.\n      tags:\n        - Keys\n    put:\n      description: The import key operation may be used to import any key type into an\n        Azure Key Vault. If the named key already exists, Azure Key Vault\n        creates a new version of the key. This operation requires the\n        keys/import permission.\n      operationId: ImportKey\n      parameters:\n        - description: Name for the imported key.\n          in: path\n          name: key-name\n          required: true\n          schema:\n            type: string\n            pattern: ^[0-9a-zA-Z-]+$\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/KeyImportParameters\"\n        description: The parameters to import a key.\n        required: true\n        x-ms-client-flatten: true\n      responses:\n        \"200\":\n          description: Imported key bundle to the vault.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyBundle\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Imports an externally created key, stores it, and returns key parameters\n        and attributes to the client.\n      tags:\n        - Keys\n  \"/keys/{key-name}/backup\":\n    post:\n      description: The Key Backup operation exports a key from Azure Key Vault in a\n        protected form. Note that this operation does NOT return key material in\n        a form that can be used outside the Azure Key Vault system, the returned\n        key material is either protected to a Azure Key Vault HSM or to Azure\n        Key Vault itself. The intent of this operation is to allow a client to\n        GENERATE a key in one Azure Key Vault instance, BACKUP the key, and then\n        RESTORE it into another Azure Key Vault instance. The BACKUP operation\n        may be used to export, in protected form, any key type from Azure Key\n        Vault. Individual versions of a key cannot be backed up. BACKUP /\n        RESTORE can be performed within geographical boundaries only; meaning\n        that a BACKUP from one geographical area cannot be restored to another\n        geographical area. For example, a backup from the US geographical area\n        cannot be restored in an EU geographical area. This operation requires\n        the key/backup permission.\n      operationId: BackupKey\n      parameters:\n        - description: The name of the key.\n          in: path\n          name: key-name\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: The backup blob containing the backed up key.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BackupKeyResult\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Requests that a backup of the specified key be downloaded to the client.\n      tags:\n        - Keys\n  \"/keys/{key-name}/create\":\n    post:\n      description: The create key operation can be used to create any key type in Azure Key\n        Vault. If the named key already exists, Azure Key Vault creates a new\n        version of the key. It requires the keys/create permission.\n      operationId: CreateKey\n      parameters:\n        - description: The name for the new key. The system will generate the version name\n            for the new key.\n          in: path\n          name: key-name\n          required: true\n          schema:\n            type: string\n            pattern: ^[0-9a-zA-Z-]+$\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/KeyCreateParameters\"\n        description: The parameters to create a key.\n        required: true\n        x-ms-client-flatten: true\n      responses:\n        \"200\":\n          description: A key bundle containing the result of the create key request.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyBundle\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Creates a new key, stores it, then returns key parameters and attributes\n        to the client.\n      tags:\n        - Keys\n  \"/keys/{key-name}/versions\":\n    get:\n      description: The full key identifier, attributes, and tags are provided in the\n        response. This operation requires the keys/list permission.\n      operationId: GetKeyVersions\n      parameters:\n        - description: The name of the key.\n          in: path\n          name: key-name\n          required: true\n          schema:\n            type: string\n        - description: Maximum number of results to return in a page. If not specified the\n            service will return up to 25 results.\n          in: query\n          name: maxresults\n          required: false\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n            maximum: 25\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: A response message containing a list of keys along with a link to\n            the next page of keys.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyListResult\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Retrieves a list of individual key versions with the same key name.\n      tags:\n        - Keys\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/keys/{key-name}/{key-version}\":\n    get:\n      description: The get key operation is applicable to all key types. If the requested\n        key is symmetric, then no key material is released in the response. This\n        operation requires the keys/get permission.\n      operationId: GetKey\n      parameters:\n        - description: The name of the key to get.\n          in: path\n          name: key-name\n          required: true\n          schema:\n            type: string\n        - description: Adding the version parameter retrieves a specific version of a key.\n          in: path\n          name: key-version\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: A key bundle containing the key and its attributes.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyBundle\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Gets the public part of a stored key.\n      tags:\n        - Keys\n    patch:\n      description: \"In order to perform this operation, the key must already exist in the\n        Key Vault. Note: The cryptographic material of a key itself cannot be\n        changed. This operation requires the keys/update permission.\"\n      operationId: UpdateKey\n      parameters:\n        - description: The name of key to update.\n          in: path\n          name: key-name\n          required: true\n          schema:\n            type: string\n        - description: The version of the key to update.\n          in: path\n          name: key-version\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/KeyUpdateParameters\"\n        description: The parameters of the key to update.\n        required: true\n        x-ms-client-flatten: true\n      responses:\n        \"200\":\n          description: The updated key.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyBundle\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: The update key operation changes specified attributes of a stored key\n        and can be applied to any key type and key version stored in Azure Key\n        Vault.\n      tags:\n        - Keys\n  \"/keys/{key-name}/{key-version}/decrypt\":\n    post:\n      description: The DECRYPT operation decrypts a well-formed block of ciphertext using\n        the target encryption key and specified algorithm. This operation is the\n        reverse of the ENCRYPT operation; only a single block of data may be\n        decrypted, the size of this block is dependent on the target key and the\n        algorithm to be used. The DECRYPT operation applies to asymmetric and\n        symmetric keys stored in Azure Key Vault since it uses the private\n        portion of the key. This operation requires the keys/decrypt permission.\n      operationId: decrypt\n      parameters:\n        - description: The name of the key.\n          in: path\n          name: key-name\n          required: true\n          schema:\n            type: string\n        - description: The version of the key.\n          in: path\n          name: key-version\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/KeyOperationsParameters\"\n        description: The parameters for the decryption operation.\n        required: true\n        x-ms-client-flatten: true\n      responses:\n        \"200\":\n          description: The decryption result.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyOperationResult\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Decrypts a single block of encrypted data.\n      tags:\n        - Keys\n  \"/keys/{key-name}/{key-version}/encrypt\":\n    post:\n      description: The ENCRYPT operation encrypts an arbitrary sequence of bytes using an\n        encryption key that is stored in Azure Key Vault. Note that the ENCRYPT\n        operation only supports a single block of data, the size of which is\n        dependent on the target key and the encryption algorithm to be used. The\n        ENCRYPT operation is only strictly necessary for symmetric keys stored\n        in Azure Key Vault since protection with an asymmetric key can be\n        performed using public portion of the key. This operation is supported\n        for asymmetric keys as a convenience for callers that have a\n        key-reference but do not have access to the public key material. This\n        operation requires the keys/encrypt permission.\n      operationId: encrypt\n      parameters:\n        - description: The name of the key.\n          in: path\n          name: key-name\n          required: true\n          schema:\n            type: string\n        - description: The version of the key.\n          in: path\n          name: key-version\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/KeyOperationsParameters\"\n        description: The parameters for the encryption operation.\n        required: true\n        x-ms-client-flatten: true\n      responses:\n        \"200\":\n          description: The encryption result.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyOperationResult\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Encrypts an arbitrary sequence of bytes using an encryption key that is\n        stored in a key vault.\n      tags:\n        - Keys\n  \"/keys/{key-name}/{key-version}/sign\":\n    post:\n      description: The SIGN operation is applicable to asymmetric and symmetric keys stored\n        in Azure Key Vault since this operation uses the private portion of the\n        key. This operation requires the keys/sign permission.\n      operationId: sign\n      parameters:\n        - description: The name of the key.\n          in: path\n          name: key-name\n          required: true\n          schema:\n            type: string\n        - description: The version of the key.\n          in: path\n          name: key-version\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/KeySignParameters\"\n        description: The parameters for the signing operation.\n        required: true\n        x-ms-client-flatten: true\n      responses:\n        \"200\":\n          description: The signature value.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyOperationResult\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Creates a signature from a digest using the specified key.\n      tags:\n        - Keys\n  \"/keys/{key-name}/{key-version}/unwrapkey\":\n    post:\n      description: The UNWRAP operation supports decryption of a symmetric key using the\n        target key encryption key. This operation is the reverse of the WRAP\n        operation. The UNWRAP operation applies to asymmetric and symmetric keys\n        stored in Azure Key Vault since it uses the private portion of the key.\n        This operation requires the keys/unwrapKey permission.\n      operationId: unwrapKey\n      parameters:\n        - description: The name of the key.\n          in: path\n          name: key-name\n          required: true\n          schema:\n            type: string\n        - description: The version of the key.\n          in: path\n          name: key-version\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/KeyOperationsParameters\"\n        description: The parameters for the key operation.\n        required: true\n        x-ms-client-flatten: true\n      responses:\n        \"200\":\n          description: The unwrapped symmetric key.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyOperationResult\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Unwraps a symmetric key using the specified key that was initially used\n        for wrapping that key.\n      tags:\n        - Keys\n  \"/keys/{key-name}/{key-version}/verify\":\n    post:\n      description: The VERIFY operation is applicable to symmetric keys stored in Azure Key\n        Vault. VERIFY is not strictly necessary for asymmetric keys stored in\n        Azure Key Vault since signature verification can be performed using the\n        public portion of the key but this operation is supported as a\n        convenience for callers that only have a key-reference and not the\n        public portion of the key. This operation requires the keys/verify\n        permission.\n      operationId: verify\n      parameters:\n        - description: The name of the key.\n          in: path\n          name: key-name\n          required: true\n          schema:\n            type: string\n        - description: The version of the key.\n          in: path\n          name: key-version\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/KeyVerifyParameters\"\n        description: The parameters for verify operations.\n        required: true\n        x-ms-client-flatten: true\n      responses:\n        \"200\":\n          description: The verification result.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVerifyResult\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Verifies a signature using a specified key.\n      tags:\n        - Keys\n  \"/keys/{key-name}/{key-version}/wrapkey\":\n    post:\n      description: The WRAP operation supports encryption of a symmetric key using a key\n        encryption key that has previously been stored in an Azure Key Vault.\n        The WRAP operation is only strictly necessary for symmetric keys stored\n        in Azure Key Vault since protection with an asymmetric key can be\n        performed using the public portion of the key. This operation is\n        supported for asymmetric keys as a convenience for callers that have a\n        key-reference but do not have access to the public key material. This\n        operation requires the keys/wrapKey permission.\n      operationId: wrapKey\n      parameters:\n        - description: The name of the key.\n          in: path\n          name: key-name\n          required: true\n          schema:\n            type: string\n        - description: The version of the key.\n          in: path\n          name: key-version\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/KeyOperationsParameters\"\n        description: The parameters for wrap operation.\n        required: true\n        x-ms-client-flatten: true\n      responses:\n        \"200\":\n          description: The wrapped symmetric key.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyOperationResult\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Wraps a symmetric key using a specified key.\n      tags:\n        - Keys\n  /secrets:\n    get:\n      description: The Get Secrets operation is applicable to the entire vault. However,\n        only the base secret identifier and its attributes are provided in the\n        response. Individual secret versions are not listed in the response.\n        This operation requires the secrets/list permission.\n      operationId: GetSecrets\n      parameters:\n        - description: Maximum number of results to return in a page. If not specified, the\n            service will return up to 25 results.\n          in: query\n          name: maxresults\n          required: false\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n            maximum: 25\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: A response message containing a list of secrets in the vault along\n            with a link to the next page of secrets.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SecretListResult\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: List secrets in a specified key vault.\n      tags:\n        - Secrets\n      x-ms-pageable:\n        nextLinkName: nextLink\n  /secrets/restore:\n    post:\n      description: Restores a backed up secret, and all its versions, to a vault. This\n        operation requires the secrets/restore permission.\n      operationId: RestoreSecret\n      parameters:\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SecretRestoreParameters\"\n        description: The parameters to restore the secret.\n        required: true\n        x-ms-client-flatten: true\n      responses:\n        \"200\":\n          description: Restored secret bundle in the vault.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SecretBundle\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Restores a backed up secret to a vault.\n      tags:\n        - Secrets\n  \"/secrets/{secret-name}\":\n    delete:\n      description: The DELETE operation applies to any secret stored in Azure Key Vault.\n        DELETE cannot be applied to an individual version of a secret. This\n        operation requires the secrets/delete permission.\n      operationId: DeleteSecret\n      parameters:\n        - description: The name of the secret.\n          in: path\n          name: secret-name\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: The deleted secret and information on when the secret will be\n            deleted, and how to recover the deleted secret.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeletedSecretBundle\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Deletes a secret from a specified key vault.\n      tags:\n        - Secrets\n    put:\n      description: \" The SET operation adds a secret to the Azure Key Vault. If the named\n        secret already exists, Azure Key Vault creates a new version of that\n        secret. This operation requires the secrets/set permission.\"\n      operationId: SetSecret\n      parameters:\n        - description: The name of the secret.\n          in: path\n          name: secret-name\n          required: true\n          schema:\n            type: string\n            pattern: ^[0-9a-zA-Z-]+$\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SecretSetParameters\"\n        description: The parameters for setting the secret.\n        required: true\n        x-ms-client-flatten: true\n      responses:\n        \"200\":\n          description: A secret bundle containing the result of the set secret request.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SecretBundle\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Sets a secret in a specified key vault.\n      tags:\n        - Secrets\n  \"/secrets/{secret-name}/backup\":\n    post:\n      description: Requests that a backup of the specified secret be downloaded to the\n        client. All versions of the secret will be downloaded. This operation\n        requires the secrets/backup permission.\n      operationId: BackupSecret\n      parameters:\n        - description: The name of the secret.\n          in: path\n          name: secret-name\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: The backup blob containing the backed up secret.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BackupSecretResult\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Backs up the specified secret.\n      tags:\n        - Secrets\n  \"/secrets/{secret-name}/versions\":\n    get:\n      description: The full secret identifier and attributes are provided in the response.\n        No values are returned for the secrets. This operations requires the\n        secrets/list permission.\n      operationId: GetSecretVersions\n      parameters:\n        - description: The name of the secret.\n          in: path\n          name: secret-name\n          required: true\n          schema:\n            type: string\n        - description: Maximum number of results to return in a page. If not specified, the\n            service will return up to 25 results.\n          in: query\n          name: maxresults\n          required: false\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n            maximum: 25\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: A response message containing a list of secrets along with a link to\n            the next page of secrets.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SecretListResult\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: List all versions of the specified secret.\n      tags:\n        - Secrets\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/secrets/{secret-name}/{secret-version}\":\n    get:\n      description: The GET operation is applicable to any secret stored in Azure Key Vault.\n        This operation requires the secrets/get permission.\n      operationId: GetSecret\n      parameters:\n        - description: The name of the secret.\n          in: path\n          name: secret-name\n          required: true\n          schema:\n            type: string\n        - description: The version of the secret.\n          in: path\n          name: secret-version\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: The retrieved secret.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SecretBundle\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Get a specified secret from a given key vault.\n      tags:\n        - Secrets\n    patch:\n      description: The UPDATE operation changes specified attributes of an existing stored\n        secret. Attributes that are not specified in the request are left\n        unchanged. The value of a secret itself cannot be changed. This\n        operation requires the secrets/set permission.\n      operationId: UpdateSecret\n      parameters:\n        - description: The name of the secret.\n          in: path\n          name: secret-name\n          required: true\n          schema:\n            type: string\n        - description: The version of the secret.\n          in: path\n          name: secret-version\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SecretUpdateParameters\"\n        description: The parameters for update secret operation.\n        required: true\n        x-ms-client-flatten: true\n      responses:\n        \"200\":\n          description: The updated secret.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SecretBundle\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      summary: Updates the attributes associated with a specified secret in a given key\n        vault.\n      tags:\n        - Secrets\n  /storage:\n    get:\n      description: List storage accounts managed by the specified key vault. This operation\n        requires the storage/list permission.\n      operationId: GetStorageAccounts\n      parameters:\n        - description: Maximum number of results to return in a page. If not specified the\n            service will return up to 25 results.\n          in: query\n          name: maxresults\n          required: false\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n            maximum: 25\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: A response message containing a list of storage accounts along with\n            a link to the next page of storage accounts.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StorageListResult\"\n              examples:\n                List Storage account:\n                  $ref: \"#/components/examples/List_Storage_account\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Storage\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/storage/{storage-account-name}\":\n    delete:\n      description: Deletes a storage account. This operation requires the storage/delete\n        permission.\n      operationId: DeleteStorageAccount\n      parameters:\n        - description: The name of the storage account.\n          in: path\n          name: storage-account-name\n          required: true\n          schema:\n            type: string\n            pattern: ^[0-9a-zA-Z]+$\n          examples:\n            Delete Storage account:\n              value: deleteStrg01\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: The deleted storage account.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StorageBundle\"\n              examples:\n                Delete Storage account:\n                  $ref: \"#/components/examples/Delete_Storage_account\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Storage\n    get:\n      description: Gets information about a specified storage account. This operation\n        requires the storage/get permission.\n      operationId: GetStorageAccount\n      parameters:\n        - description: The name of the storage account.\n          in: path\n          name: storage-account-name\n          required: true\n          schema:\n            type: string\n            pattern: ^[0-9a-zA-Z]+$\n          examples:\n            Get Storage account:\n              value: readStrg01\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: The retrieved storage account.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StorageBundle\"\n              examples:\n                Get Storage account:\n                  $ref: \"#/components/examples/Get_Storage_account\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Storage\n    patch:\n      description: Updates the specified attributes associated with the given storage\n        account. This operation requires the storage/set/update permission.\n      operationId: UpdateStorageAccount\n      parameters:\n        - description: The name of the storage account.\n          in: path\n          name: storage-account-name\n          required: true\n          schema:\n            type: string\n            pattern: ^[0-9a-zA-Z]+$\n          examples:\n            Update Storage account:\n              value: patchStrg01\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/StorageAccountUpdateParameters\"\n        description: The parameters to update a storage account.\n        required: true\n        x-ms-client-flatten: true\n      responses:\n        \"200\":\n          description: The updated storage account.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StorageBundle\"\n              examples:\n                Update Storage account:\n                  $ref: \"#/components/examples/Update_Storage_account\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Storage\n    put:\n      description: Creates or updates a new storage account. This operation requires the\n        storage/set permission.\n      operationId: SetStorageAccount\n      parameters:\n        - description: The name of the storage account.\n          in: path\n          name: storage-account-name\n          required: true\n          schema:\n            type: string\n            pattern: ^[0-9a-zA-Z]+$\n          examples:\n            Set Storage account:\n              value: setStrg01\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/StorageAccountCreateParameters\"\n        description: The parameters to create a storage account.\n        required: true\n        x-ms-client-flatten: true\n      responses:\n        \"200\":\n          description: The created storage account.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StorageBundle\"\n              examples:\n                Set Storage account:\n                  $ref: \"#/components/examples/Set_Storage_account\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Storage\n  \"/storage/{storage-account-name}/regeneratekey\":\n    post:\n      description: Regenerates the specified key value for the given storage account. This\n        operation requires the storage/regeneratekey permission.\n      operationId: RegenerateStorageAccountKey\n      parameters:\n        - description: The name of the storage account.\n          in: path\n          name: storage-account-name\n          required: true\n          schema:\n            type: string\n            pattern: ^[0-9a-zA-Z]+$\n          examples:\n            Regenerate Storage account key:\n              value: regenerateKey01\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/StorageAccountRegenerteKeyParameters\"\n        description: The parameters to regenerate storage account key.\n        required: true\n        x-ms-client-flatten: true\n      responses:\n        \"200\":\n          description: The updated storage account.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StorageBundle\"\n              examples:\n                Regenerate Storage account key:\n                  $ref: \"#/components/examples/Regenerate_Storage_account_key\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Storage\n  \"/storage/{storage-account-name}/sas\":\n    get:\n      description: List storage SAS definitions for the given storage account. This\n        operation requires the storage/listsas permission.\n      operationId: GetSasDefinitions\n      parameters:\n        - description: The name of the storage account.\n          in: path\n          name: storage-account-name\n          required: true\n          schema:\n            type: string\n            pattern: ^[0-9a-zA-Z]+$\n          examples:\n            List Storage Sas Definition:\n              value: listsas01\n        - description: Maximum number of results to return in a page. If not specified the\n            service will return up to 25 results.\n          in: query\n          name: maxresults\n          required: false\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n            maximum: 25\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: A response message containing a list of SAS definitions along with a\n            link to the next page of SAS definitions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SasDefinitionListResult\"\n              examples:\n                List Storage Sas Definition:\n                  $ref: \"#/components/examples/List_Storage_Sas_Definition\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Storage\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/storage/{storage-account-name}/sas/{sas-definition-name}\":\n    delete:\n      description: Deletes a SAS definition from a specified storage account. This\n        operation requires the storage/deletesas permission.\n      operationId: DeleteSasDefinition\n      parameters:\n        - description: The name of the storage account.\n          in: path\n          name: storage-account-name\n          required: true\n          schema:\n            type: string\n            pattern: ^[0-9a-zA-Z]+$\n          examples:\n            Delete Storage Sas Definition:\n              value: deletesas01\n        - description: The name of the SAS definition.\n          in: path\n          name: sas-definition-name\n          required: true\n          schema:\n            type: string\n            pattern: ^[0-9a-zA-Z]+$\n          examples:\n            Delete Storage Sas Definition:\n              value: deleteStrgSasDef01\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: The deleted SAS definition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SasDefinitionBundle\"\n              examples:\n                Delete Storage Sas Definition:\n                  $ref: \"#/components/examples/Delete_Storage_Sas_Definition\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Storage\n    get:\n      description: Gets information about a SAS definition for the specified storage\n        account. This operation requires the storage/getsas permission.\n      operationId: GetSasDefinition\n      parameters:\n        - description: The name of the storage account.\n          in: path\n          name: storage-account-name\n          required: true\n          schema:\n            type: string\n            pattern: ^[0-9a-zA-Z]+$\n          examples:\n            Get Storage Sas Definition:\n              value: getsas01\n        - description: The name of the SAS definition.\n          in: path\n          name: sas-definition-name\n          required: true\n          schema:\n            type: string\n            pattern: ^[0-9a-zA-Z]+$\n          examples:\n            Get Storage Sas Definition:\n              value: getStrgSasDef01\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: The retrieved SAS definition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SasDefinitionBundle\"\n              examples:\n                Get Storage Sas Definition:\n                  $ref: \"#/components/examples/Get_Storage_Sas_Definition\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Storage\n    patch:\n      description: Updates the specified attributes associated with the given SAS\n        definition. This operation requires the storage/setsas permission.\n      operationId: UpdateSasDefinition\n      parameters:\n        - description: The name of the storage account.\n          in: path\n          name: storage-account-name\n          required: true\n          schema:\n            type: string\n            pattern: ^[0-9a-zA-Z]+$\n          examples:\n            Update Storage Sas definition:\n              value: patchsas01\n        - description: The name of the SAS definition.\n          in: path\n          name: sas-definition-name\n          required: true\n          schema:\n            type: string\n            pattern: ^[0-9a-zA-Z]+$\n          examples:\n            Update Storage Sas definition:\n              value: patchStrgSasDef01\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SasDefinitionUpdateParameters\"\n        description: The parameters to update a SAS definition.\n        required: true\n        x-ms-client-flatten: true\n      responses:\n        \"200\":\n          description: The updated SAS definition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SasDefinitionBundle\"\n              examples:\n                Update Storage Sas definition:\n                  $ref: \"#/components/examples/Update_Storage_Sas_definition\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Storage\n    put:\n      description: Creates or updates a new SAS definition for the specified storage\n        account. This operation requires the storage/setsas permission.\n      operationId: SetSasDefinition\n      parameters:\n        - description: The name of the storage account.\n          in: path\n          name: storage-account-name\n          required: true\n          schema:\n            type: string\n            pattern: ^[0-9a-zA-Z]+$\n          examples:\n            Set Storage Sas definition:\n              value: setsas01\n        - description: The name of the SAS definition.\n          in: path\n          name: sas-definition-name\n          required: true\n          schema:\n            type: string\n            pattern: ^[0-9a-zA-Z]+$\n          examples:\n            Set Storage Sas definition:\n              value: setStrgSasDef01\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SasDefinitionCreateParameters\"\n        description: The parameters to create a SAS definition.\n        required: true\n        x-ms-client-flatten: true\n      responses:\n        \"200\":\n          description: The created SAS definition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SasDefinitionBundle\"\n              examples:\n                Set Storage Sas definition:\n                  $ref: \"#/components/examples/Set_Storage_Sas_definition\"\n        default:\n          description: Key Vault error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Storage\nservers:\n  - url: https://azure.local\n  - url: \"{vaultBaseUrl}\"\n    variables:\n      vaultBaseUrl:\n        description: The vault name, for example https://myvault.vault.azure.net.\n        x-ms-skip-url-encoding: true\n        default: \"\"\ncomponents:\n  examples:\n    List_Storage_account:\n      value:\n        nextLink: https://{BaseUri}/storage?api-version=2016-10-01\u0026%24skiptoken=\u003ctoken\u003e\n        value:\n          - attributes:\n              created: 1490738386\n              enabled: true\n              updated: 1490738386\n            id: https://storage-sdk-test.vault-int.azure-int.net/storage/listStorage01\n            resourceId: /subscriptions/{subId}/resourceGroups/{rgName}/providers/Microsoft.Storage/storageAccounts/kvstorageacc1\n            tags:\n              tag1: val1\n              tag2: val2\n          - attributes:\n              created: 1490738386\n              enabled: true\n              updated: 1490738386\n            id: https://storage-sdk-test.vault-int.azure-int.net/storage/listStorage02\n            resourceId: /subscriptions/{subId}/resourceGroups/{rgName}/providers/Microsoft.Storage/storageAccounts/kvstorageacc2\n            tags:\n              tag3: val3\n              tag4: val4\n    Delete_Storage_account:\n      value:\n        activeKeyName: key1\n        attributes:\n          created: 1490738386\n          enabled: true\n          updated: 1490738386\n        autoRegenerateKey: true\n        id: https://storage-sdk-test.vault-int.azure-int.net/storage/deleteStrg01\n        regenerationPeriod: P30D\n        resourceId: /subscriptions/{subId}/resourceGroups/{rgName}/providers/Microsoft.Storage/storageAccounts/kvstorageacc\n        tags:\n          tag1: val1\n          tag2: val2\n    Get_Storage_account:\n      value:\n        activeKeyName: key1\n        attributes:\n          created: 1490738386\n          enabled: true\n          updated: 1490738386\n        autoRegenerateKey: true\n        id: https://storage-sdk-test.vault-int.azure-int.net/storage/readStrg01\n        regenerationPeriod: P30D\n        resourceId: /subscriptions/{subId}/resourceGroups/{rgName}/providers/Microsoft.Storage/storageAccounts/kvstorageacc\n        tags:\n          tag1: val1\n          tag2: val2\n    Update_Storage_account:\n      value:\n        activeKeyName: key1\n        attributes:\n          created: 1490738386\n          enabled: true\n          updated: 1490738386\n        autoRegenerateKey: true\n        id: https://storage-sdk-test.vault-int.azure-int.net/storage/patchStrg01\n        regenerationPeriod: P10D\n        resourceId: /subscriptions/{subId}/resourceGroups/{rgName}/providers/Microsoft.Storage/storageAccounts/kvstorageacc\n        tags:\n          tag1: val1\n          tag2: val2\n    Set_Storage_account:\n      value:\n        activeKeyName: key2\n        attributes:\n          created: 1490738386\n          enabled: true\n          updated: 1490738386\n        autoRegenerateKey: true\n        id: https://storage-sdk-test.vault-int.azure-int.net/storage/setStrg01\n        regenerationPeriod: P15D\n        resourceId: /subscriptions/{subId}/resourceGroups/{rgName}/providers/Microsoft.Storage/storageAccounts/kvstorageacc\n        tags:\n          tag1: val1\n          tag2: val2\n    Regenerate_Storage_account_key:\n      value:\n        activeKeyName: key2\n        attributes:\n          created: 1490738386\n          enabled: true\n          updated: 1490738386\n        autoRegenerateKey: true\n        id: https://storage-sdk-test.vault-int.azure-int.net/storage/regenerateKey01\n        regenerationPeriod: P10D\n        resourceId: /subscriptions/{subId}/resourceGroups/{rgName}/providers/Microsoft.Storage/storageAccounts/kvstorageacc\n        tags:\n          tag1: val1\n          tag2: val2\n    List_Storage_Sas_Definition:\n      value:\n        nextLink: https://{BaseUri}/storage/listsas01/sas?api-version=2016-10-01\u0026%24skiptoken=\u003ctoken\u003e\n        value:\n          - attributes:\n              created: 1490738438\n              enabled: true\n              updated: 1490738438\n            id: https://storage-sdk-test.vault-int.azure-int.net/storage/listsas01/sas/listStrgSasDef01\n            sid: https://storage-sdk-test.vault-int.azure-int.net/secrets/listsas01-listStrgSasDef01\n          - attributes:\n              created: 1490738438\n              enabled: true\n              updated: 1490738438\n            id: https://storage-sdk-test.vault-int.azure-int.net/storage/listsas01/sas/listStrgSasDef02\n            sid: https://storage-sdk-test.vault-int.azure-int.net/secrets/listsas01-listStrgSasDef02\n    Delete_Storage_Sas_Definition:\n      value:\n        attributes:\n          created: 1490738438\n          enabled: true\n          updated: 1490738438\n        id: https://storage-sdk-test.vault-int.azure-int.net/storage/deletesas01/sas/deleteStrgSasDef01\n        parameters:\n          sasType: account\n          signedPermissions: rw\n          signedProtocols: https\n          signedResourceTypes: sco\n          signedServices: bq\n          signedVersion: 2016-05-31\n          validityPeriod: PT10H\n        sid: https://storage-sdk-test.vault-int.azure-int.net/secrets/deletesas01-deleteStrgSasDef01\n    Get_Storage_Sas_Definition:\n      value:\n        attributes:\n          created: 1490738438\n          enabled: true\n          updated: 1490738438\n        id: https://storage-sdk-test.vault-int.azure-int.net/storage/getsas01/sas/getStrgSasDef01\n        parameters:\n          sasType: account\n          signedPermissions: rw\n          signedProtocols: https\n          signedResourceTypes: sco\n          signedServices: bq\n          signedVersion: 2016-05-31\n          validityPeriod: PT10H\n        sid: https://storage-sdk-test.vault-int.azure-int.net/secrets/getsas01-getStrgSasDef01\n    Update_Storage_Sas_definition:\n      value:\n        attributes:\n          created: 1490738438\n          enabled: true\n          updated: 1490738438\n        id: https://storage-sdk-test.vault-int.azure-int.net/storage/patchsas01/sas/patchStrgSasDef01\n        parameters:\n          sasType: account\n          signedPermissions: rl\n          signedProtocols: httpOrHttps\n          signedResourceTypes: sco\n          signedServices: t\n          signedVersion: 2016-05-31\n          validityPeriod: PT10H\n        sid: https://storage-sdk-test.vault-int.azure-int.net/secrets/patchsas01-patchStrgSasDef01\n    Set_Storage_Sas_definition:\n      value:\n        attributes:\n          created: 1490738438\n          enabled: true\n          updated: 1490738438\n        id: https://storage-sdk-test.vault-int.azure-int.net/storage/setsas01/sas/setStrgSasDef01\n        parameters:\n          sasType: account\n          signedPermissions: rw\n          signedProtocols: https\n          signedResourceTypes: sco\n          signedServices: bq\n          signedVersion: 2016-05-31\n          validityPeriod: PT10H\n        sid: https://storage-sdk-test.vault-int.azure-int.net/secrets/setsas01-setStrgSasDef01\n  parameters:\n    ApiVersionParameter:\n      description: Client API version.\n      in: query\n      name: api-version\n      required: true\n      schema:\n        type: string\n      examples:\n        List Storage account:\n          value: 2016-10-01\n        Delete Storage account:\n          value: 2016-10-01\n        Get Storage account:\n          value: 2016-10-01\n        Update Storage account:\n          value: 2016-10-01\n        Set Storage account:\n          value: 2016-10-01\n        Regenerate Storage account key:\n          value: 2016-10-01\n        List Storage Sas Definition:\n          value: 2016-10-01\n        Delete Storage Sas Definition:\n          value: 2016-10-01\n        Get Storage Sas Definition:\n          value: 2016-10-01\n        Update Storage Sas definition:\n          value: 2016-10-01\n        Set Storage Sas definition:\n          value: 2016-10-01\n  schemas:\n    Action:\n      description: The action that will be executed.\n      properties:\n        action_type:\n          description: The type of the action.\n          enum:\n            - EmailContacts\n            - AutoRenew\n          type: string\n          x-ms-enum:\n            modelAsString: false\n            name: ActionType\n    AdministratorDetails:\n      description: Details of the organization administrator of the certificate issuer.\n      properties:\n        email:\n          description: Email address.\n          type: string\n          x-ms-client-name: EmailAddress\n        first_name:\n          description: First name.\n          type: string\n        last_name:\n          description: Last name.\n          type: string\n        phone:\n          description: Phone number.\n          type: string\n    Attributes:\n      description: The object attributes managed by the KeyVault service.\n      properties:\n        created:\n          description: Creation time in UTC.\n          format: unixtime\n          readOnly: true\n          type: integer\n        enabled:\n          description: Determines whether the object is enabled.\n          type: boolean\n        exp:\n          description: Expiry date in UTC.\n          format: unixtime\n          type: integer\n          x-ms-client-name: Expires\n        nbf:\n          description: Not before date in UTC.\n          format: unixtime\n          type: integer\n          x-ms-client-name: NotBefore\n        updated:\n          description: Last updated time in UTC.\n          format: unixtime\n          readOnly: true\n          type: integer\n    BackupKeyResult:\n      description: The backup key result, containing the backup blob.\n      properties:\n        value:\n          description: The backup blob containing the backed up key.\n          format: base64url\n          readOnly: true\n          type: string\n    BackupSecretResult:\n      description: The backup secret result, containing the backup blob.\n      properties:\n        value:\n          description: The backup blob containing the backed up secret.\n          format: base64url\n          readOnly: true\n          type: string\n    CertificateAttributes:\n      allOf:\n        - $ref: \"#/components/schemas/Attributes\"\n      description: The certificate management attributes.\n      properties:\n        recoveryLevel:\n          description: Reflects the deletion recovery level currently in effect for\n            certificates in the current vault. If it contains 'Purgeable', the\n            certificate can be permanently deleted by a privileged user;\n            otherwise, only the system can purge the certificate, at the end of\n            the retention interval.\n          enum:\n            - Purgeable\n            - Recoverable+Purgeable\n            - Recoverable\n            - Recoverable+ProtectedSubscription\n          readOnly: true\n          type: string\n          x-ms-enum:\n            modelAsString: true\n            name: DeletionRecoveryLevel\n          nullable: false\n    CertificateBundle:\n      description: A certificate bundle consists of a certificate (X509) plus its\n        attributes.\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/CertificateAttributes\"\n        cer:\n          description: CER contents of x509 certificate.\n          format: byte\n          type: string\n        contentType:\n          description: The content type of the secret.\n          type: string\n        id:\n          description: The certificate id.\n          readOnly: true\n          type: string\n        kid:\n          description: The key id.\n          readOnly: true\n          type: string\n        policy:\n          $ref: \"#/components/schemas/CertificatePolicy\"\n        sid:\n          description: The secret id.\n          readOnly: true\n          type: string\n        tags:\n          additionalProperties:\n            type: string\n          description: Application specific metadata in the form of key-value pairs\n          type: object\n        x5t:\n          description: Thumbprint of the certificate.\n          format: base64url\n          readOnly: true\n          type: string\n          x-ms-client-name: X509Thumbprint\n    CertificateCreateParameters:\n      description: The certificate create parameters.\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/CertificateAttributes\"\n        policy:\n          $ref: \"#/components/schemas/CertificatePolicy\"\n        tags:\n          additionalProperties:\n            type: string\n          description: Application specific metadata in the form of key-value pairs.\n          type: object\n    CertificateImportParameters:\n      description: The certificate import parameters.\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/CertificateAttributes\"\n        policy:\n          $ref: \"#/components/schemas/CertificatePolicy\"\n        pwd:\n          description: If the private key in base64EncodedCertificate is encrypted, the\n            password used for encryption.\n          type: string\n          x-ms-client-name: password\n        tags:\n          additionalProperties:\n            type: string\n          description: Application specific metadata in the form of key-value pairs.\n          type: object\n        value:\n          description: Base64 encoded representation of the certificate object to import.\n            This certificate needs to contain the private key.\n          type: string\n          x-ms-client-name: base64EncodedCertificate\n      required:\n        - value\n    CertificateIssuerItem:\n      description: The certificate issuer item containing certificate issuer metadata.\n      properties:\n        id:\n          description: Certificate Identifier.\n          type: string\n        provider:\n          description: The issuer provider.\n          type: string\n    CertificateIssuerListResult:\n      description: The certificate issuer list result.\n      properties:\n        nextLink:\n          description: The URL to get the next set of certificate issuers.\n          readOnly: true\n          type: string\n        value:\n          description: A response message containing a list of certificate issuers in the\n            key vault along with a link to the next page of certificate issuers.\n          items:\n            $ref: \"#/components/schemas/CertificateIssuerItem\"\n          readOnly: true\n          type: array\n    CertificateIssuerSetParameters:\n      description: The certificate issuer set parameters.\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/IssuerAttributes\"\n        credentials:\n          $ref: \"#/components/schemas/IssuerCredentials\"\n        org_details:\n          $ref: \"#/components/schemas/OrganizationDetails\"\n        provider:\n          description: The issuer provider.\n          type: string\n      required:\n        - provider\n    CertificateIssuerUpdateParameters:\n      description: The certificate issuer update parameters.\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/IssuerAttributes\"\n        credentials:\n          $ref: \"#/components/schemas/IssuerCredentials\"\n        org_details:\n          $ref: \"#/components/schemas/OrganizationDetails\"\n        provider:\n          description: The issuer provider.\n          type: string\n    CertificateItem:\n      description: The certificate item containing certificate metadata.\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/CertificateAttributes\"\n        id:\n          description: Certificate identifier.\n          type: string\n        tags:\n          additionalProperties:\n            type: string\n          description: Application specific metadata in the form of key-value pairs.\n          type: object\n        x5t:\n          description: Thumbprint of the certificate.\n          format: base64url\n          type: string\n          x-ms-client-name: X509Thumbprint\n    CertificateListResult:\n      description: The certificate list result.\n      properties:\n        nextLink:\n          description: The URL to get the next set of certificates.\n          readOnly: true\n          type: string\n        value:\n          description: A response message containing a list of certificates in the key\n            vault along with a link to the next page of certificates.\n          items:\n            $ref: \"#/components/schemas/CertificateItem\"\n          readOnly: true\n          type: array\n    CertificateMergeParameters:\n      description: The certificate merge parameters\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/CertificateAttributes\"\n        tags:\n          additionalProperties:\n            type: string\n          description: Application specific metadata in the form of key-value pairs.\n          type: object\n        x5c:\n          description: The certificate or the certificate chain to merge.\n          items:\n            format: byte\n            type: string\n          type: array\n          x-ms-client-name: x509Certificates\n      required:\n        - x5c\n    CertificateOperation:\n      description: A certificate operation is returned in case of asynchronous requests.\n      properties:\n        cancellation_requested:\n          description: Indicates if cancellation was requested on the certificate operation.\n          type: boolean\n        csr:\n          description: The certificate signing request (CSR) that is being used in the\n            certificate operation.\n          format: byte\n          type: string\n        error:\n          $ref: \"#/components/schemas/Error\"\n        id:\n          description: The certificate id.\n          readOnly: true\n          type: string\n        issuer:\n          $ref: \"#/components/schemas/IssuerParameters\"\n        request_id:\n          description: Identifier for the certificate operation.\n          type: string\n        status:\n          description: Status of the certificate operation.\n          type: string\n        status_details:\n          description: The status details of the certificate operation.\n          type: string\n        target:\n          description: Location which contains the result of the certificate operation.\n          type: string\n    CertificateOperationUpdateParameter:\n      description: The certificate operation update parameters.\n      properties:\n        cancellation_requested:\n          description: Indicates if cancellation was requested on the certificate operation.\n          type: boolean\n      required:\n        - cancellation_requested\n    CertificatePolicy:\n      description: Management policy for a certificate.\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/CertificateAttributes\"\n        id:\n          description: The certificate id.\n          readOnly: true\n          type: string\n        issuer:\n          $ref: \"#/components/schemas/IssuerParameters\"\n        key_props:\n          $ref: \"#/components/schemas/KeyProperties\"\n        lifetime_actions:\n          description: Actions that will be performed by Key Vault over the lifetime of a\n            certificate.\n          items:\n            $ref: \"#/components/schemas/LifetimeAction\"\n          type: array\n        secret_props:\n          $ref: \"#/components/schemas/SecretProperties\"\n        x509_props:\n          $ref: \"#/components/schemas/X509CertificateProperties\"\n    CertificateUpdateParameters:\n      description: The certificate update parameters.\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/CertificateAttributes\"\n        policy:\n          $ref: \"#/components/schemas/CertificatePolicy\"\n        tags:\n          additionalProperties:\n            type: string\n          description: Application specific metadata in the form of key-value pairs.\n          type: object\n    Contact:\n      description: The contact information for the vault certificates.\n      properties:\n        email:\n          description: Email address.\n          type: string\n          x-ms-client-name: EmailAddress\n        name:\n          description: Name.\n          type: string\n        phone:\n          description: Phone number.\n          type: string\n    Contacts:\n      description: The contacts for the vault certificates.\n      properties:\n        contacts:\n          description: The contact list for the vault certificates.\n          items:\n            $ref: \"#/components/schemas/Contact\"\n          type: array\n          x-ms-client-name: ContactList\n        id:\n          description: Identifier for the contacts collection.\n          readOnly: true\n          type: string\n    DeletedCertificateBundle:\n      allOf:\n        - $ref: \"#/components/schemas/CertificateBundle\"\n      description: A Deleted Certificate consisting of its previous id, attributes and its\n        tags, as well as information on when it will be purged.\n      properties:\n        deletedDate:\n          description: The time when the certificate was deleted, in UTC\n          format: unixtime\n          readOnly: true\n          type: integer\n        recoveryId:\n          description: The url of the recovery object, used to identify and recover the\n            deleted certificate.\n          type: string\n        scheduledPurgeDate:\n          description: The time when the certificate is scheduled to be purged, in UTC\n          format: unixtime\n          readOnly: true\n          type: integer\n    DeletedCertificateItem:\n      allOf:\n        - $ref: \"#/components/schemas/CertificateItem\"\n      description: The deleted certificate item containing metadata about the deleted\n        certificate.\n      properties:\n        deletedDate:\n          description: The time when the certificate was deleted, in UTC\n          format: unixtime\n          readOnly: true\n          type: integer\n        recoveryId:\n          description: The url of the recovery object, used to identify and recover the\n            deleted certificate.\n          type: string\n        scheduledPurgeDate:\n          description: The time when the certificate is scheduled to be purged, in UTC\n          format: unixtime\n          readOnly: true\n          type: integer\n    DeletedCertificateListResult:\n      description: A list of certificates that have been deleted in this vault.\n      properties:\n        nextLink:\n          description: The URL to get the next set of deleted certificates.\n          readOnly: true\n          type: string\n        value:\n          description: A response message containing a list of deleted certificates in the\n            vault along with a link to the next page of deleted certificates\n          items:\n            $ref: \"#/components/schemas/DeletedCertificateItem\"\n          readOnly: true\n          type: array\n    DeletedKeyBundle:\n      allOf:\n        - $ref: \"#/components/schemas/KeyBundle\"\n      description: A DeletedKeyBundle consisting of a WebKey plus its Attributes and\n        deletion info\n      properties:\n        deletedDate:\n          description: The time when the key was deleted, in UTC\n          format: unixtime\n          readOnly: true\n          type: integer\n        recoveryId:\n          description: The url of the recovery object, used to identify and recover the\n            deleted key.\n          type: string\n        scheduledPurgeDate:\n          description: The time when the key is scheduled to be purged, in UTC\n          format: unixtime\n          readOnly: true\n          type: integer\n    DeletedKeyItem:\n      allOf:\n        - $ref: \"#/components/schemas/KeyItem\"\n      description: The deleted key item containing the deleted key metadata and information\n        about deletion.\n      properties:\n        deletedDate:\n          description: The time when the key was deleted, in UTC\n          format: unixtime\n          readOnly: true\n          type: integer\n        recoveryId:\n          description: The url of the recovery object, used to identify and recover the\n            deleted key.\n          type: string\n        scheduledPurgeDate:\n          description: The time when the key is scheduled to be purged, in UTC\n          format: unixtime\n          readOnly: true\n          type: integer\n    DeletedKeyListResult:\n      description: A list of keys that have been deleted in this vault.\n      properties:\n        nextLink:\n          description: The URL to get the next set of deleted keys.\n          readOnly: true\n          type: string\n        value:\n          description: A response message containing a list of deleted keys in the vault\n            along with a link to the next page of deleted keys\n          items:\n            $ref: \"#/components/schemas/DeletedKeyItem\"\n          readOnly: true\n          type: array\n    DeletedSecretBundle:\n      allOf:\n        - $ref: \"#/components/schemas/SecretBundle\"\n      description: A Deleted Secret consisting of its previous id, attributes and its tags,\n        as well as information on when it will be purged.\n      properties:\n        deletedDate:\n          description: The time when the secret was deleted, in UTC\n          format: unixtime\n          readOnly: true\n          type: integer\n        recoveryId:\n          description: The url of the recovery object, used to identify and recover the\n            deleted secret.\n          type: string\n        scheduledPurgeDate:\n          description: The time when the secret is scheduled to be purged, in UTC\n          format: unixtime\n          readOnly: true\n          type: integer\n    DeletedSecretItem:\n      allOf:\n        - $ref: \"#/components/schemas/SecretItem\"\n      description: The deleted secret item containing metadata about the deleted secret.\n      properties:\n        deletedDate:\n          description: The time when the secret was deleted, in UTC\n          format: unixtime\n          readOnly: true\n          type: integer\n        recoveryId:\n          description: The url of the recovery object, used to identify and recover the\n            deleted secret.\n          type: string\n        scheduledPurgeDate:\n          description: The time when the secret is scheduled to be purged, in UTC\n          format: unixtime\n          readOnly: true\n          type: integer\n    DeletedSecretListResult:\n      description: The deleted secret list result\n      properties:\n        nextLink:\n          description: The URL to get the next set of deleted secrets.\n          readOnly: true\n          type: string\n        value:\n          description: A response message containing a list of the deleted secrets in the\n            vault along with a link to the next page of deleted secrets\n          items:\n            $ref: \"#/components/schemas/DeletedSecretItem\"\n          readOnly: true\n          type: array\n    Error:\n      description: The key vault server error.\n      properties:\n        code:\n          description: The error code.\n          readOnly: true\n          type: string\n        innererror:\n          $ref: \"#/components/schemas/Error\"\n        message:\n          description: The error message.\n          readOnly: true\n          type: string\n    IssuerAttributes:\n      description: The attributes of an issuer managed by the Key Vault service.\n      properties:\n        created:\n          description: Creation time in UTC.\n          format: unixtime\n          readOnly: true\n          type: integer\n        enabled:\n          description: Determines whether the issuer is enabled.\n          type: boolean\n        updated:\n          description: Last updated time in UTC.\n          format: unixtime\n          readOnly: true\n          type: integer\n    IssuerBundle:\n      description: The issuer for Key Vault certificate.\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/IssuerAttributes\"\n        credentials:\n          $ref: \"#/components/schemas/IssuerCredentials\"\n        id:\n          description: Identifier for the issuer object.\n          readOnly: true\n          type: string\n        org_details:\n          $ref: \"#/components/schemas/OrganizationDetails\"\n        provider:\n          description: The issuer provider.\n          type: string\n    IssuerCredentials:\n      description: The credentials to be used for the certificate issuer.\n      properties:\n        account_id:\n          description: The user name/account name/account id.\n          type: string\n        pwd:\n          description: The password/secret/account key.\n          type: string\n          x-ms-client-name: Password\n    IssuerParameters:\n      description: Parameters for the issuer of the X509 component of a certificate.\n      properties:\n        cty:\n          description: Type of certificate to be requested from the issuer provider.\n          type: string\n          x-ms-client-name: CertificateType\n        name:\n          description: Name of the referenced issuer object or reserved names; for example,\n            'Self' or 'Unknown'.\n          type: string\n    JsonWebKey:\n      description: As of http://tools.ietf.org/html/draft-ietf-jose-json-web-key-18\n      properties:\n        crv:\n          description: Elliptic curve name. For valid values, see JsonWebKeyCurveName.\n          enum:\n            - P-256\n            - P-384\n            - P-521\n            - SECP256K1\n          type: string\n          x-ms-enum:\n            modelAsString: true\n            name: JsonWebKeyCurveName\n            values:\n              - description: The NIST P-256 elliptic curve, AKA SECG curve SECP256R1.\n                value: P-256\n              - description: The NIST P-384 elliptic curve, AKA SECG curve SECP384R1.\n                value: P-384\n              - description: The NIST P-521 elliptic curve, AKA SECG curve SECP521R1.\n                value: P-521\n              - description: The SECG SECP256K1 elliptic curve.\n                value: SECP256K1\n        d:\n          description: RSA private exponent, or the D component of an EC private key.\n          format: base64url\n          type: string\n        dp:\n          description: RSA private key parameter.\n          format: base64url\n          type: string\n          x-ms-client-name: DP\n        dq:\n          description: RSA private key parameter.\n          format: base64url\n          type: string\n          x-ms-client-name: DQ\n        e:\n          description: RSA public exponent.\n          format: base64url\n          type: string\n        k:\n          description: Symmetric key.\n          format: base64url\n          type: string\n        key_hsm:\n          description: HSM Token, used with 'Bring Your Own Key'.\n          format: base64url\n          type: string\n          x-ms-client-name: t\n        key_ops:\n          items:\n            description: Supported key operations.\n            type: string\n          type: array\n        kid:\n          description: Key identifier.\n          type: string\n        kty:\n          description: JsonWebKey key type (kty).\n          enum:\n            - EC\n            - EC-HSM\n            - RSA\n            - RSA-HSM\n            - oct\n          type: string\n          x-ms-enum:\n            modelAsString: true\n            name: JsonWebKeyType\n        n:\n          description: RSA modulus.\n          format: base64url\n          type: string\n        p:\n          description: RSA secret prime.\n          format: base64url\n          type: string\n        q:\n          description: RSA secret prime, with p \u003c q.\n          format: base64url\n          type: string\n        qi:\n          description: RSA private key parameter.\n          format: base64url\n          type: string\n          x-ms-client-name: QI\n        x:\n          description: X component of an EC public key.\n          format: base64url\n          type: string\n        y:\n          description: Y component of an EC public key.\n          format: base64url\n          type: string\n    KeyAttributes:\n      allOf:\n        - $ref: \"#/components/schemas/Attributes\"\n      description: The attributes of a key managed by the key vault service.\n      properties:\n        recoveryLevel:\n          description: Reflects the deletion recovery level currently in effect for keys in\n            the current vault. If it contains 'Purgeable' the key can be\n            permanently deleted by a privileged user; otherwise, only the system\n            can purge the key, at the end of the retention interval.\n          enum:\n            - Purgeable\n            - Recoverable+Purgeable\n            - Recoverable\n            - Recoverable+ProtectedSubscription\n          readOnly: true\n          type: string\n          x-ms-enum:\n            modelAsString: true\n            name: DeletionRecoveryLevel\n            values:\n              - description: Soft-delete is not enabled for this vault. A DELETE operation\n                  results in immediate and irreversible data loss.\n                value: Purgeable\n              - description: Soft-delete is enabled for this vault; A privileged user may\n                  trigger an immediate, irreversible deletion(purge) of a\n                  deleted entity.\n                value: Recoverable+Purgeable\n              - description: Soft-delete is enabled for this vault and purge has been\n                  disabled. A deleted entity will remain in this state until\n                  recovered, or the end of the retention interval.\n                value: Recoverable\n              - description: Soft-delete is enabled for this vault, and the subscription is\n                  protected against immediate deletion.\n                value: Recoverable+ProtectedSubscription\n          nullable: false\n    KeyBundle:\n      description: A KeyBundle consisting of a WebKey plus its attributes.\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/KeyAttributes\"\n        key:\n          $ref: \"#/components/schemas/JsonWebKey\"\n        managed:\n          description: True if the key's lifetime is managed by key vault. If this is a key\n            backing a certificate, then managed will be true.\n          readOnly: true\n          type: boolean\n        tags:\n          additionalProperties:\n            type: string\n          description: Application specific metadata in the form of key-value pairs.\n          type: object\n    KeyCreateParameters:\n      description: The key create parameters.\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/KeyAttributes\"\n        crv:\n          description: Elliptic curve name. For valid values, see JsonWebKeyCurveName.\n          enum:\n            - P-256\n            - P-384\n            - P-521\n            - SECP256K1\n          type: string\n          x-ms-client-name: curve\n          x-ms-enum:\n            modelAsString: true\n            name: JsonWebKeyCurveName\n        key_ops:\n          items:\n            description: JSON web key operations. For more information, see\n              JsonWebKeyOperation.\n            enum:\n              - encrypt\n              - decrypt\n              - sign\n              - verify\n              - wrapKey\n              - unwrapKey\n            type: string\n            x-ms-enum:\n              modelAsString: true\n              name: JsonWebKeyOperation\n          type: array\n        key_size:\n          description: \"The key size in bits. For example: 2048, 3072, or 4096 for RSA.\"\n          format: int32\n          type: integer\n        kty:\n          description: The type of key to create. For valid values, see JsonWebKeyType.\n          enum:\n            - EC\n            - EC-HSM\n            - RSA\n            - RSA-HSM\n            - oct\n          minLength: 1\n          type: string\n          x-ms-enum:\n            modelAsString: true\n            name: JsonWebKeyType\n        tags:\n          additionalProperties:\n            type: string\n          description: Application specific metadata in the form of key-value pairs.\n          type: object\n      required:\n        - kty\n    KeyImportParameters:\n      description: The key import parameters.\n      properties:\n        Hsm:\n          description: Whether to import as a hardware key (HSM) or software key.\n          type: boolean\n        attributes:\n          $ref: \"#/components/schemas/KeyAttributes\"\n        key:\n          $ref: \"#/components/schemas/JsonWebKey\"\n        tags:\n          additionalProperties:\n            type: string\n          description: Application specific metadata in the form of key-value pairs.\n          type: object\n      required:\n        - key\n    KeyItem:\n      description: The key item containing key metadata.\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/KeyAttributes\"\n        kid:\n          description: Key identifier.\n          type: string\n        managed:\n          description: True if the key's lifetime is managed by key vault. If this is a key\n            backing a certificate, then managed will be true.\n          readOnly: true\n          type: boolean\n        tags:\n          additionalProperties:\n            type: string\n          description: Application specific metadata in the form of key-value pairs.\n          type: object\n    KeyListResult:\n      description: The key list result.\n      properties:\n        nextLink:\n          description: The URL to get the next set of keys.\n          readOnly: true\n          type: string\n        value:\n          description: A response message containing a list of keys in the key vault along\n            with a link to the next page of keys.\n          items:\n            $ref: \"#/components/schemas/KeyItem\"\n          readOnly: true\n          type: array\n    KeyOperationResult:\n      description: The key operation result.\n      properties:\n        kid:\n          description: Key identifier\n          readOnly: true\n          type: string\n        value:\n          format: base64url\n          readOnly: true\n          type: string\n          x-ms-client-name: result\n    KeyOperationsParameters:\n      description: The key operations parameters.\n      properties:\n        alg:\n          description: algorithm identifier\n          enum:\n            - RSA-OAEP\n            - RSA-OAEP-256\n            - RSA1_5\n          minLength: 1\n          type: string\n          x-ms-client-name: algorithm\n          x-ms-enum:\n            modelAsString: true\n            name: JsonWebKeyEncryptionAlgorithm\n        value:\n          format: base64url\n          type: string\n      required:\n        - alg\n        - value\n    KeyProperties:\n      description: Properties of the key pair backing a certificate.\n      properties:\n        exportable:\n          description: Indicates if the private key can be exported.\n          type: boolean\n        key_size:\n          description: \"The key size in bits. For example: 2048, 3072, or 4096 for RSA.\"\n          format: int32\n          type: integer\n        kty:\n          description: The key type.\n          type: string\n          x-ms-client-name: keyType\n        reuse_key:\n          description: Indicates if the same key pair will be used on certificate renewal.\n          type: boolean\n    KeyRestoreParameters:\n      description: The key restore parameters.\n      properties:\n        value:\n          description: The backup blob associated with a key bundle.\n          format: base64url\n          type: string\n          x-ms-client-name: keyBundleBackup\n      required:\n        - value\n    KeySignParameters:\n      description: The key operations parameters.\n      properties:\n        alg:\n          description: The signing/verification algorithm identifier. For more information\n            on possible algorithm types, see JsonWebKeySignatureAlgorithm.\n          enum:\n            - PS256\n            - PS384\n            - PS512\n            - RS256\n            - RS384\n            - RS512\n            - RSNULL\n            - ES256\n            - ES384\n            - ES512\n            - ECDSA256\n          minLength: 1\n          type: string\n          x-ms-client-name: algorithm\n          x-ms-enum:\n            modelAsString: true\n            name: JsonWebKeySignatureAlgorithm\n        value:\n          format: base64url\n          type: string\n      required:\n        - alg\n        - value\n    KeyUpdateParameters:\n      description: The key update parameters.\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/KeyAttributes\"\n        key_ops:\n          description: Json web key operations. For more information on possible key\n            operations, see JsonWebKeyOperation.\n          items:\n            enum:\n              - encrypt\n              - decrypt\n              - sign\n              - verify\n              - wrapKey\n              - unwrapKey\n            type: string\n            x-ms-enum:\n              modelAsString: true\n              name: JsonWebKeyOperation\n          type: array\n        tags:\n          additionalProperties:\n            type: string\n          description: Application specific metadata in the form of key-value pairs.\n          type: object\n    KeyVaultError:\n      description: The key vault error exception.\n      properties:\n        error:\n          $ref: \"#/components/schemas/Error\"\n    KeyVerifyParameters:\n      description: The key verify parameters.\n      properties:\n        alg:\n          description: The signing/verification algorithm. For more information on possible\n            algorithm types, see JsonWebKeySignatureAlgorithm.\n          enum:\n            - PS256\n            - PS384\n            - PS512\n            - RS256\n            - RS384\n            - RS512\n            - RSNULL\n            - ES256\n            - ES384\n            - ES512\n            - ECDSA256\n          minLength: 1\n          type: string\n          x-ms-client-name: algorithm\n          x-ms-enum:\n            modelAsString: true\n            name: JsonWebKeySignatureAlgorithm\n        digest:\n          description: The digest used for signing.\n          format: base64url\n          type: string\n        value:\n          description: The signature to be verified.\n          format: base64url\n          type: string\n          x-ms-client-name: signature\n      required:\n        - alg\n        - digest\n        - value\n    KeyVerifyResult:\n      description: The key verify result.\n      properties:\n        value:\n          description: True if the signature is verified, otherwise false.\n          readOnly: true\n          type: boolean\n    LifetimeAction:\n      description: Action and its trigger that will be performed by Key Vault over the\n        lifetime of a certificate.\n      properties:\n        action:\n          $ref: \"#/components/schemas/Action\"\n        trigger:\n          $ref: \"#/components/schemas/Trigger\"\n    OrganizationDetails:\n      description: Details of the organization of the certificate issuer.\n      properties:\n        admin_details:\n          description: Details of the organization administrator.\n          items:\n            $ref: \"#/components/schemas/AdministratorDetails\"\n          type: array\n        id:\n          description: Id of the organization.\n          type: string\n    PendingCertificateSigningRequestResult:\n      description: The pending certificate signing request result.\n      properties:\n        value:\n          description: The pending certificate signing request as Base64 encoded string.\n          readOnly: true\n          type: string\n    SasDefinitionAttributes:\n      description: The SAS definition management attributes.\n      properties:\n        created:\n          description: Creation time in UTC.\n          format: unixtime\n          readOnly: true\n          type: integer\n        enabled:\n          description: the enabled state of the object.\n          type: boolean\n        updated:\n          description: Last updated time in UTC.\n          format: unixtime\n          readOnly: true\n          type: integer\n    SasDefinitionBundle:\n      description: A SAS definition bundle consists of key vault SAS definition details\n        plus its attributes.\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/SasDefinitionAttributes\"\n        id:\n          description: The SAS definition id.\n          readOnly: true\n          type: string\n        parameters:\n          additionalProperties:\n            type: string\n          description: The SAS definition metadata in the form of key-value pairs.\n          readOnly: true\n          type: object\n        sid:\n          description: Storage account SAS definition secret id.\n          readOnly: true\n          type: string\n          x-ms-client-name: SecretId\n        tags:\n          additionalProperties:\n            type: string\n          description: Application specific metadata in the form of key-value pairs\n          readOnly: true\n          type: object\n    SasDefinitionCreateParameters:\n      description: The SAS definition create parameters.\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/SasDefinitionAttributes\"\n        parameters:\n          additionalProperties:\n            type: string\n          description: Sas definition creation metadata in the form of key-value pairs.\n          type: object\n        tags:\n          additionalProperties:\n            type: string\n          description: Application specific metadata in the form of key-value pairs.\n          type: object\n      required:\n        - parameters\n    SasDefinitionItem:\n      description: The SAS definition item containing storage SAS definition metadata.\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/SasDefinitionAttributes\"\n        id:\n          description: The storage SAS identifier.\n          readOnly: true\n          type: string\n        sid:\n          description: The storage account SAS definition secret id.\n          readOnly: true\n          type: string\n          x-ms-client-name: SecretId\n        tags:\n          additionalProperties:\n            type: string\n          description: Application specific metadata in the form of key-value pairs.\n          readOnly: true\n          type: object\n    SasDefinitionListResult:\n      description: The storage account SAS definition list result.\n      properties:\n        nextLink:\n          description: The URL to get the next set of SAS definitions.\n          readOnly: true\n          type: string\n        value:\n          description: A response message containing a list of SAS definitions along with a\n            link to the next page of SAS definitions.\n          items:\n            $ref: \"#/components/schemas/SasDefinitionItem\"\n          readOnly: true\n          type: array\n    SasDefinitionUpdateParameters:\n      description: The SAS definition update parameters.\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/SasDefinitionAttributes\"\n        parameters:\n          additionalProperties:\n            type: string\n          description: Sas definition update metadata in the form of key-value pairs.\n          type: object\n        tags:\n          additionalProperties:\n            type: string\n          description: Application specific metadata in the form of key-value pairs.\n          type: object\n    SecretAttributes:\n      allOf:\n        - $ref: \"#/components/schemas/Attributes\"\n      description: The secret management attributes.\n      properties:\n        recoveryLevel:\n          description: Reflects the deletion recovery level currently in effect for secrets\n            in the current vault. If it contains 'Purgeable', the secret can be\n            permanently deleted by a privileged user; otherwise, only the system\n            can purge the secret, at the end of the retention interval.\n          enum:\n            - Purgeable\n            - Recoverable+Purgeable\n            - Recoverable\n            - Recoverable+ProtectedSubscription\n          readOnly: true\n          type: string\n          x-ms-enum:\n            modelAsString: true\n            name: DeletionRecoveryLevel\n          nullable: false\n    SecretBundle:\n      description: A secret consisting of a value, id and its attributes.\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/SecretAttributes\"\n        contentType:\n          description: The content type of the secret.\n          type: string\n        id:\n          description: The secret id.\n          type: string\n        kid:\n          description: If this is a secret backing a KV certificate, then this field\n            specifies the corresponding key backing the KV certificate.\n          readOnly: true\n          type: string\n        managed:\n          description: True if the secret's lifetime is managed by key vault. If this is a\n            secret backing a certificate, then managed will be true.\n          readOnly: true\n          type: boolean\n        tags:\n          additionalProperties:\n            type: string\n          description: Application specific metadata in the form of key-value pairs.\n          type: object\n        value:\n          description: The secret value.\n          type: string\n    SecretItem:\n      description: The secret item containing secret metadata.\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/SecretAttributes\"\n        contentType:\n          description: Type of the secret value such as a password.\n          type: string\n        id:\n          description: Secret identifier.\n          type: string\n        managed:\n          description: True if the secret's lifetime is managed by key vault. If this is a\n            key backing a certificate, then managed will be true.\n          readOnly: true\n          type: boolean\n        tags:\n          additionalProperties:\n            type: string\n          description: Application specific metadata in the form of key-value pairs.\n          type: object\n    SecretListResult:\n      description: The secret list result.\n      properties:\n        nextLink:\n          description: The URL to get the next set of secrets.\n          readOnly: true\n          type: string\n        value:\n          description: A response message containing a list of secrets in the key vault\n            along with a link to the next page of secrets.\n          items:\n            $ref: \"#/components/schemas/SecretItem\"\n          readOnly: true\n          type: array\n    SecretProperties:\n      description: Properties of the key backing a certificate.\n      properties:\n        contentType:\n          description: The media type (MIME type).\n          type: string\n    SecretRestoreParameters:\n      description: The secret restore parameters.\n      properties:\n        value:\n          description: The backup blob associated with a secret bundle.\n          format: base64url\n          type: string\n          x-ms-client-name: secretBundleBackup\n      required:\n        - value\n    SecretSetParameters:\n      description: The secret set parameters.\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/SecretAttributes\"\n        contentType:\n          description: Type of the secret value such as a password.\n          type: string\n        tags:\n          additionalProperties:\n            type: string\n          description: Application specific metadata in the form of key-value pairs.\n          type: object\n        value:\n          description: The value of the secret.\n          type: string\n      required:\n        - value\n    SecretUpdateParameters:\n      description: The secret update parameters.\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/SecretAttributes\"\n        contentType:\n          description: Type of the secret value such as a password.\n          type: string\n        tags:\n          additionalProperties:\n            type: string\n          description: Application specific metadata in the form of key-value pairs.\n          type: object\n    StorageAccountAttributes:\n      description: The storage account management attributes.\n      properties:\n        created:\n          description: Creation time in UTC.\n          format: unixtime\n          readOnly: true\n          type: integer\n        enabled:\n          description: the enabled state of the object.\n          type: boolean\n        updated:\n          description: Last updated time in UTC.\n          format: unixtime\n          readOnly: true\n          type: integer\n    StorageAccountCreateParameters:\n      description: The storage account create parameters.\n      properties:\n        activeKeyName:\n          description: Current active storage account key name.\n          type: string\n        attributes:\n          $ref: \"#/components/schemas/StorageAccountAttributes\"\n        autoRegenerateKey:\n          description: whether keyvault should manage the storage account for the user.\n          type: boolean\n        regenerationPeriod:\n          description: The key regeneration time duration specified in ISO-8601 format.\n          type: string\n        resourceId:\n          description: Storage account resource id.\n          type: string\n        tags:\n          additionalProperties:\n            type: string\n          description: Application specific metadata in the form of key-value pairs.\n          type: object\n      required:\n        - resourceId\n        - activeKeyName\n        - autoRegenerateKey\n    StorageAccountItem:\n      description: The storage account item containing storage account metadata.\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/StorageAccountAttributes\"\n        id:\n          description: Storage identifier.\n          readOnly: true\n          type: string\n        resourceId:\n          description: Storage account resource Id.\n          readOnly: true\n          type: string\n        tags:\n          additionalProperties:\n            type: string\n          description: Application specific metadata in the form of key-value pairs.\n          readOnly: true\n          type: object\n    StorageAccountRegenerteKeyParameters:\n      description: The storage account key regenerate parameters.\n      properties:\n        keyName:\n          description: The storage account key name.\n          type: string\n      required:\n        - keyName\n    StorageAccountUpdateParameters:\n      description: The storage account update parameters.\n      properties:\n        activeKeyName:\n          description: The current active storage account key name.\n          type: string\n        attributes:\n          $ref: \"#/components/schemas/StorageAccountAttributes\"\n        autoRegenerateKey:\n          description: whether keyvault should manage the storage account for the user.\n          type: boolean\n        regenerationPeriod:\n          description: The key regeneration time duration specified in ISO-8601 format.\n          type: string\n        tags:\n          additionalProperties:\n            type: string\n          description: Application specific metadata in the form of key-value pairs.\n          type: object\n    StorageBundle:\n      description: A Storage account bundle consists of key vault storage account details\n        plus its attributes.\n      properties:\n        activeKeyName:\n          description: The current active storage account key name.\n          readOnly: true\n          type: string\n        attributes:\n          $ref: \"#/components/schemas/StorageAccountAttributes\"\n        autoRegenerateKey:\n          description: whether keyvault should manage the storage account for the user.\n          readOnly: true\n          type: boolean\n        id:\n          description: The storage account id.\n          readOnly: true\n          type: string\n        regenerationPeriod:\n          description: The key regeneration time duration specified in ISO-8601 format.\n          readOnly: true\n          type: string\n        resourceId:\n          description: The storage account resource id.\n          readOnly: true\n          type: string\n        tags:\n          additionalProperties:\n            type: string\n          description: Application specific metadata in the form of key-value pairs\n          readOnly: true\n          type: object\n    StorageListResult:\n      description: The storage accounts list result.\n      properties:\n        nextLink:\n          description: The URL to get the next set of storage accounts.\n          readOnly: true\n          type: string\n        value:\n          description: A response message containing a list of storage accounts in the key\n            vault along with a link to the next page of storage accounts.\n          items:\n            $ref: \"#/components/schemas/StorageAccountItem\"\n          readOnly: true\n          type: array\n    SubjectAlternativeNames:\n      description: The subject alternate names of a X509 object.\n      properties:\n        dns_names:\n          description: Domain names.\n          items:\n            type: string\n          type: array\n        emails:\n          description: Email addresses.\n          items:\n            type: string\n          type: array\n        upns:\n          description: User principal names.\n          items:\n            type: string\n          type: array\n    Trigger:\n      description: A condition to be satisfied for an action to be executed.\n      properties:\n        days_before_expiry:\n          description: Days before expiry to attempt renewal. Value should be between 1 and\n            validity_in_months multiplied by 27. If validity_in_months is 36,\n            then value should be between 1 and 972 (36 * 27).\n          format: int32\n          type: integer\n        lifetime_percentage:\n          description: Percentage of lifetime at which to trigger. Value should be between\n            1 and 99.\n          format: int32\n          maximum: 99\n          minimum: 1\n          type: integer\n    X509CertificateProperties:\n      description: Properties of the X509 component of a certificate.\n      properties:\n        ekus:\n          description: The enhanced key usage.\n          items:\n            type: string\n          type: array\n        key_usage:\n          description: List of key usages.\n          items:\n            enum:\n              - digitalSignature\n              - nonRepudiation\n              - keyEncipherment\n              - dataEncipherment\n              - keyAgreement\n              - keyCertSign\n              - cRLSign\n              - encipherOnly\n              - decipherOnly\n            type: string\n            x-ms-enum:\n              modelAsString: true\n              name: KeyUsageType\n          type: array\n        sans:\n          $ref: \"#/components/schemas/SubjectAlternativeNames\"\n        subject:\n          description: The subject name. Should be a valid X509 distinguished Name.\n          type: string\n        validity_months:\n          description: The duration that the certificate is valid in months.\n          format: int32\n          minimum: 0\n          type: integer\n          x-ms-client-name: ValidityInMonths\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/azure.com-keyvault-2016-10-01-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/azure.com-keyvault-2016-10-01-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}