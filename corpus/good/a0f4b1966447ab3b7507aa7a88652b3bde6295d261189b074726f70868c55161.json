{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/OpenBanking-Brasil/areadesenvolvedor"
		},
		"file": {
			"name": "swagger_participants.yaml",
			"size": 0,
			"path": "documentation/source/versions/v1.0.0-rc8.7/swagger/swagger_participants.yaml",
			"byteSize": 111951,
			"content": "﻿openapi: 3.0.0\ninfo:\n  title: \"Participantes Open Banking Brasil\"\n  version: 1.0.0\n  description: Informações sobre os participantes do Open Banking Brasil que estão registrados no Diretório.\n  license:\n    name: MIT\nservers:\n  - url: https://data.directory.openbankingbrasil.org.br\n    description: Open Banking Brasil\npaths:\n  '/participants':\n    get:\n      summary: Recupera informações técnicas sobre Participantes registrados no diretório, essas informações permitem identificar e consumir as APIs dos participantes\n      tags:\n        - Organisations - Export\n      responses:\n        '200':\n          $ref: '#/components/responses/OrganisationsExportOpenData'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          description: 'The specified key does not exist'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n\ncomponents:\n\n  parameters:\n    PageableRequest:\n      name: PageableRequest\n      description: The pageable object\n      in: query\n      schema:\n        $ref: '#/components/schemas/PageableRequest'\n    AuthorisationServerId:\n      name: AuthorisationServerId\n      description: The authorisation server Id\n      in: path\n      required: true\n      schema:\n        $ref: '#/components/schemas/AuthorisationServerId'\n    OrganisationAuthorityClaimId:\n      name: OrganisationAuthorityClaimId\n      description: The Authority claims ID for an organisation\n      in: path\n      required: true\n      schema:\n        $ref: '#/components/schemas/OrganisationAuthorityClaimId'\n    OrganisationAuthorisationId:\n      name: OrganisationAuthorisationId\n      description: The authorisation ID for an organisation's authority claims\n      in: path\n      required: true\n      schema:\n        $ref: '#/components/schemas/OrganisationAuthorisationId'\n    CertificateOrKeyId:\n      name: CertificateOrKeyId\n      description: The certificate or key Id\n      in: path\n      required: true\n      schema:\n        $ref: '#/components/schemas/CertificateOrKeyId'\n    ContactId:\n      name: ContactId\n      description: The contact id\n      in: path\n      required: true\n      schema:\n        $ref: '#/components/schemas/ContactId'\n    OrganisationCertificateType:\n      name: OrganisationCertificateType\n      description: The certificate type\n      in: path\n      required: true\n      schema:\n        $ref: '#/components/schemas/OrganisationCertificateType'\n    OrganisationId:\n      name: OrganisationId\n      description: The organisation ID\n      in: path\n      required: true\n      schema:\n        $ref: '#/components/schemas/OrganisationId'\n    AuthorityId:\n      name: AuthorityId\n      description: The reference authority Id\n      in: path\n      required: true\n      schema:\n        $ref: '#/components/schemas/AuthorityId'\n    SoftwareStatementCertificateOrKeyType:\n      name: SoftwareStatementCertificateOrKeyType\n      description: The certificate or key type that can be associated with a software statement\n      in: path\n      required: true\n      schema:\n        $ref: '#/components/schemas/SoftwareStatementCertificateOrKeyType'\n    SoftwareStatementId:\n      name: SoftwareStatementId\n      description: The software statement ID\n      in: path\n      required: true\n      schema:\n        $ref: '#/components/schemas/SoftwareStatementId'\n    SoftwareAuthorityClaimId:\n      name: SoftwareAuthorityClaimId\n      description: The software statement's authority claim ID\n      in: path\n      required: true\n      schema:\n        $ref: '#/components/schemas/SoftwareAuthorityClaimId'\n    UserEmailId:\n      name: UserEmailId\n      description: Email address of the super user\n      in: path\n      required: true\n      schema:\n        $ref: '#/components/schemas/UserEmailId'\n    AuthorisationDomainName:\n      name: AuthorisationDomainName\n      description: Authorisation Domain Name. Eg:PSD2\n      in: path\n      required: true\n      schema:\n        $ref: '#/components/schemas/AuthorisationDomainName'\n    AuthorisationDomainRoleName:\n      name: AuthorisationDomainRoleName\n      description: Authorisation Domain Role Name. Eg:TPP\n      in: path\n      required: true\n      schema:\n        $ref: '#/components/schemas/AuthorisationDomainRoleName'\n    AuthorityAuthorisationDomainId:\n      name: AuthorityAuthorisationDomainId\n      description: ID of the Authority mapped with Authorisation Domain\n      in: path\n      required: true\n      schema:\n        $ref: '#/components/schemas/AuthorityAuthorisationDomainId'\n    OrganisationAuthorityDomainClaimId:\n      name: OrganisationAuthorityDomainClaimId\n      description: Organisation Authority Domain Claim Id\n      in: path\n      required: true\n      schema:\n        $ref: '#/components/schemas/OrganisationAuthorityDomainClaimId'\n    AuthorisationDomainUserId:\n      name: AuthorisationDomainUserId\n      description: Unique record Id to identify Domain User\n      in: path\n      required: true\n      schema:\n        $ref: '#/components/schemas/AuthorisationDomainUserId'\n    TnCId:\n      name: TnCId\n      description: Terms and Conditions unique identifier\n      in: path\n      required: true\n      schema:\n        $ref: '#/components/schemas/TnCId'\n    ClientId:\n      name: ClientId\n      description: Oauth clientId\n      in: path\n      required: true\n      schema:\n        $ref: '#/components/schemas/ClientId'\n    ApiResourceId:\n      name: ApiResourceId\n      description: The api version Id\n      in: path\n      required: true\n      schema:\n        $ref: '#/components/schemas/ApiResourceId'\n    ApiDiscoveryEndpointId:\n      name: ApiDiscoveryEndpointId\n      description: The api discovery endpoint Id\n      in: path\n      required: true\n      schema:\n        $ref: '#/components/schemas/ApiDiscoveryEndpointId'\n    ExternalSigningServiceEnvelopeId:\n      name: ExternalSigningServiceEnvelopeId\n      description: The envelope id\n      in: path\n      required: true\n      schema:\n        $ref: '#/components/schemas/ExternalSigningServiceEnvelopeId'\n\n\n  requestBodies:\n    AmendCertificateRequest:\n      description: Amend a certificate, current functionality supports Revoke Reason\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AmendCertificateRequest'\n\n    AuthorisationServerRequest:\n      description: Properties to create/update authorisation server\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AuthorisationServerRequest'\n\n    OrganisationAuthorityClaimRequest:\n      description: Properties to create/update authority claims\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganisationAuthorityClaimRequest'\n\n    UserUpdateRequest:\n      description: Properties to toggle a user between activated and deactivated status\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UserUpdateRequest'\n\n\n    OrganisationAuthorityClaimAuthorisationRequest:\n      description: Properties to update/retrieve authorisation server\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganisationAuthorityClaimAuthorisationRequest'\n    ContactRequest:\n      description: Properties to update contacts\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ContactRequest'\n    CertificateOrCSROrJWS:\n      description: |\n        * __PEM file__ -- when the request `Content-Type` header is set to  `application/x-pem-file` the contents of the PEM file will differ depending upon `OrganisationCertificateType`. If `OrganisationCertificateType` is set to `qwac`, `qseal` then the PEM file should contain a *QWAC* or a *QSEAL* certificate respectively; if `OrganisationCertificateType` is set to `rtswac` or `rtsseal` then the PEM file should contain a Certificate Signing Request (CSR) for an RTS-issued *RTSWAC* or *RTSSEAL* certificate respectively.\n        * __Signed JWT__ -- when the request `Content-Type` header is set to `application/jwt` the body of the signed JWT will contain a CSR or a certificate.\n        ### Requesting a Certificate using a signed JWT\n        The header `kid` claim is the ID of the QSealC certificate assigned to it by the RTS JWKS store.\n        The body `csr` claim is the CSR in the DER format.\n        ```\n        {\n          \"typ\": \"JWT\",\n          \"alg\": \"ES256\",\n          \"kid\": \"ABCD1234\",\n        }\n        {\n          \"csr\": \"string\"\n        }\n        ```\n        ### Uploading a Certificate using a signed JWT\n        The header `kid` claim is the ID of the QSealC certificate assigned to it by the RTS JWKS store.\n        The body `x5c` claim is the array of certificate, issuer certificate, and root certificate in the DER format.\n        ```\n        {\n          \"typ\": \"JWT\",\n          \"alg\": \"ES256\",\n          \"kid\": \"ABCD1234\",\n        }\n        {\n          \"x5c\": [\"qsealc\", \"issuer certificate\", \"root certificate\"]\n        }\n        ```\n        EXAMPLE REQUEST PAYLOAD USING SIGNED JWT REQUESTS\n        ```\n        POST /organisations/123456789012345678/certificates/rtswac HTTP/1.1\n        Content-Type: application/jwt\n        Accept: application/json\n        Host: raidiam.tobedecided.org.uk\n        eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImtpZCI6IkFCQ0QxMjM0IiwieDVjIjpbInFzZWFsYyIsImlzc3VlciBjZXJ0aWZpY2F0ZSIsInJvb3QgY2VydGlmaWNhdGUiXX0.eyJyZWRpcmVjdF91cmlzIjpbInN0cmluZyJdLCJ0b2tlbl9lbmRwb2ludF9hdXRoX21ldGhvZCI6InN0cmluZyIsImdyYW50X3R5cGVzIjpbInN0cmluZyJdLCJyZXNwb25zZV90eXBlcyI6WyJzdHJpbmcibSwiY2xpZW50X25hbWUiOiJzdHJpbmciLCJjbGllbnRfdXJpIjoic3RyaW5nIiwibG9nb191cmkiOiJzdHJpbmciLCJzY29wZSI6InN0cmluZyIsImNvbnRhY3RzIjpbInVzZXJAZXhhbXBsZS5jb20iXSwidG9zX3VyaSI6InN0cmluZyIsInBvbGljeV91cmkiOiJzdHJpbmciLCJqd2tzX3VyaSI6InN0cmluZyIsImp3a3MiOnt9LCJzb2Z0d2FyZV9pZCI6InN0cmluZyIsInNvZnR3YXJlX3ZlcnNpb24iOiJzdHJpbmcifQ.lMsADSHkFGUw5PtgdEqXslYArzqf6tbg0lo0kCitOUA\n        ```\n      required: true\n      content:\n        application/x-pem-file:\n          schema:\n            $ref: '#/components/schemas/CertificateOrKeyOrJWT'\n        application/jwt:\n          schema:\n            $ref: '#/components/schemas/CertificateOrKeyOrJWT'\n    CSROrKey:\n      description: PEM file -- the contents of the PEM file will differ depending upon *SoftwareStatementCertificateOrKeyType*. If *SoftwareStatementCertificateOrKeyType* is set to *rtssigning* or *rtstransport* then the PEM file should contain a Certificate Signing Request (CSR) for an RTS signing or RTS transport certificate respectively; if *SoftwareStatementCertificateOrKeyType* is set to *sigkey*, *enckey* then the PEM file should contain a public signing or encryption key respectively.\n      required: true\n      content:\n        application/x-pem-file:\n          schema:\n            $ref: '#/components/schemas/CertificateOrKeyOrJWT'\n\n    Organisation:\n      description: Create a new organisation\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganisationRequest'\n\n    OrganisationUpdate:\n      description: Update an organisation\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganisationUpdateRequest'\n\n    OrganisationEnrol:\n      description: Enrol an organisation\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganisationEnrol'\n\n    AuthorityRequest:\n      description: Reference authority request\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AuthorityRequest'\n\n    SoftwareStatementRequest:\n      description: Software Statement payload\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SoftwareStatementRequest'\n\n    SoftwareAuthorityClaimRequest:\n      description: Software Statement authority claim's payload\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SoftwareAuthorityClaimRequest'\n\n    SoftwareAuthorityClaimUpdateRequest:\n      description: Software Statement authority claim's update payload\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SoftwareAuthorityClaimUpdateRequest'\n\n    ClientCreationRequest:\n      description: Client Creation Request\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ClientCreationRequest'\n\n    AccessTokenRequest:\n      description: Client Creation Request\n      required: true\n      content:\n        application/x-www-form-urlencoded:\n          schema:\n            $ref: '#/components/schemas/AccessTokenRequest'\n\n    SuperUserCreationRequest:\n      description: Super user creation request\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SuperUserCreationRequest'\n\n    AuthorisationDomainUserCreateRequest:\n      description: Admin user creation request\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AuthorisationDomainUserCreateRequest'\n\n    AuthorisationDomainRequest:\n      description: Authorisation Domain creation request\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AuthorisationDomainRequest'\n\n    AuthorisationDomainRoleRequest:\n      description: Authorisation Domain Role creation request\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AuthorisationDomainRoleRequest'\n\n    AuthorityAuthorisationDomainRequest:\n      description: Authority Authorisation Domain mapping request\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AuthorityAuthorisationDomainRequest'\n\n    OrganisationAuthorityDomainClaimRequest:\n      description: Authority Authorisation Domain mapping request\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganisationAuthorityDomainClaimRequest'\n\n    TermsAndConditionsCreateRequest:\n      description: TnC create request\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/TermsAndConditionsCreateRequest'\n\n    TermsAndConditionsUpdateRequest:\n      description: TnC update request\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/TermsAndConditionsUpdateRequest'\n\n    UserCreateRequest:\n      description: User create request\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UserCreateRequest'\n\n    OrgAdminUserCreateRequest:\n      description: Org Admin user create request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrgAdminUserCreateRequest'\n\n    ApiResourceRequest:\n      description: Api Resource request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ApiResourceRequest'\n\n    ApiDiscoveryEndpointRequest:\n      description: Api Resource request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ApiDiscoveryEndpointRequest'\n\n    EssSignRequest:\n      description: Request object to capture ESS sign attributes\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/EssSignRequest'\n\n    AuthorisationDomainUserUpdateRequest:\n      description: Request object to update a domain user\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AuthorisationDomainUserUpdateRequest'\n\n  responses:\n    NoContent:\n      description: No Content\n    BadRequest:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/BadRequest'\n    Unauthorized:\n      description: Unauthorized\n    Forbidden:\n      description: Forbidden\n    NotFound:\n      description: Not found\n    NotAcceptable:\n      description: Not Acceptable\n    Conflict:\n      description: Conflict\n    BadGateway:\n      description: Bad Gateway\n    InternalServerError:\n      description: Internal Server Error\n    OrganisationAuthorityClaims:\n      description: All authority claims for the organisation\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganisationAuthorityClaims'\n    OrganisationAuthorityClaim:\n      description: Authority claim for the given Id\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganisationAuthorityClaim'\n\n    OrganisationAuthorityClaimAuthorisations:\n      description: Authorisations response\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganisationAuthorityClaimAuthorisations'\n\n    OrganisationAuthorityClaimAuthorisation:\n      description: Authorisations response\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganisationAuthorityClaimAuthorisation'\n\n    AuthorisationServers:\n      description: All authorisation servers for the org\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AuthorisationServers'\n\n    AuthorisationServer:\n      description: Authorisation server response\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AuthorisationServer'\n\n    CertificatesOrKeys:\n      description: All certificates for the org\n      content:\n        application/jwk-set+json:\n          schema:\n            $ref: '#/components/schemas/CertificatesOrKeys'\n\n    CertificatesOrKey:\n      description: A certificate object\n      content:\n        application/jwk+json:\n          schema:\n            $ref: '#/components/schemas/CertificateOrKey'\n    Contacts:\n      description: All contacts for the org\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Contacts'\n    Contact:\n      description: A contact object\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Contact'\n    Organisations:\n      description: |\n        List of the organisation\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Organisations'\n    Organisation:\n      description: |\n        Full details of the organisation\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Organisation'\n    OrganisationSnapshot:\n      description: Snapshot data of the organisation\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganisationSnapshot'\n    OrganisationsSnapshot:\n      description: Snapshot data of all the organisations\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganisationsSnapshot'\n    OrganisationSnapshotPage:\n      description: Paged Organisations Snapshot\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganisationSnapshotPage'\n    OrganisationsExportOpenData:\n      description: Export the open-data for all the organisations\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganisationsExportOpenData'\n    OrgTermsAndConditionsDetail:\n      description: Details of the TnC and external signing service\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrgTermsAndConditionsDetail'\n    OrganisationEnrolments:\n      description: |\n        Full details of the organisation enrolment response\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganisationEnrolments'\n\n    Authorities:\n      description: |\n        Reference data table for all authorities with their countries\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Authorities'\n\n    Authority:\n      description: |\n        Get a reference authority by Id\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Authority'\n\n    SoftwareStatements:\n      description: All software statements for the org\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SoftwareStatements'\n    SoftwareStatement:\n      description: Get the software statements with the given id\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SoftwareStatement'\n    SoftwareStatementAssertion:\n      description: OK\n      content:\n        application/jwt:\n          schema:\n            $ref: '#/components/schemas/SoftwareStatementAssertion'\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SoftwareStatementAssertion'\n    SoftwareAuthorityClaims:\n      description: Authority claim for the given Id\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SoftwareAuthorityClaims'\n    SoftwareAuthorityClaim:\n      description: Authority claim for the given Id\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SoftwareAuthorityClaim'\n\n    ClientCreationResponse:\n      description: |\n        Creates an OAuth Client in the OpenID Server\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ClientCreationResponse'\n\n    RetrieveTokenResponse:\n      description: |\n        Access token response\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AccessTokenResponse'\n\n    SuperUsers:\n      description: All Super users\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SuperUsers'\n\n    SuperUser:\n      description: Super user data\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SuperUser'\n\n    AuthorisationDomainUsers:\n      description: All users belonging to an authorisation domain\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AuthorisationDomainUsers'\n\n    AuthorisationDomainUser:\n      description: User data belonging to an authorisation domain\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AuthorisationDomainUser'\n\n    AuthorisationDomains:\n      description: All data of authorisation domains mapped to an authority\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AuthorisationDomains'\n\n    AuthorisationDomain:\n      description: Data of an authorisation domain mapped to an authority\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AuthorisationDomain'\n\n    AuthorisationDomainRoles:\n      description: All roles data\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AuthorisationDomainRoles'\n\n    AuthorisationDomainRole:\n      description: Role data\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AuthorisationDomainRole'\n\n    AuthorityAuthorisationDomains:\n      description: All authority to domain mappings data\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AuthorityAuthorisationDomains'\n\n    AuthorityAuthorisationDomain:\n      description: Authority to domain mapping data\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AuthorityAuthorisationDomain'\n\n    OrganisationAuthorityDomainClaims:\n      description: All authority to domain mappings data\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganisationAuthorityDomainClaims'\n\n    OrganisationAuthorityDomainClaim:\n      description: All authority to domain mappings data\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganisationAuthorityDomainClaim'\n\n    UserDetail:\n      description: Details of the user\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UserDetail'\n\n    UserOPInfo:\n      description: User information from the OpenId Provider\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UserOPInfo'\n\n    WellKnown:\n      description: endpoint discovery for well known endpoint\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/WellKnown'\n\n    TermsAndConditionsPage:\n      description: Paged data of TnC items\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/TermsAndConditionsPage'\n\n    TermsAndConditionsItem:\n      description: Details of the TnC item\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/TermsAndConditionsItem'\n\n    OrganisationAdminUsers:\n      description: All admin users for this org\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganisationAdminUsers'\n\n    OrganisationAdminUser:\n      description: Admin user details\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganisationAdminUser'\n\n    ApiResources:\n      description: Authorisation server Api Resources response\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ApiResources'\n\n    ApiResource:\n      description: Authorisation server Api Resource response\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ApiResource'\n\n    ApiDiscoveryEndpoints:\n      description: Authorisation server response\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ApiDiscoveryEndpoints'\n\n    ApiDiscoveryEndpoint:\n      description: Authorisation server response\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ApiDiscoveryEndpoint'\n\n    UserTermsAndConditionsPage:\n      description: User TnCs history\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UserTermsAndConditionsPage'\n\n    OrgTermsAndConditionsPage:\n      description: Org TnCs history\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrgTermsAndConditionsPage'\n\n    EssPollResponse:\n      description: External Signing Service Poll response\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/EssPollResponse'\n\n\n\n  schemas:\n    BadRequest:\n      type: object\n      properties:\n        errors:\n          type: array\n          description: Validation Error messages\n          items:\n            type: string\n    PageableRequest:\n      type: object\n      properties:\n        page:\n          minimum: 0\n          type: integer\n          description: Page index starts from 0\n        size:\n          maximum: 50000\n          minimum: 1\n          type: integer\n          description: This sets the page size\n        sort:\n          type: string\n          description: Used to sort based on Model Parameters\n      example:\n        page: 0\n        size: 2\n        sort: status,desc\n    UserUpdateRequest:\n      type: object\n      properties:\n        Status:\n          $ref: '#/components/schemas/StatusEnum'\n    StatusEnum:\n      type: string\n      enum:\n        - Active\n        - Inactive\n    OrganisationAuthorityClaims:\n      type: array\n      items:\n        $ref: '#/components/schemas/OrganisationAuthorityClaim'\n    OrganisationAuthorityClaim:\n      type: object\n      properties:\n        OrganisationId:\n          $ref: '#/components/schemas/OrganisationId'\n        OrganisationAuthorityClaimId:\n          $ref: '#/components/schemas/OrganisationAuthorityClaimId'\n        AuthorityId:\n          $ref: '#/components/schemas/AuthorityId'\n        Status:\n          type: string\n          description: Is this software statement Active/Inactive\n          enum:\n            - Active\n            - Inactive\n          default: Active\n        AuthorisationDomain:\n          type: string\n          description: Authorisation Domain for the authority\n          maxLength: 30\n        Role:\n          type: string\n          description: Roles for the Authority i.e. ASPSP, AISP, PISP, CBPII\n          maxLength: 30\n        Authorisations:\n          type: array\n          items:\n            type: object\n            properties:\n              Status:\n                type: string\n                description: Is this authorsation Active/Inactive\n                enum:\n                  - Active\n                  - Inactive\n                default: Active\n              MemberState:\n                type: string\n                description: Abbreviated states information i.e. GB, IE, NL etc\n                maxLength: 2\n        RegistrationId:\n          type: string\n          description: Registration ID for the organisation\n          maxLength: 40\n        UniqueTechnicalIdenifier:\n          type: array\n          items:\n            type: string\n            maxLength: 256\n\n    OrganisationAuthorityClaimRequest:\n      type: object\n      properties:\n        AuthorityId:\n          $ref: '#/components/schemas/AuthorityId'\n        Status:\n          type: string\n          description: Is this authority claim Active/Inactive, default is Active\n          enum:\n            - Active\n            - Inactive\n          default: Active\n          x-required-message: Status must be provided\n        AuthorisationDomain:\n          type: string\n          description: Authorisation domain for the authority\n          minLength: 1\n          maxLength: 30\n          x-required-message: AuthorisationDomain must be provided\n        Role:\n          type: string\n          description: Role for the authority\n          minLength: 1\n          maxLength: 30\n          x-required-message: Role must be provided\n        RegistrationId:\n          type: string\n          minLength: 1\n          description: Registration ID for the organisation\n          maxLength: 40\n          x-required-message: RegistrationId must be provided\n        UniqueTechnicalIdenifier:\n          type: array\n          items:\n            type: string\n            maxLength: 256\n      required:\n        - RegistrationId\n        - Status\n        - AuthorisationDomain\n        - AuthorityId\n        - Role\n\n    OrganisationAuthorityClaimAuthorisations:\n      type: array\n      items:\n        $ref: '#/components/schemas/OrganisationAuthorityClaimAuthorisation'\n\n    OrganisationAuthorityClaimAuthorisation:\n      type: object\n      properties:\n        OrganisationAuthorisationId:\n          $ref: '#/components/schemas/OrganisationAuthorisationId'\n        OrganisationAuthorityClaimId:\n          $ref: '#/components/schemas/OrganisationAuthorityClaimId'\n        Status:\n          type: string\n          description: Is this authority claim Active/Inactive\n          enum:\n            - Active\n            - Inactive\n          default: Active\n        MemberState:\n          type: string\n          description: Abbreviated states information i.e. GB, IE, NL etc\n          maxLength: 10\n\n    OrganisationAuthorityClaimAuthorisationRequest:\n      type: object\n      properties:\n        Status:\n          type: string\n          description: Is this Active/Inactive - default is Active\n          enum:\n            - Active\n            - Inactive\n          default: Active\n          x-required-message: Status must be provided\n        MemberState:\n          type: string\n          description: Abbreviated states information i.e. GB, IE, NL etc\n          minLength: 2\n          maxLength: 10\n          x-required-message: MemberState must be provided\n      required:\n        - Status\n        - MemberState\n\n    AuthorisationServers:\n      type: array\n      items:\n        $ref: '#/components/schemas/AuthorisationServer'\n\n    AuthorisationServer:\n      type: object\n      properties:\n        AuthorisationServerId:\n          $ref: '#/components/schemas/AuthorisationServerId'\n        OrganisationId:\n          $ref: '#/components/schemas/OrganisationId'\n        AutoRegistrationSupported:\n          type: boolean\n        ApiResources:\n          type: array\n          items:\n            $ref: '#/components/schemas/ApiResource'\n        CustomerFriendlyDescription:\n          type: string\n          maxLength: 256\n        CustomerFriendlyLogoUri:\n          description: A compliant URI\n          pattern: \"^(http:\\\\/\\\\/|https:\\\\/\\\\/).*\"\n          x-pattern-message: \"CustomerFriendlyLogoUri must be in a URI format https://... or http://...\"\n          type: string\n          format: uri\n          maxLength: 256\n        CustomerFriendlyName:\n          type: string\n          maxLength: 256\n        DeveloperPortalUri:\n          description: A compliant URI\n          pattern: \"^(http:\\\\/\\\\/|https:\\\\/\\\\/).*\"\n          x-pattern-message: \"DeveloperPortalUri must be in a URI format https://... or http://...\"\n          type: string\n          format: uri\n          maxLength: 256\n        TermsOfServiceUri:\n          description: A compliant URI\n          pattern: \"^(http:\\\\/\\\\/|https:\\\\/\\\\/).*\"\n          x-pattern-message: \"TermsOfServiceUri must be in a URI format https://... or http://...\"\n          type: string\n          format: uri\n          maxLength: 256\n        NotificationWebhook:\n          description: A compliant URI\n          pattern: \"^(http:\\\\/\\\\/|https:\\\\/\\\\/).*\"\n          x-pattern-message: \"WebhookUri must be in a URI format https://... or http://...\"\n          type: string\n          format: uri\n          maxLength: 256\n        NotificationWebhookStatus:\n          description: If the webhook has confirmed subscription\n          type: string\n        OpenIDDiscoveryDocument:\n          description: A compliant URI\n          pattern: \"^(http:\\\\/\\\\/|https:\\\\/\\\\/).*\"\n          x-pattern-message: \"OpenIDDiscoveryDocument must be in a URI format https://... or http://...\"\n          type: string\n          format: uri\n          maxLength: 256\n        PayloadSigningCertLocationUri:\n          description: A compliant URI\n          pattern: \"^(http:\\\\/\\\\/|https:\\\\/\\\\/).*\"\n          x-pattern-message: \"PayloadSigningCertLocationUri must be in a URI format https://... or http://...\"\n          type: string\n          format: uri\n          maxLength: 256\n        ParentAuthorisationServerId:\n          $ref: '#/components/schemas/AuthorisationServerId'\n\n    AuthorisationServerRequest:\n      type: object\n      properties:\n        AutoRegistrationSupported:\n          type: boolean\n          description: Default is true\n          x-required-message: AutoRegistrationSupported must be provided\n        CustomerFriendlyDescription:\n          description: A customer friendly description\n          type: string\n          maxLength: 256\n        CustomerFriendlyLogoUri:\n          description: A compliant URI\n          pattern: \"^(http:\\\\/\\\\/|https:\\\\/\\\\/).*\"\n          x-pattern-message: \"CustomerFriendlyLogoUri must be in a URI format https://... or http://...\"\n          type: string\n          maxLength: 256\n          x-required-message: CustomerFriendlyLogoUri must be provided\n        CustomerFriendlyName:\n          type: string\n          minLength: 1\n          maxLength: 256\n          x-required-message: CustomerFriendlyName must be provided\n        DeveloperPortalUri:\n          description: A compliant URI\n          pattern: \"^(http:\\\\/\\\\/|https:\\\\/\\\\/).*\"\n          x-pattern-message: \"DeveloperPortalUri must be in a URI format https://... or http://...\"\n          type: string\n          maxLength: 256\n          x-required-message: DeveloperPortalUri must be provided\n        TermsOfServiceUri:\n          description: A compliant URI\n          pattern: \"^(http:\\\\/\\\\/|https:\\\\/\\\\/).*\"\n          x-pattern-message: \"TermsOfServiceUri must be in a URI format https://... or http://...\"\n          type: string\n          maxLength: 256\n          x-required-message: TermsOfServiceUri must be provided\n        NotificationWebhook:\n          description: A compliant URI\n          pattern: \"^(http:\\\\/\\\\/|https:\\\\/\\\\/).*\"\n          x-pattern-message: \"WebhookUri must be in a URI format https://... or http://...\"\n          type: string\n          maxLength: 256\n        OpenIDDiscoveryDocument:\n          description: A compliant URI\n          pattern: \"^(http:\\\\/\\\\/|https:\\\\/\\\\/).*\"\n          x-pattern-message: \"OpenIDDiscoveryDocument must be in a URI format https://... or http://...\"\n          type: string\n          maxLength: 256\n          x-required-message: OpenIDDiscoveryDocument must be provided\n        PayloadSigningCertLocationUri:\n          description: A compliant URI\n          pattern: \"^(http:\\\\/\\\\/|https:\\\\/\\\\/).*\"\n          x-pattern-message: \"PayloadSigningCertLocationUri must be in a URI format https://... or http://...\"\n          type: string\n          maxLength: 256\n          x-required-message: PayloadSigningCertLocationUri must be provided\n        ParentAuthorisationServerId:\n          $ref: '#/components/schemas/AuthorisationServerId'\n      required:\n        - AutoRegistrationSupported\n        - CustomerFriendlyName\n        - CustomerFriendlyLogoUri\n        - DeveloperPortalUri\n        - TermsOfServiceUri\n        - OpenIDDiscoveryDocument\n        - PayloadSigningCertLocationUri\n\n    AuthorisationServerId:\n      type: string\n      maxLength: 40\n    CertificateOrKeyOrJWT:\n      type: string\n    CertificateOrKeyId:\n      type: string\n      maxLength: 256\n    CertificatesOrKeys:\n      type: array\n      items:\n        $ref: '#/components/schemas/CertificateOrKey'\n    CertificateOrKey:\n      type: object\n      properties:\n        OrganisationId:\n          $ref: '#/components/schemas/OrganisationId'\n        SoftwareStatementIds:\n          type: array\n          items:\n            $ref: '#/components/schemas/SoftwareStatementId'\n        ClientName:\n          type: string\n          maxLength: 40\n        Status:\n          type: string\n          maxLength: 40\n        ValidFromDateTime:\n          type: string\n          maxLength: 30\n        ExpiryDateTime:\n          type: string\n          maxLength: 30\n        e:\n          type: string\n          maxLength: 256\n        keyType:\n          type: string\n          maxLength: 256\n        kid:\n          type: string\n          maxLength: 256\n        kty:\n          type: string\n          maxLength: 256\n        n:\n          type: string\n          maxLength: 256\n        use:\n          type: string\n          maxLength: 256\n        x5c:\n          type: array\n          items:\n            description: A PKIX certificate [RFC5280]\n            type: string\n            maxLength: 256\n        x5t:\n          type: string\n          maxLength: 256\n        x5thashS256:\n          type: string\n          maxLength: 256\n        x5u:\n          type: string\n          maxLength: 256\n        SignedCertPath:\n          type: string\n          maxLength: 256\n          description: Used to display location of the signed certificate in PEM format\n        JwkPath:\n          type: string\n          maxLength: 256\n          description: Used to display path to JWKS containing this certificate\n        OrgJwkPath:\n          type: string\n          maxLength: 256\n          description: Used to display path to Org JWKS containing org certificates\n\n    AmendCertificateRequest:\n      type: object\n      properties:\n        RevokeReason:\n          type: string\n          description: Specify a reason for revokation of the certificate.\n          enum:\n            - \"unspecified\"\n            - \"keycompromise\"\n            - \"superseded\"\n            - \"cessationofoperation\"\n            - \"privilegewithdrawn\"\n          default: unspecified\n          x-required-message: RevokeReason must be provided\n      required:\n        - RevokeReason\n    ContactRequest:\n      type: object\n      properties:\n        ContactType:\n          type: string\n          enum:\n            - Business\n            - Technical\n            - Billing\n            - Incident\n            - Security\n          default: Business\n          description: The type of Contact, default contact type is Business.\n          x-required-message: ContactType must be provided\n        FirstName:\n          type: string\n          maxLength: 256\n        LastName:\n          type: string\n          maxLength: 256\n        Department:\n          type: string\n          maxLength: 256\n        EmailAddress:\n          type: string\n          pattern: \"^(.{1,}@[^.]{1,}).*\"\n          x-pattern-message: \"EmailAddress must be a valid email\"\n          maxLength: 256\n        PhoneNumber:\n          type: string\n          minLength: 8\n          maxLength: 18\n          x-required-message: PhoneNumber must be provided\n        AddressLine1:\n          type: string\n          description: Address line 1\n          maxLength: 256\n        AddressLine2:\n          type: string\n          description: Address line 2\n          maxLength: 256\n        City:\n          type: string\n          description: City\n          maxLength: 256\n        Postcode:\n          type: string\n          description: Postcode\n          maxLength: 40\n        Country:\n          type: string\n          description: Country\n          maxLength: 256\n        AdditionalInformation:\n          type: string\n          description: Any additional user information\n          maxLength: 65535\n        PgpPublicKey:\n          type: string\n          description: A PGP Public Key in text form\n          maxLength: 65535\n      required:\n        - ContactType\n        - EmailAddress\n        - PhoneNumber\n\n    Contacts:\n      type: array\n      items:\n        $ref: '#/components/schemas/Contact'\n      description: The list of contacts\n\n    Contact:\n      type: object\n      properties:\n        ContactId:\n          type: string\n          description: Unique contact ID for the row.\n        OrganisationId:\n          $ref: '#/components/schemas/OrganisationId'\n        ContactType:\n          type: string\n          enum:\n            - Business\n            - Technical\n            - Billing\n            - Incident\n            - Security\n          default: Business\n        FirstName:\n          type: string\n          maxLength: 256\n        LastName:\n          type: string\n          maxLength: 256\n        Department:\n          type: string\n          maxLength: 256\n        EmailAddress:\n          type: string\n          pattern: \"^(.{1,}@[^.]{1,}).*\"\n          x-pattern-message: \"EmailAddress must be a valid email\"\n          maxLength: 256\n        PhoneNumber:\n          type: string\n          maxLength: 18\n        AddressLine1:\n          type: string\n          description: Address line 1\n          maxLength: 256\n        AddressLine2:\n          type: string\n          description: Address line 2\n          maxLength: 256\n        City:\n          type: string\n          description: City\n          maxLength: 256\n        Postcode:\n          type: string\n          description: Postcode\n          maxLength: 40\n        Country:\n          type: string\n          description: Country\n          maxLength: 256\n        AdditionalInformation:\n          type: string\n          description: Any additional user information\n          maxLength: 65535\n        PgpPublicKey:\n          type: string\n          description: A PGP Public Key in text form\n          maxLength: 65535\n\n    ContactId:\n      type: string\n      maxLength: 256\n\n    OrganisationRequest:\n      type: object\n      properties:\n        OrganisationId:\n          $ref: '#/components/schemas/OrganisationId'\n        Status:\n          type: string\n          description: Status of the directory registration of an organisation\n          enum:\n            - Active\n            - Pending\n            - Withdrawn\n          default: Active\n        OrganisationName:\n          type: string\n          minLength: 1\n          maxLength: 256\n          x-required-message: OrganisationName must be provided\n        LegalEntityName:\n          type: string\n          description: Legal Entity name for the org. Usually the same as org name\n          minLength: 1\n          maxLength: 256\n          x-required-message: LegalEntityName must be provided\n        CountryOfRegistration:\n          type: string\n          description: Country of registration for the org\n          minLength: 2\n          maxLength: 256\n          x-required-message: CountryOfRegistration must be provided\n        CompanyRegister:\n          type: string\n          description: Legal company register for the country, i.e. Companies House\n          minLength: 1\n          maxLength: 256\n          x-required-message: CompanyRegister must be provided\n        RegistrationNumber:\n          type: string\n          description: Company registration number from company register i.e. Companies House registration number\n          minLength: 1\n          maxLength: 256\n          x-required-message: RegistrationNumber must be provided\n        RegistrationId:\n          type: string\n          description: Registered ID for the organisation i.e. Legal Entity identifier number\n          maxLength: 40\n        RegisteredName:\n          type: string\n          description: Registered legal name\n          maxLength: 256\n        AddressLine1:\n          type: string\n          description: Address line 1\n          minLength: 5\n          maxLength: 256\n          x-required-message: AddressLine1 must be provided\n        AddressLine2:\n          type: string\n          description: Address line 2\n          maxLength: 256\n        City:\n          type: string\n          description: City\n          minLength: 2\n          maxLength: 256\n          x-required-message: City must be provided\n        Postcode:\n          type: string\n          description: Postcode\n          minLength: 3\n          maxLength: 40\n          x-required-message: Postcode must be provided\n        Country:\n          type: string\n          description: Country\n          minLength: 2\n          maxLength: 256\n          x-required-message: Country must be provided\n        ParentOrganisationReference:\n          type: string\n          description: Parent Organisation Reference\n          maxLength: 65535\n      required:\n        - OrganisationId\n        - OrganisationName\n        - CountryOfRegistration\n        - CompanyRegister\n        - RegistrationNumber\n        - LegalEntityName\n        - AddressLine1\n        - City\n        - Postcode\n        - Country\n\n    OrganisationUpdateRequest:\n      type: object\n      properties:\n        Status:\n          type: string\n          description: Status of the directory registration of an organisation\n          enum:\n            - Active\n            - Pending\n            - Withdrawn\n          default: Pending\n        OrganisationName:\n          type: string\n          minLength: 1\n          maxLength: 256\n          x-required-message: OrganisationName must be provided\n        LegalEntityName:\n          type: string\n          description: Legal Entity name for the org. Usually the same as org name\n          minLength: 1\n          maxLength: 256\n          x-required-message: LegalEntityName must be provided\n        CountryOfRegistration:\n          type: string\n          description: Country of registration for the org\n          minLength: 2\n          maxLength: 256\n          x-required-message: CountryOfRegistration must be provided\n        CompanyRegister:\n          type: string\n          description: Legal company register for the country, i.e. Companies House\n          minLength: 1\n          maxLength: 256\n          x-required-message: CompanyRegister must be provided\n        RegistrationNumber:\n          type: string\n          description: Company registration number from company register i.e. Companies House registration number\n          minLength: 1\n          maxLength: 256\n          x-required-message: RegistrationNumber must be provided\n        RegistrationId:\n          type: string\n          description: Registered ID for the organisation i.e. Legal Entity identifier number\n          maxLength: 40\n        RegisteredName:\n          type: string\n          description: Registered legal name\n          maxLength: 256\n        AddressLine1:\n          type: string\n          description: Address line 1\n          minLength: 5\n          maxLength: 256\n          x-required-message: AddressLine1 must be provided\n        AddressLine2:\n          type: string\n          description: Address line 2\n          maxLength: 256\n        City:\n          type: string\n          description: City\n          minLength: 2\n          maxLength: 256\n          x-required-message: City must be provided\n        Postcode:\n          type: string\n          description: Postcode\n          minLength: 3\n          maxLength: 40\n          x-required-message: Postcode must be provided\n        Country:\n          type: string\n          description: Country\n          minLength: 2\n          maxLength: 256\n          x-required-message: Country must be provided\n        ParentOrganisationReference:\n          type: string\n          description: Parent Organisation Reference\n          maxLength: 65535\n      required:\n        - OrganisationName\n        - CountryOfRegistration\n        - CompanyRegister\n        - RegistrationNumber\n        - LegalEntityName\n        - AddressLine1\n        - City\n        - Postcode\n        - Country\n\n    OrganisationEnrol:\n      type: object\n      properties:\n        RedirectUris:\n          type: array\n          items:\n            description: A compliant URI\n            pattern: \"^(http:\\\\/\\\\/|https:\\\\/\\\\/).*\"\n            x-pattern-message: \"RedirectUris must be in a URI format https://... or http://...\"\n            type: string\n            format: uri\n            x-required-message: RedirectUris must be provided\n        TokenEndpointAuthMethod:\n          type: string\n          minLength: 1\n          maxLength: 256\n          x-required-message: TokenEndpointAuthMethod must be provided\n        GrantTypes:\n          type: array\n          items:\n            type: string\n            minLength: 1\n            maxLength: 40\n          x-required-message: GrantTypes must be provided\n        ResponseTypes:\n          type: array\n          items:\n            type: string\n            minLength: 1\n            maxLength: 40\n          x-required-message: ResponseTypes must be provided\n        ClientName:\n          description: ORG name as per eIDAS certificate\n          minLength: 1\n          maxLength: 256\n          x-required-message: ClientName must be provided\n        ClientUri:\n          description: A compliant URI\n          pattern: \"^(http:\\\\/\\\\/|https:\\\\/\\\\/).*\"\n          x-pattern-message: \"ClientUri must be in a URI format https://... or http://...\"\n          type: string\n          format: uri\n          maxLength: 256\n          x-required-message: ClientUri must be provided\n        LogoUri:\n          description: A compliant URI\n          pattern: \"^(http:\\\\/\\\\/|https:\\\\/\\\\/).*\"\n          x-pattern-message: \"LogoUri must be in a URI format https://... or http://...\"\n          type: string\n          format: uri\n          maxLength: 256\n          x-required-message: LogoUri must be provided\n        Scope:\n          type: string\n          minLength: 1\n          maxLength: 256\n          x-required-message: Scope must be provided\n        TosUri:\n          description: A compliant URI\n          pattern: \"^(http:\\\\/\\\\/|https:\\\\/\\\\/).*\"\n          x-pattern-message: \"TosUri must be in a URI format https://... or http://...\"\n          type: string\n          format: uri\n          maxLength: 256\n          x-required-message: TosUri must be provided\n        PolicyUri:\n          description: A compliant URI\n          pattern: \"^(http:\\\\/\\\\/|https:\\\\/\\\\/).*\"\n          x-pattern-message: \"PolicyUri must be in a URI format https://... or http://...\"\n          type: string\n          format: uri\n          maxLength: 256\n          x-required-message: PolicyUri must be provided\n      required:\n        - RedirectUris\n        - TokenEndpointAuthMethod\n        - GrantTypes\n        - ResponseTypes\n        - ClientName\n        - ClientUri\n        - LogoUri\n        - Scope\n        - TosUri\n        - PolicyUri\n\n    OrganisationEnrolments:\n      description: \u003e-\n        A JSON object DCR response returned when client gets created.\n      type: array\n      items:\n        type: object\n        properties:\n          OrganisationId:\n            $ref: '#/components/schemas/OrganisationId'\n          ClientSecret:\n            description: Client secret generated by Directory\n            type: string\n            maxLength: 256\n          RedirectUris:\n            type: array\n            items:\n              description: A compliant URI\n              pattern: \"^(http:\\\\/\\\\/|https:\\\\/\\\\/).*\"\n              x-pattern-message: \"RedirectUris must be in a URI format https://... or http://...\"\n              type: string\n              format: uri\n              maxLength: 256\n          TokenEndpointAuthMethod:\n            type: string\n            maxLength: 256\n          GrantTypes:\n            type: array\n            items:\n              type: string\n              maxLength: 40\n          ResponseTypes:\n            type: array\n            items:\n              type: string\n              maxLength: 40\n          ClientName:\n            description: ORG name as per eIDAS certificate\n            type: string\n            maxLength: 256\n          ClientUri:\n            description: A compliant URI string of a web page providing information about the client\n            pattern: \"^(http:\\\\/\\\\/|https:\\\\/\\\\/).*\"\n            x-pattern-message: \"ClientUri must be in a URI format https://... or http://...\"\n            type: string\n            format: uri\n            maxLength: 256\n          LogoUri:\n            description: A compliant URI\n            pattern: \"^(http:\\\\/\\\\/|https:\\\\/\\\\/).*\"\n            x-pattern-message: \"LogoUri must be in a URI format https://... or http://...\"\n            type: string\n            format: uri\n            maxLength: 256\n          TosUri:\n            description: A compliant URI string that points to a human-readable terms of service document for the client\n            pattern: \"^(http:\\\\/\\\\/|https:\\\\/\\\\/).*\"\n            x-pattern-message: \"TosUri must be in a URI format https://... or http://...\"\n            type: string\n            format: uri\n            maxLength: 256\n          PolicyUri:\n            description: A compliant URI string that points to a human-readable privacy policy document\n            pattern: \"^(http:\\\\/\\\\/|https:\\\\/\\\\/).*\"\n            x-pattern-message: \"PolicyUri must be in a URI format https://... or http://...\"\n            type: string\n            format: uri\n            maxLength: 256\n          JwksUri:\n            description: A compliant URI string referencing the client's JSON Web Key (JWK) Set\n            pattern: \"^(http:\\\\/\\\\/|https:\\\\/\\\\/).*\"\n            x-pattern-message: \"JwksUri must be in a URI format https://... or http://...\"\n            type: string\n            format: uri\n            maxLength: 256\n          Jwks:\n            description: Client's JSON Web Key Set [RFC7517] document value\n            type: object\n            maxLength: 256\n\n\n    OrganisationCertificateType:\n      type: string\n      enum:\n        - qwac\n        - qseal\n        - rtswac\n        - rtsseal\n      default: rtsseal\n\n    OrganisationId:\n      type: string\n      description: Unique ID associated with the organisation\n      minLength: 1\n      maxLength: 40\n\n    OrganisationAuthorityClaimId:\n      type: string\n      description: Unique ID associated with the authority claims\n      minLength: 1\n      maxLength: 40\n\n    OrganisationAuthorisationId:\n      type: string\n      description: Unique ID associated with authorisations for organisation's authority claims\n      minLength: 1\n      maxLength: 40\n\n    SoftwareAuthorityClaimId:\n      type: string\n      description: Unique ID associated with the authority claims for a software statement\n      minLength: 1\n      maxLength: 40\n\n    AuthorityId:\n      type: string\n      description: Unique ID associated with the Authorisation reference schema\n      minLength: 1\n      maxLength: 40\n\n    Organisations:\n      type: array\n      items:\n        $ref: '#/components/schemas/Organisation'\n\n    Organisation:\n      type: object\n      properties:\n        OrganisationId:\n          $ref: '#/components/schemas/OrganisationId'\n        Status:\n          type: string\n          description: Status of the directory registration of an organisation\n          enum:\n            - Active\n            - Pending\n            - Withdrawn\n          default: Active\n        OrganisationName:\n          type: string\n          description: Name of the organisation.\n          maxLength: 256\n        CreatedOn:\n          type: string\n          description: JSONDatetime of organisation creation.\n          maxLength: 30\n        LegalEntityName:\n          type: string\n          description: Legal Entity name for the org. Usually the same as org name\n          maxLength: 256\n        CountryOfRegistration:\n          type: string\n          description: Country of registration for the org\n          maxLength: 256\n        CompanyRegister:\n          type: string\n          description: Legal company register for the country, i.e. Companies House\n          maxLength: 256\n        RegistrationNumber:\n          type: string\n          description: Company registration number from company register i.e. Companies House registration number\n          maxLength: 256\n        RegistrationId:\n          type: string\n          description: Registered ID for the organisation i.e. Legal Entity identifier number\n          maxLength: 40\n        RegisteredName:\n          type: string\n          maxLength: 256\n        AddressLine1:\n          type: string\n          description: Address line 1\n          maxLength: 256\n        AddressLine2:\n          type: string\n          description: Address line 2\n          maxLength: 256\n        City:\n          type: string\n          description: City\n          maxLength: 256\n        Postcode:\n          type: string\n          description: Postcode\n          maxLength: 40\n        Country:\n          type: string\n          description: Country\n          maxLength: 256\n        ParentOrganisationReference:\n          type: string\n          description: Parent Organisation Reference\n          maxLength: 65535\n        RequiresSigning:\n          type: boolean\n          description: true - one of the attached tncs has to be signed. false - no tnc present\n        TnCUpdated:\n          type: boolean\n          description: true - attached tnc has been update. false - no tnc present\n        TnCsToBeSigned:\n          $ref: '#/components/schemas/TnCsToBeSigned'\n\n    OrgTermsAndConditionsDetail:\n      type: object\n      description: Participant TnC details\n      properties:\n        InitiatedBy:\n          type: string\n          description: Email of the user who initiated the External signing for this participant\n        Role:\n          type: string\n          description: Role of the user who initiated the External signing for this participant\n        TermsAndConditionsDetail:\n          $ref: '#/components/schemas/TermsAndConditionsDetail'\n\n\n    TermsAndConditionsDetail:\n      type: object\n      description: TnC details Parent\n      properties:\n        TermsAndConditionsItem:\n          $ref: '#/components/schemas/TermsAndConditionsItem'\n        InititatedDate:\n          type: string\n          description: Terms and Conditions initiated date\n          maxLength: 256\n        ExternalSigningServiceEnvelopeId:\n          $ref: '#/components/schemas/ExternalSigningServiceEnvelopeId'\n        ExternalSigningServiceEnvelopeStatus:\n          $ref: '#/components/schemas/ExternalSigningServiceEnvelopeStatus'\n        ExternalSigningServiceEnvelopePasscode:\n          type: string\n          description: Access code for the specifier to fill in the signer details. This will be populated only once, when signing is initiated\n\n\n    ExternalSigningServiceEnvelopeStatus:\n      enum:\n        - Completed\n        - Created\n        - Declined\n        - Deleted\n        - Delivered\n        - Processing\n        - Sent\n        - Signed\n        - Template\n        - Voided\n\n\n    OrganisationSnapshotPage:\n      type: object\n      properties:\n        totalPages:\n          type: integer\n        totalSize:\n          type: integer\n        pageable:\n          $ref: '#/components/schemas/Pageable'\n        numberOfElements:\n          type: integer\n        size:\n          type: integer\n        content:\n          type: array\n          items:\n            $ref: '#/components/schemas/OrganisationSnapshot'\n        offset:\n          type: integer\n        empty:\n          type: boolean\n        pageNumber:\n          type: integer\n    Pageable:\n      type: object\n      properties:\n        number:\n          type: integer\n          description: Page number\n        sort:\n          $ref: '#/components/schemas/Sort'\n        size:\n          type: integer\n          description: Size of the page\n        offset:\n          type: integer\n          description: Offset\n        sorted:\n          type: boolean\n          description: Is the page sorted\n    Sort:\n      type: object\n      properties:\n        sorted:\n          type: boolean\n        orderBy:\n          type: array\n          items:\n            type: object\n            properties:\n              property:\n                type: string\n                description: Name of the property used for sorting\n                example: createdAt\n              direction:\n                type: string\n                description: Direction of sort, i.e. ascending or descending\n                enum:\n                  - ASC\n                  - DESC\n              ignoreCase:\n                type: boolean\n                description: Was the case ignored\n              ascending:\n                type: boolean\n                description: Whether ascending\n    OrganisationsSnapshot:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/OrganisationSnapshot'\n    OrganisationSnapshot:\n      type: object\n      properties:\n        OrganisationDetails:\n          $ref: '#/components/schemas/Organisation'\n        Contacts:\n          $ref: '#/components/schemas/Contacts'\n        AuthorisationServers:\n          $ref: '#/components/schemas/AuthorisationServers'\n        OrgDomainClaims:\n          $ref: '#/components/schemas/OrganisationAuthorityDomainClaims'\n        OrgDomainRoleClaims:\n          $ref: '#/components/schemas/OrganisationAuthorityClaims'\n        SoftwareStatements:\n          additionalProperties:\n            type: object\n            properties:\n              SoftwareDetails:\n                $ref: '#/components/schemas/SoftwareStatement'\n              SoftwareAuthorityClaims:\n                $ref: '#/components/schemas/SoftwareAuthorityClaims'\n              SoftwareCertificates:\n                $ref: '#/components/schemas/CertificatesOrKeys'\n\n    OrganisationsExportOpenData:\n      type: array\n      items:\n        $ref: '#/components/schemas/OrganisationExportOpenData'\n\n    OrganisationExportOpenData:\n      type: object\n      properties:\n        OrganisationId:\n          $ref: '#/components/schemas/OrganisationId'\n        Status:\n          type: string\n          description: Status of the directory registration of an organisation\n          enum:\n            - Active\n            - Pending\n            - Withdrawn\n          default: Active\n        OrganisationName:\n          type: string\n          description: Name of the organisation.\n          maxLength: 256\n        CreatedOn:\n          type: string\n          description: JSONDatetime of organisation creation.\n          maxLength: 30\n        LegalEntityName:\n          type: string\n          description: Legal Entity name for the org. Usually the same as org name\n          maxLength: 256\n        CountryOfRegistration:\n          type: string\n          description: Country of registration for the org\n          maxLength: 256\n        CompanyRegister:\n          type: string\n          description: Legal company register for the country, i.e. Companies House\n          maxLength: 256\n        RegistrationNumber:\n          type: string\n          description: Company registration number from company register i.e. Companies House registration number\n          maxLength: 256\n        RegistrationId:\n          type: string\n          description: Registered ID for the organisation i.e. Legal Entity identifier number\n          maxLength: 40\n        RegisteredName:\n          type: string\n          maxLength: 256\n        AddressLine1:\n          type: string\n          description: Address line 1\n          maxLength: 256\n        AddressLine2:\n          type: string\n          description: Address line 2\n          maxLength: 256\n        City:\n          type: string\n          description: City\n          maxLength: 256\n        Postcode:\n          type: string\n          description: Postcode\n          maxLength: 40\n        Country:\n          type: string\n          description: Country\n          maxLength: 256\n        ParentOrganisationReference:\n          type: string\n          description: Parent Organisation Reference\n          maxLength: 65535\n        Contacts:\n          $ref: '#/components/schemas/Contacts'\n        AuthorisationServers:\n          $ref: '#/components/schemas/AuthorisationServers'\n        OrgDomainClaims:\n          $ref: '#/components/schemas/OrganisationAuthorityDomainClaims'\n        OrgDomainRoleClaims:\n          $ref: '#/components/schemas/OrganisationAuthorityClaims'\n\n    Authorities:\n      type: array\n      items:\n        $ref: '#/components/schemas/Authority'\n\n    Authority:\n      type: object\n      properties:\n        AuthorityId:\n          $ref: '#/components/schemas/AuthorityId'\n        AuthorityName:\n          description: Name of the Authority i.e. FCA, etc\n          type: string\n          maxLength: 256\n        AuthorityCode:\n          description: Code of the Authority i.e. FCA, etc\n          type: string\n          maxLength: 40\n          x-required-message: \"AuthorityCode must be provided\"\n        AuthorityUri:\n          description: URI of the authority\n          type: string\n        AuthorityCountry:\n          description: country of the Authority\n          type: string\n          maxLength: 256\n        Status:\n          type: string\n          description: Is this Authority Active/Inactive\n          enum:\n            - Active\n            - Inactive\n\n    AuthorityRequest:\n      type: object\n      properties:\n        AuthorityName:\n          description: The ID of the Authority i.e GBFCA, etc\n          type: string\n          minLength: 1\n          maxLength: 40\n          x-required-message: AuthorityName must be provided\n        AuthorityCode:\n          description: Code of the Authority i.e. GBFCA, etc\n          type: string\n          x-required-message: AuthorityID must be provided\n          minLength: 1\n          maxLength: 256\n        AuthorityUri:\n          description: URI of the authority\n          pattern: \"^(http:\\\\/\\\\/|https:\\\\/\\\\/).*\"\n          x-pattern-message: \"AuthorityUri must be in a URI format https://... or http://...\"\n          type: string\n          maxLength: 256\n          x-required-message: AuthorityUri must be provided\n        AuthorityCountry:\n          description: Country of the authority\n          type: string\n          minLength: 2\n          maxLength: 256\n          x-required-message: AuthorityCountry must be provided\n      required:\n        - AuthorityName\n        - AuthorityCode\n        - AuthorityUri\n        - AuthorityCountry\n\n    SoftwareStatementCertificateOrKeyType:\n      type: string\n      enum:\n        - rtstransport\n        - rtssigning\n        - sigkey\n        - enckey\n      default: rtssigning\n    SoftwareStatements:\n      type: array\n      items:\n        $ref: '#/components/schemas/SoftwareStatement'\n      description: The list of Software Statements\n\n    SoftwareStatement:\n      type: object\n      properties:\n        Status:\n          type: string\n          description: Is this software statement Active/Inactive\n          enum:\n            - Active\n            - Inactive\n          default: Active\n        ClientId:\n          type: string\n          description: Software Statement client Id\n          maxLength: 40\n        ClientName:\n          type: string\n          description: Software Statement client name\n          maxLength: 256\n        Description:\n          type: string\n          description: Software Statement description\n          maxLength: 256\n        Environment:\n          type: string\n          description: The additional check for software statement, this field can avoid\n          maxLength: 40\n        OrganisationId:\n          $ref: '#/components/schemas/OrganisationId'\n        SoftwareStatementId:\n          $ref: '#/components/schemas/SoftwareStatementId'\n        Mode:\n          type: string\n          enum:\n            - Live\n            - Test\n          default: Live\n          description: Software Statement mode\n          maxLength: 8\n        RtsClientCreated:\n          type: boolean\n          description: Client created flag\n        OnBehalfOf:\n          type: string\n          description: A reference to fourth party organisation resource on the RTS Directory if the registering Org is acting on behalf of another\n          maxLength: 256\n        PolicyUri:\n          type: string\n          pattern: \"^(http:\\\\/\\\\/|https:\\\\/\\\\/).*\"\n          x-pattern-message: \"PolicyUri must be in a URI format https://... or http://...\"\n          description: The Software Statement policy compliant URI\n          maxLength: 256\n        ClientUri:\n          type: string\n          pattern: \"^(http:\\\\/\\\\/|https:\\\\/\\\\/).*\"\n          x-pattern-message: \"ClientUri must be in a URI format https://... or http://...\"\n          description: The Software Statement client compliant URI\n          maxLength: 256\n        LogoUri:\n          type: string\n          pattern: \"^(http:\\\\/\\\\/|https:\\\\/\\\\/).*\"\n          x-pattern-message: \"LogoUri must be in a URI format https://... or http://...\"\n          format: uri\n          description: The Software Statement logo compliant URI\n          maxLength: 256\n        RedirectUri:\n          type: array\n          items:\n            type: string\n            pattern: \"^(http:\\\\/\\\\/|https:\\\\/\\\\/).*\"\n            x-pattern-message: \"RedirectUri must be in a URI format https://... or http://...\"\n            format: uri\n          description: The Software Statement redirect compliant URI\n          maxLength: 256\n        TermsOfServiceUri:\n          type: string\n          pattern: \"^(http:\\\\/\\\\/|https:\\\\/\\\\/).*\"\n          x-pattern-message: \"TermsOfServiceUri must be in a URI format https://... or http://...\"\n          format: uri\n          description: The Software Statement terms of service compliant URI\n          maxLength: 256\n        Version:\n          type: number\n          description: Software Statement version as provided by the organisation's PTC\n          maxLength: 40\n        Locked:\n          type: boolean\n          description: Flag shows if assertion has been generated on the software statement - will be set to true when assertion is generated\n\n    SoftwareStatementRequest:\n      type: object\n      properties:\n        ClientName:\n          type: string\n          description: Software Statement client name\n          minLength: 1\n          maxLength: 256\n          x-required-message: ClientName must be provided\n        Description:\n          type: string\n          description: Software Statement description\n          maxLength: 256\n        OnBehalfOf:\n          type: string\n          description: A reference to fourth party organisation resource on the RTS Directory if the registering Org is acting on behalf of another\n          maxLength: 256\n        PolicyUri:\n          type: string\n          pattern: \"^(http:\\\\/\\\\/|https:\\\\/\\\\/).*\"\n          x-pattern-message: \"PolicyUri must be in a URI format https://... or http://...\"\n          description: The Software Statement compliant policy URI\n          maxLength: 256\n          x-required-message: PolicyUri must be provided\n        ClientUri:\n          type: string\n          pattern: \"^(http:\\\\/\\\\/|https:\\\\/\\\\/).*\"\n          x-pattern-message: \"ClientUri must be in a URI format https://... or http://...\"\n          description: The Software Statement compliant client URI\n          maxLength: 256\n          x-required-message: ClientUri must be provided\n        LogoUri:\n          type: string\n          pattern: \"^(http:\\\\/\\\\/|https:\\\\/\\\\/).*\"\n          x-pattern-message: \"LogoUri must be in a URI format https://... or http://...\"\n          description: The Software Statement compliant logo URI\n          maxLength: 256\n          x-required-message: LogoUri must be provided\n        Environment:\n          type: string\n          description: The additional check for software statement, this field can avoid environment checks.\n          maxLength: 40\n        Mode:\n          type: string\n          enum:\n            - Live\n            - Test\n          default: Live\n          description: The additional check to see if the environment reflected above is live or test.\n        RedirectUri:\n          type: array\n          items:\n            description: A compliant URI\n            pattern: \"^(http:\\\\/\\\\/|https:\\\\/\\\\/).*\"\n            x-pattern-message: \"RedirectUri must be in a URI format https://... or http://...\"\n            type: string\n            maxLength: 256\n          description: The Software Statement redirect URIs\n          x-required-message: RedirectUri must be provided\n        TermsOfServiceUri:\n          type: string\n          pattern: \"^(http:\\\\/\\\\/|https:\\\\/\\\\/).*\"\n          x-pattern-message: \"TermsOfServiceUri must be in a URI format https://... or http://...\"\n          description: The Software Statement terms of service compliant URI\n          maxLength: 256\n          x-required-message: TermsOfServiceUri must be provided\n        Version:\n          type: number\n          description: Software Statement version as provided by the organisation's PTC\n          minimum: 1\n          maximum: 40\n          x-required-message: Version must be provided\n      required:\n        - ClientName\n        - PolicyUri\n        - ClientUri\n        - LogoUri\n        - RedirectUri\n        - TermsOfServiceUri\n        - Version\n\n    SoftwareStatementId:\n      type: string\n      description: Unique Software Statement Id\n      maxLength: 40\n    SoftwareStatementAssertion:\n      type: string\n      description: A signed JWT (JWS)\n      maxLength: 4000\n    SoftwareAuthorityClaims:\n      type: array\n      items:\n        $ref: '#/components/schemas/SoftwareAuthorityClaim'\n    SoftwareAuthorityClaim:\n      type: object\n      properties:\n        SoftwareStatementId:\n          $ref: '#/components/schemas/SoftwareStatementId'\n        SoftwareAuthorityClaimId:\n          $ref: '#/components/schemas/SoftwareAuthorityClaimId'\n        Status:\n          type: string\n          description: Is this authority claim Active/Inactive\n          enum:\n            - Active\n            - Inactive\n          default: Active\n        AuthorisationDomain:\n          type: string\n          description: Authorisation domain for the authority\n          maxLength: 30\n        Role:\n          type: string\n          description: Roles for the Authority i.e. ASPSP, AISP, PISP, CBPII\n          maxLength: 10\n    SoftwareAuthorityClaimRequest:\n      type: object\n      properties:\n        Status:\n          type: string\n          description: Is this authority claim Active/Inactive, default is active\n          enum:\n            - Active\n            - Inactive\n          default: Active\n          x-required-message: Status must be provided\n        AuthorisationDomain:\n          type: string\n          description: Authorisation domain for the authority\n          minLength: 1\n          maxLength: 30\n          x-required-message: AuthorisationDomain must be provided\n        Role:\n          type: string\n          description: Roles for the Authority i.e. ASPSP, AISP, PISP, CBPII\n          minLength: 1\n          maxLength: 30\n          x-required-message: Role must be provided\n      required:\n        - Status\n        - AuthorisationDomain\n        - Role\n\n    SoftwareAuthorityClaimUpdateRequest:\n      type: object\n      properties:\n        Status:\n          type: string\n          description: This is used to set the status - Active/Inactive\n          enum:\n            - Active\n            - Inactive\n          default: Active\n          x-required-message: Status must be provided\n      required:\n        - Status\n\n    ClientCreationRequest:\n      type: object\n      properties:\n        id_token_signed_response_alg:\n          type: string\n          description: Signing algorithim that a client expects the server to return an id_token with. Must be PS256\n          enum:\n            - PS256\n          default: PS256\n          x-required-message: id_token_signed_response_alg must be provided\n        token_endpoint_auth_method:\n          enum:\n            - private_key_jwt\n            - tls_client_auth\n            - client_secret_basic\n          default: private_key_jwt\n          type: string\n          description: Token endpoint authentication method\n          minLength: 1\n          maxLength: 60\n          x-required-message: Token endpoint auth method must be provided\n        jwks_uri:\n          type: string\n          description: Link to the application active jwks\n          pattern: \"^(http:\\\\/\\\\/|https:\\\\/\\\\/).*\"\n          x-required-message: Link to the application active jwks\n        tls_client_auth_subject_dn:\n          type: string\n          description: The DN of the certificate that will be used to authenticate to this client\n          maxLength: 250\n        redirect_uris:\n          type: array\n          items:\n            type: string\n            uniqueItems: true\n          description: redirect_uris uri must be provided. For client_credentials this should be an empty array.\n          x-required-message: redirect_uris uri must be provided. For client_credentials this should be an empty array.\n        response_types:\n          type: array\n          items:\n            type: string\n            uniqueItems: true\n          description: response_types uri must be provided. For client_credentials this should be an empty array\n          x-required-message: response_types uri must be provided. For client_credentials this should be an empty array\n        grant_types:\n          type: array\n          items:\n            type: string\n            uniqueItems: true\n          description: grant_types uri must be provided. For client_credentials this should be array containing [\"client_credentials\"]\n          x-required-message: grant_types uri must be provided. For client_credentials this should be array containing [\"client_credentials\"]\n        scope:\n          type: string\n          description: scopes to be tagged\n          x-required-message: scope must be provided.\n      required:\n        - id_token_signed_response_alg\n        - token_endpoint_auth_method\n        - jwks_uri\n        - redirect_uris\n        - response_types\n        - grant_types\n        - scope\n\n    ClientCreationResponse:\n      type: object\n      properties:\n        application_type:\n          type: string\n          description: OIDC application type response\n          enum:\n            - web\n          default: web\n        tls_client_auth_subject_dn:\n          type: string\n          description: the subject dn used to authenticate this client\n        grant_types:\n          type: array\n          items:\n            type: string\n          description: grant_types\n        id_token_signed_response_alg:\n          type: string\n        require_auth_time:\n          type: boolean\n        subject_type:\n          type: string\n        response_types:\n          type: array\n          items:\n            type: string\n          description: response_types\n        post_logout_redirect_uris:\n          type: array\n          items:\n            type: string\n          description: post_logout_redirect_uris\n        token_endpoint_auth_method:\n          type: string\n        introspection_endpoint_auth_method:\n          type: string\n        revocation_endpoint_auth_method:\n          type: string\n        client_id_issued_at:\n          type: number\n        client_id:\n          type: string\n        jwks_uri:\n          type: string\n        registration_client_uri:\n          type: string\n          description: management uri location to manage client post creation\n        registration_access_token:\n          type: string\n          description: token used to manage client post creation\n        redirect_uris:\n          type: array\n          items:\n            type: string\n          description: redirect_uris\n        request_uris:\n          type: array\n          items:\n            type: string\n          description: request_uris\n\n\n    AccessTokenRequest:\n      type: object\n      properties:\n        grant_type:\n          type: string\n          description: The Grant Type\n          enum:\n            - client_credentials\n          default: client_credentials\n          minLength: 1\n          x-required-message: Only client credentials supported\n        client_assertion_type:\n          type: string\n          enum:\n            - urn:ietf:params:oauth:client-assertion-type:jwt-bearer\n          description: Restrict to private_key_jwt\n          minLength: 1\n          maxLength: 160\n          x-required-message: Client assertion type must be set to urn:ietf:params:oauth:client-assertion-type:jwt-bearer\n        assertion:\n          type: string\n          description: The assertion that is used to get a token\n          minLength: 1\n          x-required-message: Assertion is a required field\n      required:\n        - grant_type\n        - client_assertion_type\n        - assertion\n\n    AccessTokenResponse:\n      type: object\n      properties:\n        access_token:\n          type: string\n          description: Access token\n        expires_in:\n          type: integer\n          description: lifetime in seconds\n        token_type:\n          type: string\n        scope:\n          type: string\n\n    UserEmailId:\n      type: string\n      description: User email address\n      maxLength: 50\n\n    SuperUserCreationRequest:\n      type: object\n      properties:\n        Email:\n          type: string\n          description: The super user email address\n          minLength: 1\n          x-required-message: The super user email address is mandatory\n      required:\n        - Email\n\n    SuperUsers:\n      type: array\n      items:\n        $ref: '#/components/schemas/SuperUser'\n\n    SuperUser:\n      type: object\n      properties:\n        Email:\n          type: string\n          description: The super user email address\n        Status:\n          type: string\n          description: Is this super user Active or Inactive\n          enum:\n            - Active\n            - Inactive\n          default: Active\n\n    AuthorisationDomainName:\n      type: string\n      description: Authorisation Domain Name\n      maxLength: 30\n\n    AuthorisationDomainRoleName:\n      type: string\n      description: Authorisation Domain Role Name\n      maxLength: 30\n\n    AuthorityAuthorisationDomainId:\n      type: string\n      description: Mapping ID between Authority and Authorisation Domain\n      maxLength: 50\n\n    AuthorisationDomainUserCreateRequest:\n      type: object\n      properties:\n        Email:\n          type: string\n          description: The user email address\n          pattern: \"^(.{1,}@[^.]{1,}).*\"\n          x-pattern-message: \"EmailAddress must be a valid email\"\n        AuthorisationDomainRole:\n          type: string\n          description: The authorisation domain role for this user\n          minLength: 1\n        ContactRole:\n          $ref: '#/components/schemas/ContactRoleEnum'\n      required:\n        - Email\n        - AuthorisationDomainRole\n        - ContactRole\n\n    AuthorisationDomainUsers:\n      type: array\n      items:\n        $ref: '#/components/schemas/AuthorisationDomainUser'\n\n    AuthorisationDomainUser:\n      type: object\n      properties:\n        AuthorisationDomainUserId:\n          type: string\n          description: Unique record ID\n        Email:\n          type: string\n          description: The user email address\n        AuthorisationDomain:\n          type: string\n          description: The authorisation domain for this user\n        AuthorisationDomainRole:\n          type: string\n          description: The authorisation domain role for this user\n        Status:\n          type: string\n          description: Is this user Active or Inactive\n          enum:\n            - Active\n            - Inactive\n          default: Active\n        ContactRole:\n          type: string\n          description: Type of role for this user\n          enum:\n            - PTC\n            - STC\n            - PBC\n            - SBC\n\n    AuthorisationDomainRequest:\n      type: object\n      properties:\n        AuthorisationDomainName:\n          type: string\n          description: The authorisation domain name\n          minLength: 1\n          maxLength: 30\n          x-required-message: The authorisation domain name is mandatory\n        AuthorisationDomainRegion:\n          type: string\n          description: The authorisation domain region\n          minLength: 2\n          x-required-message: The authorisation domain region is mandatory\n        AuthorisationDomainDescription:\n          type: string\n          description: The authorisation domain description\n      required:\n        - AuthorisationDomainName\n        - AuthorisationDomainRegion\n\n    AuthorisationDomains:\n      type: array\n      items:\n        $ref: '#/components/schemas/AuthorisationDomain'\n\n    AuthorisationDomain:\n      type: object\n      properties:\n        AuthorisationDomainName:\n          type: string\n          description: The authorisation domain name\n        AuthorisationDomainRegion:\n          type: string\n          description: The authorisation domain region\n        AuthorisationDomainDescription:\n          type: string\n          description: The authorisation domain description\n        Status:\n          type: string\n          description: Is this Domain Active or Inactive\n          enum:\n            - Active\n            - Inactive\n          default: Active\n\n    AuthorisationDomainRoleRequest:\n      type: object\n      properties:\n        AuthorisationDomainName:\n          type: string\n          description: The authorisation domain name\n          minLength: 1\n          x-required-message: The authorisation domain name is mandatory\n        AuthorisationDomainRoleName:\n          type: string\n          description: The authorisation domain role name\n          minLength: 1\n          maxLength: 30\n          x-required-message: The authorisation domain role name is mandatory\n        AuthorisationDomainRoleDescription:\n          type: string\n          description: The authorisation domain role description\n      required:\n        - AuthorisationDomainRoleName\n        - AuthorisationDomainName\n\n    AuthorisationDomainRoles:\n      type: array\n      items:\n        $ref: '#/components/schemas/AuthorisationDomainRole'\n\n    AuthorisationDomainRole:\n      type: object\n      properties:\n        AuthorisationDomainName:\n          type: string\n          description: The authorisation domain name\n        AuthorisationDomainRoleName:\n          type: string\n          description: The authorisation domain role\n        AuthorisationDomainRoleDescription:\n          type: string\n          description: The authorisation domain role description\n        Status:\n          type: string\n          description: Is this mapping Active or Inactive\n          enum:\n            - Active\n            - Inactive\n          default: Active\n\n    AuthorityAuthorisationDomainRequest:\n      type: object\n      properties:\n        AuthorisationDomainName:\n          type: string\n          description: The authorisation domain name\n          minLength: 1\n          x-required-message: The authorisation domain name is mandatory\n      required:\n        - AuthorisationDomainName\n\n    AuthorityAuthorisationDomains:\n      type: array\n      items:\n        $ref: '#/components/schemas/AuthorityAuthorisationDomain'\n\n    AuthorityAuthorisationDomain:\n      type: object\n      properties:\n        AuthorisationDomainName:\n          type: string\n          description: The authorisation domain name\n        AuthorityId:\n          type: string\n          description: The GUID of the Authority\n        AuthorityAuthorisationDomainId:\n          type: string\n          description: The GUID of the Authority-Domain mapping\n        Status:\n          type: string\n          description: Is this user Active or Inactive\n          enum:\n            - Active\n            - Inactive\n          default: Active\n\n    OrganisationAuthorityDomainClaimId:\n      type: string\n      description: Organisation Authority Domain Claim ID\n      maxLength: 50\n\n    OrganisationAuthorityDomainClaimRequest:\n      type: object\n      properties:\n        AuthorisationDomainName:\n          type: string\n          description: The authorisation domain name\n          minLength: 1\n          x-required-message: The authorisation domain name is mandatory\n        AuthorityId:\n          type: string\n          description: The Authority ID\n          minLength: 1\n          x-required-message: The Authority ID is mandatory\n        RegistrationId:\n          type: string\n          description: The registration ID\n      required:\n        - AuthorityId\n        - AuthorisationDomainName\n\n    OrganisationAuthorityDomainClaims:\n      type: array\n      items:\n        $ref: '#/components/schemas/OrganisationAuthorityDomainClaim'\n\n    OrganisationAuthorityDomainClaim:\n      type: object\n      properties:\n        OrganisationAuthorityDomainClaimId:\n          type: string\n          description: The unique org authority domain claim ID\n        AuthorisationDomainName:\n          type: string\n          description: The authorisation domain name\n        AuthorityId:\n          type: string\n          description: The GUID of the Authority\n        AuthorityName:\n          type: string\n          description: The name of the Authority\n        RegistrationId:\n          type: string\n          description: The registration ID\n        Status:\n          type: string\n          description: Is this user Active or Inactive\n          enum:\n            - Active\n            - Inactive\n          default: Active\n\n    AuthorisationDomainUserId:\n      type: string\n      description: Unique record ID to identify Domain user\n      maxLength: 50\n\n    UserDetail:\n      type: object\n      properties:\n        SuperUser:\n          type: boolean\n          description: Is the user a super user\n        SystemUser:\n          type: boolean\n          description: Is the user a system user\n        BasicInformation:\n          type: object\n          properties:\n            UserEmail:\n              type: string\n            Status:\n              type: string\n              enum:\n                - Active\n                - Inactive\n        OrgAccessDetails:\n          type: object\n          description: Map Key - Org ID, Map Value - Org Access Detail(contaning info about org admin and domain role details)\n          additionalProperties:\n            $ref: '#/components/schemas/OrgAccessDetail'\n        DirectoryTermsAndConditionsDetails:\n          $ref: '#/components/schemas/TermsAndConditionsDetails'\n\n    TermsAndConditionsDetails:\n      type: object\n      description: Details of TnC\n      properties:\n        RequiresSigning:\n          type: boolean\n          description: Does the Directory TnC require signing\n        Updated:\n          type: boolean\n          description: Has the document updated since the user signed\n        TermsAndConditionsItem:\n          $ref: '#/components/schemas/TermsAndConditionsItem'\n\n    UserCreateRequest:\n      type: object\n      properties:\n        UserEmail:\n          type: string\n          description: User's email\n          pattern: \"^(.{1,}@[^.]{1,}).*\"\n          x-pattern-message: \"EmailAddress must be a valid email\"\n        TermsAndConditionsId:\n          type: integer\n          description: Id of the TnC(type = Directory), user has agreed to\n          x-required-message: User has to agree to Directory type TnC\n      required:\n        - UserEmail\n        - FirstName\n        - LastName\n        - TermsAndConditionsId\n\n\n    UserOPInfo:\n      type: object\n      description: The information contained within is subject to the scopes passed during token generation\n      properties:\n        sub:\n          type: string\n          description: Contains the email address\n        family_name:\n          type: string\n          description: Family name\n        given_name:\n          type: string\n          description: Given name\n        name:\n          type: string\n          description: Full name\n        email:\n          type: string\n          description: Email address\n        email_verified:\n          type: boolean\n          description: Is the email verified\n        address:\n          type: string\n          description: Address\n        phone_number:\n          type: string\n          description: Phone number\n        phone_number_verified:\n          type: boolean\n          description: Is the phone number verified\n\n    WellKnown:\n      type: object\n      properties:\n        acr_values_supported:\n          type: array\n          items: {}\n        authorization_endpoint:\n          type: string\n          description: REQUIRED. URL of the OP's OAuth 2.0 Authorization Endpoint\n        claims_parameter_supported:\n          type: boolean\n          description: OPTIONAL. Boolean value specifying whether the OP supports use of\n            the claims parameter, with true indicating support. If omitted, the\n            default value is false\n        claims_supported:\n          type: array\n          items: {}\n          description: RECOMMENDED. JSON array containing a list of the Claim Names of the\n            Claims that the OpenID Provider MAY be able to supply values for\n        code_challenge_methods_supported:\n          type: array\n          items: {}\n        end_session_endpoint:\n          type: string\n        check_session_endpoint:\n          type: string\n        grant_types_supported:\n          type: array\n          items: {}\n          description: OPTIONAL. JSON array containing a list of the OAuth 2.0 Grant Type\n            values that this OP supports\n        id_token_signing_alg_values_supported:\n          type: array\n          items: {}\n          description: REQUIRED. JSON array containing a list of the JWS signing algorithms\n            (alg values) supported by the OP for the ID Token to encode the\n            Claims in a JWT\n        issuer:\n          type: string\n          description: REQUIRED. URL using the https scheme with no query or fragment\n            component that the OP asserts as its Issuer Identifier\n        jwks_uri:\n          type: string\n          description: REQUIRED. URL of the OP's JSON Web Key Set [JWK] document.\n        registration_endpoint:\n          type: string\n          description: RECOMMENDED. URL of the OP's Dynamic Client Registration Endpoint\n        request_object_signing_alg_values_supported:\n          type: string\n          description: OPTIONAL. JSON array containing a list of the JWS signing algorithms\n            (alg values) supported by the OP for Request Objects\n        request_parameter_supported:\n          type: boolean\n          description: OPTIONAL. Boolean value specifying whether the OP supports use of\n            the request parameter, with true indicating support. If omitted, the\n            default value is false\n        request_uri_parameter_supported:\n          type: boolean\n          description: OPTIONAL. Boolean value specifying whether the OP supports use of\n            the request_uri parameter, with true indicating support. If omitted,\n            the default value is true\n        require_request_uri_registration:\n          type: boolean\n          description: OPTIONAL. Boolean value specifying whether the OP requires any\n            request_uri values used to be pre-registered using the request_uris\n            registration parameter\n        pushed_authorization_request_endpoint:\n          type: array\n          items: {}\n        response_modes_supported:\n          type: array\n          items: {}\n          description: OPTIONAL. JSON array containing a list of the OAuth 2.0\n            response_mode values that this OP supports\n        response_types_supported:\n          type: array\n          items: {}\n          description: REQUIRED. JSON array containing a list of the OAuth 2.0\n            response_type values that this OP supports\n        scopes_supported:\n          type: array\n          items: {}\n          description: RECOMMENDED. JSON array containing a list of the OAuth 2.0 [RFC6749]\n            scope values that this server supports\n        subject_types_supported:\n          type: array\n          items: {}\n          description: REQUIRED. JSON array containing a list of the Subject Identifier\n            types that this OP supports\n        token_endpoint_auth_methods_supported:\n          type: array\n          items: {}\n          description: OPTIONAL. JSON array containing a list of Client Authentication\n            methods supported by this Token Endpoint\n        token_endpoint_auth_signing_alg_values_supported:\n          type: array\n          items: {}\n          description: OPTIONAL. JSON array containing a list of the JWS signing algorithms\n            (alg values) supported by the Token Endpoint for the signature on\n            the JWT\n        token_endpoint:\n          type: string\n          description: URL of the OP's OAuth 2.0 Token Endpoint\n        userinfo_endpoint:\n          type: string\n          description: RECOMMENDED. URL of the OP's UserInfo Endpoint\n        userinfo_signing_alg_values_supported:\n          type: array\n          items: {}\n          description: OPTIONAL. JSON array containing a list of the JWS signing algorithms\n            (alg values) [JWA] supported by the UserInfo Endpoint to encode the\n            Claims in a JWT\n        authorization_signing_alg_values_supported:\n          type: array\n          items: {}\n        introspection_endpoint:\n          type: string\n        introspection_endpoint_auth_methods_supported:\n          type: array\n          items: {}\n        introspection_endpoint_auth_signing_alg_values_supported:\n          type: array\n          items: {}\n        revocation_endpoint:\n          type: string\n        revocation_endpoint_auth_methods_supported:\n          type: array\n          items: {}\n        revocation_endpoint_auth_signing_alg_values_supported:\n          type: array\n          items: {}\n        frontchannel_logout_supported:\n          type: boolean\n        frontchannel_logout_session_supported:\n          type: boolean\n        tls_client_certificate_bound_access_tokens:\n          type: boolean\n        claim_types_supported:\n          type: array\n          items: {}\n          description: OPTIONAL. JSON array containing a list of the Claim Types that the\n            OpenID Provider supports\n\n    OrgAccessDetail:\n      type: object\n      properties:\n        OrgAdmin:\n          type: boolean\n          description: Is the user the org admin of the current org\n        DomainRoleDetails:\n          type: array\n          description: Array of domain, role and status of domain role mapping\n          items:\n            $ref: '#/components/schemas/DomainRoleDetail'\n\n    DomainRoleDetail:\n      type: object\n      properties:\n        AuthorisationDomainName:\n          type: string\n        AuthorisationDomainRoleName:\n          type: string\n        Status:\n          $ref: '#/components/schemas/StatusEnum'\n        ContactRole:\n          $ref: '#/components/schemas/ContactRoleEnum'\n\n    TnCId:\n      type: integer\n      description: TnC unique identifier\n\n    ClientId:\n      type: string\n      description: The ClientID \n\n    TermsAndConditionsPage:\n      type: object\n      properties:\n        totalPages:\n          type: integer\n        totalSize:\n          type: integer\n        pageable:\n          $ref: '#/components/schemas/Pageable'\n        numberOfElements:\n          type: integer\n        size:\n          type: integer\n        content:\n          type: array\n          items:\n            $ref: '#/components/schemas/TermsAndConditionsItem'\n        offset:\n          type: integer\n        empty:\n          type: boolean\n        pageNumber:\n          type: integer\n\n    TermsAndConditionsItem:\n      type: object\n      properties:\n        TnCId:\n          type: integer\n          description: Unique identifier for the Terms and Conditions Item\n        Version:\n          type: integer\n        Name:\n          type: string\n        Type:\n          type: string\n          description: Identifies Participant or Directory\n        Content:\n          type: string\n          description: Contains the MarkDown of the actual TnCs\n        Status:\n          type: string\n          description: Is the TnC Active or Inactive\n          enum:\n            - Active\n            - Inactive\n        ExternalSigningService:\n          type: object\n          properties:\n            ExternalSigningServiceName:\n              type: string\n              enum:\n                - DocuSign\n            ExternalSigningServiceSignerTemplateConfig:\n              $ref: '#/components/schemas/ExternalSigningServiceSignerTemplateConfig'\n            ExternalSigningServiceSubject:\n              type: string\n\n    TermsAndConditionsCreateRequest:\n      type: object\n      properties:\n        Type:\n          type: string\n          minLength: 1\n          description: Role for which this TnC applies\n          enum:\n            - Participant\n            - Directory\n          x-required-message: Type must be provided\n        Version:\n          type: integer\n          description: Version of the TnC document\n          x-required-message: Version must be provided\n        Name:\n          type: string\n          minLength: 1\n          description: The Name of the TnC\n          x-required-message: Name must be provided\n        Content:\n          type: string\n          minLength: 1\n          description: The MarkDown of the TnC\n          x-required-message: MarkDown must be provided\n        ExternalSigningServiceName:\n          enum:\n            - DocuSign\n          description: The Name of the External Signing Service\n          x-required-message: External signing service name must be provided\n        ExternalSigningServiceSignerTemplateConfig:\n          $ref: '#/components/schemas/ExternalSigningServiceSignerTemplateConfig'\n        ExternalSigningServiceSubject:\n          type: string\n          minLength: 1\n          description: The Subject of the External Signing Service\n          x-required-message: Subject must be provided\n      required:\n        - Type\n        - Version\n        - Content\n        - Name\n\n    ExternalSigningServiceSignerTemplateConfig:\n      type: object\n      properties:\n        TemplateIdSigner1:\n          type: string\n          minLength: 1\n          description: Template ID for 1 signer\n        TemplateIdSigner2:\n          type: string\n          minLength: 1\n          description: Template ID for 2 signers\n        TemplateIdSigner3:\n          type: string\n          minLength: 1\n          description: Template ID for 3 signers\n        TemplateIdSigner4:\n          type: string\n          minLength: 1\n          description: Template ID for 4 signers\n        TemplateIdSigner5:\n          type: string\n          minLength: 1\n          description: Template ID for 5 signers\n        TemplateIdSigner6:\n          type: string\n          minLength: 1\n          description: Template ID for 6 signers\n\n    TermsAndConditionsUpdateRequest:\n      type: object\n      properties:\n        Content:\n          type: string\n          minLength: 1\n          description: The MarkDown of the TnC\n          x-required-message: MarkDown must be provided\n        ExternalSigningServiceName:\n          enum:\n            - DocuSign\n          description: The Name of the External Signing Service\n          x-required-message: External signing service name must be provided\n        ExternalSigningServiceSignerTemplateConfig:\n          $ref: '#/components/schemas/ExternalSigningServiceSignerTemplateConfig'\n        ExternalSigningServiceSubject:\n          type: string\n          minLength: 1\n          description: The Subject of the External Signing Service\n          x-required-message: Subject must be provided\n      required:\n        - Content\n\n    OrgAdminUserCreateRequest:\n      type: object\n      properties:\n        UserEmail:\n          type: string\n          description: Admin user email address\n          pattern: \"^(.{1,}@[^.]{1,}).*\"\n          x-pattern-message: \"EmailAddress must be a valid email\"\n      required:\n        - UserEmail\n\n    OrganisationAdminUsers:\n      type: array\n      items:\n        $ref: '#/components/schemas/OrganisationAdminUser'\n\n    OrganisationAdminUser:\n      type: object\n      properties:\n        Status:\n          type: string\n          description: Is the admin user active\n          enum:\n            - Active\n            - Inactive\n        UserEmail:\n          type: string\n          description: User's email address\n        DomainRoleDetails:\n          type: array\n          items:\n            $ref: '#/components/schemas/DomainRoleDetail'\n\n    ApiResources:\n      type: object\n      properties:\n        totalPages:\n          type: integer\n        totalSize:\n          type: integer\n        pageable:\n          $ref: '#/components/schemas/Pageable'\n        numberOfElements:\n          type: integer\n        size:\n          type: integer\n        content:\n          type: array\n          items:\n            $ref: '#/components/schemas/ApiResource'\n        offset:\n          type: integer\n        empty:\n          type: boolean\n        pageNumber:\n          type: integer\n\n    ApiResource:\n      type: object\n      properties:\n        ApiResourceId:\n          $ref: '#/components/schemas/ApiResourceId'\n        ApiFamilyType:\n          $ref: '#/components/schemas/ApiFamilyType'\n        ApiVersion:\n          type: number\n          description: The version number of the API\n        ApiDiscoveryEndpoints:\n          type: array\n          items:\n            $ref: '#/components/schemas/ApiDiscoveryEndpoint'\n\n    ApiResourceRequest:\n      type: object\n      properties:\n        ApiFamilyType:\n          $ref: '#/components/schemas/ApiFamilyType'\n        ApiVersion:\n          type: number\n          description: The version number of the API\n\n    ApiFamilyType:\n      type: string\n      minLength: 1\n      maxLength: 40\n      description: The type of API this record describes\n\n    ApiResourceId:\n      type: string\n      maxLength: 40\n      description: The unique ID of an Api version resource\n\n    ApiDiscoveryEndpoints:\n      type: object\n      properties:\n        totalPages:\n          type: integer\n        totalSize:\n          type: integer\n        pageable:\n          $ref: '#/components/schemas/Pageable'\n        numberOfElements:\n          type: integer\n        size:\n          type: integer\n        content:\n          type: array\n          items:\n            $ref: '#/components/schemas/ApiDiscoveryEndpoint'\n        offset:\n          type: integer\n        empty:\n          type: boolean\n        pageNumber:\n          type: integer\n\n    ApiDiscoveryEndpoint:\n      type: object\n      properties:\n        ApiDiscoveryId:\n          type: string\n          maxLength: 40\n          description: Unique Id of this discovery endpoint record\n        ApiEndpoint:\n          description: A compliant URI\n          pattern: \"^(http:\\\\/\\\\/|https:\\\\/\\\\/).*\"\n          x-pattern-message: \"ApiEndpoint must be in a URI format https://... or http://...\"\n          type: string\n          format: uri\n          maxLength: 256\n\n    ApiDiscoveryEndpointRequest:\n      type: object\n      properties:\n        ApiEndpoint:\n          description: A compliant URI\n          pattern: \"^(http:\\\\/\\\\/|https:\\\\/\\\\/).*\"\n          x-pattern-message: \"ApiEndpoint must be in a URI format https://... or http://...\"\n          type: string\n          format: uri\n          maxLength: 256\n\n    ApiDiscoveryEndpointId:\n      type: string\n      maxLength: 40\n      description: The unique ID of an Api discovery endpoint resource\n\n    OrgTermsAndConditionsPage:\n      type: object\n      properties:\n        totalPages:\n          type: integer\n        totalSize:\n          type: integer\n        pageable:\n          $ref: '#/components/schemas/Pageable'\n        numberOfElements:\n          type: integer\n        size:\n          type: integer\n        content:\n          type: array\n          items:\n            $ref: '#/components/schemas/OrgTermsAndConditionsDetail'\n        offset:\n          type: integer\n        empty:\n          type: boolean\n        pageNumber:\n          type: integer\n\n    UserTermsAndConditionsPage:\n      type: object\n      properties:\n        totalPages:\n          type: integer\n        totalSize:\n          type: integer\n        pageable:\n          $ref: '#/components/schemas/Pageable'\n        numberOfElements:\n          type: integer\n        size:\n          type: integer\n        content:\n          type: array\n          items:\n            $ref: '#/components/schemas/TermsAndConditionsDetail'\n        offset:\n          type: integer\n        empty:\n          type: boolean\n        pageNumber:\n          type: integer\n\n    EssSignRequest:\n      type: object\n      properties:\n        TnCId:\n          $ref: '#/components/schemas/TnCId'\n        NoOfSigners:\n          type: integer\n\n    EssPollResponse:\n      type: object\n      properties:\n        ExternalSigningServiceEnvelopeStatus:\n          $ref: '#/components/schemas/ExternalSigningServiceEnvelopeStatus'\n\n    TnCsToBeSigned:\n      type: array\n      items:\n        $ref: '#/components/schemas/TermsAndConditionsItem'\n\n    ExternalSigningServiceEnvelopeId:\n      type: string\n      description: The envelope id of the ess signing request\n\n    AuthorisationDomainUserUpdateRequest:\n      type: object\n      properties:\n        Status:\n          $ref: '#/components/schemas/StatusEnum'\n        ContactRole:\n          $ref: '#/components/schemas/ContactRoleEnum'\n\n    ContactRoleEnum:\n      type: string\n      description: The role of the contact\n      enum:\n        - PTC\n        - STC\n        - PBC\n        - SBC",
			"canonicalURL": "/github.com/OpenBanking-Brasil/areadesenvolvedor@d6770dfcb778e2e938c43455740b3f806a1efea8/-/blob/documentation/source/versions/v1.0.0-rc8.7/swagger/swagger_participants.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/OpenBanking-Brasil/areadesenvolvedor/blob/d6770dfcb778e2e938c43455740b3f806a1efea8/documentation/source/versions/v1.0.0-rc8.7/swagger/swagger_participants.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}