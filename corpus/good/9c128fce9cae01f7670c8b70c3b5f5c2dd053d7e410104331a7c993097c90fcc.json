{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "deutschebahn.com-fahrplan-v1-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/deutschebahn.com-fahrplan-v1-swagger.yaml",
			"byteSize": 9469,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    email: DBOpenData@deutschebahn.com\n    name: DBOpenData\n    url: https://developer.deutschebahn.com/store/\n  description: \u003e-\n    A RESTful webservice to request a railway journey - FREE plan with\n    restricted access (max. 10 requests per minute). Please ignore the message\n    in the API Console about the access token.\n\n\n    Register to use an less restricted version, which requires an access token.\n  license:\n    name: DB Data Portal\n    url: http://data.deutschebahn.com/pages/nutzungsbedingungen\n  termsOfService: http://data.deutschebahn.com/nutzungsbedingungen.html\n  title: Fahrplan-Free\n  version: v1\n  x-apisguru-categories:\n    - transport\n    - open_data\n  x-logo:\n    backgroundColor: \"#FFFFFF\"\n    url: https://pbs.twimg.com/profile_images/591140150413025280/Cjcqjl2J.png\n  x-origin:\n    - format: swagger\n      url: https://developer.deutschebahn.com/store/api-docs/DBOpenData/Fahrplan-Free/v1\n      version: \"2.0\"\n  x-providerName: deutschebahn.com\n  x-serviceName: fahrplan\npaths:\n  \"/arrivalBoard/{id}\":\n    get:\n      description: Get arrival board at a given location at a given daten and time.\n      parameters:\n        - description: Id of location. Use attribute 'id' from the result of 'location'\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: \"Date and time in ISO-8601 format, yyyy-mm-ddThh:mm:ss, example:\n            2017-04-01 or 2017-04-01T10:30\"\n          in: query\n          name: date\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: arrival board\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BoardResponse\"\n        \"400\":\n          description: Invalid date/time specification.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorModel\"\n        \"500\":\n          description: Internal Server Error.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorModel\"\n        \"503\":\n          description: The service has been disabled temporarily.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorModel\"\n      summary: Get arrival board of a location\n      x-auth-type: None\n      x-throttling-tier: 10_per_minute\n  \"/departureBoard/{id}\":\n    get:\n      description: Get departure board at a given location at a given daten and time.\n      parameters:\n        - description: Id of a location. Use attribute 'id' from the result of 'location'\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: \"Date and time in ISO-8601 format, yyyy-mm-ddThh:mm:ss, example:\n            2017-04-01 or 2017-04-01T10:30\"\n          in: query\n          name: date\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: departure board\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BoardResponse\"\n        \"400\":\n          description: Invalid date/time specification.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorModel\"\n        \"500\":\n          description: Internal Server Error.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorModel\"\n        \"503\":\n          description: The service has been disabled temporarily.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorModel\"\n      summary: Get departure board of a location\n      x-auth-type: None\n      x-throttling-tier: 10_per_minute\n  \"/journeyDetails/{id}\":\n    get:\n      description: Retrieve details of a journey. The id of journey should come from an\n        arrival board or a departure board.\n      parameters:\n        - description: Id of a journey. Use attribute 'detailsId' from the result\n            of  'arrivalBoard' or 'departureBoard'\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: journey details, locations of a journey\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/JourneyResponse\"\n        \"500\":\n          description: Internal Server Error.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorModel\"\n        \"503\":\n          description: The service has been disabled temporarily.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorModel\"\n      summary: Get details about a single journey\n      x-auth-type: None\n      x-throttling-tier: 10_per_minute\n  \"/location/{name}\":\n    get:\n      description: Get information about locations matching the given name or name fragment\n      parameters:\n        - description: Name or name fragment of a location\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: location information\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LocationResponse\"\n        \"500\":\n          description: Internal Server Error.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorModel\"\n        \"503\":\n          description: The service has been disabled temporarily.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorModel\"\n      summary: Get location information\n      x-auth-type: None\n      x-throttling-tier: 10_per_minute\nservers:\n  - url: https://api.deutschebahn.com/freeplan/v1\n  - url: http://api.deutschebahn.com/freeplan/v1\ncomponents:\n  schemas:\n    Board:\n      properties:\n        boardId:\n          description: \"\"\n          type: string\n        dateTime:\n          description: \"\"\n          type: string\n        detailsId:\n          description: \"\"\n          type: string\n        name:\n          description: Name of train\n          type: string\n        origin:\n          description: \"\"\n          type: string\n        stopId:\n          description: \"\"\n          type: string\n        stopName:\n          description: \"\"\n          type: string\n        track:\n          description: \"\"\n          type: string\n        type:\n          description: \"\"\n          type: string\n      required:\n        - name\n        - type\n        - boardId\n        - stopId\n        - stopName\n        - dateTime\n        - origin\n        - track\n        - detailsId\n      type: object\n    BoardResponse:\n      properties:\n        boards:\n          items:\n            $ref: \"#/components/schemas/Board\"\n          minItems: 1\n          type: array\n          uniqueItems: true\n      required:\n        - boards\n      type: object\n    ErrorModel:\n      properties:\n        code:\n          type: integer\n        internal_code:\n          type: integer\n        internal_message:\n          type: string\n        message:\n          type: string\n      required:\n        - code\n        - message\n      type: object\n    JourneyResponse:\n      properties:\n        train_locs:\n          items:\n            $ref: \"#/components/schemas/TrainLocation\"\n          minItems: 1\n          type: array\n          uniqueItems: true\n      required:\n        - train_locs\n      type: object\n    Location:\n      properties:\n        id:\n          description: \"id of location (eva-number), example: 8000105\"\n          type: string\n        lat:\n          description: \"latitude, example: 50.107149\"\n          type: number\n        lon:\n          description: \"longitude, example: 8.663785\"\n          type: number\n        name:\n          description: \"Name of location, example: Frankfurt(Main)Hbf\"\n          type: string\n      required:\n        - name\n        - lon\n        - lat\n        - id\n      type: object\n    LocationResponse:\n      properties:\n        locations:\n          items:\n            $ref: \"#/components/schemas/Location\"\n          minItems: 1\n          type: array\n          uniqueItems: true\n      required:\n        - locations\n      type: object\n    TrainLocation:\n      properties:\n        arrTime:\n          description: \"\"\n          type: string\n        depTime:\n          description: \"\"\n          type: string\n        lat:\n          description: \"\"\n          type: number\n        lon:\n          description: \"\"\n          type: number\n        operator:\n          description: \"\"\n          type: string\n        stopId:\n          description: \"\"\n          type: string\n        stopName:\n          description: \"\"\n          type: string\n        train:\n          description: \"\"\n          type: string\n        type:\n          description: \"\"\n          type: string\n      required:\n        - stopId\n        - stopName\n        - lat\n        - lon\n        - arrTime\n        - depTime\n        - train\n        - type\n        - operator\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/deutschebahn.com-fahrplan-v1-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/deutschebahn.com-fahrplan-v1-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}