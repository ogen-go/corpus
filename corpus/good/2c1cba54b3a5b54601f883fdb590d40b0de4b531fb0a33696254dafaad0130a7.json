{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/microsoft/cadl"
		},
		"file": {
			"name": "openapi.json",
			"size": 0,
			"path": "packages/samples/test/output/testserver/body-complex/openapi.json",
			"byteSize": 25287,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"(title)\",\n    \"version\": \"0000-00-00\"\n  },\n  \"tags\": [],\n  \"paths\": {\n    \"/complex/basic/valid\": {\n      \"get\": {\n        \"operationId\": \"Complex_getValid\",\n        \"description\": \"Get complex type {id: 2, name: 'abc', color: 'YELLOW'}\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request has succeeded.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Basic\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"operationId\": \"Complex_putValid\",\n        \"description\": \"Please put {id: 2, name: 'abc', color: 'Magenta'}\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\"\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Basic\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/complex/primitive/integer\": {\n      \"get\": {\n        \"operationId\": \"Complex_getInt\",\n        \"description\": \"Get complex types with integer properties\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request has succeeded.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/IntWrapper\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"operationId\": \"Complex_putInt\",\n        \"description\": \"Put complex types with integer properties\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\"\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/IntWrapper\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/complex/primitive/long\": {\n      \"get\": {\n        \"operationId\": \"Complex_getLong\",\n        \"description\": \"Get complex types with long properties\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request has succeeded.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LongWrapper\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"operationId\": \"Complex_putLong\",\n        \"description\": \"Put complex types with long properties\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\"\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LongWrapper\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/complex/primitive/float\": {\n      \"get\": {\n        \"operationId\": \"Complex_getFloat\",\n        \"description\": \"Get complex types with float properties\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request has succeeded.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/FloatWrapper\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"operationId\": \"Complex_putFloat\",\n        \"description\": \"Put complex types with float properties\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\"\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/FloatWrapper\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/complex/primitive/double\": {\n      \"get\": {\n        \"operationId\": \"Complex_getDouble\",\n        \"description\": \"Get complex types with double properties\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request has succeeded.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DoubleWrapper\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"operationId\": \"Complex_putDouble\",\n        \"description\": \"Put complex types with double properties\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\"\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/DoubleWrapper\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/complex/primitive/bool\": {\n      \"get\": {\n        \"operationId\": \"Complex_getBool\",\n        \"description\": \"Get complex types with bool properties\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request has succeeded.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BooleanWrapper\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"operationId\": \"Complex_putBool\",\n        \"description\": \"Put complex types with bool properties\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\"\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BooleanWrapper\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/complex/primitive/string\": {\n      \"get\": {\n        \"operationId\": \"Complex_getString\",\n        \"description\": \"Get complex types with string properties\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request has succeeded.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StringWrapper\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"operationId\": \"Complex_putString\",\n        \"description\": \"Put complex types with string properties\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\"\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/StringWrapper\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/complex/primitive/date\": {\n      \"get\": {\n        \"operationId\": \"Complex_getPlainDate\",\n        \"description\": \"Get complex types with date properties\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request has succeeded.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PlainDateWrapper\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"operationId\": \"Complex_putPlainDate\",\n        \"description\": \"Put complex types with date properties\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\"\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PlainDateWrapper\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/complex/primitive/datetime\": {\n      \"get\": {\n        \"operationId\": \"Complex_getZonedDateTime\",\n        \"description\": \"Get complex types with DateTime properties\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request has succeeded.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DateTimeWrapper\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"operationId\": \"Complex_putZonedDateTime\",\n        \"description\": \"Put complex types with DateTime properties\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\"\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/DateTimeWrapper\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/complex/primitive/duration\": {\n      \"get\": {\n        \"operationId\": \"Complex_getZonedDuration\",\n        \"description\": \"Get complex types with Duration properties\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request has succeeded.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DurationWrapper\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"operationId\": \"Complex_putZonedDuration\",\n        \"description\": \"Put complex types with Duration properties\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\"\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/DurationWrapper\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/complex/primitive/bytes\": {\n      \"get\": {\n        \"operationId\": \"Complex_getBytes\",\n        \"description\": \"Get complex types with bytes properties\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request has succeeded.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BytesWrapper\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"operationId\": \"Complex_putBytes\",\n        \"description\": \"Put complex types with bytes properties\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\"\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BytesWrapper\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/complex/array/valid\": {\n      \"get\": {\n        \"operationId\": \"Complex_getArray\",\n        \"description\": \"Get complex types with array properties\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request has succeeded.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ArrayWrapper\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"operationId\": \"Complex_putArray\",\n        \"description\": \"Put complex types with array properties\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\"\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ArrayWrapper\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/complex/dictionary/typed/valid\": {\n      \"get\": {\n        \"operationId\": \"Dictionary_getDictionary\",\n        \"description\": \"Get complex types with dictionary property\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The request has succeeded.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DictionaryWrapper\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"operationId\": \"Dictionary_putArray\",\n        \"description\": \"Put complex types with dictionary property\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\"\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/DictionaryWrapper\"\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Basic\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\",\n            \"nullable\": true,\n            \"x-cadl-name\": \"int32 | null\",\n            \"description\": \"Basic Id\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Name property with a very long description that does not fit on a single line and a line break.\"\n          },\n          \"color\": {\n            \"$ref\": \"#/components/schemas/CMYKColors\"\n          }\n        },\n        \"required\": [\n          \"id\",\n          \"name\",\n          \"color\"\n        ]\n      },\n      \"Error\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\"\n          }\n        },\n        \"description\": \"Error\",\n        \"required\": [\n          \"message\"\n        ]\n      },\n      \"IntWrapper\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"field1\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"field2\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"required\": [\n          \"field1\",\n          \"field2\"\n        ]\n      },\n      \"LongWrapper\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"field1\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"field2\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          }\n        },\n        \"required\": [\n          \"field1\",\n          \"field2\"\n        ]\n      },\n      \"FloatWrapper\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"field1\": {\n            \"type\": \"number\",\n            \"format\": \"float\"\n          },\n          \"field2\": {\n            \"type\": \"number\",\n            \"format\": \"float\"\n          }\n        },\n        \"required\": [\n          \"field1\",\n          \"field2\"\n        ]\n      },\n      \"DoubleWrapper\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"field1\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"field_56_zeros_after_the_dot_and_negative_zero_before_dot_and_this_is_a_long_field_name_on_purpose\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          }\n        },\n        \"required\": [\n          \"field1\",\n          \"field_56_zeros_after_the_dot_and_negative_zero_before_dot_and_this_is_a_long_field_name_on_purpose\"\n        ]\n      },\n      \"BooleanWrapper\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"field_true\": {\n            \"type\": \"boolean\"\n          },\n          \"field_false\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"required\": [\n          \"field_true\",\n          \"field_false\"\n        ]\n      },\n      \"StringWrapper\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"field\": {\n            \"type\": \"string\"\n          },\n          \"empty\": {\n            \"type\": \"string\"\n          },\n          \"null\": {\n            \"type\": \"string\",\n            \"nullable\": true,\n            \"x-cadl-name\": \"string | null\"\n          }\n        },\n        \"required\": [\n          \"field\",\n          \"empty\",\n          \"null\"\n        ]\n      },\n      \"PlainDateWrapper\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"field\": {\n            \"type\": \"string\",\n            \"format\": \"date\"\n          },\n          \"leap\": {\n            \"type\": \"string\",\n            \"format\": \"date\"\n          }\n        },\n        \"required\": [\n          \"field\",\n          \"leap\"\n        ]\n      },\n      \"DateTimeWrapper\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"field\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"now\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        },\n        \"required\": [\n          \"field\",\n          \"now\"\n        ]\n      },\n      \"DurationWrapper\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"field\": {\n            \"type\": \"string\",\n            \"format\": \"duration\"\n          }\n        },\n        \"required\": [\n          \"field\"\n        ]\n      },\n      \"BytesWrapper\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"field\": {\n            \"type\": \"string\",\n            \"format\": \"byte\"\n          }\n        },\n        \"required\": [\n          \"field\"\n        ]\n      },\n      \"ArrayWrapper\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"field\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"x-cadl-name\": \"string[]\"\n          }\n        },\n        \"required\": [\n          \"field\"\n        ]\n      },\n      \"DictionaryWrapper\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"field\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"required\": [\n          \"field\"\n        ]\n      },\n      \"CMYKColors\": {\n        \"type\": \"string\",\n        \"enum\": [\n          \"cyan\",\n          \"Magenta\",\n          \"YELLOW\",\n          \"blacK\"\n        ]\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/microsoft/cadl@4fac4d50c3e99c6b61da357a00fe7761acf21090/-/blob/packages/samples/test/output/testserver/body-complex/openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/microsoft/cadl/blob/4fac4d50c3e99c6b61da357a00fe7761acf21090/packages/samples/test/output/testserver/body-complex/openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}