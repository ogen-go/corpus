{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Gi60s/openapi-enforcer-middleware"
		},
		"file": {
			"name": "v3.yaml",
			"size": 0,
			"path": "test/resources/v3.yaml",
			"byteSize": 4753,
			"content": "openapi: 3.0.1\ninfo:\n  title: People, Heroes, and Villians\n  version: 1.0.0\nx-controller: people\npaths:\n  /people:\n    get:\n      x-operation: getPeople\n      tags:\n        - people\n      parameters:\n        - name: classification\n          in: query\n          schema:\n            $ref: '#/components/schemas/Classification'\n        - name: id\n          in: query\n          schema:\n            type: string\n      responses:\n        200:\n          description: A list of people, heroes, and villians\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Person'\n    post:\n      x-operation: addPerson\n      tags:\n        - people\n        - heroes\n        - villains\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Person'\n      responses:\n        200:\n          description: Successfully put\n  /people/{id}:\n    get:\n      x-operation: getPerson\n      tags:\n        - people\n        - heroes\n        - villains\n      responses:\n        200:\n          description: Get a person, hero, or villian\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Person'\n    put:\n      x-operation: putPerson\n      tags:\n        - people\n        - heroes\n        - villains\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Person'\n      responses:\n        200:\n          description: Get a person, hero, or villian\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Person'\n    delete:\n      x-operation: deletePerson\n      tags:\n        - people\n        - heroes\n        - villains\n      responses:\n        204:\n          description: Deleted successfully\n    parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n  /heroes:\n    get:\n      x-operaton: getHeroes\n      tags:\n        - heroes\n      parameters:\n        - name: class\n          in: query\n          style: form\n          schema:\n            $ref: '#/components/schemas/Rank'\n      responses:\n        200:\n          description: A list of heroes\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Hero'\n  /villains:\n    get:\n      x-operaton: getVillains\n      tags:\n        - villains\n      parameters:\n        - name: crime\n          in: query\n          style: form\n          schema:\n            $ref: '#/components/schemas/Crime'\n      responses:\n        200:\n          description: A list of heroes\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Hero'\ncomponents:\n  schemas:\n    Classification:\n      type: string\n      enum:\n        - hero\n        - normal\n        - villian\n    Crime:\n      type: string\n      enum:\n        - assult\n        - bullying\n        - theft\n    Hero:\n      allOf:\n        - $ref: '#/components/schemas/Identity'\n        - $ref: '#/components/schemas/Stats'\n        - type: object\n          properties:\n            rank:\n              $ref: '#/components/schemas/Rank'\n    Identity:\n      type: object\n      properties:\n        classification:\n          $ref: '#/components/schemas/Classification'\n        id:\n          type: string\n        name:\n          type: string\n          default: 'unknown'\n        age:\n          type: integer\n    Person:\n      oneOf:\n        - $ref: '#/components/schemas/Hero'\n        - $ref: '#/components/schemas/Identity'\n        - $ref: '#/components/schemas/Villain'\n      discriminator:\n        propertyName: classification\n    Rank:\n      type: object\n      properties:\n        class:\n          type: string\n          enum:\n            - A\n            - B\n            - C\n            - D\n        position:\n          type: integer\n          minimum: 1\n          maximum: 20\n    Stats:\n      type: object\n      properties:\n        defense:\n          type: integer\n          minimum: 0\n          maximum: 10\n        speed:\n          type: integer\n          minimum: 0\n          maximum: 10\n        strength:\n          type: integer\n          minimum: 0\n          maximum: 10\n    Villain:\n      allOf:\n        - $ref: '#/components/schemas/Identity'\n        - $ref: '#/components/schemas/Stats'\n        - type: object\n          properties:\n            crimes:\n              type: array\n              items:\n                $ref: '#/components/schemas/Crime'",
			"canonicalURL": "/github.com/Gi60s/openapi-enforcer-middleware@9ca8b12485942174002327f83647f9d4d2ad8bc5/-/blob/test/resources/v3.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Gi60s/openapi-enforcer-middleware/blob/9ca8b12485942174002327f83647f9d4d2ad8bc5/test/resources/v3.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}