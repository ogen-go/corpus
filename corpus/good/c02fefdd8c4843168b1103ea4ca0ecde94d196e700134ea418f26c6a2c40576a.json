{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/owncast/owncast.github.io"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "data/openapi.yaml",
			"byteSize": 15639,
			"content": "openapi: 3.0.1\ninfo:\n  title: Owncast\n  description: Owncast is a self-hosted live video and web chat server for use with existing popular broadcasting software.\n  version: '0.0.2'\nservers: []\n\ntags:\n  - name: Admin\n    description: Admin operations requiring authentication.\n  - name: Chat\n    description: Endpoints related to the chat interface.\n\ncomponents:\n  schemas:\n    BasicResponse:\n      type: object\n      properties:\n        success:\n          type: boolean\n        message:\n          type: string\n    InstanceDetails:\n      type: object\n      properties:\n        name:\n          type: string\n        title:\n          type: string\n        summary:\n          type: string\n          description: This is brief summary of whom you are or what the stream is.\n        logo:\n          type: object\n          properties:\n            large:\n              type: string\n            small:\n              type: string\n        tags:\n          type: array\n          items:\n            type: string\n        socialHandles:\n          type: array\n          items:\n            type: object\n            properties:\n              platform:\n                type: string\n                example: github\n              url:\n                type: string\n                example: http://github.com/owncast/owncast\n        extraUserInfoFileName:\n          type: string\n          description: Path to additional content about the server.\n        version:\n          type: string\n          example: Owncast v0.0.2-macOS (ef3796a033b32a312ebf5b334851cbf9959e7ecb)\n    S3:\n      type: object\n      properties:\n        enabled:\n          type: boolean\n        endpoint:\n          type: string\n        servingEndpoint:\n          type: string\n        accessKey:\n          type: string\n        secret:\n          type: string\n        bucket:\n          type: string\n        region:\n          type: string\n        acl:\n          type: string\n      required:\n        - enabled\n    StreamQuality:\n      type: object\n      properties:\n        videoPassthrough:\n          type: boolean\n        audioPassthrough:\n          type: boolean\n        videoBitrate:\n          type: integer\n        audioBitrate:\n          type: integer\n        scaledWidth:\n          type: integer\n        scaledHeight:\n          type: integer\n        framerate:\n          type: integer\n        encoderPreset:\n          type: string\n    TimestampedValue:\n      type: object\n      properties:\n        time:\n          type: string\n          format: date-time\n        value:\n          type: integer\n\n\n  securitySchemes:\n    AdminBasicAuth:\n      type: http\n      scheme: basic\n      description: The username for admin basic auth is `admin` and the password is the stream key.\n\n  responses:\n    BasicResponse:\n      description: Operation Success/Failure Response\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/BasicResponse\"\n          examples:\n            success:\n              summary: Operation succeeded.\n              value: {\"success\": true, \"message\": \"inbound stream disconnected\"}\n            failure:\n              summary: Operation failed.\n              value: {\"success\": false, \"message\": \"no inbound stream connected\"}\n\npaths:\n\n  /api/config:\n    get:\n      summary: Information\n      description: Get the public information about the server. Adds context to the server, as well as information useful for the user interface.\n      tags: [\"Server\"]\n      responses:\n        '200':\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InstanceDetails\"\n\n  /api/status:\n    get:\n      summary: Current Status\n      description: This endpoint is used to discover when a server is broadcasting, the number of active viewers as well as other useful information for updating the user interface.\n      tags: [\"Server\"]\n      responses:\n        '200':\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  lastConnectTime:\n                    type: string\n                    nullable: true\n                    format: date-time\n                  overallMaxViewerCount:\n                    type: integer\n                  sessionMaxViewerCount:\n                    type: integer\n                  online:\n                    type: boolean\n                  viewerCount:\n                    type: integer\n                  lastDisconnectTime:\n                    type: string\n                    nullable: true\n                    format: date-time\n              examples:\n                online:\n                  value:\n                    lastConnectTime: \"2020-10-03T21:36:22-05:00\"\n                    lastDisconnectTime: null\n                    online: true\n                    overallMaxViewerCount: 420\n                    sessionMaxViewerCount: 12\n                    viewerCount: 7\n\n  /api/chat:\n    get:\n      summary: Historical Chat Messages\n      description: Used to get all chat messages prior to connecting to the websocket.\n      tags: [\"Chat\"]\n      responses:\n        '200':\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    author:\n                      type: string\n                      description: Username of the chat message poster.\n                    body:\n                      type: string\n                      description: Escaped HTML of the chat message content.\n                    image:\n                      type: string\n                      description: URL of the chat user avatar.\n                    id:\n                      type: string\n                      description: Unique ID of the chat message.\n                    visible:\n                      type: boolean\n                      description: \"TODO\"\n                    timestamp:\n                      type: string\n                      format: date-time\n\n  /api/yp:\n    get:\n      summary: Yellow Pages Information\n      description: Information to be used in the Yellow Pages service, a global directory of Owncast servers.\n      tags: [\"Server\"]\n      responses:\n        '200':\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  name:\n                    type: string\n                  description:\n                    type: string\n                  logo:\n                    type: string\n                  nsfw:\n                    type: boolean\n                  tags:\n                    type: array\n                    items:\n                      type: string\n                  online:\n                    type: boolean\n                  viewerCount:\n                    type: integer\n                  overallMaxViewerCount:\n                    type: integer\n                  sessionMaxViewerCount:\n                    type: integer\n                  lastConnectTime:\n                    type: string\n                    nullable: true\n                    format: date-time\n\n  /api/emoji:\n    get:\n      summary: Get Custom Emoji\n      description: Get a list of custom emoji that are supported in chat.\n      tags: [\"Chat\"]\n      responses:\n        '200':\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    name:\n                      type: string\n                      description: The name of the Emoji\n                    emoji:\n                      type: string\n                      description: The relative path to the Emoji image file\n              examples:\n                default:\n                  value:\n                    items:\n                      - name: nicolas_cage_party\n                        emoji: /img/emoji/nicolas_cage_party.gif\n                      - name: parrot\n                        emoji: /img/emoji/parrot.gif\n\n  /api/admin/broadcaster:\n    get:\n      summary: \"Broadcaster Details\"\n      tags: [\"Admin\"]\n      security:\n        - AdminBasicAuth: []\n      responses:\n        '200':\n          description: Connected Broadcaster Details\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n                  broadcaster:\n                    type: object\n                    properties:\n                      remoteAddr:\n                        type: string\n                      time:\n                        type: string\n                        format: date-time\n                      streamDetails:\n                        type: object\n                        properties:\n                          width:\n                            type: integer\n                          height:\n                            type: integer\n                          frameRate:\n                            type: integer\n                          videoBitrate:\n                            type: integer\n                          videoCodec:\n                            type: string\n                          audioBitrate:\n                            type: integer\n                          audioCodec:\n                            type: string\n                          encoder:\n                            type: string\n              examples:\n                connected:\n                  summary: \"Broadcaster Connected\"\n                  value:\n                    success: true\n                    message: \"\"\n                    broadcaster:\n                      remoteAddr: 127.0.0.1\n                      time: \"TODO\"\n                      streamDetails:\n                        width: 640\n                        height: 480\n                        frameRate: 24\n                        videoBitrate: 1500\n                        videoCodec: \"todo\"\n                        audioBitrate: 256\n                        audioCodec: \"aac\"\n                        encoder: \"todo\"\n                not-connected:\n                  summary: \"Broadcaster Not Connected\"\n                  value:\n                    success: false\n                    message: \"no broadcaster connected\"\n\n  /api/admin/disconnect:\n    post:\n      summary: Disconnect Broadcaster\n      description: Disconnect the active inbound stream, if one exists, and terminate the broadcast.\n      tags: [\"Admin\"]\n      security:\n        - AdminBasicAuth: []\n      responses:\n        '200':\n          $ref: \"#/components/responses/BasicResponse\"\n\n\n  /api/admin/changekey:\n    post:\n      summary: Update Stream Key\n      description: Change the stream key in memory, but not in the config file.  This will require all broadcasters to be reconfigured to connect again.\n      tags: [\"Admin\"]\n      security:\n        - AdminBasicAuth: []\n      requestBody:\n        description: \"\"\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                key:\n                  type: string\n      responses:\n        '200':\n          description: Stream was disconnected.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                    example: true\n                  message:\n                    type: string\n                    example: changed\n\n  /api/admin/serverconfig:\n    get:\n      summary: Server Configuration\n      description: Get the current configuration of the Owncast server.\n      tags: [\"Admin\"]\n      security:\n        - AdminBasicAuth: []\n      responses:\n        '200':\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  instanceDetails:\n                    $ref: \"#/components/schemas/InstanceDetails\"\n                  ffmpegPath:\n                    type: string\n                  webServerPort:\n                    type: integer\n                  s3:\n                    $ref: \"#/components/schemas/S3\"\n                  videoSettings:\n                    type: object\n                    properties:\n                      videoQualityVariants:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/StreamQuality\"\n                      segmentLengthSeconds:\n                        type: integer\n                      numberOfPlaylistItems:\n                        type: integer\n\n  /api/admin/viewersOverTime:\n    get:\n      summary: Viewers Over Time\n      description: Get the tracked viewer count over the collected period.\n      tags: [\"Admin\"]\n      security:\n        - AdminBasicAuth: []\n      responses:\n        '200':\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/TimestampedValue\"\n              examples:\n                default:\n                  value:\n                    - time: \"2020-10-03T21:41:00.381996-05:00\"\n                      value: 50\n                    - time: \"2020-10-03T21:42:00.381996-05:00\"\n                      value: 52\n\n\n\n\n  /api/admin/hardwarestats:\n    get:\n      summary: Hardware Stats\n      description: \"Get the CPU, Memory and Disk utilization levels over the collected period.\"\n      tags: [\"Admin\"]\n      security:\n        - AdminBasicAuth: []\n      responses:\n        '200':\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  cpu:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/TimestampedValue\"\n                  memory:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/TimestampedValue\"\n                  disk:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/TimestampedValue\"\n              examples:\n                default:\n                  value:\n                    cpu:\n                      - time: \"2020-10-03T21:41:00.381996-05:00\"\n                        value: 23\n                      - time: \"2020-10-03T21:42:00.381996-05:00\"\n                        value: 27\n                      - time: \"2020-10-03T21:43:00.381996-05:00\"\n                        value: 22\n                    memory:\n                      - time: \"2020-10-03T21:41:00.381996-05:00\"\n                        value: 65\n                      - time: \"2020-10-03T21:42:00.381996-05:00\"\n                        value: 66\n                      - time: \"2020-10-03T21:43:00.381996-05:00\"\n                        value: 72\n                    disk:\n                      - time: \"2020-10-03T21:41:00.381996-05:00\"\n                        value: 11\n                      - time: \"2020-10-03T21:42:00.381996-05:00\"\n                        value: 11\n                      - time: \"2020-10-03T21:43:00.381996-05:00\"\n                        value: 11\n",
			"canonicalURL": "/github.com/owncast/owncast.github.io@2d5ed0cd947fd1b274ab76984e2e0a05b900b91d/-/blob/data/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/owncast/owncast.github.io/blob/2d5ed0cd947fd1b274ab76984e2e0a05b900b91d/data/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}