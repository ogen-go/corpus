{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/nickysemenza/gourd"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "api/openapi.yaml",
			"byteSize": 46410,
			"content": "openapi: \"3.0.0\"\ninfo:\n  contact:\n    email: n@nickysemenza.com\n  description: API for https://github.com/nickysemenza/gourd\n  version: 1.0.0\n  title: Gourd Recipe Database\n  license:\n    name: MIT\n    # identifier: MIT\ntags:\n  - name: recipes\n    description: Recipe operations\n  - name: authentication\n    description: authentication operations\n  - name: photos\n    description: photos operations\n  - name: albums\n    description: albums operations\n  - name: meals\n    description: meals operations\n  - name: ingredients\n    description: ingredients operations\n  - name: foods\n    description: food operations\n\nservers:\n  - description: test\n    url: http://localhost:4242/api\n  - description: prod\n    url: https://food.nickysemenza.com/api\npaths:\n  /auth:\n    post:\n      summary: Google Login callback\n      description: Second step of https://developers.google.com/identity/sign-in/web/backend-auth#send-the-id-token-to-your-server\n      security: []\n      operationId: auth_login\n      tags:\n        - authentication\n      parameters:\n        - in: query\n          name: code\n          required: true\n          schema:\n            type: string\n          description: Google code\n      responses:\n        \"200\":\n          description: Auth response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AuthResp\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /config:\n    get:\n      summary: Get app config\n      description: todo\n      operationId: get_config\n      tags:\n        - system\n      responses:\n        \"200\":\n          description: Config data\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConfigData\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /photos:\n    get:\n      summary: List all photos\n      description: todo\n      operationId: list_photos\n      tags:\n        - photos\n      parameters:\n        - $ref: \"#/components/parameters/offsetParam\"\n        - $ref: \"#/components/parameters/limitParam\"\n      responses:\n        \"200\":\n          description: A page of photos\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PaginatedPhotos\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /albums:\n    get:\n      summary: List all albums\n      description: todo\n      operationId: list_all_albums\n      tags:\n        - albums\n      responses:\n        \"200\":\n          description: All available albums from google\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  albums:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/GooglePhotosAlbum\"\n                    description: The list of albums\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /search:\n    get:\n      summary: Search recipes and ingredients\n      description: todo\n      operationId: search\n      tags:\n        - ingredients\n        - recipes\n      parameters:\n        - $ref: \"#/components/parameters/offsetParam\"\n        - $ref: \"#/components/parameters/limitParam\"\n        - $ref: \"#/components/parameters/nameParam\"\n      responses:\n        \"200\":\n          description: Search results\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SearchResult\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /meals:\n    get:\n      summary: List all meals\n      description: todo\n      operationId: list_meals\n      tags:\n        - meals\n      parameters:\n        - $ref: \"#/components/parameters/offsetParam\"\n        - $ref: \"#/components/parameters/limitParam\"\n      responses:\n        \"200\":\n          description: A page of meals\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PaginatedMeals\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /meals/{meal_id}:\n    get:\n      summary: Info for a specific meal\n      description: todo\n      operationId: get_meal_by_id\n      tags:\n        - meals\n      parameters:\n        - name: meal_id\n          in: path\n          required: true\n          description: The id of the meal to retrieve\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Meal\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /meals/{meal_id}/recipes:\n    patch:\n      summary: Update the recipes associated with a given meal\n      description: todo\n      operationId: update_recipes_for_meal\n      tags:\n        - meals\n      parameters:\n        - name: meal_id\n          in: path\n          required: true\n          description: The id of the meal to retrieve\n          schema:\n            type: string\n      requestBody:\n        description: Creates a ingredient by payload. If the id/name exists, it errors\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/MealRecipeUpdate\"\n      responses:\n        \"200\":\n          description: Newly updated meal\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Meal\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /ingredients:\n    get:\n      summary: List all ingredients\n      description: todo\n      operationId: list_ingredients\n      tags:\n        - ingredients\n      parameters:\n        - $ref: \"#/components/parameters/offsetParam\"\n        - $ref: \"#/components/parameters/limitParam\"\n        - name: ingredient_id\n          in: query\n          required: false\n          description: ids\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        \"200\":\n          description: A page of ingredient results\n          headers:\n            x-next:\n              description: A link to the next page of responses\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PaginatedIngredients\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      summary: Create a ingredient\n      description: todo\n      operationId: create_ingredients\n      tags:\n        - ingredients\n      requestBody:\n        description: Creates a ingredient by payload. If the id/name exists, it errors\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Ingredient\"\n      responses:\n        \"201\":\n          description: Newly created ingredient\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Ingredient\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /meta/load_ingredient_mappings:\n    post:\n      summary: load mappings\n      description: todo\n      operationId: load_ingredient_mappings\n      tags:\n        - ingredients\n      requestBody:\n        description: Creates a ingredient by payload. If the id/name exists, it errors\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/IngredientMappingsPayload\"\n      responses:\n        \"200\":\n          description: \"success\"\n          content:\n            application/json:\n              schema:\n                type: object\n  /recipes:\n    get:\n      summary: List all recipes\n      description: todo\n      operationId: list_recipes\n      tags:\n        - recipes\n      parameters:\n        - $ref: \"#/components/parameters/offsetParam\"\n        - $ref: \"#/components/parameters/limitParam\"\n      responses:\n        \"200\":\n          description: A paged array of recipes\n          headers:\n            x-next:\n              description: A link to the next page of responses\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PaginatedRecipeWrappers\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      summary: Create a recipe\n      description: todo\n      operationId: create_recipes\n      tags:\n        - recipes\n      requestBody:\n        description: Creates a recipe by payload. If the id/name exists, it errors\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RecipeWrapperInput\"\n      responses:\n        \"201\":\n          description: Newly created recipe\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RecipeWrapper\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /recipes/{recipe_id}/latex:\n    get:\n      summary: recipe as latex\n      description: todo\n      operationId: get_latex_by_recipe_id\n      tags:\n        - recipes\n      parameters:\n        - name: recipe_id\n          in: path\n          required: true\n          description: The id of the recipe to retrieve\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: PDF\n          content:\n            application/pdf:\n              schema:\n                type: string\n                format: binary\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /recipes/{recipe_id}:\n    get:\n      summary: Info for a specific recipe\n      description: todo\n      operationId: get_recipe_by_id\n      tags:\n        - recipes\n      parameters:\n        - name: recipe_id\n          in: path\n          required: true\n          description: The id of the recipe to retrieve\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RecipeWrapper\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /recipes/bulk:\n    get:\n      summary: Get recipes\n      description: get recipes by ids\n      operationId: get_recipes_by_ids\n      tags:\n        - recipes\n      parameters:\n        - name: recipe_id\n          in: query\n          required: true\n          description: detail ids\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        \"200\":\n          description: bulk results\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PaginatedRecipeWrappers\"\n  /recipes/sum:\n    post:\n      summary: sum up recipes\n      description: sums up the given recipes\n      operationId: sum_recipes\n      tags:\n        - recipes\n      requestBody:\n        description: sum stuff\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - inputs\n              properties:\n                inputs:\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/EntitySummary\"\n      responses:\n        \"200\":\n          description: Newly converted recipe\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SumsResponse\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /recipes/scrape:\n    post:\n      summary: scrape a recipe by URL\n      description: todo\n      operationId: scrape_recipe\n      tags:\n        - recipes\n      requestBody:\n        description: sum stuff\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - url\n              properties:\n                url:\n                  type: string\n      responses:\n        \"201\":\n          description: Newly created recipe\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RecipeWrapper\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /ingredients/{ingredient_id}/convert_to_recipe:\n    post:\n      summary: Converts an ingredient to a recipe, updating all recipes depending on it\n      description: todo\n      operationId: convert_ingredient_to_recipe\n      tags:\n        - recipes\n        - ingredients\n      parameters:\n        - name: ingredient_id\n          in: path\n          required: true\n          description: The id of the ingredient\n          schema:\n            type: string\n      responses:\n        \"201\":\n          description: Newly converted recipe\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RecipeDetail\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /ingredients/{ingredient_id}/associate_food:\n    post:\n      summary: Assosiates a food with a given ingredient\n      description: todo\n      operationId: associate_food_with_ingredient\n      tags:\n        - foods\n        - ingredients\n      parameters:\n        - name: ingredient_id\n          in: path\n          required: true\n          description: The id of the ingredient\n          schema:\n            type: string\n        - name: fdc_id\n          in: query\n          required: true\n          schema:\n            type: integer\n            minimum: 1\n          description: The FDC id of the food to link to the ingredient\n      responses:\n        \"201\":\n          description: Newly converted recipe\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RecipeDetail\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /ingredients/{ingredient_id}/merge:\n    post:\n      summary: Merges the provide ingredients in the body into the param\n      description: todo\n      operationId: merge_ingredients\n      tags:\n        - ingredients\n      parameters:\n        - name: ingredient_id\n          in: path\n          required: true\n          description: The id of the ingredient to merge into\n          schema:\n            type: string\n      requestBody:\n        description: The ingredient ids to be merged\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - ingredient_ids\n              properties:\n                ingredient_ids:\n                  type: array\n                  items:\n                    type: string\n                  minItems: 1\n                  maxItems: 50\n      responses:\n        \"201\":\n          description: The ingredient everything was merged into\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Ingredient\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /foods/{fdc_id}:\n    get:\n      summary: get a FDC entry by id\n      description: todo\n      operationId: get_food_by_id\n      tags:\n        - foods\n      parameters:\n        - name: fdc_id\n          in: path\n          required: true\n          description: The fdc id\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Food\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /ingredients/{ingredient_id}:\n    get:\n      summary: Get a specific ingredient\n      description: todo\n      operationId: get_ingredient_by_id\n      tags:\n        - ingredients\n      parameters:\n        - name: ingredient_id\n          in: path\n          required: true\n          description: The id of the ingredient to get into\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: An ingredient\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IngredientDetail\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /foods/search:\n    get:\n      summary: Search foods\n      description: todo\n      operationId: search_foods\n      tags:\n        - foods\n      parameters:\n        - $ref: \"#/components/parameters/offsetParam\"\n        - $ref: \"#/components/parameters/limitParam\"\n        - $ref: \"#/components/parameters/nameParam\"\n        - name: data_types\n          in: query\n          required: false\n          description: The data types\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/FoodDataType\"\n      responses:\n        \"200\":\n          description: Search results\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PaginatedFoods\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /foods/bulk:\n    get:\n      summary: Get foods\n      description: get foods by ids\n      operationId: get_foods_by_ids\n      tags:\n        - foods\n      parameters:\n        - name: fdc_id\n          in: query\n          required: true\n          description: ids\n          schema:\n            type: array\n            items:\n              type: integer\n      responses:\n        \"200\":\n          description: Search results\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PaginatedFoods\"\n  /data/recipe_dependencies:\n    get:\n      summary: Get foods\n      description: recipe dependencies\n      operationId: recipe_dependencies\n      tags:\n        - recipes\n        - ingredients\n      responses:\n        \"200\":\n          description: All dependencies\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  items:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/RecipeDependency\"\n                    description: all\nsecurity:\n  - bearerAuth: [] # use the same name as above\ncomponents:\n  securitySchemes:\n    bearerAuth: # arbitrary name for the security scheme\n      type: http\n      scheme: bearer\n      bearerFormat: JWT # optional, arbitrary value for documentation purposes\n\n  schemas:\n    SectionIngredient:\n      description: Ingredients in a single section\n      type: object\n      required:\n        - id\n        - amounts\n        - kind\n      properties:\n        id:\n          description: id\n          type: string\n        kind:\n          description: what kind of ingredient\n          $ref: \"#/components/schemas/IngredientKind\"\n        recipe:\n          $ref: \"#/components/schemas/RecipeDetail\"\n        ingredient:\n          $ref: \"#/components/schemas/IngredientDetail\"\n        amounts:\n          description: the various measures\n          type: array\n          items:\n            $ref: \"#/components/schemas/Amount\"\n        adjective:\n          description: adjective\n          type: string\n        optional:\n          description: optional\n          type: boolean\n        original:\n          description: raw line item (pre-import/scrape)\n          type: string\n        substitutes:\n          description: x\n          type: array\n          items:\n            $ref: \"#/components/schemas/SectionIngredient\"\n    SectionIngredientInput:\n      description: Ingredients in a single section\n      type: object\n      required:\n        - amounts\n        - kind\n      properties:\n        target_id:\n          description: recipe/ingredient id\n          type: string\n        name:\n          description: recipe/ingredient name\n          type: string\n        kind:\n          description: what kind of ingredient, for target_id or name\n          $ref: \"#/components/schemas/IngredientKind\"\n        amounts:\n          description: the various measures\n          type: array\n          items:\n            $ref: \"#/components/schemas/Amount\"\n        adjective:\n          description: adjective\n          type: string\n        optional:\n          description: optional\n          type: boolean\n        original:\n          description: raw line item (pre-import/scrape)\n          type: string\n        substitutes:\n          description: x\n          type: array\n          items:\n            $ref: \"#/components/schemas/SectionIngredientInput\"\n    SectionInstruction:\n      description: Instructions in a single section\n      type: object\n      required:\n        - id\n        - instruction\n      properties:\n        id:\n          description: id\n          type: string\n        instruction:\n          description: instruction\n          type: string\n    SectionInstructionInput:\n      description: Instructions in a single section\n      type: object\n      required:\n        - instruction\n      properties:\n        instruction:\n          description: instruction\n          type: string\n    RecipeSection:\n      description: A step in the recipe\n      type: object\n      required:\n        - id\n        - instructions\n        - ingredients\n      properties:\n        id:\n          description: id\n          type: string\n        duration:\n          $ref: \"#/components/schemas/Amount\"\n        instructions:\n          description: x\n          type: array\n          items:\n            $ref: \"#/components/schemas/SectionInstruction\"\n        ingredients:\n          description: x\n          type: array\n          items:\n            $ref: \"#/components/schemas/SectionIngredient\"\n    RecipeSectionInput:\n      description: A step in the recipe\n      type: object\n      required:\n        - instructions\n        - ingredients\n      properties:\n        duration:\n          $ref: \"#/components/schemas/Amount\"\n        instructions:\n          description: x\n          type: array\n          items:\n            $ref: \"#/components/schemas/SectionInstructionInput\"\n        ingredients:\n          description: x\n          type: array\n          items:\n            $ref: \"#/components/schemas/SectionIngredientInput\"\n    RecipeWrapper:\n      description: A recipe with subcomponents\n      type: object\n      required:\n        - detail\n        - id\n      properties:\n        id:\n          description: id\n          type: string\n        detail:\n          $ref: \"#/components/schemas/RecipeDetail\"\n        linked_meals:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Meal\"\n        linked_photos:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Photo\"\n    RecipeWrapperInput:\n      description: A recipe with subcomponents\n      type: object\n      required:\n        - detail\n      properties:\n        id:\n          description: id\n          type: string\n        detail:\n          $ref: \"#/components/schemas/RecipeDetailInput\"\n    RecipeDetail:\n      description: A revision of a recipe\n      type: object\n      required:\n        - id\n        - name\n        - sources\n        - quantity\n        - unit\n        - sections\n        - version\n        - is_latest_version\n        - created_at\n        - tags\n      properties:\n        id:\n          description: id\n          type: string\n        sections:\n          description: sections of the recipe\n          type: array\n          items:\n            $ref: \"#/components/schemas/RecipeSection\"\n        name:\n          description: recipe name\n          type: string\n        sources:\n          description: book or websites\n          type: array\n          items:\n            $ref: \"#/components/schemas/RecipeSource\"\n        servings:\n          description: num servings\n          type: integer\n          format: int64\n        quantity:\n          description: serving quantity\n          type: integer\n          format: int64\n        unit:\n          description: serving unit\n          type: string\n        version:\n          description: version of the recipe\n          type: integer\n          format: int64\n        is_latest_version:\n          description: whether or not it is the most recent version\n          type: boolean\n        created_at:\n          description: when the version was created\n          type: string\n          format: date-time\n        other_versions:\n          description: Other versions\n          type: array\n          items:\n            $ref: \"#/components/schemas/RecipeDetail\"\n        tags:\n          description: tags\n          type: array\n          items:\n            type: string\n    RecipeDetailInput:\n      description: A revision of a recipe\n      type: object\n      required:\n        - name\n        - quantity\n        - unit\n        - sections\n        - tags\n      properties:\n        sections:\n          description: sections of the recipe\n          type: array\n          items:\n            $ref: \"#/components/schemas/RecipeSectionInput\"\n        name:\n          description: recipe name\n          type: string\n        sources:\n          description: book or websites\n          type: array\n          items:\n            $ref: \"#/components/schemas/RecipeSource\"\n        servings:\n          description: num servings\n          type: integer\n          format: int64\n        quantity:\n          description: serving quantity\n          type: integer\n          format: int64\n        unit:\n          description: serving unit\n          type: string\n        date:\n          description: when it created / updated\n          type: string\n          format: date-time\n        tags:\n          description: tags\n          type: array\n          items:\n            type: string\n    Ingredient:\n      description: \"An Ingredient\"\n      type: object\n      required:\n        - id\n        - name\n      properties:\n        id:\n          description: id\n          type: string\n        name:\n          description: Ingredient name\n          type: string\n        parent:\n          description: ingredient ID for a similar (likely a different spelling)\n          type: string\n        fdc_id:\n          description: FDC id equivalent to this ingredient\n          type: integer\n          format: int64\n    IngredientDetail:\n      description: \"An Ingredient\"\n      type: object\n      required:\n        - name\n        - ingredient\n        - recipes\n        # - children\n        - unit_mappings\n      properties:\n        name:\n          description: Ingredient name\n          type: string\n        ingredient:\n          $ref: \"#/components/schemas/Ingredient\"\n        recipes:\n          description: Recipes referencing this ingredient\n          type: array\n          items:\n            $ref: \"#/components/schemas/RecipeDetail\"\n        children:\n          description: Ingredients that are equivalent\n          type: array\n          items:\n            $ref: \"#/components/schemas/IngredientDetail\"\n        food:\n          $ref: \"#/components/schemas/Food\"\n        unit_mappings:\n          description: mappings of equivalent units\n          type: array\n          items:\n            $ref: \"#/components/schemas/UnitMapping\"\n    UnitMapping:\n      description: mappings\n      type: object\n      required:\n        - a\n        - b\n      properties:\n        a:\n          $ref: \"#/components/schemas/Amount\"\n        b:\n          $ref: \"#/components/schemas/Amount\"\n        source:\n          description: source of the mapping\n          type: string\n    IngredientMappingsPayload:\n      description: list of IngredientMapping\n      type: object\n      required:\n        - ingredient_mappings\n      properties:\n        ingredient_mappings:\n          description: mappings of equivalent units\n          type: array\n          items:\n            $ref: \"#/components/schemas/IngredientMapping\"\n    IngredientMapping:\n      description: details about ingredients\n      type: object\n      required:\n        - name\n        - aliases\n        - unit_mappings\n      properties:\n        name:\n          type: string\n        fdc_id:\n          type: integer\n        aliases:\n          type: array\n          items:\n            type: string\n        unit_mappings:\n          description: mappings of equivalent units\n          type: array\n          items:\n            $ref: \"#/components/schemas/UnitMapping\"\n    Amount:\n      description: amount and unit\n      type: object\n      required:\n        - unit\n        - value\n      properties:\n        unit:\n          description: unit\n          type: string\n        value:\n          description: value\n          type: number\n          format: double # float64\n        upper_value:\n          description: value\n          type: number\n          format: double # float64\n        source:\n          description: if it was explicit, inferred, etc\n          type: string\n    RecipeSource:\n      description: where the recipe came from (i.e. book/website)\n      type: object\n      properties:\n        url:\n          description: url\n          type: string\n        title:\n          description: title (if book)\n          type: string\n        page:\n          description: page number/section (if book)\n          type: string\n        image_url:\n          description: image url\n          type: string\n    GooglePhotosAlbum:\n      description: an album containing `Photo`\n      type: object\n      required:\n        - id\n        - title\n        - product_url\n        - usecase\n      properties:\n        id:\n          description: id\n          type: string\n        title:\n          description: title\n          type: string\n        product_url:\n          description: product_url\n          type: string\n        usecase:\n          description: usecase\n          type: string\n    Photo:\n      description: A photo\n      type: object\n      required:\n        - id\n        - base_url\n        - created\n        - width\n        - height\n        - source\n      properties:\n        id:\n          description: id\n          type: string\n        base_url:\n          description: public image\n          type: string\n        blur_hash:\n          description: blur hash\n          type: string\n        created:\n          description: when it was taken\n          type: string\n          format: date-time\n        width:\n          description: width px\n          type: integer\n          format: int64\n        height:\n          description: height px\n          type: integer\n          format: int64\n        source:\n          description: where the photo came from\n          type: string\n          enum: [google, notion]\n    Meal:\n      description: A meal, which bridges recipes to photos\n      type: object\n      required:\n        - id\n        - name\n        - ate_at\n        - photos\n      properties:\n        id:\n          description: id\n          type: string\n        name:\n          description: public image\n          type: string\n        ate_at:\n          description: when it was taken\n          type: string\n          format: date-time\n        photos:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Photo\"\n        recipes:\n          type: array\n          items:\n            $ref: \"#/components/schemas/MealRecipe\"\n    MealRecipe:\n      description: A recipe that's part of a meal (a recipe at a specific amount)\n      type: object\n      required:\n        - multiplier\n        - recipe\n      properties:\n        multiplier:\n          description: when it was taken\n          type: number\n          format: double # float64\n        recipe:\n          $ref: \"#/components/schemas/RecipeDetail\"\n    SearchResult:\n      description: A search result wrapper, which contains ingredients and recipes\n      type: object\n      properties:\n        ingredients:\n          description: The ingredients\n          type: array\n          items:\n            $ref: \"#/components/schemas/Ingredient\"\n        recipes:\n          description: The recipes\n          type: array\n          items:\n            $ref: \"#/components/schemas/RecipeWrapper\"\n        meta:\n          $ref: \"#/components/schemas/Items\"\n    Error:\n      type: object\n      description: A generic error message\n      required: [\"message\"]\n      properties:\n        message:\n          type: string\n        trace_id:\n          type: string\n      example:\n        message: \"Something went wrong\"\n    ConfigData:\n      type: object\n      description: config data\n      required:\n        - google_scopes\n        - google_client_id\n      properties:\n        google_scopes:\n          type: string\n        google_client_id:\n          type: string\n    AuthResp:\n      type: object\n      description: todo\n      required:\n        - user\n        - jwt\n      properties:\n        user:\n          type: object\n        jwt:\n          type: string\n    Items:\n      type: object\n      description: A generic list (for pagination use)\n      required:\n        - page_number\n        - limit\n        - total_count\n        - offset\n        - page_count\n      properties:\n        page_number:\n          description: What number page this is\n          type: integer\n        limit:\n          description: How many items were requested for this page\n          type: integer\n        offset:\n          description: todo\n          type: integer\n        total_count:\n          description: Total number of items across all pages\n          type: integer\n        page_count:\n          description: Total number of pages available\n          type: integer\n    PaginatedRecipeWrappers:\n      type: object\n      description: pages of Recipe\n      required:\n        - meta\n      properties:\n        recipes:\n          type: array\n          items:\n            $ref: \"#/components/schemas/RecipeWrapper\"\n        meta:\n          $ref: \"#/components/schemas/Items\"\n    PaginatedIngredients:\n      type: object\n      description: pages of IngredientDetail\n      required:\n        - meta\n      properties:\n        ingredients:\n          type: array\n          items:\n            $ref: \"#/components/schemas/IngredientDetail\"\n        meta:\n          $ref: \"#/components/schemas/Items\"\n    PaginatedPhotos:\n      type: object\n      description: pages of Photos\n      required:\n        - meta\n      properties:\n        photos:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Photo\"\n        meta:\n          $ref: \"#/components/schemas/Items\"\n    PaginatedMeals:\n      type: object\n      description: pages of Meal\n      required:\n        - meta\n      properties:\n        meals:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Meal\"\n        meta:\n          $ref: \"#/components/schemas/Items\"\n    PaginatedFoods:\n      type: object\n      description: pages of Food\n      required:\n        - meta\n      properties:\n        foods:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Food\"\n        meta:\n          $ref: \"#/components/schemas/Items\"\n    Nutrient:\n      type: object\n      description: todo\n      required:\n        - id\n        - name\n        - unit_name\n      properties:\n        id:\n          description: todo\n          type: integer\n        name:\n          description: todo\n          type: string\n        unit_name:\n          description: todo\n          $ref: \"#/components/schemas/FoodNutrientUnit\"\n    FoodNutrient:\n      type: object\n      description: todo\n      required:\n        - nutrient\n        - amount\n        - data_points\n      properties:\n        nutrient:\n          $ref: \"#/components/schemas/Nutrient\"\n        amount:\n          type: number\n          format: double # float64\n        data_points:\n          type: integer\n    FoodCategory:\n      type: object\n      description: food category, set for some\n      required:\n        - code\n        - description\n      properties:\n        code:\n          description: Food description\n          type: string\n        description:\n          description: Food description\n          type: string\n    BrandedFood:\n      type: object\n      description: branded_food\n      required:\n        - serving_size\n        - serving_size_unit\n      properties:\n        brand_owner:\n          type: string\n        ingredients:\n          type: string\n        serving_size:\n          type: number\n          format: double # float64\n        serving_size_unit:\n          type: string\n        household_serving:\n          type: string\n        branded_food_category:\n          type: string\n    FoodPortion:\n      type: object\n      description: food_portion\n      required:\n        - id\n        - amount\n        - portion_description\n        - modifier\n        - gram_weight\n      properties:\n        id:\n          type: integer\n        amount:\n          type: number\n          format: double # float64\n        portion_description:\n          type: string\n        modifier:\n          type: string\n        gram_weight:\n          type: number\n          format: double # float64\n    Food:\n      type: object\n      description: A top level food\n      required:\n        - fdc_id\n        - description\n        - data_type\n        - nutrients\n        - unit_mappings\n      properties:\n        fdc_id:\n          description: FDC Id\n          type: integer\n        description:\n          description: Food description\n          type: string\n        data_type:\n          description: todo\n          $ref: \"#/components/schemas/FoodDataType\"\n        category:\n          $ref: \"#/components/schemas/FoodCategory\"\n        nutrients:\n          description: todo\n          type: array\n          items:\n            $ref: \"#/components/schemas/FoodNutrient\"\n        portions:\n          description: portion datapoints\n          type: array\n          items:\n            $ref: \"#/components/schemas/FoodPortion\"\n        branded_info:\n          $ref: \"#/components/schemas/BrandedFood\"\n        unit_mappings:\n          description: mappings of equivalent units\n          type: array\n          items:\n            $ref: \"#/components/schemas/UnitMapping\"\n    MealRecipeUpdate:\n      type: object\n      description: an update to the recipes on a mea\n      required:\n        - recipe_id\n        - multiplier\n        - action\n      properties:\n        recipe_id:\n          description: Recipe Id\n          type: string\n        multiplier:\n          description: multiplier\n          type: number\n          format: double # float64\n          minimum: 0\n        action:\n          description: todo\n          type: string\n          enum: [add, remove]\n    FoodDataType:\n      type: string\n      enum:\n        [\n          foundation_food,\n          sample_food,\n          market_acquisition,\n          survey_fndds_food,\n          sub_sample_food,\n          agricultural_acquisition,\n          sr_legacy_food,\n          branded_food,\n        ]\n    FoodNutrientUnit:\n      type: string\n      enum: [UG, G, IU, kJ, KCAL, MG, MG_ATE, SP_GR]\n    IngredientKind:\n      type: string\n      enum: [ingredient, recipe]\n    RecipeDependency:\n      description: represents a relationship between recipe and ingredient, the latter of which can also be a recipe.\n      type: object\n      required:\n        - recipe_id\n        - recipe_name\n        - ingredient_id\n        - ingredient_name\n        - ingredient_kind\n      properties:\n        recipe_id:\n          description: recipe_id\n          type: string\n        recipe_name:\n          description: id\n          type: string\n        ingredient_id:\n          description: id\n          type: string\n        ingredient_name:\n          description: id\n          type: string\n        ingredient_kind:\n          description: what kind of ingredient\n          $ref: \"#/components/schemas/IngredientKind\"\n    EntitySummary:\n      description: holds name/id and multiplier for a Kind of entity\n      type: object\n      required:\n        - id\n        - name\n        - multiplier\n        - kind\n      properties:\n        id:\n          description: recipe_detail or ingredient id\n          type: string\n        name:\n          description: recipe or ingredient name\n          type: string\n        multiplier:\n          description: multiplier\n          type: number\n          format: double # float64\n        kind:\n          description: what kind of entity\n          $ref: \"#/components/schemas/IngredientKind\"\n    IngredientUsage:\n      description: todo\n      type: object\n      required:\n        - amounts\n        - required_by\n        - multiplier\n      properties:\n        multiplier:\n          description: multiplier\n          type: number\n          format: double # float64\n        amounts:\n          description: multiple amounts to try\n          type: array\n          items:\n            $ref: \"#/components/schemas/Amount\"\n        required_by:\n          description: mappings of equivalent units\n          type: array\n          items:\n            $ref: \"#/components/schemas/EntitySummary\"\n    UsageValue:\n      type: object\n      description: holds information\n      required:\n        - ings\n        - sum\n        - meta\n      properties:\n        ings:\n          description: multiplier\n          type: array\n          items:\n            $ref: \"#/components/schemas/IngredientUsage\"\n        sum:\n          description: amounts\n          type: array\n          items:\n            $ref: \"#/components/schemas/Amount\"\n        meta:\n          description: detail about it\n          $ref: \"#/components/schemas/EntitySummary\"\n    UnitConversionRequest:\n      type: object\n      required:\n        - input\n        - unit_mappings\n      properties:\n        target:\n          type: string\n          enum: [weight, volume, money, calories, other]\n        input:\n          description: multiple amounts to try\n          type: array\n          items:\n            $ref: \"#/components/schemas/Amount\"\n        unit_mappings:\n          description: mappings of equivalent units\n          type: array\n          items:\n            $ref: \"#/components/schemas/UnitMapping\"\n    SumsResponse:\n      type: object\n      required:\n        - sums\n        - by_recipe\n      properties:\n        sums:\n          description: mappings of equivalent units\n          type: array\n          items:\n            $ref: \"#/components/schemas/UsageValue\"\n        by_recipe:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              $ref: \"#/components/schemas/UsageValue\"\n    CompactRecipeSection:\n      type: object\n      required:\n        - ingredients\n        - instructions\n      properties:\n        ingredients:\n          type: array\n          items:\n            type: string\n        instructions:\n          type: array\n          items:\n            type: string\n    CompactRecipeMeta:\n      type: object\n      required:\n        - name\n      properties:\n        name:\n          type: string\n        url:\n          type: string\n        image:\n          type: string\n    CompactRecipe:\n      type: object\n      required:\n        - meta\n        - sections\n      properties:\n        meta:\n          $ref: \"#/components/schemas/CompactRecipeMeta\"\n        sections:\n          type: array\n          items:\n            $ref: \"#/components/schemas/CompactRecipeSection\"\n  parameters:\n    offsetParam:\n      in: query\n      name: offset\n      required: false\n      schema:\n        type: integer\n        minimum: 0\n      description: The number of items to skip before starting to collect the result set.\n    limitParam:\n      in: query\n      name: limit\n      required: false\n      schema:\n        type: integer\n        minimum: 1\n        maximum: 50\n        default: 20\n      description: The numbers of items to return.\n    nameParam:\n      in: query\n      name: name\n      required: true\n      schema:\n        type: string\n      description: The search query (name).\n",
			"canonicalURL": "/github.com/nickysemenza/gourd@aa6a493b8a630f1c1fcdba04813ccbe2c4a78c05/-/blob/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/nickysemenza/gourd/blob/aa6a493b8a630f1c1fcdba04813ccbe2c4a78c05/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}