{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/EsperoTech/yaade"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "server/src/main/resources/openapi.yaml",
			"byteSize": 6894,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  title: Yaade OpenAPI\n  license:\n    name: MIT\npaths:\n  /api/health:\n    get:\n      summary: Check if the server is running\n      operationId: health\n      tags:\n        - health\n      responses:\n        '200':\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HealthResponse\"\n  /api/collection:\n    get:\n      summary: Get all collections\n      operationId: getAllCollections\n      responses:\n        '200':\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Collections\"\n    post:\n      summary: Create a collection\n      operationId: postCollection\n      requestBody:\n        description: A new collection\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateCollectionRequest\"\n      responses:\n        '200':\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Collection\"\n    put:\n      summary: Update a collection\n      operationId: putCollection\n      requestBody:\n        description: The updated collection\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Collection\"\n      responses:\n        '200':\n          description: \"Success\"\n  /api/collection/{id}:\n    delete:\n      summary: Delete a collection\n      operationId: deleteCollection\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          required: true\n      responses:\n        '200':\n          description: \"Success\"\n  /api/collection/importOpenApi:\n    post:\n      summary: Import a collection from an OpenAPI file\n      operationId: importOpenApi\n      parameters:\n        - in: query\n          name: basePath\n          schema:\n            type: string\n          description: The basePath of the OpenAPI file\n      responses:\n        '200':\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Collection\"\n  /api/request:\n    post:\n      summary: Creata a new request\n      operationId: postRequest\n      requestBody:\n        description: A new request\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateRequestRequest\"\n      responses:\n        '200':\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Request\"\n    put:\n      summary: Update a request\n      operationId: putRequest\n      requestBody:\n        description: The new request\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Request\"\n      responses:\n        '200':\n          description: \"Success\"\n  /api/request/{id}:\n    delete:\n      summary: Delete a request\n      operationId: deleteRequest\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          required: true\n      responses:\n        '200':\n          description: \"Success\"\n  /api/login:\n    post:\n      summary: Login\n      operationId: doLogin\n      requestBody:\n        description: Credentials\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/LoginRequest\"\n      responses:\n        '200':\n          description: \"Success\"\n  /api/logout:\n    post:\n      summary: Login\n      operationId: doLogout\n      responses:\n        '200':\n          description: \"Success\"\n  /api/user:\n    get:\n      summary: Get the current user\n      operationId: getCurrentUser\n      responses:\n        '200':\n          description: \"Success\"\n    put:\n      summary: Change user password\n      operationId: changeUserPassword\n      requestBody:\n        description: New and current password\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ChangePasswordRequest\"\n      responses:\n        '200':\n          description: \"Success\"\n  /api/user/exportBackup:\n    get:\n      summary: Export a backup of the database\n      operationId: exportBackup\n      responses:\n        '200':\n          description: \"Success\"\n  /api/user/importBackup:\n    post:\n      summary: Import a backup file\n      operationId: importBackup\n      responses:\n        '200':\n          description: \"Success\"\n  /api/user/changeSetting:\n    put:\n      summary: Change a value of the user settings\n      operationId: changeSetting\n      requestBody:\n        description: The new setting key-value pair\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ChangeSettingRequest\"\n      responses:\n        '200':\n          description: \"Success\"\ncomponents:\n  schemas:\n    HealthResponse:\n      type: object\n      required:\n        - status\n        - version\n    Request:\n      type: object\n      required:\n        - id\n        - collectionId\n        - data\n      properties:\n        id:\n          type: integer\n          format: int64\n        collectionId:\n          type: integer\n          format: int64\n        data:\n          type: object\n    Collection:\n      type: object\n      required:\n        - id\n        - data\n      properties:\n        id:\n          type: integer\n          format: int64\n        version:\n          type: string\n        data:\n          type: object\n    Collections:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Collection\"\n    ########## Requests ##########\n    CreateCollectionRequest:\n      type: object\n      required:\n        - name\n      properties:\n        name:\n          type: string\n    CreateRequestRequest:\n      type: object\n      required:\n        - collectionId\n        - type\n      properties:\n        collectionId:\n          type: integer\n          format: int64\n        name:\n          type: string\n        type:\n          type: string\n    LoginRequest:\n      type: object\n      required:\n        - username\n        - password\n      properties:\n        username:\n          type: string\n        password:\n          type: string\n    ChangePasswordRequest:\n      type: object\n      required:\n        - currentPassword\n        - newPassword\n      properties:\n        currentPassword:\n          type: string\n        newPassword:\n          type: string\n    ChangeSettingRequest:\n      type: object\n      required:\n        - key\n        - value\n      properties:\n        key:\n          type: string\n\n",
			"canonicalURL": "/github.com/EsperoTech/yaade@321f8e062a93928183e2e2f97cf60914bbf36b14/-/blob/server/src/main/resources/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/EsperoTech/yaade/blob/321f8e062a93928183e2e2f97cf60914bbf36b14/server/src/main/resources/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}