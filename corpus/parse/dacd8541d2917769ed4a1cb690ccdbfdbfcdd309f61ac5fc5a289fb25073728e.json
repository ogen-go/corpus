{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/aml-org/amf"
		},
		"file": {
			"name": "simple.jsonld.yaml",
			"size": 0,
			"path": "amf-cli/shared/src/test/resources/upanddown/cycle/oas-component/simple.jsonld.yaml",
			"byteSize": 4421,
			"content": "openapi: 3.0.0\ninfo:\n  title: Sample Pet Store App\n  version: 1.0.1\npaths: {}\ncomponents:\n  schemas:\n    refSchema:\n      $ref: objectSchema\n    oneOfschema:\n      oneOf:\n        -\n          $ref: objectSchema\n        -\n          $ref: arraySchema\n      type: object\n      discriminator:\n        propertyName: a\n        mapping:\n          dog: \"#/components/schemas/objectSchema\"\n    notSchema:\n      not:\n        type: string\n    common:\n      anyOf:\n        -\n          title: common schema\n          description: common test case\n          externalDocs:\n            url: https://example.com\n            description: Find more info here\n          deprecated: false\n          example:\n            strict: true\n            value: a\n          type: string\n          minLength: 0\n          maxLength: 100\n        -\n          type: \"null\"\n    allOfSchema:\n      allOf:\n        -\n          $ref: objectSchema\n        -\n          $ref: arraySchema\n    arraySchema:\n      type: array\n      maxItems: 100\n      minItems: 0\n      uniqueItems: true\n      items:\n        type: string\n    anyOfSchema:\n      anyOf:\n        -\n          $ref: objectSchema\n        -\n          $ref: arraySchema\n    objectSchema:\n      type: object\n      minProperties: 0\n      maxProperties: 100\n      additionalProperties: false\n      required:\n        - a\n      properties:\n        a:\n          xml:\n            namespace: http://example.com/schema/sample\n            prefix: sample\n          readOnly: false\n          writeOnly: false\n  securitySchemes:\n    apikey:\n      type: apiKey\n      description: a security scheme\n      name: api_key\n      in: header\n    http:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n    openIdConnect:\n      type: openIdConnect\n      openIdConnectUrl: url\n    oauth2:\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: https://example.com/api/oauth/dialog\n          refreshUrl: https://example.com/api/oauth/dialog\n          scopes:\n            write:pets: modify pets in your account\n            read:pets: read your pets\n  parameters:\n    cookieP:\n      name: cookieP\n      in: cookie\n      schema:\n        type: string\n      examples:\n        anExample:\n          value: a\n    pathP:\n      name: pathP\n      required: true\n      in: path\n      schema:\n        type: string\n    headerP:\n      name: headerP\n      in: header\n      schema:\n        type: string\n    aHeader:\n      name: aHeader\n      description: a description\n      in: header\n      schema:\n        type: string\n      deprecated: false\n      examples:\n        default:\n          value: a\n    aParam:\n      name: aParam\n      description: a description\n      in: query\n      schema:\n        type: string\n      deprecated: false\n      examples:\n        default:\n          value: a\n  responses:\n    aResponse:\n      description: a response\n      headers:\n        inlined:\n          description: The number of allowed requests in the current period\n          schema:\n            type: integer\n        aRef:\n          $ref: \"#/components/headers/aHeader\"\n      content:\n        application/json:\n          examples:\n            default:\n              value: a\n          schema:\n            type: string\n      links:\n        refLink:\n          $ref: address\n  examples:\n    aExample:\n      summary: a summary\n      description: a description\n      value: a\n    externalValueExample:\n      externalValue: a\n  requestBodies:\n    requestBody:\n      description: a description\n      content:\n        text/plain:\n          examples:\n            user:\n              summary: User example in text plain format\n              externalValue: http://foo.bar/examples/user-example.txt\n  links:\n    forOpId:\n      operationId: an operation Id\n    address:\n      description: a description\n      parameters:\n        userId: $request.path.id\n      server:\n        url: https://development.gigantic-server.com/v1\n        description: Development server\n      requestBody: aaa\n  callbacks:\n    myWebhook:\n      http://notificationServer.com?transactionId={$request.body#/id}\u0026email={$request.body#/email}:\n        post:\n          requestBody:\n            description: Callback payload\n            content:\n              application/json:\n                schema:\n                  $ref: objectSchema\n          responses:\n            \"200\":\n              description: webhook successfully processed and no retries will be performed\n",
			"canonicalURL": "/github.com/aml-org/amf@0ac904693dc6b2f1e2bf3d56ce1a21cdc2bd158c/-/blob/amf-cli/shared/src/test/resources/upanddown/cycle/oas-component/simple.jsonld.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/aml-org/amf/blob/0ac904693dc6b2f1e2bf3d56ce1a21cdc2bd158c/amf-cli/shared/src/test/resources/upanddown/cycle/oas-component/simple.jsonld.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"oneOfschema\": parse schema: parse schema: at 1:2871: external \"objectSchema\": get: file: local file reference is not allowed"
}