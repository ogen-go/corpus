{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "npm/express-openapi-validate"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "test/openapi.yaml",
			"byteSize": 12396,
			"content": "openapi: 3.0.3\ninfo:\n  title: Example API\n  version: 1.0.0\ncomponents:\n  schemas:\n    Test:\n      type: object\n      properties:\n        value:\n          type: number\n      required:\n        - value\n    Tag:\n      type: string\n      minLength: 3\n      maxLength: 10\n      pattern: \"^[a-zA-Z]+$\"\n    Error:\n      type: object\n      properties:\n        error:\n          type: object\n          properties:\n            name:\n              type: string\n            message:\n              type: string\n            data:\n              type: array\n              items:\n                type: object\n          required:\n            - name\n            - message\n            - data\n      required:\n        - error\n    Reffy:\n      type: object\n      properties:\n        tag:\n          $ref: \"#/components/schemas/Tag\"\n        value:\n          type: string\n          minLength: 1\n      required:\n        - value\n  parameters:\n    hello:\n      name: hello\n      in: query\n      required: true\n      schema:\n        type: string\n        minLength: 1\n    RequestIdHeader:\n      name: x-request-id\n      in: header\n      required: true\n      schema:\n        type: string\n        minLength: 1\n        pattern: \"^[0-9]+$\"\n  responses:\n    Error:\n      description: Error response\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n  requestBodies:\n    pong:\n      required: true\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              ping:\n                type: string\n                enum:\n                  - pong\n            additionalProperties: false\n            required:\n              - ping\n  headers:\n    hullo:\n      schema:\n        type: string\n        minLength: 2\npaths:\n  /echo:\n    post:\n      description: Echo input back\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                input:\n                  type: string\n              required:\n                - input\n      responses:\n        \"200\":\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  output:\n                    type: string\n                required:\n                  - output\n        default:\n          $ref: \"#/components/responses/Error\"\n  /match:\n    post:\n      description: Echo input back\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                input:\n                  type: string\n              required:\n                - input\n      responses:\n        \"200\":\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  output:\n                    type: string\n                required:\n                  - output\n        default:\n          $ref: \"#/components/responses/Error\"\n  /match/{optional}:\n    post:\n      description: Echo url-param back\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                input:\n                  type: string\n              required:\n                - input\n      parameters:\n        - name: optional\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  output:\n                    type: string\n                required:\n                  - output\n        default:\n          $ref: \"#/components/responses/Error\"\n\n  /internal-ref:\n    post:\n      responses:\n        \"200\":\n          description: Response\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/Test\"\n  /parameters:\n    get:\n      parameters:\n        - name: param\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: porom\n          in: query\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Response\n  /parameters/required:\n    get:\n      parameters:\n        - name: q1\n          in: query\n          required: true\n          schema:\n            type: string\n            minLength: 1\n        - name: q2\n          in: query\n          required: true\n          schema:\n            type: string\n            minLength: 1\n      responses:\n        200:\n          description: Response\n  /parameters/header:\n    get:\n      parameters:\n        - name: x-param\n          in: header\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Response\n  /parameters/header/caseinsensitive:\n    get:\n      parameters:\n        - name: X-Param\n          in: header\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Response\n  /parameters/cookie:\n    get:\n      parameters:\n        - name: session\n          in: cookie\n          required: true\n          schema:\n            type: string\n            minLength: 1\n      responses:\n        \"200\":\n          description: Response\n  /parameters/id/{id}:\n    get:\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            pattern: \"^[0-9]+$\"\n      responses:\n        \"200\":\n          description: Response\n  /parameters/all-operations-id/{pid}:\n    parameters:\n      - name: pid\n        in: path\n        required: true\n        schema:\n          type: string\n          pattern: \"^[0-9]+$\"\n    get:\n      responses:\n        \"200\":\n          description: Response\n  /parameters/both-all-operations-id/{pid}/{id}:\n    parameters:\n      - name: pid\n        in: path\n        required: true\n        schema:\n          type: string\n          pattern: \"^[0-9]+$\"\n    get:\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            pattern: \"^[0-9]+$\"\n      responses:\n        \"200\":\n          description: Response\n  /parameters/override/{pid}:\n    parameters:\n      - name: pid\n        in: path\n        required: true\n        schema:\n          type: string\n          pattern: \"^[^0-9]+$\"\n    get:\n      parameters:\n        - name: pid\n          in: path\n          required: true\n          schema:\n            type: string\n            pattern: \"^[0-9]+$\"\n      responses:\n        \"200\":\n          description: Response\n  /parameters/with-refs:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/RequestIdHeader\"\n      responses:\n        \"200\":\n          description: Response\n  /nullable:\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                bar:\n                  type: string\n                baz:\n                  type: string\n                  nullable: true\n      responses:\n        \"200\":\n          description: Response\n  /ref-parameter:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/hello\"\n      responses:\n        \"200\":\n          description: Response\n  /different-rules:\n    post:\n      parameters:\n        - name: q1\n          in: query\n          schema:\n            $ref: \"#/components/schemas/Tag\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                i:\n                  type: integer\n                  multipleOf: 2\n                  minimum: 2\n                  maximum: 256\n      responses:\n        \"200\":\n          description: Response\n  /required-body:\n    post:\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                a:\n                  type: string\n              required:\n                - a\n      responses:\n        \"200\":\n          description: Response\n  /format:\n    post:\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                i32:\n                  type: integer\n                  format: int32\n                i64:\n                  type: integer\n                  format: int64\n                f:\n                  type: number\n                  format: float\n                d:\n                  type: number\n                  format: double\n                byte:\n                  type: string\n                  format: byte\n                binary:\n                  type: string\n                  format: binary\n                password:\n                  type: string\n                  format: password\n                date:\n                  type: string\n                  format: date\n      responses:\n        \"200\":\n          description: Response\n  /responses:\n    post:\n      responses:\n        2XX:\n          description: Generic 2xx response\n        \"201\":\n          description: Created response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  hello:\n                    type: string\n                required:\n                  - hello\n        default:\n          description: Default response\n  /responses/no-default:\n    get:\n      responses:\n        \"200\":\n          description: Response\n  /responses/header:\n    post:\n      responses:\n        default:\n          description: Default response\n          headers:\n            X-HEADER:\n              required: true\n              schema:\n                type: string\n            X-Ref-Header:\n              schema:\n                $ref: \"#/components/schemas/Tag\"\n            content-type:\n              required: true\n              schema:\n                type: string\n            x-empty:\n              description: Empty header value\n              content:\n                application/json:\n                  schema: {}\n  /responses/header2:\n    post:\n      responses:\n        \"200\":\n          description: Response\n          headers:\n            X-1:\n              required: true\n              schema:\n                type: string\n            x-2:\n              required: true\n              schema:\n                type: string\n  /schema-references:\n    post:\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Reffy\"\n      responses:\n        \"200\":\n          description: Response\n  /more-references:\n    post:\n      requestBody:\n        $ref: \"#/components/requestBodies/pong\"\n      responses:\n        \"200\":\n          description: Response\n          headers:\n            x-hullo:\n              $ref: \"#/components/headers/hullo\"\n  /extra-oas-fields-in-schema:\n    post:\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: string\n              example: abc\n              readOnly: true\n              writeOnly: false\n              xml: {}\n              externalDocs: {}\n              deprecated: false\n      responses:\n        \"200\":\n          description: Response\n  /discriminator:\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              discriminator:\n                propertyName: foo\n              required:\n                - foo\n              oneOf:\n                - properties:\n                    foo:\n                      const: x\n                    a:\n                      type: string\n                  required:\n                    - a\n                - properties:\n                    foo:\n                      enum:\n                        - y\n                        - z\n                    b:\n                      type: string\n                  required:\n                    - b\n",
			"canonicalURL": "/npm/express-openapi-validate@4b46b2e78d672ca6535dba928349b2c9f05c9124/-/blob/test/openapi.yaml",
			"externalURLs": []
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/discriminator\": at 1:1642: post: at 1:1650: requestBody: at 1:1665: content: application/json: at 1:1696: schema: at 1:1706: parse schema: oneOf: [1]: at 1:1831: parse schema: property \"foo\": at 1:1874: parse schema: type: unexpected type: \"bool\""
}