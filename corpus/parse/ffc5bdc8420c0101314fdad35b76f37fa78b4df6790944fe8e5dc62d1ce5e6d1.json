{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/prince-chrismc/user-management"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "api/openapi.yaml",
			"byteSize": 9925,
			"content": "openapi: \"3.0.0\"\ninfo:\n  title: User Management API\n  version: \"1.0.0-dev.1\"\n  description: \u003e-\n    A Simple API for creating, editing, and deleting\n    users. The goal here is to offer minimal flexability\n    that is sufficient for demonstrating a backend server\n    or database integration.\n\nservers:\n  - url: \"{server}/um/v1\"\n    variables:\n      server:\n        default: https://api.example.com\n        enum:\n          - https://api.example.com\n          - https://ec2-3-14-64-10.us-east-2.compute.amazonaws.com/\n\ntags:\n  - name: Search\n    description: Browsing database of users\n  - name: Edit\n    description: Edit user's entry in database\n  - name: CORS\n    description: \u003e-\n      Preflight requests to support Cross-origin resource sharing (CORS).\n      Describes access to a selected resources from a different origin\n\ncomponents:\n  parameters:\n    id:\n      name: id\n      in: path\n      required: true\n      description: ID of the respective user to display\n      schema:\n        type: integer\n      example: 15\n  schemas:\n    User:\n      $ref: \"./schema/user.json\"\n    Users:\n      $ref: \"./schema/users.json\"\n    Add:\n      $ref: \"./schema/add.json\"\n    Edit:\n      $ref: \"./schema/edit.json\"\n    Error:\n      $ref: \"./schema/error.json\"\n  responses:\n    NotModified:\n      description: Not Modified\n    NotFound:\n      description: Not Found\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n          example: { \"error\": \"specified id does not exist\" }\n    BadRequest:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n          examples:\n            Bad JSON:\n              value: { \"error\": \"malformed JSON\" }\n            Schema Error:\n              value: { \"error\": \"schema was not respected.\" }\n    PreconditionFailed:\n      description: Precondition Failed\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n          example: { \"error\": \"the user was modified without your knowledge\" }\n    PreconditionRequired:\n      description: Precondition Required\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n          example: { \"error\": \"an If-Match ETag must be provided\" }\n    UnsupportedMediaType:\n      description: Unsupported Media Type\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n          example: { \"error\": \"Content-Type must be application/json\" }\n    Options:\n      description: Options\n      headers:\n        Access-Control-Allow-Origin:\n          $ref: \"#/components/headers/Access-Control-Allow-Origin\"\n        Access-Control-Allow-Methods:\n          $ref: \"#/components/headers/Access-Control-Allow-Methods\"\n        Access-Control-Allow-Headers:\n          $ref: \"#/components/headers/Access-Control-Allow-Headers\"\n        Access-Control-Max-Age:\n          $ref: \"#/components/headers/Access-Control-Max-Age\"\n  headers:\n    Access-Control-Allow-Origin:\n      schema:\n        type: string\n      description: Allowed 'Origin'.\n    Access-Control-Allow-Methods:\n      schema:\n        type: string\n      description: Allowed HTTP Methods.\n    Access-Control-Allow-Headers:\n      schema:\n        type: string\n      description: Allowed HTTP Headers.\n    Access-Control-Max-Age:\n      schema:\n        type: string\n      description: Allowed number of seconds to cache the Preflight response.\n    Last-Modified:\n      schema:\n        type: string\n      description: Contains the date and time at which the origin server believes the resource was last modified.\n    ETag:\n      schema:\n        type: string\n      description: An identifier for a specific version of a resource\n    If-Match:\n      schema:\n        type: string\n      description: Makes the request conditional. The server will send back the requested resource only if it matches one of the listed ETags. For non-safe methods, it will only upload the resource in this case.\n    If-None-Match:\n      schema:\n        type: string\n      description: Makes the request conditional. The server will send back the requested resource only if it does not have an ETag matching the given one. For non-safe methods, it will only upload the resource in this case.\n\npaths:\n  /users:\n    get:\n      tags:\n        - Search\n      summary: List of users\n      parameters:\n        - in: header\n          name: If-None-Match\n          schema:\n            $ref: \"#/components/headers/If-None-Match\"\n      responses:\n        \"200\":\n          description: OK\n          headers:\n            Access-Control-Allow-Origin:\n              $ref: \"#/components/headers/Access-Control-Allow-Origin\"\n            Last-Modified:\n              $ref: \"#/components/headers/Last-Modified\"\n            ETag:\n              $ref: \"#/components/headers/ETag\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Users\"\n              example:\n                [\n                  {\n                    \"id\": 234,\n                    \"name\": \"John Doe\",\n                    \"email\": \"john@example.com\",\n                  },\n                  { \"id\": 89, \"name\": \"Jane Doe\", \"email\": \"jane@example.com\" },\n                ]\n        \"304\":\n          $ref: \"#/components/responses/NotModified\"\n    put:\n      tags:\n        - Edit\n      summary: Create a new user\n      requestBody:\n        description: add a new user with given information\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Add\"\n            example: { \"name\": \"John Doe\", \"email\": \"john@example.com\" }\n      responses:\n        \"201\":\n          description: Created\n          headers:\n            Access-Control-Allow-Origin:\n              $ref: \"#/components/headers/Access-Control-Allow-Origin\"\n            ETag:\n              $ref: \"#/components/headers/ETag\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n              example:\n                { \"id\": 234, \"name\": \"John Doe\", \"email\": \"john@example.com\" }\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaType\"\n    options:\n      tags:\n        - CORS\n      description: List\n      responses:\n        \"204\":\n          $ref: \"#/components/responses/Options\"\n  /users/{id}:\n    parameters:\n      - $ref: \"#/components/parameters/id\"\n    get:\n      tags:\n        - Search\n      summary: Display individual user\n      parameters:\n        - in: header\n          name: If-None-Match\n          schema:\n            $ref: \"#/components/headers/If-None-Match\"\n      responses:\n        \"200\":\n          description: OK\n          headers:\n            Accept-Patch:\n              schema:\n                type: string\n                enum:\n                  - \"application/json\"\n            Access-Control-Allow-Origin:\n              $ref: \"#/components/headers/Access-Control-Allow-Origin\"\n            Last-Modified:\n              $ref: \"#/components/headers/Last-Modified\"\n            ETag:\n              $ref: \"#/components/headers/ETag\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n              example:\n                { \"id\": 234, \"name\": \"John Doe\", \"email\": \"john@example.com\" }\n        \"304\":\n          $ref: \"#/components/responses/NotModified\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n    patch:\n      tags:\n        - Edit\n      summary: Edit an existing user\n      parameters:\n        - in: header\n          name: If-Match\n          schema:\n            $ref: \"#/components/headers/If-Match\"\n          required: true\n      requestBody:\n        description: edit any number of settings for a given user\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Edit\"\n            examples:\n              name:\n                value: { \"name\": \"Jane Marry Doe\" }\n              email:\n                value: { \"email\": \"john.doe@example.com\" }\n              both:\n                value:\n                  { \"name\": \"Jane Marry Doe\", \"email\": \"jane.doe@example.com\" }\n      responses:\n        \"202\":\n          description: Accepted\n          headers:\n            Access-Control-Allow-Origin:\n              $ref: \"#/components/headers/Access-Control-Allow-Origin\"\n            ETag:\n              $ref: \"#/components/headers/ETag\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n              example:\n                { \"id\": 234, \"name\": \"John Doe\", \"email\": \"john@example.com\" }\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"412\":\n          $ref: \"#/components/responses/PreconditionFailed\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaType\"\n        \"428\":\n          $ref: \"#/components/responses/PreconditionRequired\"\n    delete:\n      tags:\n        - Edit\n      summary: Remove an existing user\n      parameters:\n        - in: header\n          name: If-Match\n          schema:\n            $ref: \"#/components/headers/If-Match\"\n          required: true\n      responses:\n        \"204\":\n          description: No Content\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"412\":\n          $ref: \"#/components/responses/PreconditionFailed\"\n        \"428\":\n          $ref: \"#/components/responses/PreconditionRequired\"\n    options:\n      tags:\n        - CORS\n      description: User\n      responses:\n        \"204\":\n          $ref: \"#/components/responses/Options\"\n",
			"canonicalURL": "/github.com/prince-chrismc/user-management@5578bdef0de6e4e44265a021faa48bb87a855570/-/blob/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/prince-chrismc/user-management/blob/5578bdef0de6e4e44265a021faa48bb87a855570/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"Add\": parse schema: at 1:2888: external \"./schema/add.json\": get: file: local file reference is not allowed"
}