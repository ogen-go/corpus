{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/EMResearch/EvoMaster"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "core-it/src/test/resources/APIs_guru/amazonaws.com/mediaconnect/2018-11-14/openapi.yaml",
			"byteSize": 215312,
			"content": "openapi: 3.0.0\ninfo:\n  version: '2018-11-14'\n  x-release: v4\n  title: AWS MediaConnect\n  description: API for AWS Elemental MediaConnect\n  x-logo:\n    url: 'https://twitter.com/awscloud/profile_image?size=original'\n    backgroundColor: '#FFFFFF'\n  termsOfService: 'https://aws.amazon.com/service-terms/'\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: 'https://github.com/mermade/aws2openapi'\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: 'http://www.apache.org/licenses/'\n  x-providerName: amazonaws.com\n  x-serviceName: mediaconnect\n  x-aws-signingName: mediaconnect\n  x-origin:\n    - contentType: application/json\n      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/mediaconnect-2018-11-14.normal.json'\n      converter:\n        url: 'https://github.com/mermade/aws2openapi'\n        version: 1.0.0\n      x-apisguru-driver: external\n  x-apiClientRegistration:\n    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: 'https://docs.aws.amazon.com/mediaconnect/'\nservers:\n  - url: 'http://mediaconnect.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The AWS MediaConnect multi-region endpoint\n  - url: 'https://mediaconnect.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The AWS MediaConnect multi-region endpoint\n  - url: 'http://mediaconnect.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AWS MediaConnect endpoint for China (Beijing) and China (Ningxia)\n  - url: 'https://mediaconnect.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AWS MediaConnect endpoint for China (Beijing) and China (Ningxia)\nx-hasEquivalentPaths: true\npaths:\n  '/v1/flows/{flowArn}/mediaStreams':\n    post:\n      operationId: AddFlowMediaStreams\n      description: 'Adds media streams to an existing flow. After you add a media stream to a flow, you can associate it with a source and/or an output that uses the ST 2110 JPEG XS or CDI protocol.'\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AddFlowMediaStreamsResponse'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '483':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '484':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '485':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters:\n        - name: flowArn\n          in: path\n          required: true\n          description: The Amazon Resource Name (ARN) of the flow.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - mediaStreams\n              properties:\n                mediaStreams:\n                  description: The media streams that you want to add to the flow.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/AddMediaStreamRequest'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/v1/flows/{flowArn}/outputs':\n    post:\n      operationId: AddFlowOutputs\n      description: Adds outputs to an existing flow. You can create up to 50 outputs per flow.\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AddFlowOutputsResponse'\n        '480':\n          description: AddFlowOutputs420Exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AddFlowOutputs420Exception'\n        '481':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '482':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '483':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '484':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '485':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '486':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters:\n        - name: flowArn\n          in: path\n          required: true\n          description: The flow that you want to add outputs to.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - outputs\n              properties:\n                outputs:\n                  description: A list of outputs that you want to add.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/AddOutputRequest'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/v1/flows/{flowArn}/source':\n    post:\n      operationId: AddFlowSources\n      description: Adds Sources to flow\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AddFlowSourcesResponse'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '483':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '484':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '485':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters:\n        - name: flowArn\n          in: path\n          required: true\n          description: The flow that you want to mutate.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - sources\n              properties:\n                sources:\n                  description: A list of sources that you want to add.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/SetSourceRequest'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/v1/flows/{flowArn}/vpcInterfaces':\n    post:\n      operationId: AddFlowVpcInterfaces\n      description: Adds VPC interfaces to flow\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AddFlowVpcInterfacesResponse'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '483':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '484':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '485':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters:\n        - name: flowArn\n          in: path\n          required: true\n          description: The flow that you want to mutate.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - vpcInterfaces\n              properties:\n                vpcInterfaces:\n                  description: A list of VPC interfaces that you want to add.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/VpcInterfaceRequest'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /v1/flows:\n    post:\n      operationId: CreateFlow\n      description: Creates a new flow. The request must include one source. The request optionally can include outputs (up to 50) and entitlements (up to 50).\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateFlowResponse'\n        '480':\n          description: CreateFlow420Exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateFlow420Exception'\n        '481':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '482':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '483':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '484':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '485':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - name\n              properties:\n                availabilityZone:\n                  description: The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS Region.\n                  type: string\n                entitlements:\n                  description: The entitlements that you want to grant on a flow.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/GrantEntitlementRequest'\n                mediaStreams:\n                  description: The media streams that you want to add to the flow. You can associate these media streams with sources and outputs on the flow.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/AddMediaStreamRequest'\n                name:\n                  description: The name of the flow.\n                  type: string\n                outputs:\n                  description: The outputs that you want to add to this flow.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/AddOutputRequest'\n                source:\n                  description: The settings for the source of the flow.\n                  type: object\n                  properties:\n                    Decryption:\n                      allOf:\n                        - $ref: '#/components/schemas/Encryption'\n                        - xml:\n                            name: decryption\n                          description: The type of encryption that is used on the content ingested from this source.\n                    Description:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: description\n                          description: A description for the source. This value is not used or seen outside of the current AWS Elemental MediaConnect account.\n                    EntitlementArn:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: entitlementArn\n                          description: 'The ARN of the entitlement that allows you to subscribe to this flow. The entitlement is set by the flow originator, and the ARN is generated as part of the originator''s flow.'\n                    IngestPort:\n                      allOf:\n                        - $ref: '#/components/schemas/__integer'\n                        - xml:\n                            name: ingestPort\n                          description: The port that the flow will be listening on for incoming content.\n                    MaxBitrate:\n                      allOf:\n                        - $ref: '#/components/schemas/__integer'\n                        - xml:\n                            name: maxBitrate\n                          description: 'The smoothing max bitrate for RIST, RTP, and RTP-FEC streams.'\n                    MaxLatency:\n                      allOf:\n                        - $ref: '#/components/schemas/__integer'\n                        - xml:\n                            name: maxLatency\n                          description: The maximum latency in milliseconds. This parameter applies only to RIST-based and Zixi-based streams.\n                    MaxSyncBuffer:\n                      allOf:\n                        - $ref: '#/components/schemas/__integer'\n                        - xml:\n                            name: maxSyncBuffer\n                          description: The size of the buffer (in milliseconds) to use to sync incoming source data.\n                    MediaStreamSourceConfigurations:\n                      allOf:\n                        - $ref: '#/components/schemas/__listOfMediaStreamSourceConfigurationRequest'\n                        - xml:\n                            name: mediaStreamSourceConfigurations\n                          description: 'The media streams that are associated with the source, and the parameters for those associations.'\n                    MinLatency:\n                      allOf:\n                        - $ref: '#/components/schemas/__integer'\n                        - xml:\n                            name: minLatency\n                          description: 'The minimum latency in milliseconds for SRT-based streams. In streams that use the SRT protocol, this value that you set on your MediaConnect source or output represents the minimal potential latency of that connection. The latency of the stream is set to the highest number between the sender’s minimum latency and the receiver’s minimum latency.'\n                    Name:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: name\n                          description: The name of the source.\n                    Protocol:\n                      allOf:\n                        - $ref: '#/components/schemas/Protocol'\n                        - xml:\n                            name: protocol\n                          description: The protocol that is used by the source.\n                    StreamId:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: streamId\n                          description: The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.\n                    VpcInterfaceName:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: vpcInterfaceName\n                          description: The name of the VPC interface to use for this source.\n                    WhitelistCidr:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: whitelistCidr\n                          description: 'The range of IP addresses that should be allowed to contribute content to your source. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.'\n                sourceFailoverConfig:\n                  description: The settings for source failover\n                  type: object\n                  properties:\n                    FailoverMode:\n                      allOf:\n                        - $ref: '#/components/schemas/FailoverMode'\n                        - xml:\n                            name: failoverMode\n                          description: 'The type of failover you choose for this flow. MERGE combines the source streams into a single stream, allowing graceful recovery from any single-source loss. FAILOVER allows switching between different streams.'\n                    RecoveryWindow:\n                      allOf:\n                        - $ref: '#/components/schemas/__integer'\n                        - xml:\n                            name: recoveryWindow\n                          description: Search window time to look for dash-7 packets\n                    SourcePriority:\n                      allOf:\n                        - $ref: '#/components/schemas/SourcePriority'\n                        - xml:\n                            name: sourcePriority\n                          description: The priority you want to assign to a source. You can have a primary stream and a backup stream or two equally prioritized streams.\n                    State:\n                      allOf:\n                        - $ref: '#/components/schemas/State'\n                        - xml:\n                            name: state\n                sources:\n                  description: ''\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/SetSourceRequest'\n                vpcInterfaces:\n                  description: The VPC interfaces you want on the flow.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/VpcInterfaceRequest'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: ListFlows\n      description: Displays a list of flows that are associated with this account. This request returns a paginated result.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListFlowsResponse'\n        '480':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '481':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n        '482':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '483':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n      parameters:\n        - name: maxResults\n          in: query\n          required: false\n          description: 'The maximum number of results to return per API request. For example, you submit a ListFlows request with MaxResults set at 5. Although 20 items match your request, the service returns no more than the first 5 items. (The service also returns a NextToken value that you can use to fetch the next batch of results.) The service might return fewer results than the MaxResults value. If MaxResults is not included in the request, the service defaults to pagination with a maximum of 10 results per page.'\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 1000\n        - name: nextToken\n          in: query\n          required: false\n          description: 'The token that identifies which batch of results that you want to see. For example, you submit a ListFlows request with MaxResults set at 5. The service returns the first batch of results (up to 5) and a NextToken value. To see the next batch of results, you can submit the ListFlows request a second time and specify the NextToken value.'\n          schema:\n            type: string\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n  '/v1/flows/{flowArn}':\n    delete:\n      operationId: DeleteFlow\n      description: 'Deletes a flow. Before you can delete a flow, you must stop the flow.'\n      responses:\n        '202':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteFlowResponse'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '483':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '484':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '485':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters:\n        - name: flowArn\n          in: path\n          required: true\n          description: The ARN of the flow that you want to delete.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: DescribeFlow\n      description: 'Displays the details of a flow. The response includes the flow ARN, name, and Availability Zone, as well as details about the source, outputs, and entitlements.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeFlowResponse'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '483':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '484':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '485':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters:\n        - name: flowArn\n          in: path\n          required: true\n          description: The ARN of the flow that you want to describe.\n          schema:\n            type: string\n    put:\n      operationId: UpdateFlow\n      description: Updates flow\n      responses:\n        '202':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateFlowResponse'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '483':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '484':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '485':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters:\n        - name: flowArn\n          in: path\n          required: true\n          description: The flow that you want to update.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                sourceFailoverConfig:\n                  description: The settings for source failover\n                  type: object\n                  properties:\n                    FailoverMode:\n                      allOf:\n                        - $ref: '#/components/schemas/FailoverMode'\n                        - xml:\n                            name: failoverMode\n                          description: 'The type of failover you choose for this flow. MERGE combines the source streams into a single stream, allowing graceful recovery from any single-source loss. FAILOVER allows switching between different streams.'\n                    RecoveryWindow:\n                      allOf:\n                        - $ref: '#/components/schemas/__integer'\n                        - xml:\n                            name: recoveryWindow\n                          description: Recovery window time to look for dash-7 packets\n                    SourcePriority:\n                      allOf:\n                        - $ref: '#/components/schemas/SourcePriority'\n                        - xml:\n                            name: sourcePriority\n                          description: The priority you want to assign to a source. You can have a primary stream and a backup stream or two equally prioritized streams.\n                    State:\n                      allOf:\n                        - $ref: '#/components/schemas/State'\n                        - xml:\n                            name: state\n  '/v1/offerings/{offeringArn}':\n    get:\n      operationId: DescribeOffering\n      description: 'Displays the details of an offering. The response includes the offering description, duration, outbound bandwidth, price, and Amazon Resource Name (ARN).'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeOfferingResponse'\n        '480':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '481':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '482':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n        '483':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '484':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n      parameters:\n        - name: offeringArn\n          in: path\n          required: true\n          description: The Amazon Resource Name (ARN) of the offering.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      operationId: PurchaseOffering\n      description: 'Submits a request to purchase an offering. If you already have an active reservation, you can''t purchase another offering.'\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PurchaseOfferingResponse'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '483':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '484':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '485':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters:\n        - name: offeringArn\n          in: path\n          required: true\n          description: The Amazon Resource Name (ARN) of the offering.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - reservationName\n                - start\n              properties:\n                reservationName:\n                  description: The name that you want to use for the reservation.\n                  type: string\n                start:\n                  description: 'The date and time that you want the reservation to begin, in Coordinated Universal Time (UTC). You can specify any date and time between 12:00am on the first day of the current month to the current time on today''s date, inclusive. Specify the start in a 24-hour notation. Use the following format: YYYY-MM-DDTHH:mm:SSZ, where T and Z are literal characters. For example, to specify 11:30pm on March 5, 2020, enter 2020-03-05T23:30:00Z.'\n                  type: string\n  '/v1/reservations/{reservationArn}':\n    get:\n      operationId: DescribeReservation\n      description: 'Displays the details of a reservation. The response includes the reservation name, state, start date and time, and the details of the offering that make up the rest of the reservation (such as price, duration, and outbound bandwidth).'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeReservationResponse'\n        '480':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '481':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '482':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n        '483':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '484':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n      parameters:\n        - name: reservationArn\n          in: path\n          required: true\n          description: The Amazon Resource Name (ARN) of the reservation.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/v1/flows/{flowArn}/entitlements':\n    post:\n      operationId: GrantFlowEntitlements\n      description: Grants entitlements to an existing flow.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GrantFlowEntitlementsResponse'\n        '480':\n          description: GrantFlowEntitlements420Exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GrantFlowEntitlements420Exception'\n        '481':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '482':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '483':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '484':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '485':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '486':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters:\n        - name: flowArn\n          in: path\n          required: true\n          description: The flow that you want to grant entitlements on.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - entitlements\n              properties:\n                entitlements:\n                  description: The list of entitlements that you want to grant.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/GrantEntitlementRequest'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /v1/entitlements:\n    get:\n      operationId: ListEntitlements\n      description: Displays a list of all entitlements that have been granted to this account. This request returns 20 results per page.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListEntitlementsResponse'\n        '480':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '481':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n        '482':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '483':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n      parameters:\n        - name: maxResults\n          in: query\n          required: false\n          description: 'The maximum number of results to return per API request. For example, you submit a ListEntitlements request with MaxResults set at 5. Although 20 items match your request, the service returns no more than the first 5 items. (The service also returns a NextToken value that you can use to fetch the next batch of results.) The service might return fewer results than the MaxResults value. If MaxResults is not included in the request, the service defaults to pagination with a maximum of 20 results per page.'\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 1000\n        - name: nextToken\n          in: query\n          required: false\n          description: 'The token that identifies which batch of results that you want to see. For example, you submit a ListEntitlements request with MaxResults set at 5. The service returns the first batch of results (up to 5) and a NextToken value. To see the next batch of results, you can submit the ListEntitlements request a second time and specify the NextToken value.'\n          schema:\n            type: string\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /v1/offerings:\n    get:\n      operationId: ListOfferings\n      description: 'Displays a list of all offerings that are available to this account in the current AWS Region. If you have an active reservation (which means you''ve purchased an offering that has already started and hasn''t expired yet), your account isn''t eligible for other offerings.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfferingsResponse'\n        '480':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '481':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n        '482':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '483':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n      parameters:\n        - name: maxResults\n          in: query\n          required: false\n          description: 'The maximum number of results to return per API request. For example, you submit a ListOfferings request with MaxResults set at 5. Although 20 items match your request, the service returns no more than the first 5 items. (The service also returns a NextToken value that you can use to fetch the next batch of results.) The service might return fewer results than the MaxResults value. If MaxResults is not included in the request, the service defaults to pagination with a maximum of 10 results per page.'\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 1000\n        - name: nextToken\n          in: query\n          required: false\n          description: 'The token that identifies which batch of results that you want to see. For example, you submit a ListOfferings request with MaxResults set at 5. The service returns the first batch of results (up to 5) and a NextToken value. To see the next batch of results, you can submit the ListOfferings request a second time and specify the NextToken value.'\n          schema:\n            type: string\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /v1/reservations:\n    get:\n      operationId: ListReservations\n      description: Displays a list of all reservations that have been purchased by this account in the current AWS Region. This list includes all reservations in all states (such as active and expired).\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListReservationsResponse'\n        '480':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '481':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n        '482':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '483':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n      parameters:\n        - name: maxResults\n          in: query\n          required: false\n          description: 'The maximum number of results to return per API request. For example, you submit a ListReservations request with MaxResults set at 5. Although 20 items match your request, the service returns no more than the first 5 items. (The service also returns a NextToken value that you can use to fetch the next batch of results.) The service might return fewer results than the MaxResults value. If MaxResults is not included in the request, the service defaults to pagination with a maximum of 10 results per page.'\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 1000\n        - name: nextToken\n          in: query\n          required: false\n          description: 'The token that identifies which batch of results that you want to see. For example, you submit a ListReservations request with MaxResults set at 5. The service returns the first batch of results (up to 5) and a NextToken value. To see the next batch of results, you can submit the ListOfferings request a second time and specify the NextToken value.'\n          schema:\n            type: string\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/tags/{resourceArn}':\n    get:\n      operationId: ListTagsForResource\n      description: List all tags on an AWS Elemental MediaConnect resource\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListTagsForResourceResponse'\n        '480':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '481':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '482':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: The Amazon Resource Name (ARN) that identifies the AWS Elemental MediaConnect resource for which to list the tags.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      operationId: TagResource\n      description: 'Associates the specified tags to a resource with the specified resourceArn. If existing tags on a resource are not specified in the request parameters, they are not changed. When a resource is deleted, the tags associated with that resource are deleted as well.'\n      responses:\n        '204':\n          description: Success\n        '480':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '481':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '482':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: The Amazon Resource Name (ARN) that identifies the AWS Elemental MediaConnect resource to which to add tags.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - tags\n              properties:\n                tags:\n                  description: 'A map from tag keys to values. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.'\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/__string'\n  '/v1/flows/{flowArn}/mediaStreams/{mediaStreamName}':\n    delete:\n      operationId: RemoveFlowMediaStream\n      description: Removes a media stream from a flow. This action is only available if the media stream is not associated with a source or output.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RemoveFlowMediaStreamResponse'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '483':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '484':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '485':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters:\n        - name: flowArn\n          in: path\n          required: true\n          description: The Amazon Resource Name (ARN) of the flow.\n          schema:\n            type: string\n        - name: mediaStreamName\n          in: path\n          required: true\n          description: The name of the media stream that you want to remove.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    put:\n      operationId: UpdateFlowMediaStream\n      description: Updates an existing media stream.\n      responses:\n        '202':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateFlowMediaStreamResponse'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '483':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '484':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '485':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters:\n        - name: flowArn\n          in: path\n          required: true\n          description: The Amazon Resource Name (ARN) of the flow.\n          schema:\n            type: string\n        - name: mediaStreamName\n          in: path\n          required: true\n          description: The name of the media stream that you want to update.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                attributes:\n                  description: Attributes that are related to the media stream.\n                  type: object\n                  properties:\n                    Fmtp:\n                      allOf:\n                        - $ref: '#/components/schemas/FmtpRequest'\n                        - xml:\n                            name: fmtp\n                          description: The settings that you want to use to define the media stream.\n                    Lang:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: lang\n                          description: 'The audio language, in a format that is recognized by the receiver.'\n                clockRate:\n                  description: 'The sample rate (in Hz) for the stream. If the media stream type is video or ancillary data, set this value to 90000. If the media stream type is audio, set this value to either 48000 or 96000.'\n                  type: integer\n                description:\n                  description: Description\n                  type: string\n                mediaStreamType:\n                  description: The type of media stream.\n                  type: string\n                  enum:\n                    - video\n                    - audio\n                    - ancillary-data\n                videoFormat:\n                  description: The resolution of the video.\n                  type: string\n  '/v1/flows/{flowArn}/outputs/{outputArn}':\n    delete:\n      operationId: RemoveFlowOutput\n      description: 'Removes an output from an existing flow. This request can be made only on an output that does not have an entitlement associated with it. If the output has an entitlement, you must revoke the entitlement instead. When an entitlement is revoked from a flow, the service automatically removes the associated output.'\n      responses:\n        '202':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RemoveFlowOutputResponse'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '483':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '484':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '485':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters:\n        - name: flowArn\n          in: path\n          required: true\n          description: The flow that you want to remove an output from.\n          schema:\n            type: string\n        - name: outputArn\n          in: path\n          required: true\n          description: The ARN of the output that you want to remove.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    put:\n      operationId: UpdateFlowOutput\n      description: Updates an existing flow output.\n      responses:\n        '202':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateFlowOutputResponse'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '483':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '484':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '485':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters:\n        - name: flowArn\n          in: path\n          required: true\n          description: The flow that is associated with the output that you want to update.\n          schema:\n            type: string\n        - name: outputArn\n          in: path\n          required: true\n          description: The ARN of the output that you want to update.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                cidrAllowList:\n                  description: 'The range of IP addresses that should be allowed to initiate output requests to this flow. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.'\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/__string'\n                description:\n                  description: A description of the output. This description appears only on the AWS Elemental MediaConnect console and will not be seen by the end user.\n                  type: string\n                destination:\n                  description: The IP address where you want to send the output.\n                  type: string\n                encryption:\n                  description: Information about the encryption of the flow.\n                  type: object\n                  properties:\n                    Algorithm:\n                      allOf:\n                        - $ref: '#/components/schemas/Algorithm'\n                        - xml:\n                            name: algorithm\n                          description: 'The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).'\n                    ConstantInitializationVector:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: constantInitializationVector\n                          description: 'A 128-bit, 16-byte hex value represented by a 32-character string, to be used with the key for encrypting content. This parameter is not valid for static key encryption.'\n                    DeviceId:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: deviceId\n                          description: The value of one of the devices that you configured with your digital rights management (DRM) platform key provider. This parameter is required for SPEKE encryption and is not valid for static key encryption.\n                    KeyType:\n                      allOf:\n                        - $ref: '#/components/schemas/KeyType'\n                        - xml:\n                            name: keyType\n                          description: 'The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).'\n                    Region:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: region\n                          description: The AWS Region that the API Gateway proxy endpoint was created in. This parameter is required for SPEKE encryption and is not valid for static key encryption.\n                    ResourceId:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: resourceId\n                          description: An identifier for the content. The service sends this value to the key server to identify the current endpoint. The resource ID is also known as the content ID. This parameter is required for SPEKE encryption and is not valid for static key encryption.\n                    RoleArn:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: roleArn\n                          description: The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).\n                    SecretArn:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: secretArn\n                          description: The ARN of the secret that you created in AWS Secrets Manager to store the encryption key. This parameter is required for static key encryption and is not valid for SPEKE encryption.\n                    Url:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: url\n                          description: The URL from the API Gateway proxy that you set up to talk to your key server. This parameter is required for SPEKE encryption and is not valid for static key encryption.\n                maxLatency:\n                  description: The maximum latency in milliseconds for Zixi-based streams.\n                  type: integer\n                mediaStreamOutputConfigurations:\n                  description: 'The media streams that are associated with the output, and the parameters for those associations.'\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/MediaStreamOutputConfigurationRequest'\n                minLatency:\n                  description: 'The minimum latency in milliseconds for SRT-based streams. In streams that use the SRT protocol, this value that you set on your MediaConnect source or output represents the minimal potential latency of that connection. The latency of the stream is set to the highest number between the sender’s minimum latency and the receiver’s minimum latency.'\n                  type: integer\n                port:\n                  description: The port to use when content is distributed to this output.\n                  type: integer\n                protocol:\n                  description: The protocol to use for the output.\n                  type: string\n                  enum:\n                    - zixi-push\n                    - rtp-fec\n                    - rtp\n                    - zixi-pull\n                    - rist\n                    - st2110-jpegxs\n                    - cdi\n                    - srt-listener\n                remoteId:\n                  description: The remote ID for the Zixi-pull stream.\n                  type: string\n                smoothingLatency:\n                  description: 'The smoothing latency in milliseconds for RIST, RTP, and RTP-FEC streams.'\n                  type: integer\n                streamId:\n                  description: The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.\n                  type: string\n                vpcInterfaceAttachment:\n                  description: The settings for attaching a VPC interface to an output.\n                  type: object\n                  properties:\n                    VpcInterfaceName:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: vpcInterfaceName\n                          description: The name of the VPC interface to use for this output.\n  '/v1/flows/{flowArn}/source/{sourceArn}':\n    delete:\n      operationId: RemoveFlowSource\n      description: Removes a source from an existing flow. This request can be made only if there is more than one source on the flow.\n      responses:\n        '202':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RemoveFlowSourceResponse'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '483':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '484':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '485':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters:\n        - name: flowArn\n          in: path\n          required: true\n          description: The flow that you want to remove a source from.\n          schema:\n            type: string\n        - name: sourceArn\n          in: path\n          required: true\n          description: The ARN of the source that you want to remove.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    put:\n      operationId: UpdateFlowSource\n      description: Updates the source of a flow.\n      responses:\n        '202':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateFlowSourceResponse'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '483':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '484':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '485':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters:\n        - name: flowArn\n          in: path\n          required: true\n          description: The flow that is associated with the source that you want to update.\n          schema:\n            type: string\n        - name: sourceArn\n          in: path\n          required: true\n          description: The ARN of the source that you want to update.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                decryption:\n                  description: Information about the encryption of the flow.\n                  type: object\n                  properties:\n                    Algorithm:\n                      allOf:\n                        - $ref: '#/components/schemas/Algorithm'\n                        - xml:\n                            name: algorithm\n                          description: 'The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).'\n                    ConstantInitializationVector:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: constantInitializationVector\n                          description: 'A 128-bit, 16-byte hex value represented by a 32-character string, to be used with the key for encrypting content. This parameter is not valid for static key encryption.'\n                    DeviceId:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: deviceId\n                          description: The value of one of the devices that you configured with your digital rights management (DRM) platform key provider. This parameter is required for SPEKE encryption and is not valid for static key encryption.\n                    KeyType:\n                      allOf:\n                        - $ref: '#/components/schemas/KeyType'\n                        - xml:\n                            name: keyType\n                          description: 'The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).'\n                    Region:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: region\n                          description: The AWS Region that the API Gateway proxy endpoint was created in. This parameter is required for SPEKE encryption and is not valid for static key encryption.\n                    ResourceId:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: resourceId\n                          description: An identifier for the content. The service sends this value to the key server to identify the current endpoint. The resource ID is also known as the content ID. This parameter is required for SPEKE encryption and is not valid for static key encryption.\n                    RoleArn:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: roleArn\n                          description: The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).\n                    SecretArn:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: secretArn\n                          description: The ARN of the secret that you created in AWS Secrets Manager to store the encryption key. This parameter is required for static key encryption and is not valid for SPEKE encryption.\n                    Url:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: url\n                          description: The URL from the API Gateway proxy that you set up to talk to your key server. This parameter is required for SPEKE encryption and is not valid for static key encryption.\n                description:\n                  description: A description for the source. This value is not used or seen outside of the current AWS Elemental MediaConnect account.\n                  type: string\n                entitlementArn:\n                  description: 'The ARN of the entitlement that allows you to subscribe to this flow. The entitlement is set by the flow originator, and the ARN is generated as part of the originator''s flow.'\n                  type: string\n                ingestPort:\n                  description: The port that the flow will be listening on for incoming content.\n                  type: integer\n                maxBitrate:\n                  description: 'The smoothing max bitrate for RIST, RTP, and RTP-FEC streams.'\n                  type: integer\n                maxLatency:\n                  description: The maximum latency in milliseconds. This parameter applies only to RIST-based and Zixi-based streams.\n                  type: integer\n                maxSyncBuffer:\n                  description: The size of the buffer (in milliseconds) to use to sync incoming source data.\n                  type: integer\n                mediaStreamSourceConfigurations:\n                  description: 'The media streams that are associated with the source, and the parameters for those associations.'\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/MediaStreamSourceConfigurationRequest'\n                minLatency:\n                  description: 'The minimum latency in milliseconds for SRT-based streams. In streams that use the SRT protocol, this value that you set on your MediaConnect source or output represents the minimal potential latency of that connection. The latency of the stream is set to the highest number between the sender’s minimum latency and the receiver’s minimum latency.'\n                  type: integer\n                protocol:\n                  description: The protocol that is used by the source.\n                  type: string\n                  enum:\n                    - zixi-push\n                    - rtp-fec\n                    - rtp\n                    - zixi-pull\n                    - rist\n                    - st2110-jpegxs\n                    - cdi\n                    - srt-listener\n                streamId:\n                  description: The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.\n                  type: string\n                vpcInterfaceName:\n                  description: The name of the VPC interface to use for this source.\n                  type: string\n                whitelistCidr:\n                  description: 'The range of IP addresses that should be allowed to contribute content to your source. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.'\n                  type: string\n  '/v1/flows/{flowArn}/vpcInterfaces/{vpcInterfaceName}':\n    delete:\n      operationId: RemoveFlowVpcInterface\n      description: 'Removes a VPC Interface from an existing flow. This request can be made only on a VPC interface that does not have a Source or Output associated with it. If the VPC interface is referenced by a Source or Output, you must first delete or update the Source or Output to no longer reference the VPC interface.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RemoveFlowVpcInterfaceResponse'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '483':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '484':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '485':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters:\n        - name: flowArn\n          in: path\n          required: true\n          description: The flow that you want to remove a VPC interface from.\n          schema:\n            type: string\n        - name: vpcInterfaceName\n          in: path\n          required: true\n          description: The name of the VPC interface that you want to remove.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/v1/flows/{flowArn}/entitlements/{entitlementArn}':\n    delete:\n      operationId: RevokeFlowEntitlement\n      description: 'Revokes an entitlement from a flow. Once an entitlement is revoked, the content becomes unavailable to the subscriber and the associated output is removed.'\n      responses:\n        '202':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RevokeFlowEntitlementResponse'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '483':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '484':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '485':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters:\n        - name: entitlementArn\n          in: path\n          required: true\n          description: The ARN of the entitlement that you want to revoke.\n          schema:\n            type: string\n        - name: flowArn\n          in: path\n          required: true\n          description: The flow that you want to revoke an entitlement from.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    put:\n      operationId: UpdateFlowEntitlement\n      description: 'You can change an entitlement''s description, subscribers, and encryption. If you change the subscribers, the service will remove the outputs that are are used by the subscribers that are removed.'\n      responses:\n        '202':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateFlowEntitlementResponse'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '483':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '484':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '485':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters:\n        - name: entitlementArn\n          in: path\n          required: true\n          description: The ARN of the entitlement that you want to update.\n          schema:\n            type: string\n        - name: flowArn\n          in: path\n          required: true\n          description: The flow that is associated with the entitlement that you want to update.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                description:\n                  description: A description of the entitlement. This description appears only on the AWS Elemental MediaConnect console and will not be seen by the subscriber or end user.\n                  type: string\n                encryption:\n                  description: Information about the encryption of the flow.\n                  type: object\n                  properties:\n                    Algorithm:\n                      allOf:\n                        - $ref: '#/components/schemas/Algorithm'\n                        - xml:\n                            name: algorithm\n                          description: 'The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).'\n                    ConstantInitializationVector:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: constantInitializationVector\n                          description: 'A 128-bit, 16-byte hex value represented by a 32-character string, to be used with the key for encrypting content. This parameter is not valid for static key encryption.'\n                    DeviceId:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: deviceId\n                          description: The value of one of the devices that you configured with your digital rights management (DRM) platform key provider. This parameter is required for SPEKE encryption and is not valid for static key encryption.\n                    KeyType:\n                      allOf:\n                        - $ref: '#/components/schemas/KeyType'\n                        - xml:\n                            name: keyType\n                          description: 'The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).'\n                    Region:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: region\n                          description: The AWS Region that the API Gateway proxy endpoint was created in. This parameter is required for SPEKE encryption and is not valid for static key encryption.\n                    ResourceId:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: resourceId\n                          description: An identifier for the content. The service sends this value to the key server to identify the current endpoint. The resource ID is also known as the content ID. This parameter is required for SPEKE encryption and is not valid for static key encryption.\n                    RoleArn:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: roleArn\n                          description: The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).\n                    SecretArn:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: secretArn\n                          description: The ARN of the secret that you created in AWS Secrets Manager to store the encryption key. This parameter is required for static key encryption and is not valid for SPEKE encryption.\n                    Url:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: url\n                          description: The URL from the API Gateway proxy that you set up to talk to your key server. This parameter is required for SPEKE encryption and is not valid for static key encryption.\n                entitlementStatus:\n                  description: 'An indication of whether you want to enable the entitlement to allow access, or disable it to stop streaming content to the subscriber’s flow temporarily. If you don’t specify the entitlementStatus field in your request, MediaConnect leaves the value unchanged.'\n                  type: string\n                  enum:\n                    - ENABLED\n                    - DISABLED\n                subscribers:\n                  description: The AWS account IDs that you want to share your content with. The receiving accounts (subscribers) will be allowed to create their own flow using your content as the source.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/__string'\n  '/v1/flows/start/{flowArn}':\n    post:\n      operationId: StartFlow\n      description: Starts a flow.\n      responses:\n        '202':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StartFlowResponse'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '483':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '484':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '485':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters:\n        - name: flowArn\n          in: path\n          required: true\n          description: The ARN of the flow that you want to start.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/v1/flows/stop/{flowArn}':\n    post:\n      operationId: StopFlow\n      description: Stops a flow.\n      responses:\n        '202':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StopFlowResponse'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '483':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '484':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '485':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters:\n        - name: flowArn\n          in: path\n          required: true\n          description: The ARN of the flow that you want to stop.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/tags/{resourceArn}#tagKeys':\n    delete:\n      operationId: UntagResource\n      description: Deletes specified tags from a resource.\n      responses:\n        '204':\n          description: Success\n        '480':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '481':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '482':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: The Amazon Resource Name (ARN) that identifies the AWS Elemental MediaConnect resource from which to delete tags.\n          schema:\n            type: string\n        - name: tagKeys\n          in: query\n          required: true\n          description: The keys of the tags to be removed.\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/__string'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      schema:\n        type: string\n      required: false\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    AddFlowMediaStreamsResponse:\n      type: object\n      properties:\n        FlowArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: flowArn\n              description: The ARN of the flow that you added media streams to.\n        MediaStreams:\n          allOf:\n            - $ref: '#/components/schemas/__listOfMediaStream'\n            - xml:\n                name: mediaStreams\n              description: The media streams that you added to the flow.\n    AddMediaStreamRequest:\n      type: object\n      required:\n        - MediaStreamType\n        - MediaStreamId\n        - MediaStreamName\n      properties:\n        Attributes:\n          allOf:\n            - $ref: '#/components/schemas/MediaStreamAttributesRequest'\n            - xml:\n                name: attributes\n              description: The attributes that you want to assign to the new media stream.\n        ClockRate:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: clockRate\n              description: 'The sample rate (in Hz) for the stream. If the media stream type is video or ancillary data, set this value to 90000. If the media stream type is audio, set this value to either 48000 or 96000.'\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: description\n              description: A description that can help you quickly identify what your media stream is used for.\n        MediaStreamId:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: mediaStreamId\n              description: A unique identifier for the media stream.\n        MediaStreamName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: mediaStreamName\n              description: A name that helps you distinguish one media stream from another.\n        MediaStreamType:\n          allOf:\n            - $ref: '#/components/schemas/MediaStreamType'\n            - xml:\n                name: mediaStreamType\n              description: The type of media stream.\n        VideoFormat:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: videoFormat\n              description: The resolution of the video.\n      description: The media stream that you want to add to the flow.\n    BadRequestException: {}\n    InternalServerErrorException: {}\n    ForbiddenException: {}\n    NotFoundException: {}\n    ServiceUnavailableException: {}\n    TooManyRequestsException: {}\n    AddFlowOutputsResponse:\n      type: object\n      properties:\n        FlowArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: flowArn\n              description: The ARN of the flow that these outputs were added to.\n        Outputs:\n          allOf:\n            - $ref: '#/components/schemas/__listOfOutput'\n            - xml:\n                name: outputs\n              description: The details of the newly added outputs.\n    AddOutputRequest:\n      type: object\n      required:\n        - Protocol\n      properties:\n        CidrAllowList:\n          allOf:\n            - $ref: '#/components/schemas/__listOf__string'\n            - xml:\n                name: cidrAllowList\n              description: 'The range of IP addresses that should be allowed to initiate output requests to this flow. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.'\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: description\n              description: A description of the output. This description appears only on the AWS Elemental MediaConnect console and will not be seen by the end user.\n        Destination:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: destination\n              description: The IP address from which video will be sent to output destinations.\n        Encryption:\n          allOf:\n            - $ref: '#/components/schemas/Encryption'\n            - xml:\n                name: encryption\n              description: 'The type of key used for the encryption. If no keyType is provided, the service will use the default setting (static-key).'\n        MaxLatency:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: maxLatency\n              description: The maximum latency in milliseconds for Zixi-based streams.\n        MediaStreamOutputConfigurations:\n          allOf:\n            - $ref: '#/components/schemas/__listOfMediaStreamOutputConfigurationRequest'\n            - xml:\n                name: mediaStreamOutputConfigurations\n              description: 'The media streams that are associated with the output, and the parameters for those associations.'\n        MinLatency:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: minLatency\n              description: 'The minimum latency in milliseconds for SRT-based streams. In streams that use the SRT protocol, this value that you set on your MediaConnect source or output represents the minimal potential latency of that connection. The latency of the stream is set to the highest number between the sender’s minimum latency and the receiver’s minimum latency.'\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: name\n              description: The name of the output. This value must be unique within the current flow.\n        Port:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: port\n              description: The port to use when content is distributed to this output.\n        Protocol:\n          allOf:\n            - $ref: '#/components/schemas/Protocol'\n            - xml:\n                name: protocol\n              description: The protocol to use for the output.\n        RemoteId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: remoteId\n              description: The remote ID for the Zixi-pull output stream.\n        SmoothingLatency:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: smoothingLatency\n              description: 'The smoothing latency in milliseconds for RIST, RTP, and RTP-FEC streams.'\n        StreamId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: streamId\n              description: The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.\n        VpcInterfaceAttachment:\n          allOf:\n            - $ref: '#/components/schemas/VpcInterfaceAttachment'\n            - xml:\n                name: vpcInterfaceAttachment\n              description: The name of the VPC interface attachment to use for this output.\n      description: The output that you want to add to this flow.\n    AddFlowOutputs420Exception: {}\n    AddFlowSourcesResponse:\n      type: object\n      properties:\n        FlowArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: flowArn\n              description: The ARN of the flow that these sources were added to.\n        Sources:\n          allOf:\n            - $ref: '#/components/schemas/__listOfSource'\n            - xml:\n                name: sources\n              description: The details of the newly added sources.\n    SetSourceRequest:\n      type: object\n      properties:\n        Decryption:\n          allOf:\n            - $ref: '#/components/schemas/Encryption'\n            - xml:\n                name: decryption\n              description: The type of encryption that is used on the content ingested from this source.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: description\n              description: A description for the source. This value is not used or seen outside of the current AWS Elemental MediaConnect account.\n        EntitlementArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: entitlementArn\n              description: 'The ARN of the entitlement that allows you to subscribe to this flow. The entitlement is set by the flow originator, and the ARN is generated as part of the originator''s flow.'\n        IngestPort:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: ingestPort\n              description: The port that the flow will be listening on for incoming content.\n        MaxBitrate:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: maxBitrate\n              description: 'The smoothing max bitrate for RIST, RTP, and RTP-FEC streams.'\n        MaxLatency:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: maxLatency\n              description: The maximum latency in milliseconds. This parameter applies only to RIST-based and Zixi-based streams.\n        MaxSyncBuffer:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: maxSyncBuffer\n              description: The size of the buffer (in milliseconds) to use to sync incoming source data.\n        MediaStreamSourceConfigurations:\n          allOf:\n            - $ref: '#/components/schemas/__listOfMediaStreamSourceConfigurationRequest'\n            - xml:\n                name: mediaStreamSourceConfigurations\n              description: 'The media streams that are associated with the source, and the parameters for those associations.'\n        MinLatency:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: minLatency\n              description: 'The minimum latency in milliseconds for SRT-based streams. In streams that use the SRT protocol, this value that you set on your MediaConnect source or output represents the minimal potential latency of that connection. The latency of the stream is set to the highest number between the sender’s minimum latency and the receiver’s minimum latency.'\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: name\n              description: The name of the source.\n        Protocol:\n          allOf:\n            - $ref: '#/components/schemas/Protocol'\n            - xml:\n                name: protocol\n              description: The protocol that is used by the source.\n        StreamId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: streamId\n              description: The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.\n        VpcInterfaceName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: vpcInterfaceName\n              description: The name of the VPC interface to use for this source.\n        WhitelistCidr:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: whitelistCidr\n              description: 'The range of IP addresses that should be allowed to contribute content to your source. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.'\n      description: The settings for the source of the flow.\n    AddFlowVpcInterfacesResponse:\n      type: object\n      properties:\n        FlowArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: flowArn\n              description: The ARN of the flow that these VPC interfaces were added to.\n        VpcInterfaces:\n          allOf:\n            - $ref: '#/components/schemas/__listOfVpcInterface'\n            - xml:\n                name: vpcInterfaces\n              description: The details of the newly added VPC interfaces.\n    VpcInterfaceRequest:\n      type: object\n      required:\n        - SubnetId\n        - SecurityGroupIds\n        - RoleArn\n        - Name\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: name\n              description: The name of the VPC Interface. This value must be unique within the current flow.\n        NetworkInterfaceType:\n          allOf:\n            - $ref: '#/components/schemas/NetworkInterfaceType'\n            - xml:\n                name: networkInterfaceType\n              description: 'The type of network interface. If this value is not included in the request, MediaConnect uses ENA as the networkInterfaceType.'\n        RoleArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: roleArn\n              description: Role Arn MediaConnect can assumes to create ENIs in customer's account\n        SecurityGroupIds:\n          allOf:\n            - $ref: '#/components/schemas/__listOf__string'\n            - xml:\n                name: securityGroupIds\n              description: Security Group IDs to be used on ENI.\n        SubnetId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: subnetId\n              description: Subnet must be in the AZ of the Flow\n      description: Desired VPC Interface for a Flow\n    CreateFlowResponse:\n      type: object\n      properties:\n        Flow:\n          allOf:\n            - $ref: '#/components/schemas/Flow'\n            - xml:\n                name: flow\n    GrantEntitlementRequest:\n      type: object\n      required:\n        - Subscribers\n      properties:\n        DataTransferSubscriberFeePercent:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: dataTransferSubscriberFeePercent\n              description: Percentage from 0-100 of the data transfer cost to be billed to the subscriber.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: description\n              description: A description of the entitlement. This description appears only on the AWS Elemental MediaConnect console and will not be seen by the subscriber or end user.\n        Encryption:\n          allOf:\n            - $ref: '#/components/schemas/Encryption'\n            - xml:\n                name: encryption\n              description: The type of encryption that will be used on the output that is associated with this entitlement.\n        EntitlementStatus:\n          allOf:\n            - $ref: '#/components/schemas/EntitlementStatus'\n            - xml:\n                name: entitlementStatus\n              description: 'An indication of whether the new entitlement should be enabled or disabled as soon as it is created. If you don’t specify the entitlementStatus field in your request, MediaConnect sets it to ENABLED.'\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: name\n              description: The name of the entitlement. This value must be unique within the current flow.\n        Subscribers:\n          allOf:\n            - $ref: '#/components/schemas/__listOf__string'\n            - xml:\n                name: subscribers\n              description: The AWS account IDs that you want to share your content with. The receiving accounts (subscribers) will be allowed to create their own flows using your content as the source.\n      description: The entitlements that you want to grant on a flow.\n    Encryption:\n      type: object\n      required:\n        - RoleArn\n      properties:\n        Algorithm:\n          allOf:\n            - $ref: '#/components/schemas/Algorithm'\n            - xml:\n                name: algorithm\n              description: 'The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).'\n        ConstantInitializationVector:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: constantInitializationVector\n              description: 'A 128-bit, 16-byte hex value represented by a 32-character string, to be used with the key for encrypting content. This parameter is not valid for static key encryption.'\n        DeviceId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: deviceId\n              description: The value of one of the devices that you configured with your digital rights management (DRM) platform key provider. This parameter is required for SPEKE encryption and is not valid for static key encryption.\n        KeyType:\n          allOf:\n            - $ref: '#/components/schemas/KeyType'\n            - xml:\n                name: keyType\n              description: 'The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).'\n        Region:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: region\n              description: The AWS Region that the API Gateway proxy endpoint was created in. This parameter is required for SPEKE encryption and is not valid for static key encryption.\n        ResourceId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: resourceId\n              description: An identifier for the content. The service sends this value to the key server to identify the current endpoint. The resource ID is also known as the content ID. This parameter is required for SPEKE encryption and is not valid for static key encryption.\n        RoleArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: roleArn\n              description: The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).\n        SecretArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: secretArn\n              description: The ARN of the secret that you created in AWS Secrets Manager to store the encryption key. This parameter is required for static key encryption and is not valid for SPEKE encryption.\n        Url:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: url\n              description: The URL from the API Gateway proxy that you set up to talk to your key server. This parameter is required for SPEKE encryption and is not valid for static key encryption.\n      description: Information about the encryption of the flow.\n    __string:\n      type: string\n    __integer:\n      type: integer\n    __listOfMediaStreamSourceConfigurationRequest:\n      type: array\n      items:\n        $ref: '#/components/schemas/MediaStreamSourceConfigurationRequest'\n    Protocol:\n      type: string\n      enum:\n        - zixi-push\n        - rtp-fec\n        - rtp\n        - zixi-pull\n        - rist\n        - st2110-jpegxs\n        - cdi\n        - srt-listener\n    FailoverMode:\n      type: string\n      enum:\n        - MERGE\n        - FAILOVER\n    SourcePriority:\n      type: object\n      properties:\n        PrimarySource:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: primarySource\n              description: The name of the source you choose as the primary source for this flow.\n      description: The priority you want to assign to a source. You can have a primary stream and a backup stream or two equally prioritized streams.\n    State:\n      type: string\n      enum:\n        - ENABLED\n        - DISABLED\n    CreateFlow420Exception: {}\n    DeleteFlowResponse:\n      type: object\n      properties:\n        FlowArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: flowArn\n              description: The ARN of the flow that was deleted.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/Status'\n            - xml:\n                name: status\n              description: The status of the flow when the DeleteFlow process begins.\n    DescribeFlowResponse:\n      type: object\n      properties:\n        Flow:\n          allOf:\n            - $ref: '#/components/schemas/Flow'\n            - xml:\n                name: flow\n        Messages:\n          allOf:\n            - $ref: '#/components/schemas/Messages'\n            - xml:\n                name: messages\n    DescribeOfferingResponse:\n      type: object\n      properties:\n        Offering:\n          allOf:\n            - $ref: '#/components/schemas/Offering'\n            - xml:\n                name: offering\n    DescribeReservationResponse:\n      type: object\n      properties:\n        Reservation:\n          allOf:\n            - $ref: '#/components/schemas/Reservation'\n            - xml:\n                name: reservation\n    GrantFlowEntitlementsResponse:\n      type: object\n      properties:\n        Entitlements:\n          allOf:\n            - $ref: '#/components/schemas/__listOfEntitlement'\n            - xml:\n                name: entitlements\n              description: The entitlements that were just granted.\n        FlowArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: flowArn\n              description: The ARN of the flow that these entitlements were granted to.\n    GrantFlowEntitlements420Exception: {}\n    ListEntitlementsResponse:\n      type: object\n      properties:\n        Entitlements:\n          allOf:\n            - $ref: '#/components/schemas/__listOfListedEntitlement'\n            - xml:\n                name: entitlements\n              description: A list of entitlements that have been granted to you from other AWS accounts.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: nextToken\n              description: 'The token that identifies which batch of results that you want to see. For example, you submit a ListEntitlements request with MaxResults set at 5. The service returns the first batch of results (up to 5) and a NextToken value. To see the next batch of results, you can submit the ListEntitlements request a second time and specify the NextToken value.'\n    ListFlowsResponse:\n      type: object\n      properties:\n        Flows:\n          allOf:\n            - $ref: '#/components/schemas/__listOfListedFlow'\n            - xml:\n                name: flows\n              description: A list of flow summaries.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: nextToken\n              description: 'The token that identifies which batch of results that you want to see. For example, you submit a ListFlows request with MaxResults set at 5. The service returns the first batch of results (up to 5) and a NextToken value. To see the next batch of results, you can submit the ListFlows request a second time and specify the NextToken value.'\n    ListOfferingsResponse:\n      type: object\n      properties:\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: nextToken\n              description: 'The token that identifies which batch of results that you want to see. For example, you submit a ListOfferings request with MaxResults set at 5. The service returns the first batch of results (up to 5) and a NextToken value. To see the next batch of results, you can submit the ListOfferings request a second time and specify the NextToken value.'\n        Offerings:\n          allOf:\n            - $ref: '#/components/schemas/__listOfOffering'\n            - xml:\n                name: offerings\n              description: A list of offerings that are available to this account in the current AWS Region.\n    ListReservationsResponse:\n      type: object\n      properties:\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: nextToken\n              description: 'The token that identifies which batch of results that you want to see. For example, you submit a ListReservations request with MaxResults set at 5. The service returns the first batch of results (up to 5) and a NextToken value. To see the next batch of results, you can submit the ListReservations request a second time and specify the NextToken value.'\n        Reservations:\n          allOf:\n            - $ref: '#/components/schemas/__listOfReservation'\n            - xml:\n                name: reservations\n              description: A list of all reservations that have been purchased by this account in the current AWS Region.\n    ListTagsForResourceResponse:\n      type: object\n      properties:\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/__mapOf__string'\n            - xml:\n                name: tags\n              description: 'A map from tag keys to values. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.'\n    PurchaseOfferingResponse:\n      type: object\n      properties:\n        Reservation:\n          allOf:\n            - $ref: '#/components/schemas/Reservation'\n            - xml:\n                name: reservation\n    RemoveFlowMediaStreamResponse:\n      type: object\n      properties:\n        FlowArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: flowArn\n              description: The Amazon Resource Name (ARN) of the flow.\n        MediaStreamName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: mediaStreamName\n              description: The name of the media stream that was removed.\n    RemoveFlowOutputResponse:\n      type: object\n      properties:\n        FlowArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: flowArn\n              description: The ARN of the flow that is associated with the output you removed.\n        OutputArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: outputArn\n              description: The ARN of the output that was removed.\n    RemoveFlowSourceResponse:\n      type: object\n      properties:\n        FlowArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: flowArn\n              description: The ARN of the flow that is associated with the source you removed.\n        SourceArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: sourceArn\n              description: The ARN of the source that was removed.\n    RemoveFlowVpcInterfaceResponse:\n      type: object\n      properties:\n        FlowArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: flowArn\n              description: The ARN of the flow that is associated with the VPC interface you removed.\n        NonDeletedNetworkInterfaceIds:\n          allOf:\n            - $ref: '#/components/schemas/__listOf__string'\n            - xml:\n                name: nonDeletedNetworkInterfaceIds\n              description: IDs of network interfaces associated with the removed VPC interface that Media Connect was unable to remove.\n        VpcInterfaceName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: vpcInterfaceName\n              description: The name of the VPC interface that was removed.\n    RevokeFlowEntitlementResponse:\n      type: object\n      properties:\n        EntitlementArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: entitlementArn\n              description: The ARN of the entitlement that was revoked.\n        FlowArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: flowArn\n              description: The ARN of the flow that the entitlement was revoked from.\n    StartFlowResponse:\n      type: object\n      properties:\n        FlowArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: flowArn\n              description: The ARN of the flow that you started.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/Status'\n            - xml:\n                name: status\n              description: The status of the flow when the StartFlow process begins.\n    StopFlowResponse:\n      type: object\n      properties:\n        FlowArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: flowArn\n              description: The ARN of the flow that you stopped.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/Status'\n            - xml:\n                name: status\n              description: The status of the flow when the StopFlow process begins.\n    UpdateFlowResponse:\n      type: object\n      properties:\n        Flow:\n          allOf:\n            - $ref: '#/components/schemas/Flow'\n            - xml:\n                name: flow\n    UpdateFlowEntitlementResponse:\n      type: object\n      properties:\n        Entitlement:\n          allOf:\n            - $ref: '#/components/schemas/Entitlement'\n            - xml:\n                name: entitlement\n              description: The new configuration of the entitlement that you updated.\n        FlowArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: flowArn\n              description: The ARN of the flow that this entitlement was granted on.\n    Algorithm:\n      type: string\n      enum:\n        - aes128\n        - aes192\n        - aes256\n    KeyType:\n      type: string\n      enum:\n        - speke\n        - static-key\n        - srt-password\n    UpdateFlowMediaStreamResponse:\n      type: object\n      properties:\n        FlowArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: flowArn\n              description: The ARN of the flow that is associated with the media stream that you updated.\n        MediaStream:\n          allOf:\n            - $ref: '#/components/schemas/MediaStream'\n            - xml:\n                name: mediaStream\n              description: The media stream that you updated.\n    FmtpRequest:\n      type: object\n      properties:\n        ChannelOrder:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: channelOrder\n              description: The format of the audio channel.\n        Colorimetry:\n          allOf:\n            - $ref: '#/components/schemas/Colorimetry'\n            - xml:\n                name: colorimetry\n              description: The format that is used for the representation of color.\n        ExactFramerate:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: exactFramerate\n              description: 'The frame rate for the video stream, in frames/second. For example: 60000/1001. If you specify a whole number, MediaConnect uses a ratio of N/1. For example, if you specify 60, MediaConnect uses 60/1 as the exactFramerate.'\n        Par:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: par\n              description: The pixel aspect ratio (PAR) of the video.\n        Range:\n          allOf:\n            - $ref: '#/components/schemas/Range'\n            - xml:\n                name: range\n              description: The encoding range of the video.\n        ScanMode:\n          allOf:\n            - $ref: '#/components/schemas/ScanMode'\n            - xml:\n                name: scanMode\n              description: The type of compression that was used to smooth the video’s appearance.\n        Tcs:\n          allOf:\n            - $ref: '#/components/schemas/Tcs'\n            - xml:\n                name: tcs\n              description: The transfer characteristic system (TCS) that is used in the video.\n      description: The settings that you want to use to define the media stream.\n    UpdateFlowOutputResponse:\n      type: object\n      properties:\n        FlowArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: flowArn\n              description: The ARN of the flow that is associated with the updated output.\n        Output:\n          allOf:\n            - $ref: '#/components/schemas/Output'\n            - xml:\n                name: output\n              description: The new settings of the output that you updated.\n    MediaStreamOutputConfigurationRequest:\n      type: object\n      required:\n        - MediaStreamName\n        - EncodingName\n      properties:\n        DestinationConfigurations:\n          allOf:\n            - $ref: '#/components/schemas/__listOfDestinationConfigurationRequest'\n            - xml:\n                name: destinationConfigurations\n              description: The transport parameters that you want to associate with the media stream.\n        EncodingName:\n          allOf:\n            - $ref: '#/components/schemas/EncodingName'\n            - xml:\n                name: encodingName\n              description: 'The format that will be used to encode the data. For ancillary data streams, set the encoding name to smpte291. For audio streams, set the encoding name to pcm. For video, 2110 streams, set the encoding name to raw. For video, JPEG XS streams, set the encoding name to jxsv.'\n        EncodingParameters:\n          allOf:\n            - $ref: '#/components/schemas/EncodingParametersRequest'\n            - xml:\n                name: encodingParameters\n              description: A collection of parameters that determine how MediaConnect will convert the content. These fields only apply to outputs on flows that have a CDI source.\n        MediaStreamName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: mediaStreamName\n              description: The name of the media stream that is associated with the output.\n      description: 'The media stream that you want to associate with the output, and the parameters for that association.'\n    UpdateFlowSourceResponse:\n      type: object\n      properties:\n        FlowArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: flowArn\n              description: The ARN of the flow that you want to update.\n        Source:\n          allOf:\n            - $ref: '#/components/schemas/Source'\n            - xml:\n                name: source\n              description: The settings for the source of the flow.\n    MediaStreamSourceConfigurationRequest:\n      type: object\n      required:\n        - MediaStreamName\n        - EncodingName\n      properties:\n        EncodingName:\n          allOf:\n            - $ref: '#/components/schemas/EncodingName'\n            - xml:\n                name: encodingName\n              description: 'The format you want to use to encode the data. For ancillary data streams, set the encoding name to smpte291. For audio streams, set the encoding name to pcm. For video, 2110 streams, set the encoding name to raw. For video, JPEG XS streams, set the encoding name to jxsv.'\n        InputConfigurations:\n          allOf:\n            - $ref: '#/components/schemas/__listOfInputConfigurationRequest'\n            - xml:\n                name: inputConfigurations\n              description: The transport parameters that you want to associate with the media stream.\n        MediaStreamName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: mediaStreamName\n              description: The name of the media stream.\n      description: The definition of a media stream that you want to associate with the source.\n    __listOfAddMediaStreamRequest:\n      type: array\n      items:\n        $ref: '#/components/schemas/AddMediaStreamRequest'\n    AddFlowMediaStreamsRequest:\n      type: object\n      required:\n        - MediaStreams\n      title: AddFlowMediaStreamsRequest\n      properties:\n        MediaStreams:\n          allOf:\n            - $ref: '#/components/schemas/__listOfAddMediaStreamRequest'\n            - xml:\n                name: mediaStreams\n              description: The media streams that you want to add to the flow.\n      description: A request to add media streams to the flow.\n    __listOfMediaStream:\n      type: array\n      items:\n        $ref: '#/components/schemas/MediaStream'\n    __listOfAddOutputRequest:\n      type: array\n      items:\n        $ref: '#/components/schemas/AddOutputRequest'\n    AddFlowOutputsRequest:\n      type: object\n      required:\n        - Outputs\n      title: AddFlowOutputsRequest\n      properties:\n        Outputs:\n          allOf:\n            - $ref: '#/components/schemas/__listOfAddOutputRequest'\n            - xml:\n                name: outputs\n              description: A list of outputs that you want to add.\n      description: A request to add outputs to the specified flow.\n    __listOfOutput:\n      type: array\n      items:\n        $ref: '#/components/schemas/Output'\n    __listOfSetSourceRequest:\n      type: array\n      items:\n        $ref: '#/components/schemas/SetSourceRequest'\n    AddFlowSourcesRequest:\n      type: object\n      required:\n        - Sources\n      title: AddFlowSourcesRequest\n      properties:\n        Sources:\n          allOf:\n            - $ref: '#/components/schemas/__listOfSetSourceRequest'\n            - xml:\n                name: sources\n              description: A list of sources that you want to add.\n      description: A request to add sources to the flow.\n    __listOfSource:\n      type: array\n      items:\n        $ref: '#/components/schemas/Source'\n    __listOfVpcInterfaceRequest:\n      type: array\n      items:\n        $ref: '#/components/schemas/VpcInterfaceRequest'\n    AddFlowVpcInterfacesRequest:\n      type: object\n      required:\n        - VpcInterfaces\n      title: AddFlowVpcInterfacesRequest\n      properties:\n        VpcInterfaces:\n          allOf:\n            - $ref: '#/components/schemas/__listOfVpcInterfaceRequest'\n            - xml:\n                name: vpcInterfaces\n              description: A list of VPC interfaces that you want to add.\n      description: A request to add VPC interfaces to the flow.\n    __listOfVpcInterface:\n      type: array\n      items:\n        $ref: '#/components/schemas/VpcInterface'\n    MediaStreamAttributesRequest:\n      type: object\n      properties:\n        Fmtp:\n          allOf:\n            - $ref: '#/components/schemas/FmtpRequest'\n            - xml:\n                name: fmtp\n              description: The settings that you want to use to define the media stream.\n        Lang:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: lang\n              description: 'The audio language, in a format that is recognized by the receiver.'\n      description: Attributes that are related to the media stream.\n    MediaStreamType:\n      type: string\n      enum:\n        - video\n        - audio\n        - ancillary-data\n    __listOf__string:\n      type: array\n      items:\n        $ref: '#/components/schemas/__string'\n    __listOfMediaStreamOutputConfigurationRequest:\n      type: array\n      items:\n        $ref: '#/components/schemas/MediaStreamOutputConfigurationRequest'\n    VpcInterfaceAttachment:\n      type: object\n      properties:\n        VpcInterfaceName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: vpcInterfaceName\n              description: The name of the VPC interface to use for this output.\n      description: The settings for attaching a VPC interface to an output.\n    Colorimetry:\n      type: string\n      enum:\n        - BT601\n        - BT709\n        - BT2020\n        - BT2100\n        - ST2065-1\n        - ST2065-3\n        - XYZ\n    __listOfGrantEntitlementRequest:\n      type: array\n      items:\n        $ref: '#/components/schemas/GrantEntitlementRequest'\n    FailoverConfig:\n      type: object\n      properties:\n        FailoverMode:\n          allOf:\n            - $ref: '#/components/schemas/FailoverMode'\n            - xml:\n                name: failoverMode\n              description: 'The type of failover you choose for this flow. MERGE combines the source streams into a single stream, allowing graceful recovery from any single-source loss. FAILOVER allows switching between different streams.'\n        RecoveryWindow:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: recoveryWindow\n              description: Search window time to look for dash-7 packets\n        SourcePriority:\n          allOf:\n            - $ref: '#/components/schemas/SourcePriority'\n            - xml:\n                name: sourcePriority\n              description: The priority you want to assign to a source. You can have a primary stream and a backup stream or two equally prioritized streams.\n        State:\n          allOf:\n            - $ref: '#/components/schemas/State'\n            - xml:\n                name: state\n      description: The settings for source failover\n    CreateFlowRequest:\n      type: object\n      required:\n        - Name\n      title: CreateFlowRequest\n      properties:\n        AvailabilityZone:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: availabilityZone\n              description: The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS Region.\n        Entitlements:\n          allOf:\n            - $ref: '#/components/schemas/__listOfGrantEntitlementRequest'\n            - xml:\n                name: entitlements\n              description: The entitlements that you want to grant on a flow.\n        MediaStreams:\n          allOf:\n            - $ref: '#/components/schemas/__listOfAddMediaStreamRequest'\n            - xml:\n                name: mediaStreams\n              description: The media streams that you want to add to the flow. You can associate these media streams with sources and outputs on the flow.\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: name\n              description: The name of the flow.\n        Outputs:\n          allOf:\n            - $ref: '#/components/schemas/__listOfAddOutputRequest'\n            - xml:\n                name: outputs\n              description: The outputs that you want to add to this flow.\n        Source:\n          allOf:\n            - $ref: '#/components/schemas/SetSourceRequest'\n            - xml:\n                name: source\n        SourceFailoverConfig:\n          allOf:\n            - $ref: '#/components/schemas/FailoverConfig'\n            - xml:\n                name: sourceFailoverConfig\n        Sources:\n          allOf:\n            - $ref: '#/components/schemas/__listOfSetSourceRequest'\n            - xml:\n                name: sources\n        VpcInterfaces:\n          allOf:\n            - $ref: '#/components/schemas/__listOfVpcInterfaceRequest'\n            - xml:\n                name: vpcInterfaces\n              description: The VPC interfaces you want on the flow.\n      description: Creates a new flow. The request must include one source. The request optionally can include outputs (up to 50) and entitlements (up to 50).\n    Flow:\n      type: object\n      required:\n        - Status\n        - Entitlements\n        - Outputs\n        - AvailabilityZone\n        - FlowArn\n        - Source\n        - Name\n      properties:\n        AvailabilityZone:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: availabilityZone\n              description: The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: description\n              description: A description of the flow. This value is not used or seen outside of the current AWS Elemental MediaConnect account.\n        EgressIp:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: egressIp\n              description: The IP address from which video will be sent to output destinations.\n        Entitlements:\n          allOf:\n            - $ref: '#/components/schemas/__listOfEntitlement'\n            - xml:\n                name: entitlements\n              description: The entitlements in this flow.\n        FlowArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: flowArn\n              description: 'The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow.'\n        MediaStreams:\n          allOf:\n            - $ref: '#/components/schemas/__listOfMediaStream'\n            - xml:\n                name: mediaStreams\n              description: 'The media streams that are associated with the flow. After you associate a media stream with a source, you can also associate it with outputs on the flow.'\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: name\n              description: The name of the flow.\n        Outputs:\n          allOf:\n            - $ref: '#/components/schemas/__listOfOutput'\n            - xml:\n                name: outputs\n              description: The outputs in this flow.\n        Source:\n          allOf:\n            - $ref: '#/components/schemas/Source'\n            - xml:\n                name: source\n        SourceFailoverConfig:\n          allOf:\n            - $ref: '#/components/schemas/FailoverConfig'\n            - xml:\n                name: sourceFailoverConfig\n        Sources:\n          allOf:\n            - $ref: '#/components/schemas/__listOfSource'\n            - xml:\n                name: sources\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/Status'\n            - xml:\n                name: status\n              description: The current status of the flow.\n        VpcInterfaces:\n          allOf:\n            - $ref: '#/components/schemas/__listOfVpcInterface'\n            - xml:\n                name: vpcInterfaces\n              description: The VPC Interfaces for this flow.\n      description: 'The settings for a flow, including its source, outputs, and entitlements.'\n    DeleteFlowRequest:\n      type: object\n      title: DeleteFlowRequest\n      properties: {}\n    Status:\n      type: string\n      enum:\n        - STANDBY\n        - ACTIVE\n        - UPDATING\n        - DELETING\n        - STARTING\n        - STOPPING\n        - ERROR\n    DescribeFlowRequest:\n      type: object\n      title: DescribeFlowRequest\n      properties: {}\n    Messages:\n      type: object\n      required:\n        - Errors\n      properties:\n        Errors:\n          allOf:\n            - $ref: '#/components/schemas/__listOf__string'\n            - xml:\n                name: errors\n              description: A list of errors that might have been generated from processes on this flow.\n      description: Messages that provide the state of the flow.\n    DescribeOfferingRequest:\n      type: object\n      title: DescribeOfferingRequest\n      properties: {}\n    Offering:\n      type: object\n      required:\n        - CurrencyCode\n        - OfferingArn\n        - OfferingDescription\n        - DurationUnits\n        - Duration\n        - PricePerUnit\n        - ResourceSpecification\n        - PriceUnits\n      properties:\n        CurrencyCode:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: currencyCode\n              description: The type of currency that is used for billing. The currencyCode used for all reservations is US dollars.\n        Duration:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: duration\n              description: The length of time that your reservation would be active.\n        DurationUnits:\n          allOf:\n            - $ref: '#/components/schemas/DurationUnits'\n            - xml:\n                name: durationUnits\n              description: The unit of measurement for the duration of the offering.\n        OfferingArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: offeringArn\n              description: The Amazon Resource Name (ARN) that MediaConnect assigns to the offering.\n        OfferingDescription:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: offeringDescription\n              description: A description of the offering.\n        PricePerUnit:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: pricePerUnit\n              description: 'The cost of a single unit. This value, in combination with priceUnits, makes up the rate.'\n        PriceUnits:\n          allOf:\n            - $ref: '#/components/schemas/PriceUnits'\n            - xml:\n                name: priceUnits\n              description: 'The unit of measurement that is used for billing. This value, in combination with pricePerUnit, makes up the rate.'\n        ResourceSpecification:\n          allOf:\n            - $ref: '#/components/schemas/ResourceSpecification'\n            - xml:\n                name: resourceSpecification\n              description: A definition of the amount of outbound bandwidth that you would be reserving if you purchase the offering.\n      description: A savings plan that reserves a certain amount of outbound bandwidth usage at a discounted rate each month over a period of time.\n    DescribeReservationRequest:\n      type: object\n      title: DescribeReservationRequest\n      properties: {}\n    Reservation:\n      type: object\n      required:\n        - CurrencyCode\n        - ReservationState\n        - OfferingArn\n        - ReservationArn\n        - Start\n        - OfferingDescription\n        - ReservationName\n        - End\n        - Duration\n        - DurationUnits\n        - PricePerUnit\n        - ResourceSpecification\n        - PriceUnits\n      properties:\n        CurrencyCode:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: currencyCode\n              description: The type of currency that is used for billing. The currencyCode used for your reservation is US dollars.\n        Duration:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: duration\n              description: The length of time that this reservation is active. MediaConnect defines this value in the offering.\n        DurationUnits:\n          allOf:\n            - $ref: '#/components/schemas/DurationUnits'\n            - xml:\n                name: durationUnits\n              description: The unit of measurement for the duration of the reservation. MediaConnect defines this value in the offering.\n        End:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: end\n              description: The day and time that this reservation expires. This value is calculated based on the start date and time that you set and the offering's duration.\n        OfferingArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: offeringArn\n              description: The Amazon Resource Name (ARN) that MediaConnect assigns to the offering.\n        OfferingDescription:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: offeringDescription\n              description: A description of the offering. MediaConnect defines this value in the offering.\n        PricePerUnit:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: pricePerUnit\n              description: 'The cost of a single unit. This value, in combination with priceUnits, makes up the rate. MediaConnect defines this value in the offering.'\n        PriceUnits:\n          allOf:\n            - $ref: '#/components/schemas/PriceUnits'\n            - xml:\n                name: priceUnits\n              description: 'The unit of measurement that is used for billing. This value, in combination with pricePerUnit, makes up the rate. MediaConnect defines this value in the offering.'\n        ReservationArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: reservationArn\n              description: The Amazon Resource Name (ARN) that MediaConnect assigns to the reservation when you purchase an offering.\n        ReservationName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: reservationName\n              description: The name that you assigned to the reservation when you purchased the offering.\n        ReservationState:\n          allOf:\n            - $ref: '#/components/schemas/ReservationState'\n            - xml:\n                name: reservationState\n              description: The status of your reservation.\n        ResourceSpecification:\n          allOf:\n            - $ref: '#/components/schemas/ResourceSpecification'\n            - xml:\n                name: resourceSpecification\n              description: A definition of the amount of outbound bandwidth that you would be reserving if you purchase the offering. MediaConnect defines the values that make up the resourceSpecification in the offering.\n        Start:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: start\n              description: The day and time that the reservation becomes active. You set this value when you purchase the offering.\n      description: 'A pricing agreement for a discounted rate for a specific outbound bandwidth that your MediaConnect account will use each month over a specific time period. The discounted rate in the reservation applies to outbound bandwidth for all flows from your account until your account reaches the amount of bandwidth in your reservation. If you use more outbound bandwidth than the agreed upon amount in a single month, the overage is charged at the on-demand rate.'\n    Interface:\n      type: object\n      required:\n        - Name\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: name\n              description: The name of the VPC interface.\n      description: The VPC interface that is used for the media stream associated with the source or output.\n    DestinationConfiguration:\n      type: object\n      required:\n        - DestinationIp\n        - DestinationPort\n        - Interface\n        - OutboundIp\n      properties:\n        DestinationIp:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: destinationIp\n              description: The IP address where contents of the media stream will be sent.\n        DestinationPort:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: destinationPort\n              description: The port to use when the content of the media stream is distributed to the output.\n        Interface:\n          allOf:\n            - $ref: '#/components/schemas/Interface'\n            - xml:\n                name: interface\n              description: The VPC interface that is used for the media stream associated with the output.\n        OutboundIp:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: outboundIp\n              description: The IP address that the receiver requires in order to establish a connection with the flow. This value is represented by the elastic network interface IP address of the VPC. This field applies only to outputs that use the CDI or ST 2110 JPEG XS protocol.\n      description: The transport parameters that are associated with an outbound media stream.\n    InterfaceRequest:\n      type: object\n      required:\n        - Name\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: name\n              description: The name of the VPC interface.\n      description: The VPC interface that you want to designate where the media stream is coming from or going to.\n    DestinationConfigurationRequest:\n      type: object\n      required:\n        - DestinationIp\n        - DestinationPort\n        - Interface\n      properties:\n        DestinationIp:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: destinationIp\n              description: The IP address where you want MediaConnect to send contents of the media stream.\n        DestinationPort:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: destinationPort\n              description: The port that you want MediaConnect to use when it distributes the media stream to the output.\n        Interface:\n          allOf:\n            - $ref: '#/components/schemas/InterfaceRequest'\n            - xml:\n                name: interface\n              description: The VPC interface that you want to use for the media stream associated with the output.\n      description: The transport parameters that you want to associate with an outbound media stream.\n    DurationUnits:\n      type: string\n      enum:\n        - MONTHS\n    EncoderProfile:\n      type: string\n      enum:\n        - main\n        - high\n    EncodingName:\n      type: string\n      enum:\n        - jxsv\n        - raw\n        - smpte291\n        - pcm\n    __double:\n      type: number\n      format: double\n    EncodingParameters:\n      type: object\n      required:\n        - EncoderProfile\n        - CompressionFactor\n      properties:\n        CompressionFactor:\n          allOf:\n            - $ref: '#/components/schemas/__double'\n            - xml:\n                name: compressionFactor\n              description: 'A value that is used to calculate compression for an output. The bitrate of the output is calculated as follows: Output bitrate = (1 / compressionFactor) * (source bitrate) This property only applies to outputs that use the ST 2110 JPEG XS protocol, with a flow source that uses the CDI protocol. Valid values are floating point numbers in the range of 3.0 to 10.0, inclusive.'\n        EncoderProfile:\n          allOf:\n            - $ref: '#/components/schemas/EncoderProfile'\n            - xml:\n                name: encoderProfile\n              description: 'A setting on the encoder that drives compression settings. This property only applies to video media streams associated with outputs that use the ST 2110 JPEG XS protocol, with a flow source that uses the CDI protocol.'\n      description: A collection of parameters that determine how MediaConnect will convert the content. These fields only apply to outputs on flows that have a CDI source.\n    EncodingParametersRequest:\n      type: object\n      required:\n        - EncoderProfile\n        - CompressionFactor\n      properties:\n        CompressionFactor:\n          allOf:\n            - $ref: '#/components/schemas/__double'\n            - xml:\n                name: compressionFactor\n              description: 'A value that is used to calculate compression for an output. The bitrate of the output is calculated as follows: Output bitrate = (1 / compressionFactor) * (source bitrate) This property only applies to outputs that use the ST 2110 JPEG XS protocol, with a flow source that uses the CDI protocol. Valid values are floating point numbers in the range of 3.0 to 10.0, inclusive.'\n        EncoderProfile:\n          allOf:\n            - $ref: '#/components/schemas/EncoderProfile'\n            - xml:\n                name: encoderProfile\n              description: 'A setting on the encoder that drives compression settings. This property only applies to video media streams associated with outputs that use the ST 2110 JPEG XS protocol, if at least one source on the flow uses the CDI protocol.'\n      description: A collection of parameters that determine how MediaConnect will convert the content. These fields only apply to outputs on flows that have a CDI source.\n    EntitlementStatus:\n      type: string\n      enum:\n        - ENABLED\n        - DISABLED\n    Entitlement:\n      type: object\n      required:\n        - EntitlementArn\n        - Subscribers\n        - Name\n      properties:\n        DataTransferSubscriberFeePercent:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: dataTransferSubscriberFeePercent\n              description: Percentage from 0-100 of the data transfer cost to be billed to the subscriber.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: description\n              description: A description of the entitlement.\n        Encryption:\n          allOf:\n            - $ref: '#/components/schemas/Encryption'\n            - xml:\n                name: encryption\n              description: The type of encryption that will be used on the output that is associated with this entitlement.\n        EntitlementArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: entitlementArn\n              description: The ARN of the entitlement.\n        EntitlementStatus:\n          allOf:\n            - $ref: '#/components/schemas/EntitlementStatus'\n            - xml:\n                name: entitlementStatus\n              description: An indication of whether the entitlement is enabled.\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: name\n              description: The name of the entitlement.\n        Subscribers:\n          allOf:\n            - $ref: '#/components/schemas/__listOf__string'\n            - xml:\n                name: subscribers\n              description: The AWS account IDs that you want to share your content with. The receiving accounts (subscribers) will be allowed to create their own flow using your content as the source.\n      description: The settings for a flow entitlement.\n    __listOfEntitlement:\n      type: array\n      items:\n        $ref: '#/components/schemas/Entitlement'\n    Source:\n      type: object\n      required:\n        - SourceArn\n        - Name\n      properties:\n        DataTransferSubscriberFeePercent:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: dataTransferSubscriberFeePercent\n              description: Percentage from 0-100 of the data transfer cost to be billed to the subscriber.\n        Decryption:\n          allOf:\n            - $ref: '#/components/schemas/Encryption'\n            - xml:\n                name: decryption\n              description: The type of encryption that is used on the content ingested from this source.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: description\n              description: A description for the source. This value is not used or seen outside of the current AWS Elemental MediaConnect account.\n        EntitlementArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: entitlementArn\n              description: The ARN of the entitlement that allows you to subscribe to content that comes from another AWS account. The entitlement is set by the content originator and the ARN is generated as part of the originator's flow.\n        IngestIp:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: ingestIp\n              description: The IP address that the flow will be listening on for incoming content.\n        IngestPort:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: ingestPort\n              description: The port that the flow will be listening on for incoming content.\n        MediaStreamSourceConfigurations:\n          allOf:\n            - $ref: '#/components/schemas/__listOfMediaStreamSourceConfiguration'\n            - xml:\n                name: mediaStreamSourceConfigurations\n              description: 'The media streams that are associated with the source, and the parameters for those associations.'\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: name\n              description: The name of the source.\n        SourceArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: sourceArn\n              description: The ARN of the source.\n        Transport:\n          allOf:\n            - $ref: '#/components/schemas/Transport'\n            - xml:\n                name: transport\n              description: Attributes related to the transport stream that are used in the source.\n        VpcInterfaceName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: vpcInterfaceName\n              description: The name of the VPC interface that is used for this source.\n        WhitelistCidr:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: whitelistCidr\n              description: 'The range of IP addresses that should be allowed to contribute content to your source. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.'\n      description: The settings for the source of the flow.\n    Range:\n      type: string\n      enum:\n        - NARROW\n        - FULL\n        - FULLPROTECT\n    ScanMode:\n      type: string\n      enum:\n        - progressive\n        - interlace\n        - progressive-segmented-frame\n    Tcs:\n      type: string\n      enum:\n        - SDR\n        - PQ\n        - HLG\n        - LINEAR\n        - BT2100LINPQ\n        - BT2100LINHLG\n        - ST2065-1\n        - ST428-1\n        - DENSITY\n    Fmtp:\n      type: object\n      properties:\n        ChannelOrder:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: channelOrder\n              description: The format of the audio channel.\n        Colorimetry:\n          allOf:\n            - $ref: '#/components/schemas/Colorimetry'\n            - xml:\n                name: colorimetry\n              description: The format that is used for the representation of color.\n        ExactFramerate:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: exactFramerate\n              description: 'The frame rate for the video stream, in frames/second. For example: 60000/1001. If you specify a whole number, MediaConnect uses a ratio of N/1. For example, if you specify 60, MediaConnect uses 60/1 as the exactFramerate.'\n        Par:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: par\n              description: The pixel aspect ratio (PAR) of the video.\n        Range:\n          allOf:\n            - $ref: '#/components/schemas/Range'\n            - xml:\n                name: range\n              description: The encoding range of the video.\n        ScanMode:\n          allOf:\n            - $ref: '#/components/schemas/ScanMode'\n            - xml:\n                name: scanMode\n              description: The type of compression that was used to smooth the video’s appearance\n        Tcs:\n          allOf:\n            - $ref: '#/components/schemas/Tcs'\n            - xml:\n                name: tcs\n              description: The transfer characteristic system (TCS) that is used in the video.\n      description: FMTP\n    GrantFlowEntitlementsRequest:\n      type: object\n      required:\n        - Entitlements\n      title: GrantFlowEntitlementsRequest\n      properties:\n        Entitlements:\n          allOf:\n            - $ref: '#/components/schemas/__listOfGrantEntitlementRequest'\n            - xml:\n                name: entitlements\n              description: The list of entitlements that you want to grant.\n      description: A request to grant entitlements on a flow.\n    InputConfiguration:\n      type: object\n      required:\n        - InputPort\n        - InputIp\n        - Interface\n      properties:\n        InputIp:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: inputIp\n              description: The IP address that the flow listens on for incoming content for a media stream.\n        InputPort:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: inputPort\n              description: The port that the flow listens on for an incoming media stream.\n        Interface:\n          allOf:\n            - $ref: '#/components/schemas/Interface'\n            - xml:\n                name: interface\n              description: The VPC interface where the media stream comes in from.\n      description: The transport parameters that are associated with an incoming media stream.\n    InputConfigurationRequest:\n      type: object\n      required:\n        - InputPort\n        - Interface\n      properties:\n        InputPort:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: inputPort\n              description: The port that you want the flow to listen on for an incoming media stream.\n        Interface:\n          allOf:\n            - $ref: '#/components/schemas/InterfaceRequest'\n            - xml:\n                name: interface\n              description: The VPC interface that you want to use for the incoming media stream.\n      description: The transport parameters that you want to associate with an incoming media stream.\n    MaxResults:\n      type: integer\n      minimum: 1\n      maximum: 1000\n    ListEntitlementsRequest:\n      type: object\n      title: ListEntitlementsRequest\n      properties: {}\n    __listOfListedEntitlement:\n      type: array\n      items:\n        $ref: '#/components/schemas/ListedEntitlement'\n    ListFlowsRequest:\n      type: object\n      title: ListFlowsRequest\n      properties: {}\n    __listOfListedFlow:\n      type: array\n      items:\n        $ref: '#/components/schemas/ListedFlow'\n    ListOfferingsRequest:\n      type: object\n      title: ListOfferingsRequest\n      properties: {}\n    __listOfOffering:\n      type: array\n      items:\n        $ref: '#/components/schemas/Offering'\n    ListReservationsRequest:\n      type: object\n      title: ListReservationsRequest\n      properties: {}\n    __listOfReservation:\n      type: array\n      items:\n        $ref: '#/components/schemas/Reservation'\n    ListTagsForResourceRequest:\n      type: object\n      title: ListTagsForResourceRequest\n      properties: {}\n    __mapOf__string:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/__string'\n    ListedEntitlement:\n      type: object\n      required:\n        - EntitlementArn\n        - EntitlementName\n      properties:\n        DataTransferSubscriberFeePercent:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: dataTransferSubscriberFeePercent\n              description: Percentage from 0-100 of the data transfer cost to be billed to the subscriber.\n        EntitlementArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: entitlementArn\n              description: The ARN of the entitlement.\n        EntitlementName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: entitlementName\n              description: The name of the entitlement.\n      description: An entitlement that has been granted to you from other AWS accounts.\n    SourceType:\n      type: string\n      enum:\n        - OWNED\n        - ENTITLED\n    ListedFlow:\n      type: object\n      required:\n        - Status\n        - Description\n        - SourceType\n        - AvailabilityZone\n        - FlowArn\n        - Name\n      properties:\n        AvailabilityZone:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: availabilityZone\n              description: The Availability Zone that the flow was created in.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: description\n              description: A description of the flow.\n        FlowArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: flowArn\n              description: The ARN of the flow.\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: name\n              description: The name of the flow.\n        SourceType:\n          allOf:\n            - $ref: '#/components/schemas/SourceType'\n            - xml:\n                name: sourceType\n              description: The type of source. This value is either owned (originated somewhere other than an AWS Elemental MediaConnect flow owned by another AWS account) or entitled (originated at an AWS Elemental MediaConnect flow owned by another AWS account).\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/Status'\n            - xml:\n                name: status\n              description: The current status of the flow.\n      description: 'Provides a summary of a flow, including its ARN, Availability Zone, and source type.'\n    MediaStreamAttributes:\n      type: object\n      required:\n        - Fmtp\n      properties:\n        Fmtp:\n          allOf:\n            - $ref: '#/components/schemas/Fmtp'\n            - xml:\n                name: fmtp\n              description: A set of parameters that define the media stream.\n        Lang:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: lang\n              description: 'The audio language, in a format that is recognized by the receiver.'\n      description: Attributes that are related to the media stream.\n    MediaStream:\n      type: object\n      required:\n        - MediaStreamType\n        - MediaStreamId\n        - MediaStreamName\n        - Fmt\n      properties:\n        Attributes:\n          allOf:\n            - $ref: '#/components/schemas/MediaStreamAttributes'\n            - xml:\n                name: attributes\n              description: Attributes that are related to the media stream.\n        ClockRate:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: clockRate\n              description: The sample rate for the stream. This value is measured in Hz.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: description\n              description: A description that can help you quickly identify what your media stream is used for.\n        Fmt:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: fmt\n              description: 'The format type number (sometimes referred to as RTP payload type) of the media stream. MediaConnect assigns this value to the media stream. For ST 2110 JPEG XS outputs, you need to provide this value to the receiver.'\n        MediaStreamId:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: mediaStreamId\n              description: A unique identifier for the media stream.\n        MediaStreamName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: mediaStreamName\n              description: A name that helps you distinguish one media stream from another.\n        MediaStreamType:\n          allOf:\n            - $ref: '#/components/schemas/MediaStreamType'\n            - xml:\n                name: mediaStreamType\n              description: The type of media stream.\n        VideoFormat:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: videoFormat\n              description: The resolution of the video.\n      description: 'A single track or stream of media that contains video, audio, or ancillary data. After you add a media stream to a flow, you can associate it with sources and outputs on that flow, as long as they use the CDI protocol or the ST 2110 JPEG XS protocol. Each source or output can consist of one or many media streams.'\n    __listOfDestinationConfiguration:\n      type: array\n      items:\n        $ref: '#/components/schemas/DestinationConfiguration'\n    MediaStreamOutputConfiguration:\n      type: object\n      required:\n        - MediaStreamName\n        - EncodingName\n      properties:\n        DestinationConfigurations:\n          allOf:\n            - $ref: '#/components/schemas/__listOfDestinationConfiguration'\n            - xml:\n                name: destinationConfigurations\n              description: The transport parameters that are associated with each outbound media stream.\n        EncodingName:\n          allOf:\n            - $ref: '#/components/schemas/EncodingName'\n            - xml:\n                name: encodingName\n              description: 'The format that was used to encode the data. For ancillary data streams, set the encoding name to smpte291. For audio streams, set the encoding name to pcm. For video, 2110 streams, set the encoding name to raw. For video, JPEG XS streams, set the encoding name to jxsv.'\n        EncodingParameters:\n          allOf:\n            - $ref: '#/components/schemas/EncodingParameters'\n            - xml:\n                name: encodingParameters\n              description: Encoding parameters\n        MediaStreamName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: mediaStreamName\n              description: The name of the media stream.\n      description: 'The media stream that is associated with the output, and the parameters for that association.'\n    __listOfDestinationConfigurationRequest:\n      type: array\n      items:\n        $ref: '#/components/schemas/DestinationConfigurationRequest'\n    __listOfInputConfiguration:\n      type: array\n      items:\n        $ref: '#/components/schemas/InputConfiguration'\n    MediaStreamSourceConfiguration:\n      type: object\n      required:\n        - MediaStreamName\n        - EncodingName\n      properties:\n        EncodingName:\n          allOf:\n            - $ref: '#/components/schemas/EncodingName'\n            - xml:\n                name: encodingName\n              description: 'The format that was used to encode the data. For ancillary data streams, set the encoding name to smpte291. For audio streams, set the encoding name to pcm. For video, 2110 streams, set the encoding name to raw. For video, JPEG XS streams, set the encoding name to jxsv.'\n        InputConfigurations:\n          allOf:\n            - $ref: '#/components/schemas/__listOfInputConfiguration'\n            - xml:\n                name: inputConfigurations\n              description: The transport parameters that are associated with an incoming media stream.\n        MediaStreamName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: mediaStreamName\n              description: The name of the media stream.\n      description: 'The media stream that is associated with the source, and the parameters for that association.'\n    __listOfInputConfigurationRequest:\n      type: array\n      items:\n        $ref: '#/components/schemas/InputConfigurationRequest'\n    NetworkInterfaceType:\n      type: string\n      enum:\n        - ena\n        - efa\n    PriceUnits:\n      type: string\n      enum:\n        - HOURLY\n    ResourceSpecification:\n      type: object\n      required:\n        - ResourceType\n      properties:\n        ReservedBitrate:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: reservedBitrate\n              description: The amount of outbound bandwidth that is discounted in the offering.\n        ResourceType:\n          allOf:\n            - $ref: '#/components/schemas/ResourceType'\n            - xml:\n                name: resourceType\n              description: The type of resource and the unit that is being billed for.\n      description: 'A definition of what is being billed for, including the type and amount.'\n    __listOfMediaStreamOutputConfiguration:\n      type: array\n      items:\n        $ref: '#/components/schemas/MediaStreamOutputConfiguration'\n    Transport:\n      type: object\n      required:\n        - Protocol\n      properties:\n        CidrAllowList:\n          allOf:\n            - $ref: '#/components/schemas/__listOf__string'\n            - xml:\n                name: cidrAllowList\n              description: 'The range of IP addresses that should be allowed to initiate output requests to this flow. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.'\n        MaxBitrate:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: maxBitrate\n              description: 'The smoothing max bitrate for RIST, RTP, and RTP-FEC streams.'\n        MaxLatency:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: maxLatency\n              description: The maximum latency in milliseconds. This parameter applies only to RIST-based and Zixi-based streams.\n        MaxSyncBuffer:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: maxSyncBuffer\n              description: The size of the buffer (in milliseconds) to use to sync incoming source data.\n        MinLatency:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: minLatency\n              description: 'The minimum latency in milliseconds for SRT-based streams. In streams that use the SRT protocol, this value that you set on your MediaConnect source or output represents the minimal potential latency of that connection. The latency of the stream is set to the highest number between the sender’s minimum latency and the receiver’s minimum latency.'\n        Protocol:\n          allOf:\n            - $ref: '#/components/schemas/Protocol'\n            - xml:\n                name: protocol\n              description: The protocol that is used by the source or output.\n        RemoteId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: remoteId\n              description: The remote ID for the Zixi-pull stream.\n        SmoothingLatency:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: smoothingLatency\n              description: 'The smoothing latency in milliseconds for RIST, RTP, and RTP-FEC streams.'\n        StreamId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: streamId\n              description: The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.\n      description: Attributes related to the transport stream that are used in a source or output.\n    Output:\n      type: object\n      required:\n        - OutputArn\n        - Name\n      properties:\n        DataTransferSubscriberFeePercent:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: dataTransferSubscriberFeePercent\n              description: Percentage from 0-100 of the data transfer cost to be billed to the subscriber.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: description\n              description: A description of the output.\n        Destination:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: destination\n              description: The address where you want to send the output.\n        Encryption:\n          allOf:\n            - $ref: '#/components/schemas/Encryption'\n            - xml:\n                name: encryption\n              description: 'The type of key used for the encryption. If no keyType is provided, the service will use the default setting (static-key).'\n        EntitlementArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: entitlementArn\n              description: The ARN of the entitlement on the originator''s flow. This value is relevant only on entitled flows.\n        ListenerAddress:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: listenerAddress\n              description: 'The IP address that the receiver requires in order to establish a connection with the flow. For public networking, the ListenerAddress is represented by the elastic IP address of the flow. For private networking, the ListenerAddress is represented by the elastic network interface IP address of the VPC. This field applies only to outputs that use the Zixi pull or SRT listener protocol.'\n        MediaLiveInputArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: mediaLiveInputArn\n              description: The input ARN of the AWS Elemental MediaLive channel. This parameter is relevant only for outputs that were added by creating a MediaLive input.\n        MediaStreamOutputConfigurations:\n          allOf:\n            - $ref: '#/components/schemas/__listOfMediaStreamOutputConfiguration'\n            - xml:\n                name: mediaStreamOutputConfigurations\n              description: The configuration for each media stream that is associated with the output.\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: name\n              description: The name of the output. This value must be unique within the current flow.\n        OutputArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: outputArn\n              description: The ARN of the output.\n        Port:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: port\n              description: The port to use when content is distributed to this output.\n        Transport:\n          allOf:\n            - $ref: '#/components/schemas/Transport'\n            - xml:\n                name: transport\n              description: Attributes related to the transport stream that are used in the output.\n        VpcInterfaceAttachment:\n          allOf:\n            - $ref: '#/components/schemas/VpcInterfaceAttachment'\n            - xml:\n                name: vpcInterfaceAttachment\n              description: The name of the VPC interface attachment to use for this output.\n      description: The settings for an output.\n    PurchaseOfferingRequest:\n      type: object\n      required:\n        - Start\n        - ReservationName\n      title: PurchaseOfferingRequest\n      properties:\n        ReservationName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: reservationName\n              description: The name that you want to use for the reservation.\n        Start:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: start\n              description: 'The date and time that you want the reservation to begin, in Coordinated Universal Time (UTC). You can specify any date and time between 12:00am on the first day of the current month to the current time on today''s date, inclusive. Specify the start in a 24-hour notation. Use the following format: YYYY-MM-DDTHH:mm:SSZ, where T and Z are literal characters. For example, to specify 11:30pm on March 5, 2020, enter 2020-03-05T23:30:00Z.'\n      description: A request to purchase a offering.\n    RemoveFlowMediaStreamRequest:\n      type: object\n      title: RemoveFlowMediaStreamRequest\n      properties: {}\n    RemoveFlowOutputRequest:\n      type: object\n      title: RemoveFlowOutputRequest\n      properties: {}\n    RemoveFlowSourceRequest:\n      type: object\n      title: RemoveFlowSourceRequest\n      properties: {}\n    RemoveFlowVpcInterfaceRequest:\n      type: object\n      title: RemoveFlowVpcInterfaceRequest\n      properties: {}\n    ReservationState:\n      type: string\n      enum:\n        - ACTIVE\n        - EXPIRED\n        - PROCESSING\n        - CANCELED\n    ResourceType:\n      type: string\n      enum:\n        - Mbps_Outbound_Bandwidth\n    RevokeFlowEntitlementRequest:\n      type: object\n      title: RevokeFlowEntitlementRequest\n      properties: {}\n    __listOfMediaStreamSourceConfiguration:\n      type: array\n      items:\n        $ref: '#/components/schemas/MediaStreamSourceConfiguration'\n    StartFlowRequest:\n      type: object\n      title: StartFlowRequest\n      properties: {}\n    StopFlowRequest:\n      type: object\n      title: StopFlowRequest\n      properties: {}\n    TagResourceRequest:\n      type: object\n      required:\n        - Tags\n      title: TagResourceRequest\n      properties:\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/__mapOf__string'\n            - xml:\n                name: tags\n              description: 'A map from tag keys to values. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.'\n      description: 'The tags to add to the resource. A tag is an array of key-value pairs. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.'\n    UntagResourceRequest:\n      type: object\n      title: UntagResourceRequest\n      properties: {}\n    UpdateEncryption:\n      type: object\n      properties:\n        Algorithm:\n          allOf:\n            - $ref: '#/components/schemas/Algorithm'\n            - xml:\n                name: algorithm\n              description: 'The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).'\n        ConstantInitializationVector:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: constantInitializationVector\n              description: 'A 128-bit, 16-byte hex value represented by a 32-character string, to be used with the key for encrypting content. This parameter is not valid for static key encryption.'\n        DeviceId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: deviceId\n              description: The value of one of the devices that you configured with your digital rights management (DRM) platform key provider. This parameter is required for SPEKE encryption and is not valid for static key encryption.\n        KeyType:\n          allOf:\n            - $ref: '#/components/schemas/KeyType'\n            - xml:\n                name: keyType\n              description: 'The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).'\n        Region:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: region\n              description: The AWS Region that the API Gateway proxy endpoint was created in. This parameter is required for SPEKE encryption and is not valid for static key encryption.\n        ResourceId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: resourceId\n              description: An identifier for the content. The service sends this value to the key server to identify the current endpoint. The resource ID is also known as the content ID. This parameter is required for SPEKE encryption and is not valid for static key encryption.\n        RoleArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: roleArn\n              description: The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).\n        SecretArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: secretArn\n              description: The ARN of the secret that you created in AWS Secrets Manager to store the encryption key. This parameter is required for static key encryption and is not valid for SPEKE encryption.\n        Url:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: url\n              description: The URL from the API Gateway proxy that you set up to talk to your key server. This parameter is required for SPEKE encryption and is not valid for static key encryption.\n      description: Information about the encryption of the flow.\n    UpdateFailoverConfig:\n      type: object\n      properties:\n        FailoverMode:\n          allOf:\n            - $ref: '#/components/schemas/FailoverMode'\n            - xml:\n                name: failoverMode\n              description: 'The type of failover you choose for this flow. MERGE combines the source streams into a single stream, allowing graceful recovery from any single-source loss. FAILOVER allows switching between different streams.'\n        RecoveryWindow:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: recoveryWindow\n              description: Recovery window time to look for dash-7 packets\n        SourcePriority:\n          allOf:\n            - $ref: '#/components/schemas/SourcePriority'\n            - xml:\n                name: sourcePriority\n              description: The priority you want to assign to a source. You can have a primary stream and a backup stream or two equally prioritized streams.\n        State:\n          allOf:\n            - $ref: '#/components/schemas/State'\n            - xml:\n                name: state\n      description: The settings for source failover\n    UpdateFlowEntitlementRequest:\n      type: object\n      title: UpdateFlowEntitlementRequest\n      properties:\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: description\n              description: A description of the entitlement. This description appears only on the AWS Elemental MediaConnect console and will not be seen by the subscriber or end user.\n        Encryption:\n          allOf:\n            - $ref: '#/components/schemas/UpdateEncryption'\n            - xml:\n                name: encryption\n              description: The type of encryption that will be used on the output associated with this entitlement.\n        EntitlementStatus:\n          allOf:\n            - $ref: '#/components/schemas/EntitlementStatus'\n            - xml:\n                name: entitlementStatus\n              description: 'An indication of whether you want to enable the entitlement to allow access, or disable it to stop streaming content to the subscriber’s flow temporarily. If you don’t specify the entitlementStatus field in your request, MediaConnect leaves the value unchanged.'\n        Subscribers:\n          allOf:\n            - $ref: '#/components/schemas/__listOf__string'\n            - xml:\n                name: subscribers\n              description: The AWS account IDs that you want to share your content with. The receiving accounts (subscribers) will be allowed to create their own flow using your content as the source.\n      description: The entitlement fields that you want to update.\n    UpdateFlowMediaStreamRequest:\n      type: object\n      title: UpdateFlowMediaStreamRequest\n      properties:\n        Attributes:\n          allOf:\n            - $ref: '#/components/schemas/MediaStreamAttributesRequest'\n            - xml:\n                name: attributes\n              description: The attributes that you want to assign to the media stream.\n        ClockRate:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: clockRate\n              description: 'The sample rate (in Hz) for the stream. If the media stream type is video or ancillary data, set this value to 90000. If the media stream type is audio, set this value to either 48000 or 96000.'\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: description\n              description: Description\n        MediaStreamType:\n          allOf:\n            - $ref: '#/components/schemas/MediaStreamType'\n            - xml:\n                name: mediaStreamType\n              description: The type of media stream.\n        VideoFormat:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: videoFormat\n              description: The resolution of the video.\n      description: The fields that you want to update in the media stream.\n    UpdateFlowOutputRequest:\n      type: object\n      title: UpdateFlowOutputRequest\n      properties:\n        CidrAllowList:\n          allOf:\n            - $ref: '#/components/schemas/__listOf__string'\n            - xml:\n                name: cidrAllowList\n              description: 'The range of IP addresses that should be allowed to initiate output requests to this flow. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.'\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: description\n              description: A description of the output. This description appears only on the AWS Elemental MediaConnect console and will not be seen by the end user.\n        Destination:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: destination\n              description: The IP address where you want to send the output.\n        Encryption:\n          allOf:\n            - $ref: '#/components/schemas/UpdateEncryption'\n            - xml:\n                name: encryption\n              description: 'The type of key used for the encryption. If no keyType is provided, the service will use the default setting (static-key).'\n        MaxLatency:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: maxLatency\n              description: The maximum latency in milliseconds for Zixi-based streams.\n        MediaStreamOutputConfigurations:\n          allOf:\n            - $ref: '#/components/schemas/__listOfMediaStreamOutputConfigurationRequest'\n            - xml:\n                name: mediaStreamOutputConfigurations\n              description: 'The media streams that are associated with the output, and the parameters for those associations.'\n        MinLatency:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: minLatency\n              description: 'The minimum latency in milliseconds for SRT-based streams. In streams that use the SRT protocol, this value that you set on your MediaConnect source or output represents the minimal potential latency of that connection. The latency of the stream is set to the highest number between the sender’s minimum latency and the receiver’s minimum latency.'\n        Port:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: port\n              description: The port to use when content is distributed to this output.\n        Protocol:\n          allOf:\n            - $ref: '#/components/schemas/Protocol'\n            - xml:\n                name: protocol\n              description: The protocol to use for the output.\n        RemoteId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: remoteId\n              description: The remote ID for the Zixi-pull stream.\n        SmoothingLatency:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: smoothingLatency\n              description: 'The smoothing latency in milliseconds for RIST, RTP, and RTP-FEC streams.'\n        StreamId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: streamId\n              description: The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.\n        VpcInterfaceAttachment:\n          allOf:\n            - $ref: '#/components/schemas/VpcInterfaceAttachment'\n            - xml:\n                name: vpcInterfaceAttachment\n              description: The name of the VPC interface attachment to use for this output.\n      description: The fields that you want to update in the output.\n    UpdateFlowRequest:\n      type: object\n      title: UpdateFlowRequest\n      properties:\n        SourceFailoverConfig:\n          allOf:\n            - $ref: '#/components/schemas/UpdateFailoverConfig'\n            - xml:\n                name: sourceFailoverConfig\n      description: A request to update flow.\n    UpdateFlowSourceRequest:\n      type: object\n      title: UpdateFlowSourceRequest\n      properties:\n        Decryption:\n          allOf:\n            - $ref: '#/components/schemas/UpdateEncryption'\n            - xml:\n                name: decryption\n              description: The type of encryption used on the content ingested from this source.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: description\n              description: A description for the source. This value is not used or seen outside of the current AWS Elemental MediaConnect account.\n        EntitlementArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: entitlementArn\n              description: 'The ARN of the entitlement that allows you to subscribe to this flow. The entitlement is set by the flow originator, and the ARN is generated as part of the originator''s flow.'\n        IngestPort:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: ingestPort\n              description: The port that the flow will be listening on for incoming content.\n        MaxBitrate:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: maxBitrate\n              description: 'The smoothing max bitrate for RIST, RTP, and RTP-FEC streams.'\n        MaxLatency:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: maxLatency\n              description: The maximum latency in milliseconds. This parameter applies only to RIST-based and Zixi-based streams.\n        MaxSyncBuffer:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: maxSyncBuffer\n              description: The size of the buffer (in milliseconds) to use to sync incoming source data.\n        MediaStreamSourceConfigurations:\n          allOf:\n            - $ref: '#/components/schemas/__listOfMediaStreamSourceConfigurationRequest'\n            - xml:\n                name: mediaStreamSourceConfigurations\n              description: 'The media streams that are associated with the source, and the parameters for those associations.'\n        MinLatency:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: minLatency\n              description: 'The minimum latency in milliseconds for SRT-based streams. In streams that use the SRT protocol, this value that you set on your MediaConnect source or output represents the minimal potential latency of that connection. The latency of the stream is set to the highest number between the sender’s minimum latency and the receiver’s minimum latency.'\n        Protocol:\n          allOf:\n            - $ref: '#/components/schemas/Protocol'\n            - xml:\n                name: protocol\n              description: The protocol that is used by the source.\n        StreamId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: streamId\n              description: The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.\n        VpcInterfaceName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: vpcInterfaceName\n              description: The name of the VPC interface to use for this source.\n        WhitelistCidr:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: whitelistCidr\n              description: 'The range of IP addresses that should be allowed to contribute content to your source. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.'\n      description: A request to update the source of a flow.\n    VpcInterface:\n      type: object\n      required:\n        - NetworkInterfaceType\n        - NetworkInterfaceIds\n        - SubnetId\n        - SecurityGroupIds\n        - RoleArn\n        - Name\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: name\n              description: Immutable and has to be a unique against other VpcInterfaces in this Flow\n        NetworkInterfaceIds:\n          allOf:\n            - $ref: '#/components/schemas/__listOf__string'\n            - xml:\n                name: networkInterfaceIds\n              description: IDs of the network interfaces created in customer's account by MediaConnect.\n        NetworkInterfaceType:\n          allOf:\n            - $ref: '#/components/schemas/NetworkInterfaceType'\n            - xml:\n                name: networkInterfaceType\n              description: The type of network interface.\n        RoleArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: roleArn\n              description: Role Arn MediaConnect can assumes to create ENIs in customer's account\n        SecurityGroupIds:\n          allOf:\n            - $ref: '#/components/schemas/__listOf__string'\n            - xml:\n                name: securityGroupIds\n              description: Security Group IDs to be used on ENI.\n        SubnetId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: subnetId\n              description: Subnet must be in the AZ of the Flow\n      description: The settings for a VPC Source.\nsecurity:\n  - hmac: []\n",
			"canonicalURL": "/github.com/EMResearch/EvoMaster@8378d4a862866198d1e37579c50f98e04429034a/-/blob/core-it/src/test/resources/APIs_guru/amazonaws.com/mediaconnect/2018-11-14/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/EMResearch/EvoMaster/blob/8378d4a862866198d1e37579c50f98e04429034a/core-it/src/test/resources/APIs_guru/amazonaws.com/mediaconnect/2018-11-14/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: at 1:92755: duplicate path: \"/tags/{resourceArn}#tagKeys\""
}