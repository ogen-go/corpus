{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/idaholab/Deep-Lynx"
		},
		"file": {
			"name": "Core.swagger_collection.yaml",
			"size": 0,
			"path": "API Documentation/Core.swagger_collection.yaml",
			"byteSize": 215846,
			"content": "openapi: 3.0.1\ninfo:\n  title: Deep Lynx\n  description: |-\n    The construction of megaprojects has consistently demonstrated challenges for project managers in regard to meeting cost, schedule, and performance requirements. Megaproject construction challenges are common place within megaprojects with many active projects in the United States failing to meet cost and schedule efforts by significant margins. Currently, engineering teams operate in siloed tools and disparate teams where connections across design, procurement, and construction systems are translated manually or over brittle point-to-point integrations. The manual nature of data exchange increases the risk of silent errors in the reactor design, with each silent error cascading across the design. These cascading errors lead to uncontrollable risk during construction, resulting in significant delays and cost overruns. Deep Lynx allows for an integrated platform during design and operations of mega projects.\n\n    The Deep Lynx Core API delivers a few main features.\n\n    1. Provides a set of methods and endpoints for manipulating data in an object oriented database. This allows us to store complex datatypes as records and then to compile them into actual, modifiable objects at run-time. Users can store taxonomies or ontologies in a readable format.\n\n    2. Provides methods for storing and retrieving data in a graph database. This data is structured and validated against the aformentioned object oriented database before storage.\n  contact: {}\n  version: '1.0'\n  license:\n    name: MIT\n    url: 'https://github.com/idaholab/Deep-Lynx/blob/master/LICENSE'\nservers:\n  - url: 'http://localhost:8090'\n    description: Localhost\ntags:\n  - name: Containers\n    description: 'Containers are considered a root object with only users and organizations as potential parents. Containers separate object defintions (as declared in Metatypes) from each other and allow for versioning and access control. '\n  - name: Data Query\n    description: 'Deep Lynx gives you the ability to query data using a GraphQL enabled endpoint. Please see the documentation on GraphQL and run a schema query to learn more about what search methods, query arguments, and fields are available to you.'\n  - name: Graph\n    description: 'These endpoints give you the ability to add nodes and edges to the graph manually as well as perform some basic queries. For all advanced queries, please use the GraphQL query endpoint.'\n  - name: Metatypes\n    description: 'Metatypes only consist of a name and a description. While this might change, the bulk of information about a type should reside in its keys and relationships. Metatypes can be considered as \"classes\" when referring to web ontology.'\n  - name: Metatype Keys\n    description: 'Keys represent a Metatype''s properties, and in the future, its methods. This information allows for a user to modify and compile a complex object type/class and store it in a readable format. Inserted data is then validated against a Metatype''s declared keys/properties.'\n  - name: Metatype Relationships\n    description: Metatype Relationships consist of a name and a description. They define  the relationships available to be instantiated between certain Metatypes  as Metatype Relationship Pairs.\n  - name: Metatype Relationship Keys\n    description: 'Keys represent a Metatype Relationship''s properties, and in the future, its methods. This information allows for a user to modify and compile a complex object type/class relationship and store it in a readable format. Relationships declared between already inserted data will be verified against its declared Metatype Relationship.'\n  - name: Metatype Relationship Pairs\n    description: 'Metatype Relationship pairs represent the actual connection between two Metatypes. Properties of that relationship are attached to the Metatype Relationship. Again, this only represents the connection between two Metatypes.'\n  - name: Data Sources\n    description: 'This set of endpoints allows the user to create and manage data sources. As of 3/26/2020 only the HTTP data source type is supported, and that''s still under construction. Each endpoint functions - but there is no guaranteed functionality with regards to data sources beyond this point.'\n  - name: Data Export\n    description: 'These endpoints have to do with the export functionality. A snapshot of the contained data can be exported to numerous different data sources. However, only Gremlin enabled Graph databases are supported for export.'\n  - name: Users\n    description: 'These endpoints have to do with user functionality. As of 3/26/2020 there are no methods for creating new users - other than enabling and use SAML-ADFS authentication methods. Unless using this method, either request/build a feature or use Basic Authentication configuration.'\n  - name: Data Type Mappings\n    description: These are mappings for taking unknown payloads and mapping them to known data classes and structures prior to storage.\n  - name: Imports\n    description: These endpoints allow for retrieving or deleting the data associated with  a given import from a Data Source.\n  - name: Events\n    description: 'An application may create a Registered Event with Deep Lynx in order to  receive messages from Deep Lynx concerning the event type registered. This  system may be used to receive alerts when other Data Sources have ingested data, a new data source is created, etc.'\n  - name: Authentication\n    description: These endpoints provide users and applications the ability to authenticate with Deep Lynx.\n  - name: Tasks\n    description: 'These endpoints provide functionality for the creation, retrieval, and updating of tasks.'\n  - name: Misc\n    description: ''\nsecurity:\n  - BearerAuth: []\npaths:\n  /containers:\n    get:\n      tags:\n        - Containers\n      summary: List Containers\n      description: List all containers.\n      operationId: ListContainers\n      parameters: []\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListContainerResponse'\n      deprecated: false\n    put:\n      tags:\n        - Containers\n      summary: Container Batch Update\n      description: 'Accepts an array of container objects - will attempt to update all of them in a single transaction. If the update fails, none of them will go through.'\n      operationId: ContainerBatchUpdate\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BatchContainerUpdateRequest'\n        required: true\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchUpdateContainerResponse'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      deprecated: false\n      x-codegen-request-body-name: Body\n    post:\n      tags:\n        - Containers\n      summary: Create Container\n      description: |-\n        Creates a new container object. Containers are the root level object and are considered to contain both the ontology(in form of Metatypes, Metatype Keys, and MetatypeRelationships) as well as the data stored under that ontology.\n\n        Endpoint will accept both a single container request object, or an array of container request objects\n      operationId: CreateContainer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateContainerRequest'\n        required: true\n      responses:\n        '200':\n          description: 'Returns the newly created container if successfull, else the appropriate error. '\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateContainerResponse'\n              examples: {}\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                example-1:\n                  value:\n                    isError: true\n                    error:\n                      errorCode: 0\n                      error: string\n      deprecated: false\n      x-codegen-request-body-name: Body\n      parameters: []\n  '/containers/{container_id}':\n    get:\n      tags:\n        - Containers\n      summary: Retrieve Container\n      description: Retrieve container by ID.\n      operationId: RetrieveContainer\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetContainerResponse'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      deprecated: false\n    put:\n      tags:\n        - Containers\n      summary: Update Container\n      description: Updates the container. This will fail if a container already exists with the proposed updated name.\n      operationId: UpdateContainer\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateContainerRequest'\n        required: true\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateContainerResponse'\n      deprecated: false\n      x-codegen-request-body-name: Body\n    delete:\n      tags:\n        - Containers\n      summary: Archive Container\n      description: 'Archives a Container. This is preferred over deletion as deletion has a cascading effect on the deleted type''s keys, relationships, and relationship keys. When in doubt, archive over delete. We''d rather have tombstones than cremating the type.'\n      operationId: ArchiveContainer\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - schema:\n            type: boolean\n          in: query\n          name: permanent\n          description: 'If true, permanently deletes the container'\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Generic200Response'\n      deprecated: false\n  '/containers/{container_id}/active':\n    post:\n      tags:\n        - Containers\n      summary: Set Container Active\n      description: Unarchives a Container. This is the only way to update this value of a container via API.\n      operationId: SetContainerActive\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Generic200Response'\n      deprecated: false\n  /containers/import:\n    post:\n      tags:\n        - Containers\n      summary: Import Container\n      description: 'An optional query param `dryrun` may be included with a value of `true` in order to return a HTML formatted string explaining the name and description of the container along with the number of metatypes, metatype relationships, and metatype keys to be created. This request uses a form-data body. If the ontology to be imported is being referenced via url, provide the url via a `path` field. Otherwise a local file may be provided. A file takes precedence over a `path` value if both are provided.'\n      operationId: ImportContainer\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ContainerImportRequest'\n            examples:\n              example-1:\n                value:\n                  name: string\n                  description: string\n                  data_versioning_enabled: true\n                  path: string\n                  file: 'http://example.com'\n        required: true\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContainerImportResponse'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      deprecated: false\n      parameters:\n        - schema:\n            type: boolean\n          in: query\n          name: dryrun\n          description: If true returns a description of the container that will be created and its contents.\n  '/containers/import/{container_id}':\n    put:\n      tags:\n        - Containers\n      summary: Update Container Import\n      operationId: UpdateContainerImport\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ContainerImportRequest'\n        required: true\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContainerImportUpdateResponse'\n      deprecated: false\n      description: Updates an existing container via an ontology file.\n    parameters:\n      - schema:\n          type: string\n        name: container_id\n        in: path\n        required: true\n  '/containers/{container_id}/permissions':\n    post:\n      tags:\n        - Containers\n      summary: Repair Container Permissions\n      description: Repairs a container's permission set\n      operationId: RepairContainerPermissions\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Generic200Response'\n              examples:\n                example-1:\n                  value:\n                    value: true\n                    isError: false\n      deprecated: false\n  '/containers/{container_id}/query':\n    post:\n      tags:\n        - Data Query\n      summary: Query Graph\n      description: Query the graph of the specified container using GraphQL. GraphQL queries may be formatted as json or plain text.\n      operationId: QueryGraph\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n          text/plain:\n            schema:\n              type: string\n              example: \"{\\r\\n    nodes {\\r\\n        id\\r\\n        metatype{id}\\r\\n        archived\\r\\n    }\\r\\n}\"\n        required: true\n        description: ''\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: object\n      deprecated: false\n      x-codegen-request-body-name: Body\n  '/containers/{container_id}/graphs/nodes':\n    get:\n      tags:\n        - Graph\n      summary: List Nodes\n      description: List nodes\n      operationId: ListNodes\n      parameters:\n        - name: limit\n          in: query\n          schema:\n            type: integer\n            format: int32\n            minimum: 0\n        - name: offset\n          in: query\n          schema:\n            type: integer\n            format: int32\n            minimum: 0\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - schema:\n            type: string\n          in: query\n          name: transformationID\n          description: Return only nodes for the selected type transformation\n        - schema:\n            type: string\n          in: query\n          name: metatypeID\n          description: Return only nodes for the selected metatype\n        - schema:\n            type: string\n          in: query\n          name: dataSourceID\n          description: Return only nodes for the selected datasource\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListNodesResponse'\n      deprecated: false\n    post:\n      tags:\n        - Graph\n      summary: Create Or Update Nodes\n      description: This endpoint will either create new nodes or update nodes if one with the same original_id is passed.\n      operationId: CreateOrUpdateNodes\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateOrUpdateNodesRequest'\n        required: true\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Generic200Response'\n      deprecated: false\n      x-codegen-request-body-name: Body\n  '/containers/{container_id}/graphs/nodes/{node_id}':\n    get:\n      tags:\n        - Graph\n      summary: Retrieve Node\n      description: Retrieve a single node from storage.\n      operationId: RetrieveNode\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: node_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetNodeResponse'\n      deprecated: false\n    delete:\n      tags:\n        - Graph\n      summary: Archive Node\n      operationId: ArchiveNode\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: node_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Generic200Response'\n      deprecated: false\n      x-codegen-request-body-name: Body\n      description: Archives a node\n    parameters:\n      - schema:\n          type: string\n        name: container_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: node_id\n        in: path\n        required: true\n  '/containers/{container_id}/graphs/nodes/{node_id}/graph':\n    get:\n      tags:\n        - Graph\n      summary: Nth Node Query\n      description: Retrieve n layers of node-edge relationships given a depth n and an origin node id.\n      operationId: RetrieveNthNodes\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: node_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - schema:\n            type: string\n            default: '10'\n          in: query\n          name: depth\n          description: Number of layers deep to query. Defaults to 10.\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                x-examples:\n                  example-1:\n                    value:\n                      - origin_properties:\n                          id: null\n                          name: null\n                          room: null\n                          action: null\n                          object: null\n                          building: null\n                          location: null\n                          condition: null\n                          elevation: null\n                          item_type: null\n                          step_type: null\n                          action_verb: null\n                          description: null\n                          instruction: null\n                          requires_CV: null\n                          requires_IV: null\n                          requires_PC: null\n                          requires_QA: null\n                          applicability: null\n                          hold_point_end: null\n                          additional_info: null\n                          hold_point_start: null\n                          critical_location: null\n                          original_duration: null\n                          step_construct_type: null\n                          responsible_performer: null\n                          critical_supplemental_information: null\n                        edge_properties: {}\n                        destination_properties:\n                          id: null\n                          name: null\n                          value: null\n                          status_by: null\n                          description: null\n                          status_date: null\n                          primary_text: null\n                          creation_date: null\n                          creation_user: null\n                          modified_date: null\n                          modified_user: null\n                        origin_id: '1457'\n                        origin_container_id: '13'\n                        origin_data_source_id: '9'\n                        origin_import_data_id: null\n                        origin_data_staging_id: null\n                        origin_type_mapping_transformation_id: null\n                        origin_original_data_id: null\n                        origin_metadata: null\n                        origin_created_at: '2022-02-23T20:24:18.809Z'\n                        origin_modified_at: '2022-02-23T20:24:18.801Z'\n                        origin_deleted_at: null\n                        origin_created_by: '1'\n                        origin_modified_by: '1'\n                        origin_metatype_name: StepAction\n                        edge_id: '16'\n                        edge_container_id: '13'\n                        edge_relationship_pair_id: '56521'\n                        edge_data_source_id: '9'\n                        edge_import_data_id: null\n                        edge_data_staging_id: null\n                        edge_type_mapping_transformation_id: null\n                        edge_metadata: null\n                        edge_created_at: '2022-02-23T20:26:15.605Z'\n                        edge_modified_at: '2022-02-23T20:26:15.563Z'\n                        edge_deleted_at: null\n                        edge_modified_by: '1'\n                        edge_created_by: '1'\n                        destination_id: '1456'\n                        destination_container_id: '13'\n                        destination_data_source_id: '9'\n                        destination_import_data_id: null\n                        destination_data_staging_id: null\n                        destination_type_mapping_transformation_id: null\n                        destination_original_data_id: null\n                        destination_metadata: null\n                        destination_created_at: '2022-02-23T20:23:43.883Z'\n                        destination_modified_at: '2022-02-23T20:23:43.743Z'\n                        destination_deleted_at: null\n                        destination_created_by: '1'\n                        destination_modified_by: '1'\n                        destination_metatype_name: Status\n                        lvl: 1\n                        metatype_id:\n                          name: ''\n                          description: ''\n                        destination_metatype_id: ''\n                      - origin_properties:\n                          id: null\n                          name: null\n                          value: null\n                          status_by: null\n                          description: null\n                          status_date: null\n                          primary_text: null\n                          creation_date: null\n                          creation_user: null\n                          modified_date: null\n                          modified_user: null\n                        edge_properties: {}\n                        destination_properties:\n                          id: null\n                          name: null\n                          description: null\n                          primary_text: null\n                          creation_date: null\n                          creation_user: null\n                          modified_date: null\n                          modified_user: null\n                        origin_id: '1456'\n                        origin_container_id: '13'\n                        origin_data_source_id: '9'\n                        origin_import_data_id: null\n                        origin_data_staging_id: null\n                        origin_type_mapping_transformation_id: null\n                        origin_original_data_id: null\n                        origin_metadata: null\n                        origin_created_at: '2022-02-23T20:23:43.883Z'\n                        origin_modified_at: '2022-02-23T20:23:43.743Z'\n                        origin_deleted_at: null\n                        origin_created_by: '1'\n                        origin_modified_by: '1'\n                        origin_metatype_name: Status\n                        edge_id: '15'\n                        edge_container_id: '13'\n                        edge_relationship_pair_id: '56545'\n                        edge_data_source_id: '9'\n                        edge_import_data_id: null\n                        edge_data_staging_id: null\n                        edge_type_mapping_transformation_id: null\n                        edge_metadata: null\n                        edge_created_at: '2022-02-23T20:26:00.459Z'\n                        edge_modified_at: '2022-02-23T20:26:00.442Z'\n                        edge_deleted_at: null\n                        edge_modified_by: '1'\n                        edge_created_by: '1'\n                        destination_id: '1454'\n                        destination_container_id: '13'\n                        destination_data_source_id: '9'\n                        destination_import_data_id: null\n                        destination_data_staging_id: null\n                        destination_type_mapping_transformation_id: null\n                        destination_original_data_id: null\n                        destination_metadata: null\n                        destination_created_at: '2022-02-23T20:22:17.699Z'\n                        destination_modified_at: '2022-02-23T20:22:17.697Z'\n                        destination_deleted_at: null\n                        destination_created_by: '1'\n                        destination_modified_by: '1'\n                        destination_metatype_name: DataItem\n                        lvl: 2\n                        metatype_id:\n                          name: ''\n                          description: ''\n                        destination_metatype_id: ''\n                      - origin_properties:\n                          id: null\n                          name: null\n                          description: null\n                          primary_text: null\n                          creation_date: null\n                          creation_user: null\n                          modified_date: null\n                          modified_user: null\n                        edge_properties: {}\n                        destination_properties:\n                          id: null\n                          name: null\n                          count: null\n                          active: null\n                          message: null\n                          equation: null\n                          in_alarm: null\n                          setpoint: null\n                          description: null\n                          primary_text: null\n                          creation_date: null\n                          creation_user: null\n                          modified_date: null\n                          modified_user: null\n                          comparison_operator: null\n                        origin_id: '1454'\n                        origin_container_id: '13'\n                        origin_data_source_id: '9'\n                        origin_import_data_id: null\n                        origin_data_staging_id: null\n                        origin_type_mapping_transformation_id: null\n                        origin_original_data_id: null\n                        origin_metadata: null\n                        origin_created_at: '2022-02-23T20:22:17.699Z'\n                        origin_modified_at: '2022-02-23T20:22:17.697Z'\n                        origin_deleted_at: null\n                        origin_created_by: '1'\n                        origin_modified_by: '1'\n                        origin_metatype_name: DataItem\n                        edge_id: '13'\n                        edge_container_id: '13'\n                        edge_relationship_pair_id: '54060'\n                        edge_data_source_id: '9'\n                        edge_import_data_id: null\n                        edge_data_staging_id: null\n                        edge_type_mapping_transformation_id: null\n                        edge_metadata: null\n                        edge_created_at: '2022-02-23T20:25:07.848Z'\n                        edge_modified_at: '2022-02-23T20:25:07.798Z'\n                        edge_deleted_at: null\n                        edge_modified_by: '1'\n                        edge_created_by: '1'\n                        destination_id: '1450'\n                        destination_container_id: '13'\n                        destination_data_source_id: '9'\n                        destination_import_data_id: null\n                        destination_data_staging_id: null\n                        destination_type_mapping_transformation_id: null\n                        destination_original_data_id: null\n                        destination_metadata: null\n                        destination_created_at: '2022-02-23T20:21:15.340Z'\n                        destination_modified_at: '2022-02-23T20:21:15.319Z'\n                        destination_deleted_at: null\n                        destination_created_by: '1'\n                        destination_modified_by: '1'\n                        destination_metatype_name: Alarm\n                        lvl: 3\n                        metatype_id:\n                          name: ''\n                          description: ''\n                        destination_metatype_id: ''\n                    isError: false\n                properties:\n                  value:\n                    type: array\n                    uniqueItems: true\n                    minItems: 1\n                    items:\n                      type: object\n                      properties:\n                        origin_properties:\n                          type: object\n                          properties:\n                            id: {}\n                            name: {}\n                        edge_properties:\n                          type: object\n                        destination_properties:\n                          type: object\n                          properties:\n                            id: {}\n                            name: {}\n                        origin_id:\n                          type: string\n                          minLength: 1\n                        origin_container_id:\n                          type: string\n                          minLength: 1\n                        origin_data_source_id:\n                          type: string\n                          minLength: 1\n                        origin_import_data_id: {}\n                        origin_data_staging_id: {}\n                        origin_type_mapping_transformation_id: {}\n                        origin_original_data_id: {}\n                        origin_metadata: {}\n                        origin_created_at:\n                          type: string\n                          minLength: 1\n                        origin_modified_at:\n                          type: string\n                          minLength: 1\n                        origin_deleted_at: {}\n                        origin_created_by:\n                          type: string\n                          minLength: 1\n                        origin_modified_by:\n                          type: string\n                          minLength: 1\n                        origin_metatype_name:\n                          type: string\n                          minLength: 1\n                        edge_id:\n                          type: string\n                          minLength: 1\n                        edge_container_id:\n                          type: string\n                          minLength: 1\n                        edge_relationship_pair_id:\n                          type: string\n                          minLength: 1\n                        edge_data_source_id:\n                          type: string\n                          minLength: 1\n                        edge_import_data_id: {}\n                        edge_data_staging_id: {}\n                        edge_type_mapping_transformation_id: {}\n                        edge_metadata: {}\n                        edge_created_at:\n                          type: string\n                          minLength: 1\n                        edge_modified_at:\n                          type: string\n                          minLength: 1\n                        edge_deleted_at: {}\n                        edge_modified_by:\n                          type: string\n                          minLength: 1\n                        edge_created_by:\n                          type: string\n                          minLength: 1\n                        destination_id:\n                          type: string\n                          minLength: 1\n                        destination_container_id:\n                          type: string\n                          minLength: 1\n                        destination_data_source_id:\n                          type: string\n                          minLength: 1\n                        destination_import_data_id: {}\n                        destination_data_staging_id: {}\n                        destination_type_mapping_transformation_id: {}\n                        destination_original_data_id: {}\n                        destination_metadata: {}\n                        destination_created_at:\n                          type: string\n                          minLength: 1\n                        destination_modified_at:\n                          type: string\n                          minLength: 1\n                        destination_deleted_at: {}\n                        destination_created_by:\n                          type: string\n                          minLength: 1\n                        destination_modified_by:\n                          type: string\n                          minLength: 1\n                        destination_metatype_name:\n                          type: string\n                          minLength: 1\n                        lvl:\n                          type: number\n                        metatype_id:\n                          type: object\n                          properties:\n                            name:\n                              type: string\n                            description:\n                              type: string\n                        destination_metatype_id:\n                          type: string\n                      required:\n                        - origin_id\n                        - origin_container_id\n                        - edge_id\n                        - edge_container_id\n                        - destination_id\n                        - destination_container_id\n                        - lvl\n                  isError:\n                    type: boolean\n      deprecated: false\n    parameters:\n      - schema:\n          type: string\n        name: container_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: node_id\n        in: path\n        required: true\n  '/containers/{container_id}/graphs/nodes/metatype/{metatype_id}':\n    get:\n      tags:\n        - Graph\n      summary: List Nodes By Metatype ID\n      description: 'List Nodes, filter by MetatypeID'\n      operationId: ListNodesByMetatypeID\n      parameters:\n        - name: limit\n          in: query\n          schema:\n            type: integer\n            format: int32\n            minimum: 0\n        - name: offset\n          in: query\n          schema:\n            type: integer\n            format: int32\n            minimum: 0\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: metatype_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListNodesByMetatypeResponse'\n      deprecated: false\n  '/containers/{container_id}/graphs/edges':\n    get:\n      tags:\n        - Graph\n      summary: List Edges\n      description: List Edges from storage\n      operationId: ListEdges\n      parameters:\n        - name: limit\n          in: query\n          schema:\n            type: integer\n            format: int32\n            minimum: 0\n        - name: offset\n          in: query\n          schema:\n            type: integer\n            format: int32\n            minimum: 0\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - schema:\n            type: string\n          in: query\n          name: originID\n        - schema:\n            type: string\n          in: query\n          name: destinationID\n        - schema:\n            type: string\n          in: query\n          name: relationshipPairID\n        - schema:\n            type: string\n          in: query\n          name: relationshipPairName\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListEdgesResponse'\n      deprecated: false\n    post:\n      tags:\n        - Graph\n      summary: Create or Update Edges\n      operationId: CreateOrUpdateEdges\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Generic200Response'\n      description: 'This endpoint will attempt to create a connection between two nodes. You can either pass in the node''s Deep Lynx IDs, or the node''s original id, metatype id, and data source id to create these edges.'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateOrUpdateEdgesRequest'\n  '/containers/{container_id}/graphs/edges/{edge_id}':\n    get:\n      tags:\n        - Graph\n      summary: Retrieve Edge\n      operationId: RetrieveEdge\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: edge_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetEdgeResponse'\n      deprecated: false\n      description: Retrieve a single edge\n    delete:\n      tags:\n        - Graph\n      summary: Archive Edge\n      operationId: ArchiveEdge\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: edge_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Generic200Response'\n      deprecated: false\n      x-codegen-request-body-name: Body\n      description: Archives an edge\n  '/containers/{container_id}/graphs/nodes/{node_id}/files':\n    parameters:\n      - schema:\n          type: string\n        name: container_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: node_id\n        in: path\n        required: true\n    get:\n      summary: List Node Files\n      tags:\n        - Graph\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListNodeFiles'\n      operationId: ListNodeFiles\n      description: Lists all attached files for node.\n  '/containers/{container_id}/graphs/nodes/{node_id}/files/{file_id}':\n    parameters:\n      - schema:\n          type: string\n        name: container_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: node_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: file_id\n        in: path\n        required: true\n    put:\n      summary: Attach Node File\n      tags:\n        - Graph\n      operationId: AttachNodeFile\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Generic200Response'\n      description: Attach a file to a node.\n    delete:\n      summary: Detach Node File\n      tags:\n        - Graph\n      operationId: DeleteNodeFile\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Generic200Response'\n      description: Detach file from node\n  '/containers/{container_id}/graphs/edges/{edge_id}/files':\n    parameters:\n      - schema:\n          type: string\n        name: container_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: edge_id\n        in: path\n        required: true\n    get:\n      summary: List Edge Files\n      tags:\n        - Graph\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListEdgeFiles'\n      operationId: ListEdgeFiles\n      description: Lists all attached files for edge.\n  '/containers/{container_id}/graphs/edges/{edge_id}/files/{file_id}':\n    parameters:\n      - schema:\n          type: string\n        name: container_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: file_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: edge_id\n        in: path\n        required: true\n    put:\n      summary: Attach Edge File\n      tags:\n        - Graph\n      operationId: AttachEdgeFile\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Generic200Response'\n      description: Attach a file to an edge.\n    delete:\n      summary: Detach Node File\n      tags:\n        - Graph\n      operationId: DetachNodeFile\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Generic200Response'\n      description: Detach file from an edge.\n  '/containers/{container_id}/metatypes':\n    get:\n      tags:\n        - Metatypes\n      summary: List Metatypes\n      description: 'List all metatypes that the container has access to. '\n      operationId: ListMetatypes\n      parameters:\n        - name: limit\n          in: query\n          schema:\n            type: integer\n            format: int32\n            minimum: 0\n        - name: offset\n          in: query\n          schema:\n            type: integer\n            format: int32\n            minimum: 0\n        - name: name\n          in: query\n          schema:\n            type: string\n          description: Filter metatypes with names that match this pattern\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - schema:\n            type: string\n          in: query\n          name: description\n          description: Filter metatypes with descriptions that match this pattern\n        - schema:\n            type: string\n          in: query\n          name: count\n          description: Set to true to return an integer count of the number of metatypes\n        - schema:\n            type: string\n          in: query\n          name: loadKeys\n          description: Set to false to not return the keys for the selected metatypes (true by default)\n        - schema:\n            type: string\n          in: query\n          name: sortBy\n          description: 'Supply the name of a metatype attribute (name, created_at, etc) by which to sort'\n        - schema:\n            type: string\n          in: query\n          name: sortDesc\n          description: Set true to sort descending\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListMetatypesResponse'\n      deprecated: false\n    post:\n      tags:\n        - Metatypes\n      summary: Create Metatype\n      description: Create a new metatype. Pass in an array for bulk creation.\n      operationId: CreateMetatype\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateMetatypeRequest'\n        required: true\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateMetatypesResponse'\n      deprecated: false\n      x-codegen-request-body-name: Body\n  '/containers/{container_id}/metatypes/{metatype_id}':\n    get:\n      tags:\n        - Metatypes\n      summary: Retrieve Metatype\n      description: Retrieves a single metatype.\n      operationId: RetrieveMetaype\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: metatype_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetMetatypeResponse'\n      deprecated: false\n    put:\n      tags:\n        - Metatypes\n      summary: Update Metatype\n      description: Update a single Metatype in storage. Will fail if the updated name has already been taken.\n      operationId: UpdateMetatype\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: metatype_id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateMetatypeRequest'\n        required: true\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateMetatypeResponse'\n      deprecated: false\n      x-codegen-request-body-name: Body\n    delete:\n      tags:\n        - Metatypes\n      summary: Archive Metatype\n      description: 'Archives the metatype. This is preferred over deletion as deletion has a cascading effect on the deleted metatype''s keys, relationships, and relationship keys. When in doubt, archive over delete. We''d rather have tombstones than cremating the metatype.'\n      operationId: ArchiveMetatype\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: metatype_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Generic200Response'\n      deprecated: false\n    parameters:\n      - schema:\n          type: string\n        name: container_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: metatype_id\n        in: path\n        required: true\n    post:\n      tags:\n        - Metatypes\n      summary: Validate Metatype Properties\n      operationId: ValidateMetatypeProperties\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidateMetatypePropertiesResponse'\n        '500':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      description: Returns any errors associated with the intended properties or keys for a metatype or else the data itself if no errors are present.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ValidateMetatypePropertiesRequest'\n  '/containers/{container_id}/metatypes/{metatype_id}/keys':\n    get:\n      tags:\n        - Metatype Keys\n      summary: List Metatype's Keys\n      description: Lists all currently valid and available keys for the metatype.\n      operationId: ListMetatypesKeys\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: metatype_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListMetatypeKeysResponse'\n      deprecated: false\n    post:\n      tags:\n        - Metatype Keys\n      summary: Create Metatype Key\n      description: |-\n        Creates a new key for a metatype. Keys consist of a unique key name (unique to the metatype only), key type, default values, and allowed values. Of those, only the first two are required.\n\n        The `dataType` field accepts only one of the following values: number, string, date, boolean, enumeration, file. \n\n        The fields `defaultValue` and `options` will only accept an array of the following types: string, boolean, number, float.\n\n        Pass in an array for bulk creation.\n\n        Currently the validation and cardinality functionality of keys are NOT checked at data insertion.\n      operationId: CreateMetatypeKey\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: metatype_id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateMetatypeKeyRequest'\n        required: true\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateMetatypeKeysResponse'\n      deprecated: false\n      x-codegen-request-body-name: Body\n    parameters:\n      - schema:\n          type: string\n        name: container_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: metatype_id\n        in: path\n        required: true\n  '/containers/{container_id}/metatypes/{metatype_id}/keys/{key_id}':\n    get:\n      tags:\n        - Metatype Keys\n      summary: Retrieve Metatype Key\n      description: Retrieve the specified key for the metatype.\n      operationId: RetrieveMetatypeKey\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: metatype_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: key_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetMetatypeKeyResponse'\n      deprecated: false\n    put:\n      tags:\n        - Metatype Keys\n      summary: Update Metatype Key\n      description: Updates a single key for a metatype.\n      operationId: UpdateMetatypeKey\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: metatype_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: key_id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MetatypeKey'\n        required: true\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateMetatypeKeyResponse'\n      deprecated: false\n      x-codegen-request-body-name: Body\n    delete:\n      tags:\n        - Metatype Keys\n      summary: Archive Metatype Key\n      description: Archiving the metatype key prevents any new types from implementing the key. It *does not remove key/value pairs on existing types*. We highly recommend you archive type keys instead of deleting them so that previous data is not affected.\n      operationId: ArchiveMetatypeKey\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: metatype_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: key_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Generic200Response'\n      deprecated: false\n    parameters:\n      - schema:\n          type: string\n        name: container_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: metatype_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: key_id\n        in: path\n        required: true\n  '/containers/{container_id}/metatype_relationships':\n    get:\n      tags:\n        - Metatype Relationships\n      summary: List Metatype Relationships\n      description: List metatype relationships. Describes the connection between two metatypes and acts as a vehicle for relationship specific keys.\n      operationId: ListMetatypeRelationships\n      parameters:\n        - name: limit\n          in: query\n          schema:\n            type: integer\n            format: int32\n            minimum: 0\n        - name: offset\n          in: query\n          schema:\n            type: integer\n            format: int32\n            minimum: 0\n        - name: name\n          in: query\n          schema:\n            type: string\n          description: Filter metatype relationships with names that match this pattern\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - schema:\n            type: string\n          in: query\n          name: description\n          description: Filter metatype relationships with descriptions that match this pattern\n        - schema:\n            type: string\n          in: query\n          name: count\n          description: Set to true to return an integer count of the number of metatype relationships\n        - schema:\n            type: string\n          in: query\n          name: loadKeys\n          description: Set to false to not return the keys for the selected metatype relationships (true by default)\n        - schema:\n            type: string\n          in: query\n          name: sortBy\n          description: 'Supply the name of a metatype relationship attribute (name, created_at, etc) by which to sort'\n        - schema:\n            type: string\n          in: query\n          name: sortDesc\n          description: Set true to sort descending\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListMetatypeRelationshipsResponse'\n      deprecated: false\n    post:\n      tags:\n        - Metatype Relationships\n      summary: Create Metatype Relationship\n      description: |-\n        Create a new metatype relationship. Describes the connection that could exist between two metatypes and acts as a vehicle for relationship specific keys.\n\n        Pass in an array for bulk creation.\n      operationId: CreateMetatypeRelationship\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateMetatypeRelationshipRequest'\n        required: true\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateMetatypeRelationshipsResponse'\n      deprecated: false\n      x-codegen-request-body-name: Body\n  '/containers/{container_id}/metatype_relationships/{relationship_id}':\n    get:\n      tags:\n        - Metatype Relationships\n      summary: Retrieve Metatype Relationship\n      description: Retrieve a single Metatype Relationship.\n      operationId: RetrieveMetatypeRelationship\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: relationship_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetMetatypeRelationshipResponse'\n      deprecated: false\n    put:\n      tags:\n        - Metatype Relationships\n      summary: Update Metatype Relationship\n      operationId: UpdateMetatypeRelationship\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: relationship_id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateMetatypeRelationshipRequest'\n        required: true\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateMetatypeRelationshipResponse'\n      deprecated: false\n      x-codegen-request-body-name: Body\n      description: Updates the specified metatype relationship.\n    delete:\n      tags:\n        - Metatype Relationships\n      summary: Archive Metatype Relationship\n      description: Archive the metatype relationship.\n      operationId: ArchiveMetatypeRelationship\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: relationship_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Generic200Response'\n      deprecated: false\n  '/containers/{container_id}/metatype_relationships/{relationship_id}/keys':\n    get:\n      tags:\n        - Metatype Relationship Keys\n      summary: List Metatype Relationship Keys\n      description: Retrieves all keys for a Metatype Relationship.\n      operationId: ListMetatypeRelationshipKeys\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: relationship_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListMetatypeRelationshipKeysResponse'\n      deprecated: false\n    post:\n      tags:\n        - Metatype Relationship Keys\n      summary: Create Metatype Relationship Key\n      description: |-\n        Creates a new key for a metatype relationship. Keys consist of a unique key name (unique to the metatype relationship), key type, default values, and allowed values. Of those, only the first two are required.\n\n        The `dataType` field accepts only one of the following values: number, string, date, boolean, enumeration, file. \n\n        The fields `defaultValue` and `options` will only accept an array of the following types: string, boolean, number, float.\n      operationId: CreateMetatypeRelationshipKey\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: relationship_id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateMetatypeRelationshipKeyRequest'\n        required: true\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateMetatypeRelationshipKeysResponse'\n      deprecated: false\n      x-codegen-request-body-name: Body\n  '/containers/{container_id}/metatype_relationships/{relationship_id}/keys/{key_id}':\n    get:\n      tags:\n        - Metatype Relationship Keys\n      summary: Retrieve Metatype Relationship Key\n      description: Retrieve a single key for a Metatype Relationship by id.\n      operationId: RetrieveMetatypeRelationshipKey\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: relationship_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: key_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetMetatypeRelationshipKeyResponse'\n      deprecated: false\n    put:\n      tags:\n        - Metatype Relationship Keys\n      summary: Update Metaype Relationship Key\n      description: Updates a Metatype Relationship key. The update must follow the same format as creation.\n      operationId: UpdateMetatypeRelationshipKey\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: relationship_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: key_id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RelationshipKey'\n        required: true\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateMetatypeRelationshipKeyResponse'\n      deprecated: false\n      x-codegen-request-body-name: Body\n    delete:\n      tags:\n        - Metatype Relationship Keys\n      summary: Archive Metatype Relationship Key\n      description: Archives a Metatype Relationship Key.\n      operationId: ArchiveMetatypeRelationshipKey\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: relationship_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: key_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Generic200Response'\n      deprecated: false\n  '/containers/{container_id}/metatype_relationship_pairs':\n    get:\n      tags:\n        - Metatype Relationship Pairs\n      summary: List Metatype Relationship Pairs\n      description: List all Metatype Relationship Pairs for current container.\n      operationId: ListMetatypeRelationshipPairs\n      parameters:\n        - name: limit\n          in: query\n          schema:\n            type: integer\n            format: int32\n            minimum: 0\n        - name: offset\n          in: query\n          schema:\n            type: integer\n            format: int32\n            minimum: 0\n        - name: name\n          in: query\n          schema:\n            type: string\n          description: Filter metatype relationship pairs with names that match this pattern\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - schema:\n            type: string\n          in: query\n          name: archived\n          description: Set to true to include archived metatype relationship pairs\n        - schema:\n            type: string\n          in: query\n          name: count\n          description: Set to true to return an integer count of the number of metatype relationship pairs\n        - schema:\n            type: string\n          in: query\n          name: loadRelationships\n          description: Set to false to not return the relationships for the selected metatype relationship pairs (true by default)\n        - schema:\n            type: string\n          in: query\n          name: destinationID\n          description: Filter destination by metatype ID\n        - schema:\n            type: string\n          in: query\n          name: originID\n          description: Filter origin by metatype ID\n        - schema:\n            type: string\n          in: query\n          name: metatypeID\n          description: Filter by metatype ID\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListMetatypeRelationshipPairsResponse'\n      deprecated: false\n    post:\n      tags:\n        - Metatype Relationship Pairs\n      summary: Create Metatype Relationship Pair\n      description: |-\n        Create a new Metaype Relationship Pair. Describes the connection between two metatypes by connecting them using a Metatype Relationship.\n\n        Pass in an array for bulk creation.\n      operationId: CreateMetatypeRelationshipPair\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateMetatypeRelationshipPairRequest'\n        required: true\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateMetatypeRelationshipPairsResponse'\n      deprecated: false\n      x-codegen-request-body-name: Body\n  '/containers/{container_id}/metatype_relationship_pairs/{pair_id}':\n    get:\n      tags:\n        - Metatype Relationship Pairs\n      summary: Retrieve Metatype Relationship Pair\n      description: Retrieves a single Metatype Relationship Pair.\n      operationId: RetrieveMetatypeRelationshipPair\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: pair_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetMetatypeRelationshipPairResponse'\n      deprecated: false\n    delete:\n      tags:\n        - Metatype Relationship Pairs\n      summary: Archive Metatype Relationship Pair\n      description: Archives a Metatype Relationship Pair.\n      operationId: ArchiveMetatypeRelationshipPair\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: pair_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Generic200Response'\n      deprecated: false\n    put:\n      tags:\n        - Metatype Relationship Pairs\n      summary: Update Metaype Relationship Pair\n      operationId: UpdateMetatypeRelationshipPair\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: pair_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateMetatypeRelationshipPairResponse'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RelationshipPair'\n      description: Updates the specified metatype relationship pair.\n  '/containers/{container_id}/import/datasources':\n    get:\n      tags:\n        - Data Sources\n      summary: List Data Sources\n      operationId: ListDataSources\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListDataSourcesResponse'\n        '201':\n          description: Created\n      deprecated: false\n      description: List the datasources for the container.\n    post:\n      tags:\n        - Data Sources\n      summary: Create Data Source\n      description: 'Create new datasource. Supported data source types are `http`, `standard` (or `manual`), `jazz`, and `aveva`.'\n      operationId: CreateDataSource\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateDataSourceRequest'\n        required: true\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateDataSourcesResponse'\n      deprecated: false\n      x-codegen-request-body-name: Body\n  '/containers/{container_id}/import/datasources/{data_source_id}':\n    get:\n      tags:\n        - Data Sources\n      summary: Retrieve Data Source\n      description: Retrieve a single data source by ID.\n      operationId: RetrieveDataSource\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: data_source_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetDataSourceResponse'\n      deprecated: false\n    put:\n      tags:\n        - Data Sources\n      summary: Set Data Source Configuration\n      description: Updates a data source's configuration in storage. Note that this request body's structure must match that of the data source's adapter type.\n      operationId: SetDataSourceConfiguration\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: data_source_id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateDataSourceConfig'\n        required: true\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateDataSourceResponse'\n      deprecated: false\n      x-codegen-request-body-name: Body\n    delete:\n      tags:\n        - Data Sources\n      summary: Archive Data Source\n      description: 'Archive a data source, with options to permanently remove it (and associated data).'\n      operationId: ArchiveDataSource\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: data_source_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - schema:\n            type: string\n          in: query\n          name: archive\n          description: Set to true to archive the data source.\n        - schema:\n            type: string\n          in: query\n          name: forceDelete\n          description: Set to true to force deletion of the data source.\n        - schema:\n            type: string\n          in: query\n          name: removeData\n          description: Set to true to remove data associated with the data source.\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Generic200Response'\n      deprecated: false\n  '/containers/{container_id}/import/datasources/{data_source_id}/active':\n    post:\n      tags:\n        - Data Sources\n      summary: Set Data Source Active\n      description: Sets a data source active.\n      operationId: SetDataSourceActive\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: data_source_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Generic200Response'\n      deprecated: false\n    delete:\n      tags:\n        - Data Sources\n      summary: Set Data Source Inactive\n      description: Sets a data source inactive.\n      operationId: SetDataSourceInactive\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: data_source_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Generic200Response'\n      deprecated: false\n  '/containers/{container_id}/import/datasources/{data_source_id}/imports':\n    get:\n      tags:\n        - Data Sources\n      summary: List Imports for Data Source\n      operationId: ListImportsForDataSource\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: data_source_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListDataSourceImportsResponse'\n      deprecated: false\n      description: List the imports for the datasource.\n    post:\n      tags:\n        - Data Sources\n      summary: Create Manual Import\n      description: Create a manual import.\n      operationId: CreateManualImport\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: data_source_id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              example:\n                test: test\n        required: true\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateManualImportResponse'\n      deprecated: false\n      x-codegen-request-body-name: Body\n  '/containers/{container_id}/import/datasources/{data_source_id}/files':\n    post:\n      tags:\n        - Data Sources\n      summary: Upload File\n      description: |-\n        Uploads a file and it's metadata to Deep Lynx. All additional fields on the multipart form will be processed and added as metadata to the file upload itself. \n\n        This should be a collection of files and normal fields. If you include a file field and call that \"metadata\" - you can include a normal metadata upload as either a json, csv, or xml file. This data will be processed like a normal import and the files attached to the processed data. Once Deep Lynx generates nodes and edges from that data, any files attached will automatically be attached to the resulting nodes/edges as well.\n\n        NOTE: The metadata file you upload, if json, must be wrapped in an array. If you do not pass in an array of objects, even if it's a single object, then Deep Lynx will attempt to split up your metadata into its parts instead of treating it like a whole object.\n      operationId: UploadFile\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: data_source_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - schema:\n            type: string\n          in: query\n          name: importID\n          description: You can attach the metadata to an existing import if desired.\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UploadFileResponse'\n      deprecated: false\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                file:\n                  type: string\n                  format: binary\n                metadata:\n                  type: string\n                  format: binary\n        description: |-\n          This should be a collection of files and normal fields. If you include a file field and call that \"metadata\" - you can include a normal metadata upload as either a json, csv, or xml file. This data will be processed like a normal import and the files attached to the processed data. Once Deep Lynx generates nodes and edges from that data, any files attached will automatically be attached to the resulting nodes/edges as well.\n\n          NOTE: The metadata file you upload, if json, must be wrapped in an array. If you do not pass in an array of objects, even if it's a single object, then Deep Lynx will attempt to split up your metadata into its parts instead of treating it like a whole object.\n  '/containers/{container_id}/files/{file_id}/download':\n    get:\n      tags:\n        - Data Sources\n      summary: Download File\n      description: Downloads a previously uploaded file.\n      operationId: DownloadFile\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: file_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content: {}\n      deprecated: false\n  '/containers/{container_id}/files/{file_id}':\n    get:\n      tags:\n        - Data Sources\n      summary: Retrieve File\n      description: Get information about a file by ID.\n      operationId: RetrieveFile\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: file_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetFileInfoResponse'\n      deprecated: false\n  '/containers/{container_id}/data/export':\n    post:\n      tags:\n        - Data Export\n      summary: Create Data Export\n      description: Create a new data export with the included configuration. Configuration values may be encrypted depending on the adapter you've choosen. See the readme for the exporters for more information.\n      operationId: CreateDataExport\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateDataExportRequest'\n        required: true\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Generic200Response'\n      deprecated: false\n      x-codegen-request-body-name: Body\n    get:\n      tags:\n        - Data Export\n      summary: List Data Exports\n      operationId: ListDataExports\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListDataExportsResponse'\n      description: List data exports for the container.\n      parameters:\n        - schema:\n            type: boolean\n          in: query\n          name: count\n          description: boolean indicating if the return value should be a count only\n        - schema:\n            type: integer\n            minimum: 0\n          in: query\n          name: limit\n        - schema:\n            type: integer\n            minimum: 0\n          in: query\n          name: offset\n        - schema:\n            type: string\n          in: query\n          name: sortBy\n          description: column to sort results by\n        - schema:\n            type: boolean\n          in: query\n          name: sortDesc\n          description: boolean indicating if results should be in descending order\n    parameters:\n      - schema:\n          type: string\n        name: container_id\n        in: path\n        required: true\n  '/containers/{container_id}/data/export/{export_id}':\n    get:\n      tags:\n        - Data Export\n      summary: Retrieve Data Export\n      description: Fetch a data export record by ID\n      operationId: RetrieveDataExport\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: export_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetDataExportResponse'\n      deprecated: false\n    put:\n      tags:\n        - Data Export\n      summary: Stop Data Export\n      description: Stops a data export. Please note that this just sends a **stop** signal. The application's export adapter determines how to handle the said signal. In some cases the export stopping might not be immediate.\n      operationId: StopDataExport\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: export_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Generic200Response'\n      deprecated: false\n      x-codegen-request-body-name: Body\n    post:\n      tags:\n        - Data Export\n      summary: Start Data Export\n      description: Start or restart a data export by id.\n      operationId: StartDataExport\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: export_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Generic200Response'\n      deprecated: false\n    delete:\n      tags:\n        - Data Export\n      summary: Delete Data Export\n      description: Deletes a data export record. This does not guarantee the export will stop immediately.\n      operationId: DeleteDataExport\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: export_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Generic200Response'\n      deprecated: false\n  /users:\n    get:\n      summary: List Users\n      tags:\n        - Users\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListUsersResponse'\n      operationId: ListUsers\n      description: List users.\n      parameters:\n        - schema:\n            type: boolean\n          in: query\n          name: count\n          description: boolean indicating if the return value should be a count only\n        - schema:\n            type: boolean\n          in: query\n          name: loadKeys\n          description: 'if supplied, the API keys for the user will also be returned'\n        - schema:\n            type: integer\n            minimum: 0\n          in: query\n          name: limit\n        - schema:\n            type: integer\n            minimum: 0\n          in: query\n          name: offset\n        - schema:\n            type: string\n          in: query\n          name: sortBy\n          description: column to sort results by\n        - schema:\n            type: boolean\n          in: query\n          name: sortDesc\n          description: boolean indicating if results should be in descending order\n  '/users/{user_id}':\n    parameters:\n      - schema:\n          type: string\n        name: user_id\n        in: path\n        required: true\n    put:\n      tags:\n        - Users\n      summary: Update User\n      operationId: UpdateUser\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Generic200Response'\n      description: Updates the specified user.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n    delete:\n      tags:\n        - Users\n      summary: Delete User\n      operationId: DeleteUser\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Generic200Response'\n      description: Deletes the specified user.\n  /users/invite:\n    get:\n      summary: Accept Container Invite\n      tags:\n        - Users\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Generic200Response'\n      operationId: AcceptContainerInvite\n      parameters:\n        - schema:\n            type: string\n          in: query\n          name: token\n          description: the token supplied in the container invite\n          required: true\n      description: Accepts a container invite for the current user. The token received in the container invite previously must be attached to this request as a query parameter.\n  /users/invites:\n    get:\n      summary: List Outstanding Invites\n      tags:\n        - Users\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListUserInvitesResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFound404'\n      operationId: ListOutstandingInvites\n      description: Lists the outstanding container invites for the current user.\n  /users/permissions:\n    get:\n      summary: List User Permissions\n      tags:\n        - Users\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListUserPermissionsResponse'\n      operationId: ListUserPermissions\n      description: List permissions for the user.\n  '/containers/{container_id}/users':\n    get:\n      tags:\n        - Users\n      summary: List Users for Container\n      description: List Users for container.\n      operationId: ListUsersForContainer\n      parameters:\n        - name: limit\n          in: query\n          schema:\n            type: integer\n            format: int32\n            minimum: 0\n        - name: offset\n          in: query\n          schema:\n            type: integer\n            format: int32\n            minimum: 0\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListUsersForContainerResponse'\n      deprecated: false\n  '/containers/{container_id}/users/{user_id}':\n    get:\n      tags:\n        - Users\n      summary: Retrieve User\n      description: Retrieve a user by ID\n      operationId: RetrieveUser\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: user_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetUserResponse'\n      deprecated: false\n  '/containers/{container_id}/users/{user_id}/roles':\n    get:\n      tags:\n        - Users\n      summary: List User's Roles\n      description: List Users' roles\n      operationId: ListUsersRoles\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: user_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListUserRoles'\n      deprecated: false\n  '/containers/{container_id}/users/roles':\n    post:\n      tags:\n        - Users\n      summary: Assign User Role\n      description: 'Assign a role to a user, roles must consist of role name and domain'\n      operationId: AssignUserRole\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AssignRoleRequest'\n        required: true\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Generic200Response'\n      deprecated: false\n      x-codegen-request-body-name: Body\n  '/containers/{container_id}/users/invite':\n    get:\n      tags:\n        - Users\n      summary: List Invited Users for Container\n      description: List all invitations to container.\n      operationId: ListInvitedUsersForContainer\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListContainerInvitesResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFound404'\n      deprecated: false\n    post:\n      tags:\n        - Users\n      summary: Invite User to Container\n      description: Create a new user using the username_password identity type.\n      operationId: InviteUserToContainer\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Generic200Response'\n      deprecated: false\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ContainerInvite'\n  '/containers/{container_id}/import/datasources/{data_source_id}/mappings':\n    get:\n      tags:\n        - Data Type Mappings\n      summary: List Data Type Mappings\n      description: Lists data type mappings for the data source\n      operationId: ListDataTypeMappings\n      parameters:\n        - name: limit\n          in: query\n          schema:\n            type: integer\n            minimum: 0\n        - name: offset\n          in: query\n          schema:\n            type: integer\n            minimum: 0\n        - name: needsTransformations\n          in: query\n          description: boolean indicating if the return should consist of only mappings that need transformations\n          schema:\n            type: boolean\n        - name: count\n          in: query\n          description: boolean indicating if the return value should be a count only\n          schema:\n            type: boolean\n        - name: sortBy\n          in: query\n          description: column to sort results by\n          schema:\n            type: string\n        - name: sortDesc\n          in: query\n          description: boolean indicating if results should be in descending order\n          schema:\n            type: boolean\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: data_source_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - schema:\n            type: string\n          in: query\n          name: resultingMetatypeName\n          description: 'if supplied, filters returned transformations by those that produce the resulting metatype'\n        - schema:\n            type: string\n          in: query\n          name: resultingMetatypeRelationshipName\n          description: 'if supplied, filters returned transformations by those that produce the resulting metatype relationship'\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListDataTypeMappingResponse'\n      deprecated: false\n  '/containers/{container_id}/import/datasources/{data_source_id}/mappings/{mapping_id}':\n    get:\n      tags:\n        - Data Type Mappings\n      summary: Retrieve Data Type Mapping\n      description: Retrieve a data type mapping\n      operationId: RetrieveDataTypeMapping\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: data_source_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: mapping_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetDataTypeMappingResponse'\n      deprecated: false\n    delete:\n      tags:\n        - Data Type Mappings\n      summary: Delete Data Type Mapping\n      description: Permanently remove data type mapping.\n      operationId: DeleteDataTypeMapping\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: data_source_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: mapping_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Generic200Response'\n      deprecated: false\n      x-codegen-request-body-name: Body\n    put:\n      tags:\n        - Data Type Mappings\n      summary: Update Data Type Mapping\n      operationId: UpdateDataTypeMapping\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: data_source_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: mapping_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateDataTypeMappingResponse'\n      description: Updates a data type mapping.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TypeMapping'\n    parameters: []\n  '/containers/{container_id}/import/datasources/{data_source_id}/mappings/export':\n    post:\n      tags:\n        - Data Type Mappings\n      summary: Export Type Mappings\n      operationId: ExportTypeMappings\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/TypeMapping'\n      description: 'Export type mappings for a datasource. Providing a JSON body is optional. If provided, the mapping_ids may be specified to indicate certain type mapping IDs to return. Additionally, a target data source may be provided to which the mappings will be copied.'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TypeMappingExportPayload'\n        description: ''\n    parameters:\n      - schema:\n          type: string\n        name: container_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: data_source_id\n        in: path\n        required: true\n  '/containers/{container_id}/import/datasources/{data_source_id}/mappings/import':\n    parameters:\n      - schema:\n          type: string\n        name: container_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: data_source_id\n        in: path\n        required: true\n    post:\n      tags:\n        - Data Type Mappings\n      summary: Import Data Type Mappings\n      operationId: ImportDataTypeMappings\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ImportDataTypeMappingResponse'\n      description: 'Import type mappings for a datasource. Accepts either a JSON body or actual JSON file. The payload should be an array of type mapping classes, previously generated using the export route.'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: object\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                file:\n                  type: string\n                  format: binary\n  '/containers/{container_id}/import/datasources/{data_source_id}/mappings/{mapping_id}/transformations':\n    get:\n      tags:\n        - Data Type Mappings\n      summary: List Data Type Mapping's Transformations\n      description: List transformations for a type mapping from storage.\n      operationId: ListTransformations\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: data_source_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: mapping_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListTransformationResponse'\n      deprecated: false\n    post:\n      tags:\n        - Data Type Mappings\n      summary: Create Data Type Mapping's Transformations\n      description: Create a transformation for the type mapping.\n      operationId: CreateTransformation\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: data_source_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: mapping_id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateTypeMappingTransformationsRequest'\n        required: true\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateTransformationResponse'\n      deprecated: false\n      x-codegen-request-body-name: Body\n  '/containers/{container_id}/import/datasources/{data_source_id}/mappings/{mapping_id}/transformations/{transformation_id}':\n    put:\n      tags:\n        - Data Type Mappings\n      summary: Update Data Type Mapping's Transformations\n      description: Update a transformation.\n      operationId: UpdateTransformation\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: data_source_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: mapping_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: transformation_id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateTypeMappingTransformationsRequest'\n        required: true\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateTransformationResponse'\n      deprecated: false\n      x-codegen-request-body-name: Body\n    delete:\n      tags:\n        - Data Type Mappings\n      summary: Delete Data Type Mapping's Transformations\n      description: Delete a transformation.\n      operationId: DeleteTransformation\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: data_source_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: mapping_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: transformation_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Generic200Response'\n      deprecated: false\n  '/containers/{container_id}/import/imports/{import_id}':\n    delete:\n      tags:\n        - Imports\n      summary: Delete Import\n      description: Delete import will delete an import ONLY IF the import has not been processed.\n      operationId: DeleteImport\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: import_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content: {}\n      deprecated: false\n  '/containers/{container_id}/import/imports/{import_id}/data':\n    get:\n      tags:\n        - Imports\n      summary: List Import's Data\n      operationId: ListImportsData\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: import_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - schema:\n            type: string\n          in: query\n          name: count\n          description: boolean indicating if the return value should be a count only\n        - schema:\n            type: integer\n            minimum: 0\n          in: query\n          name: limit\n        - schema:\n            type: integer\n            minimum: 0\n          in: query\n          name: offset\n        - schema:\n            type: string\n          in: query\n          name: sortBy\n          description: column to sort results by\n        - schema:\n            type: boolean\n          in: query\n          name: sortDesc\n          description: boolean indicating if results should be in descending order\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListImportDataResponse'\n      deprecated: false\n      description: List the data for an import.\n  '/containers/{container_id}/import/imports/{import_id}/data/{data_id}':\n    get:\n      tags:\n        - Imports\n      summary: Retrieve Import Data\n      description: Retrieve a single piece of data from an import.\n      operationId: RetrieveImportData\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: import_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: data_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetImportDataResponse'\n      deprecated: false\n    delete:\n      tags:\n        - Imports\n      summary: Delete Import Data\n      description: Delete a single piece of data from an import.\n      operationId: DeleteImportData\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: import_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: data_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Generic200Response'\n      deprecated: false\n    put:\n      tags:\n        - Imports\n      summary: Update Import Data\n      operationId: UpdateImportData\n      parameters:\n        - name: container_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: import_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: data_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateImportDataResponse'\n      description: Update the data of an existing import.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DataStaging'\n  '/containers/{container_id}/datasources/{data_source_id}/imports':\n    parameters:\n      - schema:\n          type: string\n        name: container_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: data_source_id\n        in: path\n        required: true\n    post:\n      tags:\n        - Imports\n      summary: Create Import\n      operationId: CreateImport\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateImportResponse'\n      description: Creates a new import.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              description: ''\n              type: object\n              x-examples:\n                example-1:\n                  data_source_id: 1294f879-7f15-40e7-86f4-56177108ba23\n                  reference: testing upload\n              properties:\n                data_source_id:\n                  type: string\n                  minLength: 1\n                reference:\n                  type: string\n                  minLength: 1\n                status_message:\n                  type: string\n              required:\n                - data_source_id\n        description: ''\n  '/containers/{container_id}/datasources/{data_source_id}/imports/{import_id}/data':\n    parameters:\n      - schema:\n          type: string\n        name: container_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: import_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: data_source_id\n        in: path\n        required: true\n    post:\n      tags:\n        - Imports\n      summary: Add Data to Import\n      operationId: AddDataToImport\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AddDataToImportResponse'\n      description: Adds data to an existing import. Accepts an array of JSON objects or a file in JSON or CSV format.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: object\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                file:\n                  type: string\n                  format: binary\n  /events:\n    post:\n      tags:\n        - Events\n      summary: Create Event\n      description: Create new event\n      operationId: CreateEvent\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateEventRequest'\n        required: true\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateEventResponse'\n      deprecated: false\n      x-codegen-request-body-name: Body\n  /event_actions:\n    get:\n      summary: List Event Actions\n      tags:\n        - Events\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListEventActionResponse'\n      operationId: ListEventActions\n      description: Lists all event actions\n    post:\n      summary: Create Event Action\n      tags:\n        - Events\n      operationId: CreateEventAction\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateEventActionRequest'\n        required: true\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateEventActionResponse'\n      description: Create an event action\n  '/event_actions/{action_id}':\n    parameters:\n      - schema:\n          type: string\n        name: action_id\n        in: path\n        required: true\n    get:\n      summary: Retrieve Event Action\n      tags:\n        - Events\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetEventActionResponse'\n      operationId: RetrieveEventAction\n      description: Retrieve an event action\n    put:\n      summary: Update Event Action\n      tags:\n        - Events\n      operationId: UpdateEventAction\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateEventActionResponse'\n      description: Update an event action\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateEventActionRequest'\n      parameters:\n        - schema:\n            type: boolean\n          in: query\n          name: active\n          description: Sets the event action active or inactive\n    delete:\n      summary: Delete Event Action\n      tags:\n        - Events\n      operationId: DeleteEventAction\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Generic200Response'\n      description: Delete an event action\n  /event_action_status:\n    get:\n      summary: List Event Action Statuses\n      tags:\n        - Events\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListEventActionStatusResponse'\n      operationId: ListEventActionStatuses\n      description: List all event action statuses\n      parameters:\n        - schema:\n            type: string\n          in: query\n          name: eventID\n          description: Filter returned statuses by the event ID\n  '/event_action_status/{status_id}':\n    parameters:\n      - schema:\n          type: string\n        name: status_id\n        in: path\n        required: true\n    get:\n      summary: Retrieve Event Action Status\n      tags:\n        - Events\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetEventActionStatusResponse'\n      operationId: RetrieveEventActionStatus\n      description: Retrieve an event action status\n    put:\n      summary: Update Event Action Status\n      tags:\n        - Events\n      operationId: UpdateEventActionStatus\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateEventActionStatusResponse'\n      description: Update an event action status\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateEventActionStatusRequest'\n  /oauth/token:\n    get:\n      tags:\n        - Authentication\n      summary: Retrieve OAuth Token\n      operationId: RetrieveOAuthToken\n      parameters:\n        - name: x-api-key\n          in: header\n          required: true\n          schema:\n            type: string\n          description: The API key\n        - name: x-api-secret\n          in: header\n          required: true\n          schema:\n            type: string\n          description: The API secret\n        - name: x-api-expiry\n          in: header\n          schema:\n            type: string\n          description: The API expiry date\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: string\n        '401':\n          description: Unauthorized\n          content:\n            text/plain:\n              schema:\n                type: string\n                pattern: unauthorized\n                default: unauthorized\n      deprecated: false\n      description: Returns an OAuth token. The API key and secret must be supplied.\n    parameters: []\n  /oauth/exchange:\n    post:\n      tags:\n        - Authentication\n      summary: Exchange OAuth Token\n      operationId: ExchangeOAuthToken\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TokenExchangeRequest'\n      description: 'Exchanges credentials for a JSON Web Token (JWT). Multiple authentication flows are supported, see Deep Lynx documentation for details.'\n  /health:\n    get:\n      tags:\n        - Misc\n      summary: Health\n      description: 'Simple endpoint, returns 200 on call. Can be used for a simple Up monitor by an external service.'\n      operationId: Health\n      responses:\n        '200':\n          description: ''\n          content:\n            text/plain:\n              schema:\n                type: string\n                example: OK\n      deprecated: false\n  /rsa/initialize:\n    post:\n      tags:\n        - Authentication\n      summary: RSA Initialize\n      operationId: RsaInitialize\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RSAResponse'\n      description: |-\n        Used to begin (and optionally complete) an RSA authentication. Either a user's ID may be provided and the SecurID provided in a later `verify` request, \n        or else the user may provide both the user ID (`subjectName`) and `securID` at once to `initialize` to complete the authentication request. \n        The `securID` is the combination of the user's memorized token and 6 digit temporary RSA pin (with no spaces or characters between them).\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RSAInitRequest'\n  /rsa/verify:\n    post:\n      tags:\n        - Authentication\n      summary: RSA Verify\n      operationId: RsaVerify\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RSAResponse'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RSAVerifyRequest'\n      description: Provides RSA with the user's SecurID to complete authentication\n  /rsa/status:\n    post:\n      tags:\n        - Authentication\n      summary: RSA Status\n      operationId: RsaStatus\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RSAStatusResponse'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RSAStatusRequest'\n      description: Returns the status of an RSA authentication attempt\n  /rsa/cancel:\n    post:\n      tags:\n        - Authentication\n      summary: RSA Cancel\n      operationId: RsaCancel\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RSAResponse'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RSACancelRequest'\n      description: Cancels an RSA authentication attempt\n  '/containers/{container_id}/task':\n    parameters:\n      - schema:\n          type: string\n        name: container_id\n        in: path\n        required: true\n    get:\n      summary: List Tasks\n      tags:\n        - Tasks\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListTasksResponse'\n      operationId: ListTasks\n      description: Lists all tasks with a \"ready\" status\n    post:\n      summary: Create Task\n      tags:\n        - Tasks\n      operationId: CreateTask\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateTaskResponse'\n      description: Creates a new task\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Task'\n  '/containers/{container_id}/task/{task_id}':\n    parameters:\n      - schema:\n          type: string\n        name: container_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: task_id\n        in: path\n        required: true\n    get:\n      summary: Get Task\n      tags:\n        - Tasks\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetTaskResponse'\n      operationId: GetTask\n      description: Retrieves a specific task by ID\n    put:\n      summary: Update Task\n      tags:\n        - Tasks\n      operationId: UpdateTask\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateTaskResponse'\n      description: Updates a task\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Task'\n  '/containers/{container_id}/alerts':\n    parameters:\n      - schema:\n          type: string\n        name: container_id\n        in: path\n        required: true\n    get:\n      summary: List Container Alerts\n      tags:\n        - Containers\n      responses:\n        '200':\n          description: OK\n      operationId: ListContainerAlerts\n      description: List all active alerts for a container by ID.\n  '/containers/{container_id}/alerts/{alert_id}':\n    parameters:\n      - schema:\n          type: string\n        name: container_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: alert_id\n        in: path\n        required: true\n    post:\n      summary: Acknowledge Container Alert\n      operationId: AcknowledgeContainerAlert\n      tags:\n        - Containers\n      responses:\n        '200':\n          description: OK\n      description: Post with no body to acknowledge an alert and remove it from the active alerts list.\n  '/containers/{container_id}/ontology/versions':\n    parameters:\n      - schema:\n          type: string\n        name: container_id\n        in: path\n        required: true\n    get:\n      summary: List Ontology Versions\n      tags:\n        - Containers\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  value:\n                    type: array\n                    uniqueItems: true\n                    minItems: 1\n                    items:\n                      required:\n                        - id\n                        - container_id\n                        - name\n                        - changelist_id\n                        - created_by\n                        - created_at\n                      properties:\n                        id:\n                          type: string\n                        container_id:\n                          type: string\n                        name:\n                          type: string\n                        changelist_id:\n                          type: string\n                        created_by:\n                          type: string\n                        created_at:\n                          type: string\n                required:\n                  - value\n                x-examples:\n                  example-1:\n                    value:\n                      - id: ''\n                        container_id: ''\n                        name: ''\n                        changelist_id: ''\n                        created_by: ''\n                        created_at: ''\n      operationId: ListOntologyVersions\n      description: Lists all versions of the ontology for a container.\n  '/containers/{container_id}/ontology/versions/{version_id}':\n    parameters:\n      - schema:\n          type: string\n        name: container_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: version_id\n        in: path\n        required: true\n    get:\n      summary: Retrieve Ontology Version\n      tags:\n        - Containers\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  value:\n                    type: object\n                    properties:\n                      id:\n                        type: string\n                      container_id:\n                        type: string\n                      name:\n                        type: string\n                      changelist_id:\n                        type: string\n                      created_by:\n                        type: string\n                      created_at:\n                        type: string\n                    required:\n                      - id\n                      - container_id\n                      - name\n                      - changelist_id\n                      - created_by\n                      - created_at\n                required:\n                  - value\n                x-examples:\n                  example-1:\n                    value:\n                      id: ''\n                      container_id: ''\n                      name: ''\n                      changelist_id: ''\n                      created_by: ''\n                      created_at: ''\n      operationId: RetrieveOntologyVersion\n      description: Retreives details on a single ontology version.\n  '/containers/{container_id}/ontology/versions/{version_id}/rollback':\n    parameters:\n      - schema:\n          type: string\n        name: container_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: version_id\n        in: path\n        required: true\n    post:\n      tags:\n        - Containers\n      summary: Rollback Ontology Version\n      operationId: RollbackOntologyVersion\n      responses:\n        '200':\n          description: OK\n      description: Rolls back the ontology to the selected version.\n  '/containers/{container_id}/ontology/versions/{ontology_version_id}/approve':\n    parameters:\n      - schema:\n          type: string\n        name: container_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: ontology_version_id\n        in: path\n        required: true\n    post:\n      tags:\n        - Containers\n      summary: Send Ontology Version for Approval\n      operationId: SendOntologyVersionForApproval\n      responses:\n        '200':\n          description: OK\n      description: Sends an ontology version to be approved by a container admin\n    delete:\n      tags:\n        - Containers\n      summary: Reject Ontology Version Approval\n      operationId: RejectOntologyVersionApproval\n      responses:\n        '200':\n          description: OK\n      description: Rejects an ontology version (either in a pending status or after it has been approved).\n    put:\n      tags:\n        - Containers\n      summary: Approve Ontology Version\n      operationId: ApproveOntologyVersion\n      responses:\n        '200':\n          description: OK\n      description: Approves an ontology version\n  '/containers/{container_id}/ontology/versions/{ontology_version_id}/publish':\n    parameters:\n      - schema:\n          type: string\n        name: container_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: ontology_version_id\n        in: path\n        required: true\n    post:\n      tags:\n        - Containers\n      summary: Publish Ontology Version\n      operationId: PublishOntologyVersion\n      responses:\n        '200':\n          description: OK\n      description: Publishes an ontology version\n  '/Core.swagger_collection.yaml/paths//containers/{container_id}/graphs/nodes/{node_id}':\n    parameters:\n      - schema:\n          type: string\n        name: container_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: node_id\n        in: path\n        required: true\n    get:\n      summary: Nth Node Query\n      tags: []\n      responses: {}\n      operationId: get-Core.swagger_collection.yaml-paths-~1containers~1-container_id-~1graphs~1nodes~1-node_id\ncomponents:\n  securitySchemes:\n    BearerAuth:\n      type: http\n      scheme: bearer\n  schemas:\n    ListContainerResponse:\n      description: ''\n      type: object\n      x-examples:\n        ContainerResponseExample:\n          value:\n            - name: Test Container 4\n              description: Test Container Description\n              id: 07b1e35e-0a7c-476d-ada8-5906b16da1b8\n              archived: false\n              created_at: '2021-08-06T21:17:49.545Z'\n              modified_at: '2021-08-06T21:17:49.545Z'\n              created_by: fa3c2cc0-2c4e-441c-aa78-cf77f8af8cd1\n              modified_by: fa3c2cc0-2c4e-441c-aa78-cf77f8af8cd1\n              config: null\n              active_graph_id: 0cc62f41-ceaa-4a68-8f1c-7856525c2668\n          isError: false\n      properties:\n        value:\n          type: array\n          uniqueItems: true\n          minItems: 0\n          items:\n            $ref: '#/components/schemas/Container'\n        isError:\n          type: boolean\n    CreateContainerResponse:\n      description: ''\n      type: object\n      x-examples:\n        ContainerResponseExample:\n          value:\n            - name: Test Container 4\n              description: Test Container Description\n              id: 07b1e35e-0a7c-476d-ada8-5906b16da1b8\n              archived: false\n              created_at: '2021-08-06T21:17:49.545Z'\n              modified_at: '2021-08-06T21:17:49.545Z'\n              created_by: fa3c2cc0-2c4e-441c-aa78-cf77f8af8cd1\n              modified_by: fa3c2cc0-2c4e-441c-aa78-cf77f8af8cd1\n              config: null\n              active_graph_id: 0cc62f41-ceaa-4a68-8f1c-7856525c2668\n          isError: false\n      properties:\n        value:\n          type: array\n          uniqueItems: true\n          minItems: 0\n          items:\n            $ref: '#/components/schemas/Container'\n        isError:\n          type: boolean\n    BatchUpdateContainerResponse:\n      description: ''\n      type: object\n      x-examples:\n        ContainerResponseExample:\n          value:\n            - name: Test Container 4\n              description: Test Container Description\n              id: 07b1e35e-0a7c-476d-ada8-5906b16da1b8\n              archived: false\n              created_at: '2021-08-06T21:17:49.545Z'\n              modified_at: '2021-08-06T21:17:49.545Z'\n              created_by: fa3c2cc0-2c4e-441c-aa78-cf77f8af8cd1\n              modified_by: fa3c2cc0-2c4e-441c-aa78-cf77f8af8cd1\n              config: null\n              active_graph_id: 0cc62f41-ceaa-4a68-8f1c-7856525c2668\n          isError: false\n      properties:\n        value:\n          type: array\n          uniqueItems: true\n          minItems: 0\n          items:\n            $ref: '#/components/schemas/Container'\n        isError:\n          type: boolean\n    GetContainerResponse:\n      description: ''\n      type: object\n      x-examples:\n        ContainerResponseExample:\n          value:\n            - name: Test Container 4\n              description: Test Container Description\n              id: 07b1e35e-0a7c-476d-ada8-5906b16da1b8\n              archived: false\n              created_at: '2021-08-06T21:17:49.545Z'\n              modified_at: '2021-08-06T21:17:49.545Z'\n              created_by: fa3c2cc0-2c4e-441c-aa78-cf77f8af8cd1\n              modified_by: fa3c2cc0-2c4e-441c-aa78-cf77f8af8cd1\n              config: null\n              active_graph_id: 0cc62f41-ceaa-4a68-8f1c-7856525c2668\n          isError: false\n      properties:\n        value:\n          type: array\n          uniqueItems: true\n          minItems: 0\n          items:\n            $ref: '#/components/schemas/Container'\n        isError:\n          type: boolean\n    UpdateContainerResponse:\n      description: ''\n      type: object\n      x-examples:\n        ContainerResponseExample:\n          value:\n            - name: Test Container 4\n              description: Test Container Description\n              id: 07b1e35e-0a7c-476d-ada8-5906b16da1b8\n              archived: false\n              created_at: '2021-08-06T21:17:49.545Z'\n              modified_at: '2021-08-06T21:17:49.545Z'\n              created_by: fa3c2cc0-2c4e-441c-aa78-cf77f8af8cd1\n              modified_by: fa3c2cc0-2c4e-441c-aa78-cf77f8af8cd1\n              config: null\n              active_graph_id: 0cc62f41-ceaa-4a68-8f1c-7856525c2668\n          isError: false\n      properties:\n        value:\n          type: array\n          uniqueItems: true\n          minItems: 0\n          items:\n            $ref: '#/components/schemas/Container'\n        isError:\n          type: boolean\n    ContainerImportResponse:\n      description: ''\n      type: object\n      x-examples:\n        example-1:\n          value: 35bfbf46-5b50-49f5-a325-e5f03f43c3aa\n          isError: false\n      properties:\n        value:\n          type: string\n          minLength: 1\n        isError:\n          type: boolean\n    ContainerImportUpdateResponse:\n      description: ''\n      type: object\n      x-examples:\n        example-1:\n          value: 35bfbf46-5b50-49f5-a325-e5f03f43c3aa\n          isError: false\n      properties:\n        value:\n          type: string\n          minLength: 1\n        isError:\n          type: boolean\n    ListNodesResponse:\n      title: ListNodesResponse\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/Node'\n        isError:\n          type: boolean\n    GetNodeResponse:\n      title: GetNodeResponse\n      type: object\n      properties:\n        value:\n          $ref: '#/components/schemas/Node'\n        isError:\n          type: boolean\n    ListNodesByMetatypeResponse:\n      title: ListNodesResponse\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/Node'\n        isError:\n          type: boolean\n    ListNodeFiles:\n      title: ListNodeFiles\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/FileInfo'\n        isError:\n          type: boolean\n    ListEdgesResponse:\n      title: ListEdgesResponse\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/Edge'\n        isError:\n          type: boolean\n    GetEdgeResponse:\n      title: GetEdgeResponse\n      type: object\n      properties:\n        value:\n          $ref: '#/components/schemas/Edge'\n        isError:\n          type: boolean\n    ListEdgeFiles:\n      title: ListEdgeFiles\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/FileInfo'\n        isError:\n          type: boolean\n    ListMetatypesResponse:\n      title: ListMetatypesResponse\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/Metatype'\n        isError:\n          type: boolean\n    CreateMetatypesResponse:\n      title: CreateMetatypesResponse\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/Metatype'\n        isError:\n          type: boolean\n    GetMetatypeResponse:\n      title: GetMetatypeResponse\n      type: object\n      properties:\n        value:\n          $ref: '#/components/schemas/Metatype'\n        isError:\n          type: boolean\n    UpdateMetatypeResponse:\n      title: UpdateMetatypeResponse\n      type: object\n      properties:\n        value:\n          $ref: '#/components/schemas/Metatype'\n        isError:\n          type: boolean\n    ValidateMetatypePropertiesResponse:\n      title: ValidateMetatypePropertiesResponse\n      type: object\n      properties:\n        value:\n          type: object\n        isError:\n          type: boolean\n    ListMetatypeKeysResponse:\n      title: ListMetatypeKeysResponse\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/MetatypeKey'\n        isError:\n          type: boolean\n    CreateMetatypeKeysResponse:\n      title: CreateMetatypeKeysResponse\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/MetatypeKey'\n        isError:\n          type: boolean\n    GetMetatypeKeyResponse:\n      title: GetMetatypeKeyResponse\n      type: object\n      properties:\n        value:\n          $ref: '#/components/schemas/MetatypeKey'\n        isError:\n          type: boolean\n    UpdateMetatypeKeyResponse:\n      title: UpdateMetatypeKeyResponse\n      type: object\n      properties:\n        value:\n          $ref: '#/components/schemas/MetatypeKey'\n        isError:\n          type: boolean\n    ListMetatypeRelationshipsResponse:\n      title: ListMetatypeRelationshipsResponse\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/MetatypeRelationship'\n        isError:\n          type: boolean\n    CreateMetatypeRelationshipsResponse:\n      title: CreateMetatypeRelationshipsResponse\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/MetatypeRelationship'\n        isError:\n          type: boolean\n    GetMetatypeRelationshipResponse:\n      title: GetMetatypeRelationshipResponse\n      type: object\n      properties:\n        value:\n          $ref: '#/components/schemas/MetatypeRelationship'\n        isError:\n          type: boolean\n    UpdateMetatypeRelationshipResponse:\n      title: UpdateMetatypeRelationshipResponse\n      type: object\n      properties:\n        value:\n          $ref: '#/components/schemas/MetatypeRelationship'\n        isError:\n          type: boolean\n    ListMetatypeRelationshipKeysResponse:\n      title: ListMetatypeRelationshipKeysResponse\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/RelationshipKey'\n        isError:\n          type: boolean\n    CreateMetatypeRelationshipKeysResponse:\n      title: CreateMetatypeRelationshipKeysResponse\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/RelationshipKey'\n        isError:\n          type: boolean\n    GetMetatypeRelationshipKeyResponse:\n      title: GetMetatypeRelationshipKeyResponse\n      type: object\n      properties:\n        value:\n          $ref: '#/components/schemas/RelationshipKey'\n        isError:\n          type: boolean\n    UpdateMetatypeRelationshipKeyResponse:\n      title: UpdateMetatypeRelationshipKeyResponse\n      type: object\n      properties:\n        value:\n          $ref: '#/components/schemas/RelationshipKey'\n        isError:\n          type: boolean\n    ListMetatypeRelationshipPairsResponse:\n      title: ListMetatypeRelationshipPairsResponse\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/RelationshipPair'\n        isError:\n          type: boolean\n    CreateMetatypeRelationshipPairsResponse:\n      title: CreateMetatypeRelationshipPairsResponse\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/RelationshipPair'\n        isError:\n          type: boolean\n    GetMetatypeRelationshipPairResponse:\n      title: GetMetatypeRelationshipPairResponse\n      type: object\n      properties:\n        value:\n          $ref: '#/components/schemas/RelationshipPair'\n        isError:\n          type: boolean\n    UpdateMetatypeRelationshipPairResponse:\n      title: UpdateMetatypeRelationshipPairResponse\n      type: object\n      properties:\n        value:\n          $ref: '#/components/schemas/RelationshipPair'\n        isError:\n          type: boolean\n    ListDataSourcesResponse:\n      title: ListDataSourcesResponse\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/DataSource'\n        isError:\n          type: boolean\n    CreateDataSourcesResponse:\n      title: CreateDataSourcesResponse\n      type: object\n      properties:\n        value:\n          $ref: '#/components/schemas/DataSource'\n        isError:\n          type: boolean\n    GetDataSourceResponse:\n      title: GetDataSourceResponse\n      type: object\n      properties:\n        value:\n          $ref: '#/components/schemas/DataSource'\n        isError:\n          type: boolean\n    UpdateDataSourceResponse:\n      title: UpdateDataSourceResponse\n      type: object\n      properties:\n        value:\n          $ref: '#/components/schemas/DataSource'\n        isError:\n          type: boolean\n    ListDataSourceImportsResponse:\n      title: ListDataSourceImportsResponse\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/DataSourceImport'\n        isError:\n          type: boolean\n    CreateManualImportResponse:\n      title: CreateManualImportResponse\n      type: object\n      properties:\n        value:\n          $ref: '#/components/schemas/CreateManualImport'\n        isError:\n          type: boolean\n    UploadFileResponse:\n      title: UploadFileResponse\n      oneOf:\n        - properties:\n            value:\n              $ref: '#/components/schemas/FileModel'\n            isError:\n              type: boolean\n        - properties:\n            value:\n              $ref: '#/components/schemas/FileInfo'\n            isError:\n              type: boolean\n      type: object\n    GetFileInfoResponse:\n      title: GetFileInfoResponse\n      type: object\n      properties:\n        value:\n          $ref: '#/components/schemas/FileInfo'\n        isError:\n          type: boolean\n    GetDataExportResponse:\n      title: GetDataExportResponse\n      type: object\n      properties:\n        value:\n          $ref: '#/components/schemas/Exporter'\n        isError:\n          type: boolean\n    ListDataExportsResponse:\n      title: ListDataExportsResponse\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/Exporter'\n        isError:\n          type: boolean\n    GetUserResponse:\n      title: GetUserResponse\n      type: object\n      properties:\n        value:\n          $ref: '#/components/schemas/User'\n        isError:\n          type: boolean\n    ListUsersResponse:\n      title: ListUsersResponse\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/User'\n        isError:\n          type: boolean\n    ListUserInvitesResponse:\n      title: ListUserInvitesResponse\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/ContainerInvite'\n        isError:\n          type: boolean\n    ListUserPermissionsResponse:\n      title: ListUserPermissionsResponse\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            type: string\n        isError:\n          type: boolean\n    ListUsersForContainerResponse:\n      title: ListUsersForContainerResponse\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/User'\n        isError:\n          type: boolean\n    ListUserRoles:\n      title: ListUserRoles\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            type: string\n        isError:\n          type: boolean\n    ListContainerInvitesResponse:\n      title: ListContainerInvitesResponse\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/ContainerInvite'\n        isError:\n          type: boolean\n    ListDataTypeMappingResponse:\n      title: ListDataTypeMappingResponse\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/TypeMapping'\n        isError:\n          type: boolean\n    GetDataTypeMappingResponse:\n      title: GetDataTypeMappingResponse\n      type: object\n      properties:\n        value:\n          $ref: '#/components/schemas/TypeMapping'\n        isError:\n          type: boolean\n    UpdateDataTypeMappingResponse:\n      title: UpdateDataTypeMappingResponse\n      type: object\n      properties:\n        value:\n          $ref: '#/components/schemas/TypeMapping'\n        isError:\n          type: boolean\n    ImportDataTypeMappingResponse:\n      title: ImportDataTypeMappingResponse\n      type: array\n      items:\n        type: object\n        properties:\n          value:\n            $ref: '#/components/schemas/TypeMapping'\n          isError:\n            type: boolean\n    ListTransformationResponse:\n      title: ListTransformationResponse\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/Transformation'\n        isError:\n          type: boolean\n    CreateTransformationResponse:\n      title: CreateTransformationResponse\n      type: object\n      properties:\n        value:\n          $ref: '#/components/schemas/Transformation'\n        isError:\n          type: boolean\n    UpdateTransformationResponse:\n      title: UpdateTransformationResponse\n      type: object\n      properties:\n        value:\n          $ref: '#/components/schemas/Transformation'\n        isError:\n          type: boolean\n    ListImportDataResponse:\n      title: ListImportDataResponse\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/ImportModel'\n        isError:\n          type: boolean\n    GetImportDataResponse:\n      title: GetImportDataResponse\n      type: object\n      properties:\n        value:\n          $ref: '#/components/schemas/ImportModel'\n        isError:\n          type: boolean\n    UpdateImportDataResponse:\n      title: UpdateImportDataResponse\n      type: object\n      properties:\n        value:\n          $ref: '#/components/schemas/ImportModel'\n        isError:\n          type: boolean\n    CreateImportResponse:\n      title: CreateImportResponse\n      type: object\n      properties:\n        value:\n          $ref: '#/components/schemas/CreateManualImport'\n        isError:\n          type: boolean\n    AddDataToImportResponse:\n      title: AddDataToImportResponse\n      type: object\n      properties:\n        value:\n          $ref: '#/components/schemas/CreateManualImport'\n        isError:\n          type: boolean\n    CreateEventResponse:\n      title: CreateEventResponse\n      type: object\n      properties:\n        value:\n          $ref: '#/components/schemas/Event'\n        isError:\n          type: boolean\n    Generic200Response:\n      title: Generic200Response\n      description: ''\n      type: object\n      properties:\n        value:\n          type: boolean\n        isError:\n          type: boolean\n      required:\n        - value\n        - isError\n      x-examples:\n        Generic200Response:\n          value:\n            value: true\n            isError: false\n          isError: false\n    ErrorResponse:\n      title: ErrorResponse\n      description: ''\n      type: object\n      x-examples: {}\n      properties:\n        isError:\n          type: boolean\n        error:\n          $ref: '#/components/schemas/ErrorModel'\n      required:\n        - isError\n        - error\n    CreateContainerRequest:\n      title: CreateContainerRequest\n      type: object\n      example:\n        name: Test Container\n        description: Test Container Description\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n        archived:\n          type: boolean\n        config:\n          $ref: '#/components/schemas/ContainerConfig'\n      required:\n        - name\n    UpdateContainerRequest:\n      title: UpdateContainerRequest\n      type: object\n      example:\n        name: Test Container\n        description: Final Test Description\n        config:\n          data_versioning_enabled: false\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n        config:\n          type: object\n          nullable: true\n          properties:\n            data_versioning_enabled:\n              type: boolean\n      required:\n        - name\n      x-examples:\n        ContainerUpdateExample:\n          value:\n            name: Test Container\n            description: Final Test Description\n            config:\n              data_versioning_enabled: false\n    BatchContainerUpdateRequest:\n      type: array\n      title: BatchContainerUpdateRequest\n      description: ''\n      minItems: 1\n      uniqueItems: false\n      x-examples:\n        example-1:\n          - name: Test Container\n            description: Test Container New Description\n            id: ''\n      items:\n        type: object\n        properties:\n          name:\n            type: string\n          description:\n            type: string\n          id:\n            type: string\n    CreateOrUpdateNodesRequest:\n      title: CreateOrUpdateNodesRequest\n      type: object\n      example:\n        container_id: required\n        id: optional - but required to update the node from this endpoint\n        original_data_id: optional\n        data_source_id: required\n        data_type_mapping_id: optional\n        metatype_id: required\n        modified_at: optional - set to update node along with the id to update if it exists\n        properties: {}\n      x-examples:\n        example-1:\n          container_id: required\n          id: optional - including this field will attempt to update a node with this id\n          original_data_id: 'optional - including this field will attempt to update a node with the same composite id (data source id + metatype id + original data id) if it exists, if not it will create it'\n          data_source_id: required\n          metatype_id: required\n          properties: {}\n      properties:\n        id:\n          type: string\n          description: ''\n        container_id:\n          type: string\n        original_data_id:\n          type: string\n          description: 'Passing in just the original data id will attempt to update a node with the same composite id (data source id, metatype id, and original data id).'\n        data_source_id:\n          type: string\n        metatype_id:\n          type: string\n        properties:\n          type: object\n      required:\n        - container_id\n        - data_source_id\n        - metatype_id\n    CreateOrUpdateEdgesRequest:\n      title: CreateOrUpdateEdgesRequest\n      type: object\n      example:\n        container_id: required\n        data_source_id: required\n        origin_id: required (if origin_original_id not set)\n        destination_id: required (if destination_original_id not set)\n        origin_original_id: create edge based on composite id of node ( data source id + metatype id + original id of node)\n        origin_metatype_id: required if using original id for edge creation\n        origin_data_source_id: required if using original id for edge creation\n        destination_original_id: create edge based on composite id of node (data source id + metatype id +  original id of node)D\n        destination_metatype_id: required if using original id for edge creation\n        destination_data_source_id: required if using original id for edge creation\n        relationship_pair_id: required\n        modified_at: will attempt to update edge if exists\n        properties: {}\n      x-examples:\n        example-1:\n          container_id: required\n          data_source_id: required\n          origin_id: required (if origin_original_id not set)\n          destination_id: required (if destination_original_id not set)\n          origin_original_id: create edge based on composite id of node ( data source id + metatype id + original id of node)\n          origin_metatype_id: required if using original id for edge creation\n          origin_data_source_id: required if using original id for edge creation\n          destination_original_id: create edge based on composite id of node (data source id + metatype id +  original id of node)D\n          destination_metatype_id: required if using original id for edge creation\n          destination_data_source_id: required if using original id for edge creation\n          relationship_pair_id: required\n          properties: {}\n      properties:\n        container_id:\n          type: string\n        data_source_id:\n          type: string\n        origin_id:\n          type: string\n        destination_id:\n          type: string\n        origin_original_id:\n          type: string\n        destination_original_id:\n          type: string\n        relationship_pair_id:\n          type: string\n        origin_data_source_id:\n          type: string\n        destination_data_source_id:\n          type: string\n        destination_metatype_id:\n          type: string\n        origin_metatype_id:\n          type: string\n        properties:\n          type: object\n      required:\n        - container_id\n        - data_source_id\n        - origin_id\n        - destination_id\n        - relationship_pair_id\n    CreateMetatypeRequest:\n      title: CreateMetatypeRequest\n      required:\n        - description\n        - name\n      type: object\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n      example:\n        name: Equipment\n        description: Physical piece of equipement\n    UpdateMetatypeRequest:\n      title: UpdateMetatypeRequest\n      required:\n        - description\n        - name\n      type: object\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n      example:\n        name: Updated Metatype Name\n        description: Final Description\n    CreateMetatypeKeyRequest:\n      title: CreateMetatypeKeyRequest\n      type: object\n      properties:\n        name:\n          type: string\n        required:\n          type: boolean\n        property_name:\n          type: string\n        description:\n          type: string\n        data_type:\n          type: string\n        cardinality:\n          type: integer\n          format: int32\n        validation:\n          $ref: '#/components/schemas/KeyValidation'\n        unique:\n          type: boolean\n        options:\n          type: array\n          items:\n            type: string\n        defaultValue:\n          type: string\n        metatype_id:\n          type: string\n      required:\n        - name\n        - description\n        - metatype_id\n    KeyValidation:\n      title: KeyValidation\n      type: object\n      example:\n        regex: ''\n        min: 0\n        max: 0\n      properties:\n        regex:\n          type: string\n        min:\n          type: integer\n          format: int32\n        max:\n          type: integer\n          format: int32\n    CreateMetatypeRelationshipRequest:\n      title: CreateMetatypeRelationshipRequest\n      required:\n        - description\n        - name\n      type: object\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n      example:\n        name: Relationship Name\n        description: Relationship Description\n      x-examples:\n        example-1:\n          name: Relationship Name\n          description: Relationship Description\n    UpdateMetatypeRelationshipRequest:\n      title: UpdateMetatypeRelationshipRequest\n      required:\n        - description\n        - name\n      type: object\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n      example:\n        name: Update Test\n        description: Final Test Description\n      x-examples:\n        example-1:\n          name: Update Test\n          description: Final Test Description\n    CreateMetatypeRelationshipKeyRequest:\n      title: CreateMetatypeRelationshipKeyRequest\n      type: object\n      example:\n        name: File Name\n        required: true\n        property_name: fileName\n        description: File Upload Name\n        data_type: string\n        cardinality: 1\n        validation:\n          regex: ''\n          min: 0\n          max: 0\n        unique: true\n        options:\n          - ''\n        defaultValue: can be any type\n      properties:\n        name:\n          type: string\n        required:\n          type: boolean\n        property_name:\n          type: string\n        description:\n          type: string\n        data_type:\n          type: string\n        cardinality:\n          type: integer\n          format: int32\n        validation:\n          $ref: '#/components/schemas/KeyValidation'\n        unique:\n          type: boolean\n        options:\n          type: array\n          items:\n            type: string\n        defaultValue:\n          type: string\n      required:\n        - name\n        - description\n        - data_type\n    CreateMetatypeRelationshipPairRequest:\n      title: CreateMetatypeRelationshipPairRequest\n      required:\n        - description\n        - destination_metatype_id\n        - name\n        - origin_metatype_id\n        - relationship_id\n        - relationship_type\n      type: object\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n        origin_metatype_id:\n          type: string\n        destination_metatype_id:\n          type: string\n        relationship_id:\n          type: string\n        relationship_type:\n          type: string\n      example:\n        name: Relationship Pair Test\n        description: Relationship Pair Test description\n        origin_metatype_id: 566e3862-6853-45af-8a45-3050576dfb9a\n        destination_metatype_id: 8bcc0b06-bb44-4176-a581-aa68eafca7f3\n        relationship_id: 885e3fca-5066-4be8-a720-63b3c4744e97\n        relationship_type: 'many:many'\n    CreateDataSourceRequest:\n      title: CreateDataSourceRequest\n      type: object\n      example:\n        name: testing data source\n        adapter_type: http OR manual\n        active: true\n        config:\n          endpoint: ''\n          auth_method: basic\n          username: test\n          password: test\n      properties:\n        name:\n          type: string\n        adapter_type:\n          type: string\n        active:\n          type: boolean\n        config:\n          $ref: '#/components/schemas/CreateDataSourceConfig'\n      required:\n        - name\n    CreateDataSourceConfig:\n      title: CreateDataSourceConfig\n      type: object\n      example:\n        endpoint: ''\n        auth_method: basic\n        username: test\n        password: test\n      properties:\n        endpoint:\n          type: string\n        auth_method:\n          type: string\n        username:\n          type: string\n        password:\n          type: string\n    CreateDataExportRequest:\n      title: CreateDataExportRequest\n      required:\n        - adapter\n        - config\n      type: object\n      properties:\n        adapter:\n          type: string\n        config:\n          $ref: '#/components/schemas/DataExportConfig'\n      example:\n        adapter: gremlin\n        config:\n          traversal_source: g\n          graphson_v1: false\n          user: ''\n          key: ''\n          endpoint: localhost\n          port: '8182'\n          path: /gremlin\n          writes_per_second: 300\n    DataExportConfig:\n      title: DataExportConfig\n      required:\n        - endpoint\n        - graphson_v1\n        - key\n        - path\n        - port\n        - traversal_source\n        - user\n        - writes_per_second\n      type: object\n      properties:\n        traversal_source:\n          type: string\n        graphson_v1:\n          type: boolean\n        user:\n          type: string\n        key:\n          type: string\n        endpoint:\n          type: string\n        port:\n          type: string\n        path:\n          type: string\n        writes_per_second:\n          type: integer\n          format: int32\n      example:\n        traversal_source: g\n        graphson_v1: false\n        user: ''\n        key: ''\n        endpoint: localhost\n        port: '8182'\n        path: /gremlin\n        writes_per_second: 300\n    AssignRoleRequest:\n      title: AssignRoleRequest\n      required:\n        - container_id\n        - role_name\n        - user_id\n      type: object\n      properties:\n        user_id:\n          type: string\n        container_id:\n          type: string\n        role_name:\n          type: string\n      example:\n        user_id: fb127f5f-0318-4866-9570-10ec81a85cc2\n        container_id: 2a49dc7b-cf56-4e03-85e7-14ac8f0e4b40\n        role_name: admin\n    CreateTypeMappingTransformationsRequest:\n      title: CreateTypeMappingTransformationsRequest\n      type: object\n      example:\n        metatype_id: ''\n        conditions:\n          - key: RADIUS\n            operator: eq\n            value: CIRCLE\n        keys:\n          - key: RADIUS\n            metatype_key_id: Example\n      properties:\n        metatype_id:\n          type: string\n        conditions:\n          type: array\n          items:\n            $ref: '#/components/schemas/TransformationCondition'\n        keys:\n          type: array\n          items:\n            $ref: '#/components/schemas/TransformationKey'\n      required:\n        - metatype_id\n        - conditions\n        - keys\n    TransformationCondition:\n      title: TransformationCondition\n      required:\n        - key\n        - operator\n        - value\n      type: object\n      properties:\n        key:\n          type: string\n        operator:\n          type: string\n        value:\n          type: string\n      example:\n        key: RADIUS\n        operator: eq\n        value: CIRCLE\n    ContainerImportRequest:\n      title: ContainerImportRequest\n      description: ''\n      type: object\n      x-examples:\n        example-1:\n          name: string\n          description: string\n          data_versioning_enabled: true\n          path: string\n          file: string\n      properties:\n        name:\n          type: string\n          minLength: 1\n        description:\n          type: string\n          minLength: 1\n        data_versioning_enabled:\n          type: boolean\n        path:\n          type: string\n          minLength: 1\n        file:\n          type: string\n          format: binary\n          minLength: 1\n      required:\n        - name\n        - description\n        - data_versioning_enabled\n    TokenExchangeRequest:\n      title: TokenExchangeRequest\n      type: object\n      properties:\n        client_id:\n          type: string\n        code:\n          type: string\n        grant_type:\n          type: string\n        redirect_uri:\n          type: string\n        client_secret:\n          type: string\n        code_verifier:\n          type: string\n    Node:\n      description: ''\n      type: object\n      x-examples:\n        example-1:\n          properties: {}\n          id: c9e8aef5-d13e-49af-b1af-d840e51c6689\n          container_id: d3cd0199-6511-4c0d-b634-efeff989a8f6\n          metatype:\n            name: ''\n            description: ''\n            id: 4983eb3a-7cae-4cc0-a62f-07ea863be646\n          metatype_name: Example\n          graph_id: c29870ad-479b-432b-a88a-093b4d85b58a\n          archived: false\n          created_at: '2021-08-10T15:05:08.393Z'\n          modified_at: null\n          original_data_id: 9c230bc3-a0b8-48ad-b7bf-11065efd7c60\n          data_source_id: f02494db-2210-4d78-ae43-3e3abbdad0e1\n          deleted_at: null\n          data_staging_id: 19\n          import_data_id: e475010f-7afa-4027-9488-e159dff33c7f\n          type_mapping_transformation_id: ea4e36af-805a-4b32-b299-ed223d9b2f22\n          composite_original_id: d3cd0199-6511-4c0d-b634-efeff989a8f6+f02494db-2210-4d78-ae43-3e3abbdad0e1\n          created_by: 16fa1d29-a13f-4783-b56d-cdf9c4946cb4\n          modified_by: 16fa1d29-a13f-4783-b56d-cdf9c4946cb4\n          value:\n            properties: {}\n            id: c9e8aef5-d13e-49af-b1af-d840e51c6689\n            container_id: d3cd0199-6511-4c0d-b634-efeff989a8f6\n            metatype:\n              name: ''\n              description: ''\n              id: 4983eb3a-7cae-4cc0-a62f-07ea863be646\n            metatype_name: Example\n            graph_id: c29870ad-479b-432b-a88a-093b4d85b58a\n            archived: false\n            created_at: '2021-08-10T15:05:08.393Z'\n            modified_at: null\n            original_data_id: bc3-a0b8-48ad-b7bf-11065efd7c60\n            data_source_id: f02494db-2210-4d78-ae43-3e3abbdad0e1\n            deleted_at: null\n            data_staging_id: 19\n            import_data_id: e475010f-7afa-4027-9488-e159dff33c7f\n            type_mapping_transformation_id: ea4e36af-805a-4b32-b299-ed223d9b2f22\n            composite_original_id: d3cd0199-6511-4c0d-b634-efeff989a8f6+f02494db-2210-4d7\n            created_by: 16fa1d29-a13f-4783-b56d-cdf9c4946cb4\n            modified_by: 16fa1d29-a13f-4783-b56d-cdf9c4946cb4\n      properties:\n        id:\n          type: string\n          minLength: 1\n        container_id:\n          type: string\n          minLength: 1\n        metatype_id:\n          type: string\n        metatype:\n          $ref: '#/components/schemas/NodeMetatypeBody'\n        metatype_name:\n          type: string\n          minLength: 1\n        data_source_id:\n          type: string\n          minLength: 1\n        import_data_id:\n          type: string\n          minLength: 1\n        data_staging_id:\n          type: number\n        type_mapping_transformation_id:\n          type: string\n          minLength: 1\n        original_data_id:\n          type: string\n          minLength: 1\n        properties:\n          type: object\n        metadata:\n          type: object\n        created_at:\n          type: string\n          minLength: 1\n        modified_at:\n          type: string\n          nullable: true\n        deleted_at:\n          type: string\n          nullable: true\n        created_by:\n          type: string\n          minLength: 1\n        modified_by:\n          type: string\n          minLength: 1\n      required:\n        - container_id\n    NodeMetatypeBody:\n      title: NodeMetatypeBody\n      type: object\n      required:\n        - name\n        - description\n        - id\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n        id:\n          type: string\n          minLength: 1\n    Edge:\n      description: ''\n      type: object\n      x-examples: {}\n      title: ''\n      properties:\n        id:\n          type: string\n          minLength: 1\n        container_id:\n          type: string\n          minLength: 1\n        relationship_pair_id:\n          type: string\n          minLength: 1\n        data_source_id:\n          type: string\n          minLength: 1\n        import_data_id:\n          type: string\n          minLength: 1\n        data_staging_id:\n          type: string\n        type_mapping_transformation_id:\n          type: string\n          minLength: 1\n        origin_id:\n          type: string\n        destination_id:\n          type: string\n        origin_original_id:\n          type: string\n          minLength: 1\n        origin_data_source_id:\n          type: string\n          minLength: 1\n        origin_metatype_id:\n          type: string\n        destination_original_id:\n          type: string\n          minLength: 1\n        destination_data_source_id:\n          type: string\n          minLength: 1\n        destination_metatype_id:\n          type: string\n        destination_node_id:\n          type: string\n          minLength: 1\n        properties:\n          type: object\n        metadata:\n          type: object\n        created_at:\n          type: string\n          minLength: 1\n        modified_at:\n          type: string\n          nullable: true\n        deleted_at:\n          type: string\n          nullable: true\n        created_by:\n          type: string\n          minLength: 1\n        modified_by:\n          type: string\n          minLength: 1\n      required:\n        - container_id\n        - relationship_pair_id\n    Metatype:\n      description: ''\n      type: object\n      x-examples:\n        example-1:\n          name: Entity\n          description: An entity is anything that exists or has existed or will exist\n          container_id: d3cd0199-6511-4c0d-b634-efeff989a8f6\n          id: aaa5baa4-59ef-4e48-a111-b96ca2a4d2bc\n          archived: false\n          created_at: '2021-08-09T18:39:17.604Z'\n          modified_at: '2021-08-12T22:03:02.830Z'\n          created_by: 16fa1d29-a13f-4783-b56d-cdf9c4946cb4\n          modified_by: 6a005d8f-1026-4497-9ba9-2db413bf3119\n          keys: []\n      properties:\n        name:\n          type: string\n          minLength: 1\n        description:\n          type: string\n          minLength: 1\n        container_id:\n          type: string\n          minLength: 1\n        id:\n          type: string\n          minLength: 1\n        archived:\n          type: boolean\n        created_at:\n          type: string\n          minLength: 1\n        modified_at:\n          type: string\n          minLength: 1\n        created_by:\n          type: string\n          minLength: 1\n        modified_by:\n          type: string\n          minLength: 1\n        keys:\n          type: array\n          items:\n            $ref: '#/components/schemas/MetatypeKey'\n      required:\n        - name\n        - description\n    MetatypeKey:\n      description: ''\n      type: object\n      x-examples:\n        example-1:\n          name: name\n          description: ''\n          property_name: name\n          data_type: string\n          required: false\n          metatype_id: aaa5baa4-59ef-4e48-a111-b96ca2a4d2bc\n          id: feb787cf-189c-4349-aa40-08e106a11d5b\n          options: null\n          default_value: null\n          archived: false\n          created_at: '2021-08-09T18:39:19.129Z'\n          modified_at: '2021-08-12T22:03:03.952Z'\n          created_by: 16fa1d29-a13f-4783-b56d-cdf9c4946cb4\n          modified_by: 6a005d8f-1026-4497-9ba9-2db413bf3119\n          validation:\n            max: 0\n            min: 0\n            regex: ''\n      properties:\n        name:\n          type: string\n          minLength: 1\n        description:\n          type: string\n        property_name:\n          type: string\n          minLength: 1\n        data_type:\n          type: string\n          minLength: 1\n        required:\n          type: boolean\n        metatype_id:\n          type: string\n          minLength: 1\n        id:\n          type: string\n          minLength: 1\n        options:\n          type: array\n          nullable: true\n          items:\n            type: object\n        default_value:\n          type: string\n          nullable: true\n        archived:\n          type: boolean\n        created_at:\n          type: string\n          minLength: 1\n        modified_at:\n          type: string\n          minLength: 1\n        created_by:\n          type: string\n          minLength: 1\n        modified_by:\n          type: string\n          minLength: 1\n        validation:\n          $ref: '#/components/schemas/KeyValidation'\n      required:\n        - name\n        - description\n        - data_type\n        - metatype_id\n    MetatypeRelationship:\n      description: ''\n      type: object\n      x-examples:\n        example-1:\n          name: locates\n          description: A locates B if B is contained within a subset of the spatial region occupied by A at some time t.\n          container_id: d3cd0199-6511-4c0d-b634-efeff989a8f6\n          id: b0d66ebb-58d4-4933-9ed2-29302d0c1aea\n          archived: false\n          created_at: '2021-08-09T18:39:17.531Z'\n          modified_at: '2021-08-12T22:03:02.791Z'\n          created_by: 16fa1d29-a13f-4783-b56d-cdf9c4946cb4\n          modified_by: 6a005d8f-1026-4497-9ba9-2db413bf3119\n          keys: []\n      properties:\n        name:\n          type: string\n          minLength: 1\n        description:\n          type: string\n          minLength: 1\n        container_id:\n          type: string\n          minLength: 1\n        id:\n          type: string\n          minLength: 1\n        archived:\n          type: boolean\n        created_at:\n          type: string\n          minLength: 1\n        modified_at:\n          type: string\n          minLength: 1\n        created_by:\n          type: string\n          minLength: 1\n        modified_by:\n          type: string\n          minLength: 1\n        keys:\n          type: array\n          items:\n            $ref: '#/components/schemas/RelationshipKey'\n      required:\n        - name\n        - description\n    RelationshipKey:\n      description: ''\n      type: object\n      x-examples:\n        example-1:\n          name: File Name\n          description: File Upload Name\n          property_name: fileName\n          data_type: string\n          required: true\n          cardinality: 1\n          validation:\n            max: 0\n            min: 0\n            regex: ''\n          unique: true\n          options:\n            - ''\n          defaultValue: can be any type\n          metatype_relationship_id: b0d66ebb-58d4-4933-9ed2-29302d0c1aea\n          id: 1ef3ee3f-c188-4a5f-9da2-ad6ad79eb69d\n          default_value: null\n          archived: false\n          created_at: '2021-08-13T16:17:12.145Z'\n          modified_at: '2021-08-13T16:17:12.145Z'\n          created_by: 6df185b0-e511-44e6-9692-2b04b51701d9\n          modified_by: 6df185b0-e511-44e6-9692-2b04b51701d9\n      properties:\n        name:\n          type: string\n          minLength: 1\n        description:\n          type: string\n          minLength: 1\n        property_name:\n          type: string\n          minLength: 1\n        data_type:\n          type: string\n          minLength: 1\n        required:\n          type: boolean\n        cardinality:\n          type: number\n        validation:\n          $ref: '#/components/schemas/KeyValidation'\n        unique:\n          type: boolean\n        options:\n          type: array\n          items:\n            type: object\n        defaultValue:\n          type: string\n          nullable: true\n        metatype_relationship_id:\n          type: string\n          minLength: 1\n        id:\n          type: string\n          minLength: 1\n        archived:\n          type: boolean\n        created_at:\n          type: string\n          minLength: 1\n        modified_at:\n          type: string\n          minLength: 1\n        created_by:\n          type: string\n          minLength: 1\n        modified_by:\n          type: string\n          minLength: 1\n      required:\n        - metatype_relationship_id\n        - id\n    RelationshipPair:\n      description: ''\n      type: object\n      x-examples: null\n      properties:\n        name:\n          type: string\n          minLength: 1\n        description:\n          type: string\n          minLength: 1\n        relationship_type:\n          type: string\n          minLength: 1\n        relationship_id:\n          type: string\n          minLength: 1\n        origin_metatype_id:\n          type: string\n          minLength: 1\n        destination_metatype_id:\n          type: string\n          minLength: 1\n        id:\n          type: string\n          minLength: 1\n        archived:\n          type: boolean\n        container_id:\n          type: string\n          minLength: 1\n        created_at:\n          type: string\n          minLength: 1\n        modified_at:\n          type: string\n          minLength: 1\n        created_by:\n          type: string\n          minLength: 1\n        modified_by:\n          type: string\n          minLength: 1\n        origin_metatype_name:\n          type: string\n          minLength: 1\n        destination_metatype_name:\n          type: string\n          minLength: 1\n        relationship_pair_name:\n          type: string\n          minLength: 1\n        destination_metatype:\n          type: object\n          properties:\n            name:\n              type: string\n            description:\n              type: string\n            id:\n              type: string\n              minLength: 1\n        origin_metatype:\n          type: object\n          properties:\n            name:\n              type: string\n            description:\n              type: string\n            id:\n              type: string\n              minLength: 1\n        relationship:\n          type: object\n          properties:\n            name:\n              type: string\n            description:\n              type: string\n            id:\n              type: string\n              minLength: 1\n      required:\n        - name\n        - id\n    DataSource:\n      description: ''\n      type: object\n      x-examples:\n        example-1:\n          adapter_type: standard\n          status: ready\n          active: true\n          config:\n            kind: standard\n            data_type: json\n            data_format: json\n          id: fc218b62-5917-4e52-b7a7-25f399a25811\n          container_id: d3cd0199-6511-4c0d-b634-efeff989a8f6\n          name: Sample\n          data_format: null\n          created_at: '2021-08-09T18:40:14.846Z'\n          modified_at: '2021-08-09T18:40:14.846Z'\n          created_by: 16fa1d29-a13f-4783-b56d-cdf9c4946cb4\n          modified_by: 16fa1d29-a13f-4783-b56d-cdf9c4946cb4\n          archived: false\n          status_message: null\n      properties:\n        adapter_type:\n          type: string\n          minLength: 1\n        status:\n          type: string\n          minLength: 1\n        active:\n          type: boolean\n        config:\n          $ref: '#/components/schemas/DataSourceConfig'\n        id:\n          type: string\n          minLength: 1\n        container_id:\n          type: string\n          minLength: 1\n        name:\n          type: string\n          minLength: 1\n        data_format:\n          type: string\n          nullable: true\n        created_at:\n          type: string\n          minLength: 1\n        modified_at:\n          type: string\n          minLength: 1\n        created_by:\n          type: string\n          minLength: 1\n        modified_by:\n          type: string\n          minLength: 1\n        archived:\n          type: boolean\n        status_message:\n          type: string\n          nullable: true\n      required:\n        - adapter_type\n        - active\n        - container_id\n        - name\n    DataSourceConfig:\n      title: DataSourceConfig\n      type: object\n      properties:\n        kind:\n          type: string\n          minLength: 1\n        data_type:\n          type: string\n          minLength: 1\n        data_format:\n          type: string\n          minLength: 1\n    FileModel:\n      description: ''\n      type: object\n      x-examples:\n        example-1:\n          status: ready\n          id: f98827b8-67c5-42f3-86cd-b7bf8490743c\n          data_source_id: fc218b62-5917-4e52-b7a7-25f399a25811\n          created_at: '2021-08-13T17:25:58.052Z'\n          modified_at: '2021-08-13T17:25:58.052Z'\n          created_by: 6df185b0-e511-44e6-9692-2b04b51701d9\n          modified_by: 6df185b0-e511-44e6-9692-2b04b51701d9\n          reference: manual upload\n          status_message: null\n      properties:\n        status:\n          type: string\n          minLength: 1\n        id:\n          type: string\n          minLength: 1\n        data_source_id:\n          type: string\n          minLength: 1\n        created_at:\n          type: string\n          minLength: 1\n        modified_at:\n          type: string\n          minLength: 1\n        created_by:\n          type: string\n          minLength: 1\n        modified_by:\n          type: string\n          minLength: 1\n        reference:\n          type: string\n          minLength: 1\n        status_message:\n          type: string\n          nullable: true\n      required:\n        - status\n        - id\n        - data_source_id\n        - created_at\n        - created_by\n        - reference\n    FileInfo:\n      description: ''\n      type: object\n      x-examples:\n        example-1:\n          metadata: {}\n          id: f7bc7f76-dca4-4733-8ff2-d2b63625a58b\n          file_name: NOTICE.txt\n          file_size: 1.794\n          adapter_file_path: /path/to/file/fc218b62-5917-4e52-b7a7-25f399a25811/\n          adapter: filesystem\n          data_source_id: fc218b62-5917-4e52-b7a7-25f399a25811\n          created_at: '2021-08-13T17:25:58.051Z'\n          modified_at: '2021-08-13T17:25:58.051Z'\n          created_by: 6df185b0-e511-44e6-9692-2b04b51701d9\n          modified_by: 6df185b0-e511-44e6-9692-2b04b51701d9\n          container_id: d3cd0199-6511-4c0d-b634-efeff989a8f6\n          md5hash: bc7244e7706e211cc818fb10e4160957\n      properties:\n        metadata:\n          type: object\n        id:\n          type: string\n          minLength: 1\n        file_name:\n          type: string\n          minLength: 1\n        file_size:\n          type: number\n        adapter_file_path:\n          type: string\n          minLength: 1\n        adapter:\n          type: string\n          minLength: 1\n        data_source_id:\n          type: string\n          minLength: 1\n        created_at:\n          type: string\n          minLength: 1\n        modified_at:\n          type: string\n          minLength: 1\n        created_by:\n          type: string\n          minLength: 1\n        modified_by:\n          type: string\n          minLength: 1\n        container_id:\n          type: string\n          minLength: 1\n        md5hash:\n          type: string\n          nullable: true\n      required:\n        - id\n        - file_name\n        - adapter_file_path\n        - data_source_id\n        - created_at\n        - created_by\n        - container_id\n    DataSourceImport:\n      description: ''\n      type: object\n      x-examples:\n        example-1:\n          status: completed\n          id: 2b0b7423-c77d-4ea3-9266-7e466ce0fbff\n          data_source_id: fc218b62-5917-4e52-b7a7-25f399a25811\n          created_at: '2021-08-09T21:26:31.033Z'\n          modified_at: '2021-08-09T21:27:01.029Z'\n          created_by: 31e3da13-f170-4571-9ed7-80184bc0bf57\n          modified_by: 31e3da13-f170-4571-9ed7-80184bc0bf57\n          reference: manual upload\n          status_message: null\n          records_inserted: '0'\n          total_records: '1'\n      properties:\n        status:\n          type: string\n          minLength: 1\n        id:\n          type: string\n          minLength: 1\n        data_source_id:\n          type: string\n          minLength: 1\n        created_at:\n          type: string\n          minLength: 1\n        modified_at:\n          type: string\n          minLength: 1\n        created_by:\n          type: string\n          minLength: 1\n        modified_by:\n          type: string\n          minLength: 1\n        reference:\n          type: string\n          minLength: 1\n        status_message:\n          type: string\n          nullable: true\n        records_inserted:\n          type: string\n          minLength: 1\n        total_records:\n          type: string\n          minLength: 1\n      required:\n        - status\n        - id\n        - data_source_id\n        - created_at\n        - modified_at\n        - created_by\n        - modified_by\n        - reference\n        - records_inserted\n        - total_records\n    CreateManualImport:\n      title: CreateManualImport\n      description: ''\n      type: object\n      x-examples:\n        example-1:\n          status: ready\n          id: 2ff12802-222c-472c-95f0-ee364ad93d43\n          data_source_id: fc218b62-5917-4e52-b7a7-25f399a25811\n          created_at: '2021-08-13T17:35:07.386Z'\n          modified_at: '2021-08-13T17:35:07.386Z'\n          created_by: 6df185b0-e511-44e6-9692-2b04b51701d9\n          modified_by: 6df185b0-e511-44e6-9692-2b04b51701d9\n          reference: manual upload\n          status_message: null\n      properties:\n        status:\n          type: string\n          minLength: 1\n        id:\n          type: string\n          minLength: 1\n        data_source_id:\n          type: string\n          minLength: 1\n        created_at:\n          type: string\n          minLength: 1\n        modified_at:\n          type: string\n          minLength: 1\n        created_by:\n          type: string\n          minLength: 1\n        modified_by:\n          type: string\n          minLength: 1\n        reference:\n          type: string\n          minLength: 1\n          nullable: true\n        status_message:\n          type: string\n          nullable: true\n    Exporter:\n      description: ''\n      type: object\n      x-examples:\n        example-1:\n          adapter: gremlin\n          status: completed\n          config:\n            kind: standard\n            key: ''\n            path: /gremlin\n            port: '8181'\n            user: ''\n            endpoint: localhost\n            graphson_v1: false\n            traversal_source: g\n            writes_per_second: 300\n          id: d98aa600-7a61-4609-be85-9f510af1610a\n          container_id: 35bfbf46-5b50-49f5-a325-e5f03f43c3aa\n          created_at: '2021-08-26T21:09:45.170Z'\n          modified_at: '2021-08-26T21:09:45.232Z'\n          created_by: cad5491e-5d82-47ed-b4de-2d0c9ea7d545\n          modified_by: system\n          status_message: null\n          destination_type: null\n      properties:\n        adapter:\n          type: string\n          minLength: 1\n        status:\n          type: string\n          minLength: 1\n        config:\n          $ref: '#/components/schemas/ExporterConfig'\n        id:\n          type: string\n          minLength: 1\n        container_id:\n          type: string\n          minLength: 1\n        created_at:\n          type: string\n          minLength: 1\n        modified_at:\n          type: string\n          minLength: 1\n        created_by:\n          type: string\n          minLength: 1\n        modified_by:\n          type: string\n          minLength: 1\n        status_message:\n          type: string\n          nullable: true\n        destination_type:\n          type: string\n          nullable: true\n      required:\n        - adapter\n        - status\n        - config\n        - id\n        - container_id\n        - created_at\n        - modified_at\n        - created_by\n        - modified_by\n    ExporterConfig:\n      description: ''\n      type: object\n      properties:\n        kind:\n          type: string\n          minLength: 1\n        key:\n          type: string\n        path:\n          type: string\n          minLength: 1\n        port:\n          type: string\n          minLength: 1\n        user:\n          type: string\n        endpoint:\n          type: string\n          minLength: 1\n        graphson_v1:\n          type: boolean\n        traversal_source:\n          type: string\n          minLength: 1\n        writes_per_second:\n          type: number\n      required:\n        - kind\n        - key\n        - path\n        - port\n        - user\n        - endpoint\n        - graphson_v1\n        - traversal_source\n        - writes_per_second\n    User:\n      description: ''\n      type: object\n      x-examples:\n        example-1:\n          identity_provider: username_password\n          display_name: Super User\n          email: admin@admin.com\n          admin: true\n          active: true\n          reset_required: false\n          email_valid: false\n          permissions: []\n          roles: []\n          id: dc286640-05c2-4c62-8468-8131c01e3473\n          identity_provider_id: null\n          created_at: '2021-08-09T06:00:00.000Z'\n          modified_at: '2021-08-09T06:00:00.000Z'\n          created_by: system\n          modified_by: system\n          reset_token_issued: null\n          keys: []\n      properties:\n        identity_provider:\n          type: string\n          minLength: 1\n        display_name:\n          type: string\n          minLength: 1\n        email:\n          type: string\n          minLength: 1\n        admin:\n          type: boolean\n        active:\n          type: boolean\n        reset_required:\n          type: boolean\n        email_valid:\n          type: boolean\n        permissions:\n          type: array\n          items:\n            type: object\n        roles:\n          type: array\n          items:\n            type: object\n        id:\n          type: string\n          minLength: 1\n        identity_provider_id:\n          type: string\n          nullable: true\n        created_at:\n          type: string\n          minLength: 1\n        modified_at:\n          type: string\n          minLength: 1\n        created_by:\n          type: string\n          minLength: 1\n        modified_by:\n          type: string\n          minLength: 1\n        reset_token_issued:\n          type: string\n          nullable: true\n        keys:\n          type: array\n          items:\n            $ref: '#/components/schemas/UserKey'\n      required:\n        - identity_provider\n        - display_name\n        - email\n        - admin\n        - active\n        - reset_required\n        - email_valid\n        - id\n    UserKey:\n      description: ''\n      type: object\n      properties:\n        key:\n          type: string\n          minLength: 1\n        secret_raw:\n          type: string\n          minLength: 1\n        user_id:\n          type: string\n          minLength: 1\n      required:\n        - key\n        - secret_raw\n        - user_id\n      x-examples:\n        example-1:\n          key: MzUyOWQ3ODEtYmRkYS00M2E4LThjYzItZTExOTYxMDIzZTg4\n          secret_raw: NThhYTFmZmMtM2RlZS00OTAxLWI3MDgtMDM3ZWJhNTJhZDYz\n          user_id: dc286640-05c2-4c62-8468-8131c01e3473\n    TypeMapping:\n      description: ''\n      type: object\n      x-examples:\n        example-1:\n          active: false\n          id: 43ddc813-3d39-4a71-b106-9bed355d6dcc\n          container_id: 6e459f9b-fa0c-47b7-ab5f-cadd2f709ca3\n          data_source_id: 6ed540f2-78aa-431e-b385-9ca3be34344f\n          shape_hash: 9ZH9H7c7i4EoQ+g4UWOAbawlJWxxKVod+QRPrDIDxjs=\n          created_at: '2021-08-31T19:14:54.607Z'\n          modified_at: '2021-08-31T19:14:54.607Z'\n          sample_payload: {}\n          created_by: 1e785048-5a7d-4be8-8903-73bd0e31da13\n          modified_by: 1e785048-5a7d-4be8-8903-73bd0e31da13\n      properties:\n        active:\n          type: boolean\n        id:\n          type: string\n          minLength: 1\n        container_id:\n          type: string\n          minLength: 1\n        data_source_id:\n          type: string\n          minLength: 1\n        shape_hash:\n          type: string\n          minLength: 1\n        created_at:\n          type: string\n          minLength: 1\n        modified_at:\n          type: string\n          minLength: 1\n        sample_payload:\n          type: object\n        created_by:\n          type: string\n          minLength: 1\n        modified_by:\n          type: string\n          minLength: 1\n        transformations:\n          type: array\n          items:\n            $ref: '#/components/schemas/Transformation'\n        resulting_metatype_name:\n          type: string\n          nullable: true\n        resulting_metatype_relationship_name:\n          type: string\n          nullable: true\n      required:\n        - active\n        - shape_hash\n        - sample_payload\n    Transformation:\n      description: ''\n      type: object\n      x-examples:\n        example-1:\n          conditions: []\n          keys: []\n          id: b70b3f22-efc7-4d94-9cb4-f81f23b7b71b\n          type_mapping_id: 8d24f81f-32cd-4e8d-bae7-e2e6faa6f9c6\n          metatype_id: bcee5d5d-3725-4a2d-80a0-75784ce42fad\n          metatype_relationship_pair_id: null\n          origin_id_key: null\n          destination_id_key: null\n          unique_identifier_key: null\n          root_array: null\n          created_at: '2021-08-31T21:37:41.136Z'\n          modified_at: '2021-08-31T21:37:41.136Z'\n          created_by: bdc90252-b44b-46f6-afff-a1c2f6af1560\n          modified_by: bdc90252-b44b-46f6-afff-a1c2f6af1560\n          archived: false\n          metatype_name: MachineLearningModel\n          metatype_relationship_pair_name: null\n          container_id: 6e459f9b-fa0c-47b7-ab5f-cadd2f709ca3\n          shape_hash: 9Gl1DEOJoD8hVNS8LH8tMhxAk266y25rLge0l/ZYIrk=\n          data_source_id: 6ed540f2-78aa-431e-b385-9ca3be34344f\n      properties:\n        conditions:\n          type: array\n          items:\n            $ref: '#/components/schemas/TransformationCondition'\n        keys:\n          type: array\n          items:\n            $ref: '#/components/schemas/TransformationKey'\n        id:\n          type: string\n          minLength: 1\n        type_mapping_id:\n          type: string\n          minLength: 1\n        metatype_id:\n          type: string\n          minLength: 1\n          nullable: true\n        metatype_relationship_pair_id:\n          type: string\n          nullable: true\n        origin_id_key:\n          type: string\n          nullable: true\n        destination_id_key:\n          type: string\n          nullable: true\n        unique_identifier_key:\n          type: string\n          nullable: true\n        root_array:\n          type: string\n          nullable: true\n        created_at:\n          type: string\n          minLength: 1\n        modified_at:\n          type: string\n          minLength: 1\n        created_by:\n          type: string\n          minLength: 1\n        modified_by:\n          type: string\n          minLength: 1\n        archived:\n          type: boolean\n        metatype_name:\n          type: string\n          minLength: 1\n          nullable: true\n        metatype_relationship_pair_name:\n          type: string\n          nullable: true\n        container_id:\n          type: string\n          minLength: 1\n        shape_hash:\n          type: string\n          minLength: 1\n        data_source_id:\n          type: string\n          minLength: 1\n      required:\n        - conditions\n        - keys\n        - archived\n    TransformationKey:\n      description: ''\n      type: object\n      properties:\n        key:\n          type: string\n          minLength: 1\n        metatype_key_id:\n          type: string\n          minLength: 1\n      required:\n        - key\n        - metatype_key_id\n      x-examples:\n        example-1:\n          key: file name\n          metatype_key_id: a1cdc78f-01be-4d06-a7e7-6981e67d6678\n    ImportModel:\n      description: ''\n      type: object\n      x-examples:\n        example-1:\n          errors: null\n          data_source_config:\n            kind: standard\n            data_type: json\n          id: 39\n          data_source_id: 6ed540f2-78aa-431e-b385-9ca3be34344f\n          import_id: 013112d6-ab2b-4f71-81ec-3a5a38b21afc\n          data: {}\n          inserted_at: '2021-08-31T23:23:18.712Z'\n          created_at: '2021-08-31T23:22:30.354Z'\n          shape_hash: 3uiJ0SgkA/jG6IQ8dSFBtMmQShvRsKlBRXDCwMkws3c=\n          container_id: 6e459f9b-fa0c-47b7-ab5f-cadd2f709ca3\n      properties:\n        errors:\n          type: string\n          nullable: true\n        data_source_config:\n          $ref: '#/components/schemas/DataSourceConfig'\n        id:\n          type: number\n        data_source_id:\n          type: string\n          minLength: 1\n        import_id:\n          type: string\n          minLength: 1\n        data:\n          type: object\n        inserted_at:\n          type: string\n          minLength: 1\n        created_at:\n          type: string\n          minLength: 1\n        shape_hash:\n          type: string\n          minLength: 1\n        container_id:\n          type: string\n          minLength: 1\n      required:\n        - data_source_id\n        - import_id\n    Event:\n      description: ''\n      type: object\n      x-examples:\n        example-1:\n          active: true\n          id: 18c8de75-c551-4dbe-9a1f-ee0ffabf69a4\n          app_name: Example\n          app_url: 'http://0.0.0.0:5001/event'\n          data_source_id: fc218b62-5917-4e52-b7a7-25f399a25811\n          container_id: null\n          event_type: data_ingested\n          created_at: '2021-08-09T20:21:22.589Z'\n          modified_at: '2021-08-09T20:21:22.589Z'\n          created_by: 16fa1d29-a13f-4783-b56d-cdf9c4946cb4\n          modified_by: 16fa1d29-a13f-4783-b56d-cdf9c4946cb4\n      properties:\n        id:\n          type: string\n        container_id:\n          type: string\n          nullable: true\n        data_source_id:\n          type: string\n          nullable: true\n        event_type:\n          type: string\n        event_config:\n          type: object\n        event:\n          type: object\n        processed:\n          type: boolean\n        created_at:\n          type: string\n        created_by:\n          type: string\n      required:\n        - event_type\n        - event\n    DataStaging:\n      description: ''\n      type: object\n      x-examples:\n        example-1:\n          data_source_id: dataSourceID\n          import_id: importRecordID\n          data: {}\n          shape_hash: test_hash\n      properties:\n        data_source_id:\n          type: string\n          minLength: 1\n        import_id:\n          type: string\n          minLength: 1\n        data:\n          type: object\n        shape_hash:\n          type: string\n          minLength: 1\n        id:\n          type: string\n        errors:\n          type: string\n        inserted_at:\n          type: string\n        created_at:\n          type: string\n      required:\n        - import_id\n    TypeMappingExportPayload:\n      title: TypeMappingExportPayload\n      type: object\n      properties:\n        mapping_ids:\n          type: array\n          items:\n            type: string\n        target_data_source:\n          type: string\n      required:\n        - mapping_ids\n    ContainerInvite:\n      title: ContainerInvite\n      type: object\n      properties:\n        id:\n          type: string\n        email:\n          type: string\n        origin_user:\n          type: string\n        token:\n          type: string\n        issued:\n          type: string\n        container:\n          $ref: '#/components/schemas/Container'\n    Container:\n      description: ''\n      type: object\n      x-examples:\n        example-1:\n          name: Test Container 4\n          description: Test Container Description\n          id: 07b1e35e-0a7c-476d-ada8-5906b16da1b8\n          archived: false\n          created_at: '2021-08-06T21:17:49.545Z'\n          modified_at: '2021-08-06T21:17:49.545Z'\n          created_by: fa3c2cc0-2c4e-441c-aa78-cf77f8af8cd1\n          modified_by: fa3c2cc0-2c4e-441c-aa78-cf77f8af8cd1\n          config: null\n          active_graph_id: 0cc62f41-ceaa-4a68-8f1c-7856525c2668\n      properties:\n        name:\n          type: string\n          minLength: 1\n        description:\n          type: string\n          minLength: 1\n        id:\n          type: string\n          minLength: 1\n        created_at:\n          type: string\n          minLength: 1\n        modified_at:\n          type: string\n          minLength: 1\n        created_by:\n          type: string\n          minLength: 1\n        modified_by:\n          type: string\n          minLength: 1\n        config:\n          $ref: '#/components/schemas/ContainerConfig'\n        deleted_at:\n          type: string\n      required:\n        - name\n        - description\n    ContainerConfig:\n      description: ''\n      type: object\n      properties:\n        data_versioning_enabled:\n          type: boolean\n    NotFound404:\n      description: ''\n      type: object\n      x-examples:\n        example-1:\n          isError: true\n          error:\n            errorCode: 404\n            error: unable to find user\n      properties:\n        isError:\n          type: boolean\n        error:\n          $ref: '#/components/schemas/ErrorModel'\n      required:\n        - isError\n        - error\n    ErrorModel:\n      title: ErrorModel\n      type: object\n      properties:\n        error:\n          type: string\n        errorCode:\n          type: number\n    RSAInitRequest:\n      title: RSAInitRequest\n      type: object\n      properties:\n        subjectName:\n          type: string\n        securID:\n          type: string\n      required:\n        - subjectName\n    RSAVerifyRequest:\n      title: RSAVerifyRequest\n      type: object\n      properties:\n        subjectName:\n          type: string\n        securID:\n          type: string\n        authnAttemptId:\n          type: string\n        inResponseTo:\n          type: string\n      required:\n        - securID\n        - authnAttemptId\n        - inResponseTo\n    RSAStatusRequest:\n      title: RSAStatusRequest\n      type: object\n      properties:\n        authnAttemptId:\n          type: string\n        removeAttemptId:\n          type: boolean\n      required:\n        - authnAttemptId\n    RSACancelRequest:\n      title: RSACancelRequest\n      type: object\n      properties:\n        authnAttemptId:\n          type: string\n        removeAttemptId:\n          type: boolean\n      required:\n        - authnAttemptId\n    RSAResponse:\n      title: RSAResponse\n      type: object\n      properties:\n        value:\n          type: object\n          properties:\n            attemptResponseCode:\n              type: string\n            attemptReasonCode:\n              type: string\n            challengeMethods:\n              type: object\n              properties:\n                challenges:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      methodSetId:\n                        type: string\n                      requiredMethods:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            methodId:\n                              type: string\n                            priority:\n                              type: string\n                            versions:\n                              type: array\n                              items:\n                                type: object\n                                properties:\n                                  versionId:\n                                    type: string\n                                  methodAttributes:\n                                    type: array\n                                    items:\n                                      type: string\n                                  valueRequired:\n                                    type: boolean\n                                  referenceId:\n                                    type: string\n                                  prompt:\n                                    type: object\n                                    properties:\n                                      promptResourceId:\n                                        type: string\n                                      defaultText:\n                                        type: string\n                                      formatRegex:\n                                        type: string\n                                      defaultValue:\n                                        type: string\n                                      valueBeingDefined:\n                                        type: boolean\n                                      sensitive:\n                                        type: boolean\n                                      minLength:\n                                        type: string\n                                      maxLength:\n                                        type: string\n                                      promptArgs:\n                                        type: array\n                                        items:\n                                          type: string\n            credentialValidationResults:\n              type: array\n              items:\n                type: object\n                properties:\n                  methodId:\n                    type: string\n                  methodResponseCode:\n                    type: string\n                  methodReasonCode:\n                    type: string\n                  authnAttributes:\n                    type: array\n                    items:\n                      type: string\n            context:\n              type: object\n              properties:\n                authnAttemptId:\n                  type: string\n                messageId:\n                  type: string\n                inResponseTo:\n                  type: string\n        isError:\n          type: boolean\n    RSAStatusResponse:\n      title: RSAStatusResponse\n      type: object\n      properties:\n        attemptResponseCode:\n          type: string\n        attemptReasonCode:\n          type: string\n        subjectName:\n          type: string\n        authnPolicyId:\n          type: string\n        sessionAttributes:\n          type: array\n          items:\n            type: string\n        successfulMethods:\n          type: array\n          items:\n            type: string\n        attemptExpires:\n          type: string\n    ListTasksResponse:\n      title: ListTasksResponse\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/Task'\n        isError:\n          type: boolean\n    Task:\n      title: Task\n      type: object\n      properties:\n        id:\n          type: string\n        container_id:\n          type: string\n        task_type:\n          type: string\n        status:\n          type: string\n        query:\n          type: string\n        data:\n          type: object\n        config:\n          $ref: '#/components/schemas/TaskConfig'\n        status_message:\n          type: string\n        created_at:\n          type: string\n        modified_at:\n          type: string\n        created_by:\n          type: string\n        modified_by:\n          type: string\n    TaskConfig:\n      title: TaskConfig\n      type: object\n      properties:\n        kind:\n          type: string\n        user:\n          $ref: '#/components/schemas/User'\n      required:\n        - kind\n    CreateTaskResponse:\n      title: CreateTaskResponse\n      type: object\n      properties:\n        value:\n          $ref: '#/components/schemas/Task'\n        isError:\n          type: boolean\n    UpdateTaskResponse:\n      title: UpdateTaskResponse\n      type: object\n      properties:\n        value:\n          $ref: '#/components/schemas/Task'\n        isError:\n          type: boolean\n    GetTaskResponse:\n      title: GetTaskResponse\n      type: object\n      properties:\n        value:\n          $ref: '#/components/schemas/Task'\n        isError:\n          type: boolean\n    EventAction:\n      title: EventAction\n      type: object\n      properties:\n        id:\n          type: string\n        container_id:\n          type: string\n        data_source_id:\n          type: string\n        event_type:\n          type: string\n        action_type:\n          type: string\n        action_config:\n          type: object\n        destination:\n          type: string\n        destination_data_source_id:\n          type: string\n        active:\n          type: boolean\n        created_at:\n          type: string\n        modified_at:\n          type: string\n        deleted_at:\n          type: string\n        created_by:\n          type: string\n        modified_by:\n          type: string\n      required:\n        - event_type\n        - action_type\n    EventActionStatus:\n      title: EventActionStatus\n      type: object\n      properties:\n        id:\n          type: string\n        event_action_id:\n          type: string\n        status:\n          type: string\n        status_message:\n          type: string\n          nullable: true\n        created_at:\n          type: string\n        modified_at:\n          type: string\n          nullable: true\n        modified_by:\n          type: string\n          nullable: true\n        event:\n          $ref: '#/components/schemas/Event'\n      required:\n        - event_action_id\n    CreateEventRequest:\n      title: CreateEventRequest\n      type: object\n      properties:\n        container_id:\n          type: string\n        data_source_id:\n          type: string\n        event_type:\n          type: string\n        event_config:\n          type: object\n        event:\n          type: object\n      required:\n        - event_type\n        - event\n    ListEventActionResponse:\n      title: ListEventActionResponse\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/EventAction'\n        isError:\n          type: boolean\n    CreateEventActionRequest:\n      title: CreateEventActionRequest\n      type: object\n      properties:\n        container_id:\n          type: string\n        data_source_id:\n          type: string\n        event_type:\n          type: string\n        action_type:\n          type: string\n        action_config:\n          type: object\n        destination:\n          type: string\n        destination_data_source_id:\n          type: string\n        active:\n          type: boolean\n      required:\n        - event_type\n        - action_type\n    CreateEventActionResponse:\n      title: CreateEventActionResponse\n      type: object\n      properties:\n        value:\n          $ref: '#/components/schemas/EventAction'\n        isError:\n          type: boolean\n    GetEventActionResponse:\n      title: GetEventActionResponse\n      type: object\n      properties:\n        value:\n          $ref: '#/components/schemas/EventAction'\n        isError:\n          type: boolean\n    UpdateEventActionResponse:\n      title: UpdateEventActionResponse\n      type: object\n      properties:\n        value:\n          $ref: '#/components/schemas/EventAction'\n        isError:\n          type: boolean\n    ListEventActionStatusResponse:\n      title: ListEventActionStatusResponse\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/EventActionStatus'\n        isError:\n          type: boolean\n    GetEventActionStatusResponse:\n      title: GetEventActionStatusResponse\n      type: object\n      properties:\n        value:\n          $ref: '#/components/schemas/EventActionStatus'\n        isError:\n          type: boolean\n    UpdateEventActionStatusRequest:\n      title: UpdateEventActionStatusRequest\n      type: object\n      properties:\n        status:\n          type: string\n        status_message:\n          type: string\n    UpdateEventActionStatusResponse:\n      title: UpdateEventActionStatusResponse\n      type: object\n      properties:\n        value:\n          $ref: '#/components/schemas/EventActionStatus'\n        isError:\n          type: boolean\n    ValidateMetatypePropertiesRequest:\n      title: ValidateMetatypePropertiesRequest\n      type: object\n      properties:\n        property_name_here:\n          type: string\n  responses: {}\n"
		}
	},
	"Error": "parse: parse spec: paths: /Core.swagger_collection.yaml/paths//containers/{container_id}/graphs/nodes/{node_id}: get: operation \"get-Core.swagger_collection.yaml-paths-~1containers~1-container_id-~1graphs~1nodes~1-node_id\": responses: no responses"
}