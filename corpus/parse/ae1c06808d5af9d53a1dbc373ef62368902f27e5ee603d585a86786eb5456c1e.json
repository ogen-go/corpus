{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/clouditor/clouditor"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/assessment/openapi.yaml",
			"byteSize": 5580,
			"content": "# Generated with protoc-gen-openapi\n# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi\n\nopenapi: 3.0.3\ninfo:\n    title: Assessment API\n    description: |-\n        Representing the link between orchestrator and discovery: Assessing evidences\n         from discovery and sending results to orchestrator\n    version: 0.0.1\npaths:\n    /v1/assessment/evidences:\n        post:\n            tags:\n                - Assessment\n            description: |-\n                Assesses the evidence sent by the discovery. Part of the public API, also\n                 exposed as REST.\n            operationId: Assessment_AssessEvidence\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/Evidence'\n                required: true\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/AssessEvidenceResponse'\n    /v1/assessment/results:\n        get:\n            tags:\n                - Assessment\n            description: List all assessment results. Part of the public API, also exposed as REST.\n            operationId: Assessment_ListAssessmentResults\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ListAssessmentResultsResponse'\ncomponents:\n    schemas:\n        AnyJSONValue:\n            oneOf:\n                - type: string\n                - type: number\n                - type: integer\n                - type: boolean\n                - type: object\n                - type: array\n                  items:\n                    $ref: '#/components/schemas/AnyJSONValue'\n            description: AnyJSONValue is a \"catch all\" type that can hold any JSON value, except null as this is not allowed in OpenAPI\n        AssessEvidenceResponse:\n            type: object\n            properties:\n                status:\n                    enum:\n                        - ASSESSMENT_STATUS_UNSPECIFIED\n                        - WAITING_FOR_RELATED\n                        - ASSESSED\n                        - FAILED\n                    type: string\n                    format: enum\n                statusMessage:\n                    type: string\n        AssessmentResult:\n            type: object\n            properties:\n                id:\n                    type: string\n                    description: Assessment result id\n                timestamp:\n                    type: string\n                    description: Time of assessment\n                    format: RFC3339\n                metricId:\n                    type: string\n                    description: Reference to the metric the assessment was based on\n                metricConfiguration:\n                    $ref: '#/components/schemas/MetricConfiguration'\n                compliant:\n                    type: boolean\n                    description: 'Compliant case: true or false'\n                evidenceId:\n                    type: string\n                    description: Reference to the assessed evidence\n                resourceId:\n                    type: string\n                    description: Reference to the resource of the assessed evidence\n                nonComplianceComments:\n                    type: string\n                    description: Some comments on the reason for non-compliance\n            description: A result resource, representing the result after assessing the cloud resource with id resource_id.\n        Evidence:\n            type: object\n            properties:\n                id:\n                    type: string\n                    description: the ID in a uuid format\n                timestamp:\n                    type: string\n                    description: time of evidence creation\n                    format: RFC3339\n                serviceId:\n                    type: string\n                    description: Reference to a service this evidence was gathered from\n                toolId:\n                    type: string\n                    description: Reference to the tool which provided the evidence\n                raw:\n                    type: string\n                    description: Contains the evidence in its original form without following a defined schema, e.g. the raw JSON\n                resource:\n                    $ref: '#/components/schemas/AnyJSONValue'\n            description: An evidence resource\n        ListAssessmentResultsResponse:\n            type: object\n            properties:\n                results:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/AssessmentResult'\n        MetricConfiguration:\n            type: object\n            properties:\n                operator:\n                    type: string\n                    description: The operator to compare the metric, such as == or \u003e\n                targetValue:\n                    $ref: '#/components/schemas/AnyJSONValue'\n                isDefault:\n                    type: boolean\n                    description: Whether this configuration is a default configuration\n            description: Defines the operator and a target value for an individual metric\ntags:\n    - name: Assessment\n"
		}
	},
	"Error": "parse: parse spec: paths: /v1/assessment/results: get: operation \"Assessment_ListAssessmentResults\": responses: 200: content: \"application/json\": schema: parse schema: resolve \"#/components/schemas/ListAssessmentResultsResponse\": parse schema: property \"results\": parse schema: item: parse schema: resolve \"#/components/schemas/AssessmentResult\": parse schema: property \"metricConfiguration\": parse schema: resolve \"#/components/schemas/MetricConfiguration\": parse schema: property \"targetValue\": parse schema: resolve \"#/components/schemas/AnyJSONValue\": parse schema: oneOf: [5]: parse schema: item: parse schema: resolve \"#/components/schemas/AnyJSONValue\": infinite recursion"
}