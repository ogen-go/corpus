{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/heremaps/xyz-hub"
		},
		"file": {
			"name": "openapi-http-connector.yaml",
			"size": 0,
			"path": "xyz-hub-service/src/main/resources/openapi-http-connector.yaml",
			"byteSize": 10615,
			"content": "openapi: 3.0.2\ninfo:\n  title: HERE HTTP-PSQL Connector\n  description: |-\n    HERE HTTP-PSQL Connector is a PSQL-Connector which provides a REST API to access data and maintain database related stuff.\n  contact: {}\n  version: 1.0.0\nservers:\n  - url: /\ntags:\n  - name: Service\n    description: Endpoint for Events\n  - name: Status\n    description: Retreive status\n  - name: Maintain Connector\n    description: Initialize or maintain underlying databases\n  - name: Maintain Spaces\n    description: Maintain database releated stuff on space level\n  - name: Maintain History\n    description: Maintain database releated stuff on history level\npaths:\n  '/psql/event':\n    post:\n      tags:\n        - Service\n      summary: Event Endpoint\n      description: \u003e-\n        Process an Event.\n      operationId: postEvent\n      requestBody:\n        description: Entire Event\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Event'\n      responses:\n        '200':\n          description: Connector Response\n        '201':\n          description: Connector Response\n        '400':\n          $ref: '#/components/responses/ErrorResponse400'\n  '/psql/status':\n    get:\n      tags:\n        - Status\n      summary: Get status of Connector\n      description: \u003e-\n        Get the status of a connector in focus of its configured underlying database.\n      operationId: getStatus\n      parameters:\n        - $ref: '#/components/parameters/ConnectorId'\n        - $ref: '#/components/parameters/ECPS'\n        - $ref: '#/components/parameters/Passphrase'\n      responses:\n        '200':\n          $ref: '#/components/responses/ConnectorStatusResponse'\n        '400':\n          $ref: '#/components/responses/ErrorResponse400'\n  '/psql/health':\n    get:\n      tags:\n        - Status\n      summary: Health-Check endpoint\n      description: \u003e-\n        Performes a connector Health-Check\n      operationId: getHealthCheck\n      responses:\n        '200':\n          $ref: '#/components/responses/HealthResponse'\n  '/psql/initialization':\n    post:\n      tags:\n        - Maintain Connector\n      summary:  Connector Initialization\n      description: Initialize the underlying database from a connector\n      operationId: postInitialization\n      parameters:\n        - $ref: '#/components/parameters/ConnectorId'\n        - $ref: '#/components/parameters/ECPS'\n        - $ref: '#/components/parameters/Passphrase'\n        - name: force\n          in: query\n          description: \u003e-\n            Force\n          required: false\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description : OK\n        '400':\n          $ref: '#/components/responses/ErrorResponse400'\n        '405':\n          $ref: '#/components/responses/ErrorResponse405'\n  '/psql/maintain/indices':\n    post:\n      tags:\n        - Maintain Connector\n      summary: Trigger Index Maintenance\n      description: Maintain all Indices which are getting created automatically\n      operationId: postMaintainIndices\n      parameters:\n        - $ref: '#/components/parameters/ConnectorId'\n        - $ref: '#/components/parameters/ECPS'\n        - $ref: '#/components/parameters/Passphrase'\n        - name: autoIndexing\n          in: query\n          description: \u003e-\n            Choose if AutoIndexing should get triggerd\n          required: true\n          schema:\n            type: boolean\n            default: false\n      responses:\n        '200':\n          description : OK\n        '400':\n          $ref: '#/components/responses/ErrorResponse400'\n  '/psql/maintain/space/{spaceId}':\n    get:\n      tags:\n        - Maintain Spaces\n      summary: Get maintainance status of a Space\n      description: Reteives information about the current maintenance status of a space.\n      operationId: getMaintenanceStatusSpace\n      parameters:\n        - $ref: '#/components/parameters/SpaceId'\n        - $ref: '#/components/parameters/ConnectorId'\n        - $ref: '#/components/parameters/ECPS'\n        - $ref: '#/components/parameters/Passphrase'\n      responses:\n        '200':\n          description : OK\n        '400':\n          $ref: '#/components/responses/ErrorResponse400'\n    post:\n      tags:\n        - Maintain Spaces\n      summary: Trigger Space Maintenance\n      description: Maintain all Indices which are required for a space\n      operationId: postMaintainSpace\n      parameters:\n        - $ref: '#/components/parameters/SpaceId'\n        - $ref: '#/components/parameters/ConnectorId'\n        - $ref: '#/components/parameters/ECPS'\n        - $ref: '#/components/parameters/Passphrase'\n        - name: force\n          in: query\n          description: \u003e-\n            Force\n          required: false\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description : OK\n        '400':\n          $ref: '#/components/responses/ErrorResponse400'\n  '/psql/maintain/space/{spaceId}/history':\n    post:\n      tags:\n        - Maintain History\n      summary: Trigger History Maintenance\n      description: Reduce the size of a History based on globale versions\n      operationId: postMaintainHistory\n      parameters:\n        - $ref: '#/components/parameters/SpaceId'\n        - $ref: '#/components/parameters/ConnectorId'\n        - $ref: '#/components/parameters/ECPS'\n        - $ref: '#/components/parameters/Passphrase'\n        - name: maxVersionCount\n          in: query\n          description: \u003e-\n            Provide maxVersionCount\n          required: false\n          schema:\n            type: integer\n        - name: currentVersion\n          in: query\n          description: \u003e-\n            Provide current Version\n          required: false\n          schema:\n            type: integer\n            #default: false\n        - name: passphrase\n          in: query\n          description: \u003e-\n            Provide ECPS Passphrase\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description : OK\n        '400':\n          $ref: '#/components/responses/ErrorResponse400'\ncomponents:\n  parameters:\n    SpaceId:\n      name: spaceId\n      in: path\n      description: The unique identifier of the space.\n      required: true\n      schema:\n        type: string\n    ConnectorId:\n      name: connectorId\n      in: query\n      description: \u003e-\n        Provide ConnectorId\n      required: true\n      schema:\n        type: string\n    ECPS:\n      name: ecps\n      in: query\n      description: \u003e-\n        Provide ECPS String\n      required: true\n      schema:\n        type: string\n    Passphrase:\n      name: passphrase\n      in: query\n      description: \u003e-\n        Provide ECPS Passphrase\n      required: false\n      schema:\n        type: string\n  responses:\n    EmptyResponse:\n      description: \u003e-\n        An empty response as a result of a user-request with accepted MIME type application/x-empty.\n      content:\n        application/x-empty:\n          schema:\n            type: string\n    ErrorResponse400:\n      description: Malformed or Bad Request.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            type: ErrorResponse\n            streamId: 7480e28a-e273-11e8-9af8-7508bbe361d9\n            error: Exception\n            errorMessage: \u003cInvalid request details\u003e\n    ErrorResponse404:\n      description: Not found.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            type: ErrorResponse\n            streamId: 7480e28a-e273-11e8-9af8-7508bbe361d9\n            error: Exception\n            errorMessage: The requested resource does not exist.\n    ErrorResponse405:\n      description: Not found.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            type: ErrorResponse\n            streamId: 7480e28a-e273-11e8-9af8-7508bbe361d9\n            error: Exception\n            errorMessage: Method Not Allowed.\n    ErrorResponse409:\n      description: An error response which indicates a conflict.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            type: ErrorResponse\n            streamId: 7480e28a-e273-11e8-9af8-7508bbe361d9\n            error: Exception\n            errorMessage: The record exists.\n    HealthResponse:\n      description: HealhCheck Response\n      content:\n        application/json:\n          examples:\n            response:\n              value:\n                status: OK\n    ConnectorStatusResponse:\n      description: ConnectorStatus Response\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ConnectorStatus'\n  schemas:\n    Error:\n      type: object\n      description: \u003e-\n        The response send when the request failed. This response may be send for\n        certain HTTP error codes like 403 Forbidden or 502 Bad Gateway and\n        should hold more details about the error reason.\n      properties:\n        streamId:\n          description: \u003e-\n            A unique identifier of the request. This identifier should be\n            provided when reporting errors. Its used to track requests\n            through the XYZ platform.\n          type: string\n        type:\n          type: string\n          description: The type of the error. Defaults to 'ErrorResponse'.\n        error:\n          type: string\n          description: The error summary.\n        errorMessage:\n          type: string\n          description: \u003e-\n            A human readable message in English that should provide a more\n            detailed description of the error reason.\n    Event:\n      type: object\n      description: A data holder for features which points to a persistent storage.\n      properties:\n        type:\n          description: \u003e-\n            The unique identifier of the event type\n          example: HealthCheckEvent\n          type: string\n      example:\n        type: HealthCheckEvent\n        connectorParams:\n          connectorId: test\n          propertySearch: true\n    ConnectorStatus:\n      type: object\n      description: A data holder for the status of a Connector\n      example:\n        type: ConnectorStatus\n        initialized: true\n        extensions:\n          - postgis\n          - dblink\n        scriptVersions:\n          h3: 100\n          ext: 141\n        maintenanceStatus:\n          AUTO_INDEXING:\n            maintainedAt: 1622531941945\n            maintenanceRunning:\n              - 1622531941945",
			"canonicalURL": "/github.com/heremaps/xyz-hub@97c024d8147d333f9b1a07beb0477df17b158ae2/-/blob/xyz-hub-service/src/main/resources/openapi-http-connector.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/heremaps/xyz-hub/blob/97c024d8147d333f9b1a07beb0477df17b158ae2/xyz-hub-service/src/main/resources/openapi-http-connector.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/psql/maintain/space/{spaceId}/history\": post: operation \"postMaintainHistory\": parameters: at 1:7443: duplicate parameter: \"passphrase\" in \"query\""
}