{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/enviroCar/enviroCar-server"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "rest/src/main/resources/openapi.yaml",
			"byteSize": 81403,
			"content": "openapi: 3.0.3\ninfo:\n  title: enviroCar REST API\n  description: enviroCar REST API\n  version: \"1.0.0\"\n  contact:\n    email: info@envirocar.org\n    name: \"52\\xB0North GmbH\"\n    url: https://52north.org\n  license:\n    name: AGPL 3.0\n    url: http://www.gnu.org/licenses/agpl-3.0.de.html\n  termsOfService: https://envirocar.org/conditions.html?lng=en\nservers: [ ]\ntags:\n  - description: General Operations\n    name: General\n  - description: Track Operations\n    name: Tracks\n  - description: Measurement Operations\n    name: Measurements\n  - description: Sensor Operations\n    name: Sensors\n  - description: Phenomenon Operations\n    name: Phenomenons\n  - description: Statistic Operations\n    name: Statistics\n  - description: User Operations\n    name: Users\n  - description: Group Operations\n    name: Groups\n  - description: Announcements Operations\n    name: Announcements\n  - description: Badges Operations\n    name: Badges\n  - description: Terms Of Use and Privacy Statement Operations\n    name: Terms\n  - description: Schema Operations\n    name: Schemas\n  - description: Fueling Operations\n    name: Fuelings\npaths:\n  '/':\n    get:\n      operationId: getRoot\n      summary: Get the root index.\n      description: Get the root index.\n      tags:\n        - General\n      responses:\n        '200':\n          $ref: '#/components/responses/Root'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/api-docs':\n    get:\n      operationId: apiDocs\n      summary: Get the OpenAPI specification of this service.\n      description: Get the OpenAPI specification of this service.\n      tags:\n        - General\n      responses:\n        '200':\n          $ref: '#/components/responses/ApiDocs'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/phenomenons':\n    get:\n      operationId: getPhenomenons\n      summary: Get the phenomenon listing.\n      description: Get the phenomenon listing.\n      tags:\n        - Phenomenons\n      parameters:\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/range'\n      responses:\n        '200':\n          $ref: '#/components/responses/Phenomenons'\n        '206':\n          $ref: '#/components/responses/Phenomenons'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n    post:\n      operationId: createPhenomenon\n      summary: Create new phenomenon.\n      description: Create new phenomenon.\n      tags:\n        - Phenomenons\n      security:\n        - basicAuth: [ ]\n      requestBody:\n        $ref: '#/components/requestBodies/CreatePhenomenon'\n      responses:\n        '201':\n          $ref: '#/components/responses/Created'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '451':\n          $ref: '#/components/responses/UnavailableForLegalReasons'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/phenomenons/{phenomenonId}':\n    parameters:\n      - $ref: '#/components/parameters/phenomenonId'\n    get:\n      operationId: getPhenomenonById\n      summary: Get the phenomenon by id.\n      description: Get the phenomenon by id.\n      tags:\n        - Phenomenons\n      responses:\n        '200':\n          $ref: '#/components/responses/Phenomenon'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/phenomenons/{phenomenonId}/statistic':\n    parameters:\n      - $ref: '#/components/parameters/phenomenonId'\n    get:\n      operationId: getPhenomenonStatistic\n      summary: Get the phenomenon statistics.\n      description: Get the phenomenon statistics.\n      tags:\n        - Phenomenons\n        - Statistics\n      responses:\n        '200':\n          $ref: '#/components/responses/Statistic'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/sensors':\n    get:\n      operationId: getSensors\n      summary: Get the Sensor listing.\n      description: Get the Sensor listing.\n      tags:\n        - Sensors\n      parameters:\n        - $ref: '#/components/parameters/sensorType'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/range'\n      responses:\n        '200':\n          $ref: '#/components/responses/Sensors'\n        '206':\n          $ref: '#/components/responses/Sensors'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n    post:\n      operationId: createSensor\n      summary: Create a new Sensor.\n      description: Create a new Sensor.\n      tags:\n        - Sensors\n      requestBody:\n        $ref: '#/components/requestBodies/CreateSensor'\n      responses:\n        '201':\n          $ref: '#/components/responses/Created'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '451':\n          $ref: '#/components/responses/UnavailableForLegalReasons'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/sensors/{sensorId}':\n    parameters:\n      - $ref: '#/components/parameters/sensorId'\n    get:\n      operationId: getSensorById\n      summary: Get the Sensor by id.\n      description: Get the Sensor by id.\n      tags:\n        - Sensors\n      responses:\n        '200':\n          $ref: '#/components/responses/Sensor'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/sensors/{sensorId}/statistics':\n    parameters:\n      - $ref: '#/components/parameters/sensorId'\n    get:\n      operationId: getSensorStatistics\n      summary: Get the Sensor statistics.\n      description: Get the Sensor statistics.\n      tags:\n        - Sensors\n        - Statistics\n      responses:\n        '200':\n          $ref: '#/components/responses/Statistics'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/tracks':\n    get:\n      operationId: getTracks\n      summary: Get the list of tracks.\n      description: Get the list of tracks.\n      tags:\n        - Tracks\n      parameters:\n        - $ref: '#/components/parameters/bbox'\n        - $ref: '#/components/parameters/nearPoint'\n        - $ref: '#/components/parameters/after'\n        - $ref: '#/components/parameters/before'\n        - $ref: '#/components/parameters/begins'\n        - $ref: '#/components/parameters/begunBy'\n        - $ref: '#/components/parameters/contains'\n        - $ref: '#/components/parameters/during'\n        - $ref: '#/components/parameters/endedBy'\n        - $ref: '#/components/parameters/ends'\n        - $ref: '#/components/parameters/equals'\n        - $ref: '#/components/parameters/meets'\n        - $ref: '#/components/parameters/metBy'\n        - $ref: '#/components/parameters/overlapped'\n        - $ref: '#/components/parameters/overlaps'\n        - $ref: '#/components/parameters/status'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/range'\n      responses:\n        '200':\n          $ref: '#/components/responses/Tracks'\n        '206':\n          $ref: '#/components/responses/Tracks'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n    post:\n      operationId: createTrack\n      summary: Create a new track.\n      description: Create a new track.\n      tags:\n        - Tracks\n      security:\n        - basicAuth: [ ]\n      requestBody:\n        $ref: '#/components/requestBodies/CreateTrack'\n      responses:\n        '201':\n          $ref: '#/components/responses/Created'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '451':\n          $ref: '#/components/responses/UnavailableForLegalReasons'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/tracks/{trackId}':\n    parameters:\n      - $ref: '#/components/parameters/trackId'\n    get:\n      operationId: getTrackById\n      summary: Get the specified track.\n      description: Get the specified track.\n      tags:\n        - Tracks\n      responses:\n        '200':\n          $ref: '#/components/responses/Track'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n    put:\n      operationId: modifyTrack\n      summary: Update the specified track.\n      description: Update the specified track.\n      tags:\n        - Tracks\n      security:\n        - basicAuth: [ ]\n      requestBody:\n        $ref: '#/components/requestBodies/ModifyTrack'\n      responses:\n        '204':\n          $ref: '#/components/responses/NoContent'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n    delete:\n      operationId: deleteTrack\n      summary: Delete the specified track.\n      description: Delete the specified track.\n      tags:\n        - Tracks\n      security:\n        - basicAuth: [ ]\n      responses:\n        '204':\n          $ref: '#/components/responses/NoContent'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/tracks/{trackId}/measurements':\n    parameters:\n      - $ref: '#/components/parameters/trackId'\n    get:\n      operationId: getTrackMeasurements\n      summary: Get the measurements of a track.\n      description: Get the measurements of a track.\n      tags:\n        - Tracks\n        - Measurements\n      parameters:\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/range'\n      responses:\n        '200':\n          $ref: '#/components/responses/Measurements'\n        '206':\n          $ref: '#/components/responses/Measurements'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n    post:\n      operationId: addTrackMeasurement\n      summary: Add a measurement to a track.\n      description: Add a measurement to a track.\n      tags:\n        - Tracks\n        - Measurements\n      security:\n        - basicAuth: [ ]\n      requestBody:\n        $ref: '#/components/requestBodies/CreateMeasurement'\n      responses:\n        '201':\n          $ref: '#/components/responses/Created'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/tracks/{trackId}/preview':\n    parameters:\n      - $ref: '#/components/parameters/trackId'\n    get:\n      operationId: previewTrack\n      summary: Get the preview image of the track.\n      description: Get the preview image of the track.\n      tags:\n        - Tracks\n      responses:\n        '200':\n          $ref: '#/components/responses/PNG'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/tracks/{trackId}/share':\n    parameters:\n      - $ref: '#/components/parameters/trackId'\n    get:\n      operationId: shareTrack\n      summary: Get the share link of the track.\n      description: Get the share link of the track.\n      tags:\n        - Tracks\n      parameters:\n        - $ref: '#/components/parameters/locale'\n      responses:\n        '200':\n          $ref: '#/components/responses/PNG'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/tracks/{trackId}/statistics':\n    parameters:\n      - $ref: '#/components/parameters/trackId'\n    get:\n      operationId: getTrackStatistics\n      summary: Get the statistics of a track.\n      description: Get the statistics of a track.\n      tags:\n        - Tracks\n        - Statistics\n      responses:\n        '200':\n          $ref: '#/components/responses/Statistics'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/tracks/{trackId}/sensor':\n    parameters:\n      - $ref: '#/components/parameters/trackId'\n    get:\n      operationId: getTrackSensor\n      summary: Get the sensor of a track.\n      description: Get the sensor of a track.\n      tags:\n        - Tracks\n        - Sensors\n      responses:\n        '200':\n          $ref: '#/components/responses/Sensor'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/measurements':\n    get:\n      operationId: getMeasurements\n      summary: Get the list of measurements.\n      description: Get the list of measurements.\n      tags:\n        - Measurements\n      parameters:\n        - $ref: '#/components/parameters/bbox'\n        - $ref: '#/components/parameters/nearPoint'\n        - $ref: '#/components/parameters/after'\n        - $ref: '#/components/parameters/before'\n        - $ref: '#/components/parameters/begins'\n        - $ref: '#/components/parameters/begunBy'\n        - $ref: '#/components/parameters/contains'\n        - $ref: '#/components/parameters/during'\n        - $ref: '#/components/parameters/endedBy'\n        - $ref: '#/components/parameters/ends'\n        - $ref: '#/components/parameters/equals'\n        - $ref: '#/components/parameters/meets'\n        - $ref: '#/components/parameters/metBy'\n        - $ref: '#/components/parameters/overlapped'\n        - $ref: '#/components/parameters/overlaps'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/range'\n      responses:\n        '200':\n          $ref: '#/components/responses/Measurements'\n        '206':\n          $ref: '#/components/responses/Measurements'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n    post:\n      operationId: createMeasurement\n      summary: Create a new measurement.\n      description: Create a new measurement.\n      tags:\n        - Measurements\n      security:\n        - basicAuth: [ ]\n      requestBody:\n        $ref: '#/components/requestBodies/CreateMeasurement'\n      responses:\n        '201':\n          $ref: '#/components/responses/Created'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '451':\n          $ref: '#/components/responses/UnavailableForLegalReasons'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/measurements/{measurementId}':\n    parameters:\n      - $ref: '#/components/parameters/measurementId'\n    get:\n      operationId: getMeasurementById\n      summary: Get the specified measurement.\n      description: Get the specified measurement.\n      tags:\n        - Measurements\n      responses:\n        '200':\n          $ref: '#/components/responses/Measurement'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n    delete:\n      operationId: deleteMeasurement\n      summary: Delete a existing measurement.\n      description: Delete a existing measurement.\n      tags:\n        - Measurements\n      security:\n        - basicAuth: [ ]\n      responses:\n        '204':\n          $ref: '#/components/responses/NoContent'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/measurements/{measurementId}/sensor':\n    parameters:\n      - $ref: '#/components/parameters/measurementId'\n    get:\n      operationId: getMeasurementSensor\n      summary: Get the sensor of a measurement.\n      description: Get the sensor of a measurement.\n      tags:\n        - Measurements\n        - Sensors\n      responses:\n        '200':\n          $ref: '#/components/responses/Sensor'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/privacyStatements':\n    get:\n      operationId: getPrivacyStatements\n      summary: Get the list of privacy statements.\n      description: Get the list of privacy statements.\n      tags:\n        - Terms\n      responses:\n        '200':\n          $ref: '#/components/responses/PrivacyStatements'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/privacyStatements/{privacyStatementId}':\n    parameters:\n      - $ref: '#/components/parameters/privacyStatementId'\n    get:\n      operationId: getPrivacyStatementsById\n      summary: Get the privacy statement.\n      description: Get the privacy statement.\n      tags:\n        - Terms\n      responses:\n        '200':\n          $ref: '#/components/responses/PrivacyStatement'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/termsOfUse':\n    get:\n      operationId: getTermsOfUse\n      summary: Get the list of terms of use.\n      description: Get the list of terms of use.\n      tags:\n        - Terms\n      responses:\n        '200':\n          $ref: '#/components/responses/TermsOfUse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/termsOfUse/{termsOfUseId}':\n    parameters:\n      - $ref: '#/components/parameters/termsOfUseId'\n    get:\n      operationId: getTermsOfUseById\n      summary: Get the terms of use.\n      description: Get the terms of use.\n      tags:\n        - Terms\n      responses:\n        '200':\n          $ref: '#/components/responses/TermsOfUseInstance'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/users':\n    get:\n      operationId: getUsers\n      summary: Get the users.\n      description: Get the users.\n      tags:\n        - Users\n      security:\n        - basicAuth: [ ]\n      parameters:\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/range'\n      responses:\n        '200':\n          $ref: '#/components/responses/Users'\n        '206':\n          $ref: '#/components/responses/Users'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n    post:\n      operationId: createUser\n      summary: Create a new user.\n      description: Create a new user.\n      tags:\n        - Users\n      security:\n        - basicAuth: [ ]\n      requestBody:\n        $ref: '#/components/requestBodies/CreateSensor'\n      responses:\n        '201':\n          $ref: '#/components/responses/Created'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '451':\n          $ref: '#/components/responses/UnavailableForLegalReasons'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/users/{userId}':\n    parameters:\n      - $ref: '#/components/parameters/userId'\n    get:\n      operationId: getUserById\n      summary: Get the user.\n      description: Get the user.\n      tags:\n        - Users\n      security:\n        - basicAuth: [ ]\n      responses:\n        '200':\n          $ref: '#/components/responses/User'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n    put:\n      operationId: modifyUser\n      summary: Change the user.\n      description: Change the user.\n      tags:\n        - Users\n      security:\n        - basicAuth: [ ]\n      requestBody:\n        $ref: '#/components/requestBodies/ModifyUser'\n      responses:\n        '204':\n          $ref: '#/components/responses/NoContent'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n    delete:\n      operationId: deleteUser\n      summary: Delete the user.\n      description: Delete the user.\n      tags:\n        - Users\n      security:\n        - basicAuth: [ ]\n      parameters:\n        - $ref: '#/components/parameters/deleteContent'\n      responses:\n        '204':\n          $ref: '#/components/responses/NoContent'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/users/{userId}/friends':\n    parameters:\n      - $ref: '#/components/parameters/userId'\n    get:\n      operationId: getFriends\n      summary: Get the friends.\n      description: Get the friends.\n      tags:\n        - Users\n      security:\n        - basicAuth: [ ]\n      responses:\n        '200':\n          $ref: '#/components/responses/Users'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n    post:\n      operationId: addFriend\n      summary: Add a friend.\n      description: Add a friend.\n      tags:\n        - Users\n      security:\n        - basicAuth: [ ]\n      requestBody:\n        $ref: '#/components/requestBodies/UserRef'\n      responses:\n        '204':\n          $ref: '#/components/responses/NoContent'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/users/{userId}/friends/incomingRequests':\n    parameters:\n      - $ref: '#/components/parameters/userId'\n    get:\n      operationId: getIncomingFriendRequests\n      summary: Get incoming friend requests.\n      description: Get incoming friend requests.\n      tags:\n        - Users\n      security:\n        - basicAuth: [ ]\n      responses:\n        '200':\n          $ref: '#/components/responses/Users'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/users/{userId}/friends/outgoingRequests':\n    parameters:\n      - $ref: '#/components/parameters/userId'\n    get:\n      operationId: getOutgoingFriendRequests\n      summary: Get outgoing friend requests.\n      description: Get outgoing friend requests.\n      tags:\n        - Users\n      security:\n        - basicAuth: [ ]\n      responses:\n        '200':\n          $ref: '#/components/responses/Users'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/users/{userId}/friends/declineRequest':\n    parameters:\n      - $ref: '#/components/parameters/userId'\n    post:\n      operationId: declineRequest\n      summary: Decline friend request.\n      description: Decline friend request.\n      tags:\n        - Users\n      security:\n        - basicAuth: [ ]\n      requestBody:\n        $ref: '#/components/requestBodies/UserRef'\n      responses:\n        '204':\n          $ref: '#/components/responses/NoContent'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/users/{userId}/friends/{friendId}':\n    parameters:\n      - $ref: '#/components/parameters/userId'\n      - $ref: '#/components/parameters/friendId'\n    get:\n      operationId: getFriend\n      summary: Get the friend.\n      description: Get the friend.\n      tags:\n        - Users\n      security:\n        - basicAuth: [ ]\n      responses:\n        '200':\n          $ref: '#/components/responses/User'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n    delete:\n      operationId: deleteFriend\n      summary: Delete the friend.\n      description: Delete the friend.\n      tags:\n        - Users\n      security:\n        - basicAuth: [ ]\n      responses:\n        '204':\n          $ref: '#/components/responses/NoContent'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/users/{userId}/groups':\n    parameters:\n      - $ref: '#/components/parameters/userId'\n    get:\n      operationId: getUserGroups\n      summary: Get the groups of the user.\n      description: Get the groups of the user\n      parameters:\n        - $ref: '#/components/parameters/q'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/range'\n      tags:\n        - Users\n        - Groups\n      security:\n        - basicAuth: [ ]\n      responses:\n        '200':\n          $ref: '#/components/responses/Groups'\n        '206':\n          $ref: '#/components/responses/Groups'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n    post:\n      operationId: createUserGroup\n      summary: Create the user group.\n      description: Create the user group.\n      tags:\n        - Users\n        - Groups\n      security:\n        - basicAuth: []\n      requestBody:\n        $ref: '#/components/requestBodies/CreateGroup'\n      responses:\n        '201':\n          $ref: '#/components/responses/Created'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/users/{userId}/groups/{groupId}':\n    parameters:\n      - $ref: '#/components/parameters/userId'\n      - $ref: '#/components/parameters/groupId'\n    get:\n      operationId: getUserGroup\n      summary: Get the group of the user.\n      description: Get the group of the user\n      tags:\n        - Users\n        - Groups\n      security:\n        - basicAuth: [ ]\n      responses:\n        '200':\n          $ref: '#/components/responses/Group'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n    put:\n      operationId: modifyUserGroup\n      summary: Modify the group.\n      description: Modify the group.\n      tags:\n        - Users\n        - Groups\n      security:\n        - basicAuth: [ ]\n      requestBody:\n        $ref: '#/components/requestBodies/ModifyGroup'\n      responses:\n        '204':\n          $ref: '#/components/responses/NoContent'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n    delete:\n      operationId: deleteUserGroup\n      summary: Delete the group.\n      description: Delete the group.\n      tags:\n        - Users\n        - Groups\n      security:\n        - basicAuth: [ ]\n      responses:\n        '204':\n          $ref: '#/components/responses/NoContent'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/users/{userId}/tracks':\n    parameters:\n      - $ref: '#/components/parameters/userId'\n    get:\n      operationId: getTracksOfUser\n      summary: Get the list of tracks.\n      description: Get the list of tracks.\n      tags:\n        - Tracks\n        - Users\n      security:\n        - basicAuth: [ ]\n      parameters:\n        - $ref: '#/components/parameters/bbox'\n        - $ref: '#/components/parameters/nearPoint'\n        - $ref: '#/components/parameters/after'\n        - $ref: '#/components/parameters/before'\n        - $ref: '#/components/parameters/begins'\n        - $ref: '#/components/parameters/begunBy'\n        - $ref: '#/components/parameters/contains'\n        - $ref: '#/components/parameters/during'\n        - $ref: '#/components/parameters/endedBy'\n        - $ref: '#/components/parameters/ends'\n        - $ref: '#/components/parameters/equals'\n        - $ref: '#/components/parameters/meets'\n        - $ref: '#/components/parameters/metBy'\n        - $ref: '#/components/parameters/overlapped'\n        - $ref: '#/components/parameters/overlaps'\n        - $ref: '#/components/parameters/status'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/range'\n      responses:\n        '200':\n          $ref: '#/components/responses/Tracks'\n        '206':\n          $ref: '#/components/responses/Tracks'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n    post:\n      operationId: createTrackForUser\n      summary: Create a new track.\n      description: Create a new track.\n      tags:\n        - Tracks\n        - Users\n      security:\n        - basicAuth: [ ]\n      requestBody:\n        $ref: '#/components/requestBodies/CreateTrack'\n      responses:\n        '201':\n          $ref: '#/components/responses/Created'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '451':\n          $ref: '#/components/responses/UnavailableForLegalReasons'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/users/{userId}/measurements':\n    parameters:\n      - $ref: '#/components/parameters/userId'\n    get:\n      operationId: getMeasurementsOfUser\n      summary: Get the list of measurements.\n      description: Get the list of measurements.\n      tags:\n        - Measurements\n      security:\n        - basicAuth: [ ]\n      parameters:\n        - $ref: '#/components/parameters/bbox'\n        - $ref: '#/components/parameters/nearPoint'\n        - $ref: '#/components/parameters/after'\n        - $ref: '#/components/parameters/before'\n        - $ref: '#/components/parameters/begins'\n        - $ref: '#/components/parameters/begunBy'\n        - $ref: '#/components/parameters/contains'\n        - $ref: '#/components/parameters/during'\n        - $ref: '#/components/parameters/endedBy'\n        - $ref: '#/components/parameters/ends'\n        - $ref: '#/components/parameters/equals'\n        - $ref: '#/components/parameters/meets'\n        - $ref: '#/components/parameters/metBy'\n        - $ref: '#/components/parameters/overlapped'\n        - $ref: '#/components/parameters/overlaps'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/range'\n      responses:\n        '200':\n          $ref: '#/components/responses/Measurements'\n        '206':\n          $ref: '#/components/responses/Measurements'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n    post:\n      operationId: createMeasurementForUser\n      summary: Create a new measurement.\n      description: Create a new measurement.\n      tags:\n        - Measurements\n      security:\n        - basicAuth: [ ]\n      requestBody:\n        $ref: '#/components/requestBodies/CreateMeasurement'\n      responses:\n        '201':\n          $ref: '#/components/responses/Created'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '451':\n          $ref: '#/components/responses/UnavailableForLegalReasons'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/users/{userId}/statistics':\n    parameters:\n      - $ref: '#/components/parameters/userId'\n    get:\n      operationId: getStatisticsOfUser\n      summary: Get the user statistics.\n      description: Get the user statistics.\n      tags:\n        - Users\n        - Statistics\n      security:\n        - basicAuth: [ ]\n      responses:\n        '200':\n          $ref: '#/components/responses/Statistics'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/users/{userId}/userStatistic':\n    parameters:\n      - $ref: '#/components/parameters/userId'\n    get:\n      operationId: getUserStatistics\n      summary: Get the user statistics.\n      description: Get the user statistics.\n      tags:\n        - Users\n        - Statistics\n      security:\n        - basicAuth: [ ]\n      responses:\n        '200':\n          $ref: '#/components/responses/UserStatistic'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/users/{userId}/activities':\n    parameters:\n      - $ref: '#/components/parameters/userId'\n    get:\n      operationId: getUserActivities\n      summary: Get the activities of the user.\n      description: Get the activities of the user.\n      tags:\n        - Users\n      security:\n        - basicAuth: [ ]\n      parameters:\n        - $ref: '#/components/parameters/activityType'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/range'\n      responses:\n        '200':\n          $ref: '#/components/responses/Activities'\n        '206':\n          $ref: '#/components/responses/Activities'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/users/{userId}/activities/{activityId}':\n    parameters:\n      - $ref: '#/components/parameters/userId'\n      - $ref: '#/components/parameters/activityId'\n    get:\n      operationId: getUserActivityById\n      summary: Get the activity of the user.\n      description: Get the activity of the user.\n      tags:\n        - Users\n      security:\n        - basicAuth: [ ]\n      responses:\n        '200':\n          $ref: '#/components/responses/Activity'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/users/{userId}/friendActivities':\n    parameters:\n      - $ref: '#/components/parameters/userId'\n    get:\n      operationId: getFriendActivities\n      summary: Get the activities of the friend.\n      description: Get the activities of the friend.\n      tags:\n        - Users\n      security:\n        - basicAuth: [ ]\n      parameters:\n        - $ref: '#/components/parameters/activityType'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/range'\n      responses:\n        '200':\n          $ref: '#/components/responses/Activities'\n        '206':\n          $ref: '#/components/responses/Activities'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/users/{userId}/friendActivities/{activityId}':\n    parameters:\n      - $ref: '#/components/parameters/userId'\n      - $ref: '#/components/parameters/activityId'\n    get:\n      operationId: getFriendActivityById\n      summary: Get the activity of the friend.\n      description: Get the activity of the friend.\n      tags:\n        - Users\n      security:\n        - basicAuth: [ ]\n      responses:\n        '200':\n          $ref: '#/components/responses/Activity'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/users/{userId}/avatar':\n    parameters:\n      - $ref: '#/components/parameters/userId'\n    get:\n      operationId: getAvatar\n      summary: Get the avatar of the user.\n      description: Get the avatar of the user.\n      tags:\n        - Users\n      security:\n        - basicAuth: [ ]\n      responses:\n        '200':\n          $ref: '#/components/responses/JPEG'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/users/{userId}/fuelings':\n    parameters:\n      - $ref: '#/components/parameters/userId'\n    get:\n      operationId: getFuelings\n      summary: Get the fuelings for the user.\n      description: Get the fuelings for the user.\n      tags:\n        - Fuelings\n        - Users\n      security:\n        - basicAuth: [ ]\n      parameters:\n        - $ref: '#/components/parameters/after'\n        - $ref: '#/components/parameters/before'\n        - $ref: '#/components/parameters/begins'\n        - $ref: '#/components/parameters/begunBy'\n        - $ref: '#/components/parameters/contains'\n        - $ref: '#/components/parameters/during'\n        - $ref: '#/components/parameters/endedBy'\n        - $ref: '#/components/parameters/ends'\n        - $ref: '#/components/parameters/equals'\n        - $ref: '#/components/parameters/meets'\n        - $ref: '#/components/parameters/metBy'\n        - $ref: '#/components/parameters/overlapped'\n        - $ref: '#/components/parameters/overlaps'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/range'\n      responses:\n        '200':\n          $ref: '#/components/responses/Fuelings'\n        '206':\n          $ref: '#/components/responses/Fuelings'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n    post:\n      operationId: createFueling\n      summary: Create a new fueling for the user.\n      description: Create a new fueling for the user.\n      tags:\n        - Fuelings\n        - Users\n      security:\n        - basicAuth: [ ]\n      requestBody:\n        $ref: '#/components/requestBodies/CreateFueling'\n      responses:\n        '201':\n          $ref: '#/components/responses/Created'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/users/{userId}/fuelings/{fuelingId}':\n    parameters:\n      - $ref: '#/components/parameters/userId'\n      - $ref: '#/components/parameters/fuelingId'\n    get:\n      operationId: getFueling\n      summary: Get the fueling for the user.\n      description: Get the fueling for the user.\n      tags:\n        - Fuelings\n        - Users\n      security:\n        - basicAuth: [ ]\n      responses:\n        '200':\n          $ref: '#/components/responses/Fueling'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n    delete:\n      operationId: deleteFueling\n      summary: Delete the fueling for the user.\n      description: Delete the fueling for the user.\n      tags:\n        - Fuelings\n        - Users\n      security:\n        - basicAuth: [ ]\n      responses:\n        '204':\n          $ref: '#/components/responses/NoContent'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/users/{userId}/sensors':\n    parameters:\n      - $ref: '#/components/parameters/userId'\n    get:\n      operationId: getSensorsOfUser\n      summary: Get the Sensor listing.\n      description: Get the Sensor listing.\n      tags:\n        - Sensors\n        - Users\n      security:\n        - basicAuth: [ ]\n      parameters:\n        - $ref: '#/components/parameters/sensorType'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/range'\n      responses:\n        '200':\n          $ref: '#/components/responses/Sensors'\n        '206':\n          $ref: '#/components/responses/Sensors'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n    post:\n      operationId: createSensorForUser\n      summary: Create a new Sensor.\n      description: Create a new Sensor.\n      tags:\n        - Sensors\n        - Users\n      security:\n        - basicAuth: [ ]\n      requestBody:\n        $ref: '#/components/requestBodies/CreateSensor'\n      responses:\n        '201':\n          $ref: '#/components/responses/Created'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '451':\n          $ref: '#/components/responses/UnavailableForLegalReasons'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/groups':\n    get:\n      operationId: getGroups\n      summary: Get the groups.\n      description: Get the groups.\n      parameters:\n        - $ref: '#/components/parameters/q'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/range'\n      tags:\n        - Groups\n      security:\n        - basicAuth: [ ]\n      responses:\n        '200':\n          $ref: '#/components/responses/Groups'\n        '206':\n          $ref: '#/components/responses/Groups'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n    post:\n      operationId: createGroup\n      summary: Create the group.\n      description: Create the group.\n      tags:\n        - Groups\n      security:\n        - basicAuth: [ ]\n      requestBody:\n        $ref: '#/components/requestBodies/CreateGroup'\n      responses:\n        '201':\n          $ref: '#/components/responses/Created'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/groups/{groupId}':\n    parameters:\n      - $ref: '#/components/parameters/groupId'\n    get:\n      operationId: getGroup\n      summary: Get the group.\n      description: Get the group\n      tags:\n        - Groups\n      security:\n        - basicAuth: [ ]\n      responses:\n        '200':\n          $ref: '#/components/responses/Group'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n    put:\n      operationId: modifyGroup\n      summary: Modify the group.\n      description: Modify the group.\n      tags:\n        - Groups\n      security:\n        - basicAuth: [ ]\n      requestBody:\n        $ref: '#/components/requestBodies/ModifyGroup'\n      responses:\n        '204':\n          $ref: '#/components/responses/NoContent'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n    delete:\n      operationId: deleteGroup\n      summary: Delete the group.\n      description: Delete the group.\n      tags:\n        - Groups\n      security:\n        - basicAuth: []\n      responses:\n        '204':\n          $ref: '#/components/responses/NoContent'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/groups/{groupId}/activities':\n    parameters:\n      - $ref: '#/components/parameters/groupId'\n    get:\n      operationId: getGroupActivities\n      summary: Get the activities of the group.\n      description: Get the activities of the group.\n      tags:\n        - Groups\n      security:\n        - basicAuth: [ ]\n      parameters:\n        - $ref: '#/components/parameters/activityType'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/range'\n      responses:\n        '200':\n          $ref: '#/components/responses/Activities'\n        '206':\n          $ref: '#/components/responses/Activities'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/groups/{groupId}/activities/{activityId}':\n    parameters:\n      - $ref: '#/components/parameters/groupId'\n      - $ref: '#/components/parameters/activityId'\n    get:\n      operationId: getGroupActivityById\n      summary: Get the activity of the group.\n      description: Get the activity of the group.\n      tags:\n        - Groups\n      security:\n        - basicAuth: [ ]\n      responses:\n        '200':\n          $ref: '#/components/responses/Activity'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/groups/{groupId}/members':\n    parameters:\n      - $ref: '#/components/parameters/groupId'\n    get:\n      operationId: getGroupMembers\n      summary: Get the group members.\n      description: Get the group members.\n      tags:\n        - Groups\n      security:\n        - basicAuth: [ ]\n      parameters:\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/range'\n      responses:\n        '200':\n          $ref: '#/components/responses/Users'\n        '206':\n          $ref: '#/components/responses/Users'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n    post:\n      operationId: addGroupMember\n      summary: Add the group member.\n      description: Add the group member.\n      tags:\n        - Groups\n      security:\n        - basicAuth: [ ]\n      requestBody:\n        $ref: '#/components/requestBodies/UserRef'\n      responses:\n        '204':\n          $ref: '#/components/responses/NoContent'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/groups/{groupId}/members/{memberId}':\n    parameters:\n      - $ref: '#/components/parameters/groupId'\n      - $ref: '#/components/parameters/memberId'\n    get:\n      operationId: getGroupMember\n      summary: Get the group member.\n      description: Get the group member.\n      tags:\n        - Groups\n      security:\n        - basicAuth: [ ]\n      responses:\n        '200':\n          $ref: '#/components/responses/User'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n    delete:\n      operationId: removeGroupMember\n      summary: Remove the user from the group.\n      description: Remove the user from the group.\n      tags:\n        - Groups\n      security:\n        - basicAuth: []\n      responses:\n        '204':\n          $ref: '#/components/responses/NoContent'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/schemas':\n    get:\n      operationId: getSchemas\n      tags:\n        - Schemas\n      responses:\n        '200':\n          $ref: '#/components/responses/Schemas'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/schemas/{schemaId}':\n    parameters:\n      - $ref: '#/components/parameters/schemaId'\n    get:\n      operationId: getSchemaById\n      tags:\n        - Schemas\n      responses:\n        '200':\n          $ref: '#/components/responses/Schema'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/badges':\n    get:\n      operationId: getBadges\n      summary: Get the list of badges.\n      description: Get the list of badges.\n      tags:\n        - Badges\n      responses:\n        '200':\n          $ref: '#/components/responses/Badges'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\n  '/announcements':\n    get:\n      operationId: getAnnouncements\n      summary: Get the list of announcements.\n      description: Get the list of announcements.\n      tags:\n        - Announcements\n      responses:\n        '200':\n          $ref: '#/components/responses/Announcements'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '5XX':\n          $ref: '#/components/responses/InternalServerError'\ncomponents:\n  parameters:\n    after:\n      description: The time instant or interval to be applied with the `after` operator.\n      in: query\n      name: after\n      required: false\n      schema:\n        $ref: '#/components/schemas/TemporalFilter'\n    bbox:\n      description: The bounding box the requested tracks have to intersect with.\n      explode: false\n      in: query\n      name: bbox\n      required: false\n      style: form\n      schema:\n        items:\n          type: number\n        maxItems: 4\n        minItems: 4\n        type: array\n    before:\n      description: The time instant or interval to be applied with the `before` operator.\n      in: query\n      name: before\n      required: false\n      schema:\n        $ref: '#/components/schemas/TemporalFilter'\n    begins:\n      description: The time instant or interval to be applied with the `begins` operator.\n      in: query\n      name: begins\n      required: false\n      schema:\n        $ref: '#/components/schemas/TemporalFilter'\n    begunBy:\n      description: The time instant or interval to be applied with the `begunBy` operator.\n      in: query\n      name: begunBy\n      required: false\n      schema:\n        $ref: '#/components/schemas/TemporalFilter'\n    contains:\n      description: The time instant or interval to be applied with the `contains`\n        operator.\n      in: query\n      name: contains\n      required: false\n      schema:\n        $ref: '#/components/schemas/TemporalFilter'\n    during:\n      description: The time instant or interval to be applied with the `during` operator.\n      in: query\n      name: during\n      required: false\n      schema:\n        $ref: '#/components/schemas/TemporalFilter'\n    endedBy:\n      description: The time instant or interval to be applied with the `endedBy` operator.\n      in: query\n      name: endedBy\n      required: false\n      schema:\n        $ref: '#/components/schemas/TemporalFilter'\n    ends:\n      description: The time instant or interval to be applied with the `ends` operator.\n      in: query\n      name: ends\n      required: false\n      schema:\n        $ref: '#/components/schemas/TemporalFilter'\n    equals:\n      description: The time instant or interval to be applied with the `equals` operator.\n      in: query\n      name: equals\n      required: false\n      schema:\n        $ref: '#/components/schemas/TemporalFilter'\n    locale:\n      in: query\n      name: locale\n      schema:\n        pattern: ^[a-z]{2}([-_][A-Z]{2})?$\n        type: string\n    measurementId:\n      description: The measurement id.\n      in: path\n      name: measurementId\n      required: true\n      schema:\n        type: string\n    meets:\n      description: The time instant or interval to be applied with the `meets` operator.\n      in: query\n      name: meets\n      required: false\n      schema:\n        $ref: '#/components/schemas/TemporalFilter'\n    metBy:\n      description: The time instant or interval to be applied with the `metBy` operator.\n      in: query\n      name: metBy\n      required: false\n      schema:\n        $ref: '#/components/schemas/TemporalFilter'\n    nearPoint:\n      description: The point to which the distance can not fall below a certain threshold.\n      explode: false\n      in: query\n      name: nearPoint\n      required: false\n      schema:\n        items:\n          type: number\n        maxItems: 3\n        minItems: 3\n        type: array\n      style: form\n    overlapped:\n      description: The time instant or interval to be applied with the `overlapped`\n        operator.\n      in: query\n      name: overlapped\n      required: false\n      schema:\n        $ref: '#/components/schemas/TemporalFilter'\n    overlaps:\n      description: The time instant or interval to be applied with the `overlaps`\n        operator.\n      in: query\n      name: overlaps\n      required: false\n      schema:\n        $ref: '#/components/schemas/TemporalFilter'\n    status:\n      in: query\n      name: status\n      required: false\n      schema:\n        $ref: 'schema/track-status.json'\n    limit:\n      description: The number of entities per page.\n      in: query\n      name: limit\n      required: false\n      schema:\n        type: integer\n        default: 100\n    page:\n      description: The page of entities to request.\n      in: query\n      name: page\n      required: false\n      schema:\n        type: integer\n        default: 1\n    q:\n      name: q\n      description: The term to search for.\n      in: query\n      schema:\n        type: string\n    range:\n      description: The range of entities to request.\n      in: header\n      name: Range\n      required: false\n      style: simple\n      explode: true\n      schema:\n        type: object\n        properties:\n          items:\n            type: string\n            pattern: '^\\d+-\\d+$'\n    activityType:\n      in: query\n      name: type\n      description: The activity type.\n      schema:\n        type: string\n        enum:\n          - CHANGED_PROFILE,\n          - CREATED_GROUP,\n          - CHANGED_GROUP,\n          - JOINED_GROUP,\n          - LEFT_GROUP,\n          - DELETED_GROUP,\n          - FRIENDED_USER,\n          - UNFRIENDED_USER,\n          - CREATED_TRACK\n    deleteContent:\n      in: query\n      name: deleteContent\n      description: If the user created tracks and measurements also should be deleted.\n      required: false\n      schema:\n        type: boolean\n        default: false\n    schemaId:\n      description: The schema id.\n      in: path\n      name: schemaId\n      required: true\n      schema:\n        type: string\n    userId:\n      description: The user id.\n      in: path\n      name: userId\n      required: true\n      schema:\n        type: string\n    friendId:\n      description: The friend id.\n      in: path\n      name: friendId\n      required: true\n      schema:\n        type: string\n    groupId:\n      description: The group id.\n      in: path\n      name: groupId\n      required: true\n      schema:\n        type: string\n    memberId:\n      description: The member id.\n      in: path\n      name: memberId\n      required: true\n      schema:\n        type: string\n    activityId:\n      description: The activity id.\n      in: path\n      name: activityId\n      required: true\n      schema:\n        type: string\n    termsOfUseId:\n      description: The terms of use id.\n      in: path\n      name: termsOfUseId\n      required: true\n      schema:\n        type: string\n    privacyStatementId:\n      description: The privacy statement id.\n      in: path\n      name: privacyStatementId\n      required: true\n      schema:\n        type: string\n    phenomenonId:\n      description: The phenomenon id.\n      in: path\n      name: phenomenonId\n      required: true\n      schema:\n        type: string\n    sensorId:\n      description: The Sensor id.\n      in: path\n      name: sensorId\n      required: true\n      schema:\n        type: string\n    sensorType:\n      description: The Sensor type.\n      in: query\n      name: type\n      required: false\n      schema:\n        type: string\n    trackId:\n      description: The track id.\n      in: path\n      name: trackId\n      required: true\n      schema:\n        type: string\n    fuelingId:\n      description: The fueling id.\n      in: path\n      name: fuelingId\n      required: true\n      schema:\n        type: string\n    TermsOfUseHeader:\n      in: header\n      name: Accept-Terms-Of-Use\n      description: Declare that the end user accepted the terms of use of this service.\n      required: true\n      schema:\n        type: boolean\n    PrivacyStatementHeader:\n      in: header\n      name: Accept-Privacy-Statement\n      description: Declare that the end user accepted the privacy statement.\n      required: true\n      schema:\n        type: boolean\n  headers:\n    ContentRange:\n      style: simple\n      explode: true\n      schema:\n        type: string\n        pattern: '^items\\s+\\d+-\\d+/(\\d+|\\*)$'\n    Link:\n      style: simple\n      explode: true\n      schema:\n        type: object\n        properties:\n          items:\n            type: string\n            pattern: '^<.*>\\s?;\\s?rel=(first|last|next|prev|service-desc)\\s?;\\s?type=.+/.+'\n    Location:\n      schema:\n        type: string\n        format: uri\n    WWW-Authenticate:\n      schema:\n        type: string\n  requestBodies:\n    CreateMeasurement:\n      description: The measurement to create.\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: 'schema/measurement-create.json'\n    CreatePhenomenon:\n      description: The phenomenon to create.\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: 'schema/phenomenon-create.json'\n    CreateSensor:\n      description: The sensor to create.\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: 'schema/sensor-create.json'\n    CreateTrack:\n      description: The track to create.\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: 'schema/track-create.json'\n    CreateUser:\n      description: The user to create.\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: 'schema/user-create.json'\n    CreateFueling:\n      description: The fueling to create.\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: 'schema/fueling-create.json'\n    CreateGroup:\n      description: The group to create.\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: 'schema/group-create.json'\n    ModifyUser:\n      description: The user modifications.\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: 'schema/user-modify.json'\n    ModifyTrack:\n      description: The track modifications.\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: 'schema/track-modify.json'\n    ModifyGroup:\n      description: The group modifications.\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: 'schema/group-modify.json'\n    UserRef:\n      description: The user reference.\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: 'schema/user-ref.json'\n  responses:\n    NoContent:\n      description: A empty response\n      headers:\n        Link:\n          $ref: '#/components/headers/Link'\n    Created:\n      description: The entity was created.\n      headers:\n        Location:\n          $ref: '#/components/headers/Location'\n        Link:\n          $ref: '#/components/headers/Link'\n    PNG:\n      description: The image.\n      content:\n        image/png:\n          schema:\n            type: string\n            format: binary\n      headers:\n        Link:\n          $ref: '#/components/headers/Link'\n    JPEG:\n      description: The image.\n      content:\n        image/jpeg:\n          schema:\n            type: string\n            format: binary\n      headers:\n        Link:\n          $ref: '#/components/headers/Link'\n    BadRequest:\n      description: The request was malformed.\n      content:\n        application/json:\n          schema:\n            $ref: 'schema/exception.json'\n      headers:\n        Link:\n          $ref: '#/components/headers/Link'\n    Forbidden:\n      description: The operation is not allowed by current user.\n      content:\n        application/json:\n          schema:\n            $ref: 'schema/exception.json'\n      headers:\n        Link:\n          $ref: '#/components/headers/Link'\n    InternalServerError:\n      description: An internal server error occurred.\n      content:\n        application/json:\n          schema:\n            $ref: 'schema/exception.json'\n      headers:\n        Link:\n          $ref: '#/components/headers/Link'\n    NotFound:\n      description: The Resource could not be found.\n      content:\n        application/json:\n          schema:\n            $ref: 'schema/exception.json'\n      headers:\n        Link:\n          $ref: '#/components/headers/Link'\n    UnavailableForLegalReasons:\n      description: The operation requires acceptance of the terms of use and privacy statement.\n      content:\n        application/json:\n          schema:\n            $ref: 'schema/exception.json'\n      headers:\n        Link:\n          $ref: '#/components/headers/Link'\n    UnauthorizedError:\n      description: Authentication information is missing or invalid\n      content:\n        application/json:\n          schema:\n            $ref: 'schema/exception.json'\n      headers:\n        Link:\n          $ref: '#/components/headers/Link'\n        WWW-Authenticate:\n          $ref: '#/components/headers/WWW-Authenticate'\n    Phenomenons:\n      description: The phenomenons.\n      content:\n        application/json:\n          schema:\n            $ref: 'schema/phenomenons.json'\n        text/yaml:\n          schema:\n            $ref: 'schema/phenomenons.json'\n      headers:\n        Link:\n          $ref: '#/components/headers/Link'\n        Content-Range:\n          $ref: '#/components/headers/ContentRange'\n    Phenomenon:\n      description: The phenomenon.\n      content:\n        application/json:\n          schema:\n            $ref: 'schema/phenomenon.json'\n        text/yaml:\n          schema:\n            $ref: 'schema/phenomenon.json'\n      headers:\n        Link:\n          $ref: '#/components/headers/Link'\n    Sensor:\n      description: The Sensor.\n      content:\n        application/json:\n          schema:\n            $ref: 'schema/sensor.json'\n        text/yaml:\n          schema:\n            $ref: 'schema/sensor.json'\n      headers:\n        Link:\n          $ref: '#/components/headers/Link'\n    Sensors:\n      description: The Sensors.\n      content:\n        application/json:\n          schema:\n            $ref: 'schema/sensors.json'\n        text/yaml:\n          schema:\n            $ref: 'schema/sensors.json'\n      headers:\n        Link:\n          $ref: '#/components/headers/Link'\n        Content-Range:\n          $ref: '#/components/headers/ContentRange'\n    Statistic:\n      description: The statistic.\n      content:\n        application/json:\n          schema:\n            $ref: 'schema/statistic.json'\n        text/yaml:\n          schema:\n            $ref: 'schema/statistic.json'\n      headers:\n        Link:\n          $ref: '#/components/headers/Link'\n    Statistics:\n      description: The statistics.\n      content:\n        application/json:\n          schema:\n            $ref: 'schema/statistics.json'\n        text/yaml:\n          schema:\n            $ref: 'schema/statistics.json'\n      headers:\n        Link:\n          $ref: '#/components/headers/Link'\n        Content-Range:\n          $ref: '#/components/headers/ContentRange'\n    Activities:\n      description: The activities.\n      content:\n        application/json:\n          schema:\n            $ref: 'schema/activities.json'\n        text/yaml:\n          schema:\n            $ref: 'schema/activities.json'\n      headers:\n        Link:\n          $ref: '#/components/headers/Link'\n        Content-Range:\n          $ref: '#/components/headers/ContentRange'\n    Activity:\n      description: The activity.\n      content:\n        application/json:\n          schema:\n            $ref: 'schema/activity.json'\n        text/yaml:\n          schema:\n            $ref: 'schema/activity.json'\n      headers:\n        Link:\n          $ref: '#/components/headers/Link'\n    UserStatistic:\n      description: The user statistic.\n      content:\n        application/json:\n          schema:\n            $ref: 'schema/userStatistic.json'\n        text/yaml:\n          schema:\n            $ref: 'schema/userStatistic.json'\n      headers:\n        Link:\n          $ref: '#/components/headers/Link'\n    Track:\n      description: The track.\n      content:\n        application/json:\n          schema:\n            $ref: 'schema/track.json'\n        text/yaml:\n          schema:\n            $ref: 'schema/track.json'\n      headers:\n        Link:\n          $ref: '#/components/headers/Link'\n    Tracks:\n      description: The tracks.\n      content:\n        application/json:\n          schema:\n            $ref: 'schema/tracks.json'\n        text/yaml:\n          schema:\n            $ref: 'schema/tracks.json'\n      headers:\n        Link:\n          $ref: '#/components/headers/Link'\n        Content-Range:\n          $ref: '#/components/headers/ContentRange'\n    Measurement:\n      description: The measurement.\n      content:\n        application/json:\n          schema:\n            $ref: 'schema/measurement.json'\n        text/yaml:\n          schema:\n            $ref: 'schema/measurement.json'\n      headers:\n        Link:\n          $ref: '#/components/headers/Link'\n    Measurements:\n      description: The measurements.\n      content:\n        application/json:\n          schema:\n            $ref: 'schema/measurements.json'\n        text/yaml:\n          schema:\n            $ref: 'schema/measurements.json'\n      headers:\n        Link:\n          $ref: '#/components/headers/Link'\n        Content-Range:\n          $ref: '#/components/headers/ContentRange'\n    Root:\n      description: The root.\n      content:\n        application/json:\n          schema:\n            $ref: 'schema/root.json'\n        text/yaml:\n          schema:\n            $ref: 'schema/root.json'\n      headers:\n        Link:\n          $ref: '#/components/headers/Link'\n    ApiDocs:\n      description: The OpenAPI specification of this service.\n      content:\n        application/json:\n          schema:\n            $ref: 'https://spec.openapis.org/oas/3.0/schema/2021-09-28'\n        text/yaml:\n          schema:\n            $ref: 'https://spec.openapis.org/oas/3.0/schema/2021-09-28'\n        text/html: { }\n      headers:\n        Link:\n          $ref: '#/components/headers/Link'\n\n    Schemas:\n      description: The schema listing.\n      content:\n        application/json:\n          schema:\n            $ref: 'schema/schemas.json'\n        text/yaml:\n          schema:\n            $ref: 'schema/schemas.json'\n    Badges:\n      description: The badges.\n      content:\n        application/json:\n          schema:\n            $ref: 'schema/badges.json'\n        text/yaml:\n          schema:\n            $ref: 'schema/badges.json'\n    Announcements:\n      description: The announcements.\n      content:\n        application/json:\n          schema:\n            $ref: 'schema/announcements.json'\n        text/yaml:\n          schema:\n            $ref: 'schema/announcements.json'\n\n    PrivacyStatements:\n      description: The privacy statements.\n      content:\n        application/json:\n          schema:\n            $ref: 'schema/privacy-statements.json'\n        text/yaml:\n          schema:\n            $ref: 'schema/privacy-statements.json'\n    PrivacyStatement:\n      description: The privacy statement.\n      content:\n        application/json:\n          schema:\n            $ref: 'schema/privacy-statement.json'\n        text/yaml:\n          schema:\n            $ref: 'schema/privacy-statement.json'\n    TermsOfUse:\n      description: The terms of use.\n      content:\n        application/json:\n          schema:\n            $ref: 'schema/terms-of-use.json'\n        text/yaml:\n          schema:\n            $ref: 'schema/terms-of-use.json'\n    TermsOfUseInstance:\n      description: The terms of use instance.\n      content:\n        application/json:\n          schema:\n            $ref: 'schema/terms-of-use-instance.json'\n        text/yaml:\n          schema:\n            $ref: 'schema/terms-of-use-instance.json'\n    Schema:\n      description: The schema.\n      content:\n        application/json:\n          schema:\n            $ref: 'https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema'\n        text/yaml:\n          schema:\n            $ref: 'https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema'\n    User:\n      description: The user.\n      content:\n        application/json:\n          schema:\n            $ref: 'schema/user.json'\n        text/yaml:\n          schema:\n            $ref: 'schema/user.json'\n    Users:\n      description: The users.\n      content:\n        application/json:\n          schema:\n            $ref: 'schema/users.json'\n        text/yaml:\n          schema:\n            $ref: 'schema/users.json'\n      headers:\n        Link:\n          $ref: '#/components/headers/Link'\n        Content-Range:\n          $ref: '#/components/headers/ContentRange'\n    Fueling:\n      description: The fuelings.\n      content:\n        application/json:\n          schema:\n            $ref: 'schema/fueling.json'\n        text/yaml:\n          schema:\n            $ref: 'schema/fueling.json'\n      headers:\n        Link:\n          $ref: '#/components/headers/Link'\n    Fuelings:\n      description: The fuelings.\n      content:\n        application/json:\n          schema:\n            $ref: 'schema/fuelings.json'\n        text/yaml:\n          schema:\n            $ref: 'schema/fuelings.json'\n      headers:\n        Link:\n          $ref: '#/components/headers/Link'\n        Content-Range:\n          $ref: '#/components/headers/ContentRange'\n    Groups:\n      description: The groups.\n      content:\n        application/json:\n          schema:\n            $ref: 'schema/groups.json'\n        text/yaml:\n          schema:\n            $ref: 'schema/groups.json'\n      headers:\n        Link:\n          $ref: '#/components/headers/Link'\n        Content-Range:\n          $ref: '#/components/headers/ContentRange'\n    Group:\n      description: The group.\n      content:\n        application/json:\n          schema:\n            $ref: 'schema/group.json'\n        text/yaml:\n          schema:\n            $ref: 'schema/group.json'\n      headers:\n        Link:\n          $ref: '#/components/headers/Link'\n  schemas:\n    TemporalFilter:\n      oneOf:\n        - type: string\n          description: Two comma-seperated date-times that form a temporal interval.\n        - format: date-time\n          type: string\n          description: The temporal instant.\n  securitySchemes:\n    basicAuth:\n      type: http\n      scheme: basic",
			"canonicalURL": "/github.com/enviroCar/enviroCar-server@52119d9caa60b10e3134237444fe0f4154e44dcd/-/blob/rest/src/main/resources/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/enviroCar/enviroCar-server/blob/52119d9caa60b10e3134237444fe0f4154e44dcd/rest/src/main/resources/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: at 1:15: responses: \"Measurements\": at 1:12061: content: application/json: at 1:12092: schema: at 1:12102: parse schema: resolve \"schema/measurements.json\": external \"schema/measurements.json\": file: local file reference is not allowed"
}