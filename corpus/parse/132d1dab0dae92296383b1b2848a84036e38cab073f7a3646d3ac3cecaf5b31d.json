{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql-provider-registry"
		},
		"file": {
			"name": "deploys.yaml",
			"size": 0,
			"path": "providers/src/netlify/v0.1.0/services/deploys.yaml",
			"byteSize": 17051,
			"content": "paths:\n  /deploy_keys:\n    get:\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/deployKey'\n                type: array\n          description: OK\n        default:\n          $ref: '#/components/responses/error'\n      tags:\n        - deployKey\n      operationId: listDeployKeys\n    post:\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/deployKey'\n          description: Created\n        default:\n          $ref: '#/components/responses/error'\n      tags:\n        - deployKey\n      operationId: createDeployKey\n  /deploy_keys/{key_id}:\n    delete:\n      responses:\n        '204':\n          description: Not Content\n        default:\n          $ref: '#/components/responses/error'\n      tags:\n        - deployKey\n      operationId: deleteDeployKey\n      parameters: \u0026ref_0\n        - in: path\n          name: key_id\n          required: true\n          schema:\n            type: string\n    get:\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/deployKey'\n          description: OK\n        default:\n          $ref: '#/components/responses/error'\n      tags:\n        - deployKey\n      operationId: getDeployKey\n      parameters: *ref_0\n  /deploys/{deploy_id}:\n    get:\n      parameters:\n        - in: path\n          name: deploy_id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/deploy'\n          description: OK\n        default:\n          $ref: '#/components/responses/error'\n      tags:\n        - deploy\n      operationId: getDeploy\n  /deploys/{deploy_id}/cancel:\n    post:\n      parameters:\n        - in: path\n          name: deploy_id\n          required: true\n          schema:\n            type: string\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/deploy'\n          description: Cancelled\n        default:\n          $ref: '#/components/responses/error'\n      tags:\n        - deploy\n      operationId: cancelSiteDeploy\n  /deploys/{deploy_id}/lock:\n    post:\n      parameters:\n        - in: path\n          name: deploy_id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/deploy'\n          description: OK\n        default:\n          $ref: '#/components/responses/error'\n      tags:\n        - deploy\n      operationId: lockDeploy\n  /deploys/{deploy_id}/unlock:\n    post:\n      parameters:\n        - in: path\n          name: deploy_id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/deploy'\n          description: OK\n        default:\n          $ref: '#/components/responses/error'\n      tags:\n        - deploy\n      operationId: unlockDeploy\n  /sites/{site_id}/deployed-branches:\n    get:\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/deployedBranch'\n                type: array\n          description: OK\n        default:\n          $ref: '#/components/responses/error'\n      tags:\n        - deployedBranch\n      operationId: listSiteDeployedBranches\n      parameters:\n        - in: path\n          name: site_id\n          required: true\n          schema:\n            type: string\n  /sites/{site_id}/deploys:\n    get:\n      parameters: \u0026ref_1\n        - in: path\n          name: site_id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/deploy'\n                type: array\n          description: OK\n        default:\n          $ref: '#/components/responses/error'\n      tags:\n        - deploy\n      operationId: listSiteDeploys\n    post:\n      parameters: *ref_1\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/deploy'\n          description: OK\n        default:\n          $ref: '#/components/responses/error'\n      tags:\n        - deploy\n      operationId: createSiteDeploy\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/deployFiles'\n        required: true\n  /sites/{site_id}/deploys/{deploy_id}:\n    get:\n      parameters:\n        - in: path\n          name: site_id\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: deploy_id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/deploy'\n          description: OK\n        default:\n          $ref: '#/components/responses/error'\n      tags:\n        - deploy\n      operationId: getSiteDeploy\n    put:\n      parameters:\n        - in: path\n          name: site_id\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: deploy_id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/deploy'\n          description: OK\n        default:\n          $ref: '#/components/responses/error'\n      tags:\n        - deploy\n      operationId: updateSiteDeploy\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/deployFiles'\n        required: true\n  /sites/{site_id}/deploys/{deploy_id}/restore:\n    post:\n      parameters:\n        - in: path\n          name: site_id\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: deploy_id\n          required: true\n          schema:\n            type: string\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/deploy'\n          description: Created\n        default:\n          $ref: '#/components/responses/error'\n      tags:\n        - deploy\n      operationId: restoreSiteDeploy\n  /sites/{site_id}/rollback:\n    put:\n      responses:\n        '204':\n          description: No content\n        default:\n          $ref: '#/components/responses/error'\n      tags:\n        - deploy\n      operationId: rollbackSiteDeploy\n      parameters:\n        - in: path\n          name: site_id\n          required: true\n          schema:\n            type: string\ncomponents:\n  schemas:\n    deployKey:\n      properties:\n        created_at:\n          format: dateTime\n          type: string\n        id:\n          type: string\n        public_key:\n          type: string\n      type: object\n    error:\n      properties:\n        code:\n          format: int64\n          type: integer\n        message:\n          nullable: false\n          type: string\n      required:\n        - message\n      type: object\n    deploy:\n      properties:\n        admin_url:\n          type: string\n        branch:\n          type: string\n        build_id:\n          type: string\n        commit_ref:\n          type: string\n        commit_url:\n          type: string\n        context:\n          type: string\n        created_at:\n          format: dateTime\n          type: string\n        deploy_ssl_url:\n          type: string\n        deploy_url:\n          type: string\n        draft:\n          type: boolean\n        error_message:\n          type: string\n        framework:\n          type: string\n        function_schedules:\n          items:\n            $ref: '#/components/schemas/functionSchedule'\n          type: array\n        id:\n          type: string\n        locked:\n          type: boolean\n        name:\n          type: string\n        published_at:\n          format: dateTime\n          type: string\n        required:\n          items:\n            type: string\n          type: array\n        required_functions:\n          items:\n            type: string\n          type: array\n        review_id:\n          type: number\n        review_url:\n          type: string\n        screenshot_url:\n          type: string\n        site_capabilities:\n          properties:\n            large_media_enabled:\n              type: boolean\n          type: object\n        site_id:\n          type: string\n        skipped:\n          type: boolean\n        ssl_url:\n          type: string\n        state:\n          type: string\n        title:\n          type: string\n        updated_at:\n          format: dateTime\n          type: string\n        url:\n          type: string\n        user_id:\n          type: string\n      type: object\n    functionSchedule:\n      properties:\n        cron:\n          type: string\n        name:\n          type: string\n      type: object\n    deployedBranch:\n      properties:\n        deploy_id:\n          type: string\n        id:\n          type: string\n        name:\n          type: string\n        slug:\n          type: string\n        ssl_url:\n          type: string\n        url:\n          type: string\n      type: object\n    deployFiles:\n      properties:\n        async:\n          type: boolean\n        branch:\n          type: string\n        draft:\n          type: boolean\n        files:\n          type: object\n        framework:\n          type: string\n        function_schedules:\n          items:\n            $ref: '#/components/schemas/functionSchedule'\n          type: array\n        functions:\n          type: object\n      type: object\n  parameters:\n    page:\n      in: query\n      name: page\n      required: false\n      schema:\n        format: int32\n        type: integer\n    perPage:\n      in: query\n      name: per_page\n      required: false\n      schema:\n        format: int32\n        type: integer\n  responses:\n    error:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n      description: error\n  securitySchemes: {}\n  callbacks: {}\n  examples: {}\n  requestBodies: {}\n  headers: {}\n  links: {}\n  x-stackQL-resources:\n    deployKey:\n      id: netlify.deploys.deployKey\n      name: deployKey\n      title: deployKey\n      methods:\n        listDeployKeys:\n          operation:\n            $ref: '#/paths/~1deploy_keys/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        createDeployKey:\n          operation:\n            $ref: '#/paths/~1deploy_keys/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        deleteDeployKey:\n          operation:\n            $ref: '#/paths/~1deploy_keys~1{key_id}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        getDeployKey:\n          operation:\n            $ref: '#/paths/~1deploy_keys~1{key_id}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/deployKey/methods/getDeployKey'\n          - $ref: '#/components/x-stackQL-resources/deployKey/methods/listDeployKeys'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/deployKey/methods/createDeployKey'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/deployKey/methods/deleteDeployKey'\n    deploy:\n      id: netlify.deploys.deploy\n      name: deploy\n      title: deploy\n      methods:\n        getDeploy:\n          operation:\n            $ref: '#/paths/~1deploys~1{deploy_id}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        cancelSiteDeploy:\n          operation:\n            $ref: '#/paths/~1deploys~1{deploy_id}~1cancel/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        lockDeploy:\n          operation:\n            $ref: '#/paths/~1deploys~1{deploy_id}~1lock/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        unlockDeploy:\n          operation:\n            $ref: '#/paths/~1deploys~1{deploy_id}~1unlock/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        listSiteDeploys:\n          operation:\n            $ref: '#/paths/~1sites~1{site_id}~1deploys/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        createSiteDeploy:\n          operation:\n            $ref: '#/paths/~1sites~1{site_id}~1deploys/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        getSiteDeploy:\n          operation:\n            $ref: '#/paths/~1sites~1{site_id}~1deploys~1{deploy_id}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        updateSiteDeploy:\n          operation:\n            $ref: '#/paths/~1sites~1{site_id}~1deploys~1{deploy_id}/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        restoreSiteDeploy:\n          operation:\n            $ref: '#/paths/~1sites~1{site_id}~1deploys~1{deploy_id}~1restore/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        rollbackSiteDeploy:\n          operation:\n            $ref: '#/paths/~1sites~1{site_id}~1rollback/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/deploy/methods/getSiteDeploy'\n          - $ref: '#/components/x-stackQL-resources/deploy/methods/getDeploy'\n          - $ref: '#/components/x-stackQL-resources/deploy/methods/listSiteDeploys'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/deploy/methods/createSiteDeploy'\n        update: []\n        delete: []\n    deployedBranch:\n      id: netlify.deploys.deployedBranch\n      name: deployedBranch\n      title: deployedBranch\n      methods:\n        listSiteDeployedBranches:\n          operation:\n            $ref: '#/paths/~1sites~1{site_id}~1deployed-branches/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/deployedBranch/methods/listSiteDeployedBranches'\n        insert: []\n        update: []\n        delete: []\nopenapi: 3.0.0\nservers:\n  - url: https://api.netlify.com/api/v1\nsecurity:\n  - netlifyAuth: []\ntags:\n  - name: ticket\n    x-displayName: Ticket\n  - name: accessToken\n    x-displayName: Access token\n  - name: user\n    x-displayName: User\n  - name: accountMembership\n    x-displayName: Accounts\n  - name: member\n    x-displayName: Member\n  - name: accountType\n    x-displayName: Access type\n  - name: paymentMethod\n    x-displayName: Payment method\n  - name: auditLog\n    x-displayName: Audit log\n  - name: site\n    x-displayName: Site\n  - name: file\n    x-displayName: File\n  - name: metadata\n    x-displayName: Metadata\n  - name: snippet\n    x-displayName: Snippet\n  - name: dnsZone\n    x-displayName: DNS zone\n  - name: sniCertificate\n    x-displayName: SNI certificate\n  - name: deploy\n    x-displayName: Deploy\n  - name: deployedBranch\n    x-displayName: Deployed branch\n  - name: deployKey\n    x-displayName: Deploy key\n  - name: build\n    x-displayName: Build\n  - name: buildLogMsg\n    x-displayName: Build log message\n  - name: hook\n    x-displayName: Hook\n  - name: hookType\n    x-displayName: Hook type\n  - name: buildHook\n    x-displayName: Build hook\n  - name: service\n    x-displayName: Service\n  - name: serviceInstance\n    x-displayName: Service instance\n  - name: function\n    x-displayName: Function\n  - name: form\n    x-displayName: Form\n  - name: submission\n    x-displayName: Form submission\n  - name: splitTest\n    x-displayName: Split test\n  - name: asset\n    x-displayName: Asset\n  - name: assetPublicSignature\n    x-displayName: Asset public signature\nexternalDocs:\n  description: Online documentation\n  url: https://www.netlify.com/docs/api/\ninfo:\n  description: Deploys\n  termsOfService: https://www.netlify.com/legal/terms-of-use/\n  title: Netlify's API documentation - deploys\n  version: 2.9.0\n  x-logo:\n    altText: Netlify\n    href: https://www.netlify.com/docs/\n    url: netlify-logo.png\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /sites/{site_id}/deployed-branches: get: operation \"listSiteDeployedBranches\": security: unknown security schema \"netlifyAuth\""
}