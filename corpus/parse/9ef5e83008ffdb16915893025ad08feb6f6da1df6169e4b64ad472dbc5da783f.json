{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/aws/serverless-application-model"
		},
		"file": {
			"name": "connector_api_to_function.json",
			"size": 0,
			"path": "tests/translator/output/aws-cn/connector_api_to_function.json",
			"byteSize": 8982,
			"content": "{\n  \"Resources\": {\n    \"MyApiGateway\": {\n      \"Properties\": {\n        \"Description\": \"A test API\",\n        \"Name\": \"MyRestAPI\"\n      },\n      \"Type\": \"AWS::ApiGateway::RestApi\"\n    },\n    \"MyApiGatewayRootMethod\": {\n      \"Properties\": {\n        \"AuthorizationType\": \"NONE\",\n        \"HttpMethod\": \"POST\",\n        \"Integration\": {\n          \"Type\": \"MOCK\"\n        },\n        \"ResourceId\": {\n          \"Fn::GetAtt\": [\n            \"MyApiGateway\",\n            \"RootResourceId\"\n          ]\n        },\n        \"RestApiId\": {\n          \"Ref\": \"MyApiGateway\"\n        }\n      },\n      \"Type\": \"AWS::ApiGateway::Method\"\n    },\n    \"MyApiGatewayV2\": {\n      \"Properties\": {\n        \"Name\": \"MyApi\",\n        \"ProtocolType\": \"WEBSOCKET\"\n      },\n      \"Type\": \"AWS::ApiGatewayV2::Api\"\n    },\n    \"MyConnectorApiV2ToLambdaWriteLambdaPermission\": {\n      \"Metadata\": {\n        \"aws:sam:connectors\": {\n          \"MyConnectorApiV2ToLambda\": {\n            \"Destination\": {\n              \"Type\": \"AWS::Serverless::Function\"\n            },\n            \"Source\": {\n              \"Type\": \"AWS::ApiGatewayV2::Api\"\n            }\n          }\n        }\n      },\n      \"Properties\": {\n        \"Action\": \"lambda:InvokeFunction\",\n        \"FunctionName\": {\n          \"Fn::GetAtt\": [\n            \"MyServerlessFunction\",\n            \"Arn\"\n          ]\n        },\n        \"Principal\": \"apigateway.amazonaws.com\",\n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${SourceResourceId}/${SourceQualifier}\",\n            {\n              \"SourceQualifier\": \"*\",\n              \"SourceResourceId\": {\n                \"Ref\": \"MyApiGatewayV2\"\n              }\n            }\n          ]\n        }\n      },\n      \"Type\": \"AWS::Lambda::Permission\"\n    },\n    \"MyConnectorApigwToLambdaWriteLambdaPermission\": {\n      \"Metadata\": {\n        \"aws:sam:connectors\": {\n          \"MyConnectorApigwToLambda\": {\n            \"Destination\": {\n              \"Type\": \"AWS::Serverless::Function\"\n            },\n            \"Source\": {\n              \"Type\": \"AWS::ApiGateway::RestApi\"\n            }\n          }\n        }\n      },\n      \"Properties\": {\n        \"Action\": \"lambda:InvokeFunction\",\n        \"FunctionName\": {\n          \"Fn::GetAtt\": [\n            \"MyServerlessFunction\",\n            \"Arn\"\n          ]\n        },\n        \"Principal\": \"apigateway.amazonaws.com\",\n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${SourceResourceId}/${SourceQualifier}\",\n            {\n              \"SourceQualifier\": \"*\",\n              \"SourceResourceId\": {\n                \"Ref\": \"MyApiGateway\"\n              }\n            }\n          ]\n        }\n      },\n      \"Type\": \"AWS::Lambda::Permission\"\n    },\n    \"MyConnectorServerlessApiToLambdaWriteLambdaPermission\": {\n      \"Metadata\": {\n        \"aws:sam:connectors\": {\n          \"MyConnectorServerlessApiToLambda\": {\n            \"Destination\": {\n              \"Type\": \"AWS::Lambda::Function\"\n            },\n            \"Source\": {\n              \"Type\": \"AWS::Serverless::Api\"\n            }\n          }\n        }\n      },\n      \"Properties\": {\n        \"Action\": \"lambda:InvokeFunction\",\n        \"FunctionName\": {\n          \"Fn::GetAtt\": [\n            \"MyFunction\",\n            \"Arn\"\n          ]\n        },\n        \"Principal\": \"apigateway.amazonaws.com\",\n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${SourceResourceId}/${SourceQualifier}\",\n            {\n              \"SourceQualifier\": \"*\",\n              \"SourceResourceId\": {\n                \"Ref\": \"MyServerlessApi\"\n              }\n            }\n          ]\n        }\n      },\n      \"Type\": \"AWS::Lambda::Permission\"\n    },\n    \"MyConnectorServerlessHttpApiToLambdaWriteLambdaPermission\": {\n      \"Metadata\": {\n        \"aws:sam:connectors\": {\n          \"MyConnectorServerlessHttpApiToLambda\": {\n            \"Destination\": {\n              \"Type\": \"AWS::Lambda::Function\"\n            },\n            \"Source\": {\n              \"Type\": \"AWS::Serverless::HttpApi\"\n            }\n          }\n        }\n      },\n      \"Properties\": {\n        \"Action\": \"lambda:InvokeFunction\",\n        \"FunctionName\": {\n          \"Fn::GetAtt\": [\n            \"MyFunction\",\n            \"Arn\"\n          ]\n        },\n        \"Principal\": \"apigateway.amazonaws.com\",\n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${SourceResourceId}/${SourceQualifier}\",\n            {\n              \"SourceQualifier\": \"*\",\n              \"SourceResourceId\": {\n                \"Ref\": \"MyHttpApi\"\n              }\n            }\n          ]\n        }\n      },\n      \"Type\": \"AWS::Lambda::Permission\"\n    },\n    \"MyFunction\": {\n      \"Properties\": {\n        \"Code\": {\n          \"ZipFile\": \"const AWS = require('aws-sdk');\\nexports.handler = async (event) =\u003e {\\n  console.log(JSON.stringify(event));\\n};\\n\"\n        },\n        \"Handler\": \"index.handler\",\n        \"Role\": {\n          \"Fn::GetAtt\": [\n            \"MyRole\",\n            \"Arn\"\n          ]\n        },\n        \"Runtime\": \"nodejs14.x\"\n      },\n      \"Type\": \"AWS::Lambda::Function\"\n    },\n    \"MyHttpApi\": {\n      \"Properties\": {\n        \"Body\": {\n          \"info\": {\n            \"title\": {\n              \"Ref\": \"AWS::StackName\"\n            },\n            \"version\": \"1.0\"\n          },\n          \"openapi\": \"3.0.1\",\n          \"paths\": {},\n          \"tags\": [\n            {\n              \"name\": \"httpapi:createdBy\",\n              \"x-amazon-apigateway-tag-value\": \"SAM\"\n            }\n          ]\n        }\n      },\n      \"Type\": \"AWS::ApiGatewayV2::Api\"\n    },\n    \"MyHttpApiProdStage\": {\n      \"Properties\": {\n        \"ApiId\": {\n          \"Ref\": \"MyHttpApi\"\n        },\n        \"AutoDeploy\": true,\n        \"StageName\": \"Prod\",\n        \"Tags\": {\n          \"httpapi:createdBy\": \"SAM\"\n        }\n      },\n      \"Type\": \"AWS::ApiGatewayV2::Stage\"\n    },\n    \"MyRole\": {\n      \"Properties\": {\n        \"AssumeRolePolicyDocument\": {\n          \"Statement\": [\n            {\n              \"Action\": \"sts:AssumeRole\",\n              \"Effect\": \"Allow\",\n              \"Principal\": {\n                \"Service\": \"lambda.amazonaws.com\"\n              }\n            }\n          ]\n        },\n        \"ManagedPolicyArns\": [\n          {\n            \"Fn::Sub\": \"arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"\n          }\n        ]\n      },\n      \"Type\": \"AWS::IAM::Role\"\n    },\n    \"MyServerlessApi\": {\n      \"Properties\": {\n        \"Body\": {\n          \"info\": {\n            \"title\": {\n              \"Ref\": \"AWS::StackName\"\n            },\n            \"version\": \"1.0\"\n          },\n          \"paths\": {},\n          \"swagger\": \"2.0\"\n        },\n        \"EndpointConfiguration\": {\n          \"Types\": [\n            \"REGIONAL\"\n          ]\n        },\n        \"Parameters\": {\n          \"endpointConfigurationTypes\": \"REGIONAL\"\n        }\n      },\n      \"Type\": \"AWS::ApiGateway::RestApi\"\n    },\n    \"MyServerlessApiDeployment5332c373d4\": {\n      \"Properties\": {\n        \"Description\": \"RestApi deployment id: 5332c373d45c69e6c0f562b4a419aa8eb311adc7\",\n        \"RestApiId\": {\n          \"Ref\": \"MyServerlessApi\"\n        },\n        \"StageName\": \"Stage\"\n      },\n      \"Type\": \"AWS::ApiGateway::Deployment\"\n    },\n    \"MyServerlessApiProdStage\": {\n      \"Properties\": {\n        \"DeploymentId\": {\n          \"Ref\": \"MyServerlessApiDeployment5332c373d4\"\n        },\n        \"RestApiId\": {\n          \"Ref\": \"MyServerlessApi\"\n        },\n        \"StageName\": \"Prod\"\n      },\n      \"Type\": \"AWS::ApiGateway::Stage\"\n    },\n    \"MyServerlessFunction\": {\n      \"Properties\": {\n        \"Code\": {\n          \"ZipFile\": \"const AWS = require('aws-sdk');\\nexports.handler = async (event) =\u003e {\\n  console.log(JSON.stringify(event));\\n};\\n\"\n        },\n        \"Handler\": \"index.handler\",\n        \"Role\": {\n          \"Fn::GetAtt\": [\n            \"MyServerlessFunctionRole\",\n            \"Arn\"\n          ]\n        },\n        \"Runtime\": \"nodejs14.x\",\n        \"Tags\": [\n          {\n            \"Key\": \"lambda:createdBy\",\n            \"Value\": \"SAM\"\n          }\n        ]\n      },\n      \"Type\": \"AWS::Lambda::Function\"\n    },\n    \"MyServerlessFunctionRole\": {\n      \"Properties\": {\n        \"AssumeRolePolicyDocument\": {\n          \"Statement\": [\n            {\n              \"Action\": [\n                \"sts:AssumeRole\"\n              ],\n              \"Effect\": \"Allow\",\n              \"Principal\": {\n                \"Service\": [\n                  \"lambda.amazonaws.com\"\n                ]\n              }\n            }\n          ],\n          \"Version\": \"2012-10-17\"\n        },\n        \"ManagedPolicyArns\": [\n          \"arn:aws-cn:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"\n        ],\n        \"Tags\": [\n          {\n            \"Key\": \"lambda:createdBy\",\n            \"Value\": \"SAM\"\n          }\n        ]\n      },\n      \"Type\": \"AWS::IAM::Role\"\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/aws/serverless-application-model@2f53aebdcf9b322a395eaa872e5368ddc3c76c95/-/blob/tests/translator/output/aws-cn/connector_api_to_function.json",
			"externalURLs": [
				{
					"url": "https://github.com/aws/serverless-application-model/blob/2f53aebdcf9b322a395eaa872e5368ddc3c76c95/tests/translator/output/aws-cn/connector_api_to_function.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse version: at tests/translator/output/aws-cn/connector_api_to_function.json:1:1: invalid version: invalid major version: strconv.Atoi: parsing \"\": invalid syntax"
}