{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/airbytehq/airbyte"
		},
		"file": {
			"name": "config.yaml",
			"size": 0,
			"path": "airbyte-api/src/main/openapi/config.yaml",
			"byteSize": 142478,
			"content": "openapi: 3.0.0\ninfo:\n  description: |\n    Airbyte Configuration API\n    [https://airbyte.io](https://airbyte.io).\n\n    This API is a collection of HTTP RPC-style methods. While it is not a REST API, those familiar with REST should find the conventions of this API recognizable.\n\n    Here are some conventions that this API follows:\n    * All endpoints are http POST methods.\n    * All endpoints accept data via `application/json` request bodies. The API does not accept any data via query params.\n    * The naming convention for endpoints is: localhost:8000/{VERSION}/{METHOD_FAMILY}/{METHOD_NAME} e.g. `localhost:8000/v1/connections/create`.\n    * For all `update` methods, the whole object must be passed in, even the fields that did not change.\n\n    Change Management:\n    * The major version of the API endpoint can be determined / specified in the URL `localhost:8080/v1/connections/create`\n    * Minor version bumps will be invisible to the end user. The user cannot specify minor versions in requests.\n    * All backwards incompatible changes will happen in major version bumps. We will not make backwards incompatible changes in minor version bumps. Examples of non-breaking changes (includes but not limited to...):\n      * Adding fields to request or response bodies.\n      * Adding new HTTP endpoints.\n    * All `web_backend` APIs are not considered public APIs and are not guaranteeing backwards compatibility.\n\n  version: \"1.0.0\"\n  title: Airbyte Configuration API\n  contact:\n    email: contact@airbyte.io\n  license:\n    name: MIT\n    url: \"https://opensource.org/licenses/MIT\"\nexternalDocs:\n  description: Find out more about Airbyte\n  url: \"https://airbyte.io\"\nservers:\n  - url: \"http://localhost:8000/api\"\ntags:\n  - name: workspace\n    description: Workspace related resources.\n  - name: source_definition\n    description: SourceDefinition related resources.\n  - name: source_definition_specification\n    description: SourceDefinition specification related resources.\n  - name: source\n    description: Source related resources.\n  - name: destination_definition\n    description: DestinationDefinition related resources.\n  - name: destination_definition_specification\n    description: DestinationDefinitionSpecification related resources.\n  - name: destination\n    description: Destination related resources.\n  - name: connection\n    description: Connection between sources and destinations.\n  - name: oauth\n    description: OAuth related resources to delegate access from user.\n  - name: db_migration\n    description: Database migration related resources.\n  - name: web_backend\n    description: |\n      Endpoints for the Airbyte web application. Those APIs should not be called outside the web application implementation and are not\n      guaranteeing any backwards compatibility.\n  - name: health\n    description: Healthchecks\n  - name: deployment\n    description: Export/Import Airbyte Configuration and Database resources.\n\npaths:\n  /v1/workspaces/create:\n    post:\n      tags:\n        - workspace\n      summary: Creates a workspace\n      operationId: createWorkspace\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/WorkspaceCreate\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WorkspaceRead\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/workspaces/delete:\n    post:\n      tags:\n        - workspace\n      summary: Deletes a workspace\n      operationId: deleteWorkspace\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/WorkspaceIdRequestBody\"\n        required: true\n      responses:\n        \"204\":\n          description: The resource was deleted successfully.\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/workspaces/list:\n    post:\n      tags:\n        - workspace\n      summary: List all workspaces registered in the current Airbyte deployment\n      operationId: listWorkspaces\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WorkspaceReadList\"\n  /v1/workspaces/get:\n    post:\n      tags:\n        - workspace\n      summary: Find workspace by ID\n      operationId: getWorkspace\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/WorkspaceIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WorkspaceRead\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/workspaces/get_by_slug:\n    post:\n      tags:\n        - workspace\n      summary: Find workspace by slug\n      operationId: getWorkspaceBySlug\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SlugRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WorkspaceRead\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/workspaces/update:\n    post:\n      tags:\n        - workspace\n      summary: Update workspace state\n      operationId: updateWorkspace\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/WorkspaceUpdate\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WorkspaceRead\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/workspaces/update_name:\n    post:\n      tags:\n        - workspace\n      summary: Update workspace name\n      operationId: updateWorkspaceName\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/WorkspaceUpdateName\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WorkspaceRead\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/workspaces/tag_feedback_status_as_done:\n    post:\n      tags:\n        - workspace\n      summary: Update workspace feedback state\n      operationId: updateWorkspaceFeedback\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/WorkspaceGiveFeedback\"\n        required: true\n      responses:\n        \"204\":\n          description: The feedback state has been properly updated\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n  /v1/notifications/try:\n    post:\n      tags:\n        - notifications\n      summary: Try sending a notifications\n      operationId: tryNotificationConfig\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Notification\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationRead\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/source_definitions/create:\n    post:\n      tags:\n        - source_definition\n      summary: Creates a sourceDefinition\n      operationId: createSourceDefinition\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SourceDefinitionCreate\"\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SourceDefinitionRead\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/source_definitions/update:\n    post:\n      tags:\n        - source_definition\n      summary: Update a sourceDefinition\n      operationId: updateSourceDefinition\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SourceDefinitionUpdate\"\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SourceDefinitionRead\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/source_definitions/list:\n    post:\n      tags:\n        - source_definition\n      summary: List all the sourceDefinitions the current Airbyte deployment is configured to use\n      operationId: listSourceDefinitions\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SourceDefinitionReadList\"\n  /v1/source_definitions/list_latest:\n    post:\n      tags:\n        - source_definition\n      summary: List the latest sourceDefinitions Airbyte supports\n      description: Guaranteed to retrieve the latest information on supported sources.\n      operationId: listLatestSourceDefinitions\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SourceDefinitionReadList\"\n  /v1/source_definitions/get:\n    post:\n      tags:\n        - source_definition\n      summary: Get source\n      operationId: getSourceDefinition\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SourceDefinitionIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SourceDefinitionRead\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/source_definitions/delete:\n    post:\n      tags:\n        - source_definition\n      summary: Delete a source definition\n      operationId: deleteSourceDefinition\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SourceDefinitionIdRequestBody\"\n        required: true\n      responses:\n        \"204\":\n          description: The resource was deleted successfully.\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/source_definitions/list_private:\n    post:\n      tags:\n        - source_definition\n      summary:\n        List all private, non-custom sourceDefinitions, and for each indicate whether the given workspace has a grant for using the definition. Used\n        by admins to view and modify a given workspace's grants.\n      operationId: listPrivateSourceDefinitions\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/WorkspaceIdRequestBody\"\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PrivateSourceDefinitionReadList\"\n  /v1/source_definitions/list_for_workspace:\n    post:\n      tags:\n        - source_definition\n      summary: List all the sourceDefinitions the given workspace is configured to use\n      operationId: listSourceDefinitionsForWorkspace\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/WorkspaceIdRequestBody\"\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SourceDefinitionReadList\"\n  /v1/source_definitions/create_custom:\n    post:\n      tags:\n        - source_definition\n      summary: Creates a custom sourceDefinition for the given workspace\n      operationId: createCustomSourceDefinition\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CustomSourceDefinitionCreate\"\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SourceDefinitionRead\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/source_definitions/get_for_workspace:\n    post:\n      tags:\n        - source_definition\n      summary: Get a sourceDefinition that is configured for the given workspace\n      operationId: getSourceDefinitionForWorkspace\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SourceDefinitionIdWithWorkspaceId\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SourceDefinitionRead\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/source_definitions/update_custom:\n    post:\n      tags:\n        - source_definition\n      summary: Update a custom sourceDefinition for the given workspace\n      operationId: updateCustomSourceDefinition\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CustomSourceDefinitionUpdate\"\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SourceDefinitionRead\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/source_definitions/delete_custom:\n    post:\n      tags:\n        - source_definition\n      summary: Delete a custom source definition for the given workspace\n      operationId: deleteCustomSourceDefinition\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SourceDefinitionIdWithWorkspaceId\"\n        required: true\n      responses:\n        \"204\":\n          description: The resource was deleted successfully.\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/source_definitions/grant_definition:\n    post:\n      tags:\n        - source_definition\n      summary: grant a private, non-custom sourceDefinition to a given workspace\n      operationId: grantSourceDefinitionToWorkspace\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SourceDefinitionIdWithWorkspaceId\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PrivateSourceDefinitionRead\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/source_definitions/revoke_definition:\n    post:\n      tags:\n        - source_definition\n      summary: revoke a grant to a private, non-custom sourceDefinition from a given workspace\n      operationId: revokeSourceDefinitionFromWorkspace\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SourceDefinitionIdWithWorkspaceId\"\n        required: true\n      responses:\n        \"204\":\n          description: The resource was deleted successfully.\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/source_definition_specifications/get:\n    post:\n      tags:\n        - source_definition_specification\n      summary: Get specification for a SourceDefinition.\n      operationId: getSourceDefinitionSpecification\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SourceDefinitionIdWithWorkspaceId\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SourceDefinitionSpecificationRead\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/sources/create:\n    post:\n      tags:\n        - source\n      summary: Create a source\n      operationId: createSource\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SourceCreate\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SourceRead\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/sources/update:\n    post:\n      tags:\n        - source\n      summary: Update a source\n      operationId: updateSource\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SourceUpdate\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SourceRead\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/sources/list:\n    post:\n      tags:\n        - source\n      summary: List sources for workspace\n      description: List sources for workspace. Does not return deleted sources.\n      operationId: listSourcesForWorkspace\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/WorkspaceIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SourceReadList\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/sources/get:\n    post:\n      tags:\n        - source\n      summary: Get source\n      operationId: getSource\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SourceIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SourceRead\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/sources/search:\n    post:\n      tags:\n        - source\n      summary: Search sources\n      operationId: searchSources\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SourceSearch\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SourceReadList\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/sources/clone:\n    post:\n      tags:\n        - source\n      summary: Clone source\n      operationId: cloneSource\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SourceIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SourceRead\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/sources/delete:\n    post:\n      tags:\n        - source\n      summary: Delete a source\n      operationId: deleteSource\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SourceIdRequestBody\"\n        required: true\n      responses:\n        \"204\":\n          description: The resource was deleted successfully.\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/sources/check_connection:\n    post:\n      tags:\n        - source\n      summary: Check connection to the source\n      operationId: checkConnectionToSource\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SourceIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CheckConnectionRead\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/sources/check_connection_for_update:\n    post:\n      tags:\n        - source\n      summary: Check connection for a proposed update to a source\n      operationId: checkConnectionToSourceForUpdate\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SourceUpdate\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CheckConnectionRead\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/sources/discover_schema:\n    post:\n      tags:\n        - source\n      summary: Discover the schema catalog of the source\n      operationId: discoverSchemaForSource\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SourceDiscoverSchemaRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SourceDiscoverSchemaRead\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/destination_definitions/create:\n    post:\n      tags:\n        - destination_definition\n      summary: Creates a destinationsDefinition\n      operationId: createDestinationDefinition\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DestinationDefinitionCreate\"\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DestinationDefinitionRead\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/destination_definitions/update:\n    post:\n      tags:\n        - destination_definition\n      summary: Update destinationDefinition\n      operationId: updateDestinationDefinition\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DestinationDefinitionUpdate\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DestinationDefinitionRead\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/destination_definitions/list:\n    post:\n      tags:\n        - destination_definition\n      summary: List all the destinationDefinitions the current Airbyte deployment is configured to use\n      operationId: listDestinationDefinitions\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DestinationDefinitionReadList\"\n  /v1/destination_definitions/list_latest:\n    post:\n      tags:\n        - destination_definition\n      summary: List the latest destinationDefinitions Airbyte supports\n      description: Guaranteed to retrieve the latest information on supported destinations.\n      operationId: listLatestDestinationDefinitions\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DestinationDefinitionReadList\"\n  /v1/destination_definitions/get:\n    post:\n      tags:\n        - destination_definition\n      summary: Get destinationDefinition\n      operationId: getDestinationDefinition\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DestinationDefinitionIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DestinationDefinitionRead\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/destination_definitions/delete:\n    post:\n      tags:\n        - destination_definition\n      summary: Delete a destination definition\n      operationId: deleteDestinationDefinition\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DestinationDefinitionIdRequestBody\"\n        required: true\n      responses:\n        \"204\":\n          description: The resource was deleted successfully.\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/destination_definitions/list_private:\n    post:\n      tags:\n        - destination_definition\n      summary:\n        List all private, non-custom destinationDefinitions, and for each indicate whether the given workspace has a grant for using the\n        definition. Used by admins to view and modify a given workspace's grants.\n      operationId: listPrivateDestinationDefinitions\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/WorkspaceIdRequestBody\"\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PrivateDestinationDefinitionReadList\"\n  /v1/destination_definitions/list_for_workspace:\n    post:\n      tags:\n        - destination_definition\n      summary: List all the destinationDefinitions the given workspace is configured to use\n      operationId: listDestinationDefinitionsForWorkspace\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/WorkspaceIdRequestBody\"\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DestinationDefinitionReadList\"\n  /v1/destination_definitions/create_custom:\n    post:\n      tags:\n        - destination_definition\n      summary: Creates a custom destinationDefinition for the given workspace\n      operationId: createCustomDestinationDefinition\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CustomDestinationDefinitionCreate\"\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DestinationDefinitionRead\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/destination_definitions/get_for_workspace:\n    post:\n      tags:\n        - destination_definition\n      summary: Get a destinationDefinition that is configured for the given workspace\n      operationId: getDestinationDefinitionForWorkspace\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DestinationDefinitionIdWithWorkspaceId\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DestinationDefinitionRead\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/destination_definitions/update_custom:\n    post:\n      tags:\n        - destination_definition\n      summary: Update a custom destinationDefinition for the given workspace\n      operationId: updateCustomDestinationDefinition\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CustomDestinationDefinitionUpdate\"\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DestinationDefinitionRead\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/destination_definitions/delete_custom:\n    post:\n      tags:\n        - destination_definition\n      summary: Delete a custom destination definition for the given workspace\n      operationId: deleteCustomDestinationDefinition\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DestinationDefinitionIdWithWorkspaceId\"\n        required: true\n      responses:\n        \"204\":\n          description: The destination was deleted successfully.\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/destination_definitions/grant_definition:\n    post:\n      tags:\n        - destination_definition\n      summary: grant a private, non-custom destinationDefinition to a given workspace\n      operationId: grantDestinationDefinitionToWorkspace\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DestinationDefinitionIdWithWorkspaceId\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PrivateDestinationDefinitionRead\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/destination_definitions/revoke_definition:\n    post:\n      tags:\n        - destination_definition\n      summary: revoke a grant to a private, non-custom destinationDefinition from a given workspace\n      operationId: revokeDestinationDefinitionFromWorkspace\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DestinationDefinitionIdWithWorkspaceId\"\n        required: true\n      responses:\n        \"204\":\n          description: The resource was deleted successfully.\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/destination_definition_specifications/get:\n    post:\n      tags:\n        - destination_definition_specification\n      summary: Get specification for a destinationDefinition\n      operationId: getDestinationDefinitionSpecification\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DestinationDefinitionIdWithWorkspaceId\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DestinationDefinitionSpecificationRead\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  # DESTINATIONS\n  /v1/destinations/create:\n    post:\n      tags:\n        - destination\n      summary: Create a destination\n      operationId: createDestination\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DestinationCreate\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DestinationRead\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/destinations/update:\n    post:\n      tags:\n        - destination\n      summary: Update a destination\n      operationId: updateDestination\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DestinationUpdate\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DestinationRead\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/destinations/list:\n    post:\n      tags:\n        - destination\n      summary: List configured destinations for a workspace\n      operationId: listDestinationsForWorkspace\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/WorkspaceIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DestinationReadList\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/destinations/get:\n    post:\n      tags:\n        - destination\n      summary: Get configured destination\n      operationId: getDestination\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DestinationIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DestinationRead\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/destinations/search:\n    post:\n      tags:\n        - destination\n      summary: Search destinations\n      operationId: searchDestinations\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DestinationSearch\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DestinationReadList\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/destinations/check_connection:\n    post:\n      tags:\n        - destination\n      summary: Check connection to the destination\n      operationId: checkConnectionToDestination\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DestinationIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CheckConnectionRead\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/destinations/check_connection_for_update:\n    post:\n      tags:\n        - destination\n      summary: Check connection for a proposed update to a destination\n      operationId: checkConnectionToDestinationForUpdate\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DestinationUpdate\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CheckConnectionRead\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/destinations/delete:\n    post:\n      tags:\n        - destination\n      summary: Delete the destination\n      operationId: deleteDestination\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DestinationIdRequestBody\"\n        required: true\n      responses:\n        \"204\":\n          description: The resource was deleted successfully.\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/destinations/clone:\n    post:\n      tags:\n        - destination\n      summary: Clone destination\n      operationId: cloneDestination\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DestinationIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DestinationRead\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/connections/create:\n    post:\n      tags:\n        - connection\n      summary: Create a connection between a source and a destination\n      operationId: createConnection\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ConnectionCreate\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConnectionRead\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/connections/update:\n    post:\n      tags:\n        - connection\n      summary: Update a connection\n      operationId: updateConnection\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ConnectionUpdate\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConnectionRead\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/connections/list:\n    post:\n      tags:\n        - connection\n      summary: Returns all connections for a workspace.\n      description: List connections for workspace. Does not return deleted connections.\n      operationId: listConnectionsForWorkspace\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/WorkspaceIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConnectionReadList\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/connections/list_all:\n    post:\n      tags:\n        - connection\n      summary: Returns all connections for a workspace, including deleted connections.\n      description: List connections for workspace, including deleted connections.\n      operationId: listAllConnectionsForWorkspace\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/WorkspaceIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConnectionReadList\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/connections/get:\n    post:\n      tags:\n        - connection\n      summary: Get a connection\n      operationId: getConnection\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ConnectionIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConnectionRead\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/state/get:\n    post:\n      tags:\n        - connection\n      summary: Fetch the current state for a connection.\n      operationId: getState\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ConnectionIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConnectionState\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/connections/search:\n    post:\n      tags:\n        - connection\n      summary: Search connections\n      operationId: searchConnections\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ConnectionSearch\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConnectionReadList\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/connections/delete:\n    post:\n      tags:\n        - connection\n      summary: Delete a connection\n      operationId: deleteConnection\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ConnectionIdRequestBody\"\n        required: true\n      responses:\n        \"204\":\n          description: The resource was deleted successfully.\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/connections/sync:\n    post:\n      tags:\n        - connection\n      summary: Trigger a manual sync of the connection\n      operationId: syncConnection\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ConnectionIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/JobInfoRead\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/connections/reset:\n    post:\n      tags:\n        - connection\n      summary: Reset the data for the connection. Deletes data generated by the connection in the destination. Resets any cursors back to initial state.\n      operationId: resetConnection\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ConnectionIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/JobInfoRead\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/operations/check:\n    post:\n      tags:\n        - operation\n      summary: Check if an operation to be created is valid\n      operationId: checkOperation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/OperatorConfiguration\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CheckOperationRead\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/operations/create:\n    post:\n      tags:\n        - operation\n      summary: Create an operation to be applied as part of a connection pipeline\n      operationId: createOperation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/OperationCreate\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OperationRead\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/operations/update:\n    post:\n      tags:\n        - operation\n      summary: Update an operation\n      operationId: updateOperation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/OperationUpdate\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OperationRead\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/operations/list:\n    post:\n      tags:\n        - operation\n      summary: Returns all operations for a connection.\n      description: List operations for connection.\n      operationId: listOperationsForConnection\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ConnectionIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OperationReadList\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/operations/get:\n    post:\n      tags:\n        - operation\n      summary: Returns an operation\n      operationId: getOperation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/OperationIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OperationRead\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/operations/delete:\n    post:\n      tags:\n        - operation\n      summary: Delete an operation\n      operationId: deleteOperation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/OperationIdRequestBody\"\n        required: true\n      responses:\n        \"204\":\n          description: The resource was deleted successfully.\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/scheduler/sources/check_connection:\n    post:\n      tags:\n        - scheduler\n      summary: Run check connection for a given source configuration\n      operationId: executeSourceCheckConnection\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SourceCoreConfig\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CheckConnectionRead\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/scheduler/sources/discover_schema:\n    post:\n      tags:\n        - scheduler\n      summary: Run discover schema for a given source a source configuration\n      operationId: executeSourceDiscoverSchema\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SourceCoreConfig\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SourceDiscoverSchemaRead\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/scheduler/destinations/check_connection:\n    post:\n      tags:\n        - scheduler\n      summary: Run check connection for a given destination configuration\n      operationId: executeDestinationCheckConnection\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DestinationCoreConfig\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CheckConnectionRead\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/db_migrations/list:\n    post:\n      tags:\n        - db_migration\n      summary: List all database migrations\n      operationId: listMigrations\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DbMigrationRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DbMigrationReadList\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/db_migrations/migrate:\n    post:\n      tags:\n        - db_migration\n      summary: Migrate the database to the latest version\n      operationId: executeMigrations\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DbMigrationRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DbMigrationExecutionRead\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/source_oauths/oauth_params/create:\n    post:\n      tags:\n        - oauth\n      summary: \u003e\n        Sets instancewide variables to be used for the oauth flow when creating this source. When set, these variables will be injected\n        into a connector's configuration before any interaction with the connector image itself. This enables running oauth flows with\n        consistent variables e.g: the company's Google Ads developer_token, client_id, and client_secret without the user having to know\n        about these variables.\n      operationId: setInstancewideSourceOauthParams\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SetInstancewideSourceOauthParamsRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful\n        \"400\":\n          $ref: \"#/components/responses/ExceptionResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n  /v1/source_oauths/get_consent_url:\n    post:\n      tags:\n        - oauth\n      summary: Given a source connector definition ID, return the URL to the consent screen where to redirect the user to.\n      operationId: getSourceOAuthConsent\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SourceOauthConsentRequest\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OAuthConsentRead\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/source_oauths/complete_oauth:\n    post:\n      tags:\n        - oauth\n      summary: Given a source def ID generate an access/refresh token etc.\n      operationId: completeSourceOAuth\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CompleteSourceOauthRequest\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CompleteOAuthResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/destination_oauths/get_consent_url:\n    post:\n      tags:\n        - oauth\n      summary: Given a destination connector definition ID, return the URL to the consent screen where to redirect the user to.\n      operationId: getDestinationOAuthConsent\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DestinationOauthConsentRequest\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OAuthConsentRead\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/destination_oauths/complete_oauth:\n    post:\n      tags:\n        - oauth\n      summary: Given a destination def ID generate an access/refresh token etc.\n      operationId: completeDestinationOAuth\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CompleteDestinationOAuthRequest\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CompleteOAuthResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/destination_oauths/oauth_params/create:\n    post:\n      tags:\n        - oauth\n      summary: \u003e\n        Sets instancewide variables to be used for the oauth flow when creating this destination. When set, these variables will be injected\n        into a connector's configuration before any interaction with the connector image itself. This enables running oauth flows with\n        consistent variables e.g: the company's Google Ads developer_token, client_id, and client_secret without the user having to know\n        about these variables.\n      operationId: setInstancewideDestinationOauthParams\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SetInstancewideDestinationOauthParamsRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful\n        \"400\":\n          $ref: \"#/components/responses/ExceptionResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n  /v1/web_backend/connections/list:\n    post:\n      tags:\n        - web_backend\n      summary: Returns all non-deleted connections for a workspace.\n      operationId: webBackendListConnectionsForWorkspace\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/WorkspaceIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WebBackendConnectionReadList\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/web_backend/connections/list_all:\n    post:\n      tags:\n        - web_backend\n      summary: Returns all connections for a workspace.\n      operationId: webBackendListAllConnectionsForWorkspace\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/WorkspaceIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WebBackendConnectionReadList\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/web_backend/connections/get:\n    post:\n      tags:\n        - web_backend\n      summary: Get a connection\n      operationId: webBackendGetConnection\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/WebBackendConnectionRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WebBackendConnectionRead\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/web_backend/connections/create:\n    post:\n      tags:\n        - web_backend\n      summary: Create a connection\n      operationId: webBackendCreateConnection\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/WebBackendConnectionCreate\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WebBackendConnectionRead\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/web_backend/connections/update:\n    post:\n      tags:\n        - web_backend\n      summary: Update a connection\n      operationId: webBackendUpdateConnection\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/WebBackendConnectionUpdate\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WebBackendConnectionRead\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/web_backend/connections/search:\n    post:\n      tags:\n        - web_backend\n      summary: Search connections\n      operationId: webBackendSearchConnections\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/WebBackendConnectionSearch\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WebBackendConnectionReadList\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/web_backend/workspace/state:\n    post:\n      tags:\n        - web_backend\n      summary: Returns the current state of a workspace\n      operationId: webBackendGetWorkspaceState\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/WebBackendWorkspaceState\"\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WebBackendWorkspaceStateResult\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/jobs/list:\n    post:\n      tags:\n        - jobs\n      summary: Returns recent jobs for a connection. Jobs are returned in descending order by createdAt.\n      operationId: listJobsFor\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/JobListRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/JobReadList\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/jobs/get:\n    post:\n      tags:\n        - jobs\n      summary: Get information about a job\n      operationId: getJobInfo\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/JobIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/JobInfoRead\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/jobs/cancel:\n    post:\n      tags:\n        - jobs\n      summary: Cancels a job\n      operationId: cancelJob\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/JobIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/JobInfoRead\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/jobs/get_debug_info:\n    post:\n      tags:\n        - jobs\n      summary: Gets all information needed to debug this job\n      operationId: getJobDebugInfo\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/JobIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/JobDebugInfoRead\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/health:\n    get:\n      tags:\n        - health\n      summary: Health Check\n      operationId: getHealthCheck\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HealthCheckRead\"\n      # This route is unsecured for external monitoring.\n      security: []\n  /v1/logs/get:\n    post:\n      tags:\n        - logs\n      summary: Get logs\n      operationId: getLogs\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/LogsRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          description: Returns the log file\n          content:\n            text/plain:\n              schema:\n                type: string\n                format: binary\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n  /v1/openapi:\n    get:\n      tags:\n        - openapi\n      summary: Returns the openapi specification\n      operationId: getOpenApiSpec\n      responses:\n        \"200\":\n          description: Returns the openapi specification file\n          content:\n            text/plain:\n              schema:\n                type: string\n                format: binary\n  /v1/deployment/export:\n    post:\n      tags:\n        - deployment\n      summary: Export Airbyte Configuration and Data Archive\n      operationId: exportArchive\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/x-gzip:\n              schema:\n                $ref: \"#/components/schemas/AirbyteArchive\"\n  /v1/deployment/import:\n    post:\n      tags:\n        - deployment\n      summary: Import Airbyte Configuration and Data Archive\n      operationId: importArchive\n      requestBody:\n        content:\n          application/x-gzip:\n            schema:\n              $ref: \"#/components/schemas/AirbyteArchive\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ImportRead\"\n  /v1/deployment/export_workspace:\n    post:\n      tags:\n        - deployment\n      summary: Export Airbyte Workspace Configuration\n      operationId: exportWorkspace\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/WorkspaceIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/x-gzip:\n              schema:\n                $ref: \"#/components/schemas/AirbyteArchive\"\n  /v1/deployment/upload_archive_resource:\n    post:\n      tags:\n        - deployment\n      summary: Upload a GZIP archive tarball and stage it in the server's cache as a temporary resource\n      operationId: uploadArchiveResource\n      requestBody:\n        content:\n          application/x-gzip:\n            schema:\n              $ref: \"#/components/schemas/AirbyteArchive\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UploadRead\"\n  /v1/deployment/import_into_workspace:\n    post:\n      tags:\n        - deployment\n      summary: \u003e\n        Import Airbyte Configuration into Workspace (this operation might change ids of imported\n        configurations). Note, in order to use this api endpoint, you might need to upload a\n        temporary archive resource with 'deployment/upload_archive_resource' first\n      operationId: importIntoWorkspace\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ImportRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ImportRead\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n  schemas:\n    # WORKSPACE\n    WorkspaceId:\n      type: string\n      format: uuid\n    CustomerId:\n      type: string\n      format: uuid\n    WorkspaceCreate:\n      type: object\n      required:\n        - name\n      properties:\n        email:\n          type: string\n          format: email\n        anonymousDataCollection:\n          type: boolean\n        name:\n          type: string\n        news:\n          type: boolean\n        securityUpdates:\n          type: boolean\n        notifications:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Notification\"\n        displaySetupWizard:\n          type: boolean\n    Notification:\n      type: object\n      required:\n        - notificationType\n        - sendOnSuccess\n        - sendOnFailure\n      properties:\n        # Instead of this type field, we would prefer a json schema \"oneOf\" but unfortunately,\n        # the jsonschema2pojo does not seem to support it yet: https://github.com/joelittlejohn/jsonschema2pojo/issues/392\n        notificationType:\n          $ref: \"#/components/schemas/NotificationType\"\n        sendOnSuccess:\n          type: boolean\n          default: false\n        sendOnFailure:\n          type: boolean\n          default: true\n        slackConfiguration:\n          $ref: \"#/components/schemas/SlackNotificationConfiguration\"\n        customerioConfiguration:\n          $ref: \"#/components/schemas/CustomerioNotificationConfiguration\"\n    SlackNotificationConfiguration:\n      type: object\n      required:\n        - webhook\n      properties:\n        webhook:\n          type: string\n    CustomerioNotificationConfiguration:\n      type: object\n    NotificationType:\n      type: string\n      enum:\n        - slack\n        - customerio\n        # - webhook\n    NotificationRead:\n      type: object\n      required:\n        - status\n      properties:\n        status:\n          type: string\n          enum:\n            - succeeded\n            - failed\n        message:\n          type: string\n    WorkspaceIdRequestBody:\n      type: object\n      required:\n        - workspaceId\n      properties:\n        workspaceId:\n          $ref: \"#/components/schemas/WorkspaceId\"\n    WorkspaceReadList:\n      type: object\n      required:\n        - workspaces\n      properties:\n        workspaces:\n          type: array\n          items:\n            $ref: \"#/components/schemas/WorkspaceRead\"\n    WorkspaceRead:\n      type: object\n      required:\n        - workspaceId\n        - customerId\n        - name\n        - slug\n        - initialSetupComplete\n      properties:\n        workspaceId:\n          $ref: \"#/components/schemas/WorkspaceId\"\n        customerId:\n          $ref: \"#/components/schemas/CustomerId\"\n        email:\n          type: string\n          format: email\n        name:\n          type: string\n        slug:\n          type: string\n        initialSetupComplete:\n          type: boolean\n        displaySetupWizard:\n          type: boolean\n        anonymousDataCollection:\n          type: boolean\n        news:\n          type: boolean\n        securityUpdates:\n          type: boolean\n        notifications:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Notification\"\n        firstCompletedSync:\n          type: boolean\n        feedbackDone:\n          type: boolean\n    WorkspaceUpdateName:\n      type: object\n      required:\n        - workspaceId\n        - name\n      properties:\n        workspaceId:\n          $ref: \"#/components/schemas/WorkspaceId\"\n        name:\n          type: string\n    WorkspaceUpdate:\n      type: object\n      required:\n        - workspaceId\n        - initialSetupComplete\n        - anonymousDataCollection\n        - news\n        - securityUpdates\n      properties:\n        workspaceId:\n          $ref: \"#/components/schemas/WorkspaceId\"\n        email:\n          type: string\n          format: email\n        initialSetupComplete:\n          type: boolean\n        displaySetupWizard:\n          type: boolean\n        anonymousDataCollection:\n          type: boolean\n        news:\n          type: boolean\n        securityUpdates:\n          type: boolean\n        notifications:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Notification\"\n    WorkspaceGiveFeedback:\n      type: object\n      required:\n        - workspaceId\n      properties:\n        workspaceId:\n          $ref: \"#/components/schemas/WorkspaceId\"\n    WebBackendWorkspaceState:\n      type: object\n      required:\n        - workspaceId\n      properties:\n        workspaceId:\n          $ref: \"#/components/schemas/WorkspaceId\"\n    WebBackendWorkspaceStateResult:\n      type: object\n      required:\n        - hasConnections\n        - hasSources\n        - hasDestinations\n      properties:\n        hasConnections:\n          type: boolean\n        hasSources:\n          type: boolean\n        hasDestinations:\n          type: boolean\n    # SLUG\n    SlugRequestBody:\n      type: object\n      required:\n        - slug\n      properties:\n        slug:\n          type: string\n    # SourceDefinition\n    SourceDefinitionId:\n      type: string\n      format: uuid\n    SourceDefinitionIdRequestBody:\n      type: object\n      required:\n        - sourceDefinitionId\n      properties:\n        sourceDefinitionId:\n          $ref: \"#/components/schemas/SourceDefinitionId\"\n    SourceDefinitionCreate:\n      type: object\n      required:\n        - name\n        - dockerRepository\n        - dockerImageTag\n        - documentationUrl\n      properties:\n        name:\n          type: string\n        dockerRepository:\n          type: string\n        dockerImageTag:\n          type: string\n        documentationUrl:\n          type: string\n          format: uri\n        icon:\n          type: string\n        resourceRequirements:\n          $ref: \"#/components/schemas/ActorDefinitionResourceRequirements\"\n    SourceDefinitionUpdate:\n      type: object\n      description: Update the SourceDefinition. Currently, the only allowed attribute to update is the default docker image version.\n      required:\n        - sourceDefinitionId\n        - dockerImageTag\n      properties:\n        sourceDefinitionId:\n          $ref: \"#/components/schemas/SourceDefinitionId\"\n        dockerImageTag:\n          type: string\n        resourceRequirements:\n          $ref: \"#/components/schemas/ActorDefinitionResourceRequirements\"\n    SourceDefinitionRead:\n      type: object\n      required:\n        - sourceDefinitionId\n        - name\n        - dockerRepository\n        - dockerImageTag\n      properties:\n        sourceDefinitionId:\n          $ref: \"#/components/schemas/SourceDefinitionId\"\n        name:\n          type: string\n        dockerRepository:\n          type: string\n        dockerImageTag:\n          type: string\n        documentationUrl:\n          type: string\n          format: uri\n        icon:\n          type: string\n        releaseStage:\n          $ref: \"#/components/schemas/ReleaseStage\"\n        releaseDate:\n          description: The date when this connector was first released, in yyyy-mm-dd format.\n          type: string\n          format: date\n        resourceRequirements:\n          $ref: \"#/components/schemas/ActorDefinitionResourceRequirements\"\n    SourceDefinitionReadList:\n      type: object\n      required:\n        - sourceDefinitions\n      properties:\n        sourceDefinitions:\n          type: array\n          items:\n            $ref: \"#/components/schemas/SourceDefinitionRead\"\n    CustomSourceDefinitionCreate:\n      type: object\n      required:\n        - workspaceId\n        - sourceDefinition\n      properties:\n        workspaceId:\n          $ref: \"#/components/schemas/WorkspaceId\"\n        sourceDefinition:\n          $ref: \"#/components/schemas/SourceDefinitionCreate\"\n    CustomSourceDefinitionUpdate:\n      type: object\n      required:\n        - workspaceId\n        - sourceDefinition\n      properties:\n        workspaceId:\n          $ref: \"#/components/schemas/WorkspaceId\"\n        sourceDefinition:\n          $ref: \"#/components/schemas/SourceDefinitionUpdate\"\n    SourceDefinitionIdWithWorkspaceId:\n      type: object\n      required:\n        - sourceDefinitionId\n        - workspaceId\n      properties:\n        sourceDefinitionId:\n          $ref: \"#/components/schemas/SourceDefinitionId\"\n        workspaceId:\n          $ref: \"#/components/schemas/WorkspaceId\"\n    PrivateSourceDefinitionRead:\n      type: object\n      required:\n        - sourceDefinition\n        - granted\n      properties:\n        sourceDefinition:\n          $ref: \"#/components/schemas/SourceDefinitionRead\"\n        granted:\n          type: boolean\n    PrivateSourceDefinitionReadList:\n      type: object\n      required:\n        - sourceDefinitions\n      properties:\n        sourceDefinitions:\n          type: array\n          items:\n            $ref: \"#/components/schemas/PrivateSourceDefinitionRead\"\n    # SOURCE SPECIFICATION\n    SourceDefinitionSpecification:\n      description: The specification for what values are required to configure the sourceDefinition.\n      type: object\n      example: { user: { type: string } }\n    SourceAuthSpecification:\n      $ref: \"#/components/schemas/AuthSpecification\"\n    AuthSpecification:\n      type: object\n      properties:\n        auth_type:\n          type: string\n          enum: [\"oauth2.0\"] # Future auth types should be added here\n        oauth2Specification:\n          \"$ref\": \"#/components/schemas/OAuth2Specification\"\n    OAuth2Specification:\n      description: An object containing any metadata needed to describe this connector's Oauth flow\n      type: object\n      required:\n        - rootObject\n        - oauthFlowInitParameters\n        - oauthFlowOutputParameters\n      properties:\n        rootObject:\n          description:\n            \"A list of strings representing a pointer to the root object which contains any oauth parameters in the ConnectorSpecification.\n\n            Examples:\n\n            if oauth parameters were contained inside the top level, rootObject=[]\n            If they were nested inside another object {'credentials': {'app_id' etc...}, rootObject=['credentials']\n            If they were inside a oneOf {'switch': {oneOf: [{client_id...}, {non_oauth_param]}},  rootObject=['switch', 0]\n            \"\n          type: array\n          items: {} # \u003c--- using generic any type. Build fails with oneOf (https://github.com/OpenAPITools/openapi-generator/issues/6161)\n          example:\n            - path\n            - 1\n        oauthFlowInitParameters:\n          description:\n            \"Pointers to the fields in the rootObject needed to obtain the initial refresh/access tokens for the OAuth flow.\n            Each inner array represents the path in the rootObject of the referenced field.\n            For example.\n            Assume the rootObject contains params 'app_secret', 'app_id' which are needed to get the initial refresh token.\n            If they are not nested in the rootObject, then the array would look like this [['app_secret'], ['app_id']]\n            If they are nested inside an object called 'auth_params' then this array would be [['auth_params', 'app_secret'], ['auth_params', 'app_id']]\"\n          type: array\n          items:\n            description: A list of strings denoting a pointer into the rootObject for where to find this property\n            type: array\n            items:\n              type: string\n        oauthFlowOutputParameters:\n          description:\n            \"Pointers to the fields in the rootObject which can be populated from successfully completing the oauth flow using the init parameters.\n            This is typically a refresh/access token.\n            Each inner array represents the path in the rootObject of the referenced field.\"\n          type: array\n          items:\n            description: A list of strings denoting a pointer into the rootObject for where to find this property\n            type: array\n            items:\n              type: string\n    SourceDefinitionSpecificationRead:\n      type: object\n      required:\n        - sourceDefinitionId\n        - jobInfo\n      properties:\n        sourceDefinitionId:\n          $ref: \"#/components/schemas/SourceDefinitionId\"\n        documentationUrl:\n          type: string\n        connectionSpecification:\n          $ref: \"#/components/schemas/SourceDefinitionSpecification\"\n        authSpecification:\n          $ref: \"#/components/schemas/SourceAuthSpecification\"\n        advancedAuth:\n          $ref: \"#/components/schemas/AdvancedAuth\"\n        jobInfo:\n          $ref: \"#/components/schemas/SynchronousJobRead\"\n    # SOURCE\n    SourceId:\n      type: string\n      format: uuid\n    SourceIdRequestBody:\n      type: object\n      required:\n        - sourceId\n      properties:\n        sourceId:\n          $ref: \"#/components/schemas/SourceId\"\n    SourceConfiguration:\n      description: The values required to configure the source. The schema for this must match the schema return by source_definition_specifications/get for the source.\n      example: { user: \"charles\" }\n    SourceCoreConfig:\n      type: object\n      required:\n        - sourceDefinitionId\n        - connectionConfiguration\n      properties:\n        sourceDefinitionId:\n          $ref: \"#/components/schemas/SourceDefinitionId\"\n        connectionConfiguration:\n          $ref: \"#/components/schemas/SourceConfiguration\"\n    SourceCreate:\n      type: object\n      required:\n        - workspaceId\n        - name\n        - sourceDefinitionId\n        - connectionConfiguration\n      properties:\n        sourceDefinitionId:\n          $ref: \"#/components/schemas/SourceDefinitionId\"\n        connectionConfiguration:\n          $ref: \"#/components/schemas/SourceConfiguration\"\n        workspaceId:\n          $ref: \"#/components/schemas/WorkspaceId\"\n        name:\n          type: string\n    SourceDiscoverSchemaRequestBody:\n      type: object\n      required:\n        - sourceId\n      properties:\n        sourceId:\n          $ref: \"#/components/schemas/SourceId\"\n        disable_cache:\n          type: boolean\n    SourceUpdate:\n      type: object\n      required:\n        - sourceId\n        - connectionConfiguration\n        - name\n      properties:\n        sourceId:\n          $ref: \"#/components/schemas/SourceId\"\n        connectionConfiguration:\n          $ref: \"#/components/schemas/SourceConfiguration\"\n        name:\n          type: string\n    SourceRead:\n      type: object\n      required:\n        - sourceDefinitionId\n        - sourceId\n        - workspaceId\n        - connectionConfiguration\n        - name\n        - sourceName\n      properties:\n        sourceDefinitionId:\n          $ref: \"#/components/schemas/SourceDefinitionId\"\n        sourceId:\n          $ref: \"#/components/schemas/SourceId\"\n        workspaceId:\n          $ref: \"#/components/schemas/WorkspaceId\"\n        connectionConfiguration:\n          $ref: \"#/components/schemas/SourceConfiguration\"\n        name:\n          type: string\n        sourceName:\n          type: string\n    SourceReadList:\n      type: object\n      required:\n        - sources\n      properties:\n        sources:\n          type: array\n          items:\n            $ref: \"#/components/schemas/SourceRead\"\n    SourceDiscoverSchemaRead:\n      description: Returns the results of a discover catalog job. If the job was not successful, the catalog field will not be present. jobInfo will aways be present and its status be used to determine if the job was successful or not.\n      type: object\n      required:\n        - jobInfo\n      properties:\n        catalog:\n          $ref: \"#/components/schemas/AirbyteCatalog\"\n        jobInfo:\n          $ref: \"#/components/schemas/SynchronousJobRead\"\n        catalogId:\n          type: string\n          format: uuid\n    SourceSearch:\n      type: object\n      properties:\n        sourceDefinitionId:\n          $ref: \"#/components/schemas/SourceDefinitionId\"\n        sourceId:\n          $ref: \"#/components/schemas/SourceId\"\n        workspaceId:\n          $ref: \"#/components/schemas/WorkspaceId\"\n        connectionConfiguration:\n          $ref: \"#/components/schemas/SourceConfiguration\"\n        name:\n          type: string\n        sourceName:\n          type: string\n    # DESTINATION DEFINITION\n    DestinationDefinitionId:\n      type: string\n      format: uuid\n    DestinationAuthSpecification:\n      $ref: \"#/components/schemas/AuthSpecification\"\n    DestinationDefinitionIdRequestBody:\n      type: object\n      required:\n        - destinationDefinitionId\n      properties:\n        destinationDefinitionId:\n          $ref: \"#/components/schemas/DestinationDefinitionId\"\n    DestinationDefinitionCreate:\n      type: object\n      required:\n        - name\n        - dockerRepository\n        - dockerImageTag\n        - documentationUrl\n      properties:\n        name:\n          type: string\n        dockerRepository:\n          type: string\n        dockerImageTag:\n          type: string\n        documentationUrl:\n          type: string\n          format: uri\n        icon:\n          type: string\n        resourceRequirements:\n          $ref: \"#/components/schemas/ActorDefinitionResourceRequirements\"\n    DestinationDefinitionUpdate:\n      type: object\n      required:\n        - destinationDefinitionId\n        - dockerImageag\n      properties:\n        destinationDefinitionId:\n          $ref: \"#/components/schemas/DestinationDefinitionId\"\n        dockerImageTag:\n          type: string\n        resourceRequirements:\n          $ref: \"#/components/schemas/ActorDefinitionResourceRequirements\"\n    DestinationDefinitionRead:\n      type: object\n      required:\n        - destinationDefinitionId\n        - name\n        - dockerRepository\n        - dockerImageTag\n        - documentationUrl\n      properties:\n        destinationDefinitionId:\n          $ref: \"#/components/schemas/DestinationDefinitionId\"\n        name:\n          type: string\n        dockerRepository:\n          type: string\n        dockerImageTag:\n          type: string\n        documentationUrl:\n          type: string\n          format: uri\n        icon:\n          type: string\n        releaseStage:\n          $ref: \"#/components/schemas/ReleaseStage\"\n        releaseDate:\n          description: The date when this connector was first released, in yyyy-mm-dd format.\n          type: string\n          format: date\n        resourceRequirements:\n          $ref: \"#/components/schemas/ActorDefinitionResourceRequirements\"\n    DestinationDefinitionReadList:\n      type: object\n      required:\n        - destinationDefinitions\n      properties:\n        destinationDefinitions:\n          type: array\n          items:\n            $ref: \"#/components/schemas/DestinationDefinitionRead\"\n    CustomDestinationDefinitionCreate:\n      type: object\n      required:\n        - workspaceId\n        - destinationDefinition\n      properties:\n        workspaceId:\n          $ref: \"#/components/schemas/WorkspaceId\"\n        destinationDefinition:\n          $ref: \"#/components/schemas/DestinationDefinitionCreate\"\n    CustomDestinationDefinitionUpdate:\n      type: object\n      required:\n        - workspaceId\n        - destinationDefinition\n      properties:\n        workspaceId:\n          $ref: \"#/components/schemas/WorkspaceId\"\n        destinationDefinition:\n          $ref: \"#/components/schemas/DestinationDefinitionUpdate\"\n    DestinationDefinitionIdWithWorkspaceId:\n      type: object\n      required:\n        - destinationDefinitionId\n        - workspaceId\n      properties:\n        destinationDefinitionId:\n          $ref: \"#/components/schemas/DestinationDefinitionId\"\n        workspaceId:\n          $ref: \"#/components/schemas/WorkspaceId\"\n    PrivateDestinationDefinitionRead:\n      type: object\n      required:\n        - destinationDefinition\n        - granted\n      properties:\n        destinationDefinition:\n          $ref: \"#/components/schemas/DestinationDefinitionRead\"\n        granted:\n          type: boolean\n    PrivateDestinationDefinitionReadList:\n      type: object\n      required:\n        - destinationDefinitions\n      properties:\n        destinationDefinitions:\n          type: array\n          items:\n            $ref: \"#/components/schemas/PrivateDestinationDefinitionRead\"\n    # DESTINATION DEFINITION SPECIFICATION\n    DestinationDefinitionSpecification:\n      description: The specification for what values are required to configure the destinationDefinition.\n      example: { user: { type: string } }\n    DestinationDefinitionSpecificationRead:\n      type: object\n      required:\n        - destinationDefinitionId\n        - jobInfo\n      properties:\n        destinationDefinitionId:\n          $ref: \"#/components/schemas/DestinationDefinitionId\"\n        documentationUrl:\n          type: string\n        connectionSpecification:\n          $ref: \"#/components/schemas/DestinationDefinitionSpecification\"\n        authSpecification:\n          $ref: \"#/components/schemas/DestinationAuthSpecification\"\n        advancedAuth:\n          $ref: \"#/components/schemas/AdvancedAuth\"\n        jobInfo:\n          $ref: \"#/components/schemas/SynchronousJobRead\"\n        supportedDestinationSyncModes:\n          type: array\n          items:\n            $ref: \"#/components/schemas/DestinationSyncMode\"\n        supportsDbt:\n          type: boolean\n        supportsNormalization:\n          type: boolean\n    # DESTINATION\n    DestinationId:\n      type: string\n      format: uuid\n    DestinationIdRequestBody:\n      type: object\n      required:\n        - destinationId\n      properties:\n        destinationId:\n          $ref: \"#/components/schemas/DestinationId\"\n    DestinationConfiguration:\n      description: The values required to configure the destination. The schema for this must match the schema return by destination_definition_specifications/get for the destinationDefinition.\n      example: { user: \"charles\" }\n    DestinationCoreConfig:\n      type: object\n      required:\n        - workspaceId\n        - destinationDefinitionId\n        - connectionConfiguration\n      properties:\n        destinationDefinitionId:\n          $ref: \"#/components/schemas/DestinationDefinitionId\"\n        connectionConfiguration:\n          $ref: \"#/components/schemas/DestinationConfiguration\"\n    DestinationCreate:\n      type: object\n      required:\n        - name\n        - workspaceId\n        - destinationDefinitionId\n        - connectionConfiguration\n      properties:\n        workspaceId:\n          $ref: \"#/components/schemas/WorkspaceId\"\n        name:\n          type: string\n        destinationDefinitionId:\n          $ref: \"#/components/schemas/DestinationDefinitionId\"\n        connectionConfiguration:\n          $ref: \"#/components/schemas/DestinationConfiguration\"\n    DestinationUpdate:\n      type: object\n      required:\n        - destinationId\n        - connectionConfiguration\n        - name\n      properties:\n        destinationId:\n          $ref: \"#/components/schemas/DestinationId\"\n        connectionConfiguration:\n          $ref: \"#/components/schemas/DestinationConfiguration\"\n        name:\n          type: string\n    DestinationRead:\n      type: object\n      required:\n        - destinationDefinitionId\n        - destinationId\n        - workspaceId\n        - connectionConfiguration\n        - name\n        - destinationName\n      properties:\n        destinationDefinitionId:\n          $ref: \"#/components/schemas/DestinationDefinitionId\"\n        destinationId:\n          $ref: \"#/components/schemas/DestinationId\"\n        workspaceId:\n          $ref: \"#/components/schemas/WorkspaceId\"\n        connectionConfiguration:\n          $ref: \"#/components/schemas/DestinationConfiguration\"\n        name:\n          type: string\n        destinationName:\n          type: string\n    DestinationReadList:\n      type: object\n      required:\n        - destinations\n      properties:\n        destinations:\n          type: array\n          items:\n            $ref: \"#/components/schemas/DestinationRead\"\n    DestinationSearch:\n      type: object\n      properties:\n        destinationDefinitionId:\n          $ref: \"#/components/schemas/DestinationDefinitionId\"\n        destinationId:\n          $ref: \"#/components/schemas/DestinationId\"\n        workspaceId:\n          $ref: \"#/components/schemas/WorkspaceId\"\n        connectionConfiguration:\n          $ref: \"#/components/schemas/DestinationConfiguration\"\n        name:\n          type: string\n        destinationName:\n          type: string\n    # SOURCE / DESTINATION RELEASE STAGE ENUM\n    ReleaseStage:\n      type: string\n      enum:\n        - alpha\n        - beta\n        - generally_available\n        - custom\n    # CONNECTION\n    ConnectionId:\n      type: string\n      format: uuid\n    ConnectionIdRequestBody:\n      type: object\n      required:\n        - connectionId\n      properties:\n        connectionId:\n          $ref: \"#/components/schemas/ConnectionId\"\n    DbMigrationRequestBody:\n      type: object\n      required:\n        - database\n      properties:\n        database:\n          type: string\n    WebBackendConnectionRequestBody:\n      type: object\n      required:\n        - connectionId\n      properties:\n        withRefreshedCatalog:\n          type: boolean\n        connectionId:\n          $ref: \"#/components/schemas/ConnectionId\"\n    ConnectionCreate:\n      type: object\n      required:\n        - sourceId\n        - destinationId\n        - status\n      properties:\n        name:\n          type: string\n          description: Optional name of the connection\n        namespaceDefinition:\n          $ref: \"#/components/schemas/NamespaceDefinitionType\"\n        namespaceFormat:\n          type: string\n          description: Used when namespaceDefinition is 'customformat'. If blank then behaves like namespaceDefinition = 'destination'. If \"${SOURCE_NAMESPACE}\" then behaves like namespaceDefinition = 'source'.\n          default: null\n          example: \"${SOURCE_NAMESPACE}\"\n        prefix:\n          type: string\n          description: Prefix that will be prepended to the name of each stream when it is written to the destination.\n        sourceId:\n          $ref: \"#/components/schemas/SourceId\"\n        destinationId:\n          $ref: \"#/components/schemas/DestinationId\"\n        operationIds:\n          type: array\n          items:\n            $ref: \"#/components/schemas/OperationId\"\n        syncCatalog:\n          $ref: \"#/components/schemas/AirbyteCatalog\"\n        schedule:\n          $ref: \"#/components/schemas/ConnectionSchedule\"\n        status:\n          $ref: \"#/components/schemas/ConnectionStatus\"\n        resourceRequirements:\n          $ref: \"#/components/schemas/ResourceRequirements\"\n        sourceCatalogId:\n          type: string\n          format: uuid\n    WebBackendConnectionCreate:\n      type: object\n      required:\n        - connection\n        - sourceId\n        - destinationId\n        - status\n      properties:\n        name:\n          type: string\n          description: Optional name of the connection\n        namespaceDefinition:\n          $ref: \"#/components/schemas/NamespaceDefinitionType\"\n        namespaceFormat:\n          type: string\n          description: Used when namespaceDefinition is 'customformat'. If blank then behaves like namespaceDefinition = 'destination'. If \"${SOURCE_NAMESPACE}\" then behaves like namespaceDefinition = 'source'.\n          default: null\n          example: \"${SOURCE_NAMESPACE}\"\n        prefix:\n          type: string\n          description: Prefix that will be prepended to the name of each stream when it is written to the destination.\n        sourceId:\n          $ref: \"#/components/schemas/SourceId\"\n        destinationId:\n          $ref: \"#/components/schemas/DestinationId\"\n        operationIds:\n          type: array\n          items:\n            $ref: \"#/components/schemas/OperationId\"\n        syncCatalog:\n          $ref: \"#/components/schemas/AirbyteCatalog\"\n        schedule:\n          $ref: \"#/components/schemas/ConnectionSchedule\"\n        status:\n          $ref: \"#/components/schemas/ConnectionStatus\"\n        resourceRequirements:\n          $ref: \"#/components/schemas/ResourceRequirements\"\n        operations:\n          type: array\n          items:\n            $ref: \"#/components/schemas/OperationCreate\"\n        sourceCatalogId:\n          type: string\n          format: uuid\n    ConnectionUpdate:\n      type: object\n      required:\n        - connectionId\n        - syncCatalog\n        - status\n      properties:\n        connectionId:\n          $ref: \"#/components/schemas/ConnectionId\"\n        namespaceDefinition:\n          $ref: \"#/components/schemas/NamespaceDefinitionType\"\n        namespaceFormat:\n          type: string\n          description: Used when namespaceDefinition is 'customformat'. If blank then behaves like namespaceDefinition = 'destination'. If \"${SOURCE_NAMESPACE}\" then behaves like namespaceDefinition = 'source'.\n          default: null\n          example: \"${SOURCE_NAMESPACE}\"\n        name:\n          type: string\n          description: Name that will be set to this connection\n        prefix:\n          type: string\n          description: Prefix that will be prepended to the name of each stream when it is written to the destination.\n        operationIds:\n          type: array\n          items:\n            $ref: \"#/components/schemas/OperationId\"\n        syncCatalog:\n          $ref: \"#/components/schemas/AirbyteCatalog\"\n        schedule:\n          $ref: \"#/components/schemas/ConnectionSchedule\"\n        status:\n          $ref: \"#/components/schemas/ConnectionStatus\"\n        resourceRequirements:\n          $ref: \"#/components/schemas/ResourceRequirements\"\n    WebBackendConnectionUpdate:\n      type: object\n      required:\n        - connectionId\n        - syncCatalog\n        - status\n      properties:\n        name:\n          type: string\n          description: Name that will be set to the connection\n        connectionId:\n          $ref: \"#/components/schemas/ConnectionId\"\n        namespaceDefinition:\n          $ref: \"#/components/schemas/NamespaceDefinitionType\"\n        namespaceFormat:\n          type: string\n          description: Used when namespaceDefinition is 'customformat'. If blank then behaves like namespaceDefinition = 'destination'. If \"${SOURCE_NAMESPACE}\" then behaves like namespaceDefinition = 'source'.\n          default: null\n          example: \"${SOURCE_NAMESPACE}\"\n        prefix:\n          type: string\n          description: Prefix that will be prepended to the name of each stream when it is written to the destination.\n        operationIds:\n          type: array\n          items:\n            $ref: \"#/components/schemas/OperationId\"\n        syncCatalog:\n          $ref: \"#/components/schemas/AirbyteCatalog\"\n        schedule:\n          $ref: \"#/components/schemas/ConnectionSchedule\"\n        status:\n          $ref: \"#/components/schemas/ConnectionStatus\"\n        resourceRequirements:\n          $ref: \"#/components/schemas/ResourceRequirements\"\n        withRefreshedCatalog:\n          type: boolean\n        operations:\n          type: array\n          items:\n            $ref: \"#/components/schemas/WebBackendOperationCreateOrUpdate\"\n    ConnectionRead:\n      type: object\n      required:\n        - connectionId\n        - name\n        - sourceId\n        - destinationId\n        - syncCatalog\n        - status\n      properties:\n        connectionId:\n          $ref: \"#/components/schemas/ConnectionId\"\n        name:\n          type: string\n        namespaceDefinition:\n          $ref: \"#/components/schemas/NamespaceDefinitionType\"\n        namespaceFormat:\n          type: string\n          description: Used when namespaceDefinition is 'customformat'. If blank then behaves like namespaceDefinition = 'destination'. If \"${SOURCE_NAMESPACE}\" then behaves like namespaceDefinition = 'source'.\n          default: null\n          example: \"${SOURCE_NAMESPACE}\"\n        prefix:\n          type: string\n          description: Prefix that will be prepended to the name of each stream when it is written to the destination.\n        sourceId:\n          $ref: \"#/components/schemas/SourceId\"\n        destinationId:\n          $ref: \"#/components/schemas/DestinationId\"\n        operationIds:\n          type: array\n          items:\n            $ref: \"#/components/schemas/OperationId\"\n        syncCatalog:\n          $ref: \"#/components/schemas/AirbyteCatalog\"\n        schedule:\n          $ref: \"#/components/schemas/ConnectionSchedule\"\n        status:\n          $ref: \"#/components/schemas/ConnectionStatus\"\n        resourceRequirements:\n          $ref: \"#/components/schemas/ResourceRequirements\"\n    ConnectionSearch:\n      type: object\n      properties:\n        connectionId:\n          $ref: \"#/components/schemas/ConnectionId\"\n        name:\n          type: string\n        namespaceDefinition:\n          $ref: \"#/components/schemas/NamespaceDefinitionType\"\n        namespaceFormat:\n          type: string\n          description: Used when namespaceDefinition is 'customformat'. If blank then behaves like namespaceDefinition = 'destination'. If \"${SOURCE_NAMESPACE}\" then behaves like namespaceDefinition = 'source'.\n          default: null\n          example: \"${SOURCE_NAMESPACE}\"\n        prefix:\n          type: string\n          description: Prefix that will be prepended to the name of each stream when it is written to the destination.\n        sourceId:\n          $ref: \"#/components/schemas/SourceId\"\n        destinationId:\n          $ref: \"#/components/schemas/DestinationId\"\n        schedule:\n          $ref: \"#/components/schemas/ConnectionSchedule\"\n        status:\n          $ref: \"#/components/schemas/ConnectionStatus\"\n        source:\n          $ref: \"#/components/schemas/SourceSearch\"\n        destination:\n          $ref: \"#/components/schemas/DestinationSearch\"\n    WebBackendConnectionSearch:\n      type: object\n      properties:\n        connectionId:\n          $ref: \"#/components/schemas/ConnectionId\"\n        name:\n          type: string\n        namespaceDefinition:\n          $ref: \"#/components/schemas/NamespaceDefinitionType\"\n        namespaceFormat:\n          type: string\n          description: Used when namespaceDefinition is 'customformat'. If blank then behaves like namespaceDefinition = 'destination'. If \"${SOURCE_NAMESPACE}\" then behaves like namespaceDefinition = 'source'.\n          default: null\n          example: \"${SOURCE_NAMESPACE}\"\n        prefix:\n          type: string\n          description: Prefix that will be prepended to the name of each stream when it is written to the destination.\n        sourceId:\n          $ref: \"#/components/schemas/SourceId\"\n        destinationId:\n          $ref: \"#/components/schemas/DestinationId\"\n        schedule:\n          $ref: \"#/components/schemas/ConnectionSchedule\"\n        status:\n          $ref: \"#/components/schemas/ConnectionStatus\"\n        source:\n          $ref: \"#/components/schemas/SourceSearch\"\n        destination:\n          $ref: \"#/components/schemas/DestinationSearch\"\n    ConnectionReadList:\n      type: object\n      required:\n        - connections\n      properties:\n        connections:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ConnectionRead\"\n    ConnectionStatus:\n      type: string\n      description: Active means that data is flowing through the connection. Inactive means it is not. Deprecated means the connection is off and cannot be re-activated. the schema field describes the elements of the schema that will be synced.\n      enum:\n        - active\n        - inactive\n        - deprecated\n    ConnectionSchedule:\n      description: if null, then no schedule is set.\n      type: object\n      nullable: true\n      required:\n        - units\n        - timeUnit\n      properties:\n        units:\n          type: integer\n          format: int64\n        timeUnit:\n          type: string\n          enum:\n            - minutes\n            - hours\n            - days\n            - weeks\n            - months\n    NamespaceDefinitionType:\n      type: string\n      description: Method used for computing final namespace in destination\n      default: source\n      enum:\n        - source\n        - destination\n        - customformat\n    # Operations\n    OperationId:\n      type: string\n      format: uuid\n    OperationIdRequestBody:\n      type: object\n      required:\n        - operationId\n      properties:\n        operationId:\n          $ref: \"#/components/schemas/OperationId\"\n    OperationCreate:\n      type: object\n      required:\n        - name\n        - operatorConfiguration\n        - workspaceId\n      properties:\n        workspaceId:\n          $ref: \"#/components/schemas/WorkspaceId\"\n        name:\n          type: string\n        operatorConfiguration:\n          $ref: \"#/components/schemas/OperatorConfiguration\"\n    OperationUpdate:\n      type: object\n      required:\n        - operationId\n        - name\n        - operatorConfiguration\n      properties:\n        operationId:\n          $ref: \"#/components/schemas/OperationId\"\n        name:\n          type: string\n        operatorConfiguration:\n          $ref: \"#/components/schemas/OperatorConfiguration\"\n    WebBackendOperationCreateOrUpdate:\n      type: object\n      required:\n        - name\n        - operatorConfiguration\n        - workspaceId\n      properties:\n        operationId:\n          $ref: \"#/components/schemas/OperationId\"\n        workspaceId:\n          $ref: \"#/components/schemas/WorkspaceId\"\n        name:\n          type: string\n        operatorConfiguration:\n          $ref: \"#/components/schemas/OperatorConfiguration\"\n    OperationRead:\n      type: object\n      required:\n        - operationId\n        - name\n        - operatorConfiguration\n        - workspaceId\n      properties:\n        workspaceId:\n          $ref: \"#/components/schemas/WorkspaceId\"\n        operationId:\n          $ref: \"#/components/schemas/OperationId\"\n        name:\n          type: string\n        operatorConfiguration:\n          $ref: \"#/components/schemas/OperatorConfiguration\"\n    OperationReadList:\n      type: object\n      required:\n        - operations\n      properties:\n        operations:\n          type: array\n          items:\n            $ref: \"#/components/schemas/OperationRead\"\n    OperatorConfiguration:\n      type: object\n      required:\n        - operatorType\n      properties:\n        # Instead of this type field, we would prefer a json schema \"oneOf\" but unfortunately,\n        # the jsonschema2pojo does not seem to support it yet: https://github.com/joelittlejohn/jsonschema2pojo/issues/392\n        operatorType:\n          $ref: \"#/components/schemas/OperatorType\"\n        normalization:\n          $ref: \"#/components/schemas/OperatorNormalization\"\n        dbt:\n          $ref: \"#/components/schemas/OperatorDbt\"\n    OperatorType:\n      type: string\n      enum:\n        # - destination\n        - normalization\n        - dbt\n      # - docker\n      # - webhook\n    OperatorNormalization:\n      type: object\n      properties:\n        option:\n          type: string\n          enum:\n            - basic\n            #- unnesting\n    OperatorDbt:\n      type: object\n      required:\n        - gitRepoUrl\n      properties:\n        gitRepoUrl:\n          type: string\n        gitRepoBranch:\n          type: string\n        dockerImage:\n          type: string\n        dbtArguments:\n          type: string\n    CheckOperationRead:\n      type: object\n      required:\n        - status\n      properties:\n        status:\n          type: string\n          enum:\n            - succeeded\n            - failed\n        message:\n          type: string\n    # LOGS\n    LogType:\n      type: string\n      description: type/source of logs produced\n      enum:\n        - server\n        - scheduler\n    LogsRequestBody:\n      type: object\n      required:\n        - logType\n      properties:\n        logType:\n          $ref: \"#/components/schemas/LogType\"\n    # SCHEMA CATALOG\n    AirbyteCatalog:\n      description: describes the available schema (catalog).\n      type: object\n      required:\n        - streams\n      properties:\n        streams:\n          type: array\n          items:\n            $ref: \"#/components/schemas/AirbyteStreamAndConfiguration\"\n    AirbyteStreamAndConfiguration:\n      description: each stream is split in two parts; the immutable schema from source and mutable configuration for destination\n      type: object\n      additionalProperties: false\n      properties:\n        stream:\n          $ref: \"#/components/schemas/AirbyteStream\"\n        config:\n          $ref: \"#/components/schemas/AirbyteStreamConfiguration\"\n    AirbyteStream:\n      description: the immutable schema defined by the source\n      type: object\n      additionalProperties: false\n      required:\n        - name\n        - json_schema\n        # todo (cgardens) - make required once sources are migrated\n        # - supported_sync_modes\n      properties:\n        name:\n          type: string\n          description: Stream's name.\n        jsonSchema:\n          description: Stream schema using Json Schema specs.\n          $ref: \"#/components/schemas/StreamJsonSchema\"\n        supportedSyncModes:\n          type: array\n          items:\n            $ref: \"#/components/schemas/SyncMode\"\n        sourceDefinedCursor:\n          description: If the source defines the cursor field, then any other cursor field inputs will be ignored. If it does not, either the user_provided one is used, or the default one is used as a backup.\n          type: boolean\n        defaultCursorField:\n          description: Path to the field that will be used to determine if a record is new or modified since the last sync. If not provided by the source, the end user will have to specify the comparable themselves.\n          type: array\n          items:\n            type: string\n        sourceDefinedPrimaryKey:\n          description: If the source defines the primary key, paths to the fields that will be used as a primary key. If not provided by the source, the end user will have to specify the primary key themselves.\n          type: array\n          items:\n            type: array\n            items:\n              type: string\n        namespace:\n          type: string\n          description: Optional Source-defined namespace. Airbyte streams from the same sources should have the same namespace. Currently only used by JDBC destinations to determine what schema to write to.\n    StreamJsonSchema:\n      type: object\n    AirbyteStreamConfiguration:\n      description: the mutable part of the stream to configure the destination\n      type: object\n      additionalProperties: false\n      required:\n        - syncMode\n        - destinationSyncMode\n      properties:\n        syncMode:\n          $ref: \"#/components/schemas/SyncMode\"\n        cursorField:\n          description: Path to the field that will be used to determine if a record is new or modified since the last sync. This field is REQUIRED if `sync_mode` is `incremental`. Otherwise it is ignored.\n          type: array\n          items:\n            type: string\n        destinationSyncMode:\n          $ref: \"#/components/schemas/DestinationSyncMode\"\n        primaryKey:\n          description: Paths to the fields that will be used as primary key. This field is REQUIRED if `destination_sync_mode` is `*_dedup`. Otherwise it is ignored.\n          type: array\n          items:\n            type: array\n            items:\n              type: string\n        aliasName:\n          description: Alias name to the stream to be used in the destination\n          type: string\n        selected:\n          type: boolean\n    DataType:\n      type: string\n      enum:\n        - string\n        - number\n        - boolean\n        - object\n        - array\n    # SCHEDULER\n    JobId:\n      type: integer\n      format: int64\n    JobConfigType:\n      type: string\n      enum:\n        - check_connection_source\n        - check_connection_destination\n        - discover_schema\n        - get_spec\n        - sync\n        - reset_connection\n    JobListRequestBody:\n      type: object\n      required:\n        - configTypes\n        - configId\n      properties:\n        configTypes:\n          type: array\n          items:\n            $ref: \"#/components/schemas/JobConfigType\"\n        configId:\n          type: string\n        pagination:\n          type: object\n          $ref: \"#/components/schemas/Pagination\"\n    JobIdRequestBody:\n      type: object\n      required:\n        - id\n      properties:\n        id:\n          $ref: \"#/components/schemas/JobId\"\n    JobRead:\n      type: object\n      required:\n        - id\n        - configType\n        - configId\n        - createdAt\n        - updatedAt\n        - status\n      properties:\n        id:\n          $ref: \"#/components/schemas/JobId\"\n        configType:\n          $ref: \"#/components/schemas/JobConfigType\"\n        configId:\n          type: string\n        createdAt:\n          type: integer\n          format: int64\n        updatedAt:\n          type: integer\n          format: int64\n        status:\n          $ref: \"#/components/schemas/JobStatus\"\n    JobDebugRead:\n      type: object\n      required:\n        - id\n        - configType\n        - configId\n        - status\n        - airbyteVersion\n        - sourceDefinition\n        - destinationDefinition\n      properties:\n        id:\n          $ref: \"#/components/schemas/JobId\"\n        configType:\n          $ref: \"#/components/schemas/JobConfigType\"\n        configId:\n          type: string\n        status:\n          $ref: \"#/components/schemas/JobStatus\"\n        airbyteVersion:\n          type: string\n        sourceDefinition:\n          $ref: \"#/components/schemas/SourceDefinitionRead\"\n        destinationDefinition:\n          $ref: \"#/components/schemas/DestinationDefinitionRead\"\n    JobWithAttemptsRead:\n      type: object\n      properties:\n        job:\n          $ref: \"#/components/schemas/JobRead\"\n        attempts:\n          type: array\n          items:\n            $ref: \"#/components/schemas/AttemptRead\"\n    JobStatus:\n      type: string\n      enum:\n        - pending\n        - running\n        - incomplete\n        - failed\n        - succeeded\n        - cancelled\n    AttemptRead:\n      type: object\n      required:\n        - id\n        - status\n        - createdAt\n        - updatedAt\n      properties:\n        id:\n          type: integer\n          format: int64\n        status:\n          $ref: \"#/components/schemas/AttemptStatus\"\n        createdAt:\n          type: integer\n          format: int64\n        updatedAt:\n          type: integer\n          format: int64\n        endedAt:\n          type: integer\n          format: int64\n        bytesSynced:\n          type: integer\n          format: int64\n        recordsSynced:\n          type: integer\n          format: int64\n        totalStats:\n          $ref: \"#/components/schemas/AttemptStats\"\n        streamStats:\n          type: array\n          items:\n            $ref: \"#/components/schemas/AttemptStreamStats\"\n        failureSummary:\n          $ref: \"#/components/schemas/AttemptFailureSummary\"\n    AttemptStats:\n      type: object\n      properties:\n        recordsEmitted:\n          type: integer\n          format: int64\n        bytesEmitted:\n          type: integer\n          format: int64\n        stateMessagesEmitted:\n          type: integer\n          format: int64\n        recordsCommitted:\n          type: integer\n          format: int64\n    AttemptStreamStats:\n      type: object\n      required:\n        - streamName\n        - stats\n      properties:\n        streamName:\n          type: string\n        stats:\n          $ref: \"#/components/schemas/AttemptStats\"\n    AttemptFailureSummary:\n      type: object\n      required:\n        - failures\n      properties:\n        failures:\n          type: array\n          items:\n            $ref: \"#/components/schemas/AttemptFailureReason\"\n        partialSuccess:\n          description: True if the number of committed records for this attempt was greater than 0. False if 0 records were committed. If not set, the number of committed records is unknown.\n          type: boolean\n    AttemptFailureReason:\n      type: object\n      required:\n        - timestamp\n      properties:\n        failureOrigin:\n          $ref: \"#/components/schemas/AttemptFailureOrigin\"\n        failureType:\n          $ref: \"#/components/schemas/AttemptFailureType\"\n        externalMessage:\n          type: string\n        stacktrace:\n          type: string\n        retryable:\n          description: True if it is known that retrying may succeed, e.g. for a transient failure. False if it is known that a retry will not succeed, e.g. for a configuration issue. If not set, retryable status is not well known.\n          type: boolean\n        timestamp:\n          type: integer\n          format: int64\n    AttemptFailureOrigin:\n      description: Indicates where the error originated. If not set, the origin of error is not well known.\n      type: string\n      enum:\n        - source\n        - destination\n        - replication\n        - persistence\n        - normalization\n        - dbt\n    AttemptFailureType:\n      description: Categorizes well known errors into types for programmatic handling. If not set, the type of error is not well known.\n      type: string\n      enum:\n        - config_error\n        - system_error\n        - manual_cancellation\n    AttemptStatus:\n      type: string\n      enum:\n        - running\n        - failed\n        - succeeded\n    JobReadList:\n      type: object\n      required:\n        - jobs\n      properties:\n        jobs:\n          type: array\n          items:\n            $ref: \"#/components/schemas/JobWithAttemptsRead\"\n    JobInfoRead:\n      type: object\n      required:\n        - job\n        - attempts\n      properties:\n        job:\n          $ref: \"#/components/schemas/JobRead\"\n        attempts:\n          type: array\n          items:\n            $ref: \"#/components/schemas/AttemptInfoRead\"\n    JobDebugInfoRead:\n      type: object\n      required:\n        - job\n        - attempts\n      properties:\n        job:\n          $ref: \"#/components/schemas/JobDebugRead\"\n        attempts:\n          type: array\n          items:\n            $ref: \"#/components/schemas/AttemptInfoRead\"\n    AttemptInfoRead:\n      type: object\n      required:\n        - attempt\n        - logs\n      properties:\n        attempt:\n          $ref: \"#/components/schemas/AttemptRead\"\n        logs:\n          $ref: \"#/components/schemas/LogRead\"\n    LogRead:\n      type: object\n      required:\n        - logLines\n      properties:\n        logLines:\n          type: array\n          items:\n            type: string\n    SynchronousJobRead:\n      type: object\n      required:\n        - id\n        - configType\n        - createdAt\n        - endedAt\n        - succeeded\n      properties:\n        id:\n          type: string\n          format: uuid\n        configType:\n          $ref: \"#/components/schemas/JobConfigType\"\n        configId:\n          description: only present if a config id was provided.\n          type: string\n        createdAt:\n          type: integer\n          format: int64\n        endedAt:\n          type: integer\n          format: int64\n        succeeded:\n          type: boolean\n        logs:\n          $ref: \"#/components/schemas/LogRead\"\n    Pagination:\n      type: object\n      properties:\n        pageSize:\n          type: integer\n        rowOffset:\n          type: integer\n    # Health\n    HealthCheckRead:\n      type: object\n      required:\n        - available\n      properties:\n        available:\n          type: boolean\n    # General\n    CheckConnectionRead:\n      type: object\n      required:\n        - status\n        - jobInfo\n      properties:\n        status:\n          type: string\n          enum:\n            - succeeded\n            - failed\n        message:\n          type: string\n        jobInfo:\n          $ref: \"#/components/schemas/SynchronousJobRead\"\n    ConnectionState:\n      type: object\n      required:\n        - connectionId\n      properties:\n        connectionId:\n          $ref: \"#/components/schemas/ConnectionId\"\n        state:\n          $ref: \"#/components/schemas/ConnectionStateObject\"\n    ConnectionStateObject:\n      type: object\n    ActorDefinitionResourceRequirements:\n      description: actor definition specific resource requirements. if default is set, these are the requirements that should be set for ALL jobs run for this actor definition. it is overriden by the job type specific configurations. if not set, the platform will use defaults. these values will be overriden by configuration at the connection level.\n      type: object\n      additionalProperties: false\n      properties:\n        default:\n          \"$ref\": \"#/components/schemas/ResourceRequirements\"\n        jobSpecific:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/JobTypeResourceLimit\"\n    JobTypeResourceLimit:\n      description: sets resource requirements for a specific job type for an actor definition. these values override the default, if both are set.\n      type: object\n      additionalProperties: false\n      required:\n        - jobType\n        - resourceRequirements\n      properties:\n        jobType:\n          \"$ref\": \"#/components/schemas/JobType\"\n        resourceRequirements:\n          \"$ref\": \"#/components/schemas/ResourceRequirements\"\n    JobType:\n      description: enum that describes the different types of jobs that the platform runs.\n      type: string\n      enum:\n        - get_spec\n        - check_connection\n        - discover_schema\n        - sync\n        - reset_connection\n        - connection_updater\n        - replicate\n    ResourceRequirements:\n      description: optional resource requirements to run workers (blank for unbounded allocations)\n      type: object\n      properties:\n        cpu_request:\n          type: string\n        cpu_limit:\n          type: string\n        memory_request:\n          type: string\n        memory_limit:\n          type: string\n    # DB Migration\n    DbMigrationState:\n      type: string\n      # https://github.com/flyway/flyway/blob/master/flyway-core/src/main/java/org/flywaydb/core/api/MigrationState.java\n      enum:\n        - pending\n        - above_target\n        - below_baseline\n        - baseline\n        - ignored\n        - missing_success\n        - missing_failed\n        - success\n        - undone\n        - available\n        - failed\n        - out_of_order\n        - future_success\n        - future_failed\n        - outdated\n        - superseded\n        - deleted\n    DbMigrationRead:\n      type: object\n      required:\n        - migrationType\n        - migrationVersion\n        - migrationDescription\n      properties:\n        migrationType:\n          type: string\n        migrationVersion:\n          type: string\n        migrationDescription:\n          type: string\n        migrationState:\n          $ref: \"#/components/schemas/DbMigrationState\"\n        migratedBy:\n          type: string\n        migratedAt:\n          type: integer\n          format: int64\n        migrationScript:\n          type: string\n    DbMigrationReadList:\n      type: object\n      properties:\n        migrations:\n          type: array\n          items:\n            $ref: \"#/components/schemas/DbMigrationRead\"\n    DbMigrationExecutionRead:\n      type: object\n      properties:\n        initialVersion:\n          type: string\n        targetVersion:\n          type: string\n        executedMigrations:\n          type: array\n          items:\n            $ref: \"#/components/schemas/DbMigrationRead\"\n    # OAuth\n    OAuthConfiguration:\n      description: OAuth specific blob.\n    OAuthInputConfiguration:\n      description: The values required to configure OAuth flows.\n        The schema for this must match the `OAuthConfigSpecification.oauthUserInputFromConnectorConfigSpecification` schema.\n      $ref: \"#/components/schemas/OAuthConfiguration\"\n    AdvancedAuth:\n      type: object\n      properties:\n        authFlowType:\n          type: string\n          enum: [\"oauth2.0\", \"oauth1.0\"]\n        predicateKey:\n          description: Json Path to a field in the connectorSpecification that should exist for the advanced auth to be applicable.\n          type: array\n          items:\n            type: string\n        predicateValue:\n          description: Value of the predicate_key fields for the advanced auth to be applicable.\n          type: string\n        oauthConfigSpecification:\n          \"$ref\": \"#/components/schemas/OAuthConfigSpecification\"\n    OAuthConfigSpecification:\n      type: object\n      properties:\n        oauthUserInputFromConnectorConfigSpecification:\n          description: |-\n            OAuth specific blob. This is a Json Schema used to validate Json configurations used as input to OAuth.\n            Must be a valid non-nested JSON that refers to properties from ConnectorSpecification.connectionSpecification\n            using special annotation 'path_in_connector_config'.\n            These are input values the user is entering through the UI to authenticate to the connector, that might also shared\n            as inputs for syncing data via the connector.\n\n            Examples:\n\n            if no connector values is shared during oauth flow, oauth_user_input_from_connector_config_specification=[]\n            if connector values such as 'app_id' inside the top level are used to generate the API url for the oauth flow,\n              oauth_user_input_from_connector_config_specification={\n                app_id: {\n                  type: string\n                  path_in_connector_config: ['app_id']\n                }\n              }\n            if connector values such as 'info.app_id' nested inside another object are used to generate the API url for the oauth flow,\n              oauth_user_input_from_connector_config_specification={\n                app_id: {\n                  type: string\n                  path_in_connector_config: ['info', 'app_id']\n                }\n              }\n          $ref: \"#/components/schemas/OAuthConfiguration\"\n        completeOAuthOutputSpecification:\n          description: |-\n            OAuth specific blob. This is a Json Schema used to validate Json configurations produced by the OAuth flows as they are\n            returned by the distant OAuth APIs.\n            Must be a valid JSON describing the fields to merge back to `ConnectorSpecification.connectionSpecification`.\n            For each field, a special annotation `path_in_connector_config` can be specified to determine where to merge it,\n\n            Examples:\n\n                complete_oauth_output_specification={\n                  refresh_token: {\n                    type: string,\n                    path_in_connector_config: ['credentials', 'refresh_token']\n                  }\n                }\n          $ref: \"#/components/schemas/OAuthConfiguration\"\n        completeOAuthServerInputSpecification:\n          description: |-\n            OAuth specific blob. This is a Json Schema used to validate Json configurations persisted as Airbyte Server configurations.\n            Must be a valid non-nested JSON describing additional fields configured by the Airbyte Instance or Workspace Admins to be used by the\n            server when completing an OAuth flow (typically exchanging an auth code for refresh token).\n\n            Examples:\n\n                complete_oauth_server_input_specification={\n                  client_id: {\n                    type: string\n                  },\n                  client_secret: {\n                    type: string\n                  }\n                }\n          $ref: \"#/components/schemas/OAuthConfiguration\"\n        completeOAuthServerOutputSpecification:\n          description: |-\n            OAuth specific blob. This is a Json Schema used to validate Json configurations persisted as Airbyte Server configurations that\n            also need to be merged back into the connector configuration at runtime.\n            This is a subset configuration of `complete_oauth_server_input_specification` that filters fields out to retain only the ones that\n            are necessary for the connector to function with OAuth. (some fields could be used during oauth flows but not needed afterwards, therefore\n            they would be listed in the `complete_oauth_server_input_specification` but not `complete_oauth_server_output_specification`)\n            Must be a valid non-nested JSON describing additional fields configured by the Airbyte Instance or Workspace Admins to be used by the\n            connector when using OAuth flow APIs.\n            These fields are to be merged back to `ConnectorSpecification.connectionSpecification`.\n            For each field, a special annotation `path_in_connector_config` can be specified to determine where to merge it,\n\n            Examples:\n\n                  complete_oauth_server_output_specification={\n                    client_id: {\n                      type: string,\n                      path_in_connector_config: ['credentials', 'client_id']\n                    },\n                    client_secret: {\n                      type: string,\n                      path_in_connector_config: ['credentials', 'client_secret']\n                    }\n                  }\n          $ref: \"#/components/schemas/OAuthConfiguration\"\n    SourceOauthConsentRequest:\n      type: object\n      required:\n        - sourceDefinitionId\n        - workspaceId\n        - redirectUrl\n      properties:\n        sourceDefinitionId:\n          $ref: \"#/components/schemas/SourceDefinitionId\"\n        workspaceId:\n          $ref: \"#/components/schemas/WorkspaceId\"\n        redirectUrl:\n          description: The url to redirect to after getting the user consent\n          type: string\n        oAuthInputConfiguration:\n          $ref: \"#/components/schemas/OAuthInputConfiguration\"\n    DestinationOauthConsentRequest:\n      type: object\n      required:\n        - destinationDefinitionId\n        - workspaceId\n        - redirectUrl\n      properties:\n        destinationDefinitionId:\n          $ref: \"#/components/schemas/DestinationDefinitionId\"\n        workspaceId:\n          $ref: \"#/components/schemas/WorkspaceId\"\n        redirectUrl:\n          description: The url to redirect to after getting the user consent\n          type: string\n        oAuthInputConfiguration:\n          $ref: \"#/components/schemas/OAuthInputConfiguration\"\n    OAuthConsentRead:\n      type: object\n      required:\n        - consentUrl\n      properties:\n        consentUrl:\n          type: string\n    CompleteSourceOauthRequest:\n      type: object\n      required:\n        - sourceDefinitionId\n        - workspaceId\n      properties:\n        sourceDefinitionId:\n          $ref: \"#/components/schemas/SourceDefinitionId\"\n        workspaceId:\n          $ref: \"#/components/schemas/WorkspaceId\"\n        redirectUrl:\n          description: When completing OAuth flow to gain an access token, some API sometimes requires to verify that the app re-send the redirectUrl that was used when consent was given.\n          type: string\n        queryParams:\n          description: The query parameters present in the redirect URL after a user granted consent e.g auth code\n          type: object\n          additionalProperties: true # Oauth parameters like code, state, etc.. will be different per API so we don't specify them in advance\n        oAuthInputConfiguration:\n          $ref: \"#/components/schemas/OAuthInputConfiguration\"\n    CompleteDestinationOAuthRequest:\n      type: object\n      required:\n        - destinationDefinitionId\n        - workspaceId\n      properties:\n        destinationDefinitionId:\n          $ref: \"#/components/schemas/DestinationDefinitionId\"\n        workspaceId:\n          $ref: \"#/components/schemas/WorkspaceId\"\n        redirectUrl:\n          description: When completing OAuth flow to gain an access token, some API sometimes requires to verify that the app re-send the redirectUrl that was used when consent was given.\n          type: string\n        queryParams:\n          description: The query parameters present in the redirect URL after a user granted consent e.g auth code\n          type: object\n          additionalProperties: true # Oauth parameters like code, state, etc.. will be different per API so we don't specify them in advance\n        oAuthInputConfiguration:\n          $ref: \"#/components/schemas/OAuthInputConfiguration\"\n    CompleteOAuthResponse:\n      type: object\n      additionalProperties: true # Oauth parameters like refresh/access token etc.. will be different per API so we don't specify them in advance\n    SetInstancewideSourceOauthParamsRequestBody:\n      type: object\n      required:\n        - sourceDefinitionId\n        - params\n      properties:\n        sourceDefinitionId:\n          $ref: \"#/components/schemas/SourceDefinitionId\"\n        params:\n          type: object\n          additionalProperties: true\n    SetInstancewideDestinationOauthParamsRequestBody:\n      type: object\n      required:\n        - destinationDefinitionId\n        - params\n      properties:\n        destinationDefinitionId:\n          $ref: \"#/components/schemas/DestinationDefinitionId\"\n        params:\n          type: object\n          additionalProperties: true\n    # Web Backend\n    WebBackendConnectionRead:\n      type: object\n      required:\n        - connectionId\n        - name\n        - sourceId\n        - destinationId\n        - syncCatalog\n        - status\n        - source\n        - destination\n        - isSyncing\n      properties:\n        connectionId:\n          $ref: \"#/components/schemas/ConnectionId\"\n        name:\n          type: string\n        namespaceDefinition:\n          $ref: \"#/components/schemas/NamespaceDefinitionType\"\n        namespaceFormat:\n          type: string\n          description: Used when namespaceDefinition is 'customformat'. If blank then behaves like namespaceDefinition = 'destination'. If \"${SOURCE_NAMESPACE}\" then behaves like namespaceDefinition = 'source'.\n          default: null\n          example: \"${SOURCE_NAMESPACE}\"\n        prefix:\n          type: string\n          description: Prefix that will be prepended to the name of each stream when it is written to the destination.\n        sourceId:\n          $ref: \"#/components/schemas/SourceId\"\n        destinationId:\n          $ref: \"#/components/schemas/DestinationId\"\n        syncCatalog:\n          $ref: \"#/components/schemas/AirbyteCatalog\"\n        schedule:\n          $ref: \"#/components/schemas/ConnectionSchedule\"\n        status:\n          $ref: \"#/components/schemas/ConnectionStatus\"\n        operationIds:\n          type: array\n          items:\n            $ref: \"#/components/schemas/OperationId\"\n        source:\n          $ref: \"#/components/schemas/SourceRead\"\n        destination:\n          $ref: \"#/components/schemas/DestinationRead\"\n        operations:\n          type: array\n          items:\n            $ref: \"#/components/schemas/OperationRead\"\n        latestSyncJobCreatedAt:\n          description: epoch time of the latest sync job. null if no sync job has taken place.\n          type: integer\n          format: int64\n        latestSyncJobStatus:\n          $ref: \"#/components/schemas/JobStatus\"\n        isSyncing:\n          type: boolean\n        resourceRequirements:\n          $ref: \"#/components/schemas/ResourceRequirements\"\n    WebBackendConnectionReadList:\n      type: object\n      required:\n        - connections\n      properties:\n        connections:\n          type: array\n          items:\n            $ref: \"#/components/schemas/WebBackendConnectionRead\"\n    SyncMode:\n      type: string\n      enum:\n        - full_refresh\n        - incremental\n    DestinationSyncMode:\n      type: string\n      enum:\n        - append\n        - overwrite\n        #- upsert_dedup # TODO chris: SCD Type 1 can be implemented later\n        - append_dedup # SCD Type 1 \u0026 2\n    AirbyteArchive:\n      type: string\n      format: binary\n      description: Tarball Archive (.tar.gz) of Airbyte Configuration and Database\n    ImportRead:\n      type: object\n      required:\n        - status\n      properties:\n        status:\n          type: string\n          enum:\n            - succeeded\n            - failed\n        reason:\n          type: string\n    ResourceId:\n      type: string\n      format: uuid\n    UploadRead:\n      type: object\n      required:\n        - status\n      properties:\n        status:\n          type: string\n          enum:\n            - succeeded\n            - failed\n        resourceId:\n          $ref: \"#/components/schemas/ResourceId\"\n    ImportRequestBody:\n      type: object\n      required:\n        - resourceId\n        - workspaceId\n      properties:\n        resourceId:\n          $ref: \"#/components/schemas/ResourceId\"\n        workspaceId:\n          $ref: \"#/components/schemas/WorkspaceId\"\n    InvalidInputProperty:\n      type: object\n      required:\n        - propertyPath\n      properties:\n        propertyPath:\n          type: string\n        invalidValue:\n          type: string\n        message:\n          type: string\n    NotFoundKnownExceptionInfo:\n      type: object\n      required:\n        - message\n      properties:\n        id:\n          type: string\n        message:\n          type: string\n        exceptionClassName:\n          type: string\n        exceptionStack:\n          type: array\n          items:\n            type: string\n        rootCauseExceptionClassName:\n          type: string\n        rootCauseExceptionStack:\n          type: array\n          items:\n            type: string\n    KnownExceptionInfo:\n      type: object\n      required:\n        - message\n      properties:\n        message:\n          type: string\n        exceptionClassName:\n          type: string\n        exceptionStack:\n          type: array\n          items:\n            type: string\n        rootCauseExceptionClassName:\n          type: string\n        rootCauseExceptionStack:\n          type: array\n          items:\n            type: string\n    InvalidInputExceptionInfo:\n      type: object\n      required:\n        - message\n        - validationErrors\n      properties:\n        message:\n          type: string\n        exceptionClassName:\n          type: string\n        exceptionStack:\n          type: array\n          items:\n            type: string\n        validationErrors:\n          type: array\n          items:\n            $ref: \"#/components/schemas/InvalidInputProperty\"\n\n  responses:\n    NotFoundResponse:\n      description: Object with given id was not found.\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/NotFoundKnownExceptionInfo\"\n    InvalidInputResponse:\n      description: Input failed validation\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/InvalidInputExceptionInfo\"\n    ExceptionResponse:\n      description: Exception occurred; see message for details.\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/KnownExceptionInfo\"\nsecurity:\n  - {}\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"WebBackendConnectionCreate\": parse schema: property \"namespaceFormat\": unexpected default \"null\" value"
}