{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/broadinstitute/reasoner"
		},
		"file": {
			"name": "TranslatorReasonersAPI.yaml",
			"size": 0,
			"path": "server/TranslatorReasonersAPI.yaml",
			"byteSize": 25036,
			"content": "openapi: 3.0.1\ninfo:\n  description: OpenAPI for indigo NCATS Biomedical Translator Reasoner\n  version: 0.9.1.2\n  x-reasoner_standard_version: 0.9.1\n  title: OpenAPI for indigo NCATS Biomedical Translator Reasoner\n  contact:\n    name: Broad NCATS translator\n    email: translator@broadinstitute.org\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\n  termsOfService: \"{{url}}\"\nexternalDocs:\n  description: Documentation for the NCATS Biomedical Translator Reasoners web services\n  url: 'https://github.com/NCATS-Tangerine/NCATS-ReasonerStdAPI'\nservers:\n  - url: 'https://indigo.ncats.io/reasoner/api/v1/'\ntags:\n  - name: query\n    description: Query reasoner using a predefined question type\n  - name: predicates\n    description: Get all supported relationships in the knowledge graph, organized by source and target\n  - name: translator\n  - name: reasoner\npaths:\n  /query:\n    post:\n      tags:\n        - query\n      summary: Query reasoner via one of several inputs\n      description: ''\n      operationId: query\n      requestBody:\n        description: Query information to be submitted\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Query'\n            example: \n              query_message:\n                query_graph:\n                  edges:\n                    - edge_id: e00\n                      source_id: n00\n                      target_id: n01\n                      type: targets\n                  nodes:\n                    - node_id: n00\n                      curie: CHEMBL:CHEMBL521\n                      type: chemical_substance\n                    - node_id: n01\n                      type: protein\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Message'\n        '400':\n          description: Invalid status value\n      x-swagger-router-controller: swagger_server.controllers.query_controller\n  /predicates:\n    get:\n      tags:\n      - predicates\n      summary: \"summary\"\n      description: \"description\"\n      responses:\n        200:\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n                  additionalProperties:\n                    type: array\n                    items:\n                      type: string\ncomponents:\n  schemas:\n    Query:\n      x-body-name: request_body\n      type: object\n      properties:\n        bypass_cache:\n          type: string\n          example: 'true'\n          description: \u003e-\n            Set to true in order to bypass any possible cached message and try to\n            answer the query over again\n        asynchronous:\n          type: string\n          example: 'false'\n          description: \u003e-\n            Set to true in order to receive an incomplete message_id if the query\n            will take a while. Client can then periodically request that\n            message_id for a status update and eventual complete message\n        max_results:\n          type: integer\n          example: 100\n          description: Maximum number of individual results to return\n        page_size:\n          type: integer\n          example: 20\n          description: Split the results into pages with this number of results each\n        page_number:\n          type: integer\n          example: 1\n          description: \u003e-\n            Page number of results when the number of results exceeds the\n            page_size\n        reasoner_ids:\n          type: array\n          example:\n            - RTX\n            - Robokop\n          description: List of reasoners to consult for the query\n          items:\n            type: string\n        query_message:\n          type: object\n          description: Message object that represents the query to be answered\n          items:\n            $ref: '#/components/schemas/Message'\n        previous_message_processing_plan:\n          type: object\n          description: \u003e-\n            Container for one or more Message objects or identifiers for one or\n            more Messages along with a processing plan for how those messages\n            should be processed and returned\n          items:\n            $ref: '#/components/schemas/PreviousMessageProcessingPlan'\n      additionalProperties: true\n    PreviousMessageProcessingPlan:\n      type: object\n      properties:\n        previous_message_uris:\n          type: array\n          example:\n            - 'https://rtx.ncats.io/api/rtx/v1/message/300'\n          description: List of URIs for Message objects to fetch and process\n          items:\n            type: string\n        previous_messages:\n          type: array\n          description: List of Message objects to process\n          items:\n            $ref: '#/components/schemas/Message'\n        processing_actions:\n          type: array\n          example:\n            - mod45filter\n            - redirect2RTX\n          description: \u003e-\n            List of order-dependent actions to guide what happens with the Message\n            object(s)\n          items:\n            type: string\n        options:\n          type: object\n          example:\n            topNMostFrequent: 1\n          description: \u003e-\n            Dict of options that apply during processing in an order independent\n            fashion\n          additionalProperties: true\n      additionalProperties: true\n    Message:\n      type: object\n      properties:\n        context:\n          type: string\n          example: 'https://rtx.ncats.io/ns/translator.jsonld'\n          description: JSON-LD context URI\n        type:\n          type: string\n          example: translator_reasoner_message\n          description: Entity type of this message\n        id:\n          type: string\n          example: 'https://rtx.ncats.io/api/rtx/v1/message/123'\n          description: URI for this message\n        reasoner_id:\n          type: string\n          example: reasoner\n          description: \u003e-\n            Identifier string of the reasoner that provided this message (one of\n            RTX, Robokop, Indigo, Integrator, etc.)\n        tool_version:\n          type: string\n          example: RTX 0.5.0\n          description: Version label of the tool that generated this message\n        schema_version:\n          type: string\n          example: 0.9.0\n          description: Version label of this JSON-LD schema\n        datetime:\n          type: string\n          example: '2018-01-09 12:34:45'\n          description: Datetime string for the time that this message was generated\n        n_results:\n          type: integer\n          example: 42\n          description: \u003e-\n            Total number of results from the query (which may be less than what is\n            returned if limits were placed on the number of results to return)\n        message_code:\n          type: string\n          example: OK\n          description: \u003e-\n            Set to OK for success, or some other short string to indicate and\n            error (e.g., KGUnavailable, TermNotFound, etc.)\n        code_description:\n          type: string\n          example: 9 results found\n          description: \u003e-\n            Extended description denoting the success or mode of failure in the\n            generation of the message\n        table_column_names:\n          type: array\n          example:\n            - chemical_substance.name\n            - chemical_substance.id\n          description: List of column names that corresponds to the row_data for each result\n          items:\n            type: string\n        original_question:\n          type: string\n          example: what proteins are affected by sickle cell anemia\n          description: The original question text typed in by the user\n        restated_question:\n          type: string\n          example: Which proteins are affected by sickle cell anemia?\n          description: \u003e-\n            A precise restatement of the question, as understood by the\n            Translator, for which the answer applies. The user should verify that\n            the restated question matches the intent of their original question\n            (it might not).\n        query_type_id:\n          type: string\n          example: Q2\n          description: \u003e-\n            The query type id if one is known for the query/message (as defined in\n            https://docs.google.com/spreadsheets/d/18zW81wteUfOn3rFRVG0z8mW-ecNhdsfD_6s73ETJnUw/edit#gid=1742835901\n            )\n        terms:\n          type: object\n          description: Dict of terms needed by the specific query type\n          properties:\n            disease:\n              type: string\n              example: malaria\n            protein:\n              type: string\n              example: P12345\n            anatomical_entity:\n              type: string\n              example: liver\n            chemical_substance:\n              type: string\n              example: ibuprofen\n            metabolite:\n              type: string\n              example: ibuprofen\n            symptom:\n              type: string\n              example: UMLS:C0000737\n            drug:\n              type: string\n              example: ibuprofen\n            pathway:\n              type: string\n              example: GO:0004888\n            gene:\n              type: string\n              example: HGNC:3535\n            cell:\n              type: string\n              example: CL:0000738\n          additionalProperties: true\n        query_options:\n          type: object\n          example: \n            coalesce: true\n            threshold: 0.9\n          description: \u003e-\n            Dict of options that can be sent with the query. Options are tool\n            specific and not stipulated here\n        results:\n          description: List of all returned potential answers for the query posed\n          type: array\n          items:\n            $ref: '#/components/schemas/Result'\n        query_graph:\n          type: object\n          description: \u003e-\n            QueryGraph object that contains a serialization of a query in the form\n            of a graph\n          $ref: '#/components/schemas/QueryGraph'\n        knowledge_graph:\n          type: object\n          description: \u003e-\n            KnowledgeGraph object that contains all the nodes and edges referenced\n            in any of the possible answers to the query OR connection information\n            for a remote knowledge graph\n          oneOf:\n            - $ref: '#/components/schemas/KnowledgeGraph'\n            - $ref: '#/components/schemas/RemoteKnowledgeGraph'\n      additionalProperties: true\n    Result:\n      type: object\n      description: One of potentially several results or answers for a query\n      properties:\n        id:\n          type: string\n          example: 'https://rtx.ncats.io/api/rtx/v1/result/234'\n          description: URI for this message\n        description:\n          type: string\n          example: \u003e-\n            The genetic condition sickle cell anemia may provide protection from\n            cerebral malaria via genetic alterations of proteins HBB (P68871) and\n            HMOX1 (P09601).\n          description: A free text description of this result answer from the reasoner\n        essence:\n          type: string\n          example: ibuprofen\n          description: \u003e-\n            A single string that is the terse essence of the result (useful for\n            simple answers)\n        essence_type:\n          type: string\n          example: drug\n          description: A Translator bioentity type of the essence\n        row_data:\n          type: array\n          example:\n            - ibuprofen\n            - 'CHEMBL:CHEMBL521'\n          description: \u003e-\n            An arbitrary list of values that captures the essence of the result\n            that can be turned into a tabular result across all answers (each\n            result is a row) for a user that wants tabular output\n          items:\n            type: string\n        score:\n          type: number\n          format: float\n          example: 163.233\n          description: Any type of score associated with this result\n        score_name:\n          type: string\n          example: Jaccard distance\n          description: Name for the score\n        score_direction:\n          type: string\n          example: lower_is_better\n          description: \u003e-\n            Sorting indicator for the score: one of higher_is_better or\n            lower_is_better\n        confidence:\n          type: number\n          format: float\n          example: 0.9234\n          description: \u003e-\n            Confidence metric for this result, a value between (inclusive) 0.0 (no\n            confidence) and 1.0 (highest confidence)\n        result_type:\n          type: string\n          example: individual query answer\n          description: \u003e-\n            One of several possible result types: 'individual query answer',\n            'neighborhood graph', 'type summary graph'\n        result_group:\n          type: integer\n          example: 1\n          description: \u003e-\n            An integer group number for results for use in cases where several\n            results should be grouped together. Also useful to control sorting\n            ascending.\n        result_group_similarity_score:\n          type: number\n          format: float\n          example: 0.95\n          description: \u003e-\n            A score that denotes the similarity of this result to other members of\n            the result_group\n        reasoner_id:\n          type: string\n          example: RTX\n          description: \u003e-\n            Identifier string of the reasoner that provided this result (e.g.,\n            RTX, Robokop, Indigo, Integrator)\n        result_graph:\n          type: object\n          description: \u003e-\n            A graph that describes the thought pattern of this result (i.e. answer\n            to the query)\n          $ref: '#/components/schemas/KnowledgeGraph'\n        node_bindings:\n          type: object\n          description: \u003e-\n            Lookup dict that maps QNode identifiers in the QueryGraph to\n            Node identifiers in the KnowledgeGraph\n          additionalProperties:\n            oneOf:\n              - type: string\n              - type: array\n                items:\n                  type: string\n        edge_bindings:\n          type: object\n          description: \u003e-\n            Lookup dict that maps QEdge identifiers in the QueryGraph to\n            Edge identifiers in the KnowledgeGraph\n          additionalProperties:\n            oneOf:\n              - type: string\n              - type: array\n                items:\n                  type: string\n    KnowledgeGraph:\n      type: object\n      description: \u003e-\n        A thought graph associated with this result. This will commonly be a\n        linear path subgraph from one concept to another, but related items aside\n        of the path may be included.\n      properties:\n        nodes:\n          type: array\n          description: List of nodes in the KnowledgeGraph\n          items:\n            $ref: '#/components/schemas/Node'\n        edges:\n          type: array\n          description: List of edges in the KnowledgeGraph\n          items:\n            $ref: '#/components/schemas/Edge'\n      additionalProperties: true\n      required:\n        - nodes\n        - edges\n    RemoteKnowledgeGraph:\n      type: object\n      description: \u003e-\n        A thought graph associated with this result that is not repeated here, but\n        stored elsewhere in a way that can be remotely accessed by the reader of\n        this Message\n      properties:\n        url:\n          type: string\n          example: 'http://robokop.renci.org/api/kg'\n          description: URL that provides programmatic access to the remote knowledge graph\n        credentials:\n          type: object\n          description: \u003e-\n            Credentials needed for programmatic access to the remote knowledge\n            graph\n          items:\n            $ref: '#/components/schemas/Credentials'\n      additionalProperties: true\n    Credentials:\n      description: Credentials needed for programmatic access to the remote knowledge graph\n      type: object\n      required:\n        - username\n        - password\n      properties:\n        username:\n          description: Username needed for programmatic access to the remote knowledge graph\n          type: string\n        password:\n          type: string\n          description: Password needed for programmatic access to the remote knowledge graph\n      additionalProperties: true\n    QueryGraph:\n      type: object\n      description: \u003e-\n        A graph intended to be the thought path to be followed by a reasoner to\n        answer the question. This graph is a representation of a question.\n      properties:\n        nodes:\n          type: array\n          description: List of nodes in the QueryGraph\n          items:\n            $ref: '#/components/schemas/QNode'\n        edges:\n          type: array\n          description: List of edges in the QueryGraph\n          items:\n            $ref: '#/components/schemas/QEdge'\n      additionalProperties: true\n      required:\n        - nodes\n        - edges\n    QNode:\n      type: object\n      description: A node in the QueryGraph\n      properties:\n        node_id:\n          type: string\n          example: n00\n          description: \u003e-\n            QueryGraph internal identifier for this QNode. Recommended form: n00,\n            n01, n02, etc.\n        curie:\n          type: string\n          example: 'OMIM:603903'\n          description: CURIE identifier for this node\n        type:\n          type: string\n          description: 'Entity type of this node (e.g., protein, disease, etc.)'\n          example: disease\n      additionalProperties: true\n    QEdge:\n      type: object\n      description: An edge in the QueryGraph\n      properties:\n        edge_id:\n          type: string\n          example: e00\n          description: \u003e-\n            QueryGraph internal identifier for this QEdge. Recommended form: e00,\n            e01, e02, etc.\n        type:\n          type: string\n          example: affects\n          description: Higher-level relationship type of this edge\n        relation:\n          type: string\n          example: upregulates\n          description: Lower-level relationship type of this edge\n        source_id:\n          type: string\n          example: 'https://omim.org/entry/603903'\n          description: Corresponds to the @id of source node of this edge\n        target_id:\n          type: string\n          example: 'https://www.uniprot.org/uniprot/P00738'\n          description: Corresponds to the @id of target node of this edge\n        negated:\n          type: boolean\n          example: true\n          description: \u003e-\n            Boolean that if set to true, indicates the edge statement is negated\n            i.e. is not true\n      additionalProperties: true\n      required:\n        - source_id\n        - target_id\n    Node:\n      type: object\n      description: A node in the thought subgraph\n      properties:\n        id:\n          type: string\n          example: 'OMIM:603903'\n          description: CURIE identifier for this node\n        uri:\n          type: string\n          example: 'https://www.uniprot.org/uniprot/P00738'\n          description: URI identifier for this node\"\n        name:\n          type: string\n          example: Haptoglobin\n          description: Formal name of the entity\n        type:\n          type: array\n          description: 'Entity type of this node (e.g., protein, disease, etc.)'\n          example:\n            - protein\n          items:\n            type: string\n        description:\n          type: string\n          example: 'Haptoglobin captures, and combines with free plasma hemoglobin...'\n          description: One to three sentences of description/definition of this entity\n        symbol:\n          type: string\n          example: HP\n          description: Short abbreviation or symbol for this entity\n        node_attributes:\n          type: array\n          description: A list of arbitrary attributes for the node\n          items:\n            $ref: '#/components/schemas/NodeAttribute'\n      additionalProperties: true\n      required:\n        - id\n    NodeAttribute:\n      type: object\n      description: A generic attribute for a node\n      properties:\n        type:\n          type: string\n          example: article\n          description: Entity type of this attribute\n        name:\n          type: string\n          example: Wikipedia article\n          description: Formal name of the attribute\n        value:\n          type: string\n          example: '7.23e-12'\n          description: Value of the attribute\n        url:\n          type: string\n          example: 'https://en.wikipedia.org/wiki/Malaria'\n          description: A URL corresponding to this attribute\n      additionalProperties: true\n    Edge:\n      type: object\n      description: An edge in the thought subgraph linking two nodes\n      properties:\n        id:\n          type: string\n          example: '553903'\n          description: \u003e-\n            Local identifier for this node which is unique within this\n            KnowledgeGraph, and perhaps within the source reasoner's knowledge\n            graph\n        type:\n          type: string\n          example: affects\n          description: Higher-level relationship type of this edge\n        relation:\n          type: string\n          example: upregulates\n          description: Lower-level relationship type of this edge\n        source_id:\n          type: string\n          example: 'https://omim.org/entry/603903'\n          description: Corresponds to the @id of source node of this edge\n        target_id:\n          type: string\n          example: 'https://www.uniprot.org/uniprot/P00738'\n          description: Corresponds to the @id of target node of this edge\n        is_defined_by:\n          type: string\n          example: reasoner\n          description: A CURIE/URI for the translator group that made the KG\n        defined_datetime:\n          type: string\n          example: '2018-11-03 15:34:23'\n          description: \u003e-\n            Datetime at which the KG builder/updater pulled the information from\n            the original source. Used as a freshness indicator.\n        provided_by:\n          type: string\n          example: OMIM\n          description: A CURIE/URI for the knowledge source that defined this edge\n        confidence:\n          type: number\n          format: float\n          example: 0.99\n          description: \u003e-\n            Confidence metric for this edge, a value between (inclusive) 0.0 (no\n            confidence) and 1.0 (highest confidence)\n        weight:\n          type: number\n          format: float\n          example: 0.99\n          description: \u003e-\n            Weight metric for this edge, with no upper bound. Perhaps useful when\n            formal confidence metrics are not available\n        publications:\n          type: array\n          description: List of CURIEs for publications associated with this edge\n          example:\n            - 'PMID:12345562'\n          items:\n            type: string\n        evidence_type:\n          type: string\n          example: 'ECO:0000220'\n          description: \u003e-\n            A CURIE/URI for class of evidence supporting the statement made in an\n            edge - typically a class from the ECO ontology\n        qualifiers:\n          type: string\n          example: 'ECO:0000220'\n          description: \u003e-\n            Terms representing qualifiers that modify or qualify the meaning of\n            the statement made in an edge\n        negated:\n          type: boolean\n          example: true\n          description: \u003e-\n            Boolean that if set to true, indicates the edge statement is negated\n            i.e. is not true\n        edge_attributes:\n          type: array\n          description: A list of additional attributes for this edge\n          items:\n            $ref: '#/components/schemas/EdgeAttribute'\n      additionalProperties: true\n      required:\n        - id\n        - source_id\n        - target_id\n    EdgeAttribute:\n      type: object\n      description: A generic additional attribute for an edge\n      properties:\n        type:\n          type: string\n          example: localization\n          description: Entity type of this attribute\n        name:\n          type: string\n          example: Cell type limitation\n          description: Formal name of the attribute\n        value:\n          type: string\n          example: MFC cells\n          description: \u003e-\n            Value of the attribute. While all attributes should have a name, many\n            will not have a value\n        url:\n          type: string\n          example: 'https://www.ncbi.nlm.nih.gov/pubmed/29309293'\n          description: A URL corresponding to this attribute\n      additionalProperties: true\n"
		}
	},
	"Error": "parse: parse spec: paths: /query: post: operation \"query\": requestBody: content: \"application/json\": parse schema: parse schema: resolve \"#/components/schemas/Query\": parse schema: property \"previous_message_processing_plan\": parse schema: object cannot contain 'items' field"
}