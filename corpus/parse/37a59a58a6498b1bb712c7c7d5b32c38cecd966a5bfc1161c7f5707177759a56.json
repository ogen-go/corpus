{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/jjs-dev/jjs"
		},
		"file": {
			"name": "openapi.json",
			"size": 0,
			"path": "src/apiserver/openapi.json",
			"byteSize": 26979,
			"content": "{\n  \"components\": {\n    \"schemas\": {\n      \"ApiVersion\": {\n        \"properties\": {\n          \"major\": {\n            \"title\": \"Major\",\n            \"type\": \"integer\"\n          },\n          \"minor\": {\n            \"title\": \"Minor\",\n            \"type\": \"integer\"\n          }\n        },\n        \"required\": [\n          \"major\",\n          \"minor\"\n        ],\n        \"title\": \"ApiVersion\",\n        \"type\": \"object\"\n      },\n      \"Body_route_put_problem_problems__problem_id__put\": {\n        \"properties\": {\n          \"problem_assets\": {\n            \"title\": \"Problem Assets\",\n            \"type\": \"string\"\n          },\n          \"problem_manifest\": {\n            \"format\": \"binary\",\n            \"title\": \"Problem Manifest\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"problem_manifest\",\n          \"problem_assets\"\n        ],\n        \"title\": \"Body_route_put_problem_problems__problem_id__put\",\n        \"type\": \"object\"\n      },\n      \"Contest\": {\n        \"properties\": {\n          \"id\": {\n            \"title\": \"Id\",\n            \"type\": \"string\"\n          },\n          \"title\": {\n            \"title\": \"Title\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"id\",\n          \"title\"\n        ],\n        \"title\": \"Contest\",\n        \"type\": \"object\"\n      },\n      \"HTTPValidationError\": {\n        \"properties\": {\n          \"detail\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"title\": \"Detail\",\n            \"type\": \"array\"\n          }\n        },\n        \"title\": \"HTTPValidationError\",\n        \"type\": \"object\"\n      },\n      \"LiveStatus\": {\n        \"properties\": {\n          \"current_score\": {\n            \"title\": \"Current Score\",\n            \"type\": \"integer\"\n          },\n          \"current_test\": {\n            \"title\": \"Current Test\",\n            \"type\": \"integer\"\n          },\n          \"finished\": {\n            \"title\": \"Finished\",\n            \"type\": \"boolean\"\n          }\n        },\n        \"required\": [\n          \"finished\"\n        ],\n        \"title\": \"LiveStatus\",\n        \"type\": \"object\"\n      },\n      \"Problem\": {\n        \"properties\": {\n          \"name\": {\n            \"title\": \"Name\",\n            \"type\": \"string\"\n          },\n          \"rel_name\": {\n            \"title\": \"Rel Name\",\n            \"type\": \"string\"\n          },\n          \"title\": {\n            \"title\": \"Title\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"name\",\n          \"rel_name\",\n          \"title\"\n        ],\n        \"title\": \"Problem\",\n        \"type\": \"object\"\n      },\n      \"Run\": {\n        \"properties\": {\n          \"contest_name\": {\n            \"title\": \"Contest Name\",\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Id\",\n            \"type\": \"string\"\n          },\n          \"problem_name\": {\n            \"title\": \"Problem Name\",\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"default\": {},\n            \"title\": \"Status\",\n            \"type\": \"object\"\n          },\n          \"toolchain_name\": {\n            \"title\": \"Toolchain Name\",\n            \"type\": \"string\"\n          },\n          \"user_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"User Id\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"id\",\n          \"toolchain_name\",\n          \"problem_name\",\n          \"user_id\",\n          \"contest_name\"\n        ],\n        \"title\": \"Run\",\n        \"type\": \"object\"\n      },\n      \"RunPatch\": {\n        \"description\": \"Describes updates which will be applied to run\",\n        \"properties\": {\n          \"binary\": {\n            \"title\": \"Binary\",\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"items\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            \"title\": \"Status\",\n            \"type\": \"array\"\n          }\n        },\n        \"title\": \"RunPatch\",\n        \"type\": \"object\"\n      },\n      \"RunSubmitSimpleParams\": {\n        \"properties\": {\n          \"code\": {\n            \"title\": \"Code\",\n            \"type\": \"string\"\n          },\n          \"contest\": {\n            \"title\": \"Contest\",\n            \"type\": \"string\"\n          },\n          \"problem\": {\n            \"title\": \"Problem\",\n            \"type\": \"string\"\n          },\n          \"toolchain\": {\n            \"title\": \"Toolchain\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"code\",\n          \"contest\",\n          \"problem\",\n          \"toolchain\"\n        ],\n        \"title\": \"RunSubmitSimpleParams\",\n        \"type\": \"object\"\n      },\n      \"SessionToken\": {\n        \"properties\": {\n          \"data\": {\n            \"title\": \"Data\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"data\"\n        ],\n        \"title\": \"SessionToken\",\n        \"type\": \"object\"\n      },\n      \"SimpleAuthParams\": {\n        \"properties\": {\n          \"login\": {\n            \"title\": \"Login\",\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"title\": \"Password\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"login\",\n          \"password\"\n        ],\n        \"title\": \"SimpleAuthParams\",\n        \"type\": \"object\"\n      },\n      \"Toolchain\": {\n        \"properties\": {\n          \"description\": {\n            \"title\": \"Description\",\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"title\": \"Id\",\n            \"type\": \"string\"\n          },\n          \"image\": {\n            \"title\": \"Image\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"id\",\n          \"description\",\n          \"image\"\n        ],\n        \"title\": \"Toolchain\",\n        \"type\": \"object\"\n      },\n      \"User\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Id\",\n            \"type\": \"string\"\n          },\n          \"login\": {\n            \"title\": \"Login\",\n            \"type\": \"string\"\n          },\n          \"password_hash\": {\n            \"title\": \"Password Hash\",\n            \"type\": \"string\"\n          },\n          \"roles\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"title\": \"Roles\",\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"id\",\n          \"login\",\n          \"password_hash\",\n          \"roles\"\n        ],\n        \"title\": \"User\",\n        \"type\": \"object\"\n      },\n      \"UserCreationParams\": {\n        \"properties\": {\n          \"login\": {\n            \"title\": \"Login\",\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"title\": \"Password\",\n            \"type\": \"string\"\n          },\n          \"roles\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"title\": \"Roles\",\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"login\",\n          \"password\",\n          \"roles\"\n        ],\n        \"title\": \"UserCreationParams\",\n        \"type\": \"object\"\n      },\n      \"ValidationError\": {\n        \"properties\": {\n          \"loc\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"title\": \"Location\",\n            \"type\": \"array\"\n          },\n          \"msg\": {\n            \"title\": \"Message\",\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"title\": \"Error Type\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"loc\",\n          \"msg\",\n          \"type\"\n        ],\n        \"title\": \"ValidationError\",\n        \"type\": \"object\"\n      }\n    },\n    \"securitySchemes\": {\n      \"HTTPBearer\": {\n        \"scheme\": \"bearer\",\n        \"type\": \"http\"\n      }\n    }\n  },\n  \"info\": {\n    \"title\": \"FastAPI\",\n    \"version\": \"0.1.0\"\n  },\n  \"openapi\": \"3.0.2\",\n  \"paths\": {\n    \"/auth/simple\": {\n      \"post\": {\n        \"description\": \"Login using login and password\\n\\nIn future, other means to authn will be added.\",\n        \"operationId\": \"login\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SimpleAuthParams\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SessionToken\"\n                }\n              }\n            },\n            \"description\": \"Successful Response\"\n          },\n          \"422\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            },\n            \"description\": \"Validation Error\"\n          }\n        },\n        \"summary\": \"Route Login\"\n      }\n    },\n    \"/contests\": {\n      \"get\": {\n        \"operationId\": \"listContests\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Contest\"\n                  },\n                  \"title\": \"Response Route List Contests Contests Get\",\n                  \"type\": \"array\"\n                }\n              }\n            },\n            \"description\": \"Successful Response\"\n          }\n        },\n        \"summary\": \"Route List Contests\"\n      }\n    },\n    \"/contests/{contest_name}\": {\n      \"get\": {\n        \"operationId\": \"getContest\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"contest_name\",\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"Contest Name\",\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Contest\"\n                }\n              }\n            },\n            \"description\": \"Successful Response\"\n          },\n          \"422\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            },\n            \"description\": \"Validation Error\"\n          }\n        },\n        \"summary\": \"Route Get Contest\"\n      }\n    },\n    \"/contests/{contest_name}/problems\": {\n      \"get\": {\n        \"operationId\": \"listContestProblems\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"contest_name\",\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"Contest Name\",\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Problem\"\n                  },\n                  \"title\": \"Response Route List Contest Problems Contests  Contest Name  Problems Get\",\n                  \"type\": \"array\"\n                }\n              }\n            },\n            \"description\": \"Successful Response\"\n          },\n          \"422\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            },\n            \"description\": \"Validation Error\"\n          }\n        },\n        \"summary\": \"Route List Contest Problems\"\n      }\n    },\n    \"/problems/{problem_id}\": {\n      \"put\": {\n        \"operationId\": \"putProblem\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"problem_id\",\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"Problem Id\",\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Body_route_put_problem_problems__problem_id__put\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"title\": \"Response Route Put Problem Problems  Problem Id  Put\",\n                  \"type\": \"boolean\"\n                }\n              }\n            },\n            \"description\": \"Successful Response\"\n          },\n          \"422\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            },\n            \"description\": \"Validation Error\"\n          }\n        },\n        \"summary\": \"Route Put Problem\"\n      }\n    },\n    \"/queue\": {\n      \"post\": {\n        \"description\": \"Returns runs that should be judged\\n\\nAt most `limit` runs will be returned\\n\\nThese runs are immediately locked, to prevent resource wasting.\\nHowever, this is not safe distributed lock: on timeout lock will\\nbe released. It means, that in some rare situations same run can be judged\\nseveral times. All judgings except one will be ignored.\",\n        \"operationId\": \"popRunFromQueue\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"Limit\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Run\"\n                  },\n                  \"title\": \"Response Route Pop From Invoke Queue Queue Post\",\n                  \"type\": \"array\"\n                }\n              }\n            },\n            \"description\": \"Successful Response\"\n          },\n          \"422\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            },\n            \"description\": \"Validation Error\"\n          }\n        },\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ],\n        \"summary\": \"Route Pop From Invoke Queue\"\n      }\n    },\n    \"/runs\": {\n      \"get\": {\n        \"description\": \"Lists runs\\n\\nThis operation returns all created runs\",\n        \"operationId\": \"listRuns\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Run\"\n                  },\n                  \"title\": \"Response Route List Runs Runs Get\",\n                  \"type\": \"array\"\n                }\n              }\n            },\n            \"description\": \"Successful Response\"\n          }\n        },\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ],\n        \"summary\": \"Route List Runs\"\n      },\n      \"post\": {\n        \"description\": \"Submits new run\\n\\nThis operation creates new run, with given source code, and queues it for\\njudging. Created run will be returned. All fields against `id` will match\\nfields of request body; `id` will be real id of this run.\",\n        \"operationId\": \"submitRun\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RunSubmitSimpleParams\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Run\"\n                }\n              }\n            },\n            \"description\": \"Successful Response\"\n          },\n          \"422\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            },\n            \"description\": \"Validation Error\"\n          }\n        },\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ],\n        \"summary\": \"Route Submit\"\n      }\n    },\n    \"/runs/{run_id}\": {\n      \"get\": {\n        \"description\": \"Loads run by id\",\n        \"operationId\": \"getRun\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"run_id\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"uuid\",\n              \"title\": \"Run Id\",\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Run\"\n                }\n              }\n            },\n            \"description\": \"Successful Response\"\n          },\n          \"422\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            },\n            \"description\": \"Validation Error\"\n          }\n        },\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ],\n        \"summary\": \"Route Get Run\"\n      },\n      \"patch\": {\n        \"description\": \"Modifies existing run\\n\\nSee `RunPatch` documentation for what can be updated.\",\n        \"operationId\": \"patchRun\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"run_id\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"uuid\",\n              \"title\": \"Run Id\",\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RunPatch\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Run\"\n                }\n              }\n            },\n            \"description\": \"Successful Response\"\n          },\n          \"422\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            },\n            \"description\": \"Validation Error\"\n          }\n        },\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ],\n        \"summary\": \"Route Run Patch\"\n      }\n    },\n    \"/runs/{run_id}/live\": {\n      \"get\": {\n        \"operationId\": \"getRunLiveStatus\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"run_id\",\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"Run Id\",\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LiveStatus\"\n                }\n              }\n            },\n            \"description\": \"Successful Response\"\n          },\n          \"422\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            },\n            \"description\": \"Validation Error\"\n          }\n        },\n        \"summary\": \"Route Run Live Status\"\n      }\n    },\n    \"/runs/{run_id}/source\": {\n      \"get\": {\n        \"description\": \"Returns run source as base64-encoded JSON string\",\n        \"operationId\": \"getRunSource\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"run_id\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"uuid\",\n              \"title\": \"Run Id\",\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"title\": \"Response Route Get Run Source Runs  Run Id  Source Get\",\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"Successful Response\"\n          },\n          \"204\": {\n            \"description\": \"Run source is not available\"\n          },\n          \"422\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            },\n            \"description\": \"Validation Error\"\n          }\n        },\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ],\n        \"summary\": \"Route Get Run Source\"\n      }\n    },\n    \"/system/api-version\": {\n      \"get\": {\n        \"description\": \"Returns API version\\n\\nVersion is returned in format {major: MAJOR, minor: MINOR}.\\nMAJOR component is incremented, when backwards-incompatible changes were made.\\nMINOR component is incremented, when backwards-compatible changes were made.\\n\\nIt means, that if you tested application with apiVersion == X.Y, your application\\nshould assert that MAJOR = X and MINOR \u003e= Y\",\n        \"operationId\": \"apiVersion\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ApiVersion\"\n                }\n              }\n            },\n            \"description\": \"Successful Response\"\n          }\n        },\n        \"summary\": \"Route Api Version\"\n      }\n    },\n    \"/system/is-dev\": {\n      \"get\": {\n        \"description\": \"Returns if JJS is running in development mode\\n\\nPlease note that you don't have to respect this information, but following is recommended:\\n1. Display it in each page/view.\\n2. Change theme.\\n3. On login view, add button \\\"login as root\\\".\",\n        \"operationId\": \"isDev\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"title\": \"Response Route Is Dev System Is Dev Get\",\n                  \"type\": \"boolean\"\n                }\n              }\n            },\n            \"description\": \"Successful Response\"\n          }\n        },\n        \"summary\": \"Route Is Dev\"\n      }\n    },\n    \"/toolchains\": {\n      \"get\": {\n        \"operationId\": \"listToolchains\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Toolchain\"\n                  },\n                  \"title\": \"Response Route List Roolchains Toolchains Get\",\n                  \"type\": \"array\"\n                }\n              }\n            },\n            \"description\": \"Successful Response\"\n          }\n        },\n        \"summary\": \"Route List Roolchains\"\n      },\n      \"put\": {\n        \"operationId\": \"putToolchain\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Toolchain\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Toolchain\"\n                }\n              }\n            },\n            \"description\": \"Successful Response\"\n          },\n          \"422\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            },\n            \"description\": \"Validation Error\"\n          }\n        },\n        \"summary\": \"Route Put Tooclhain\"\n      }\n    },\n    \"/toolchains/{toolchain_id}\": {\n      \"get\": {\n        \"operationId\": \"getToolchain\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"toolchain_id\",\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"Toolchain Id\",\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Toolchain\"\n                }\n              }\n            },\n            \"description\": \"Successful Response\"\n          },\n          \"422\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            },\n            \"description\": \"Validation Error\"\n          }\n        },\n        \"summary\": \"Route Get Toolchain\"\n      }\n    },\n    \"/users\": {\n      \"post\": {\n        \"description\": \"Creates new user\",\n        \"operationId\": \"createUser\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserCreationParams\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            },\n            \"description\": \"Successful Response\"\n          },\n          \"422\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            },\n            \"description\": \"Validation Error\"\n          }\n        },\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ],\n        \"summary\": \"Route Create User\"\n      }\n    }\n  }\n}"
		}
	},
	"Error": "parse: parse spec: paths: /runs: get: operation \"listRuns\": responses: 200: content: \"application/json\": schema: parse schema: item: parse schema: resolve \"#/components/schemas/Run\": parse schema: property \"status\": parse default: unexpected type: \"object\""
}