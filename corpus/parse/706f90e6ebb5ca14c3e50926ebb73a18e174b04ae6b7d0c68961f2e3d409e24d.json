{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bangumi/api"
		},
		"file": {
			"name": "api.yml",
			"size": 0,
			"path": "open-api/api.yml",
			"byteSize": 21361,
			"content": "openapi: 3.0.0\ninfo:\n  title: Bangumi API\n  description: |\n    你可以在 \u003chttps://api.bgm.tv/v0/oauth/\u003e 生成一个 Access Token\n\n    ## 建议客户端开发者指定一个带有 APP 名称和版本的 User Agent，而非使用 HTTP 请求库默认的 UA\n\n    各种请求库的默认 UA 在未来可能会被禁用。\n  version: \"dev\"\n  contact:\n    name: Bangumi API\n    url: https://github.com/bangumi/api/\nservers:\n  - url: https://api.bgm.tv\npaths:\n  /calendar:\n    get:\n      tags:\n        - 条目\n      summary: 每日放送\n      operationId: getCalendar\n      responses:\n        200:\n          description: 每日放送\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    weekday:\n                      type: object\n                      properties:\n                        en:\n                          type: string\n                          example: Mon\n                        cn:\n                          type: string\n                          example: 星期一\n                        ja:\n                          type: string\n                          example: 月耀日\n                        id:\n                          type: integer\n                          example: 1\n                    items:\n                      type: array\n                      items:\n                        $ref: \"#/components/schemas/SubjectSmall\"\n  /search/subject/{keywords}:\n    get:\n      tags:\n        - 搜索\n      summary: 条目搜索\n      operationId: searchSubjectByKeywords\n      parameters:\n        - name: keywords\n          in: path\n          description: 关键词\n            \u003cbr\u003e 需要 URL Encode\n          required: true\n          schema:\n            type: string\n        - name: type\n          in: query\n          description: 条目类型，参考 [SubjectType](#model-SubjectType)\n          required: false\n          schema:\n            $ref: \"v0.yaml#/components/schemas/SubjectType\"\n        - $ref: \"#/components/parameters/responseGroup\"\n        - name: start\n          in: query\n          description: 开始条数\n          required: false\n          schema:\n            type: integer\n        - name: max_results\n          in: query\n          description: 每页条数\n            \u003cbr\u003e 最多 25\n          required: false\n          schema:\n            type: integer\n            maximum: 25\n      responses:\n        200:\n          description: 搜索结果\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  results:\n                    description: 总条数\n                    type: integer\n                  list:\n                    description: 结果列表\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/SubjectSmall\"\n  /ep/{id}/status/{status}:\n    get:\n      tags:\n        - 进度\n      summary: 更新收视进度\n      operationId: getEpisodeStatus\n      parameters:\n        - $ref: \"#/components/parameters/ep_id\"\n        - $ref: \"#/components/parameters/ep_status\"\n      responses:\n        200:\n          description: 成功\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StatusCode\"\n        401:\n          description: 未授权\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StatusCode\"\n      security:\n        - HTTPBearer: []\n    post:\n      tags:\n        - 进度\n      summary: 更新收视进度\n      operationId: UpdateEpisodeStatus\n      parameters:\n        - $ref: \"#/components/parameters/ep_id\"\n        - $ref: \"#/components/parameters/ep_status\"\n        - name: ep_id\n          in: query\n          description: 使用 POST 批量更新\n            \u003cbr\u003e 将章节以半角逗号分隔，如 `3697,3698,3699`。请求时 URL 中的 ep_id 为最后一个章节 ID\n          required: false\n          schema:\n            type: string\n            example: 3697,3698,3699\n      responses:\n        200:\n          description: 成功\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StatusCode\"\n        401:\n          description: 未授权\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StatusCode\"\n      security:\n        - HTTPBearer: []\n  /subject/{subject_id}/update/watched_eps:\n    post:\n      tags:\n        - 进度\n      summary: 批量更新收视进度\n      operationId: batchUpdateEpisodeStatusBySubjectId\n      parameters:\n        - $ref: \"#/components/parameters/subject_id\"\n        - name: watched_eps\n          in: query\n          description: 如看到 123 话则 POST `123`\n            \u003cbr\u003e 书籍条目传 watched_eps 与 watched_vols 至少其一\n          required: true\n          schema:\n            type: string\n            example: 123\n        - name: watched_vols\n          in: query\n          description: 如看到第 3 卷则 POST `3`, 仅对书籍条目有效\n          required: false\n          schema:\n            type: string\n            example: 3\n      responses:\n        200:\n          description: 成功\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StatusCode\"\n        401:\n          description: 未授权\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StatusCode\"\n      security:\n        - HTTPBearer: []\n  /collection/{subject_id}/{action}:\n    post:\n      tags:\n        - 收藏\n      summary: 管理收藏\n      operationId: UpdateCollectionBySubjectIdWithAction\n      description: \"管理收藏。Content-type必须为multipart/form-data或application/x-www-form-urlencoded，参数都得放在body里。\"\n      requestBody:\n        description: \"必须是content-type对应的形式，不能采用Raw\"\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                status: # \u003c!--- form field name\n                  $ref: \"#/components/schemas/CollectionStatusType\"\n                  description: 收藏状态，参考 [CollectionStatusType](#model-CollectionStatusType)\n                comment:\n                  type: string\n                  description: 简评\n                tags: # \u003c!--- form field name\n                  type: string\n                  description: 标签\n                    \u003cbr\u003e 以半角空格分割\n                rating: # \u003c!--- form field name\n                  type: integer\n                  description: 评分\n                    \u003cbr\u003e 1-10\n                    \u003cbr\u003e 不填默认重置为未评分\n                privacy: # \u003c!--- form field name\n                  type: integer\n                  description: 收藏隐私\n                    \u003cbr\u003e 0 = 公开\n                    \u003cbr\u003e 1 = 私密\n                    \u003cbr\u003e 不填默认为0\n              required:\n                - status\n\n      parameters:\n        - $ref: \"#/components/parameters/subject_id\"\n        - name: action\n          in: path\n          description: 收藏动作\n            \u003cbr\u003e create = 添加收藏\n            \u003cbr\u003e update = 更新收藏\n            \u003cbr\u003e 可以统一使用 `update`，系统会自动判断需要新建还是更新收藏\n          required: true\n          schema:\n            type: string\n            enum:\n              - create\n              - update\n\n      responses:\n        200:\n          $ref: \"#/components/responses/Collection\"\n        401:\n          description: 未授权\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StatusCode\"\n      security:\n        - HTTPBearer: []\ncomponents:\n  schemas:\n    CollectionStatusId:\n      description: 收藏状态 ID\n      type: integer\n      enum:\n        - 1\n        - 2\n        - 3\n        - 4\n        - 5\n      example: 5\n      x-ms-enum:\n        name: CollectionStatusId\n        modelAsString: false\n        values:\n          - Wish\n          - Collect\n          - Doing\n          - OnHold\n          - Dropped\n      x-enum-varnames:\n        - Wish\n        - Collect\n        - Doing\n        - OnHold\n        - Dropped\n    CollectionStatusType:\n      description: 收藏状态类型\n      type: string\n      enum:\n        - wish\n        - collect\n        - do\n        - on_hold\n        - dropped\n      example: dropped\n    CollectionStatusName:\n      description: 收藏状态名称\n      type: string\n      enum:\n        - 想做\n        - 做过\n        - 在做\n        - 搁置\n        - 抛弃\n      example: 抛弃\n      x-ms-enum:\n        name: CollectionStatusName\n        modelAsString: false\n        values:\n          - Wish\n          - Collect\n          - Doing\n          - OnHold\n          - Dropped\n      x-enum-varnames:\n        - Wish\n        - Collect\n        - Doing\n        - OnHold\n        - Dropped\n    CollectionStatus:\n      description: 收藏状态\n        - 1 = wish = 想做\n        - 2 = collect = 做过\n        - 3 = do = 在做\n        - 4 = on_hold = 搁置\n        - 5 = dropped = 抛弃\n      type: object\n      properties:\n        id:\n          $ref: \"#/components/schemas/CollectionStatusId\"\n        type:\n          $ref: \"#/components/schemas/CollectionStatusType\"\n        name:\n          $ref: \"#/components/schemas/CollectionStatusName\"\n    EpStatusId:\n      description: 章节状态 ID\n      type: integer\n      enum:\n        - 2\n        - 1\n        - 3\n    EpStatusType:\n      description: 章节状态类型\n      type: string\n      enum:\n        - watched\n        - queue\n        - drop\n        - remove\n    EpStatusName:\n      description: 章节状态名称\n      type: string\n      enum:\n        - 看过\n        - 想看\n        - 抛弃\n        - 撤销\n      x-ms-enum:\n        name: EpStatusName\n        modelAsString: false\n        values:\n          - Watched\n          - Queue\n          - Drop\n          - Remove\n      x-enum-varnames:\n        - Watched\n        - Queue\n        - Drop\n        - Remove\n    ResponseGroup:\n      description: 返回数据大小\n      type: string\n      enum:\n        - small\n        - medium\n      default: small\n      x-ms-enum:\n        name: ResponseGroup\n        modelAsString: false\n        values:\n          - Small\n          - Medium\n      x-enum-varnames:\n        - Small\n        - Medium\n    SubjectTypeName:\n      description: 条目类型名称\n        \u003cbr\u003e book\n        \u003cbr\u003e anime\n        \u003cbr\u003e music\n        \u003cbr\u003e game\n        \u003cbr\u003e real\n      type: string\n      enum:\n        - book\n        - anime\n        - music\n        - game\n        - real\n      example: anime\n      x-ms-enum:\n        name: SubjectTypeName\n        modelAsString: false\n        values:\n          - Book\n          - Anime\n          - Music\n          - Game\n          - Real\n      x-enum-varnames:\n        - Book\n        - Anime\n        - Music\n        - Game\n        - Real\n    SubjectCollection:\n      description: 收藏人数\n      type: object\n      properties:\n        wish:\n          description: 想做\n          type: integer\n          example: 608\n        collect:\n          description: 做过\n          type: integer\n          example: 3010\n        doing:\n          description: 在做\n          type: integer\n          example: 103\n        on_hold:\n          description: 搁置\n          type: integer\n          example: 284\n        dropped:\n          description: 抛弃\n          type: integer\n          example: 86\n    SubjectLegacy:\n      type: object\n      properties:\n        id:\n          description: 条目 ID\n          type: integer\n          example: 12\n        url:\n          description: 条目地址\n          type: string\n          example: http://bgm.tv/subject/12\n        type:\n          $ref: \"v0.yaml#/components/schemas/SubjectType\"\n        name:\n          description: 条目名称\n          type: string\n          example: ちょびっツ\n    SubjectBase:\n      allOf:\n        - $ref: \"#/components/schemas/SubjectLegacy\"\n        - type: object\n          properties:\n            name_cn:\n              description: 条目中文名称\n              type: string\n              example: 人形电脑天使心\n            summary:\n              description: 剧情简介\n              type: string\n              example: 在不久的将来,电子技术飞速发展,电脑成为人们生活中不可缺少的一部分.主角的名字是本须和秀树,是个19岁的少年,由于考试失败,来到东京上补习班,过着贫穷潦倒的生活……\\r\\n到达东京的第一天,他很幸运的在垃圾堆捡到一个人型电脑,一直以来秀树都非常渴望拥有个人电脑.当他抱着她带返公寓后,却不知如何开机,在意想不到的地方找到开关并开启后,故事就此展开\\r\\n本须和秀树捡到了人型计算机〔唧〕。虽然不晓得她到底是不是〔Chobits〕，但她的身上似乎藏有极大的秘密。看到秀树为了钱而烦恼，唧出去找打工，没想到却找到了危险的工作！为了让秀树开心，唧开始到色情小屋打工。但她在遭到过度激烈的强迫要求之后失控。让周遭计算机因此而强制停摆。\\r\\n另一方面，秀树发现好友新保与补习班的清水老师有着不可告人的关系……\n            air_date:\n              description: 放送开始日期\n              type: string\n              example: \"2002-04-02\"\n            air_weekday:\n              description: 放送星期\n              type: integer\n              example: 2\n            images:\n              description: 封面\n              type: object\n              properties:\n                large:\n                  type: string\n                  example: http://lain.bgm.tv/pic/cover/l/c2/0a/12_24O6L.jpg\n                common:\n                  type: string\n                  example: http://lain.bgm.tv/pic/cover/c/c2/0a/12_24O6L.jpg\n                medium:\n                  type: string\n                  example: http://lain.bgm.tv/pic/cover/m/c2/0a/12_24O6L.jpg\n                small:\n                  type: string\n                  example: http://lain.bgm.tv/pic/cover/s/c2/0a/12_24O6L.jpg\n                grid:\n                  type: string\n                  example: http://lain.bgm.tv/pic/cover/g/c2/0a/12_24O6L.jpg\n    SubjectSmall:\n      allOf:\n        - $ref: \"#/components/schemas/SubjectBase\"\n        - type: object\n          properties:\n            eps:\n              description: 话数\n              type: integer\n              example: 27\n            eps_count:\n              description: 话数\n              type: integer\n              example: 27\n            rating:\n              description: 评分\n              type: object\n              properties:\n                total:\n                  description: 总评分人数\n                  type: integer\n                  example: 2289\n                count:\n                  description: 各分值评分人数\n                  type: object\n                  properties:\n                    \"1\":\n                      type: integer\n                      example: 5\n                    \"2\":\n                      type: integer\n                      example: 3\n                    \"3\":\n                      type: integer\n                      example: 4\n                    \"4\":\n                      type: integer\n                      example: 6\n                    \"5\":\n                      type: integer\n                      example: 46\n                    \"6\":\n                      type: integer\n                      example: 267\n                    \"7\":\n                      type: integer\n                      example: 659\n                    \"8\":\n                      type: integer\n                      example: 885\n                    \"9\":\n                      type: integer\n                      example: 284\n                    \"10\":\n                      type: integer\n                      example: 130\n                score:\n                  description: 评分\n                  type: number\n                  example: 7.6\n            rank:\n              description: 排名\n              type: integer\n              example: 573\n            collection:\n              $ref: \"#/components/schemas/SubjectCollection\"\n    User:\n      description: 用户信息\n      type: object\n      properties:\n        id:\n          description: 用户 id\n          type: integer\n          example: 1\n        url:\n          description: 用户主页地址\n          type: string\n          example: http://bgm.tv/user/sai\n        username:\n          description: 用户名\n          type: string\n          example: sai\n        nickname:\n          description: 昵称\n          type: string\n          example: Sai\n        avatar:\n          description: 头像地址\n          type: object\n          properties:\n            large:\n              type: string\n              example: http://lain.bgm.tv/pic/user/l/000/00/00/1.jpg?r=1391790456\n            medium:\n              type: string\n              example: http://lain.bgm.tv/pic/user/m/000/00/00/1.jpg?r=1391790456\n            small:\n              type: string\n              example: http://lain.bgm.tv/pic/user/s/000/00/00/1.jpg?r=1391790456\n        sign:\n          description: 签名\n          type: string\n          example: Awesome!\n        usergroup:\n          $ref: \"v0.yaml#/components/schemas/UserGroup\"\n    StatusCode:\n      description: 响应状态（HTTP 状态码都为 200）\n      type: object\n      properties:\n        request:\n          description: 当前请求的地址\n          type: string\n        code:\n          description: \u003e-\n            状态码\n            \u003cbr\u003e 200 OK\n            \u003cbr\u003e 202 Accepted\n            \u003cbr\u003e 304 Not Modified\n            \u003cbr\u003e 30401 Not Modified: Collection already exists\n            \u003cbr\u003e 400 Bad Request\n            \u003cbr\u003e 40001 Error: Nothing found with that ID\n            \u003cbr\u003e 401 Unauthorized\n            \u003cbr\u003e 40101 Error: Auth failed over 5 times\n            \u003cbr\u003e 40102 Error: Username is not an Email address\n            \u003cbr\u003e 405 Method Not Allowed\n            \u003cbr\u003e 404 Not Found\n          type: integer\n          enum:\n            - 200\n            - 202\n            - 304\n            - 30401\n            - 400\n            - 40001\n            - 401\n            - 40101\n            - 40102\n            - 405\n            - 404\n        error:\n          description: 状态信息\n          type: string\n  responses:\n    Collection:\n      description: 条目收藏信息\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              status:\n                $ref: \"#/components/schemas/CollectionStatus\"\n              rating:\n                description: 评分\n                type: integer\n              comment:\n                description: 评论\n                type: string\n              private:\n                description: 收藏隐私\n                type: integer\n                enum:\n                  - 0\n                  - 1\n              tag:\n                description: 标签\n                type: array\n                items:\n                  type: string\n              ep_status:\n                description: 完成话数\n                type: integer\n              lasttouch:\n                description: 上次更新时间\n                type: integer\n              user:\n                $ref: \"#/components/schemas/User\"\n  parameters:\n    username:\n      name: username\n      in: path\n      description: 用户名\n        \u003cbr\u003e 也可使用 UID\n      required: true\n      schema:\n        type: string\n        example: sai\n    subject_id:\n      name: subject_id\n      in: path\n      description: 条目 ID\n      required: true\n      schema:\n        type: integer\n    ep_id:\n      name: id\n      in: path\n      description: 章节 ID\n      required: true\n      schema:\n        type: integer\n    ep_status:\n      name: status\n      in: path\n      description: 收视类型，参考 [EpStatusType](#model-EpStatusType)\n      required: true\n      schema:\n        $ref: \"#/components/schemas/EpStatusType\"\n    responseGroup:\n      name: responseGroup\n      in: query\n      description: 返回数据大小，参考 [ResponseGroup](#model-ResponseGroup)\n        \u003cbr\u003e 默认为 small\n      required: false\n      schema:\n        $ref: \"#/components/schemas/ResponseGroup\"\n    app_id:\n      name: app_id\n      in: query\n      description: \u003e-\n        [https://bgm.tv/dev/app](https://bgm.tv/dev/app) 申请到的 App ID\n      required: true\n      schema:\n        type: string\n  securitySchemes:\n    OptionalHTTPBearer:\n      type: \"http\"\n      description: |\n        Some api like getting a subject doesn't require any authorization. \n        But only authorized user can see NSFW recoed, non-authorized user get 404 response.\n        You can create a access token here [https://bgm.tv/dev/app](https://bgm.tv/dev/app)\n      scheme: \"bearer\"\n\n    HTTPBearer:\n      type: \"http\"\n      description: \"require a authorization\"\n      scheme: \"bearer\"\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"SubjectBase\": parse schema: allOf: [0]: parse schema: resolve \"#/components/schemas/SubjectLegacy\": parse schema: property \"type\": parse schema: resolve \"v0.yaml#/components/schemas/SubjectType\": find schema: external base \"v0.yaml\" is not supported"
}