{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/yonaskolb/SwagGen"
		},
		"file": {
			"name": "spec.json",
			"size": 0,
			"path": "Specs/TFL/spec.json",
			"byteSize": 264443,
			"content": "{\n   \"openapi\": \"3.0.0\",\n   \"info\": {\n     \"version\": \"v1\",\n     \"title\": \"Transport for London Unified API\"\n   },\n   \"paths\": {\n     \"/AccidentStats/{year}\": {\n       \"get\": {\n         \"tags\": [\n           \"AccidentStats\"\n         ],\n         \"summary\": \"Gets all accident details for accidents occuring in the specified year\",\n         \"operationId\": \"AccidentStats_Get\",\n         \"parameters\": [\n           {\n             \"name\": \"year\",\n             \"in\": \"path\",\n             \"description\": \"The year for which to filter the accidents on.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"integer\",\n               \"format\": \"int32\"\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/AccidentDetail\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/AccidentDetail\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/AccidentDetail\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/AccidentDetail\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/AirQuality\": {\n       \"get\": {\n         \"tags\": [\n           \"AirQuality\"\n         ],\n         \"summary\": \"Gets air quality data feed\",\n         \"operationId\": \"AirQuality_Get\",\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/Object\"\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/Object\"\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/Object\"\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/Object\"\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/BikePoint\": {\n       \"get\": {\n         \"tags\": [\n           \"BikePoint\"\n         ],\n         \"summary\": \"Gets all bike point locations. The Place object has an addtionalProperties array which contains the nbBikes, nbDocks and nbSpaces\\r\\n            numbers which give the status of the BikePoint. A mismatch in these numbers i.e. nbDocks - (nbBikes + nbSpaces) != 0 indicates broken docks.\",\n         \"operationId\": \"BikePoint_GetAll\",\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Place\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Place\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Place\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Place\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/BikePoint/{id}\": {\n       \"get\": {\n         \"tags\": [\n           \"BikePoint\"\n         ],\n         \"summary\": \"Gets the bike point with the given id.\",\n         \"operationId\": \"BikePoint_Get\",\n         \"parameters\": [\n           {\n             \"name\": \"id\",\n             \"in\": \"path\",\n             \"description\": \"A bike point id (a list of ids can be obtained from the above BikePoint call)\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/Place\"\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/Place\"\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/Place\"\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/Place\"\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/BikePoint/Search\": {\n       \"get\": {\n         \"tags\": [\n           \"BikePoint\"\n         ],\n         \"summary\": \"Search for bike stations by their name, a bike point's name often contains information about the name of the street\\r\\n            or nearby landmarks, for example. Note that the search result does not contain the PlaceProperties i.e. the status\\r\\n            or occupancy of the BikePoint, to get that information you should retrieve the BikePoint by its id on /BikePoint/id.\",\n         \"operationId\": \"BikePoint_Search\",\n         \"parameters\": [\n           {\n             \"name\": \"query\",\n             \"in\": \"query\",\n             \"description\": \"The search term e.g. \\\"St. James\\\"\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Place\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Place\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Place\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Place\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Cabwise/search\": {\n       \"get\": {\n         \"tags\": [\n           \"Cabwise\"\n         ],\n         \"summary\": \"Gets taxis and minicabs contact information\",\n         \"operationId\": \"Cabwise_Get\",\n         \"parameters\": [\n           {\n             \"name\": \"lat\",\n             \"in\": \"query\",\n             \"description\": \"Latitude\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"number\",\n               \"format\": \"double\"\n             }\n           },\n           {\n             \"name\": \"lon\",\n             \"in\": \"query\",\n             \"description\": \"Longitude\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"number\",\n               \"format\": \"double\"\n             }\n           },\n           {\n             \"name\": \"optype\",\n             \"in\": \"query\",\n             \"description\": \"Operator Type e.g Minicab, Executive, Limousine\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"wc\",\n             \"in\": \"query\",\n             \"description\": \"Wheelchair accessible\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"radius\",\n             \"in\": \"query\",\n             \"description\": \"The radius of the bounding circle in metres\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"number\",\n               \"format\": \"double\"\n             }\n           },\n           {\n             \"name\": \"name\",\n             \"in\": \"query\",\n             \"description\": \"Trading name of operating company\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"maxResults\",\n             \"in\": \"query\",\n             \"description\": \"An optional parameter to limit the number of results return. Default and maximum is 20.\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"integer\",\n               \"format\": \"int32\"\n             }\n           },\n           {\n             \"name\": \"legacyFormat\",\n             \"in\": \"query\",\n             \"description\": \"Legacy Format\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"boolean\"\n             }\n           },\n           {\n             \"name\": \"forceXml\",\n             \"in\": \"query\",\n             \"description\": \"Force Xml\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"boolean\"\n             }\n           },\n           {\n             \"name\": \"twentyFourSevenOnly\",\n             \"in\": \"query\",\n             \"description\": \"Twenty Four Seven Only\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"boolean\"\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/Object\"\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/Object\"\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/Object\"\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/Object\"\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Journey/Meta/Modes\": {\n       \"get\": {\n         \"tags\": [\n           \"Journey\"\n         ],\n         \"summary\": \"Gets a list of all of the available journey planner modes\",\n         \"operationId\": \"Journey_Meta\",\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Mode\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Mode\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Mode\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Mode\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Journey/JourneyResults/{from}/to/{to}\": {\n       \"get\": {\n         \"tags\": [\n           \"Journey\"\n         ],\n         \"summary\": \"Perform a Journey Planner search from the parameters specified in simple types\",\n         \"operationId\": \"Journey_JourneyResults\",\n         \"parameters\": [\n           {\n             \"name\": \"from\",\n             \"in\": \"path\",\n             \"description\": \"Origin of the journey. Can be WGS84 coordinates expressed as \\\"lat,long\\\", a UK postcode, a Naptan (StopPoint) id, an ICS StopId, or a free-text string (will cause disambiguation unless it exactly matches a point of interest name).\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"to\",\n             \"in\": \"path\",\n             \"description\": \"Destination of the journey. Can be WGS84 coordinates expressed as \\\"lat,long\\\", a UK postcode, a Naptan (StopPoint) id, an ICS StopId, or a free-text string (will cause disambiguation unless it exactly matches a point of interest name).\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"via\",\n             \"in\": \"query\",\n             \"description\": \"Travel through point on the journey. Can be WGS84 coordinates expressed as \\\"lat,long\\\", a UK postcode, a Naptan (StopPoint) id, an ICS StopId, or a free-text string (will cause disambiguation unless it exactly matches a point of interest name).\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"nationalSearch\",\n             \"in\": \"query\",\n             \"description\": \"Does the journey cover stops outside London? eg. \\\"nationalSearch=true\\\"\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"boolean\"\n             }\n           },\n           {\n             \"name\": \"date\",\n             \"in\": \"query\",\n             \"description\": \"The date must be in yyyyMMdd format\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"time\",\n             \"in\": \"query\",\n             \"description\": \"The time must be in HHmm format\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"timeIs\",\n             \"in\": \"query\",\n             \"description\": \"Does the time given relate to arrival or leaving time? Possible options: \\\"departing\\\" | \\\"arriving\\\"\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"string\",\n               \"enum\": [\n                 \"Arriving\",\n                 \"Departing\"\n               ]\n             }\n           },\n           {\n             \"name\": \"journeyPreference\",\n             \"in\": \"query\",\n             \"description\": \"The journey preference eg possible options: \\\"leastinterchange\\\" | \\\"leasttime\\\" | \\\"leastwalking\\\"\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"string\",\n               \"enum\": [\n                 \"LeastInterchange\",\n                 \"LeastTime\",\n                 \"LeastWalking\"\n               ]\n             }\n           },\n           {\n             \"name\": \"mode\",\n             \"in\": \"query\",\n             \"description\": \"The mode must be a comma separated list of modes. eg possible options: \\\"public-bus,overground,train,tube,coach,dlr,cablecar,tram,river,walking,cycle\\\"\",\n             \"required\": false,\n             \"explode\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\"\n               }\n             }\n           },\n           {\n             \"name\": \"accessibilityPreference\",\n             \"in\": \"query\",\n             \"description\": \"The accessibility preference must be a comma separated list eg. \\\"noSolidStairs,noEscalators,noElevators,stepFreeToVehicle,stepFreeToPlatform\\\"\",\n             \"required\": false,\n             \"explode\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\",\n                 \"enum\": [\n                   \"NoRequirements\",\n                   \"NoSolidStairs\",\n                   \"NoEscalators\",\n                   \"NoElevators\",\n                   \"StepFreeToVehicle\",\n                   \"StepFreeToPlatform\"\n                 ]\n               }\n             }\n           },\n           {\n             \"name\": \"fromName\",\n             \"in\": \"query\",\n             \"description\": \"An optional name to associate with the origin of the journey in the results.\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"toName\",\n             \"in\": \"query\",\n             \"description\": \"An optional name to associate with the destination of the journey in the results.\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"viaName\",\n             \"in\": \"query\",\n             \"description\": \"An optional name to associate with the via point of the journey in the results.\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"maxTransferMinutes\",\n             \"in\": \"query\",\n             \"description\": \"The max walking time in minutes for transfer eg. \\\"120\\\"\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"maxWalkingMinutes\",\n             \"in\": \"query\",\n             \"description\": \"The max walking time in minutes for journeys eg. \\\"120\\\"\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"walkingSpeed\",\n             \"in\": \"query\",\n             \"description\": \"The walking speed. eg possible options: \\\"slow\\\" | \\\"average\\\" | \\\"fast\\\".\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"string\",\n               \"enum\": [\n                 \"Slow\",\n                 \"Average\",\n                 \"Fast\"\n               ]\n             }\n           },\n           {\n             \"name\": \"cyclePreference\",\n             \"in\": \"query\",\n             \"description\": \"The cycle preference. eg possible options: \\\"allTheWay\\\" | \\\"leaveAtStation\\\" | \\\"takeOnTransport\\\" | \\\"cycleHire\\\"\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"string\",\n               \"enum\": [\n                 \"None\",\n                 \"LeaveAtStation\",\n                 \"TakeOnTransport\",\n                 \"AllTheWay\",\n                 \"CycleHire\"\n               ]\n             }\n           },\n           {\n             \"name\": \"adjustment\",\n             \"in\": \"query\",\n             \"description\": \"Time adjustment command. eg possible options: \\\"TripFirst\\\" | \\\"TripLast\\\"\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"bikeProficiency\",\n             \"in\": \"query\",\n             \"description\": \"A comma separated list of cycling proficiency levels. eg possible options: \\\"easy,moderate,fast\\\"\",\n             \"required\": false,\n             \"explode\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\",\n                 \"enum\": [\n                   \"Easy\",\n                   \"Moderate\",\n                   \"Fast\"\n                 ]\n               }\n             }\n           },\n           {\n             \"name\": \"alternativeCycle\",\n             \"in\": \"query\",\n             \"description\": \"Option to determine whether to return alternative cycling journey\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"boolean\"\n             }\n           },\n           {\n             \"name\": \"alternativeWalking\",\n             \"in\": \"query\",\n             \"description\": \"Option to determine whether to return alternative walking journey\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"boolean\"\n             }\n           },\n           {\n             \"name\": \"applyHtmlMarkup\",\n             \"in\": \"query\",\n             \"description\": \"Flag to determine whether certain text (e.g. walking instructions) should be output with HTML tags or not.\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"boolean\"\n             }\n           },\n           {\n             \"name\": \"useMultiModalCall\",\n             \"in\": \"query\",\n             \"description\": \"A boolean to indicate whether or not to return 3 public transport journeys, a bus journey, a cycle hire journey, a personal cycle journey and a walking journey\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"boolean\"\n             }\n           },\n           {\n             \"name\": \"walkingOptimization\",\n             \"in\": \"query\",\n             \"description\": \"A boolean to indicate whether to optimize journeys using walking\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"boolean\"\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/ItineraryResult\"\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/ItineraryResult\"\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/ItineraryResult\"\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/ItineraryResult\"\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Line/Meta/Modes\": {\n       \"get\": {\n         \"tags\": [\n           \"Line\"\n         ],\n         \"summary\": \"Gets a list of valid modes\",\n         \"operationId\": \"Line_MetaModes\",\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Mode\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Mode\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Mode\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Mode\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Line/Meta/Severity\": {\n       \"get\": {\n         \"tags\": [\n           \"Line\"\n         ],\n         \"summary\": \"Gets a list of valid severity codes\",\n         \"operationId\": \"Line_MetaSeverity\",\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/StatusSeverity\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/StatusSeverity\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/StatusSeverity\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/StatusSeverity\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Line/Meta/DisruptionCategories\": {\n       \"get\": {\n         \"tags\": [\n           \"Line\"\n         ],\n         \"summary\": \"Gets a list of valid disruption categories\",\n         \"operationId\": \"Line_MetaDisruptionCategories\",\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"type\": \"string\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"type\": \"string\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"type\": \"string\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"type\": \"string\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Line/Meta/ServiceTypes\": {\n       \"get\": {\n         \"tags\": [\n           \"Line\"\n         ],\n         \"summary\": \"Gets a list of valid ServiceTypes to filter on\",\n         \"operationId\": \"Line_MetaServiceTypes\",\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"type\": \"string\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"type\": \"string\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"type\": \"string\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"type\": \"string\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Line/{ids}\": {\n       \"get\": {\n         \"tags\": [\n           \"Line\"\n         ],\n         \"summary\": \"Gets lines that match the specified line ids.\",\n         \"operationId\": \"Line_Get\",\n         \"parameters\": [\n           {\n             \"name\": \"ids\",\n             \"in\": \"path\",\n             \"description\": \"A comma-separated list of line ids e.g. victoria,circle,N133. Max. approx. 20 ids.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\"\n               }\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Line\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Line\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Line\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Line\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Line/Mode/{modes}\": {\n       \"get\": {\n         \"tags\": [\n           \"Line\"\n         ],\n         \"summary\": \"Gets lines that serve the given modes.\",\n         \"operationId\": \"Line_GetByMode\",\n         \"parameters\": [\n           {\n             \"name\": \"modes\",\n             \"in\": \"path\",\n             \"description\": \"A comma-separated list of modes e.g. tube,dlr\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\"\n               }\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Line\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Line\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Line\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Line\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Line/Route\": {\n       \"get\": {\n         \"tags\": [\n           \"Line\"\n         ],\n         \"summary\": \"Get all valid routes for all lines, including the name and id of the originating and terminating stops for each route.\",\n         \"operationId\": \"Line_Route\",\n         \"parameters\": [\n           {\n             \"name\": \"serviceTypes\",\n             \"in\": \"query\",\n             \"description\": \"A comma separated list of service types to filter on. Supported values: Regular, Night. Defaulted to 'Regular' if not specified\",\n             \"required\": false,\n             \"explode\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\",\n                 \"enum\": [\n                   \"Regular\",\n                   \"Night\"\n                 ]\n               }\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Line\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Line\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Line\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Line\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Line/{ids}/Route\": {\n       \"get\": {\n         \"tags\": [\n           \"Line\"\n         ],\n         \"summary\": \"Get all valid routes for given line ids, including the name and id of the originating and terminating stops for each route.\",\n         \"operationId\": \"Line_LineRoutesByIds\",\n         \"parameters\": [\n           {\n             \"name\": \"ids\",\n             \"in\": \"path\",\n             \"description\": \"A comma-separated list of line ids e.g. victoria,circle,N133. Max. approx. 20 ids.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\"\n               }\n             }\n           },\n           {\n             \"name\": \"serviceTypes\",\n             \"in\": \"query\",\n             \"description\": \"A comma separated list of service types to filter on. Supported values: Regular, Night. Defaulted to 'Regular' if not specified\",\n             \"required\": false,\n             \"explode\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\",\n                 \"enum\": [\n                   \"Regular\",\n                   \"Night\"\n                 ]\n               }\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Line\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Line\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Line\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Line\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Line/Mode/{modes}/Route\": {\n       \"get\": {\n         \"tags\": [\n           \"Line\"\n         ],\n         \"summary\": \"Gets all lines and their valid routes for given modes, including the name and id of the originating and terminating stops for each route\",\n         \"operationId\": \"Line_RouteByMode\",\n         \"parameters\": [\n           {\n             \"name\": \"modes\",\n             \"in\": \"path\",\n             \"description\": \"A comma-separated list of modes e.g. tube,dlr\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\"\n               }\n             }\n           },\n           {\n             \"name\": \"serviceTypes\",\n             \"in\": \"query\",\n             \"description\": \"A comma separated list of service types to filter on. Supported values: Regular, Night. Defaulted to 'Regular' if not specified\",\n             \"required\": false,\n             \"explode\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\",\n                 \"enum\": [\n                   \"Regular\",\n                   \"Night\"\n                 ]\n               }\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Line\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Line\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Line\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Line\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Line/{id}/Route/Sequence/{direction}\": {\n       \"get\": {\n         \"tags\": [\n           \"Line\"\n         ],\n         \"summary\": \"Gets all valid routes for given line id, including the sequence of stops on each route.\",\n         \"operationId\": \"Line_RouteSequence\",\n         \"parameters\": [\n           {\n             \"name\": \"id\",\n             \"in\": \"path\",\n             \"description\": \"A single line id e.g. victoria\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"direction\",\n             \"in\": \"path\",\n             \"description\": \"The direction of travel. Can be inbound or outbound.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\",\n               \"enum\": [\n                 \"inbound\",\n                 \"outbound\",\n                 \"all\"\n               ]\n             }\n           },\n           {\n             \"name\": \"serviceTypes\",\n             \"in\": \"query\",\n             \"description\": \"A comma separated list of service types to filter on. Supported values: Regular, Night. Defaulted to 'Regular' if not specified\",\n             \"required\": false,\n             \"explode\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\",\n                 \"enum\": [\n                   \"Regular\",\n                   \"Night\"\n                 ]\n               }\n             }\n           },\n           {\n             \"name\": \"excludeCrowding\",\n             \"in\": \"query\",\n             \"description\": \"That excludes crowding from line disruptions. Can be true or false.\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"boolean\"\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/RouteSequence\"\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/RouteSequence\"\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/RouteSequence\"\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/RouteSequence\"\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Line/{ids}/Status/{StartDate}/to/{EndDate}\": {\n       \"get\": {\n         \"tags\": [\n           \"Line\"\n         ],\n         \"summary\": \"Gets the line status for given line ids during the provided dates e.g Minor Delays\",\n         \"operationId\": \"Get_Line_Status\",\n         \"parameters\": [\n           {\n             \"name\": \"ids\",\n             \"in\": \"path\",\n             \"description\": \"A comma-separated list of line ids e.g. victoria,circle,N133. Max. approx. 20 ids.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\"\n               }\n             }\n           },\n           {\n             \"name\": \"detail\",\n             \"in\": \"query\",\n             \"description\": \"Include details of the disruptions that are causing the line status including the affected stops and routes\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"boolean\"\n             }\n           },\n           {\n             \"name\": \"startDate\",\n             \"in\": \"query\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"endDate\",\n             \"in\": \"query\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"dateRange.startDate\",\n             \"in\": \"query\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"string\",\n               \"format\": \"date-time\"\n             }\n           },\n           {\n             \"name\": \"dateRange.endDate\",\n             \"in\": \"query\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"string\",\n               \"format\": \"date-time\"\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Line\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Line\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Line\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Line\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Line/{ids}/Status\": {\n       \"get\": {\n         \"tags\": [\n           \"Line\"\n         ],\n         \"summary\": \"Gets the line status of for given line ids e.g Minor Delays\",\n         \"operationId\": \"Line_StatusByIds\",\n         \"parameters\": [\n           {\n             \"name\": \"ids\",\n             \"in\": \"path\",\n             \"description\": \"A comma-separated list of line ids e.g. victoria,circle,N133. Max. approx. 20 ids.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\"\n               }\n             }\n           },\n           {\n             \"name\": \"detail\",\n             \"in\": \"query\",\n             \"description\": \"Include details of the disruptions that are causing the line status including the affected stops and routes\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"boolean\"\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Line\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Line\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Line\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Line\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Line/Search/{query}\": {\n       \"get\": {\n         \"tags\": [\n           \"Line\"\n         ],\n         \"summary\": \"Search for lines or routes matching the query string\",\n         \"operationId\": \"Line_Search\",\n         \"parameters\": [\n           {\n             \"name\": \"query\",\n             \"in\": \"path\",\n             \"description\": \"Search term e.g victoria\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"modes\",\n             \"in\": \"query\",\n             \"description\": \"Optionally filter by the specified modes\",\n             \"required\": false,\n             \"explode\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\"\n               }\n             }\n           },\n           {\n             \"name\": \"serviceTypes\",\n             \"in\": \"query\",\n             \"description\": \"A comma separated list of service types to filter on. Supported values: Regular, Night. Defaulted to 'Regular' if not specified\",\n             \"required\": false,\n             \"explode\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\",\n                 \"enum\": [\n                   \"Regular\",\n                   \"Night\"\n                 ]\n               }\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/RouteSearchResponse\"\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/RouteSearchResponse\"\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/RouteSearchResponse\"\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/RouteSearchResponse\"\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Line/Status/{severity}\": {\n       \"get\": {\n         \"tags\": [\n           \"Line\"\n         ],\n         \"summary\": \"Gets the line status for all lines with a given severity\\r\\n            A list of valid severity codes can be obtained from a call to Line/Meta/Severity\",\n         \"operationId\": \"Line_StatusBySeverity\",\n         \"parameters\": [\n           {\n             \"name\": \"severity\",\n             \"in\": \"path\",\n             \"description\": \"The level of severity (eg: a number from 0 to 14)\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"integer\",\n               \"format\": \"int32\"\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Line\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Line\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Line\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Line\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Line/Mode/{modes}/Status\": {\n       \"get\": {\n         \"tags\": [\n           \"Line\"\n         ],\n         \"summary\": \"Gets the line status of for all lines for the given modes\",\n         \"operationId\": \"Line_StatusByMode\",\n         \"parameters\": [\n           {\n             \"name\": \"modes\",\n             \"in\": \"path\",\n             \"description\": \"A comma-separated list of modes to filter by. e.g. tube,dlr\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\"\n               }\n             }\n           },\n           {\n             \"name\": \"detail\",\n             \"in\": \"query\",\n             \"description\": \"Include details of the disruptions that are causing the line status including the affected stops and routes\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"boolean\"\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Line\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Line\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Line\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Line\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Line/{id}/StopPoints\": {\n       \"get\": {\n         \"tags\": [\n           \"Line\"\n         ],\n         \"summary\": \"Gets a list of the stations that serve the given line id\",\n         \"operationId\": \"Line_StopPoints\",\n         \"parameters\": [\n           {\n             \"name\": \"id\",\n             \"in\": \"path\",\n             \"description\": \"A single line id e.g. victoria\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/StopPoint\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/StopPoint\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/StopPoint\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/StopPoint\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Line/{id}/Timetable/{fromStopPointId}\": {\n       \"get\": {\n         \"tags\": [\n           \"Line\"\n         ],\n         \"summary\": \"Gets the timetable for a specified station on the give line\",\n         \"operationId\": \"Line_Timetable\",\n         \"parameters\": [\n           {\n             \"name\": \"fromStopPointId\",\n             \"in\": \"path\",\n             \"description\": \"The originating station's stop point id (station naptan code e.g. 940GZZLUASL, you can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name)\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"id\",\n             \"in\": \"path\",\n             \"description\": \"A single line id e.g. victoria\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/TimetableResponse\"\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/TimetableResponse\"\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/TimetableResponse\"\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/TimetableResponse\"\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Line/{id}/Timetable/{fromStopPointId}/to/{toStopPointId}\": {\n       \"get\": {\n         \"tags\": [\n           \"Line\"\n         ],\n         \"summary\": \"Gets the timetable for a specified station on the give line with specified destination\",\n         \"operationId\": \"Line_TimetableTo\",\n         \"parameters\": [\n           {\n             \"name\": \"fromStopPointId\",\n             \"in\": \"path\",\n             \"description\": \"The originating station's stop point id (station naptan code e.g. 940GZZLUASL, you can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name)\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"id\",\n             \"in\": \"path\",\n             \"description\": \"A single line id e.g. victoria\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"toStopPointId\",\n             \"in\": \"path\",\n             \"description\": \"The destination stations's Naptan code\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/TimetableResponse\"\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/TimetableResponse\"\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/TimetableResponse\"\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/TimetableResponse\"\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Line/{ids}/Disruption\": {\n       \"get\": {\n         \"tags\": [\n           \"Line\"\n         ],\n         \"summary\": \"Get disruptions for the given line ids\",\n         \"operationId\": \"Line_Disruption\",\n         \"parameters\": [\n           {\n             \"name\": \"ids\",\n             \"in\": \"path\",\n             \"description\": \"A comma-separated list of line ids e.g. victoria,circle,N133. Max. approx. 20 ids.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\"\n               }\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Disruption\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Disruption\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Disruption\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Disruption\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Line/Mode/{modes}/Disruption\": {\n       \"get\": {\n         \"tags\": [\n           \"Line\"\n         ],\n         \"summary\": \"Get disruptions for all lines of the given modes.\",\n         \"operationId\": \"Line_DisruptionByMode\",\n         \"parameters\": [\n           {\n             \"name\": \"modes\",\n             \"in\": \"path\",\n             \"description\": \"A comma-separated list of modes e.g. tube,dlr\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\"\n               }\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Disruption\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Disruption\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Disruption\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Disruption\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Line/{ids}/Arrivals\": {\n       \"get\": {\n         \"tags\": [\n           \"Line\"\n         ],\n         \"summary\": \"Get the list of arrival predictions for given line ids based at the given stop\",\n         \"operationId\": \"getLineArrivals\",\n         \"parameters\": [\n           {\n             \"name\": \"stopPointId\",\n             \"in\": \"query\",\n             \"description\": \"Id of stop to get arrival predictions for (station naptan code e.g. 940GZZLUASL, you can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name)\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"ids\",\n             \"in\": \"path\",\n             \"description\": \"A comma-separated list of line ids e.g. victoria,circle,N133. Max. approx. 20 ids.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\"\n               }\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Prediction\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Prediction\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Prediction\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Prediction\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Line/{ids}/Arrivals/{stopPointId}\": {\n       \"get\": {\n         \"tags\": [\n           \"Line\"\n         ],\n         \"summary\": \"Get the list of arrival predictions for given line ids based at the given stop going in the procided direction\",\n         \"operationId\": \"getLineArrivalsByPath\",\n         \"parameters\": [\n           {\n             \"name\": \"stopPointId\",\n             \"in\": \"path\",\n             \"description\": \"Id of stop to get arrival predictions for (station naptan code e.g. 940GZZLUASL, you can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name)\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"ids\",\n             \"in\": \"path\",\n             \"description\": \"A comma-separated list of line ids e.g. victoria,circle,N133. Max. approx. 20 ids.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\"\n               }\n             }\n           },\n           {\n             \"name\": \"direction\",\n             \"in\": \"query\",\n             \"description\": \"The direction of travel. Can be inbound or outbound\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\",\n               \"enum\": [\n                 \"inbound\",\n                 \"outbound\",\n                 \"all\"\n               ]\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Prediction\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Prediction\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Prediction\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Prediction\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Mode/ActiveServiceTypes\": {\n       \"get\": {\n         \"tags\": [\n           \"Mode\"\n         ],\n         \"summary\": \"Returns the service type active for a mode.\\r\\n            Currently only supports tube\",\n         \"operationId\": \"Mode_GetActiveServiceTypes\",\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/ActiveServiceType\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/ActiveServiceType\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/ActiveServiceType\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/ActiveServiceType\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Mode/{mode}/Arrivals\": {\n       \"get\": {\n         \"tags\": [\n           \"Mode\"\n         ],\n         \"summary\": \"Gets the next arrival predictions for all stops of a given mode\",\n         \"operationId\": \"Mode_Arrivals\",\n         \"parameters\": [\n           {\n             \"name\": \"mode\",\n             \"in\": \"path\",\n             \"description\": \"A mode name e.g. tube, dlr\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"count\",\n             \"in\": \"query\",\n             \"description\": \"A number of arrivals to return for each stop, -1 to return all available.\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"integer\",\n               \"format\": \"int32\"\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Prediction\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Prediction\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Prediction\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Prediction\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Occupancy/CarPark/{id}\": {\n       \"get\": {\n         \"tags\": [\n           \"Occupancy\"\n         ],\n         \"summary\": \"Gets the occupancy for a car park with a given id\",\n         \"operationId\": \"getOccupant\",\n         \"parameters\": [\n           {\n             \"name\": \"id\",\n             \"in\": \"path\",\n             \"description\": \"\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/CarParkOccupancy\"\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/CarParkOccupancy\"\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/CarParkOccupancy\"\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/CarParkOccupancy\"\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Occupancy/CarPark\": {\n       \"get\": {\n         \"tags\": [\n           \"Occupancy\"\n         ],\n         \"summary\": \"Gets the occupancy for all car parks that have occupancy data\",\n         \"operationId\": \"getOccupants\",\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/CarParkOccupancy\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/CarParkOccupancy\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/CarParkOccupancy\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/CarParkOccupancy\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Place/Meta/Categories\": {\n       \"get\": {\n         \"tags\": [\n           \"Place\"\n         ],\n         \"summary\": \"Gets a list of all of the available place property categories and keys.\",\n         \"operationId\": \"Place_MetaCategories\",\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/PlaceCategory\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/PlaceCategory\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/PlaceCategory\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/PlaceCategory\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Place/Meta/PlaceTypes\": {\n       \"get\": {\n         \"tags\": [\n           \"Place\"\n         ],\n         \"summary\": \"Gets a list of the available types of Place.\",\n         \"operationId\": \"Place_MetaPlaceTypes\",\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/PlaceCategory\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/PlaceCategory\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/PlaceCategory\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/PlaceCategory\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Place/Address/Streets/{Postcode}\": {\n       \"get\": {\n         \"tags\": [\n           \"Place\"\n         ],\n         \"summary\": \"Gets the set of streets associated with a post code.\",\n         \"operationId\": \"Place_GetStreetsByPostCode\",\n         \"parameters\": [\n           {\n             \"name\": \"postcode\",\n             \"in\": \"query\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"postcodeInput.postcode\",\n             \"in\": \"query\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"string\",\n               \"pattern\": \"^(([gG][iI][rR] {0,}0[aA]{2})|((([a-pr-uwyzA-PR-UWYZ][a-hk-yA-HK-Y]?[0-9][0-9]?)|(([a-pr-uwyzA-PR-UWYZ][0-9][a-hjkstuwA-HJKSTUW])|([a-pr-uwyzA-PR-UWYZ][a-hk-yA-HK-Y][0-9][abehmnprv-yABEHMNPRV-Y]))) {0,}[0-9][abd-hjlnp-uw-zABD-HJLNP-UW-Z]{2}))$\"\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/Object\"\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/Object\"\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/Object\"\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/Object\"\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Place/Type/{types}\": {\n       \"get\": {\n         \"tags\": [\n           \"Place\"\n         ],\n         \"summary\": \"Gets all places of a given type\",\n         \"operationId\": \"Place_GetByType\",\n         \"parameters\": [\n           {\n             \"name\": \"types\",\n             \"in\": \"path\",\n             \"description\": \"A comma-separated list of the types to return. Max. approx 12 types.\\r\\n            A valid list of place types can be obtained from the /Place/Meta/placeTypes endpoint.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\"\n               }\n             }\n           },\n           {\n             \"name\": \"activeOnly\",\n             \"in\": \"query\",\n             \"description\": \"An optional parameter to limit the results to active records only (Currently only the 'VariableMessageSign' place type is supported)\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"boolean\"\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Place\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Place\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Place\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Place\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Place/{id}\": {\n       \"get\": {\n         \"tags\": [\n           \"Place\"\n         ],\n         \"summary\": \"Gets the place with the given id.\",\n         \"operationId\": \"Place_Get\",\n         \"parameters\": [\n           {\n             \"name\": \"id\",\n             \"in\": \"path\",\n             \"description\": \"The id of the place, you can use the /Place/Types/{types} endpoint to get a list of places for a given type including their ids\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"includeChildren\",\n             \"in\": \"query\",\n             \"description\": \"Defaults to false. If true child places e.g. individual charging stations at a charge point while be included, otherwise just the URLs of any child places will be returned\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"boolean\"\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Place\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Place\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Place\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Place\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Place\": {\n       \"get\": {\n         \"tags\": [\n           \"Place\"\n         ],\n         \"summary\": \"Gets the places that lie within the bounding box defined by the lat/lon of its north-west and south-east corners. Optionally filters\\r\\n            on type and can strip properties for a smaller payload.\",\n         \"operationId\": \"Place_GetByGeoBox\",\n         \"parameters\": [\n           {\n             \"name\": \"categories\",\n             \"in\": \"query\",\n             \"description\": \"an optional list of comma separated property categories to return in the Place's property bag. If null or empty, all categories of property are returned. Pass the keyword \\\"none\\\" to return no properties (a valid list of categories can be obtained from the /Place/Meta/categories endpoint)\",\n             \"required\": false,\n             \"explode\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\"\n               }\n             }\n           },\n           {\n             \"name\": \"includeChildren\",\n             \"in\": \"query\",\n             \"description\": \"Defaults to false. If true child places e.g. individual charging stations at a charge point while be included, otherwise just the URLs of any child places will be returned\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"boolean\"\n             }\n           },\n           {\n             \"name\": \"type\",\n             \"in\": \"query\",\n             \"description\": \"place types to filter on, or null to return all types\",\n             \"required\": false,\n             \"explode\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\"\n               }\n             }\n           },\n           {\n             \"name\": \"activeOnly\",\n             \"in\": \"query\",\n             \"description\": \"An optional parameter to limit the results to active records only (Currently only the 'VariableMessageSign' place type is supported)\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"boolean\"\n             }\n           },\n           {\n             \"name\": \"bbBoxpoints.swLat\",\n             \"in\": \"query\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"number\",\n               \"format\": \"double\"\n             }\n           },\n           {\n             \"name\": \"bbBoxpoints.swLon\",\n             \"in\": \"query\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"number\",\n               \"format\": \"double\"\n             }\n           },\n           {\n             \"name\": \"bbBoxpoints.neLat\",\n             \"in\": \"query\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"number\",\n               \"format\": \"double\"\n             }\n           },\n           {\n             \"name\": \"bbBoxpoints.neLon\",\n             \"in\": \"query\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"number\",\n               \"format\": \"double\"\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/StopPoint\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/StopPoint\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/StopPoint\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/StopPoint\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Place/{type}/At/{Lat}/{Lon}\": {\n       \"get\": {\n         \"tags\": [\n           \"Place\"\n         ],\n         \"summary\": \"Gets any places of the given type whose geography intersects the given latitude and longitude. In practice this means the Place\\r\\n            must be polygonal e.g. a BoroughBoundary.\",\n         \"operationId\": \"Place_GetAt\",\n         \"parameters\": [\n           {\n             \"name\": \"type\",\n             \"in\": \"path\",\n             \"description\": \"The place type (a valid list of place types can be obtained from the /Place/Meta/placeTypes endpoint)\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\"\n               }\n             }\n           },\n           {\n             \"name\": \"lat\",\n             \"in\": \"query\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"lon\",\n             \"in\": \"query\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"location.lat\",\n             \"in\": \"query\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"number\",\n               \"format\": \"double\"\n             }\n           },\n           {\n             \"name\": \"location.lon\",\n             \"in\": \"query\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"number\",\n               \"format\": \"double\"\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/Object\"\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/Object\"\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/Object\"\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/Object\"\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Place/{type}/overlay/{z}/{Lat}/{Lon}/{width}/{height}\": {\n       \"get\": {\n         \"tags\": [\n           \"Place\"\n         ],\n         \"summary\": \"Gets the place overlay for a given set of co-ordinates and a given width/height.\",\n         \"operationId\": \"Place_GetOverlay\",\n         \"parameters\": [\n           {\n             \"name\": \"z\",\n             \"in\": \"path\",\n             \"description\": \"The zoom level\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"integer\",\n               \"format\": \"int32\"\n             }\n           },\n           {\n             \"name\": \"type\",\n             \"in\": \"path\",\n             \"description\": \"The place type (a valid list of place types can be obtained from the /Place/Meta/placeTypes endpoint)\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\"\n               }\n             }\n           },\n           {\n             \"name\": \"width\",\n             \"in\": \"path\",\n             \"description\": \"The width of the requested overlay.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"integer\",\n               \"format\": \"int32\"\n             }\n           },\n           {\n             \"name\": \"height\",\n             \"in\": \"path\",\n             \"description\": \"The height of the requested overlay.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"integer\",\n               \"format\": \"int32\"\n             }\n           },\n           {\n             \"name\": \"lat\",\n             \"in\": \"query\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"lon\",\n             \"in\": \"query\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"location.lat\",\n             \"in\": \"query\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"number\",\n               \"format\": \"double\"\n             }\n           },\n           {\n             \"name\": \"location.lon\",\n             \"in\": \"query\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"number\",\n               \"format\": \"double\"\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/Object\"\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/Object\"\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/Object\"\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/Object\"\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Place/Search\": {\n       \"get\": {\n         \"tags\": [\n           \"Place\"\n         ],\n         \"summary\": \"Gets all places that matches the given query\",\n         \"operationId\": \"Place_Search\",\n         \"parameters\": [\n           {\n             \"name\": \"name\",\n             \"in\": \"query\",\n             \"description\": \"The name of the place, you can use the /Place/Types/{types} endpoint to get a list of places for a given type including their names.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"types\",\n             \"in\": \"query\",\n             \"description\": \"A comma-separated list of the types to return. Max. approx 12 types.\",\n             \"required\": false,\n             \"explode\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\"\n               }\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Place\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Place\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Place\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Place\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Road\": {\n       \"get\": {\n         \"tags\": [\n           \"Road\"\n         ],\n         \"summary\": \"Gets all roads managed by TfL\",\n         \"operationId\": \"getRoads\",\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/RoadCorridor\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/RoadCorridor\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/RoadCorridor\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/RoadCorridor\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Road/{ids}\": {\n       \"get\": {\n         \"tags\": [\n           \"Road\"\n         ],\n         \"summary\": \"Gets the road with the specified id (e.g. A1)\",\n         \"operationId\": \"getRoad\",\n         \"parameters\": [\n           {\n             \"name\": \"ids\",\n             \"in\": \"path\",\n             \"description\": \"Comma-separated list of road identifiers e.g. \\\"A406, A2\\\" (a full list of supported road identifiers can be found at the /Road/ endpoint)\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\"\n               }\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/RoadCorridor\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/RoadCorridor\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/RoadCorridor\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/RoadCorridor\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Road/{ids}/Status\": {\n       \"get\": {\n         \"tags\": [\n           \"Road\"\n         ],\n         \"summary\": \"Gets the specified roads with the status aggregated over the date range specified, or now until the end of today if no dates are passed.\",\n         \"operationId\": \"Road_Status\",\n         \"parameters\": [\n           {\n             \"name\": \"ids\",\n             \"in\": \"path\",\n             \"description\": \"Comma-separated list of road identifiers e.g. \\\"A406, A2\\\" or use \\\"all\\\" to ignore id filter (a full list of supported road identifiers can be found at the /Road/ endpoint)\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\"\n               }\n             }\n           },\n           {\n             \"name\": \"dateRangeNullable.startDate\",\n             \"in\": \"query\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"string\",\n               \"format\": \"date-time\"\n             }\n           },\n           {\n             \"name\": \"dateRangeNullable.endDate\",\n             \"in\": \"query\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"string\",\n               \"format\": \"date-time\"\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/RoadCorridor\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/RoadCorridor\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/RoadCorridor\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/RoadCorridor\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Road/{ids}/Disruption\": {\n       \"get\": {\n         \"tags\": [\n           \"Road\"\n         ],\n         \"summary\": \"Get active disruptions, filtered by road ids\",\n         \"operationId\": \"Get_Road_Disruption\",\n         \"parameters\": [\n           {\n             \"name\": \"ids\",\n             \"in\": \"path\",\n             \"description\": \"Comma-separated list of road identifiers e.g. \\\"A406, A2\\\" use all for all to ignore id filter (a full list of supported road identifiers can be found at the /Road/ endpoint)\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\"\n               }\n             }\n           },\n           {\n             \"name\": \"stripContent\",\n             \"in\": \"query\",\n             \"description\": \"Optional, defaults to false. When true, removes every property/node except for id, point, severity, severityDescription, startDate, endDate, corridor details, location, comments and streets\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"boolean\"\n             }\n           },\n           {\n             \"name\": \"severities\",\n             \"in\": \"query\",\n             \"description\": \"an optional list of Severity names to filter on (a valid list of severities can be obtained from the /Road/Meta/severities endpoint)\",\n             \"required\": false,\n             \"explode\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\"\n               }\n             }\n           },\n           {\n             \"name\": \"categories\",\n             \"in\": \"query\",\n             \"description\": \"an optional list of category names to filter on (a valid list of categories can be obtained from the /Road/Meta/categories endpoint)\",\n             \"required\": false,\n             \"explode\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\"\n               }\n             }\n           },\n           {\n             \"name\": \"closures\",\n             \"in\": \"query\",\n             \"description\": \"Optional, defaults to true. When true, always includes disruptions that have road closures, regardless of the severity filter. When false, the severity filter works as normal.\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"boolean\"\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/RoadDisruption\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/RoadDisruption\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/RoadDisruption\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/RoadDisruption\"\n                   }\n                 }\n               },\n               \"application/geo+json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/RoadDisruption\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Road/all/Street/Disruption\": {\n       \"get\": {\n         \"tags\": [\n           \"Road\"\n         ],\n         \"summary\": \"Gets a list of disrupted streets. If no date filters are provided, current disruptions are returned.\",\n         \"operationId\": \"Road_DisruptedStreets\",\n         \"parameters\": [\n           {\n             \"name\": \"startDate\",\n             \"in\": \"query\",\n             \"description\": \"Optional, the start time to filter on.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\",\n               \"format\": \"date-time\"\n             }\n           },\n           {\n             \"name\": \"endDate\",\n             \"in\": \"query\",\n             \"description\": \"Optional, The end time to filter on.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\",\n               \"format\": \"date-time\"\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/Object\"\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/Object\"\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/Object\"\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/Object\"\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Road/all/Disruption/{disruptionIds}\": {\n       \"get\": {\n         \"tags\": [\n           \"Road\"\n         ],\n         \"summary\": \"Gets a list of active disruptions filtered by disruption Ids.\",\n         \"operationId\": \"Road_DisruptionById\",\n         \"parameters\": [\n           {\n             \"name\": \"disruptionIds\",\n             \"in\": \"path\",\n             \"description\": \"Comma-separated list of disruption identifiers to filter by.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\"\n               }\n             }\n           },\n           {\n             \"name\": \"stripContent\",\n             \"in\": \"query\",\n             \"description\": \"Optional, defaults to false. When true, removes every property/node except for id, point, severity, severityDescription, startDate, endDate, corridor details, location and comments.\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"boolean\"\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/RoadDisruption\"\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/RoadDisruption\"\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/RoadDisruption\"\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/RoadDisruption\"\n                 }\n               },\n               \"application/geo+json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/RoadDisruption\"\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Road/Meta/Categories\": {\n       \"get\": {\n         \"tags\": [\n           \"Road\"\n         ],\n         \"summary\": \"Gets a list of valid RoadDisruption categories\",\n         \"operationId\": \"Road_MetaCategories\",\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"type\": \"string\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"type\": \"string\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"type\": \"string\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"type\": \"string\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Road/Meta/Severities\": {\n       \"get\": {\n         \"tags\": [\n           \"Road\"\n         ],\n         \"summary\": \"Gets a list of valid RoadDisruption severity codes\",\n         \"operationId\": \"Road_MetaSeverities\",\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/StatusSeverity\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/StatusSeverity\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/StatusSeverity\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/StatusSeverity\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Search\": {\n       \"get\": {\n         \"tags\": [\n           \"Search\"\n         ],\n         \"summary\": \"Search the site for occurrences of the query string. The maximum number of results returned is equal to the maximum page size\\r\\n            of 100. To return subsequent pages, use the paginated overload.\",\n         \"operationId\": \"Search_Get\",\n         \"parameters\": [\n           {\n             \"name\": \"query\",\n             \"in\": \"query\",\n             \"description\": \"The search query\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/SearchResponse\"\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/SearchResponse\"\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/SearchResponse\"\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/SearchResponse\"\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Search/BusSchedules\": {\n       \"get\": {\n         \"tags\": [\n           \"Search\"\n         ],\n         \"summary\": \"Searches the bus schedules folder on S3 for a given bus number.\",\n         \"operationId\": \"Search_BusSchedules\",\n         \"parameters\": [\n           {\n             \"name\": \"query\",\n             \"in\": \"query\",\n             \"description\": \"The search query\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/SearchResponse\"\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/SearchResponse\"\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/SearchResponse\"\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/SearchResponse\"\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Search/Meta/SearchProviders\": {\n       \"get\": {\n         \"tags\": [\n           \"Search\"\n         ],\n         \"summary\": \"Gets the available searchProvider names.\",\n         \"operationId\": \"Search_MetaSearchProviders\",\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"type\": \"string\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"type\": \"string\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"type\": \"string\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"type\": \"string\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Search/Meta/Categories\": {\n       \"get\": {\n         \"tags\": [\n           \"Search\"\n         ],\n         \"summary\": \"Gets the available search categories.\",\n         \"operationId\": \"Search_MetaCategories\",\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"type\": \"string\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"type\": \"string\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"type\": \"string\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"type\": \"string\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Search/Meta/Sorts\": {\n       \"get\": {\n         \"tags\": [\n           \"Search\"\n         ],\n         \"summary\": \"Gets the available sorting options.\",\n         \"operationId\": \"Search_MetaSorts\",\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"type\": \"string\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"type\": \"string\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"type\": \"string\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"type\": \"string\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/StopPoint/Meta/Categories\": {\n       \"get\": {\n         \"tags\": [\n           \"StopPoint\"\n         ],\n         \"summary\": \"Gets the list of available StopPoint additional information categories\",\n         \"operationId\": \"StopPoint_MetaCategories\",\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/StopPointCategory\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/StopPointCategory\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/StopPointCategory\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/StopPointCategory\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/StopPoint/Meta/StopTypes\": {\n       \"get\": {\n         \"tags\": [\n           \"StopPoint\"\n         ],\n         \"summary\": \"Gets the list of available StopPoint types\",\n         \"operationId\": \"StopPoint_MetaStopTypes\",\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"type\": \"string\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"type\": \"string\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"type\": \"string\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"type\": \"string\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/StopPoint/Meta/Modes\": {\n       \"get\": {\n         \"tags\": [\n           \"StopPoint\"\n         ],\n         \"summary\": \"Gets the list of available StopPoint modes\",\n         \"operationId\": \"StopPoint_MetaModes\",\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Mode\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Mode\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Mode\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Mode\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/StopPoint/{ids}\": {\n       \"get\": {\n         \"tags\": [\n           \"StopPoint\"\n         ],\n         \"summary\": \"Gets a list of StopPoints corresponding to the given list of stop ids.\",\n         \"operationId\": \"StopPoint_Get\",\n         \"parameters\": [\n           {\n             \"name\": \"ids\",\n             \"in\": \"path\",\n             \"description\": \"A comma-separated list of stop point ids (station naptan code e.g. 940GZZLUASL). Max. approx. 20 ids.\\r\\n            You can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\"\n               }\n             }\n           },\n           {\n             \"name\": \"includeCrowdingData\",\n             \"in\": \"query\",\n             \"description\": \"Include the crowding data (static). To Filter further use: /StopPoint/{ids}/Crowding/{line}\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"boolean\"\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/StopPoint\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/StopPoint\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/StopPoint\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/StopPoint\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/StopPoint/{id}/Crowding/{line}\": {\n       \"get\": {\n         \"tags\": [\n           \"StopPoint\"\n         ],\n         \"summary\": \"Gets all the Crowding data (static) for the StopPointId, plus crowding data for a given line and optionally a particular direction.\",\n         \"operationId\": \"StopPoint_Crowding\",\n         \"parameters\": [\n           {\n             \"name\": \"id\",\n             \"in\": \"path\",\n             \"description\": \"The Naptan id of the stop\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"line\",\n             \"in\": \"path\",\n             \"description\": \"A particular line e.g. victoria, circle, northern etc.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"direction\",\n             \"in\": \"query\",\n             \"description\": \"The direction of travel. Can be inbound or outbound.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\",\n               \"enum\": [\n                 \"inbound\",\n                 \"outbound\",\n                 \"all\"\n               ]\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/StopPoint\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/StopPoint\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/StopPoint\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/StopPoint\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/StopPoint/Type/{types}\": {\n       \"get\": {\n         \"tags\": [\n           \"StopPoint\"\n         ],\n         \"summary\": \"Gets all stop points of a given type\",\n         \"operationId\": \"StopPoint_GetByType\",\n         \"parameters\": [\n           {\n             \"name\": \"types\",\n             \"in\": \"path\",\n             \"description\": \"A comma-separated list of the types to return. Max. approx. 12 types. \\r\\n            A list of valid stop types can be obtained from the StopPoint/meta/stoptypes endpoint.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\"\n               }\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/StopPoint\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/StopPoint\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/StopPoint\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/StopPoint\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/StopPoint/ServiceTypes\": {\n       \"get\": {\n         \"tags\": [\n           \"StopPoint\"\n         ],\n         \"summary\": \"Gets the service types for a given stoppoint\",\n         \"operationId\": \"StopPoint_GetServiceTypes\",\n         \"parameters\": [\n           {\n             \"name\": \"id\",\n             \"in\": \"query\",\n             \"description\": \"The Naptan id of the stop\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"lineIds\",\n             \"in\": \"query\",\n             \"description\": \"The lines which contain the given Naptan id (all lines relevant to the given stoppoint if empty)\",\n             \"required\": false,\n             \"explode\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\"\n               }\n             }\n           },\n           {\n             \"name\": \"modes\",\n             \"in\": \"query\",\n             \"description\": \"The modes which the lines are relevant to (all if empty)\",\n             \"required\": false,\n             \"explode\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\"\n               }\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/LineServiceType\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/LineServiceType\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/LineServiceType\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/LineServiceType\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/StopPoint/{id}/Arrivals\": {\n       \"get\": {\n         \"tags\": [\n           \"StopPoint\"\n         ],\n         \"summary\": \"Gets the list of arrival predictions for the given stop point id\",\n         \"operationId\": \"StopPoint_Arrivals\",\n         \"parameters\": [\n           {\n             \"name\": \"id\",\n             \"in\": \"path\",\n             \"description\": \"A StopPoint id (station naptan code e.g. 940GZZLUASL, you can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name)\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Prediction\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Prediction\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Prediction\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Prediction\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/StopPoint/{id}/CanReachOnLine/{lineId}\": {\n       \"get\": {\n         \"tags\": [\n           \"StopPoint\"\n         ],\n         \"summary\": \"Gets Stopoints that are reachable from a station/line combination.\",\n         \"operationId\": \"StopPoint_ReachableFrom\",\n         \"parameters\": [\n           {\n             \"name\": \"id\",\n             \"in\": \"path\",\n             \"description\": \"The id (station naptan code e.g. 940GZZLUASL, you can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name) of the stop point to filter by\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"lineId\",\n             \"in\": \"path\",\n             \"description\": \"Line id of the line to filter by (e.g. victoria)\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"serviceTypes\",\n             \"in\": \"query\",\n             \"description\": \"A comma-separated list of service types to filter on. If not specified. Supported values: Regular, Night. Defaulted to 'Regular' if not specified\",\n             \"required\": false,\n             \"explode\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\",\n                 \"enum\": [\n                   \"Regular\",\n                   \"Night\"\n                 ]\n               }\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/StopPoint\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/StopPoint\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/StopPoint\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/StopPoint\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/StopPoint/{id}/Route\": {\n       \"get\": {\n         \"tags\": [\n           \"StopPoint\"\n         ],\n         \"summary\": \"Returns the route sections for all the lines that service the given stop point ids\",\n         \"operationId\": \"StopPoint_Route\",\n         \"parameters\": [\n           {\n             \"name\": \"id\",\n             \"in\": \"path\",\n             \"description\": \"A stop point id (station naptan codes e.g. 940GZZLUASL, you can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name)\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"serviceTypes\",\n             \"in\": \"query\",\n             \"description\": \"A comma-separated list of service types to filter on. If not specified. Supported values: Regular, Night. Defaulted to 'Regular' if not specified\",\n             \"required\": false,\n             \"explode\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\",\n                 \"enum\": [\n                   \"Regular\",\n                   \"Night\"\n                 ]\n               }\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/StopPointRouteSection\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/StopPointRouteSection\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/StopPointRouteSection\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/StopPointRouteSection\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/StopPoint/Mode/{modes}/Disruption\": {\n       \"get\": {\n         \"tags\": [\n           \"StopPoint\"\n         ],\n         \"summary\": \"Gets a distinct list of disrupted stop points for the given modes\",\n         \"operationId\": \"StopPoint_DisruptionByMode\",\n         \"parameters\": [\n           {\n             \"name\": \"modes\",\n             \"in\": \"path\",\n             \"description\": \"A comma-separated list of modes e.g. tube,dlr\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\"\n               }\n             }\n           },\n           {\n             \"name\": \"includeRouteBlockedStops\",\n             \"in\": \"query\",\n             \"description\": \"\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"boolean\"\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/DisruptedPoint\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/DisruptedPoint\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/DisruptedPoint\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/DisruptedPoint\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/StopPoint/{ids}/Disruption\": {\n       \"get\": {\n         \"tags\": [\n           \"StopPoint\"\n         ],\n         \"summary\": \"Gets all disruptions for the specified StopPointId, plus disruptions for any child Naptan records it may have.\",\n         \"operationId\": \"StopPoint_Disruption\",\n         \"parameters\": [\n           {\n             \"name\": \"ids\",\n             \"in\": \"path\",\n             \"description\": \"A comma-separated list of stop point ids. Max. approx. 20 ids.\\r\\n            You can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\"\n               }\n             }\n           },\n           {\n             \"name\": \"getFamily\",\n             \"in\": \"query\",\n             \"description\": \"Specify true to return disruptions for entire family, or false to return disruptions for just this stop point. Defaults to false.\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"boolean\"\n             }\n           },\n           {\n             \"name\": \"includeRouteBlockedStops\",\n             \"in\": \"query\",\n             \"description\": \"\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"boolean\"\n             }\n           },\n           {\n             \"name\": \"flattenResponse\",\n             \"in\": \"query\",\n             \"description\": \"Specify true to associate all disruptions with parent stop point. (Only applicable when getFamily is true).\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"boolean\"\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/DisruptedPoint\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/DisruptedPoint\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/DisruptedPoint\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/DisruptedPoint\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/StopPoint/{id}/DirectionTo/{toStopPointId}\": {\n       \"get\": {\n         \"tags\": [\n           \"StopPoint\"\n         ],\n         \"summary\": \"Returns the canonical direction, \\\"inbound\\\" or \\\"outbound\\\", for a given pair of stop point Ids in the direction from -\u003e to.\",\n         \"operationId\": \"StopPoint_Direction\",\n         \"parameters\": [\n           {\n             \"name\": \"id\",\n             \"in\": \"path\",\n             \"description\": \"Originating stop id (station naptan code e.g. 940GZZLUASL, you can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name)\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"toStopPointId\",\n             \"in\": \"path\",\n             \"description\": \"Destination stop id (station naptan code e.g. 940GZZLUASL, you can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name)\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"lineId\",\n             \"in\": \"query\",\n             \"description\": \"Optional line id filter e.g. victoria\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"string\"\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"string\"\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"string\"\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"string\"\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/StopPoint\": {\n       \"get\": {\n         \"tags\": [\n           \"StopPoint\"\n         ],\n         \"summary\": \"Gets a list of StopPoints within {radius} by the specified criteria\",\n         \"operationId\": \"StopPoint_GetByGeoPoint\",\n         \"parameters\": [\n           {\n             \"name\": \"stopTypes\",\n             \"in\": \"query\",\n             \"description\": \"a list of stopTypes that should be returned (a list of valid stop types can be obtained from the StopPoint/meta/stoptypes endpoint)\",\n             \"required\": true,\n             \"explode\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\"\n               }\n             }\n           },\n           {\n             \"name\": \"radius\",\n             \"in\": \"query\",\n             \"description\": \"the radius of the bounding circle in metres (default : 200)\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"integer\",\n               \"format\": \"int32\"\n             }\n           },\n           {\n             \"name\": \"useStopPointHierarchy\",\n             \"in\": \"query\",\n             \"description\": \"Re-arrange the output into a parent/child hierarchy\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"boolean\"\n             }\n           },\n           {\n             \"name\": \"modes\",\n             \"in\": \"query\",\n             \"description\": \"the list of modes to search (comma separated mode names e.g. tube,dlr)\",\n             \"required\": false,\n             \"explode\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\"\n               }\n             }\n           },\n           {\n             \"name\": \"categories\",\n             \"in\": \"query\",\n             \"description\": \"an optional list of comma separated property categories to return in the StopPoint's property bag. If null or empty, all categories of property are returned. Pass the keyword \\\"none\\\" to return no properties (a valid list of categories can be obtained from the /StopPoint/Meta/categories endpoint)\",\n             \"required\": false,\n             \"explode\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\"\n               }\n             }\n           },\n           {\n             \"name\": \"returnLines\",\n             \"in\": \"query\",\n             \"description\": \"true to return the lines that each stop point serves as a nested resource\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"boolean\"\n             }\n           },\n           {\n             \"name\": \"location.lat\",\n             \"in\": \"query\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"number\",\n               \"format\": \"double\"\n             }\n           },\n           {\n             \"name\": \"location.lon\",\n             \"in\": \"query\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"number\",\n               \"format\": \"double\"\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/StopPointsResponse\"\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/StopPointsResponse\"\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/StopPointsResponse\"\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/StopPointsResponse\"\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/StopPoint/Mode/{modes}\": {\n       \"get\": {\n         \"tags\": [\n           \"StopPoint\"\n         ],\n         \"summary\": \"Gets a list of StopPoints filtered by the modes available at that StopPoint.\",\n         \"operationId\": \"StopPoint_GetByMode\",\n         \"parameters\": [\n           {\n             \"name\": \"modes\",\n             \"in\": \"path\",\n             \"description\": \"A comma-separated list of modes e.g. tube,dlr\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\"\n               }\n             }\n           },\n           {\n             \"name\": \"page\",\n             \"in\": \"query\",\n             \"description\": \"The data set page to return. Page 1 equates to the first 1000 stop points, page 2 equates to 1001-2000 etc. Must be entered for bus mode as data set is too large.\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"integer\",\n               \"format\": \"int32\"\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/StopPointsResponse\"\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/StopPointsResponse\"\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/StopPointsResponse\"\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/StopPointsResponse\"\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/StopPoint/Search/{query}\": {\n       \"get\": {\n         \"tags\": [\n           \"StopPoint\"\n         ],\n         \"summary\": \"Search StopPoints by their common name, or their 5-digit Countdown Bus Stop Code.\",\n         \"operationId\": \"searchStopPointsByPath\",\n         \"parameters\": [\n           {\n             \"name\": \"query\",\n             \"in\": \"path\",\n             \"description\": \"The query string, case-insensitive. Leading and trailing wildcards are applied automatically.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"modes\",\n             \"in\": \"query\",\n             \"description\": \"An optional, parameter separated list of the modes to filter by\",\n             \"required\": false,\n             \"explode\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\"\n               }\n             }\n           },\n           {\n             \"name\": \"faresOnly\",\n             \"in\": \"query\",\n             \"description\": \"True to only return stations in that have Fares data available for single fares to another station.\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"boolean\"\n             }\n           },\n           {\n             \"name\": \"maxResults\",\n             \"in\": \"query\",\n             \"description\": \"An optional result limit, defaulting to and with a maximum of 50. Since children of the stop point heirarchy are returned for matches,\\r\\n            it is possible that the flattened result set will contain more than 50 items.\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"integer\",\n               \"format\": \"int32\"\n             }\n           },\n           {\n             \"name\": \"lines\",\n             \"in\": \"query\",\n             \"description\": \"An optional, parameter separated list of the lines to filter by\",\n             \"required\": false,\n             \"explode\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\"\n               }\n             }\n           },\n           {\n             \"name\": \"includeHubs\",\n             \"in\": \"query\",\n             \"description\": \"If true, returns results including HUBs.\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"boolean\"\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/SearchResponse\"\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/SearchResponse\"\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/SearchResponse\"\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/SearchResponse\"\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/StopPoint/Search\": {\n       \"get\": {\n         \"tags\": [\n           \"StopPoint\"\n         ],\n         \"summary\": \"Search StopPoints by their common name, or their 5-digit Countdown Bus Stop Code.\",\n         \"operationId\": \"searchStopPoints\",\n         \"parameters\": [\n           {\n             \"name\": \"query\",\n             \"in\": \"query\",\n             \"description\": \"The query string, case-insensitive. Leading and trailing wildcards are applied automatically.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"modes\",\n             \"in\": \"query\",\n             \"description\": \"An optional, parameter separated list of the modes to filter by\",\n             \"required\": false,\n             \"explode\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\"\n               }\n             }\n           },\n           {\n             \"name\": \"faresOnly\",\n             \"in\": \"query\",\n             \"description\": \"True to only return stations in that have Fares data available for single fares to another station.\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"boolean\"\n             }\n           },\n           {\n             \"name\": \"maxResults\",\n             \"in\": \"query\",\n             \"description\": \"An optional result limit, defaulting to and with a maximum of 50. Since children of the stop point heirarchy are returned for matches,\\r\\n            it is possible that the flattened result set will contain more than 50 items.\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"integer\",\n               \"format\": \"int32\"\n             }\n           },\n           {\n             \"name\": \"lines\",\n             \"in\": \"query\",\n             \"description\": \"An optional, parameter separated list of the lines to filter by\",\n             \"required\": false,\n             \"explode\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\"\n               }\n             }\n           },\n           {\n             \"name\": \"includeHubs\",\n             \"in\": \"query\",\n             \"description\": \"If true, returns results including HUBs.\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"boolean\"\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/SearchResponse\"\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/SearchResponse\"\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/SearchResponse\"\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/SearchResponse\"\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/StopPoint/Sms/{id}\": {\n       \"get\": {\n         \"tags\": [\n           \"StopPoint\"\n         ],\n         \"summary\": \"Gets a StopPoint for a given sms code.\",\n         \"operationId\": \"StopPoint_GetBySms\",\n         \"parameters\": [\n           {\n             \"name\": \"id\",\n             \"in\": \"path\",\n             \"description\": \"A 5-digit Countdown Bus Stop Code e.g. 73241, 50435, 56334.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"output\",\n             \"in\": \"query\",\n             \"description\": \"If set to \\\"web\\\", a 302 redirect to relevant website bus stop page is returned. Valid values are : web. All other values are ignored.\",\n             \"required\": false,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/Object\"\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/Object\"\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/Object\"\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/Object\"\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/StopPoint/{stopPointId}/TaxiRanks\": {\n       \"get\": {\n         \"tags\": [\n           \"StopPoint\"\n         ],\n         \"summary\": \"Gets a list of taxi ranks corresponding to the given stop point id.\",\n         \"operationId\": \"StopPoint_GetTaxiRanksByIds\",\n         \"parameters\": [\n           {\n             \"name\": \"stopPointId\",\n             \"in\": \"path\",\n             \"description\": \"stopPointId is required to get the taxi ranks.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Place\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Place\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Place\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Place\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/StopPoint/{stopPointId}/CarParks\": {\n       \"get\": {\n         \"tags\": [\n           \"StopPoint\"\n         ],\n         \"summary\": \"Get car parks corresponding to the given stop point id.\",\n         \"operationId\": \"StopPoint_GetCarParksById\",\n         \"parameters\": [\n           {\n             \"name\": \"stopPointId\",\n             \"in\": \"path\",\n             \"description\": \"stopPointId is required to get the car parks.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Place\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Place\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Place\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Place\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/TravelTimes/overlay/{z}/mapcenter/{mapCenterLat}/{mapCenterLon}/pinlocation/{pinLat}/{pinLon}/dimensions/{width}/{height}\": {\n       \"get\": {\n         \"tags\": [\n           \"TravelTime\"\n         ],\n         \"summary\": \"Gets the TravelTime overlay.\",\n         \"operationId\": \"TravelTime_GetOverlay\",\n         \"parameters\": [\n           {\n             \"name\": \"z\",\n             \"in\": \"path\",\n             \"description\": \"The zoom level.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"integer\",\n               \"format\": \"int32\"\n             }\n           },\n           {\n             \"name\": \"pinLat\",\n             \"in\": \"path\",\n             \"description\": \"The latitude of the pin.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"number\",\n               \"format\": \"double\"\n             }\n           },\n           {\n             \"name\": \"pinLon\",\n             \"in\": \"path\",\n             \"description\": \"The longitude of the pin.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"number\",\n               \"format\": \"double\"\n             }\n           },\n           {\n             \"name\": \"mapCenterLat\",\n             \"in\": \"path\",\n             \"description\": \"The map center latitude.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"number\",\n               \"format\": \"double\"\n             }\n           },\n           {\n             \"name\": \"mapCenterLon\",\n             \"in\": \"path\",\n             \"description\": \"The map center longitude.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"number\",\n               \"format\": \"double\"\n             }\n           },\n           {\n             \"name\": \"scenarioTitle\",\n             \"in\": \"query\",\n             \"description\": \"The title of the scenario.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"timeOfDayId\",\n             \"in\": \"query\",\n             \"description\": \"The id for the time of day (AM/INTER/PM)\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"modeId\",\n             \"in\": \"query\",\n             \"description\": \"The id of the mode.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"width\",\n             \"in\": \"path\",\n             \"description\": \"The width of the requested overlay.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"integer\",\n               \"format\": \"int32\"\n             }\n           },\n           {\n             \"name\": \"height\",\n             \"in\": \"path\",\n             \"description\": \"The height of the requested overlay.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"integer\",\n               \"format\": \"int32\"\n             }\n           },\n           {\n             \"name\": \"direction\",\n             \"in\": \"query\",\n             \"description\": \"The direction of travel.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\",\n               \"enum\": [\n                 \"Average\",\n                 \"From\",\n                 \"To\"\n               ]\n             }\n           },\n           {\n             \"name\": \"travelTimeInterval\",\n             \"in\": \"query\",\n             \"description\": \"The total minutes between the travel time bands\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"integer\",\n               \"format\": \"int32\"\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/Object\"\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/Object\"\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/Object\"\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/Object\"\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/TravelTimes/compareOverlay/{z}/mapcenter/{mapCenterLat}/{mapCenterLon}/pinlocation/{pinLat}/{pinLon}/dimensions/{width}/{height}\": {\n       \"get\": {\n         \"tags\": [\n           \"TravelTime\"\n         ],\n         \"summary\": \"Gets the TravelTime overlay.\",\n         \"operationId\": \"TravelTime_GetCompareOverlay\",\n         \"parameters\": [\n           {\n             \"name\": \"z\",\n             \"in\": \"path\",\n             \"description\": \"The zoom level.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"integer\",\n               \"format\": \"int32\"\n             }\n           },\n           {\n             \"name\": \"pinLat\",\n             \"in\": \"path\",\n             \"description\": \"The latitude of the pin.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"number\",\n               \"format\": \"double\"\n             }\n           },\n           {\n             \"name\": \"pinLon\",\n             \"in\": \"path\",\n             \"description\": \"The longitude of the pin.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"number\",\n               \"format\": \"double\"\n             }\n           },\n           {\n             \"name\": \"mapCenterLat\",\n             \"in\": \"path\",\n             \"description\": \"The map center latitude.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"number\",\n               \"format\": \"double\"\n             }\n           },\n           {\n             \"name\": \"mapCenterLon\",\n             \"in\": \"path\",\n             \"description\": \"The map center longitude.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"number\",\n               \"format\": \"double\"\n             }\n           },\n           {\n             \"name\": \"scenarioTitle\",\n             \"in\": \"query\",\n             \"description\": \"The title of the scenario.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"timeOfDayId\",\n             \"in\": \"query\",\n             \"description\": \"The id for the time of day (AM/INTER/PM)\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"modeId\",\n             \"in\": \"query\",\n             \"description\": \"The id of the mode.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"width\",\n             \"in\": \"path\",\n             \"description\": \"The width of the requested overlay.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"integer\",\n               \"format\": \"int32\"\n             }\n           },\n           {\n             \"name\": \"height\",\n             \"in\": \"path\",\n             \"description\": \"The height of the requested overlay.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"integer\",\n               \"format\": \"int32\"\n             }\n           },\n           {\n             \"name\": \"direction\",\n             \"in\": \"query\",\n             \"description\": \"The direction of travel.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\",\n               \"enum\": [\n                 \"Average\",\n                 \"From\",\n                 \"To\"\n               ]\n             }\n           },\n           {\n             \"name\": \"travelTimeInterval\",\n             \"in\": \"query\",\n             \"description\": \"The total minutes between the travel time bands\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"integer\",\n               \"format\": \"int32\"\n             }\n           },\n           {\n             \"name\": \"compareType\",\n             \"in\": \"query\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           },\n           {\n             \"name\": \"compareValue\",\n             \"in\": \"query\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/Object\"\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/Object\"\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/Object\"\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/Object\"\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Vehicle/{ids}/Arrivals\": {\n       \"get\": {\n         \"tags\": [\n           \"Vehicle\"\n         ],\n         \"summary\": \"Gets the predictions for a given list of vehicle Id's.\",\n         \"operationId\": \"Vehicle_Get\",\n         \"parameters\": [\n           {\n             \"name\": \"ids\",\n             \"in\": \"path\",\n             \"description\": \"A comma-separated list of vehicle ids e.g. LX58CFV,LX11AZB,LX58CFE. Max approx. 25 ids.\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"array\",\n               \"items\": {\n                 \"type\": \"string\"\n               }\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Prediction\"\n                   }\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Prediction\"\n                   }\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Prediction\"\n                   }\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"type\": \"array\",\n                   \"items\": {\n                     \"$ref\": \"#/components/schemas/Prediction\"\n                   }\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     },\n     \"/Vehicle/EmissionSurcharge\": {\n       \"get\": {\n         \"tags\": [\n           \"Vehicle\"\n         ],\n         \"summary\": \"Gets the Emissions Surcharge compliance for the Vehicle\",\n         \"operationId\": \"Vehicle_GetVehicle\",\n         \"parameters\": [\n           {\n             \"name\": \"vrm\",\n             \"in\": \"query\",\n             \"description\": \"The Vehicle Registration Mark\",\n             \"required\": true,\n             \"schema\": {\n               \"type\": \"string\"\n             }\n           }\n         ],\n         \"responses\": {\n           \"200\": {\n             \"description\": \"OK\",\n             \"content\": {\n               \"application/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/EmissionsSurchargeVehicle\"\n                 }\n               },\n               \"text/json\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/EmissionsSurchargeVehicle\"\n                 }\n               },\n               \"application/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/EmissionsSurchargeVehicle\"\n                 }\n               },\n               \"text/xml\": {\n                 \"schema\": {\n                   \"$ref\": \"#/components/schemas/EmissionsSurchargeVehicle\"\n                 }\n               }\n             }\n           }\n         },\n         \"deprecated\": false\n       }\n     }\n   },\n   \"servers\": [\n     {\n       \"url\": \"https://api.tfl.gov.uk\"\n     }\n   ],\n   \"components\": {\n     \"securitySchemes\": {\n       \"apiKey\": {\n         \"type\": \"apiKey\",\n         \"description\": \"API Key Authentication\",\n         \"name\": \"app_key\",\n         \"in\": \"query\"\n       },\n       \"appId\": {\n         \"type\": \"apiKey\",\n         \"description\": \"Application ID\",\n         \"name\": \"app_id\",\n         \"in\": \"query\"\n       }\n     },\n     \"schemas\": {\n       \"AccidentDetail\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"id\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"lat\": {\n             \"format\": \"double\",\n             \"type\": \"number\"\n           },\n           \"lon\": {\n             \"format\": \"double\",\n             \"type\": \"number\"\n           },\n           \"location\": {\n             \"type\": \"string\"\n           },\n           \"date\": {\n             \"format\": \"date-time\",\n             \"type\": \"string\"\n           },\n           \"severity\": {\n             \"type\": \"string\"\n           },\n           \"borough\": {\n             \"type\": \"string\"\n           },\n           \"casualties\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/Casualty\"\n             }\n           },\n           \"vehicles\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/Vehicle\"\n             }\n           }\n         }\n       },\n       \"Casualty\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"age\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"class\": {\n             \"type\": \"string\"\n           },\n           \"severity\": {\n             \"type\": \"string\"\n           },\n           \"mode\": {\n             \"type\": \"string\"\n           },\n           \"ageBand\": {\n             \"type\": \"string\"\n           }\n         }\n       },\n       \"Vehicle\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"type\": {\n             \"type\": \"string\"\n           }\n         }\n       },\n       \"AccidentStatsOrderedSummary\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"year\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"borough\": {\n             \"type\": \"string\"\n           },\n           \"accidents\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           }\n         }\n       },\n       \"Object\": {\n         \"type\": \"object\",\n         \"properties\": {\n         }\n       },\n       \"Place\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"id\": {\n             \"description\": \"A unique identifier.\",\n             \"type\": \"string\"\n           },\n           \"url\": {\n             \"description\": \"The unique location of this resource.\",\n             \"type\": \"string\"\n           },\n           \"commonName\": {\n             \"description\": \"A human readable name.\",\n             \"type\": \"string\"\n           },\n           \"distance\": {\n             \"format\": \"double\",\n             \"description\": \"The distance of the place from its search point, if this is the result\\r\\n            of a geographical search, otherwise zero.\",\n             \"type\": \"number\"\n           },\n           \"placeType\": {\n             \"description\": \"The type of Place. See /Place/Meta/placeTypes for possible values.\",\n             \"type\": \"string\"\n           },\n           \"additionalProperties\": {\n             \"description\": \"A bag of additional key/value pairs with extra information about this place.\",\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/AdditionalProperties\"\n             }\n           },\n           \"children\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/Place\"\n             }\n           },\n           \"childrenUrls\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"type\": \"string\"\n             }\n           },\n           \"lat\": {\n             \"format\": \"double\",\n             \"description\": \"WGS84 latitude of the location.\",\n             \"type\": \"number\"\n           },\n           \"lon\": {\n             \"format\": \"double\",\n             \"description\": \"WGS84 longitude of the location.\",\n             \"type\": \"number\"\n           }\n         }\n       },\n       \"AdditionalProperties\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"category\": {\n             \"type\": \"string\"\n           },\n           \"key\": {\n             \"type\": \"string\"\n           },\n           \"sourceSystemKey\": {\n             \"type\": \"string\"\n           },\n           \"value\": {\n             \"type\": \"string\"\n           },\n           \"modified\": {\n             \"format\": \"date-time\",\n             \"type\": \"string\"\n           }\n         }\n       },\n       \"CycleSuperhighway\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"id\": {\n             \"description\": \"The Id\",\n             \"type\": \"string\"\n           },\n           \"label\": {\n             \"description\": \"The long label to show on maps when zoomed in\",\n             \"type\": \"string\"\n           },\n           \"labelShort\": {\n             \"description\": \"The short label to show on maps\",\n             \"type\": \"string\"\n           },\n           \"geography\": {\n             \"$ref\": \"#/components/schemas/DbGeography\",\n             \"description\":\"A LineString or MultiLineString that forms the route of the highway\"\n           },\n           \"segmented\": {\n             \"description\": \"True if the route is split into segments\",\n             \"type\": \"boolean\"\n           },\n           \"modified\": {\n             \"format\": \"date-time\",\n             \"description\": \"When the data was last updated\",\n             \"type\": \"string\"\n           }\n         }\n       },\n       \"DbGeography\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"geography\": {\n             \"$ref\": \"#/components/schemas/DbGeographyWellKnownValue\"\n           }\n         }\n       },\n       \"DbGeographyWellKnownValue\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"coordinateSystemId\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"wellKnownText\": {\n             \"type\": \"string\"\n           },\n           \"wellKnownBinary\": {\n             \"format\": \"byte\",\n             \"type\": \"string\"\n           }\n         }\n       },\n       \"Fare\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"id\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"passengerType\": {\n             \"type\": \"string\"\n           },\n           \"validFrom\": {\n             \"format\": \"date-time\",\n             \"type\": \"string\"\n           },\n           \"validUntil\": {\n             \"format\": \"date-time\",\n             \"type\": \"string\"\n           },\n           \"ticketTime\": {\n             \"type\": \"string\"\n           },\n           \"ticketType\": {\n             \"type\": \"string\"\n           },\n           \"cost\": {\n             \"type\": \"string\"\n           },\n           \"cap\": {\n             \"format\": \"double\",\n             \"type\": \"number\"\n           },\n           \"description\": {\n             \"type\": \"string\"\n           },\n           \"zone\": {\n             \"type\": \"string\"\n           },\n           \"mode\": {\n             \"type\": \"string\"\n           }\n         }\n       },\n       \"FaresSection\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"header\": {\n             \"type\": \"string\"\n           },\n           \"index\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"rows\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/FareDetails\"\n             }\n           },\n           \"messages\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/Message\"\n             }\n           }\n         }\n       },\n       \"FareDetails\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"boundsId\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"startDate\": {\n             \"format\": \"date-time\",\n             \"type\": \"string\"\n           },\n           \"endDate\": {\n             \"format\": \"date-time\",\n             \"type\": \"string\"\n           },\n           \"mode\": {\n             \"type\": \"string\"\n           },\n           \"passengerType\": {\n             \"type\": \"string\"\n           },\n           \"from\": {\n             \"type\": \"string\"\n           },\n           \"to\": {\n             \"type\": \"string\"\n           },\n           \"fromStation\": {\n             \"type\": \"string\"\n           },\n           \"toStation\": {\n             \"type\": \"string\"\n           },\n           \"via\": {\n             \"type\": \"string\"\n           },\n           \"routeCode\": {\n             \"type\": \"string\"\n           },\n           \"displayName\": {\n             \"type\": \"string\"\n           },\n           \"displayOrder\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"routeDescription\": {\n             \"type\": \"string\"\n           },\n           \"validatorInformation\": {\n             \"type\": \"string\"\n           },\n           \"operator\": {\n             \"type\": \"string\"\n           },\n           \"specialFare\": {\n             \"type\": \"boolean\"\n           },\n           \"throughFare\": {\n             \"type\": \"boolean\"\n           },\n           \"isTour\": {\n             \"type\": \"boolean\"\n           },\n           \"ticketsAvailable\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/Ticket\"\n             }\n           },\n           \"messages\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/Message\"\n             }\n           }\n         }\n       },\n       \"Message\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"bulletOrder\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"header\": {\n             \"type\": \"boolean\"\n           },\n           \"messageText\": {\n             \"type\": \"string\"\n           },\n           \"linkText\": {\n             \"type\": \"string\"\n           },\n           \"url\": {\n             \"type\": \"string\"\n           }\n         }\n       },\n       \"Ticket\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"passengerType\": {\n             \"type\": \"string\"\n           },\n           \"ticketType\": {\n             \"$ref\": \"#/components/schemas/TicketType\"\n           },\n           \"ticketTime\": {\n             \"$ref\": \"#/components/schemas/TicketTime\"\n           },\n           \"cost\": {\n             \"type\": \"string\"\n           },\n           \"description\": {\n             \"type\": \"string\"\n           },\n           \"mode\": {\n             \"type\": \"string\"\n           },\n           \"displayOrder\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"messages\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/Message\"\n             }\n           }\n         }\n       },\n       \"TicketType\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"type\": {\n             \"type\": \"string\"\n           },\n           \"description\": {\n             \"type\": \"string\"\n           }\n         }\n       },\n       \"TicketTime\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"type\": {\n             \"type\": \"string\"\n           },\n           \"description\": {\n             \"type\": \"string\"\n           }\n         }\n       },\n       \"FareBounds\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"id\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"from\": {\n             \"type\": \"string\"\n           },\n           \"to\": {\n             \"type\": \"string\"\n           },\n           \"via\": {\n             \"type\": \"string\"\n           },\n           \"routeCode\": {\n             \"type\": \"string\"\n           },\n           \"description\": {\n             \"type\": \"string\"\n           },\n           \"displayName\": {\n             \"type\": \"string\"\n           },\n           \"operator\": {\n             \"type\": \"string\"\n           },\n           \"displayOrder\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"isPopularFare\": {\n             \"type\": \"boolean\"\n           },\n           \"isPopularTravelCard\": {\n             \"type\": \"boolean\"\n           },\n           \"isTour\": {\n             \"type\": \"boolean\"\n           },\n           \"messages\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/Message\"\n             }\n           }\n         }\n       },\n       \"FaresPeriod\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"id\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"startDate\": {\n             \"format\": \"date-time\",\n             \"type\": \"string\"\n           },\n           \"viewableDate\": {\n             \"format\": \"date-time\",\n             \"type\": \"string\"\n           },\n           \"endDate\": {\n             \"format\": \"date-time\",\n             \"type\": \"string\"\n           },\n           \"isFuture\": {\n             \"type\": \"boolean\"\n           }\n         }\n       },\n       \"FaresMode\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"id\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"name\": {\n             \"type\": \"string\"\n           },\n           \"description\": {\n             \"type\": \"string\"\n           }\n         }\n       },\n       \"PassengerType\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"type\": {\n             \"type\": \"string\"\n           },\n           \"description\": {\n             \"type\": \"string\"\n           },\n           \"displayName\": {\n             \"type\": \"string\"\n           },\n           \"displayOrder\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           }\n         }\n       },\n       \"Coordinate\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"longitude\": {\n             \"format\": \"double\",\n             \"type\": \"number\"\n           },\n           \"latitude\": {\n             \"format\": \"double\",\n             \"type\": \"number\"\n           },\n           \"easting\": {\n             \"format\": \"double\",\n             \"type\": \"number\"\n           },\n           \"northing\": {\n             \"format\": \"double\",\n             \"type\": \"number\"\n           },\n           \"xCoord\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"yCoord\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           }\n         }\n       },\n       \"GeoCodeSearchMatch\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"types\": {\n             \"description\": \"The type of the place e.g. \\\"street_address\\\"\",\n             \"type\": \"array\",\n             \"items\": {\n               \"type\": \"string\"\n             }\n           },\n           \"address\": {\n             \"description\": \"A string describing the formatted address of the place. Adds additional context to the place's Name.\",\n             \"type\": \"string\"\n           },\n           \"id\": {\n             \"type\": \"string\"\n           },\n           \"url\": {\n             \"type\": \"string\"\n           },\n           \"name\": {\n             \"type\": \"string\"\n           },\n           \"lat\": {\n             \"format\": \"double\",\n             \"type\": \"number\"\n           },\n           \"lon\": {\n             \"format\": \"double\",\n             \"type\": \"number\"\n           }\n         }\n       },\n       \"Mode\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"isTflService\": {\n             \"type\": \"boolean\"\n           },\n           \"isFarePaying\": {\n             \"type\": \"boolean\"\n           },\n           \"isScheduledService\": {\n             \"type\": \"boolean\"\n           },\n           \"modeName\": {\n             \"type\": \"string\"\n           }\n         }\n       },\n       \"ItineraryResult\": {\n         \"description\": \"A DTO representing a list of possible journeys.\",\n         \"type\": \"object\",\n         \"properties\": {\n           \"journeys\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/Journey\"\n             }\n           },\n           \"lines\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/Line\"\n             }\n           },\n           \"cycleHireDockingStationData\": {\n             \"$ref\": \"#/components/schemas/JourneyPlannerCycleHireDockingStationData\"\n           },\n           \"stopMessages\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"type\": \"string\"\n             }\n           },\n           \"recommendedMaxAgeMinutes\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"searchCriteria\": {\n             \"$ref\": \"#/components/schemas/SearchCriteria\"\n           },\n           \"journeyVector\": {\n             \"$ref\": \"#/components/schemas/JourneyVector\"\n           }\n         }\n       },\n       \"Journey\": {\n         \"description\": \"Object that represents an end to end journey (see schematic).\",\n         \"type\": \"object\",\n         \"properties\": {\n           \"startDateTime\": {\n             \"format\": \"date-time\",\n             \"type\": \"string\"\n           },\n           \"duration\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"arrivalDateTime\": {\n             \"format\": \"date-time\",\n             \"type\": \"string\"\n           },\n           \"legs\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/Leg\"\n             }\n           }\n         }\n       },\n       \"Line\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"id\": {\n             \"type\": \"string\"\n           },\n           \"name\": {\n             \"type\": \"string\"\n           },\n           \"modeName\": {\n             \"type\": \"string\"\n           },\n           \"disruptions\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/Disruption\"\n             }\n           },\n           \"created\": {\n             \"format\": \"date-time\",\n             \"type\": \"string\"\n           },\n           \"modified\": {\n             \"format\": \"date-time\",\n             \"type\": \"string\"\n           },\n           \"lineStatuses\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/LineStatus\"\n             }\n           },\n           \"routeSections\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/MatchedRoute\"\n             }\n           },\n           \"serviceTypes\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/LineServiceTypeInfo\"\n             }\n           },\n           \"crowding\": {\n             \"$ref\": \"#/components/schemas/Crowding\"\n           }\n         }\n       },\n       \"JourneyPlannerCycleHireDockingStationData\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"originNumberOfBikes\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"destinationNumberOfBikes\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"originNumberOfEmptySlots\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"destinationNumberOfEmptySlots\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"originId\": {\n             \"type\": \"string\"\n           },\n           \"destinationId\": {\n             \"type\": \"string\"\n           }\n         }\n       },\n       \"SearchCriteria\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"dateTime\": {\n             \"format\": \"date-time\",\n             \"type\": \"string\"\n           },\n           \"dateTimeType\": {\n             \"enum\": [\n               \"Arriving\",\n               \"Departing\"\n             ],\n             \"type\": \"string\"\n           },\n           \"timeAdjustments\": {\n             \"$ref\": \"#/components/schemas/TimeAdjustments\"\n           }\n         }\n       },\n       \"JourneyVector\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"from\": {\n             \"type\": \"string\"\n           },\n           \"to\": {\n             \"type\": \"string\"\n           },\n           \"via\": {\n             \"type\": \"string\"\n           },\n           \"uri\": {\n             \"type\": \"string\"\n           }\n         }\n       },\n       \"Leg\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"duration\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"speed\": {\n             \"type\": \"string\"\n           },\n           \"instruction\": {\n             \"$ref\": \"#/components/schemas/Instruction\",\n             \"description\":\"Describes the action the user need to take for this section, E.g. \\\"walk to the\\r\\n            district line\\\"\"\n           },\n           \"obstacles\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/Obstacle\"\n             }\n           },\n           \"departureTime\": {\n             \"format\": \"date-time\",\n             \"type\": \"string\"\n           },\n           \"arrivalTime\": {\n             \"format\": \"date-time\",\n             \"type\": \"string\"\n           },\n           \"departurePoint\": {\n             \"$ref\": \"#/components/schemas/Point\"\n           },\n           \"arrivalPoint\": {\n             \"$ref\": \"#/components/schemas/Point\"\n           },\n           \"path\": {\n             \"$ref\": \"#/components/schemas/Path\"\n           },\n           \"routeOptions\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/RouteOption\"\n             }\n           },\n           \"mode\": {\n             \"$ref\": \"#/components/schemas/Identifier\"\n           },\n           \"disruptions\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/Disruption\"\n             }\n           },\n           \"plannedWorks\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/PlannedWork\"\n             }\n           },\n           \"distance\": {\n             \"format\": \"double\",\n             \"type\": \"number\"\n           },\n           \"isDisrupted\": {\n             \"type\": \"boolean\",\n             \"readOnly\": true\n           },\n           \"hasFixedLocations\": {\n             \"type\": \"boolean\",\n             \"readOnly\": true\n           }\n         }\n       },\n       \"Disruption\": {\n         \"description\": \"Represents a disruption to a route within the transport network.\",\n         \"type\": \"object\",\n         \"properties\": {\n           \"category\": {\n             \"description\": \"Gets or sets the category of this dispruption.\",\n             \"enum\": [\n               \"Undefined\",\n               \"RealTime\",\n               \"PlannedWork\",\n               \"Information\",\n               \"Event\",\n               \"Crowding\",\n               \"StatusAlert\"\n             ],\n             \"type\": \"string\"\n           },\n           \"type\": {\n             \"description\": \"Gets or sets the disruption type of this dispruption.\",\n             \"type\": \"string\"\n           },\n           \"categoryDescription\": {\n             \"description\": \"Gets or sets the description of the category.\",\n             \"type\": \"string\"\n           },\n           \"description\": {\n             \"description\": \"Gets or sets the description of this disruption.\",\n             \"type\": \"string\"\n           },\n           \"additionalInfo\": {\n             \"description\": \"Gets or sets the additionaInfo of this disruption.\",\n             \"type\": \"string\"\n           },\n           \"created\": {\n             \"format\": \"date-time\",\n             \"description\": \"Gets or sets the date/time when this disruption was created.\",\n             \"type\": \"string\"\n           },\n           \"lastUpdate\": {\n             \"format\": \"date-time\",\n             \"description\": \"Gets or sets the date/time when this disruption was last updated.\",\n             \"type\": \"string\"\n           },\n           \"affectedRoutes\": {\n             \"description\": \"Gets or sets the routes affected by this disruption\",\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/RouteSection\"\n             }\n           },\n           \"affectedStops\": {\n             \"description\": \"Gets or sets the stops affected by this disruption\",\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/StopPoint\"\n             }\n           },\n           \"isBlocking\": {\n             \"type\": \"boolean\"\n           },\n           \"isWholeLine\": {\n             \"type\": \"boolean\"\n           },\n           \"closureText\": {\n             \"type\": \"string\"\n           }\n         }\n       },\n       \"LineStatus\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"id\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"lineId\": {\n             \"type\": \"string\"\n           },\n           \"statusSeverity\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"statusSeverityDescription\": {\n             \"type\": \"string\"\n           },\n           \"reason\": {\n             \"type\": \"string\"\n           },\n           \"created\": {\n             \"format\": \"date-time\",\n             \"type\": \"string\"\n           },\n           \"modified\": {\n             \"format\": \"date-time\",\n             \"type\": \"string\"\n           },\n           \"validityPeriods\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/ValidityPeriod\"\n             }\n           },\n           \"disruption\": {\n             \"$ref\": \"#/components/schemas/Disruption\"\n           }\n         }\n       },\n       \"MatchedRoute\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"routeCode\": {\n             \"description\": \"The route code\",\n             \"type\": \"string\"\n           },\n           \"name\": {\n             \"description\": \"Name such as \\\"72\\\"\",\n             \"type\": \"string\"\n           },\n           \"direction\": {\n             \"description\": \"eg: N or S or I or O\",\n             \"type\": \"string\"\n           },\n           \"originationName\": {\n             \"description\": \"eg: Origination Name\",\n             \"type\": \"string\"\n           },\n           \"destinationName\": {\n             \"description\": \"eg: Destination Name\",\n             \"type\": \"string\"\n           },\n           \"originator\": {\n             \"description\": \"eg: Origination\",\n             \"type\": \"string\"\n           },\n           \"destination\": {\n             \"description\": \"eg: Destination\",\n             \"type\": \"string\"\n           },\n           \"serviceType\": {\n             \"description\": \"eg: Regular, Night\",\n             \"type\": \"string\"\n           }\n         }\n       },\n       \"LineServiceTypeInfo\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"name\": {\n             \"type\": \"string\"\n           },\n           \"uri\": {\n             \"type\": \"string\"\n           }\n         }\n       },\n       \"Crowding\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"passengerFlows\": {\n             \"description\": \"Busiest times at a station (static information)\",\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/PassengerFlow\"\n             }\n           },\n           \"trainLoadings\": {\n             \"description\": \"Train Loading on a scale 1-6, 1 being \\\"Very quiet\\\" and 6 being \\\"Exceptionally busy\\\" (static information)\",\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/TrainLoading\"\n             }\n           }\n         }\n       },\n       \"TimeAdjustments\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"earliest\": {\n             \"$ref\": \"#/components/schemas/TimeAdjustment\"\n           },\n           \"earlier\": {\n             \"$ref\": \"#/components/schemas/TimeAdjustment\"\n           },\n           \"later\": {\n             \"$ref\": \"#/components/schemas/TimeAdjustment\"\n           },\n           \"latest\": {\n             \"$ref\": \"#/components/schemas/TimeAdjustment\"\n           }\n         }\n       },\n       \"Instruction\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"summary\": {\n             \"type\": \"string\"\n           },\n           \"detailed\": {\n             \"type\": \"string\"\n           },\n           \"steps\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/InstructionStep\"\n             }\n           }\n         }\n       },\n       \"Obstacle\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"type\": {\n             \"type\": \"string\"\n           },\n           \"incline\": {\n             \"type\": \"string\"\n           },\n           \"stopId\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"position\": {\n             \"type\": \"string\"\n           }\n         }\n       },\n       \"Point\": {\n         \"description\": \"Represents a point located at a latitude and longitude using the WGS84 co-ordinate system.\",\n         \"type\": \"object\",\n         \"properties\": {\n           \"lat\": {\n             \"format\": \"double\",\n             \"description\": \"WGS84 latitude of the location.\",\n             \"type\": \"number\"\n           },\n           \"lon\": {\n             \"format\": \"double\",\n             \"description\": \"WGS84 longitude of the location.\",\n             \"type\": \"number\"\n           }\n         }\n       },\n       \"Path\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"lineString\": {\n             \"type\": \"string\"\n           },\n           \"stopPoints\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/Identifier\"\n             }\n           },\n           \"elevation\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/JpElevation\"\n             }\n           }\n         }\n       },\n       \"RouteOption\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"id\": {\n             \"description\": \"The Id of the route\",\n             \"type\": \"string\"\n           },\n           \"name\": {\n             \"description\": \"Name such as \\\"72\\\"\",\n             \"type\": \"string\"\n           },\n           \"directions\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"type\": \"string\"\n             }\n           },\n           \"lineIdentifier\": {\n             \"$ref\": \"#/components/schemas/Identifier\",\n             \"description\":\"The line identifier (e.g. District Line), from where you can obtain line status information e.g. the rainbow board status \\\"good service\\\".\"\n          }\n         }\n       },\n       \"Identifier\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"id\": {\n             \"type\": \"string\"\n           },\n           \"name\": {\n             \"type\": \"string\"\n           },\n           \"uri\": {\n             \"type\": \"string\"\n           },\n           \"fullName\": {\n             \"type\": \"string\"\n           },\n           \"type\": {\n             \"type\": \"string\"\n           },\n           \"crowding\": {\n             \"$ref\": \"#/components/schemas/Crowding\"\n           }\n         }\n       },\n       \"PlannedWork\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"id\": {\n             \"type\": \"string\"\n           },\n           \"description\": {\n             \"type\": \"string\"\n           },\n           \"createdDateTime\": {\n             \"format\": \"date-time\",\n             \"type\": \"string\"\n           },\n           \"lastUpdateDateTime\": {\n             \"format\": \"date-time\",\n             \"type\": \"string\"\n           }\n         }\n       },\n       \"RouteSection\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"id\": {\n             \"description\": \"The Id of the route\",\n             \"type\": \"string\"\n           },\n           \"lineId\": {\n             \"description\": \"The Id of the Line\",\n             \"type\": \"string\"\n           },\n           \"routeCode\": {\n             \"description\": \"The route code\",\n             \"type\": \"string\"\n           },\n           \"name\": {\n             \"description\": \"Name such as \\\"72\\\"\",\n             \"type\": \"string\"\n           },\n           \"direction\": {\n             \"description\": \"eg: N or S or I or O\",\n             \"type\": \"string\"\n           },\n           \"lineString\": {\n             \"description\": \"eg: Path coordindates\",\n             \"type\": \"string\"\n           },\n           \"originationName\": {\n             \"description\": \"eg: Origination Name\",\n             \"type\": \"string\"\n           },\n           \"destinationName\": {\n             \"description\": \"eg: Destination Name\",\n             \"type\": \"string\"\n           },\n           \"routeSectionNaptanEntrySequence\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/RouteSectionNaptanEntrySequence\"\n             }\n           }\n         }\n       },\n       \"StopPoint\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"naptanId\": {\n             \"type\": \"string\"\n           },\n           \"platformName\": {\n             \"type\": \"string\"\n           },\n           \"indicator\": {\n             \"description\": \"The indicator of the stop point e.g. \\\"Stop K\\\"\",\n             \"type\": \"string\"\n           },\n           \"stopLetter\": {\n             \"description\": \"The stop letter, if it could be cleansed from the Indicator e.g. \\\"K\\\"\",\n             \"type\": \"string\"\n           },\n           \"modes\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"type\": \"string\"\n             }\n           },\n           \"icsCode\": {\n             \"type\": \"string\"\n           },\n           \"smsCode\": {\n             \"type\": \"string\"\n           },\n           \"stopType\": {\n             \"type\": \"string\"\n           },\n           \"stationNaptan\": {\n             \"type\": \"string\"\n           },\n           \"accessibilitySummary\": {\n             \"type\": \"string\"\n           },\n           \"hubNaptanCode\": {\n             \"type\": \"string\"\n           },\n           \"lines\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/Identifier\"\n             }\n           },\n           \"lineGroup\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/LineGroup\"\n             }\n           },\n           \"lineModeGroups\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/LineModeGroup\"\n             }\n           },\n           \"fullName\": {\n             \"type\": \"string\"\n           },\n           \"naptanMode\": {\n             \"type\": \"string\"\n           },\n           \"status\": {\n             \"type\": \"boolean\"\n           },\n           \"id\": {\n             \"description\": \"A unique identifier.\",\n             \"type\": \"string\"\n           },\n           \"url\": {\n             \"description\": \"The unique location of this resource.\",\n             \"type\": \"string\"\n           },\n           \"commonName\": {\n             \"description\": \"A human readable name.\",\n             \"type\": \"string\"\n           },\n           \"distance\": {\n             \"format\": \"double\",\n             \"description\": \"The distance of the place from its search point, if this is the result\\r\\n            of a geographical search, otherwise zero.\",\n             \"type\": \"number\"\n           },\n           \"placeType\": {\n             \"description\": \"The type of Place. See /Place/Meta/placeTypes for possible values.\",\n             \"type\": \"string\"\n           },\n           \"additionalProperties\": {\n             \"description\": \"A bag of additional key/value pairs with extra information about this place.\",\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/AdditionalProperties\"\n             }\n           },\n           \"children\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/Place\"\n             }\n           },\n           \"childrenUrls\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"type\": \"string\"\n             }\n           },\n           \"lat\": {\n             \"format\": \"double\",\n             \"description\": \"WGS84 latitude of the location.\",\n             \"type\": \"number\"\n           },\n           \"lon\": {\n             \"format\": \"double\",\n             \"description\": \"WGS84 longitude of the location.\",\n             \"type\": \"number\"\n           }\n         }\n       },\n       \"ValidityPeriod\": {\n         \"description\": \"Represents a period for which a planned works is valid.\",\n         \"type\": \"object\",\n         \"properties\": {\n           \"fromDate\": {\n             \"format\": \"date-time\",\n             \"description\": \"Gets or sets the start date.\",\n             \"type\": \"string\"\n           },\n           \"toDate\": {\n             \"format\": \"date-time\",\n             \"description\": \"Gets or sets the end date.\",\n             \"type\": \"string\"\n           },\n           \"isNow\": {\n             \"description\": \"If true is a realtime status rather than planned or info\",\n             \"type\": \"boolean\"\n           }\n         }\n       },\n       \"PassengerFlow\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"timeSlice\": {\n             \"description\": \"Time in 24hr format with 15 minute intervals e.g. 0500-0515, 0515-0530 etc.\",\n             \"type\": \"string\"\n           },\n           \"value\": {\n             \"format\": \"int32\",\n             \"description\": \"Count of passenger flow towards a platform\",\n             \"type\": \"integer\"\n           }\n         }\n       },\n       \"TrainLoading\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"line\": {\n             \"description\": \"The Line Name e.g. \\\"Victoria\\\"\",\n             \"type\": \"string\"\n           },\n           \"lineDirection\": {\n             \"description\": \"Direction of the Line e.g. NB, SB, WB etc.\",\n             \"type\": \"string\"\n           },\n           \"platformDirection\": {\n             \"description\": \"Direction displayed on the platform e.g. NB, SB, WB etc.\",\n             \"type\": \"string\"\n           },\n           \"direction\": {\n             \"description\": \"Direction in regards to Journey Planner i.e. inbound or outbound\",\n             \"type\": \"string\"\n           },\n           \"naptanTo\": {\n             \"description\": \"Naptan of the adjacent station\",\n             \"type\": \"string\"\n           },\n           \"timeSlice\": {\n             \"description\": \"Time in 24hr format with 15 minute intervals e.g. 0500-0515, 0515-0530 etc.\",\n             \"type\": \"string\"\n           },\n           \"value\": {\n             \"format\": \"int32\",\n             \"description\": \"Scale between 1-6, \\r\\n             1 = Very quiet, 2 = Quiet, 3 = Fairly busy, 4 = Busy, 5 = Very busy, 6 = Exceptionally busy\",\n             \"type\": \"integer\"\n           }\n         }\n       },\n       \"TimeAdjustment\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"date\": {\n             \"type\": \"string\"\n           },\n           \"time\": {\n             \"type\": \"string\"\n           },\n           \"timeIs\": {\n             \"type\": \"string\"\n           },\n           \"uri\": {\n             \"type\": \"string\"\n           }\n         }\n       },\n       \"InstructionStep\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"description\": {\n             \"type\": \"string\"\n           },\n           \"turnDirection\": {\n             \"type\": \"string\"\n           },\n           \"streetName\": {\n             \"type\": \"string\"\n           },\n           \"distance\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"cumulativeDistance\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"skyDirection\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"skyDirectionDescription\": {\n             \"enum\": [\n               \"North\",\n               \"NorthEast\",\n               \"East\",\n               \"SouthEast\",\n               \"South\",\n               \"SouthWest\",\n               \"West\",\n               \"NorthWest\"\n             ],\n             \"type\": \"string\"\n           },\n           \"cumulativeTravelTime\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"latitude\": {\n             \"format\": \"double\",\n             \"type\": \"number\"\n           },\n           \"longitude\": {\n             \"format\": \"double\",\n             \"type\": \"number\"\n           },\n           \"pathAttribute\": {\n             \"$ref\": \"#/components/schemas/PathAttribute\"\n           },\n           \"descriptionHeading\": {\n             \"type\": \"string\"\n           },\n           \"trackType\": {\n             \"enum\": [\n               \"CycleSuperHighway\",\n               \"CanalTowpath\",\n               \"QuietRoad\",\n               \"ProvisionForCyclists\",\n               \"BusyRoads\",\n               \"None\",\n               \"PushBike\"\n             ],\n             \"type\": \"string\"\n           }\n         }\n       },\n       \"JpElevation\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"distance\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"startLat\": {\n             \"format\": \"double\",\n             \"type\": \"number\"\n           },\n           \"startLon\": {\n             \"format\": \"double\",\n             \"type\": \"number\"\n           },\n           \"endLat\": {\n             \"format\": \"double\",\n             \"type\": \"number\"\n           },\n           \"endLon\": {\n             \"format\": \"double\",\n             \"type\": \"number\"\n           },\n           \"heightFromPreviousPoint\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"gradient\": {\n             \"format\": \"double\",\n             \"type\": \"number\"\n           }\n         }\n       },\n       \"RouteSectionNaptanEntrySequence\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"ordinal\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"stopPoint\": {\n             \"$ref\": \"#/components/schemas/StopPoint\"\n           }\n         }\n       },\n       \"LineGroup\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"naptanIdReference\": {\n             \"type\": \"string\"\n           },\n           \"stationAtcoCode\": {\n             \"type\": \"string\"\n           },\n           \"lineIdentifier\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"type\": \"string\"\n             }\n           }\n         }\n       },\n       \"LineModeGroup\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"modeName\": {\n             \"type\": \"string\"\n           },\n           \"lineIdentifier\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"type\": \"string\"\n             }\n           }\n         }\n       },\n       \"PathAttribute\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"name\": {\n             \"type\": \"string\"\n           },\n           \"value\": {\n             \"type\": \"string\"\n           }\n         }\n       },\n       \"StatusSeverity\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"modeName\": {\n             \"type\": \"string\"\n           },\n           \"severityLevel\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"description\": {\n             \"type\": \"string\"\n           }\n         }\n       },\n       \"RouteSequence\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"lineId\": {\n             \"type\": \"string\"\n           },\n           \"lineName\": {\n             \"type\": \"string\"\n           },\n           \"direction\": {\n             \"type\": \"string\"\n           },\n           \"isOutboundOnly\": {\n             \"type\": \"boolean\"\n           },\n           \"mode\": {\n             \"type\": \"string\"\n           },\n           \"lineStrings\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"type\": \"string\"\n             }\n           },\n           \"stations\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/MatchedStop\"\n             }\n           },\n           \"stopPointSequences\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/StopPointSequence\"\n             }\n           },\n           \"orderedLineRoutes\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/OrderedRoute\"\n             }\n           }\n         }\n       },\n       \"MatchedStop\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"routeId\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"parentId\": {\n             \"type\": \"string\"\n           },\n           \"stationId\": {\n             \"type\": \"string\"\n           },\n           \"icsId\": {\n             \"type\": \"string\"\n           },\n           \"topMostParentId\": {\n             \"type\": \"string\"\n           },\n           \"direction\": {\n             \"type\": \"string\"\n           },\n           \"towards\": {\n             \"type\": \"string\"\n           },\n           \"modes\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"type\": \"string\"\n             }\n           },\n           \"stopType\": {\n             \"type\": \"string\"\n           },\n           \"stopLetter\": {\n             \"type\": \"string\"\n           },\n           \"zone\": {\n             \"type\": \"string\"\n           },\n           \"accessibilitySummary\": {\n             \"type\": \"string\"\n           },\n           \"hasDisruption\": {\n             \"type\": \"boolean\"\n           },\n           \"lines\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/Identifier\"\n             }\n           },\n           \"status\": {\n             \"type\": \"boolean\"\n           },\n           \"id\": {\n             \"type\": \"string\"\n           },\n           \"url\": {\n             \"type\": \"string\"\n           },\n           \"name\": {\n             \"type\": \"string\"\n           },\n           \"lat\": {\n             \"format\": \"double\",\n             \"type\": \"number\"\n           },\n           \"lon\": {\n             \"format\": \"double\",\n             \"type\": \"number\"\n           }\n         }\n       },\n       \"StopPointSequence\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"lineId\": {\n             \"type\": \"string\"\n           },\n           \"lineName\": {\n             \"type\": \"string\"\n           },\n           \"direction\": {\n             \"type\": \"string\"\n           },\n           \"branchId\": {\n             \"format\": \"int32\",\n             \"description\": \"The id of this branch.\",\n             \"type\": \"integer\"\n           },\n           \"nextBranchIds\": {\n             \"description\": \"The ids of the next branch(es) in the sequence. Note that the next and previous branch id can be\\r\\n            identical in the case of a looped route e.g. the Circle line.\",\n             \"type\": \"array\",\n             \"items\": {\n               \"format\": \"int32\",\n               \"type\": \"integer\"\n             }\n           },\n           \"prevBranchIds\": {\n             \"description\": \"The ids of the previous branch(es) in the sequence. Note that the next and previous branch id can be\\r\\n            identical in the case of a looped route e.g. the Circle line.\",\n             \"type\": \"array\",\n             \"items\": {\n               \"format\": \"int32\",\n               \"type\": \"integer\"\n             }\n           },\n           \"stopPoint\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/MatchedStop\"\n             }\n           },\n           \"serviceType\": {\n             \"enum\": [\n               \"Regular\",\n               \"Night\"\n             ],\n             \"type\": \"string\"\n           }\n         }\n       },\n       \"OrderedRoute\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"name\": {\n             \"type\": \"string\"\n           },\n           \"naptanIds\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"type\": \"string\"\n             }\n           },\n           \"serviceType\": {\n             \"type\": \"string\"\n           }\n         }\n       },\n       \"DateRange\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"startDate\": {\n             \"format\": \"date-time\",\n             \"type\": \"string\"\n           },\n           \"endDate\": {\n             \"format\": \"date-time\",\n             \"type\": \"string\"\n           }\n         }\n       },\n       \"RouteSearchResponse\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"input\": {\n             \"type\": \"string\"\n           },\n           \"searchMatches\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/RouteSearchMatch\"\n             }\n           }\n         }\n       },\n       \"RouteSearchMatch\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"lineId\": {\n             \"type\": \"string\"\n           },\n           \"mode\": {\n             \"type\": \"string\"\n           },\n           \"lineName\": {\n             \"type\": \"string\"\n           },\n           \"lineRouteSection\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/LineRouteSection\"\n             }\n           },\n           \"matchedRouteSections\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/MatchedRouteSections\"\n             }\n           },\n           \"matchedStops\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/MatchedStop\"\n             }\n           },\n           \"id\": {\n             \"type\": \"string\"\n           },\n           \"url\": {\n             \"type\": \"string\"\n           },\n           \"name\": {\n             \"type\": \"string\"\n           },\n           \"lat\": {\n             \"format\": \"double\",\n             \"type\": \"number\"\n           },\n           \"lon\": {\n             \"format\": \"double\",\n             \"type\": \"number\"\n           }\n         }\n       },\n       \"LineRouteSection\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"routeId\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"direction\": {\n             \"type\": \"string\"\n           },\n           \"destination\": {\n             \"type\": \"string\"\n           },\n           \"fromStation\": {\n             \"type\": \"string\"\n           },\n           \"toStation\": {\n             \"type\": \"string\"\n           },\n           \"serviceType\": {\n             \"type\": \"string\"\n           },\n           \"vehicleDestinationText\": {\n             \"type\": \"string\"\n           }\n         }\n       },\n       \"MatchedRouteSections\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"id\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           }\n         }\n       },\n       \"TimetableResponse\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"lineId\": {\n             \"type\": \"string\"\n           },\n           \"lineName\": {\n             \"type\": \"string\"\n           },\n           \"direction\": {\n             \"type\": \"string\"\n           },\n           \"pdfUrl\": {\n             \"type\": \"string\"\n           },\n           \"stations\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/MatchedStop\"\n             }\n           },\n           \"stops\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/MatchedStop\"\n             }\n           },\n           \"timetable\": {\n             \"$ref\": \"#/components/schemas/Timetable\"\n           },\n           \"disambiguation\": {\n             \"$ref\": \"#/components/schemas/Disambiguation\"\n           },\n           \"statusErrorMessage\": {\n             \"type\": \"string\"\n           }\n         }\n       },\n       \"Timetable\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"departureStopId\": {\n             \"type\": \"string\"\n           },\n           \"routes\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/TimetableRoute\"\n             }\n           }\n         }\n       },\n       \"Disambiguation\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"disambiguationOptions\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/DisambiguationOption\"\n             }\n           }\n         }\n       },\n       \"TimetableRoute\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"stationIntervals\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/StationInterval\"\n             }\n           },\n           \"schedules\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/Schedule\"\n             }\n           }\n         }\n       },\n       \"DisambiguationOption\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"description\": {\n             \"type\": \"string\"\n           },\n           \"uri\": {\n             \"type\": \"string\"\n           }\n         }\n       },\n       \"StationInterval\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"id\": {\n             \"type\": \"string\"\n           },\n           \"intervals\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/Interval\"\n             }\n           }\n         }\n       },\n       \"Schedule\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"name\": {\n             \"type\": \"string\"\n           },\n           \"knownJourneys\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/KnownJourney\"\n             }\n           },\n           \"firstJourney\": {\n             \"$ref\": \"#/components/schemas/KnownJourney\"\n           },\n           \"lastJourney\": {\n             \"$ref\": \"#/components/schemas/KnownJourney\"\n           },\n           \"periods\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/Period\"\n             }\n           }\n         }\n       },\n       \"Interval\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"stopId\": {\n             \"type\": \"string\"\n           },\n           \"timeToArrival\": {\n             \"format\": \"double\",\n             \"type\": \"number\"\n           }\n         }\n       },\n       \"KnownJourney\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"hour\": {\n             \"type\": \"string\"\n           },\n           \"minute\": {\n             \"type\": \"string\"\n           },\n           \"intervalId\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           }\n         }\n       },\n       \"Period\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"type\": {\n             \"enum\": [\n               \"Normal\",\n               \"FrequencyHours\",\n               \"FrequencyMinutes\",\n               \"Unknown\"\n             ],\n             \"type\": \"string\"\n           },\n           \"fromTime\": {\n             \"$ref\": \"#/components/schemas/TwentyFourHourClockTime\"\n           },\n           \"toTime\": {\n             \"$ref\": \"#/components/schemas/TwentyFourHourClockTime\"\n           },\n           \"frequency\": {\n             \"$ref\": \"#/components/schemas/ServiceFrequency\"\n           }\n         }\n       },\n       \"TwentyFourHourClockTime\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"hour\": {\n             \"type\": \"string\"\n           },\n           \"minute\": {\n             \"type\": \"string\"\n           }\n         }\n       },\n       \"ServiceFrequency\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"lowestFrequency\": {\n             \"format\": \"double\",\n             \"type\": \"number\"\n           },\n           \"highestFrequency\": {\n             \"format\": \"double\",\n             \"type\": \"number\"\n           }\n         }\n       },\n       \"Prediction\": {\n         \"description\": \"DTO to capture the prediction details\",\n         \"type\": \"object\",\n         \"properties\": {\n           \"id\": {\n             \"description\": \"The identitier for the prediction\",\n             \"type\": \"string\"\n           },\n           \"operationType\": {\n             \"format\": \"int32\",\n             \"description\": \"The type of the operation (1: is new or has been updated, 2: should be deleted from any client cache)\",\n             \"type\": \"integer\"\n           },\n           \"vehicleId\": {\n             \"description\": \"The actual vehicle in transit (for train modes, the leading car of the rolling set)\",\n             \"type\": \"string\"\n           },\n           \"naptanId\": {\n             \"description\": \"Identifier for the prediction\",\n             \"type\": \"string\"\n           },\n           \"stationName\": {\n             \"description\": \"Station name\",\n             \"type\": \"string\"\n           },\n           \"lineId\": {\n             \"description\": \"Unique identifier for the Line\",\n             \"type\": \"string\"\n           },\n           \"lineName\": {\n             \"description\": \"Line Name\",\n             \"type\": \"string\"\n           },\n           \"platformName\": {\n             \"description\": \"Platform name (for bus, this is the stop letter)\",\n             \"type\": \"string\"\n           },\n           \"direction\": {\n             \"description\": \"Direction (unified to inbound/outbound)\",\n             \"type\": \"string\"\n           },\n           \"bearing\": {\n             \"description\": \"Bearing (between 0 to 359)\",\n             \"type\": \"string\"\n           },\n           \"destinationNaptanId\": {\n             \"description\": \"Naptan Identifier for the prediction's destination\",\n             \"type\": \"string\"\n           },\n           \"destinationName\": {\n             \"description\": \"Name of the destination\",\n             \"type\": \"string\"\n           },\n           \"timestamp\": {\n             \"format\": \"date-time\",\n             \"description\": \"Timestamp for when the prediction was inserted/modified (source column drives what objects are broadcast on each iteration)\",\n             \"type\": \"string\"\n           },\n           \"timeToStation\": {\n             \"format\": \"int32\",\n             \"description\": \"Prediction of the Time to station in seconds\",\n             \"type\": \"integer\"\n           },\n           \"currentLocation\": {\n             \"description\": \"The current location of the vehicle.\",\n             \"type\": \"string\"\n           },\n           \"towards\": {\n             \"description\": \"Routing information or other descriptive text about the path of the vehicle towards the destination\",\n             \"type\": \"string\"\n           },\n           \"expectedArrival\": {\n             \"format\": \"date-time\",\n             \"description\": \"The expected arrival time of the vehicle at the stop/station\",\n             \"type\": \"string\"\n           },\n           \"timeToLive\": {\n             \"format\": \"date-time\",\n             \"description\": \"The expiry time for the prediction\",\n             \"type\": \"string\"\n           },\n           \"modeName\": {\n             \"description\": \"The mode name of the station/line the prediction relates to\",\n             \"type\": \"string\"\n           },\n           \"timing\": {\n             \"$ref\": \"#/components/schemas/PredictionTiming\",\n             \"description\":\"Keep the original timestamp from MongoDb fo debugging purposes\"\n           }\n         }\n       },\n       \"PredictionTiming\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"countdownServerAdjustment\": {\n             \"type\": \"string\"\n           },\n           \"source\": {\n             \"format\": \"date-time\",\n             \"type\": \"string\"\n           },\n           \"insert\": {\n             \"format\": \"date-time\",\n             \"type\": \"string\"\n           },\n           \"read\": {\n             \"format\": \"date-time\",\n             \"type\": \"string\"\n           },\n           \"sent\": {\n             \"format\": \"date-time\",\n             \"type\": \"string\"\n           },\n           \"received\": {\n             \"format\": \"date-time\",\n             \"type\": \"string\"\n           }\n         }\n       },\n       \"ActiveServiceType\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"mode\": {\n             \"type\": \"string\"\n           },\n           \"serviceType\": {\n             \"type\": \"string\"\n           }\n         }\n       },\n       \"CarParkOccupancy\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"id\": {\n             \"type\": \"string\"\n           },\n           \"bays\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/Bay\"\n             }\n           },\n           \"name\": {\n             \"type\": \"string\"\n           },\n           \"carParkDetailsUrl\": {\n             \"type\": \"string\"\n           }\n         }\n       },\n       \"Bay\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"bayType\": {\n             \"type\": \"string\"\n           },\n           \"bayCount\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"free\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"occupied\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           }\n         }\n       },\n       \"PlaceCategory\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"category\": {\n             \"type\": \"string\"\n           },\n           \"availableKeys\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"type\": \"string\"\n             }\n           }\n         }\n       },\n       \"SearchResponse\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"query\": {\n             \"type\": \"string\"\n           },\n           \"from\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"page\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"pageSize\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"provider\": {\n             \"type\": \"string\"\n           },\n           \"total\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"matches\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/SearchMatch\"\n             }\n           },\n           \"maxScore\": {\n             \"format\": \"double\",\n             \"type\": \"number\"\n           }\n         }\n       },\n       \"SearchMatch\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"id\": {\n             \"type\": \"string\"\n           },\n           \"url\": {\n             \"type\": \"string\"\n           },\n           \"name\": {\n             \"type\": \"string\"\n           },\n           \"lat\": {\n             \"format\": \"double\",\n             \"type\": \"number\"\n           },\n           \"lon\": {\n             \"format\": \"double\",\n             \"type\": \"number\"\n           }\n         }\n       },\n       \"PostcodeInput\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"postcode\": {\n             \"pattern\": \"^(([gG][iI][rR] {0,}0[aA]{2})|((([a-pr-uwyzA-PR-UWYZ][a-hk-yA-HK-Y]?[0-9][0-9]?)|(([a-pr-uwyzA-PR-UWYZ][0-9][a-hjkstuwA-HJKSTUW])|([a-pr-uwyzA-PR-UWYZ][a-hk-yA-HK-Y][0-9][abehmnprv-yABEHMNPRV-Y]))) {0,}[0-9][abd-hjlnp-uw-zABD-HJLNP-UW-Z]{2}))$\",\n             \"type\": \"string\"\n           }\n         }\n       },\n       \"PlacePolygon\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"geoPoints\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/GeoPoint\"\n             }\n           },\n           \"commonName\": {\n             \"type\": \"string\"\n           }\n         }\n       },\n       \"GeoPoint\": {\n         \"required\": [\n           \"lat\",\n           \"lon\"\n         ],\n         \"type\": \"object\",\n         \"properties\": {\n           \"lat\": {\n             \"format\": \"double\",\n             \"type\": \"number\"\n           },\n           \"lon\": {\n             \"format\": \"double\",\n             \"type\": \"number\"\n           }\n         }\n       },\n       \"GeoPointBBox\": {\n         \"required\": [\n           \"swLat\",\n           \"swLon\",\n           \"neLat\",\n           \"neLon\"\n         ],\n         \"type\": \"object\",\n         \"properties\": {\n           \"swLat\": {\n             \"format\": \"double\",\n             \"type\": \"number\"\n           },\n           \"swLon\": {\n             \"format\": \"double\",\n             \"type\": \"number\"\n           },\n           \"neLat\": {\n             \"format\": \"double\",\n             \"type\": \"number\"\n           },\n           \"neLon\": {\n             \"format\": \"double\",\n             \"type\": \"number\"\n           }\n         }\n       },\n       \"RoadCorridor\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"id\": {\n             \"description\": \"The Id of the Corridor e.g. \\\"A406\\\"\",\n             \"type\": \"string\"\n           },\n           \"displayName\": {\n             \"description\": \"The display name of the Corridor e.g. \\\"North Circular (A406)\\\". This\\r\\n            may be identical to the Id.\",\n             \"type\": \"string\"\n           },\n           \"group\": {\n             \"description\": \"The group name of the Corridor e.g. \\\"Central London\\\". Most corridors are not grouped, in which case this field can be null.\",\n             \"type\": \"string\"\n           },\n           \"statusSeverity\": {\n             \"description\": \"Standard multi-mode status severity code\",\n             \"type\": \"string\"\n           },\n           \"statusSeverityDescription\": {\n             \"description\": \"Description of the status severity as applied to RoadCorridors\",\n             \"type\": \"string\"\n           },\n           \"bounds\": {\n             \"description\": \"The Bounds of the Corridor, given by the south-east followed by the north-west co-ordinate\\r\\n            pair in geoJSON format e.g. \\\"[[-1.241531,51.242151],[1.641223,53.765721]]\\\"\",\n             \"type\": \"string\"\n           },\n           \"envelope\": {\n             \"description\": \"The Envelope of the Corridor, given by the corner co-ordinates of a rectangular (four-point) polygon\\r\\n            in geoJSON format e.g. \\\"[[-1.241531,51.242151],[-1.241531,53.765721],[1.641223,53.765721],[1.641223,51.242151]]\\\"\",\n             \"type\": \"string\"\n           },\n           \"statusAggregationStartDate\": {\n             \"format\": \"date-time\",\n             \"description\": \"The start of the period over which status has been aggregated, or null if this is the current corridor status.\",\n             \"type\": \"string\"\n           },\n           \"statusAggregationEndDate\": {\n             \"format\": \"date-time\",\n             \"description\": \"The end of the period over which status has been aggregated, or null if this is the current corridor status.\",\n             \"type\": \"string\"\n           },\n           \"url\": {\n             \"description\": \"URL to retrieve this Corridor.\",\n             \"type\": \"string\"\n           }\n         }\n       },\n       \"DateRangeNullable\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"startDate\": {\n             \"format\": \"date-time\",\n             \"type\": \"string\"\n           },\n           \"endDate\": {\n             \"format\": \"date-time\",\n             \"type\": \"string\"\n           }\n         }\n       },\n       \"RoadDisruption\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"id\": {\n             \"description\": \"Unique identifier for the road disruption\",\n             \"type\": \"string\"\n           },\n           \"url\": {\n             \"description\": \"URL to retrieve this road disruption\",\n             \"type\": \"string\"\n           },\n           \"point\": {\n             \"description\": \"Latitude and longitude (WGS84) of the centroid of the disruption, stored in a geoJSON-formatted string.\",\n             \"type\": \"string\"\n           },\n           \"severity\": {\n             \"description\": \"A description of the severity of the disruption.\",\n             \"type\": \"string\"\n           },\n           \"ordinal\": {\n             \"format\": \"int32\",\n             \"description\": \"An ordinal of the disruption based on severity, level of interest and corridor.\",\n             \"type\": \"integer\"\n           },\n           \"category\": {\n             \"description\": \"Describes the nature of disruption e.g. Traffic Incidents, Works\",\n             \"type\": \"string\"\n           },\n           \"subCategory\": {\n             \"description\": \"Describes the sub-category of disruption e.g. Collapsed Manhole, Abnormal Load\",\n             \"type\": \"string\"\n           },\n           \"comments\": {\n             \"description\": \"Full text of comments describing the disruption, including details of any road closures and diversions, where appropriate.\",\n             \"type\": \"string\"\n           },\n           \"currentUpdate\": {\n             \"description\": \"Text of the most recent update from the LSTCC on the state of the\\r\\n             disruption, including the current traffic impact and any advice to\\r\\n             road users.\",\n             \"type\": \"string\"\n           },\n           \"currentUpdateDateTime\": {\n             \"format\": \"date-time\",\n             \"description\": \"The time when the last CurrentUpdate description was recorded, \\r\\n            or null if no CurrentUpdate has been applied.\",\n             \"type\": \"string\"\n           },\n           \"corridorIds\": {\n             \"description\": \"The Ids of affected corridors, if any.\",\n             \"type\": \"array\",\n             \"items\": {\n               \"type\": \"string\"\n             }\n           },\n           \"startDateTime\": {\n             \"format\": \"date-time\",\n             \"description\": \"The date and time which the disruption started. For a planned disruption (i.e. planned road works) this date will be in the future.\\r\\n            For unplanned disruptions, this will default to the date on which the disruption was first recorded, but may be adjusted by the operator.\",\n             \"type\": \"string\"\n           },\n           \"endDateTime\": {\n             \"format\": \"date-time\",\n             \"description\": \"The date and time on which the disruption ended. For planned disruptions, this date will have a valid value. For unplanned \\r\\n            disruptions in progress, this field will be omitted.\",\n             \"type\": \"string\"\n           },\n           \"lastModifiedTime\": {\n             \"format\": \"date-time\",\n             \"description\": \"The date and time on which the disruption was last modified in the system. This information can reliably be used by a developer to quickly\\r\\n            compare two instances of the same disruption to determine if it has been changed.\",\n             \"type\": \"string\"\n           },\n           \"levelOfInterest\": {\n             \"description\": \"This describes the level of potential impact on traffic operations of the disruption. \\r\\n            High = e.g. a one-off disruption on a major or high profile route which will require a high level of operational attention \\r\\n            Medium = This is the default value \\r\\n            Low = e.g. a frequently occurring disruption which is well known\",\n             \"type\": \"string\"\n           },\n           \"location\": {\n             \"description\": \"Main road name / number (borough) or preset area name where the disruption is located. This might be useful for a map popup where space is limited.\",\n             \"type\": \"string\"\n           },\n           \"status\": {\n             \"description\": \"This describes the status of the disruption.  \\r\\n            Active = currently in progress \\r\\n            Active Long Term = currently in progress and long term\\r\\n            Scheduled = scheduled to start within the next 180 days\\r\\n            Recurring Works = planned maintenance works that follow a regular routine or pattern and whose next occurrence is to start within the next 180 days.\\r\\n            Recently Cleared = recently cleared in the last 24 hours\\r\\n            Note that the status of Scheduled or Recurring Works disruptions will change to Active when they start, and will change status again when they end.\",\n             \"type\": \"string\"\n           },\n           \"geography\": {\n             \"$ref\": \"#/components/schemas/DbGeography\",\n             \"description\": \"Geography version of Point for output as GeoJSON.\\r\\n            Can not use Geometry in a consistent way as non-TIMS disruptions do not have a polygon\"\n           },\n           \"geometry\": {\n             \"$ref\": \"#/components/schemas/DbGeography\",\n             \"description\":\"GeoJSON formatted latitude/longitude (WGS84) pairs forming an enclosed polyline or polygon. The polygon will only be included where affected streets information\\r\\n            is not available for the disruption, would be inappropriate (e.g. a very large number of streets), or is centred on an area without streets (e.g. a football stadium).\"\n           },\n           \"streets\": {\n             \"description\": \"A collection of zero or more streets affected by the disruption.\",\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/Street\"\n             }\n           },\n           \"isProvisional\": {\n             \"description\": \"True if the disruption is planned on a future date that is open to change\",\n             \"type\": \"boolean\"\n           },\n           \"hasClosures\": {\n             \"description\": \"True if any of the affected Streets have a \\\"Full Closure\\\" status, false otherwise. A RoadDisruption that has HasClosures is considered a \\r\\n            Severe or Serious disruption for severity filtering purposes.\",\n             \"type\": \"boolean\"\n           },\n           \"linkText\": {\n             \"description\": \"The text of any associated link\",\n             \"type\": \"string\"\n           },\n           \"linkUrl\": {\n             \"description\": \"The url of any associated link\",\n             \"type\": \"string\"\n           },\n           \"roadProject\": {\n             \"$ref\": \"#/components/schemas/RoadProject\",\n             \"description\": \"Any associated road project\"\n           },\n           \"publishStartDate\": {\n             \"format\": \"date-time\",\n             \"description\": \"TDM Additional properties\",\n             \"type\": \"string\"\n           },\n           \"publishEndDate\": {\n             \"format\": \"date-time\",\n             \"type\": \"string\"\n           },\n           \"timeFrame\": {\n             \"type\": \"string\"\n           },\n           \"roadDisruptionLines\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/RoadDisruptionLine\"\n             }\n           },\n           \"roadDisruptionImpactAreas\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/RoadDisruptionImpactArea\"\n             }\n           },\n           \"recurringSchedules\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/RoadDisruptionSchedule\"\n             }\n           }\n         }\n       },\n       \"Street\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"name\": {\n             \"description\": \"Street name\",\n             \"type\": \"string\"\n           },\n           \"closure\": {\n             \"description\": \"Type of road closure. Some example values:\\r\\n            Open = road is open, not blocked, not closed, not restricted. It maybe that the disruption has been moved out of the carriageway.\\r\\n            Partial Closure = road is partially blocked, closed or restricted. \\r\\n            Full Closure = road is fully blocked or closed.\",\n             \"type\": \"string\"\n           },\n           \"directions\": {\n             \"description\": \"The direction of the disruption on the street. Some example values:\\r\\n            All Directions\\r\\n            All Approaches\\r\\n            Clockwise\\r\\n            Anti-Clockwise\\r\\n            Northbound\\r\\n            Eastbound\\r\\n            Southbound\\r\\n            Westbound\\r\\n            Both Directions\",\n             \"type\": \"string\"\n           },\n           \"segments\": {\n             \"description\": \"Geographic description of the sections of this street that are affected.\",\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/StreetSegment\"\n             }\n           },\n           \"sourceSystemId\": {\n             \"format\": \"int64\",\n             \"description\": \"The ID from the source system of the disruption that this street belongs to.\",\n             \"type\": \"integer\"\n           },\n           \"sourceSystemKey\": {\n             \"description\": \"The key of the source system of the disruption that this street belongs to.\",\n             \"type\": \"string\"\n           }\n         }\n       },\n       \"RoadProject\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"projectId\": {\n             \"type\": \"string\"\n           },\n           \"schemeName\": {\n             \"type\": \"string\"\n           },\n           \"projectName\": {\n             \"type\": \"string\"\n           },\n           \"projectDescription\": {\n             \"type\": \"string\"\n           },\n           \"projectPageUrl\": {\n             \"type\": \"string\"\n           },\n           \"consultationPageUrl\": {\n             \"type\": \"string\"\n           },\n           \"consultationStartDate\": {\n             \"format\": \"date-time\",\n             \"type\": \"string\"\n           },\n           \"consultationEndDate\": {\n             \"format\": \"date-time\",\n             \"type\": \"string\"\n           },\n           \"constructionStartDate\": {\n             \"format\": \"date-time\",\n             \"type\": \"string\"\n           },\n           \"constructionEndDate\": {\n             \"format\": \"date-time\",\n             \"type\": \"string\"\n           },\n           \"boroughsBenefited\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"type\": \"string\"\n             }\n           },\n           \"cycleSuperhighwayId\": {\n             \"type\": \"string\"\n           },\n           \"phase\": {\n             \"enum\": [\n               \"Unscoped\",\n               \"Concept\",\n               \"ConsultationEnded\",\n               \"Consultation\",\n               \"Construction\",\n               \"Complete\"\n             ],\n             \"type\": \"string\"\n           },\n           \"contactName\": {\n             \"type\": \"string\"\n           },\n           \"contactEmail\": {\n             \"type\": \"string\"\n           },\n           \"externalPageUrl\": {\n             \"type\": \"string\"\n           },\n           \"projectSummaryPageUrl\": {\n             \"type\": \"string\"\n           }\n         }\n       },\n       \"RoadDisruptionLine\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"id\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"roadDisruptionId\": {\n             \"type\": \"string\"\n           },\n           \"isDiversion\": {\n             \"type\": \"boolean\"\n           },\n           \"multiLineString\": {\n             \"$ref\": \"#/components/schemas/DbGeography\"\n           },\n           \"startDate\": {\n             \"format\": \"date-time\",\n             \"type\": \"string\"\n           },\n           \"endDate\": {\n             \"format\": \"date-time\",\n             \"type\": \"string\"\n           },\n           \"startTime\": {\n             \"type\": \"string\"\n           },\n           \"endTime\": {\n             \"type\": \"string\"\n           }\n         }\n       },\n       \"RoadDisruptionImpactArea\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"id\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"roadDisruptionId\": {\n             \"type\": \"string\"\n           },\n           \"polygon\": {\n             \"$ref\": \"#/components/schemas/DbGeography\"\n           },\n           \"startDate\": {\n             \"format\": \"date-time\",\n             \"type\": \"string\"\n           },\n           \"endDate\": {\n             \"format\": \"date-time\",\n             \"type\": \"string\"\n           },\n           \"startTime\": {\n             \"type\": \"string\"\n           },\n           \"endTime\": {\n             \"type\": \"string\"\n           }\n         }\n       },\n       \"RoadDisruptionSchedule\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"startTime\": {\n             \"format\": \"date-time\",\n             \"type\": \"string\"\n           },\n           \"endTime\": {\n             \"format\": \"date-time\",\n             \"type\": \"string\"\n           }\n         }\n       },\n       \"StreetSegment\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"toid\": {\n             \"description\": \"A 16 digit unique integer identifying a OS ITN (Ordnance Survey Integrated Transport Network) road link.\",\n             \"type\": \"string\"\n           },\n           \"lineString\": {\n             \"description\": \"geoJSON formatted LineString containing two latitude/longitude (WGS84) pairs that identify the start and end points of the street segment.\",\n             \"type\": \"string\"\n           },\n           \"sourceSystemId\": {\n             \"format\": \"int64\",\n             \"description\": \"The ID from the source system of the disruption that this street belongs to.\",\n             \"type\": \"integer\"\n           },\n           \"sourceSystemKey\": {\n             \"description\": \"The key of the source system of the disruption that this street belongs to.\",\n             \"type\": \"string\"\n           }\n         }\n       },\n       \"Redirect\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"shortUrl\": {\n             \"type\": \"string\"\n           },\n           \"longUrl\": {\n             \"type\": \"string\"\n           },\n           \"active\": {\n             \"type\": \"boolean\"\n           }\n         }\n       },\n       \"StopPointCategory\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"category\": {\n             \"type\": \"string\"\n           },\n           \"availableKeys\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"type\": \"string\"\n             }\n           }\n         }\n       },\n       \"LineServiceType\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"lineName\": {\n             \"type\": \"string\"\n           },\n           \"lineSpecificServiceTypes\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/LineSpecificServiceType\"\n             }\n           }\n         }\n       },\n       \"LineSpecificServiceType\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"serviceType\": {\n             \"$ref\": \"#/components/schemas/LineServiceTypeInfo\"\n           },\n           \"stopServesServiceType\": {\n             \"type\": \"boolean\"\n           }\n         }\n       },\n       \"StopPointRouteSection\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"naptanId\": {\n             \"type\": \"string\"\n           },\n           \"lineId\": {\n             \"type\": \"string\"\n           },\n           \"mode\": {\n             \"type\": \"string\"\n           },\n           \"validFrom\": {\n             \"format\": \"date-time\",\n             \"type\": \"string\"\n           },\n           \"validTo\": {\n             \"format\": \"date-time\",\n             \"type\": \"string\"\n           },\n           \"direction\": {\n             \"type\": \"string\"\n           },\n           \"routeSectionName\": {\n             \"type\": \"string\"\n           },\n           \"lineString\": {\n             \"type\": \"string\"\n           },\n           \"isActive\": {\n             \"type\": \"boolean\"\n           },\n           \"serviceType\": {\n             \"type\": \"string\"\n           },\n           \"vehicleDestinationText\": {\n             \"type\": \"string\"\n           },\n           \"destinationName\": {\n             \"type\": \"string\"\n           }\n         }\n       },\n       \"DisruptedPoint\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"atcoCode\": {\n             \"type\": \"string\"\n           },\n           \"fromDate\": {\n             \"format\": \"date-time\",\n             \"type\": \"string\"\n           },\n           \"toDate\": {\n             \"format\": \"date-time\",\n             \"type\": \"string\"\n           },\n           \"description\": {\n             \"type\": \"string\"\n           },\n           \"commonName\": {\n             \"type\": \"string\"\n           },\n           \"type\": {\n             \"type\": \"string\"\n           },\n           \"mode\": {\n             \"type\": \"string\"\n           },\n           \"stationAtcoCode\": {\n             \"type\": \"string\"\n           },\n           \"appearance\": {\n             \"type\": \"string\"\n           },\n           \"additionalInformation\": {\n             \"type\": \"string\"\n           }\n         }\n       },\n       \"StopPointsResponse\": {\n         \"description\": \"A paged response containing StopPoints\",\n         \"type\": \"object\",\n         \"properties\": {\n           \"centrePoint\": {\n             \"description\": \"The centre latitude/longitude of this list of StopPoints\",\n             \"type\": \"array\",\n             \"items\": {\n               \"format\": \"double\",\n               \"type\": \"number\"\n             }\n           },\n           \"stopPoints\": {\n             \"description\": \"Collection of stop points\",\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/StopPoint\"\n             }\n           },\n           \"pageSize\": {\n             \"format\": \"int32\",\n             \"description\": \"The maximum size of the page in this response i.e. the maximum number of StopPoints\",\n             \"type\": \"integer\"\n           },\n           \"total\": {\n             \"format\": \"int32\",\n             \"description\": \"The total number of StopPoints available across all pages\",\n             \"type\": \"integer\"\n           },\n           \"page\": {\n             \"format\": \"int32\",\n             \"description\": \"The index of this page\",\n             \"type\": \"integer\"\n           }\n         }\n       },\n       \"RecommendationResponse\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"recommendations\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/Recommendation\"\n             }\n           }\n         }\n       },\n       \"Recommendation\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"id\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"rule\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"rank\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n           },\n           \"fareType\": {\n             \"type\": \"string\"\n           },\n           \"product\": {\n             \"type\": \"string\"\n           },\n           \"ticketType\": {\n             \"type\": \"string\"\n           },\n           \"ticketTime\": {\n             \"type\": \"string\"\n           },\n           \"productType\": {\n             \"type\": \"string\"\n           },\n           \"discountCard\": {\n             \"type\": \"string\"\n           },\n           \"zones\": {\n             \"type\": \"string\"\n           },\n           \"cost\": {\n             \"type\": \"string\"\n           },\n           \"priceDescription\": {\n             \"type\": \"string\"\n           },\n           \"priceComparison\": {\n             \"type\": \"string\"\n           },\n           \"recommendedTopUp\": {\n             \"type\": \"string\"\n           },\n           \"notes\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/Message\"\n             }\n           },\n           \"keyFeatures\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/Message\"\n             }\n           },\n           \"gettingYourTicket\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"$ref\": \"#/components/schemas/Message\"\n             }\n           },\n           \"singleFare\": {\n             \"format\": \"double\",\n             \"type\": \"number\"\n           }\n         }\n       },\n       \"EmissionsSurchargeVehicle\": {\n         \"description\": \"\",\n         \"type\": \"object\",\n         \"properties\": {\n           \"vrm\": {\n             \"type\": \"string\"\n           },\n           \"type\": {\n             \"type\": \"string\"\n           },\n           \"make\": {\n             \"type\": \"string\"\n           },\n           \"model\": {\n             \"type\": \"string\"\n           },\n           \"colour\": {\n             \"type\": \"string\"\n           },\n           \"compliance\": {\n             \"enum\": [\n               \"NotCompliant\",\n               \"Compliant\",\n               \"Exempt\"\n             ],\n             \"type\": \"string\"\n           }\n         }\n       },\n       \"ApiVersionInfo\": {\n         \"type\": \"object\",\n         \"properties\": {\n           \"label\": {\n             \"type\": \"string\"\n           },\n           \"timestamp\": {\n             \"format\": \"date-time\",\n             \"type\": \"string\"\n           },\n           \"version\": {\n             \"type\": \"string\"\n           },\n           \"assemblies\": {\n             \"type\": \"array\",\n             \"items\": {\n               \"type\": \"string\"\n             }\n           }\n         }\n       }\n     }\n   }\n }\n",
			"canonicalURL": "/github.com/yonaskolb/SwagGen@0bef6077c83620565e2ae50d76f9633061b0a2ac/-/blob/Specs/TFL/spec.json",
			"externalURLs": [
				{
					"url": "https://github.com/yonaskolb/SwagGen/blob/0bef6077c83620565e2ae50d76f9633061b0a2ac/Specs/TFL/spec.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/Place/Address/Streets/{Postcode}\": at 2554:43: get: operation \"Place_GetStreetsByPostCode\": at 2555:15: parse path \"/Place/Address/Streets/{Postcode}\": path parameter not specified: \"Postcode\""
}