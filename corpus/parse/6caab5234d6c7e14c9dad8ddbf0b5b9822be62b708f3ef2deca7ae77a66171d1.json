{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/rubygarage/boilerplate"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "swagger/v1/swagger.yaml",
			"byteSize": 5449,
			"content": "---\nopenapi: 3.0.1\ninfo:\n  title: API V1\n  version: v1\npaths:\n  \"/api/v1/users/account/profile/\":\n    get:\n      summary: show profile\n      tags:\n      - Users\n      parameters:\n      - name: Authorization\n        in: header\n        schema:\n          type: string\n      responses:\n        '401':\n          description: when successful renders user profile\n  \"/api/v1/users/account/profile/?include=not_valid_include\":\n    get:\n      summary: show profile\n      tags:\n      - Users\n      parameters:\n      - name: Authorization\n        in: header\n        schema:\n          type: string\n      responses:\n        '400':\n          description: when not found user profile\n  \"/api/v1/users/account/profile/?include=account\":\n    get:\n      summary: show profile\n      tags:\n      - Users\n      parameters:\n      - name: Authorization\n        in: header\n        schema:\n          type: string\n      responses:\n        '200':\n          description: when successful renders user profile\n  \"/api/v1/users/registration\":\n    post:\n      summary: Creates a user\n      tags:\n      - Users\n      parameters: []\n      responses:\n        '201':\n          description: user created\n        '400':\n          description: unprocessable entity\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                email:\n                  type: string\n                password:\n                  type: string\n                password_confirmation:\n                  type: string\n              required:\n              - email\n              - password\n              - password_confirmation\n  \"/api/v1/users/reset_password/?email_token={email_token}\":\n    get:\n      summary: show reset_password\n      tags:\n      - Users\n      parameters:\n      - name: email_token\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '204':\n          description: Successful\n        '422':\n          description: Unprocessable Entity\n        '404':\n          description: Unprocessable Entity\n  \"/api/v1/users/reset_password/\":\n    post:\n      summary: create reset_password\n      tags:\n      - Users\n      parameters: []\n      responses:\n        '202':\n          description: successful\n        '422':\n          description: when wrong params\n        '404':\n          description: user account not found\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                email:\n                  type: string\n              required:\n              - email\n    put:\n      summary: update reset_password\n      tags:\n      - Users\n      parameters: []\n      responses:\n        '204':\n          description: successful updates user account password\n        '422':\n          description: successful updates user account password\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                email_token:\n                  type: string\n                password:\n                  type: string\n                password_confirmation:\n                  type: string\n              required:\n              - email_token\n              - password\n              - password_confirmation\n  \"/api/v1/users/session/refresh\":\n    post:\n      summary: create refresh\n      tags:\n      - Users\n      parameters:\n      - name: X-Refresh-Token\n        in: header\n        schema:\n          type: string\n      responses:\n        '403':\n          description: when unexpired access token\n        '401':\n          description: when user unauthenticated\n        '201':\n          description: successful renders refreshed tokens bundle in meta\n  \"/api/v1/users/session\":\n    post:\n      summary: create session\n      tags:\n      - Users\n      parameters: []\n      responses:\n        '201':\n          description: successfu renders user whose session was createdl\n        '422':\n          description: when wrong params\n        '401':\n          description: when user account not found\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                email:\n                  type: string\n                password:\n                  type: string\n                password_confirmation:\n                  type: string\n              required:\n              - email\n              - password\n              - password_confirmation\n    delete:\n      summary: delete session\n      tags:\n      - Users\n      parameters:\n      - name: X-Refresh-Token\n        in: header\n        schema:\n          type: string\n      responses:\n        '401':\n          description: successful clears user session\n        '204':\n          description: successful clears user session\n  \"/api/v1/users/verification?email_token={email_token}\":\n    get:\n      summary: show verification\n      tags:\n      - Users\n      parameters:\n      - name: email_token\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '404':\n          description: when user account not found\n        '422':\n          description: when wrong email token\n        '204':\n          description: successful verifies user account\nservers:\n- url: https://{defaultHost}\n  variables:\n    defaultHost:\n      default: localhost:3000\n",
			"canonicalURL": "/github.com/rubygarage/boilerplate@8edf94f693f08dc8ca83a35dfb6156cbe176d6f9/-/blob/swagger/v1/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/rubygarage/boilerplate/blob/8edf94f693f08dc8ca83a35dfb6156cbe176d6f9/swagger/v1/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /api/v1/users/account/profile/?include=not_valid_include: get: parse path \"/api/v1/users/account/profile/?include=not_valid_include\": path MUST NOT contain a query string"
}