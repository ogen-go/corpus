{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/RumbleDiscovery/rumble-api"
		},
		"file": {
			"name": "rumble-api.yml",
			"size": 0,
			"path": "rumble-api.yml",
			"byteSize": 121214,
			"content": "openapi: 3.0.0\nservers:\n  - description: Rumble Console\n    url: https://console.rumble.run/api/v1.0\ninfo:\n  description: Rumble Network Discovery API\n  version: \"2.12.0\"\n  title: Rumble API\n  contact:\n    email: support@rumble.run\n  license:\n    name: Commercial\n    url: 'https://www.rumble.run/legal/terms'\ntags:\n  - name: Organization\n    description: Requires Organization Key\n  - name: Export\n    description: Requires Export Token or Organization Key\n  - name: Public\n    description: Unauthenticated\n\npaths:\n  /releases/agent/version:\n    get:\n      tags:\n        - Public\n      operationId: getLatestAgentVersion\n      summary: Returns latest agent version\n      responses:\n        '200':\n          description: component version\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ComponentVersion'\n\n  /releases/scanner/version:\n    get:\n      tags:\n        - Public\n      operationId: getLatestScannerVersion\n      summary: Returns latest scanner version\n      responses:\n        '200':\n          description: component version\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ComponentVersion'\n\n  /releases/platform/version:\n    get:\n      tags:\n        - Public\n      operationId: getLatestPlatformVersion\n      summary: Returns latest platform version\n      responses:\n        '200':\n          description: component version\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ComponentVersion'\n\n  /export/org/assets.json:\n    get:\n      tags:\n        - Export\n      operationId: exportAssetsJSON\n      summary: Exports the asset inventory\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: query\n          name: search\n          description: an optional search string for filtering results\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: fields\n          description: an optional list of fields to export, comma-separated\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: filtered asset results\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Asset'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n  /export/org/assets.jsonl:\n    get:\n      tags:\n        - Export\n      operationId: exportAssetsJSONL\n      summary: Asset inventory as JSON line-delimited\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: query\n          name: search\n          description: an optional search string for filtering results\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: fields\n          description: an optional list of fields to export, comma-separated\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          # This is a streaming response of one Asset object per line in JSON format\n          description: filtered asset results\n          content:\n            application/json:\n              schema:\n                type: string\n                format: binary\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n  /export/org/assets.csv:\n    get:\n      tags:\n        - Export\n      operationId: exportAssetsCSV\n      summary: Asset inventory as CSV\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: query\n          name: search\n          description: an optional search string for filtering results\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: filtered asset results\n          content:\n            text/csv:\n              schema:\n                type: string\n                format: binary\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n  /export/org/assets.nmap.xml:\n    get:\n      tags:\n        - Export\n      operationId: exportAssetsNmapXML\n      summary: Asset inventory as Nmap-style XML\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: query\n          name: search\n          description: an optional search string for filtering results\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: filtered asset results\n          content:\n            text/xml:\n              schema:\n                type: string\n                format: binary\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n  /export/org/services.json:\n    get:\n      tags:\n        - Export\n      operationId: exportServicesJSON\n      summary: Service inventory as JSON\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: query\n          name: search\n          description: an optional search string for filtering results\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: fields\n          description: an optional list of fields to export, comma-separated\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: filtered service results\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Service'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n  /export/org/services.jsonl:\n    get:\n      tags:\n        - Export\n      operationId: exportServicesJSONL\n      summary: Service inventory as JSON line-delimited\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: query\n          name: search\n          description: an optional search string for filtering results\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: fields\n          description: an optional list of fields to export, comma-separated\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: filtered service results\n          content:\n          # This is a streaming response of one Service object per line in JSON format\n            application/json:\n              schema:\n                type: string\n                format: binary\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n  /export/org/services.csv:\n    get:\n      tags:\n        - Export\n      operationId: exportServicesCSV\n      summary: Service inventory as CSV\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: query\n          name: search\n          description: an optional search string for filtering results\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: filtered service results\n          content:\n            text/csv:\n              schema:\n                type: string\n                format: binary\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n\n  /export/org/sites.json:\n    get:\n      tags:\n        - Export\n      operationId: exportSitesJSON\n      summary: Export all sites\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: query\n          name: search\n          description: an optional search string for filtering results\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: fields\n          description: an optional list of fields to export, comma-separated\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: all sites\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Site'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n  /export/org/sites.jsonl:\n    get:\n      tags:\n        - Export\n      operationId:  exportSitesJSONL\n      summary: Site list as JSON line-delimited\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: query\n          name: search\n          description: an optional search string for filtering results\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: fields\n          description: an optional list of fields to export, comma-separated\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: all sites\n          content:\n          # This is a streaming response of one Site object per line in JSON format\n            application/json:\n              schema:\n                type: string\n                format: binary\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n  /export/org/sites.csv:\n    get:\n      tags:\n        - Export\n      operationId:  exportSitesCSV\n      summary: Site list as CSV\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: all sites\n          content:\n            text/csv:\n              schema:\n                type: string\n                format: binary\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n\n  /export/org/wireless.json:\n    get:\n      tags:\n        - Export\n      operationId: exportWirelessJSON\n      summary: Wireless inventory as JSON\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: query\n          name: search\n          description: an optional search string for filtering results\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: fields\n          description: an optional list of fields to export, comma-separated\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: filtered wireless results\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Wireless'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n  /export/org/wireless.jsonl:\n    get:\n      tags:\n        - Export\n      operationId: exportWirelessJSONL\n      summary: Wireless inventory as JSON line-delimited\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: query\n          name: search\n          description: an optional search string for filtering results\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: fields\n          description: an optional list of fields to export, comma-separated\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: filtered wireless results\n          content:\n          # This is a streaming response of one Wireless object per line in JSON format\n            application/json:\n              schema:\n                type: string\n                format: binary\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n  /export/org/wireless.csv:\n    get:\n      tags:\n        - Export\n      operationId: exportWirelessCSV\n      summary: Wireless inventory as CSV\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: query\n          name: search\n          description: an optional search string for filtering results\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: filtered wireless results\n          content:\n            text/csv:\n              schema:\n                type: string\n                format: binary\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n  /org/assets/top.types.csv:\n    get:\n      tags:\n        - Export\n      operationId: exportAssetTopTypesCSV\n      summary: Top asset types as CSV\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: top asset types and counts as csv\n          content:\n            text/csv:\n              schema:\n                type: string\n                format: binary\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n  /org/assets/top.os.csv:\n    get:\n      tags:\n        - Export\n      operationId: exportAssetTopOSCSV\n      summary: Top asset operating systems as CSV\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: top operating systems and counts as csv\n          content:\n            text/csv:\n              schema:\n                type: string\n                format: binary\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n  /org/assets/top.hw.csv:\n    get:\n      tags:\n        - Export\n      operationId: exportAssetTopHWCSV\n      summary: Top asset hardware products as CSV\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: top asset hardware platforms and counts as csv\n          content:\n            text/csv:\n              schema:\n                type: string\n                format: binary\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n  /org/assets/top.tags.csv:\n    get:\n      tags:\n        - Export\n      operationId: exportAssetTopTagsCSV\n      summary: Top asset tags as CSV\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: top asset tags and counts as csv\n          content:\n            text/csv:\n              schema:\n                type: string\n                format: binary\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'                    \n\n\n\n  /org/services/top.tcp.csv:\n    get:\n      tags:\n        - Export\n      operationId: exportServicesTopTCPCSV\n      summary: Top TCP services as CSV\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: top TCP services and counts as csv\n          content:\n            text/csv:\n              schema:\n                type: string\n                format: binary\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'      \n\n  /org/services/top.udp.csv:\n    get:\n      tags:\n        - Export\n      operationId: exportServicesTopUDPCSV\n      summary: Top UDP services as CSV\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: top UDP services and counts as csv\n          content:\n            text/csv:\n              schema:\n                type: string\n                format: binary\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'  \n\n  /org/services/top.protocols.csv:\n    get:\n      tags:\n        - Export\n      operationId: exportServicesTopProtocolsCSV\n      summary: Top service protocols as CSV\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: top service protocols and counts as csv\n          content:\n            text/csv:\n              schema:\n                type: string\n                format: binary\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'  \n\n  /org/services/top.products.csv:\n    get:\n      tags:\n        - Export\n      operationId: exportServicesTopProductsCSV\n      summary: Top service products as CSV\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: top service products and counts as csv\n          content:\n            text/csv:\n              schema:\n                type: string\n                format: binary\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'  \n\n  /org/services/subnet.stats.csv:\n    get:\n      tags:\n        - Export\n      operationId: exportSubnetUtilizationStatsCSV\n      summary: Subnet utilization statistics as as CSV\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: query\n          name: mask\n          description: an optional subnet mask size (ex:24)\n          required: false\n          schema:\n            type: string        \n      responses:\n        '200':\n          description: subnet utilization stats as csv\n          content:\n            text/csv:\n              schema:\n                type: string\n                format: binary\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'  \n\n  /org:\n    get:\n      tags:\n        - Organization\n      operationId: getOrganization\n      summary: Get organization details\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: organization details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Organization'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n    patch:\n      tags:\n        - Organization\n      operationId: updateOrganization\n      summary: Update organization details\n      security:\n        - bearerAuth: []\n      requestBody:\n        description: organization options\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OrgOptions'\n      responses:\n        '200':\n          description: organization details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Organization'\n\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n  /org/key:\n    get:\n      tags:\n        - Organization\n      operationId: getKey\n      summary: Get API key details\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: api key details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIKey'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n    delete:\n      tags:\n        - Organization\n      operationId: removeKey\n      summary: Remove the current API key\n      security:\n        - bearerAuth: []\n      responses:\n        '204':\n          description: empty response\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n  /org/key/rotate:\n    patch:\n      tags:\n        - Organization\n      operationId: rotateKey\n      summary: Rotate the API key secret and return the updated key\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: api key details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIKey'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n  /org/agents:\n    get:\n      tags:\n        - Organization\n      operationId: getAgents\n      summary: Get all agents\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: array of agents\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Agent'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n  /org/agents/{agent_id}:\n    get:\n      tags:\n        - Organization\n      operationId: getAgent\n      summary: Get details for a single agent\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: path\n          name: agent_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID of the agent\n      responses:\n        '200':\n          description: agent details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Agent'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          $ref: '#/components/responses/NotFoundError'\n    delete:\n      tags:\n        - Organization\n      operationId: removeAgent\n      summary: Remove and uninstall an agent\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: path\n          name: agent_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID of the agent to remove\n      responses:\n        '204':\n          description: empty response\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          $ref: '#/components/responses/NotFoundError'\n    patch:\n      tags:\n        - Organization\n      operationId: updateAgentSite\n      summary: Update the site associated with agent\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: path\n          name: agent_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID of the agent to update\n      requestBody:\n        description: site_id to associate with the agent\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AgentSiteID\"\n      responses:\n        '200':\n          description: agent details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Agent'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          $ref: '#/components/responses/NotFoundError'\n\n  /org/agents/{agent_id}/update:\n    post:\n      tags:\n        - Organization\n      operationId: upgradeAgent\n      summary: Force an agent to update and restart\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: path\n          name: agent_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID of the agent to update\n      responses:\n        '204':\n          description: empty response\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          $ref: '#/components/responses/NotFoundError'\n\n  /org/sites:\n    get:\n      tags:\n        - Organization\n      operationId: getSites\n      summary: Get all sites\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: array of sites\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Site'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n    put:\n      tags:\n        - Organization\n      operationId: createSite\n      summary: Create a new site\n      security:\n        - bearerAuth: []\n      requestBody:\n        description: site definition\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SiteOptions\"\n      responses:\n        '200':\n          description: site details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Site'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          $ref: '#/components/responses/NotFoundError'\n\n  /org/sites/{site_id}:\n    get:\n      tags:\n        - Organization\n      operationId: getSite\n      summary: Get site details\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: path\n          name: site_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID or name of the site\n      responses:\n        '200':\n          description: site details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Site'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          $ref: '#/components/responses/NotFoundError'\n    delete:\n      tags:\n        - Organization\n      operationId: removeSite\n      summary: Remove a site and associated assets\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: path\n          name: site_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID or name of the site to remove\n      responses:\n        '204':\n          description: empty response\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          $ref: '#/components/responses/NotFoundError'\n    patch:\n      tags:\n        - Organization\n      operationId: updateSite\n      summary: Update a site definition\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: path\n          name: site_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID or name of the site to update\n      requestBody:\n        description: site object\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SiteOptions'\n      responses:\n        '200':\n          description: site details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Site'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          $ref: '#/components/responses/NotFoundError'\n\n  /org/sites/{site_id}/import:\n    put:\n      tags:\n        - Organization\n      operationId: importScanData\n      summary: Import a scan data file into a site\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: path\n          name: site_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID or name of the site to import scan data into\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              type: string\n              format: binary\n      responses:\n        '200':\n          description: import task\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Task'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/LicenseExpiredError'\n        '404':\n          $ref: '#/components/responses/NotFoundError'\n        '500':\n          $ref: '#/components/responses/ProcessingError'\n\n  /org/sites/{site_id}/scan:\n    put:\n      tags:\n        - Organization\n      operationId: createScan\n      summary: Create a scan task for a given site\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: path\n          name: site_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID or name of the site to scan\n      requestBody:\n        content:\n          text/json:\n            schema:\n               $ref: '#/components/schemas/ScanOptions'\n      responses:\n        '200':\n          description: a created scan task\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Task'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/LicenseExpiredError'\n        '404':\n          $ref: '#/components/responses/NotFoundError'\n        '500':\n          $ref: '#/components/responses/ProcessingError'\n\n  /org/assets:\n    get:\n      tags:\n        - Organization\n      operationId: getAssets\n      summary: Get all assets\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: query\n          name: search\n          description: an optional search string for filtering results\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: array of assets\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Asset'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n  /org/assets/{asset_id}:\n    get:\n      tags:\n        - Organization\n      operationId: getAsset\n      summary: Get asset details\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: path\n          name: asset_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID of the asset to retrieve\n      responses:\n        '200':\n          description: asset details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Asset'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          $ref: '#/components/responses/NotFoundError'\n    delete:\n      tags:\n        - Organization\n      operationId: removeAsset\n      summary: Remove an asset\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: path\n          name: asset_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID of the asset to remove\n      responses:\n        '204':\n          description: empty response\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          $ref: '#/components/responses/NotFoundError'\n\n  /org/assets/{asset_id}/comments:\n    patch:\n      tags:\n        - Organization\n      operationId: updateAssetComments\n      summary: Update asset comments\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: path\n          name: asset_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID of the asset to update\n      requestBody:\n        description: comments to apply to the asset\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AssetComments'\n      responses:\n        '200':\n          description: asset details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Asset'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          $ref: '#/components/responses/NotFoundError'\n\n  /org/assets/{asset_id}/tags:\n    patch:\n      tags:\n        - Organization\n      operationId: updateAssetTags\n      summary: Update asset tags\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: path\n          name: asset_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID of the agent to update\n      requestBody:\n        description: tags to apply to the asset\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AssetTags'\n      responses:\n        '200':\n          description: asset details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Asset'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          $ref: '#/components/responses/NotFoundError'\n\n  /org/assets/bulk/tags:\n    patch:\n      tags:\n        - Organization\n      operationId: updateBulkAssetTags\n      summary: Update tags across multiple assets based on a search query\n      security:\n        - bearerAuth: []\n      requestBody:\n        description: search query to filter and tags to apply\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AssetTagsWithSearch'\n      responses:\n        '200':\n          description: status message\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/StatusMessage'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          $ref: '#/components/responses/NotFoundError'\n\n  /org/assets/bulk/clearTags:\n    post:\n      tags:\n        - Organization\n      operationId: clearBulkAssetTags\n      summary: Clear all tags across multiple assets based on a search query\n      security:\n        - bearerAuth: []\n      requestBody:\n        description: search query to filter\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Search'\n      responses:\n        '200':\n          description: status message\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/StatusMessage'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          $ref: '#/components/responses/NotFoundError'\n\n  /org/services:\n    get:\n      tags:\n        - Organization\n      operationId: getServices\n      summary: Get all services\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: query\n          name: search\n          description: an optional search string for filtering results\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: array of services\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Service'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n  /org/services/{service_id}:\n    get:\n      tags:\n        - Organization\n      operationId: getService\n      summary: Get service details\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: path\n          name: service_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID of the service to retrieve\n      responses:\n        '200':\n          description: service details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Service'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          $ref: '#/components/responses/NotFoundError'\n    delete:\n      tags:\n        - Organization\n      operationId: removeService\n      summary: Remove a service\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: path\n          name: service_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID of the service to remove\n      responses:\n        '204':\n          description: empty response\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          $ref: '#/components/responses/NotFoundError'\n\n  /org/wireless:\n    get:\n      tags:\n        - Organization\n      operationId: getWirelessLANs\n      summary: Get all wireless LANs\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: query\n          name: search\n          description: an optional search string for filtering results\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: array of wireless LANs\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Wireless'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n  /org/wireless/{wireless_id}:\n    get:\n      tags:\n        - Organization\n      operationId: getWirelessLAN\n      summary: Get wireless LAN details\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: path\n          name: wireless_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID of the wireless LAN to retrieve\n      responses:\n        '200':\n          description: wireless details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Wireless'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n    delete:\n      tags:\n        - Organization\n      operationId: removeWirelessLAN\n      summary: Remove a wireless LAN\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: path\n          name: wireless_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID of the wireless LAN to remove\n      responses:\n        '204':\n          description: empty response\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          $ref: '#/components/responses/NotFoundError'\n\n\n  /org/tasks:\n    get:\n      tags:\n        - Organization\n      operationId: getTasks\n      summary: Get all tasks (last 1000)\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: query\n          name: status\n          description: an optional status string for filtering results\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: search\n          description: an optional search string for filtering results\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: array of tasks\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Task'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n  /org/tasks/{task_id}:\n    get:\n      tags:\n        - Organization\n      operationId: getTask\n      summary: Get task details\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: path\n          name: task_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID of the task to retrieve\n      responses:\n        '200':\n          description: task details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Task'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n    patch:\n      tags:\n        - Organization\n      operationId: updateTask\n      summary: Update task parameters\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: path\n          name: task_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID of the task to update\n      requestBody:\n        description: task object\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Task'\n      responses:\n        '200':\n          description: task details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Task'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          $ref: '#/components/responses/NotFoundError'\n\n  /org/tasks/{task_id}/data:\n    get:\n      tags:\n        - Organization\n      operationId: getTaskScanData\n      summary: Returns a temporary task scan data url\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: path\n          name: task_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID of the task\n      responses:\n        '200':\n          $ref: '#/components/schemas/URL'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          $ref: '#/components/responses/NotFoundError'\n\n  /org/tasks/{task_id}/changes:\n    get:\n      tags:\n        - Organization\n      operationId: getTaskChangeReport\n      summary: Returns a temporary task change report data url\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: path\n          name: task_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID of the task\n      responses:\n        '200':\n          $ref: '#/components/schemas/URL'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          $ref: '#/components/responses/NotFoundError'\n\n  /org/tasks/{task_id}/log:\n    get:\n      tags:\n        - Organization\n      operationId: getTaskLog\n      summary: Returns a temporary task log data url\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: path\n          name: task_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID of the task\n      responses:\n        '200':\n          $ref: '#/components/schemas/URL'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          $ref: '#/components/responses/NotFoundError'\n\n  /org/tasks/{task_id}/stop:\n    post:\n      tags:\n        - Organization\n      operationId: stopTask\n      summary: Signal that a task should be stopped or canceledThis will also remove recurring and scheduled tasks\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: path\n          name: task_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID of the task to stop\n      responses:\n        '200':\n          $ref: '#/components/schemas/Task'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          $ref: '#/components/responses/NotFoundError'\n\n  /org/tasks/{task_id}/hide:\n    post:\n      tags:\n        - Organization\n      operationId: hideTask\n      summary: Signal that a completed task should be hidden\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: path\n          name: task_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID of the task to hide\n      responses:\n        '200':\n          $ref: '#/components/schemas/Task'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          $ref: '#/components/responses/NotFoundError'\n\n  /account/orgs:\n    get:\n      tags:\n        - Account\n      operationId: getAccountOrganizations\n      summary: Get all organization details\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: query\n          name: search\n          description: an optional search string for filtering results\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: array of organizations\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Organization'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n    put:\n      tags:\n        - Account\n      operationId: createAccountOrganization\n      summary: Create a new organization\n      security:\n        - bearerAuth: []\n      requestBody:\n        description: organization definition\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/OrgOptions\"\n      responses:\n        '200':\n          description: organization details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Organization'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          $ref: '#/components/responses/NotFoundError'\n\n  /account/orgs/{org_id}:\n    get:\n      tags:\n        - Account\n      operationId: getAccountOrganization\n      summary: Get organization details\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: path\n          name: org_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID of the organization to retrieve\n      responses:\n        '200':\n          $ref: '#/components/schemas/Organization'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n    patch:\n      tags:\n        - Account\n      operationId: updateAccountOrganization\n      summary: Update organization details\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: path\n          name: org_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID of the organization to retrieve\n      requestBody:\n        description: organization options\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OrgOptions'\n      responses:\n        '200':\n          description: organization details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Organization'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n    delete:\n      tags:\n        - Account\n      operationId: removeAccountOrganization\n      summary: Remove this organization\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: path\n          name: org_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID of the organization to retrieve\n      responses:\n        '204':\n          description: empty response\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n  /account/orgs/{org_id}/exportToken:\n    delete:\n      tags:\n        - Account\n      operationId: deleteAccountOrganizationExportToken\n      summary: Removes the export token from the specified organization\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: path\n          name: org_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID of the organization to retrieve\n      responses:\n        '204':\n          description: empty response\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n  /account/orgs/{org_id}/exportToken/rotate:\n    patch:\n      tags:\n        - Account\n      operationId: rotateAccountOrganizationExportToken\n      summary: Rotates the organization export token and returns the updated organization\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: path\n          name: org_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID of the organization to retrieve\n      responses:\n        '200':\n          description: organization details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Organization'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n  /account/license:\n    get:\n      tags:\n        - Account\n      operationId: getAccountLicense\n      summary: Get license details\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          $ref: '#/components/schemas/License'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n\n  /account/sites:\n    get:\n      tags:\n        - Account\n      operationId: getAccountSites\n      summary: Get all sites details across all organizations\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: query\n          name: search\n          description: an optional search string for filtering results\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: array of sites\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Site'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n  /account/credentials:\n    get:\n      tags:\n        - Account\n      operationId: getAccountCredentials\n      summary: Get all account credentials\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: query\n          name: search\n          description: an optional search string for filtering results\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: array of credentials\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Credential'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n    put:\n      tags:\n        - Account\n      operationId: createAccountCredential\n      summary: Create a new credential\n      security:\n        - bearerAuth: []\n      requestBody:\n        description: credential parameters\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CredentialOptions\"\n      responses:\n        '200':\n          description: credential details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Credential'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          $ref: '#/components/responses/NotFoundError'\n\n  /account/credentials/{credential_id}:\n    get:\n      tags:\n        - Account\n      operationId: getAccountCredential\n      summary: Get credential details\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: path\n          name: credential_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID of the credential to retrieve\n      responses:\n        '200':\n          description: credential details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Credential'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          $ref: '#/components/responses/NotFoundError'\n    delete:\n      tags:\n        - Account\n      operationId: removeAccountCredential\n      summary: Remove this credential\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: path\n          name: credential_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID of the credential to delete\n      responses:\n        '204':\n          description: empty response\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          $ref: '#/components/responses/NotFoundError'\n\n  /account/keys:\n    get:\n      tags:\n        - Account\n      operationId: getAccountKeys\n      summary: Get all active API keys\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: array of keys\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/APIKey'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n    put:\n      tags:\n        - Account\n      operationId: createAccountKey\n      summary: Create a new key\n      security:\n        - bearerAuth: []\n      requestBody:\n        description: key parameters\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/APIKeyOptions\"\n      responses:\n        '200':\n          description: key details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIKey'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          $ref: '#/components/responses/NotFoundError'\n  /account/keys/{key_id}:\n    get:\n      tags:\n        - Account\n      operationId: getAccountKey\n      summary: Get key details\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: path\n          name: key_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID of the key to retrieve\n      responses:\n        '200':\n          $ref: '#/components/schemas/APIKey'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n    delete:\n      tags:\n        - Account\n      operationId: removeAccountKey\n      summary: Remove this key\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: path\n          name: key_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID of the key to retrieve\n      responses:\n        '204':\n          description: empty response\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n  /account/keys/{key_id}/rotate:\n    patch:\n      tags:\n        - Account\n      operationId: rotateAccountKey\n      summary: Rotates the key secret\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: path\n          name: key_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID of the key to retrieve\n      responses:\n        '200':\n          description: key details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIKey'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n  /account/events.json:\n    get:\n      tags:\n        - Account\n      operationId: exportEventsJSON\n      summary: System event log as JSON\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: query\n          name: search\n          description: an optional search string for filtering results\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: fields\n          description: an optional list of fields to export, comma-separated\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: filtered event results\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Event'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n  /account/events.jsonl:\n    get:\n      tags:\n        - Account\n      operationId: exportEventsJSONL\n      summary: System event log as JSON line-delimited\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: query\n          name: search\n          description: an optional search string for filtering results\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: fields\n          description: an optional list of fields to export, comma-separated\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: filtered event results\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Event'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n  /account/tasks:\n    get:\n      tags:\n        - Account\n      operationId: getAccountTasks\n      summary: Get all task details across all organizations (up to 1000)\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: query\n          name: search\n          description: an optional search string for filtering results\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: array of tasks\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Task'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n  /account/agents:\n    get:\n      tags:\n        - Account\n      operationId: getAccountAgents\n      summary: Get all agents across all organizations\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: query\n          name: search\n          description: an optional search string for filtering results\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: array of tasks\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Agent'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n  /account/users:\n    get:\n      tags:\n        - Account\n      operationId: getAccountUsers\n      summary: Get all users\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: array of users\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/User'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n    put:\n      tags:\n        - Account\n      operationId: createAccountUser\n      summary: Create a new user account\n      security:\n        - bearerAuth: []\n      requestBody:\n        description: user parameters\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UserOptions\"\n      responses:\n        '200':\n          description: key details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          $ref: '#/components/responses/NotFoundError'\n\n  /account/users/invite:\n    put:\n      tags:\n        - Account\n      operationId: createAccountUserInvite\n      summary: Create a new user account and send an email invite\n      security:\n        - bearerAuth: []\n      requestBody:\n        description: user invite parameters\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UserInviteOptions\"\n      responses:\n        '200':\n          description: key details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          $ref: '#/components/responses/NotFoundError'\n\n  /account/users/{user_id}:\n    get:\n      tags:\n        - Account\n      operationId: getAccountUser\n      summary: Get user details\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: path\n          name: user_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID of the user to retrieve\n      responses:\n        '200':\n          $ref: '#/components/schemas/User'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n    delete:\n      tags:\n        - Account\n      operationId: removeAccountUser\n      summary: Remove this user\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: path\n          name: user_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID of the user to delete\n      responses:\n        '204':\n          description: empty response\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n    patch:\n      tags:\n        - Account\n      operationId: updateAccountUser\n      summary: Update a user's details\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: path\n          name: user_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID of the user to retrieve\n      requestBody:\n        description: user parameters\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UserOptions\"\n      responses:\n        '200':\n          $ref: '#/components/schemas/User'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n  /account/users/{user_id}/resetMFA:\n    patch:\n      tags:\n        - Account\n      operationId: resetAccountUserMFA\n      summary: Resets the user's MFA tokens\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: path\n          name: user_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID of the user to retrieve\n      responses:\n        '200':\n          $ref: '#/components/schemas/User'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n\n  /account/users/{user_id}/resetLockout:\n    patch:\n      tags:\n        - Account\n      operationId: resetAccountUserLockout\n      summary: Resets the user's lockout status\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: path\n          name: user_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID of the user to retrieve\n      responses:\n        '200':\n          $ref: '#/components/schemas/User'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n  /account/users/{user_id}/resetPassword:\n    patch:\n      tags:\n        - Account\n      operationId: resetAccountUserPassword\n      summary: Sends the user a password reset email\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: path\n          name: user_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID of the user to retrieve\n      responses:\n        '200':\n          $ref: '#/components/schemas/User'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n  /account/groups:\n    get:\n      tags:\n        - Account\n      operationId: getAccountGroups\n      summary: Get all groups\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          $ref: '#/components/schemas/Group'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n    post:\n      tags:\n        - Account\n      operationId: createAccountGroup\n      summary: Create a new group\n      security:\n        - bearerAuth: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GroupPost\"\n      responses:\n        '200':\n          $ref: '#/components/schemas/Group'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n    put:\n      tags:\n        - Account\n      operationId: updateAccountGroup\n      summary: Update an existing group\n      security:\n        - bearerAuth: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GroupPut\"\n      responses:\n        '200':\n          $ref: '#/components/schemas/Group'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n  /account/groups/{group_id}:\n    parameters:\n      - in: path\n        name: group_id\n        schema:\n          type: string\n          format: uuid\n        required: true\n        description: UUID of the group\n    get:\n      tags:\n        - Account\n      operationId: getAccountGroup\n      summary: Get group details\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          $ref: '#/components/schemas/Group'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          $ref: '#/components/responses/NotFoundError'\n    delete:\n      tags:\n        - Account\n      operationId: removeAccountGroup\n      summary: Remove this group\n      security:\n        - bearerAuth: []\n      responses:\n        '204':\n          description: empty response\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n  /account/sso/groups:\n    get:\n      tags:\n        - Account\n      operationId: getAccountGroupMappings\n      summary: Get all SSO group mappings\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          $ref: '#/components/schemas/GroupMapping'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n    post:\n      tags:\n        - Account\n      operationId: createAccountGroupMapping\n      summary: Create a new SSO group mapping\n      security:\n        - bearerAuth: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GroupMapping\"\n      responses:\n        '200':\n          $ref: '#/components/schemas/GroupMapping'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n    put:\n      tags:\n        - Account\n      operationId: updateAccountGroupMapping\n      summary: Update an existing SSO group mapping\n      security:\n        - bearerAuth: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GroupMapping\"\n      responses:\n        '200':\n          $ref: '#/components/schemas/GroupMapping'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n  /account/sso/groups/{group_mapping_id}:\n    parameters:\n      - in: path\n        name: group_mapping_id\n        schema:\n          type: string\n          format: uuid\n        required: true\n        description: UUID of the SSO group mapping\n    get:\n      tags:\n        - Account\n      operationId: getAccountGroupMapping\n      summary: Get SSO group mapping details\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          $ref: '#/components/schemas/GroupMapping'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          $ref: '#/components/responses/NotFoundError'\n    delete:\n      tags:\n        - Account\n      operationId: removeAccountGroupMapping\n      summary: Remove this SSO group mapping\n      security:\n        - bearerAuth: []\n      responses:\n        '204':\n          description: empty response\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n  /export/org/assets/sync/created/assets.json:\n    get:\n      tags:\n        - Splunk\n      operationId: splunkAssetSyncCreatedJSON\n      summary: Exports the asset inventory in a sync-friendly manner using created_at as a checkpoint. Requires the Splunk entitlement.\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: query\n          name: search\n          description: an optional search string for filtering results\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: fields\n          description: an optional list of fields to export, comma-separated\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: since\n          description: an optional unix timestamp to use as a checkpoint\n          required: false\n          schema:\n            type: integer\n            format: int64\n            example: 1576300370\n      responses:\n        '200':\n          description: filtered asset results with a checkpoint wrapper\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AssetsWithCheckpoint'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n  /export/org/assets/sync/updated/assets.json:\n    get:\n      tags:\n        - Splunk\n      operationId: splunkAssetSyncUpdatedJSON\n      summary: Exports the asset inventory in a sync-friendly manner using updated_at as a checkpoint. Requires the Splunk entitlement.\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: query\n          name: search\n          description: an optional search string for filtering results\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: fields\n          description: an optional list of fields to export, comma-separated\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: since\n          description: an optional unix timestamp to use as a checkpoint\n          required: false\n          schema:\n            type: integer\n            format: int64\n            example: 1576300370\n      responses:\n        '200':\n          description: filtered asset results with a checkpoint wrapper\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AssetsWithCheckpoint'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n\n  /export/org/assets.servicenow.csv:\n    get:\n      tags:\n        - ServiceNow\n      operationId: snowExportAssetsCSV\n      summary: Export an asset inventory as CSV for ServiceNow integration\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: asset export\n          content:\n            text/csv:\n              schema:\n                type: string\n                format: binary\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n  /export/org/assets.servicenow.json:\n    get:\n      tags:\n        - ServiceNow\n      operationId: snowExportAssetsJSON\n      summary: Exports the asset inventory as JSON\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: filtered asset results\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AssetServiceNow'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n  /export/org/services.servicenow.csv:\n    get:\n      tags:\n        - ServiceNow\n      operationId: snowExportServicesCSV\n      summary: Export a service inventory as CSV for ServiceNow integration\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: services export\n          content:\n            text/csv:\n              schema:\n                type: string\n                format: binary\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n\n  /export/org/assets.cisco.csv:\n    get:\n      tags:\n        - Cisco SNTC\n      operationId: exportAssetsCiscoCSV\n      summary: Cisco serial number and model name export for Cisco Smart Net Total Care Service.\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: query\n          name: search\n          description: an optional search string for filtering results\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: filtered asset results\n          content:\n            text/csv:\n              schema:\n                type: string\n                format: binary\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n  responses:\n    UnauthorizedError:\n      description: Access token is missing or invalid\n    LicenseExpiredError:\n      description: License has expired\n    ProcessingError:\n      description: Request could not be processed\n    NotFoundError:\n      description: Resource not found\n    StatusMessage:\n      description: Summary of operation results\n  schemas:\n    MiradoreCredentialFields:\n      type: object\n      required:\n        - hostname\n        - api_key\n      properties:\n        hostname:\n          type: string\n          format: string\n          example: yourcompanyinc.online.miradore.com\n        api_key:\n          type: string\n          format: string\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n\n    AWSCredentialFields:\n      type: object\n      required:\n        - access_key\n        - secret_access_key\n      properties:\n        access_key:\n          type: string\n          format: string\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        secret_access_key:\n          type: string\n          format: string\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        regions:\n          type: string\n          format: string\n          example: \"us-west-1, us-east-2\"\n        use_cross_account_org:\n          type: string\n          format: string\n          example: \"true\"\n        role:\n          type: string\n          format: string\n          example: \"rumble-role\"\n\n    AzureClientSecretCredentialFields:\n      type: object\n      required:\n        - client_id\n        - client_secret\n        - tenant_id\n      properties:\n        client_id:\n          type: string\n          format: string\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        client_secret:\n          type: string\n          format: string\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        tenant_id:\n          type: string\n          format: string\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        multi_subscription:\n          type: string\n          format: string\n          example: \"true\"\n        subscription_id:\n          type: string\n          format: string\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n\n    AzureUsernamePasswordCredentialFields:\n      type: object\n      required: \n        - client_id\n        - tenant_id\n        - username\n        - password\n      properties:\n        client_id:\n          type: string\n          format: string\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        tenant_id:\n          type: string\n          format: string\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        username:\n          type: string\n          format: string\n          example: user@example.com\n        password:\n          type: string\n          format: string\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n\n    CrowdstrikeCredentialFields:\n      type: object\n      required:\n        - client_id\n        - client_secret\n        - api_url\n      properties:\n        client_id:\n          type: string\n          format: string\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        client_secret:\n          type: string\n          format: string\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        api_url:\n          type: string\n          format: string\n          example: example.crowdstrike.com\n\n    CensysCredentialFields:\n      type: object\n      required:\n        - client_id\n        - client_secret\n      properties:\n        client_id:\n          type: string\n          format: string\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        client_secret:\n          type: string\n          format: string\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        api_url:\n          type: string\n          format: string\n          example: https://search.censys.io\n\n    SNMPv2CommunitiesCredentialFields:\n      type: object\n      required:\n        - community\n      properties:\n        community:\n          type: string\n          format: string\n          example: \"public,private\"\n\n    SNMPv3CredentialFields:\n      type: object\n      required:\n        - username\n      properties:\n        username:\n          type: string\n          format: string\n          example: user\n        context:\n          type: string\n          format: string\n          example: vlan-32\n        auth-protocol:\n          type: string\n          format: string\n          example: sha\n        auth-passphrase:\n          type: string\n          format: string\n          example: authpass\n        privacy-protocol:\n          type: string\n          format: string\n          example: aes\n        privacy-passphrase:\n          type: string\n          format: string\n          example: privpass\n\n    VMwareCredentialFields:\n      type: object\n      required: \n        - username\n        - password\n      properties:\n        username:\n          type: string\n          format: string\n          example: user\n        password:\n          type: string\n          format: string\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        insecure:\n          type: string\n          format: string\n          example: \"true\"\n        thumbprints:\n          type: string\n          format: string\n          example: IP=SHA256:B64HASH\n\n    ComponentVersion:\n      type: object\n      description: A component ID and version\n      required:\n        - id\n        - version\n      properties:\n        id:\n          type: string\n          format: string\n          example: agent\n        version:\n          type: string\n          format: string\n          example: '1.0.0'\n\n    URL:\n      description: A URL to a resource\n      type: object\n      required:\n        - url\n      properties:\n        id:\n          type: string\n          format: url\n          example: https://www.rumble.run/docs/\n\n    ScanOptions:\n      type: object\n      required:\n        - targets\n      properties:\n        targets:\n          type: string\n          example: \"defaults\"\n        excludes:\n          type: string\n        scan-name:\n          type: string\n          example: My Scan\n        scan-description:\n          type: string\n          example: Scan of Wireless\n        scan-frequency:\n          type: string\n          enum: [once, hourly, daily, weekly, monthly, continuous]\n        scan-start:\n          type: string\n          format: unixtime\n          example: \"0\"\n        scan-tags:\n          type: string\n          example: \"owner=IT location=Texas\"\n        scan-grace-period:\n          type: string\n          example: \"4\"\n        agent:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        rate:\n          type: string\n          example: \"10000\"\n        max-host-rate:\n          type: string\n          example: \"100\"\n        passes:\n          type: string\n          example: \"3\"\n        max-attempts:\n          type: string\n          example: \"3\"\n        max-sockets:\n          type: string\n          example: \"500\"\n        max-group-size:\n          type: string\n          example: \"4096\"\n        max-ttl:\n          type: string\n          example: \"255\"\n        tcp-ports:\n          type: string\n          example: \"1-1000,5000-6000\"\n        tcp-excludes:\n          type: string\n          example: \"9500\"\n        screenshots:\n          type: string\n          example: \"true\"\n        nameservers:\n          type: string\n          example: \"8.8.8.8\"\n        subnet-ping:\n          type: string\n          example: \"true\"\n        subnet-ping-net-size:\n          type: string\n          example: \"256\"\n        subnet-ping-sample-rate:\n          type: string\n          example: \"3\"\n        host-ping:\n          type: string\n          example: \"false\"\n        probes:\n          type: string\n          description: Optional probe list, otherwise all probes are used\n          example: arp,bacnet,connect,dns,echo,ike,ipmi,mdns,memcache,mssql,natpmp,netbios,pca,rdns,rpcbind,sip,snmp,ssdp,syn,ubnt,wlan-list,wsd\n        # Probe options are also supported with values like: dns-port: \"53\"\n\n    AgentSiteID:\n      type: object\n      required:\n        - site_id\n      properties:\n        site_id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n    OrgOptions:\n      type: object\n      properties:\n        name:\n          type: string\n          example: My Organization\n        description:\n          type: string\n          example: Wobbly Widgets, Inc.\n        export_token:\n          type: string\n          example: ETXXXXXXXXXXXXXXXX\n        project:\n          type: string\n          format: boolean\n          example: false\n        parent_id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        expiration_assets_stale:\n          type: string\n          format: number\n          example: \"365\"\n        expiration_assets_offline:\n          type: string\n          format: number\n          example: \"365\"\n        expiration_scans:\n          type: string\n          format: number\n          example: \"365\"\n    SiteOptions:\n      type: object\n      required:\n        - name\n      properties:\n        name:\n          type: string\n          example: New Site\n        description:\n          type: string\n          example: County Office\n        scope:\n          type: string\n          example: 192.168.10.0/24\n        excludes:\n          type: string\n          example: 192.168.10.1\n\n    CredentialFields:\n      oneOf:\n        - $ref: '#/components/schemas/MiradoreCredentialFields'\n        - $ref: '#/components/schemas/AWSCredentialFields'\n        - $ref: '#/components/schemas/AzureClientSecretCredentialFields'\n        - $ref: '#/components/schemas/AzureUsernamePasswordCredentialFields'\n        - $ref: '#/components/schemas/CrowdstrikeCredentialFields'\n        - $ref: '#/components/schemas/CensysCredentialFields'\n        - $ref: '#/components/schemas/SNMPv2CommunitiesCredentialFields'\n        - $ref: '#/components/schemas/SNMPv3CredentialFields'\n        - $ref: '#/components/schemas/VMwareCredentialFields'\n\n    CredentialOptions:\n      type: object\n      properties:\n        name:\n          type: string\n          example: credentials_name\n        type:\n          type: string\n          enum: [miradore_api_key_v1, aws_access_secret]\n          example: miradore_api_key_v1\n        acl:\n          type: object\n          additionalProperties: true\n          example:\n            e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8: user\n            e77602e0-3fb8-4734-aef9-fbc6fdcb0fa9: none\n        global:\n          type: boolean\n          example: false\n        cidrs:\n          type: string\n          example: \"10.0.0.17/32, 192.168.1.0/24\"\n        secret:\n          $ref: '#/components/schemas/CredentialFields'\n\n    APIKeyOptions:\n      type: object\n      properties:\n        comment:\n          type: string\n          example: Splunk integration key\n        organization_id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n\n    AssetsWithCheckpoint:\n      type: object\n      required:\n        - since\n        - assets\n      properties:\n        since:\n          type: integer\n          format: int64\n          example: 1576300370\n        assets:\n          type: array\n          items:\n            $ref: '#/components/schemas/Asset'\n\n    AssetComments:\n      type: object\n      required:\n        - comments\n      properties:\n        comments:\n          type: string\n          example: Sales Laptop\n\n    AssetTags:\n      type: object\n      required:\n        - tags\n      properties:\n        tags:\n          type: string\n          example: ThisTag=Value -OldTag\n\n    AssetTagsWithSearch:\n      type: object\n      required:\n        - tags\n        - search\n      properties:\n        tags:\n          type: string\n          example: ThisTag=Value -OldTag\n        search:\n          type: string\n          example: alive:true and os:windows\n\n    Search:\n      type: object\n      required:\n        - search\n      properties:\n        search:\n          type: string\n          example: alive:true and os:windows\n\n    Asset:\n      type: object\n      required:\n        - id\n        - version\n      properties:\n        id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        created_at:\n          type: integer\n          format: int64\n          example: 1576300370\n        updated_at:\n          type: integer\n          format: int64\n          example: 1576300370\n        organization_id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        site_id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        alive:\n          type: boolean\n          format: boolean\n          example: true\n        first_seen:\n          type: integer\n          format: int64\n          example: 1576300370\n        last_seen:\n          type: integer\n          format: int64\n          example: 1576300370\n        detected_by:\n          type: string\n          example: icmp\n        type:\n          type: string\n          example: Server\n        os:\n          type: string\n          example: Ubuntu Linux\n        os_version:\n          type: string\n          example: 18.04\n        hw:\n          type: string\n          example: Dell PowerEdge 2500\n        addresses:\n          type: array\n          items:\n            type: string\n            example: 192.168.0.1\n        addresses_extra:\n          type: array\n          items:\n            type: string\n            example: 192.168.100.1\n        macs:\n          type: array\n          items:\n            type: string\n            format: mac\n            example: 11:22:33:44:55:66\n        mac_vendors:\n          type: array\n          items:\n            type: string\n            example: Dell\n        names:\n          type: array\n          items:\n            type: string\n            example: www\n        domains:\n          type: array\n          items:\n            type: string\n            example: www\n        service_count:\n          type: integer\n          format: int64\n          example: 10\n        service_count_tcp:\n          type: integer\n          format: int64\n          example: 7\n        service_count_udp:\n          type: integer\n          format: int64\n          example: 1\n        service_count_arp:\n          type: integer\n          format: int64\n          example: 1\n        service_count_icmp:\n          type: integer\n          format: int64\n          example: 1\n        lowest_ttl:\n          type: integer\n          format: int64\n          example: 0\n        lowest_rtt:\n          type: integer\n          format: int64\n          example: 1\n        last_agent_id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        last_task_id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        newest_mac:\n          type: string\n          format: mac\n          example: 11:22:33:44:55:66\n        newest_mac_vendor:\n          type: string\n          example: Intel Corporate\n        newest_mac_age:\n          type: integer\n          format: int64\n          example: 1304035200000000000\n        comments:\n          type: string\n          example: File Server\n        service_ports_tcp:\n          type: array\n          items:\n            type: string\n            format: port\n            example: 22\n        service_ports_udp:\n          type: array\n          items:\n            type: string\n            format: port\n            example: 53\n        service_ports_protocols:\n          type: array\n          items:\n            type: string\n            example: ssh\n        service_ports_products:\n          type: array\n          items:\n            type: string\n            example: bind\n        org_name:\n          type: string\n          example: Test Labs\n        site_name:\n          type: string\n          example: Primary\n        agent_name:\n          type: string\n          example: LAPTOP-F4P1R6\n        tags:\n          type: object\n          additionalProperties:\n            type: string\n        services:\n          type: object\n          additionalProperties:\n            type: object\n            additionalProperties:\n              type: string\n        rtts:\n          type: object\n          additionalProperties: true\n        credentials:\n          type: object\n          additionalProperties:\n            type: string\n            additionalProperties:\n              type: boolean\n        attributes:\n          type: object\n          additionalProperties:\n            type: string\n\n    Service:\n      type: object\n      required:\n        - id\n        - service_id\n      properties:\n        service_id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        service_asset_id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        service_created_at:\n          type: integer\n          format: int64\n          example: 1576300370\n        service_updated_at:\n          type: integer\n          format: int64\n          example: 1576300370\n        service_address:\n          type: string\n          example: 192.168.0.1\n        service_transport:\n          type: string\n          example: tcp\n        service_vhost:\n          type: string\n          example: www\n        service_port:\n          type: string\n          format: port\n          example: 80\n        service_data:\n          type: object\n          additionalProperties:\n            type: string\n        service_protocol:\n          type: string\n          example: http tls\n        service_summary:\n          type: string\n          example: Login Page\n        service_screenshot_link:\n          type: string\n        service_link:\n          type: string\n          example: \"http://192.168.0.1:80/\"\n        # Services also return the associated Asset properties:\n        id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        created_at:\n          type: integer\n          format: int64\n          example: 1576300370\n        updated_at:\n          type: integer\n          format: int64\n          example: 1576300370\n        organization_id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        site_id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        alive:\n          type: boolean\n          format: boolean\n          example: true\n        first_seen:\n          type: integer\n          format: int64\n          example: 1576300370\n        last_seen:\n          type: integer\n          format: int64\n          example: 1576300370\n        detected_by:\n          type: string\n          example: icmp\n        type:\n          type: string\n          example: Server\n        os:\n          type: string\n          example: Ubuntu Linux\n        os_version:\n          type: string\n          example: 18.04\n        hw:\n          type: string\n          example: Dell PowerEdge 2500\n        addresses:\n          type: array\n          items:\n            type: string\n            example: 192.168.0.1\n        addresses_extra:\n          type: array\n          items:\n            type: string\n            example: 192.168.100.1\n        macs:\n          type: array\n          items:\n            type: string\n            format: mac\n            example: 11:22:33:44:55:66\n        mac_vendors:\n          type: array\n          items:\n            type: string\n            example: Dell\n        names:\n          type: array\n          items:\n            type: string\n            example: www\n        domains:\n          type: array\n          items:\n            type: string\n            example: CORPNET\n        service_count:\n          type: integer\n          format: int64\n          example: 10\n        service_count_tcp:\n          type: integer\n          format: int64\n          example: 7\n        service_count_udp:\n          type: integer\n          format: int64\n          example: 1\n        service_count_arp:\n          type: integer\n          format: int64\n          example: 1\n        service_count_icmp:\n          type: integer\n          format: int64\n          example: 1\n        lowest_ttl:\n          type: integer\n          format: int64\n          example: 0\n        lowest_rtt:\n          type: integer\n          format: int64\n          example: 1\n        last_agent_id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        last_task_id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        newest_mac:\n          type: string\n          format: mac\n          example: 11:22:33:44:55:66\n        newest_mac_vendor:\n          type: string\n          example: Intel Corporate\n        newest_mac_age:\n          type: integer\n          format: int64\n          example: 1304035200000000000\n        comments:\n          type: string\n          example: File Server\n        service_ports_tcp:\n          type: array\n          items:\n            type: string\n            format: port\n            example: 22\n        service_ports_udp:\n          type: array\n          items:\n            type: string\n            format: port\n            example: 53\n        service_ports_protocols:\n          type: array\n          items:\n            type: string\n            example: ssh\n        service_ports_products:\n          type: array\n          items:\n            type: string\n            example: bind\n        org_name:\n          type: string\n          example: Test Labs\n        site_name:\n          type: string\n          example: Primary\n        agent_name:\n          type: string\n          example: LAPTOP-F4P1R6\n        tags:\n          type: object\n          additionalProperties:\n            type: string\n        services:\n          type: object\n          additionalProperties:\n            type: object\n            additionalProperties:\n              type: string\n        rtts:\n          type: object\n          additionalProperties: true\n        credentials:\n          type: object\n          additionalProperties:\n            type: string\n            additionalProperties:\n              type: boolean\n        attributes:\n          type: object\n          additionalProperties:\n            type: string\n\n    Site:\n      type: object\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        created_at:\n          type: integer\n          format: int64\n          example: 1576300370\n        updated_at:\n          type: integer\n          format: int64\n          example: 1576300370\n        permanent:\n          type: boolean\n          example: true\n        name:\n          type: string\n          example: Primary\n        description:\n          type: string\n          example: Headquarters\n        scope:\n          type: string\n          example: \"192.168.0.0/24\"\n        excludes:\n          type: string\n          example: \"192.168.0.5\"\n        subnets:\n          type: object\n          additionalProperties: true          \n\n    Wireless:\n      type: object\n      required:\n        - id\n      properties:\n        id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        created_at:\n          type: integer\n          format: int64\n          example: 1576300370\n        last_seen:\n          type: integer\n          format: int64\n          example: 1576300370\n        organization_id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        site_id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        last_agent_id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        last_task_id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        essid:\n          type: string\n          format: uuid\n          example: Free WiFi\n        bssid:\n          type: string\n          format: mac\n          example: 11:22:33:44:55:66\n        type:\n          type: string\n          example: infrastructure\n        authentication:\n          type: string\n          example: \"wpa2-psk\"\n        encryption:\n          type: string\n          example: aes\n        signal:\n          type: integer\n          minimum: 0\n          maximum: 100\n          example: 99\n        channels:\n          type: string\n          example: \"11, 158+1\"\n        interface:\n          type: string\n          example: \"wlan0\"\n        vendor:\n          type: string\n          example: \"Ubiquiti Networks\"\n        family:\n          type: string\n          example: 223344\n        data:\n          type: object\n          additionalProperties:\n            type: string\n        org_name:\n          type: string\n          example: Test Labs\n        site_name:\n          type: string\n          example: Primary\n        agent_name:\n          type: string\n          example: LAPTOP-F4P1R6\n\n    Organization:\n      type: object\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        created_at:\n          type: integer\n          format: int64\n          example: 1576300370\n        updated_at:\n          type: integer\n          format: int64\n          example: 1576300370\n        client_id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        download_token:\n          type: string\n          example: DT11226D9EEEA2B035D42569585900\n        download_token_created_at:\n          type: integer\n          format: int64\n          example: 1576300370\n        permanent:\n          type: boolean\n          example: true\n        name:\n          type: string\n          example: My Company\n        description:\n          type: string\n          example: All subdivisions of my company\n        inactive:\n          type: boolean\n          example: false\n        deactivated_at:\n          type: integer\n          format: int64\n          example: 0\n        service_count:\n          type: integer\n          format: int64\n          example: 10\n        service_count_tcp:\n          type: integer\n          format: int64\n          example: 7\n        service_count_udp:\n          type: integer\n          format: int64\n          example: 1\n        service_count_arp:\n          type: integer\n          format: int64\n          example: 1\n        service_count_icmp:\n          type: integer\n          format: int64\n          example: 1\n        asset_count:\n          type: integer\n          format: int64\n          example: 100\n        export_token:\n          type: string\n          example: ET11226D9EEEA2B035D42569585900\n        export_token_created_at:\n          type: integer\n          format: int64\n          example: 1576300370\n        export_token_last_used_at:\n          type: integer\n          format: int64\n          example: 0\n        export_token_last_used_by:\n          type: string\n          example: 127.0.0.1\n        export_token_counter:\n          type: integer\n          format: int64\n          example: 0\n        project:\n          type: boolean\n          example: false\n        parent_id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        expiration_assets_stale:\n          type: integer\n          format: int64\n          example: 365\n        expiration_assets_offline:\n          type: integer\n          format: int64\n          example: 365\n        expiration_scans:\n          type: integer\n          format: int64\n          example: 365\n\n    Credential:\n      type: object\n      required:\n        - id\n      properties:\n        id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        client_id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        name:\n          type: string\n          example: credentials_name\n        type:\n          type: string\n          enum: [miradore_api_key_v1, aws_access_secret, crowdstrike_api_key, azure_client_secret, azure_username_password, censys_search_api_key, snmpv2_community, snmpv3_credential, vmware_username_password]\n          description: The service the credentials are for.\n        created_at:\n          type: integer\n          format: int64\n          example: 1576300370\n        created_by_id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        created_by_email:\n          type: string\n          format: email\n          example: user@example.com\n        acl:\n          type: object\n          additionalProperties: true\n          example:\n            e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8: user\n        global:\n          type: boolean\n          example: false\n        cidrs:\n          type: array\n          items:\n            type: string\n          example:\n            - 10.0.0.47/32\n            - 192.168.1.0/24\n        last_used_at:\n          type: integer\n          format: int64\n          example: 1576300370\n        last_used_by_id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n\n    APIKey:\n      type: object\n      required:\n        - id\n      properties:\n        id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        client_id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        organization_id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        created_at:\n          type: integer\n          format: int64\n          example: 1576300370\n        created_by:\n          type: string\n          format: email\n          example: user@example.com\n        comment:\n          type: string\n          example: API key used for Splunk integration\n        last_used_at:\n          type: integer\n          format: int64\n          example: 0\n        last_used_ip:\n          type: string\n          example: 127.0.0.1\n        last_used_ua:\n          type: string\n          example: \"curl/7.44.1\"\n        counter:\n          type: integer\n          format: int64\n          example: 1\n        usage_today:\n          type: integer\n          format: int64\n          example: 100\n        usage_limit:\n          type: integer\n          format: int64\n          example: 10000\n        token:\n          type: string\n          example: CTXXXXXXXXXXXXX\n        inactive:\n          type: boolean\n          example: tue\n        type:\n          type: string\n          example: org\n\n    Agent:\n      type: object\n      required:\n        - id\n      properties:\n        id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        client_id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        organization_id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        created_at:\n          type: integer\n          format: int64\n          example: 1576300370\n        updated_at:\n          type: integer\n          format: int64\n          example: 1576300370\n        host_id:\n          type: string\n          example: 6f9e6fe52271da70962e007183c5c9c9\n        hub_id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        name:\n          type: string\n          format: hostname\n          example: RUMBLE-AGENT\n        site_id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        last_checkin:\n          type: integer\n          format: int64\n          example: 1576300370\n        os:\n          type: string\n          example: Windows\n        arch:\n          type: string\n          example: amd64\n        version:\n          type: string\n          example: \"1.2.3 (build 20191219224016) [fc50c5eefdc3ff5c60533c3c345d14d336396272]\"\n        external_ip:\n          type: string\n          example: 1.1.1.1\n        internal_ip:\n          type: string\n          example: 192.168.0.1\n        system_info:\n          type: object\n          additionalProperties: true\n        connected:\n          type: boolean\n          example: true\n        inactive:\n          type: boolean\n          example: false\n        deactivated_at:\n          type: integer\n          format: int64\n          example: 0\n\n    Task:\n      type: object\n      required:\n        - id\n      properties:\n        id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        name:\n          type: string\n          example: Hourly Scan\n        description:\n          type: string\n          example: Scan the headquarters hourly\n        client_id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        organization_id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        agent_id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        site_id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        cruncher_id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        created_at:\n          type: integer\n          format: int64\n          example: 1576300370\n        created_by:\n          type: string\n          format: email\n          example: user@example.com\n        created_by_user_id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        updated_at:\n          type: integer\n          format: int64\n          example: 1576300370\n        type:\n          type: string\n          example: scan\n        status:\n          type: string\n          example: processed\n        error:\n          type: string\n          example: agent unavailable\n        params:\n          type: object\n          additionalProperties:\n            type: string\n        stats:\n          type: object\n          additionalProperties: true\n        hidden:\n          type: boolean\n          example: false\n        parent_id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        recur:\n          type: boolean\n          example: false\n        recur_frequency:\n          type: string\n          example: hour\n        start_time:\n          type: integer\n          format: int64\n          example: 1576300370\n        recur_last:\n          type: integer\n          format: int64\n          example: 1576300370\n        recur_next:\n          type: integer\n          format: int64\n          example: 1576300370\n        recur_last_task_id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n\n    License:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        created_at:\n          type: integer\n          format: int64\n          example: 1576300370\n        updated_at:\n          type: integer\n          format: int64\n          example: 1576300370\n        name:\n          type: string\n          example: My Company\n        activated_at:\n          type: integer\n          format: int64\n          example: 1576300370\n        license_type:\n          type: string\n          example: platform\n        license_expiration:\n          type: integer\n          format: int64\n          example: 1576300370\n        license_max_assets:\n          type: integer\n          format: int64\n          example: 1000000\n        license_live_asset_count:\n          type: integer\n          format: int64\n          example: 1000\n        license_project_asset_count:\n          type: integer\n          format: int64\n          example: 5000\n        via_reseller:\n          type: boolean\n          example: false\n        phone:\n          type: string\n          example: 512-555-5555\n        address_street:\n          type: string\n          example: 1111 Main St\n        address_country:\n          type: string\n          example: US\n        address_city:\n          type: string\n          example: Austin\n        address_region:\n          type: string\n          example: Texas\n        address_postal:\n          type: string\n          example: 78700\n        subscription_period_start:\n          type: integer\n          format: int64\n          example: 1576300370\n        subscription_period_end:\n          type: integer\n          format: int64\n          example: 1576300370\n        subscription_cancel_at:\n          type: integer\n          format: int64\n          example: 1576300370\n        subscription_canceled_at:\n          type: integer\n          format: int64\n          example: 1576300370\n        settings:\n          type: object\n          additionalProperties: true\n        sso_type:\n          type: string\n          example: saml20\n        sso_domain:\n          type: string\n          example: rumble.run\n        sso_mode:\n          type: string\n          example: required\n        sso_login_message:\n          type: string\n          example: Hello\n        sso_login_issuer_url:\n          type: string\n          example: https://accounts.google.com/o/saml2?idpid=issuer\n        sso_login_login_url:\n          type: string\n          example: https://accounts.google.com/o/saml2?idpid=login\n        sso_login_logout_url:\n          type: string\n          example: https://accounts.google.com/o/saml2?idpid=logout\n        sso_default_role:\n          type: string\n          example: viewer\n        partner:\n          type: string\n          example: Rumble\n\n    Event:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        created_at:\n          type: integer\n          format: int64\n          example: 1576300370\n        client_id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        organization_id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        site_id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        action:\n          type: string\n          example: login\n        source_id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        source_name:\n          type: string\n          example: SiteName\n        source_type:\n          type: string\n          example: api\n        target_id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        target_name:\n          type: string\n          example: SiteName\n        target_type:\n          type: string\n          example: api\n        success:\n          type: boolean\n          example: true\n        details:\n          type: object\n          additionalProperties: true\n        state:\n          type: string\n          example: SiteName\n        processor_id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        processed_at:\n          type: integer\n          format: int64\n          example: 0\n\n    User:\n      type: object\n      required:\n        - id\n      properties:\n        id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        client_id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        created_at:\n          type: integer\n          format: int64\n          example: 1576300370\n        updated_at:\n          type: integer\n          format: int64\n          example: 1576300370\n        first_name:\n          type: string\n          example: James\n        last_name:\n          type: string\n          example: Smith\n        email:\n          type: string\n          example: jsmith@example.com\n        client_admin:\n          type: boolean\n          example: true\n        org_default_role:\n          type: string\n          example: admin\n        org_roles:\n          type: object\n          additionalProperties: true\n        reset_token_expiration:\n          type: integer\n          format: int64\n          example: 1576300370\n        invite_token_expiration:\n          type: integer\n          format: int64\n          example: 1576300370\n        last_login_ip:\n          type: string\n          example: 192.168.0.1\n        last_login_at:\n          type: integer\n          format: int64\n          example: 1576300370\n        last_login_ua:\n          type: string\n          example: curl/1.0\n        sso_only:\n          type: boolean\n          example: false\n        login_failures:\n          type: integer\n          format: int64\n          example: 0\n\n    Group:\n      type: object\n      required:\n        - id\n      properties:\n        id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        description:\n          type: string\n          example: Viewers Group\n        name:\n          type: string\n          example: Viewers\n        role_summary:\n          type: string\n          example: all:viewer\n        user_count:\n          type: integer\n          format: int64\n          example: 2\n        created_by_email:\n          type: string\n          example: jsmith@example.com\n        created_at:\n          type: integer\n          format: int64\n          example: 1576300370\n        updated_at:\n          type: integer\n          format: int64\n          example: 1576300370\n        expires_at:\n          type: integer\n          format: int64\n          example: 1576300370\n        org_default_role:\n          type: string\n          example: admin\n        org_roles:\n          type: object\n          additionalProperties: true\n\n    GroupPost:\n      type: object\n      properties:\n        description:\n          type: string\n          example: Viewers Group\n        name:\n          type: string\n          example: Viewers\n        expires_at:\n          type: integer\n          format: int64\n          example: 1576300370\n        org_default_role:\n          type: string\n          example: admin\n        org_roles:\n          type: object\n          additionalProperties: true\n          example: {\n            \"1a5e612e-4d64-45fe-aa3e-afba5cf3b9bf\": \"viewer\",\n            \"fd6d6662-732b-4c4b-8331-051178994384\": \"admin\"\n          }\n\n    GroupPut:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        description:\n          type: string\n          example: Viewers Group\n        name:\n          type: string\n          example: Viewers\n        expires_at:\n          type: integer\n          format: int64\n          example: 1576300370\n        org_default_role:\n          type: string\n          example: admin\n        org_roles:\n          type: object\n          additionalProperties: true\n          example: {\n            \"1a5e612e-4d64-45fe-aa3e-afba5cf3b9bf\": \"viewer\",\n            \"fd6d6662-732b-4c4b-8331-051178994384\": \"admin\"\n          }\n\n    GroupMapping:\n      type: object\n      required:\n        - id\n        - group_id\n        - sso_attribute\n        - sso_value\n      properties:\n        id:\n          type: string\n          format: uuid\n          example: f6cfb91a-52ea-4a86-bf9a-5a891a26f52b\n        group_id:\n          type: string\n          format: uuid\n          example: 2b096711-4d28-4417-8635-64af4f62c1ae\n        group_name:\n          type: string\n          example: Viewers Group\n        sso_attribute:\n          type: string\n          example: basic-attribute\n        sso_value:\n          type: string\n          example: basic-attribute-value\n        description:\n          type: string\n          example: Maps basic-attribute to Viewers Group\n        created_by_email:\n          type: string\n          example: jsmith@example.com\n        created_at:\n          type: integer\n          format: int64\n          example: 1576300370\n        updated_at:\n          type: integer\n          format: int64\n          example: 1576300370\n\n    UserOptions:\n      type: object\n      properties:\n        first_name:\n          type: string\n          example: James\n        last_name:\n          type: string\n          example: Smith\n        email:\n          type: string\n          example: jsmith@example.com\n        client_admin:\n          type: boolean\n          example: true\n        org_default_role:\n          type: string\n          example: admin\n        org_roles:\n          type: object\n          additionalProperties: true\n\n    UserInviteOptions:\n      type: object\n      properties:\n        first_name:\n          type: string\n          example: James\n        last_name:\n          type: string\n          example: Smith\n        email:\n          type: string\n          example: jsmith@example.com\n        client_admin:\n          type: boolean\n          example: true\n        org_default_role:\n          type: string\n          example: admin\n        org_roles:\n          type: object\n          additionalProperties: true\n        subject:\n          type: string\n          example: Welcome to Rumble\n        message:\n          type: string\n          example: You have been invited to the Rumble Network Discovery platform\n\n    AssetServiceNow:\n      type: object\n      required:\n        - asset_id\n      properties:\n        asset_id:\n          type: string\n          format: uuid\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n        organization:\n          type: string\n          example: Headquarters\n        site:\n          type: string\n          example: Primary\n        detected_by:\n          type: string\n          example: icmp\n        type:\n          type: string\n          example: Server\n        sys_class_name:\n          type: string\n          example: cmdb_ci_iot\n        os_vendor:\n          type: string\n          example: Microsoft\n        os_product:\n          type: string\n          example: Windows 10\n        os_version:\n          type: string\n          example: 1903\n        hw_vendor:\n          type: string\n          example: Dell\n        hw_product:\n          type: string\n          example: PowerEdge\n        hw_version:\n          type: string\n          example: 2.0\n        ip_address:\n          type: string\n          example: 192.168.0.1\n        addresses_scope:\n          type: string\n          example: 192.168.100.1;192.168.100.2\n        addresses_extra:\n          type: string\n          example: 192.168.0.5;192.168.0.3\n        mac_address:\n          type: string\n          format: mac\n          example: 11:22:33:44:55:66\n        mac_manufacturer:\n          type: string\n          example: Dell\n        newest_mac_age:\n          type: string\n          example: 2020-01-01\n        macs:\n          type: string\n          format: mac\n          example: 11:22:33:44:55:66\n        mac_vendors:\n          type: string\n          example: Dell\n        name:\n          type: string\n          example: www;server\n        tags:\n          type: string\n          example: owner=IT;location=Austin\n        domains:\n          type: string\n          example: rumble.run;rumble.local.lan\n        service_count:\n          type: integer\n          format: int64\n          example: 10\n        service_count_tcp:\n          type: integer\n          format: int64\n          example: 7\n        service_count_udp:\n          type: integer\n          format: int64\n          example: 1\n        service_count_arp:\n          type: integer\n          format: int64\n          example: 1\n        service_count_icmp:\n          type: integer\n          format: int64\n          example: 1\n        lowest_ttl:\n          type: integer\n          format: int64\n          example: 0\n        lowest_rtt:\n          type: integer\n          format: int64\n          example: 1\n        alive:\n          type: boolean\n          format: boolean\n          example: true\n        first_discovered:\n          type: string\n          example: 2006-01-02 15:04:05\n        last_discovered:\n          type: string\n          example: 2006-01-02 15:04:05\n        last_updated:\n          type: string\n          example: 2006-01-02 15:04:05\n        comments:\n          type: string\n          example: File Server\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /org/tasks/{task_id}/log: get: operation \"getTaskLog\": responses: 200: resolve \"#/components/schemas/URL\" reference: invalid response reference: \"#/components/schemas/URL\""
}