{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/thisdot/starter.dev-github-showcases"
		},
		"file": {
			"name": "sam.yaml",
			"size": 0,
			"path": "remix-gql-tailwind/sam.yaml",
			"byteSize": 5880,
			"content": "AWSTemplateFormatVersion: '2010-09-09'\nTransform: AWS::Serverless-2016-10-31\nDescription: Exported by architect/package@8.1.3 on 2022-06-14T19:41:52.999Z\nResources:\n  Role:\n    Type: AWS::IAM::Role\n    Properties:\n      AssumeRolePolicyDocument:\n        Version: '2012-10-17'\n        Statement:\n        - Effect: Allow\n          Principal:\n            Service: lambda.amazonaws.com\n          Action: sts:AssumeRole\n      Policies:\n      - PolicyName: ArcGlobalPolicy\n        PolicyDocument:\n          Statement:\n          - Effect: Allow\n            Action:\n            - logs:CreateLogGroup\n            - logs:CreateLogStream\n            - logs:PutLogEvents\n            - logs:DescribeLogStreams\n            Resource: arn:aws:logs:*:*:*\n      - PolicyName: ArcStaticBucketPolicy\n        PolicyDocument:\n          Statement:\n          - Effect: Allow\n            Action:\n            - s3:GetObject\n            - s3:PutObject\n            - s3:PutObjectAcl\n            - s3:DeleteObject\n            - s3:ListBucket\n            Resource:\n            - Fn::Sub:\n              - arn:aws:s3:::${bukkit}\n              - bukkit:\n                  Ref: StaticBucket\n            - Fn::Sub:\n              - arn:aws:s3:::${bukkit}/*\n              - bukkit:\n                  Ref: StaticBucket\n  StaticBucketParam:\n    Type: AWS::SSM::Parameter\n    Properties:\n      Type: String\n      Name:\n        Fn::Sub:\n        - /${AWS::StackName}/static/${key}\n        - key: bucket\n      Value:\n        Ref: StaticBucket\n  StaticFingerprintParam:\n    Type: AWS::SSM::Parameter\n    Properties:\n      Type: String\n      Name:\n        Fn::Sub:\n        - /${AWS::StackName}/static/${key}\n        - key: fingerprint\n      Value: 'false'\n  ParameterStorePolicy:\n    Type: AWS::IAM::Policy\n    DependsOn: Role\n    Properties:\n      PolicyName: ArcParameterStorePolicy\n      PolicyDocument:\n        Statement:\n        - Effect: Allow\n          Action:\n          - ssm:GetParametersByPath\n          - ssm:GetParameter\n          Resource:\n            Fn::Sub:\n            - arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}\n            - {}\n        - Effect: Allow\n          Action:\n          - ssm:GetParametersByPath\n          - ssm:GetParameter\n          Resource:\n            Fn::Sub:\n            - arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/*\n            - {}\n        - Effect: Allow\n          Action:\n          - ssm:GetParametersByPath\n          - ssm:GetParameter\n          Resource:\n            Fn::Sub:\n            - arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/*/*\n            - {}\n      Roles:\n      - Ref: Role\n  HTTP:\n    Type: AWS::Serverless::HttpApi\n    Properties:\n      StageName: $default\n      DefinitionBody:\n        openapi: 3.0.1\n        info:\n          title:\n            Ref: AWS::StackName\n        paths:\n          /{proxy+}:\n            x-amazon-apigateway-any-method:\n              x-amazon-apigateway-integration:\n                payloadFormatVersion: '2.0'\n                type: aws_proxy\n                httpMethod: POST\n                uri:\n                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AnyCatchallHTTPLambda.Arn}/invocations\n                connectionType: INTERNET\n          /_static/{proxy+}:\n            get:\n              x-amazon-apigateway-integration:\n                payloadFormatVersion: '1.0'\n                type: http_proxy\n                httpMethod: GET\n                uri:\n                  Fn::Sub:\n                  - https://${bukkit}.s3.${AWS::Region}.amazonaws.com/{proxy}\n                  - bukkit:\n                      Ref: StaticBucket\n                connectionType: INTERNET\n                timeoutInMillis: 30000\n  AnyCatchallHTTPLambda:\n    Type: AWS::Serverless::Function\n    Properties:\n      Handler: index.handler\n      CodeUri: s3://remix-gql-tailwind-cfn-deployments-a96b2/4b907a3fafed861e204b9f4178cc01c3\n      Runtime: nodejs14.x\n      Architectures:\n      - x86_64\n      MemorySize: 1152\n      EphemeralStorage:\n        Size: 512\n      Timeout: 5\n      Environment:\n        Variables:\n          ARC_APP_NAME: remix-gql-tailwind\n          ARC_ENV: production\n          ARC_ROLE:\n            Ref: Role\n          ARC_SESSION_TABLE_NAME: jwe\n          ARC_STACK_NAME:\n            Ref: AWS::StackName\n          ARC_STATIC_BUCKET:\n            Ref: StaticBucket\n          ARC_STATIC_SPA: false\n      Role:\n        Fn::Sub:\n        - arn:aws:iam::${AWS::AccountId}:role/${roleName}\n        - roleName:\n            Ref: Role\n      Events:\n        AnyCatchallHTTPEvent:\n          Type: HttpApi\n          Properties:\n            Path: /{proxy+}\n            Method: ANY\n            ApiId:\n              Ref: HTTP\n  StaticBucket:\n    Type: AWS::S3::Bucket\n    Properties:\n      OwnershipControls:\n        Rules:\n        - ObjectOwnership: BucketOwnerEnforced\n      WebsiteConfiguration:\n        IndexDocument: index.html\n        ErrorDocument: 404.html\n  StaticBucketPolicy:\n    Type: AWS::S3::BucketPolicy\n    Properties:\n      Bucket:\n        Ref: StaticBucket\n      PolicyDocument:\n        Version: '2012-10-17'\n        Statement:\n        - Action:\n          - s3:GetObject\n          Effect: Allow\n          Principal: '*'\n          Resource:\n          - Fn::Sub:\n            - arn:aws:s3:::${bukkit}/*\n            - bukkit:\n                Ref: StaticBucket\n          Sid: PublicReadGetObject\nOutputs:\n  API:\n    Description: API Gateway (HTTP)\n    Value:\n      Fn::Sub:\n      - https://${ApiId}.execute-api.${AWS::Region}.amazonaws.com\n      - ApiId:\n          Ref: HTTP\n  ApiId:\n    Description: API ID (ApiId)\n    Value:\n      Ref: HTTP\n  BucketURL:\n    Description: Bucket URL\n    Value:\n      Fn::Sub:\n      - http://${bukkit}.s3-website-${AWS::Region}.amazonaws.com\n      - bukkit:\n          Ref: StaticBucket\n",
			"canonicalURL": "/github.com/thisdot/starter.dev-github-showcases@e377b2792baea78f9239a670b2bb4fcdb219bd21/-/blob/remix-gql-tailwind/sam.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/thisdot/starter.dev-github-showcases/blob/e377b2792baea78f9239a670b2bb4fcdb219bd21/remix-gql-tailwind/sam.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse version: at remix-gql-tailwind/sam.yaml:1:1: invalid version: invalid major version: strconv.Atoi: parsing \"\": invalid syntax"
}