{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/kivra/developer.kivra.com"
		},
		"file": {
			"name": "posapi.yaml",
			"size": 0,
			"path": "receipt/posapi/posapi.yaml",
			"byteSize": 79984,
			"content": "openapi: \"3.0.1\"\n\ninfo:\n  title: POS API\n  version: \"1.4.5\"\n  x-logo:\n    url: \"../../assets/kivra-logo.svg\"\n    altText: Kivra logo\n\n  description: \u003e\n    [Changelog - 2022-09-21](changelog/)\n\n    # Digital Receipts Platform API\n\n    Kivra's digital receipt platform API, is a REST based API intented for Kivra partners and customers.\n    The API is designed to receive receipts in specific XML and JSON formats. The API grants accessibility and management\n    of digital receipts.\n\n    ## Getting started\n\n    \u003cdetails\u003e\u003csummary\u003eSetting up the first store\u003c/summary\u003e\n\n      ### Setting up the first store\n\n      Receipt producers are regarded as partners i.e. they are free to set up digital receipts for as many organisations as they want.\n      In order to start creating digital receipts using the POS API, a test store needs to be set up.\n\n      Every store needs to be a part of a chain.\n\n      1. Use your company credential to fetch a partner token\n      2. Use you partner token to create a chain using the createChain method.\n\n      After your chain has been created you receive a chain_id. Now a store can be created and connected to this chain.\n\n      3. Use your partner token, or fetch it again if it is expired.\n      4. Create a store using the addStore method.\n      5. In the request body use the chain_id as owner id.\n\n      After the store has been successfully created you will receive a store_id.\n\n    \u003c/details\u003e\n\n    \u003cdetails\u003e\u003csummary\u003eCreating digital receipts\u003c/summary\u003e\n\n      ### Digital receipts\n\n      #### Receipt content\n\n      The receipt content sent to Kivra is based on a json schema. There are 4 different kinds of receipt types supported:\n\n      - Sales (a receipt with only sales items)\n      - Return (a receipt with only return items)\n      - Combined sales/return (a receipt with both sales and return items)\n      - Greenbin (a receipt without recipient, the receipt will end up in a digital waste bin)\n\n      All types are built the same way, using the same json schema as base. There are a few properties within the receipt that differs depending on type.\n\n      When a digital receipt is created it is important that a verified user identifier is present (unless greenbin receipt) in the receipt data.\n      The verified identifiers are\n\n      - Social security number\n      - Email\n      - Mobile phone number\n      - Credit/Debit card token\n\n      For more information on receipt content and schemas used, see.\n      [Digital receipt JSON schema explained and example receipts](/receipt/wiki/mdwiki.html)\n      \n\n      #### Send a digital receipt\n      1. Use a partner, chain or store token to send/create receipts. The partner token is used to create a chain or store token.\n      2. Use the store id (returned when the store is created) as service id in the body of the Create Receipt method.\n\n    \u003c/details\u003e\n\n    \u003cdetails\u003e\u003csummary\u003eReturn of a product using digital receipt\u003c/summary\u003e\n\n      ### Return of a product\n\n      When a user returns an item using a digital receipt, the POS can scan a QR code on the reciept to retreive the receipt identifier.\n      A return receipt can then be created by creating a digital receipt and having a reference to the original receipt identifier in the return item description.\n\n    \u003c/details\u003e\n\n    \u003cdetails\u003e\u003csummary\u003eDigital receipt JSON schema explained\u003c/summary\u003e\n\n      ### Resources\n      [Digital receipt JSON schema explained and example receipts](/receipt/wiki/mdwiki.html)\n      will give you more information on how to create digital receipts based on the Kivra digital receipt JSON schema.\n    \u003c/details\u003e\n\nservers:\n  - url: https://receipt.sandbox-api.kivra.com\n    description: Test environment (uses test data)\npaths:\n  /dr/v1/receipts:\n    post:\n      description: \u003e\n        Adds a new receipt to the Kivra DRP.\n\n        Following credentials are needed in order to create digital receipts.\n\n        - **storeID** : this is used for the \"service_id\" element in the receipt body\n\n        - **token** : the JWT bearer token used for authorization. Partner, chain or store token can be used.\n\n        The storeID is obtained when new store is created using the addStore method.\n\n        ### Access scope\n\n          - PARTNER\n          - CHAIN\n          - STORE\n\n        ###  Headers\n\n        The Content-Type must be set according to the receipt format, one of:\n\n        * Content-Type: application/json;profile=https://se.digitalreceipts.net/schemas/json/retail/v1.0\n\n        * Content-Type: application/xml\n\n\n        When sending json receipts the profile tells what version of the JSON schema that the receipt is based on.\n\n        When sending XML receipts the XML start element will give the XML schema(s)/version used.\n\n        ###  Body\n\n        Supported formats are:\n\n        * SDRS (Swedish digital receipt standard) XML structure\n\n        * ARTS (Association for retail technical standards) DR 2.0 XML structure\n\n        * JSON structure\n\n\n        ### IMPORTANT NOTE:\n\n        For card payments, Kivra's SDRS scheme requires the following payment\n        terminal information according to \u003ca href=\"https://en.wikipedia.org/wiki/ISO_8583\"\u003eISO standard 8583\u003c/a\u003e\n\n        * Bank Identification Number\n\n        * Retrieval Reference Number\n\n        * Card Acceptor Terminal ID\n\n        * Merchant Identifier\n\n        * Approval Code\n\n      operationId: CreateReceipt\n      summary: Create receipt\n      requestBody:\n        description: Takes in a receipt object\n        required: true\n        content:\n          ? application/json;profile=https://se.digitalreceipts.net/schemas/json/retail/v1.0\n          : schema:\n              type: object\n            example:\n              business_unit:\n                service_id: 15594097555922f97bfeb148d6b9a6ef76f76ebdce\n                organization_number: 556838-8200\n                name: Demo store AB\n                contact:\n                  address:\n                    street_address: Shopping street 20\n                    locality: Onebuying\n                    postal_code: \"12345\"\n                  phone: \"+460771584886\"\n              cashier:\n                id: \"5\"\n                name: Anna Andersson\n              sales_recording_system:\n                serial_number: EA38329\n                name: kassa 3\n              receipt_identifier:\n                sequence_number: 123456\n                extended_number:\n                  value: \"0123456123\"\n                  type: EAN8\n                  context: store\n              time_of_purchase: \"2019-11-09T08:49:00+01:00\"\n              currency: SEK\n              totals:\n                - type: net\n                  amount: 280\n                - type: vat\n                  amount: 70\n                  sub_totals:\n                    - amount: 70\n                      net_amount: 280\n                      taxable_amount: 350\n                      tax_percentage: 25\n                - type: gross\n                  amount: 395\n                - type: discount\n                  amount: 45\n                - type: rounding\n                  amount: 0\n                - type: paid\n                  amount: 350\n              header_text:\n                type: array\n                collection:\n                  - \"Öppettider: Mådag - Fredag 10-18 Lördag 10-15\"\n                  - Another header text...\n              footer_text:\n                type: array\n                collection:\n                  - \"Sommarerbjudande: Köp 3 par skor få det billigaste paret på köpet.\"\n              items:\n                - type: sale\n                  identifiers:\n                    - identifier_type: pos\n                      value: \"912042\"\n                    - identifier_type: gtin\n                      value: \"1234567890\"\n                  description: Skor 42 - Foder BR\n                  quantity:\n                    value: 1\n                    unit: ea\n                  regular_sales_unit_price: 395\n                  extended_gross_amount: 395\n                  retail_price_modifiers:\n                    - amount: 45\n                  actual_sales_unit_price: 350\n                  extended_amount: 350\n                  tax_percentage: 25\n                  sequence_number: 1\n              payments:\n                - tender:\n                    type: cash\n                  amount_applied_to_bill: 350\n                  amount: 350\n              customer:\n                id:\n                  phone: +46 75 777 7777\n              control_unit:\n                id: RIHTT102710007088\n                code: BGXOV2QOHHILXHLPHHXRAYZEKGFNC2BD;\n      responses:\n        \"201\":\n          description: Receipt successfully created\n          headers:\n            x-dr-transactionid:\n              schema:\n                type: string\n                pattern: \"^([a-z0-9]{42})$\"\n              example: \"15662258993a2dcd45aba54f9086544f5f97c60ec4\"\n              description: The id of the created receipt\n          content:\n            application/json:\n              schema:\n                type: object\n                example:\n                  message: Received receipt\n        \"202\":\n          description: Greenbin receipt received\n          content:\n            application/json:\n              schema:\n                type: object\n                example:\n                  message: Received receipt                  \n        \"400\":\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n              examples:\n                invalid_content_type:\n                  value:\n                    error_code: \"40002\"\n                    error_message: \"unsupported content type header\"\n                invalid_body:\n                  value:\n                    error_code: \"40001\"\n                    error_message: \"body is missing required fields or has invalid fields\"\n                invalid_schema_format:\n                  value:\n                    error_code: \"40003\"\n                    error_message: \"unsupported schema format\"\n                resource_not_found:\n                  value:\n                    error_code: \"40004\"\n                    error_message: \"resource not found\"\n                person_not_found:\n                  value:\n                    error_code: \"40005\"\n                    error_message: \"person not found\"\n                duplicate_receipt_id:\n                  value:\n                    error_code: \"40006\"\n                    error_message: \"duplicate receipt id\"\n                greenbin_not_activated:\n                  value:\n                    error_code: \"40022\"\n                    error_message: \"greenbin has not been activated\"\n        \"401\":\n          description: Unauthorized access\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n              examples:\n                token_missing:\n                  value:\n                    error_code: \"40100\"\n                    error_message: \"jwt token missing\"\n                token_expired:\n                  value:\n                    error_code: \"40101\"\n                    error_message: \"jwt token expired\"\n                token_invalid:\n                  value:\n                    error_code: \"40102\"\n                    error_message: \"jwt token invalid\"\n                store_blocked:\n                  value:\n                    error_code: \"40104\"\n                    error_message: \"Store is blocked\"\n        \"500\":\n          $ref: \"#/components/responses/InternalError\"\n  \"/dr/v1/receipts/{receiptID}\":\n    get:\n      description: \u003e\n        Fetch a single receipt matching the passed receipt id. Returns the original receipt unmodified.\n\n        ### Access scope\n\n          - PARTNER\n          - CHAIN\n          - STORE\n\n      operationId: FetchReceipt\n      summary: Fetch receipt\n      parameters:\n        - $ref: \"#/components/parameters/ReceiptID\"\n      responses:\n        \"200\":\n          description: Receipt successfully fetched\n          content:\n            application/json:\n              schema:\n                type: object\n            application/xml: {}\n        \"400\":\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n              examples:\n                resource_not_found:\n                  value:\n                    error_code: \"40004\"\n                    error_message: \"resource not found\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n              examples:\n                token_missing:\n                  value:\n                    error_code: \"40100\"\n                    error_message: \"jwt token missing\"\n                token_expired:\n                  value:\n                    error_code: \"40101\"\n                    error_message: \"jwt token expired\"\n                token_invalid:\n                  value:\n                    error_code: \"40102\"\n                    error_message: \"jwt token invalid\"\n                credentials_invalid:\n                  value:\n                    error_code: \"40103\"\n                    error_message: \"credentials invalid\"\n        \"500\":\n          $ref: \"#/components/responses/InternalError\"\n  /dr/v1/chains:\n    post:\n      description: \u003e\n\n        Creates a chain or links to an existing chain.\n\n        ### Access scope\n\n          - PARTNER\n\n        ### Matching\n\n        To determine if this is an existing chain the following fields need to match\n          - name\n          - vat\n\n        It is only possible to create one chain per VAT number.\n\n      operationId: AddChain\n      summary: Add chain\n      requestBody:\n        description: Takes in a chain object with required information to create a new chain\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AddChain\"\n            example:\n              name: Demo chain\n              vat: \"SE555555555501\"\n              address:\n                street1: Gatan 1\n                postalcode: \"13254\"\n                city: \"onebuying\"\n                country: SWE\n              icon:\n                data: \"iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVQYV2NgYAAAAAMAAWgmWQ0AAAAASUVORK5CYII=\"\n                content_type: \"image/png\"\n              item_display_fields: [\"article_number_pos\"]\n      responses:\n        \"200\":\n          description: Chain already existed\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AddChainResponse\"\n              example:\n                chain_id: 15594097555922f97bfeb148d6b9a6ef76f76ebdce\n                vat: 55555\n                created: false\n        \"201\":\n          description: Chain successfully created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AddChainResponse\"\n              example:\n                chain_id: 15594097555922f97bfeb148d6b9a6ef76f76ebdce\n                vat: 55555\n                created: true\n        \"400\":\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n              examples:\n                missing_body:\n                  value:\n                    error_code: \"40000\"\n                    error_message: \"body is missing from the request\"\n                invalid_body:\n                  value:\n                    error_code: \"40001\"\n                    error_message: \"body is missing required fields or has invalid fields\"\n                invalid_content_type:\n                  value:\n                    error_code: \"40002\"\n                    error_message: \"unsupported content type header\"\n                resource_not_found:\n                  value:\n                    error_code: \"40004\"\n                    error_message: \"resource not found\"\n                vat_exists:\n                  value:\n                    error_code: \"40007\"\n                    error_message: \"company with the given vat exists\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n              examples:\n                token_missing:\n                  value:\n                    error_code: \"40100\"\n                    error_message: \"jwt token missing\"\n                token_expired:\n                  value:\n                    error_code: \"40101\"\n                    error_message: \"jwt token expired\"\n                token_invalid:\n                  value:\n                    error_code: \"40102\"\n                    error_message: \"jwt token invalid\"\n        \"500\":\n          $ref: \"#/components/responses/InternalError\"\n    get:\n      description: \u003e\n\n        Fetches information on chains connected to a partner.\n\n        ### Access scope\n\n          - PARTNER\n\n        ### Matching\n\n        Fetches chains based on partner token\n          - partnertoken\n\n      operationId: GetChains\n      summary: Get chains\n      responses:\n        \"200\":\n          description: Successfully fetched chains\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AllChainsResponse\"\n              example:\n                - chain_id: \"8a499ffa488cdce401488cf8c5d700cd\"\n                  partner_id: \"8a499ffb488d9ca501488dc3fba0005b\"\n                  name: \"Test Chain 1\"\n                  vat: SE123456789009\n                  address:\n                    street1: Gatan 1\n                    postalcode: \"13254\"\n                    city: \"One Buying\"\n                    country: SWE\n                  icon_url: https://test.url.net/api/v1/resources/156257243392d65d706e044b56b168c452809d68f6\n                  logo_url: https://test.url.net/api/v1/resources/156257243392d65d706e044b56b168c452809d68f6\n                - chain_id: \"8a499ffa488cdce401488cf8c5d700cd\"\n                  partner_id: \"8a499ffb488d9ca501488dc3fba0005b\"\n                  name: \"Test Chain 2\"\n                  vat: SE987654321009\n                  address:\n                    street1: Gatan 2\n                    postalcode: \"23456\"\n                    city: \"Two Buying\"\n                    country: SWE\n                  icon_url: https://test.url.net/api/v1/resources/156257243392d65d706e044b56b168c452809d68f6                            \n                  logo_url: https://test.url.net/api/v1/resources/156257243392d65d706e044b56b168c452809d68f6\n        \"400\":\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n              examples:\n                resource_not_found:\n                  value:\n                    error_code: \"40004\"\n                    error_message: \"resource not found\"\n                id_not_provided:\n                  value:\n                    error_code: \"40009\"\n                    error_message: \"required id not provided\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n              examples:\n                token_missing:\n                  value:\n                    error_code: \"40100\"\n                    error_message: \"jwt token missing\"\n                token_expired:\n                  value:\n                    error_code: \"40101\"\n                    error_message: \"jwt token expired\"\n                token_invalid:\n                  value:\n                    error_code: \"40102\"\n                    error_message: \"jwt token invalid\"\n                credentials_invalid:\n                  value:\n                    error_code: \"40103\"\n                    error_message: \"credentials invalid\"\n        \"500\":\n          $ref: \"#/components/responses/InternalError\"            \n  /dr/v1/chains/{chainID}:\n    put:\n      description: \u003e\n        A partner can update chain information using this endpoint.\n\n        ### Access scope\n\n          - PARTNER\n\n      operationId: UpdateChain\n      summary: Update chain\n\n      parameters:\n        - $ref: \"#/components/parameters/ChainID\"\n\n      requestBody:\n        description: \u003e\n          Takes in a chain object with fields to be modified.\n\n          Fields not present in the body are not modified.\n\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateChain\"\n            example:\n              name: Demo chain updated\n              vat: \"SE555555555501\"\n              address:\n                street1: Gatan 2\n                postalcode: \"13254\"\n                city: \"onebuying\"\n                country: SWE\n              logo:\n                data: \"iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVQYV2NgYAAAAAMAAWgmWQ0AAAAASUVORK5CYII=\"\n                content_type: \"image/png\"\n              item_display_fields: [\"article_number_pos\"]\n      responses:\n        \"200\":\n          description: Chain successfully updated\n          content:\n            application/json:\n              schema:\n                type: object\n        \"400\":\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n              examples:\n                missing_body:\n                  value:\n                    error_code: \"40000\"\n                    error_message: \"body is missing from the request\"\n                invalid_body:\n                  value:\n                    error_code: \"40001\"\n                    error_message: \"body is missing required fields or has invalid fields\"\n                invalid_content_type:\n                  value:\n                    error_code: \"40002\"\n                    error_message: \"unsupported content type header\"\n                resource_not_found:\n                  value:\n                    error_code: \"40004\"\n                    error_message: \"resource not found\"\n                vat_exists:\n                  value:\n                    error_code: \"40007\"\n                    error_message: \"company with the given vat exists\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n              examples:\n                token_missing:\n                  value:\n                    error_code: \"40100\"\n                    error_message: \"jwt token missing\"\n                token_expired:\n                  value:\n                    error_code: \"40101\"\n                    error_message: \"jwt token expired\"\n                token_invalid:\n                  value:\n                    error_code: \"40102\"\n                    error_message: \"jwt token invalid\"\n                credentials_invalid:\n                  value:\n                    error_code: \"40103\"\n                    error_message: \"credentials invalid\"\n        \"500\":\n          $ref: \"#/components/responses/InternalError\"\n    get:\n      description: \u003e\n\n        Fetches information on the given chain\n\n        ### Access scope\n\n          - PARTNER\n\n      parameters:\n        - $ref: \"#/components/parameters/ChainID\"\n\n      operationId: GetChain\n      summary: Get chain\n      responses:\n        \"200\":\n          description: Successfully fetched chain\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetChainResponse\"\n              example:\n                chain_id: \"012345678901234567890123456789012345678901\"\n                partner_id: \"1561724304c592809e0b614d33a5258cf697a55fc9\"\n                name: \"Demo chain\"\n                vat: SE012345678989\n                address:\n                  street1: Gatan 1\n                  postalcode: \"13254\"\n                  city: \"onebuying\"\n                  country: SWE\n                icon_url: https://test.url.net/api/v1/resources/156257243392d65d706e044b56b168c452809d68f6\n                logo_url: https://test.url.net/api/v1/resources/156257243392d65d706e044b56b168c452809d68f6\n        \"400\":\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n              examples:\n                resource_not_found:\n                  value:\n                    error_code: \"40004\"\n                    error_message: \"resource not found\"\n                id_not_provided:\n                  value:\n                    error_code: \"40009\"\n                    error_message: \"required id not provided\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n              examples:\n                token_missing:\n                  value:\n                    error_code: \"40100\"\n                    error_message: \"jwt token missing\"\n                token_expired:\n                  value:\n                    error_code: \"40101\"\n                    error_message: \"jwt token expired\"\n                token_invalid:\n                  value:\n                    error_code: \"40102\"\n                    error_message: \"jwt token invalid\"\n                credentials_invalid:\n                  value:\n                    error_code: \"40103\"\n                    error_message: \"credentials invalid\"\n        \"500\":\n          $ref: \"#/components/responses/InternalError\"   \n  /dr/v1/chains/{chainID}/stores:\n    get:\n      description: \u003e\n\n        Fetches information on stores connected to a chain.\n\n        ### Access scope\n\n          - PARTNER\n\n        ### Matching\n\n        Fetches stores based on partner token and chain id\n\n      operationId: GetStores\n      summary: Get stores\n\n      parameters:\n        - $ref: \"#/components/parameters/ChainID\"\n\n      responses:\n        \"200\":\n          description: Successfully fetched stores\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AllStoresResponse\"\n              example:\n                - store_id: \"8a499ffa488cdce401488cf8c5d700cd\"\n                  external_id: \"store-100\"\n                  owner_id: \"8a499ffb488d9ca501488dc3fba0005b\"\n                  name: \"Test Store 1\"\n                  vat: SE123456789009\n                  address:\n                    street1: Gatan 1\n                    postalcode: \"13254\"\n                    city: \"One Buying\"\n                    country: SWE\n                  icon_url: https://test.url.net/api/v1/resources/156257243392d65d706e044b56b168c452809d68f6\n                  logo_url: https://test.url.net/api/v1/resources/156257243392d65d706e044b56b168c452809d68f6\n                - store_id: \"8a499ffa488cdce401488cf8c5d700cd\"\n                  external_id: \"store-200\"\n                  owner_id: \"8a499ffb488d9ca501488dc3fba0005b\"\n                  name: \"Test Store 2\"\n                  vat: SE987654321009\n                  address:\n                    street1: Gatan 2\n                    postalcode: \"23456\"\n                    city: \"Two Buying\"\n                    country: SWE\n                  icon_url: https://test.url.net/api/v1/resources/156257243392d65d706e044b56b168c452809d68f6                            \n                  logo_url: https://test.url.net/api/v1/resources/156257243392d65d706e044b56b168c452809d68f6\n        \"400\":\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n              examples:\n                resource_not_found:\n                  value:\n                    error_code: \"40004\"\n                    error_message: \"resource not found\"\n                id_not_provided:\n                  value:\n                    error_code: \"40009\"\n                    error_message: \"required id not provided\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n              examples:\n                token_missing:\n                  value:\n                    error_code: \"40100\"\n                    error_message: \"jwt token missing\"\n                token_expired:\n                  value:\n                    error_code: \"40101\"\n                    error_message: \"jwt token expired\"\n                token_invalid:\n                  value:\n                    error_code: \"40102\"\n                    error_message: \"jwt token invalid\"\n                credentials_invalid:\n                  value:\n                    error_code: \"40103\"\n                    error_message: \"credentials invalid\"\n        \"500\":\n          $ref: \"#/components/responses/InternalError\"            \n  /dr/v1/chains/{chainID}/stores/{storeID}:\n    get:\n      description: \u003e\n\n        Fetches information on the given store.\n        Same as [/dr/v1/stores/{storeID}](#operation/GetStore).\n\n        ### Access scope\n\n          - PARTNER\n\n        ### Matching\n\n        Fetches store based on chain and store id\n\n      operationId: GetStore2\n      summary: Get store\n\n      parameters:\n        - $ref: \"#/components/parameters/ChainID\"\n        - $ref: \"#/components/parameters/StoreID\"\n\n      responses:\n        \"200\":\n          description: Successfully fetched stores\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetStoreResponse\"\n              example:\n                store_id: \"8a499ffa488cdce401488cf8c5d700cd\"\n                external_id: \"store-100\"\n                owner_id: \"8a499ffb488d9ca501488dc3fba0005b\"\n                name: \"Test Store 1\"\n                vat: SE123456789009\n                address:\n                  street1: Gatan 1\n                  postalcode: \"13254\"\n                  city: \"One Buying\"\n                  country: SWE\n                icon_url: https://test.url.net/api/v1/resources/156257243392d65d706e044b56b168c452809d68f6\n                logo_url: https://test.url.net/api/v1/resources/156257243392d65d706e044b56b168c452809d68f6\n        \"400\":\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n              examples:\n                resource_not_found:\n                  value:\n                    error_code: \"40004\"\n                    error_message: \"resource not found\"\n                id_not_provided:\n                  value:\n                    error_code: \"40009\"\n                    error_message: \"required id not provided\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n              examples:\n                token_missing:\n                  value:\n                    error_code: \"40100\"\n                    error_message: \"jwt token missing\"\n                token_expired:\n                  value:\n                    error_code: \"40101\"\n                    error_message: \"jwt token expired\"\n                token_invalid:\n                  value:\n                    error_code: \"40102\"\n                    error_message: \"jwt token invalid\"\n                credentials_invalid:\n                  value:\n                    error_code: \"40103\"\n                    error_message: \"credentials invalid\"\n        \"500\":\n          $ref: \"#/components/responses/InternalError\"                      \n  /dr/v1/stores:\n    post:\n      description: \u003e\n        Creates a store or link to an existing store using this endpoint.\n\n        ### Access scope\n\n          - PARTNER\n          - CHAIN\n\n        ### Using external ID\n\n\n        If external ID is provided in the body a new store is created using the external ID. If the external id already exists an error is returned.\n\n\n        ### Without external ID (Deprecated)\n\n        If external ID is not provided we determine if this is an existing store based on the following fields\n          - name\n          - vat\n          - owner_id\n\n        It is possible to create multiple stores with the same VAT, however they all need to belong to the same owner (chain).\n\n\n      operationId: AddStore\n      summary: Add store\n      requestBody:\n        description: Takes in a store object with required information to create a new store\n        required: true\n\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AddStore\"\n            example:\n              external_id: ex000001\n              name: Demo store\n              vat: SE012345678989\n              owner_id: \"1593602546268ce6ece6cf49969f52f8a724e6f1f5\"\n              address:\n                street1: Gatan 1\n                postalcode: \"13254\"\n                city: \"onebuying\"\n                country: SWE\n              icon:\n                data: \"iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVQYV2NgYAAAAAMAAWgmWQ0AAAAASUVORK5CYII=\"\n                content_type: \"image/png\"\n              logo:\n                data: \"iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVQYV2NgYAAAAAMAAWgmWQ0AAAAASUVORK5CYII=\"\n                content_type: \"image/png\"\n      responses:\n        \"200\":\n          description: Store already existed, only of no external_id is provided\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AddStoreResponse\"\n              example:\n                store_id: 15594097555922f97bfeb148d6b9a6ef76f76ebdce\n                vat: SE012345678989\n                created: false\n        \"201\":\n          description: Store successfully created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AddStoreResponse\"\n              example:\n                store_id: 15594097555922f97bfeb148d6b9a6ef76f76ebdce\n                vat: SE012345678989\n                external_id: ex000001\n                created: true\n        \"400\":\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n              examples:\n                missing_body:\n                  value:\n                    error_code: \"40000\"\n                    error_message: \"body is missing from the request\"\n                invalid_body:\n                  value:\n                    error_code: \"40001\"\n                    error_message: \"body is missing required fields or has invalid fields\"\n                invalid_content_type:\n                  value:\n                    error_code: \"40002\"\n                    error_message: \"unsupported content type header\"\n                resource_not_found:\n                  value:\n                    error_code: \"40004\"\n                    error_message: \"resource not found\"\n                vat_exists:\n                  value:\n                    error_code: \"40007\"\n                    error_message: \"company with the given vat exists\"\n                company_exists:\n                  value:\n                    error_code: \"40008\"\n                    error_message: \"company exists\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n              examples:\n                token_missing:\n                  value:\n                    error_code: \"40100\"\n                    error_message: \"jwt token missing\"\n                token_expired:\n                  value:\n                    error_code: \"40101\"\n                    error_message: \"jwt token expired\"\n                token_invalid:\n                  value:\n                    error_code: \"40102\"\n                    error_message: \"jwt token invalid\"\n                credentials_invalid:\n                  value:\n                    error_code: \"40103\"\n                    error_message: \"credentials invalid\"\n        \"500\":\n          $ref: \"#/components/responses/InternalError\"\n    get:\n      description: \u003e\n        Fetch information on the given store using external store ID\n\n        ### Access scope\n\n          - PARTNER\n          - CHAIN\n          - STORE\n\n      operationId: GetStoreByID\n      summary: Get store\n\n      parameters:\n        - $ref: \"#/components/parameters/ExternalIDQuery\"\n        - $ref: \"#/components/parameters/OwnerIDQuery\"\n\n      responses:\n        \"200\":\n          description: Successfully fetched store\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetStoreResponse\"\n              example:\n                store_id: \"012345678901234567890123456789012345678901\"\n                external_id: \"ex000001\"\n                owner_id: \"8a499ffb488d9ca501488dc3fba0005b\"\n                name: \"Demo Store\"\n                vat: SE012345678989\n                address:\n                  street1: Gatan 1\n                  postalcode: \"13254\"\n                  city: \"One Buying\"\n                  country: SWE\n                icon_url: https://test.url.net/api/v1/resources/156257243392d65d706e044b56b168c452809d68f6\n                logo_url: https://test.url.net/api/v1/resources/156257243392d65d706e044b56b168c452809d68f6              \n        \"400\":\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n              examples:\n                resource_not_found:\n                  value:\n                    error_code: \"40004\"\n                    error_message: \"resource not found\"\n                id_not_provided:\n                  value:\n                    error_code: \"40009\"\n                    error_message: \"required id not provided\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n              examples:\n                token_missing:\n                  value:\n                    error_code: \"40100\"\n                    error_message: \"jwt token missing\"\n                token_expired:\n                  value:\n                    error_code: \"40101\"\n                    error_message: \"jwt token expired\"\n                token_invalid:\n                  value:\n                    error_code: \"40102\"\n                    error_message: \"jwt token invalid\"\n                credentials_invalid:\n                  value:\n                    error_code: \"40103\"\n                    error_message: \"credentials invalid\"\n        \"500\":\n          $ref: \"#/components/responses/InternalError\"\n  /dr/v1/stores/{StoreID}:\n    get:\n      description: \u003e\n        Fetch information on the given store\n\n        ### Access scope\n\n          - PARTNER\n          - CHAIN\n          - STORE\n\n      operationId: GetStore\n      summary: Get store\n\n      parameters:\n        - $ref: \"#/components/parameters/StoreID\"\n\n      responses:\n        \"200\":\n          description: Successfully fetched store\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetStoreResponse\"\n              example:\n                store_id: \"012345678901234567890123456789012345678901\"\n                external_id: \"ex000001\"\n                owner_id: \"8a499ffb488d9ca501488dc3fba0005b\"\n                name: \"Demo Store\"\n                vat: SE012345678989\n                address:\n                  street1: Gatan 1\n                  postalcode: \"13254\"\n                  city: \"One Buying\"\n                  country: SWE\n                icon_url: https://test.url.net/api/v1/resources/156257243392d65d706e044b56b168c452809d68f6\n                logo_url: https://test.url.net/api/v1/resources/156257243392d65d706e044b56b168c452809d68f6              \n        \"400\":\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n              examples:\n                resource_not_found:\n                  value:\n                    error_code: \"40004\"\n                    error_message: \"resource not found\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n              examples:\n                token_missing:\n                  value:\n                    error_code: \"40100\"\n                    error_message: \"jwt token missing\"\n                token_expired:\n                  value:\n                    error_code: \"40101\"\n                    error_message: \"jwt token expired\"\n                token_invalid:\n                  value:\n                    error_code: \"40102\"\n                    error_message: \"jwt token invalid\"\n                credentials_invalid:\n                  value:\n                    error_code: \"40103\"\n                    error_message: \"credentials invalid\"\n        \"500\":\n          $ref: \"#/components/responses/InternalError\"\n    put:\n      description: \u003e\n\n        A partner can update store information using this endpoint.\n\n        ### Access scope\n\n          - PARTNER\n          - CHAIN\n          - STORE\n\n      operationId: UpdateStore\n      summary: Update store\n\n      parameters:\n        - $ref: \"#/components/parameters/StoreID\"\n\n      requestBody:\n        description: \u003e\n          Takes in a store object with fields to be modified.\n\n          Fields not present in the body are not modified.\n\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateStore\"\n            example:\n              name: Demo store\n              vat: \"SE123456789100\"\n              owner_id: \"1593602546268ce6ece6cf49969f52f8a724e6f1f5\"\n              address:\n                street1: Gatan 1\n                postalcode: \"13254\"\n                city: \"onebuying\"\n                country: SWE\n              icon:\n                data: \"iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVQYV2NgYAAAAAMAAWgmWQ0AAAAASUVORK5CYII=\"\n                content_type: \"image/png\"\n              logo:\n                data: \"iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVQYV2NgYAAAAAMAAWgmWQ0AAAAASUVORK5CYII=\"\n                content_type: \"image/png\"\n      responses:\n        \"200\":\n          description: Store successfully updated\n          content:\n            application/json:\n              schema:\n                type: object\n        \"400\":\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n              examples:\n                missing_body:\n                  value:\n                    error_code: \"40000\"\n                    error_message: \"body is missing from the request\"\n                invalid_body:\n                  value:\n                    error_code: \"40001\"\n                    error_message: \"body is missing required fields or has invalid fields\"\n                invalid_content_type:\n                  value:\n                    error_code: \"40002\"\n                    error_message: \"unsupported content type header\"\n                resource_not_found:\n                  value:\n                    error_code: \"40004\"\n                    error_message: \"resource not found\"\n                company_exists:\n                  value:\n                    error_code: \"40008\"\n                    error_message: \"company exists\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n              examples:\n                token_missing:\n                  value:\n                    error_code: \"40100\"\n                    error_message: \"jwt token missing\"\n                token_expired:\n                  value:\n                    error_code: \"40101\"\n                    error_message: \"jwt token expired\"\n                token_invalid:\n                  value:\n                    error_code: \"40102\"\n                    error_message: \"jwt token invalid\"\n                credentials_invalid:\n                  value:\n                    error_code: \"40103\"\n                    error_message: \"credentials invalid\"\n        \"500\":\n          $ref: \"#/components/responses/InternalError\"\n\n  /dr/v1/auth/token:\n    post:\n      description: \u003e\n        Fetch JWT authentication token using OAuth client credential grant\n        Requires client_id and client_secret\n\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                grant_type:\n                  type: string\n                  enum:\n                    - client_credentials\n                client_id:\n                  type: string\n                client_secret:\n                  type: string\n              required:\n                - grant_type\n                - client_id\n                - client_secret\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Token\"\n        \"400\":\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n              examples:\n                invalid_content_type:\n                  value:\n                    error_code: \"40002\"\n                    error_message: \"unsupported content type header\"\n                invalid_body:\n                  value:\n                    error_code: \"40001\"\n                    error_message: \"body is missing required fields or has invalid fields\"\n                resource_not_found:\n                  value:\n                    error_code: \"40004\"\n                    error_message: \"resource not found\"\n                company_exists:\n                  value:\n                    error_code: \"40008\"\n                    error_message: \"company exists\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n              examples:\n                token_missing:\n                  value:\n                    error_code: \"40100\"\n                    error_message: \"jwt token missing\"\n                token_expired:\n                  value:\n                    error_code: \"40101\"\n                    error_message: \"jwt token expired\"\n                token_invalid:\n                  value:\n                    error_code: \"40102\"\n                    error_message: \"jwt token invalid\"\n                credentials_invalid:\n                  value:\n                    error_code: \"40103\"\n                    error_message: \"credentials invalid\"\n        \"500\":\n          $ref: \"#/components/responses/InternalError\"\n  /dr/v1/auth/token/chain/{chainID}:\n    post:\n      summary: Fetch JWT authentication token for a chain using partner token\n      description: \u003e\n        ### Access scope\n\n          - PARTNER\n\n      parameters:\n        - $ref: \"#/components/parameters/ChainID\"\n\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Token\"\n        \"400\":\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n              examples:\n                invalid_content_type:\n                  value:\n                    error_code: \"40002\"\n                    error_message: \"unsupported content type header\"\n                invalid_body:\n                  value:\n                    error_code: \"40001\"\n                    error_message: \"body is missing required fields or has invalid fields\"\n                resource_not_found:\n                  value:\n                    error_code: \"40004\"\n                    error_message: \"resource not found\"\n                company_exists:\n                  value:\n                    error_code: \"40008\"\n                    error_message: \"company exists\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n              examples:\n                token_missing:\n                  value:\n                    error_code: \"40100\"\n                    error_message: \"jwt token missing\"\n                token_expired:\n                  value:\n                    error_code: \"40101\"\n                    error_message: \"jwt token expired\"\n                token_invalid:\n                  value:\n                    error_code: \"40102\"\n                    error_message: \"jwt token invalid\"\n                credentials_invalid:\n                  value:\n                    error_code: \"40103\"\n                    error_message: \"credentials invalid\"\n        \"500\":\n          $ref: \"#/components/responses/InternalError\"\n  /dr/v1/auth/token/store/{StoreID}:\n    post:\n      summary: Fetch JWT authentication token for a store using partner or chain token\n      description: \u003e\n        ### Access scope\n\n          - PARTNER\n          - CHAIN\n\n      parameters:\n        - $ref: \"#/components/parameters/StoreID\"\n\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Token\"\n        \"400\":\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n              examples:\n                invalid_content_type:\n                  value:\n                    error_code: \"40002\"\n                    error_message: \"unsupported content type header\"\n                invalid_body:\n                  value:\n                    error_code: \"40001\"\n                    error_message: \"body is missing required fields or has invalid fields\"\n                resource_not_found:\n                  value:\n                    error_code: \"40004\"\n                    error_message: \"resource not found\"\n                company_exists:\n                  value:\n                    error_code: \"40008\"\n                    error_message: \"company exists\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n              examples:\n                token_missing:\n                  value:\n                    error_code: \"40100\"\n                    error_message: \"jwt token missing\"\n                token_expired:\n                  value:\n                    error_code: \"40101\"\n                    error_message: \"jwt token expired\"\n                token_invalid:\n                  value:\n                    error_code: \"40102\"\n                    error_message: \"jwt token invalid\"\n                credentials_invalid:\n                  value:\n                    error_code: \"40103\"\n                    error_message: \"credentials invalid\"\n        \"500\":\n          $ref: \"#/components/responses/InternalError\"\n  /dr/v1/users/{type}/{id}:\n    get:\n      summary: Check if a user with the given id exists\n      description: \u003e\n        The user lookup checks if a given identifier is connected to a Kivra user. We recommend to hash (sha256) the identifier before\n        doing the lookup except if a cardtoken is used. The cardtoken MUST NOT be hashed.\n        \n        \n        **NOTE!** A user can reject receipts from any chain so if a partner token is used when doing the user lookup\n        a chain id must be passed.\n\n        ### Access scope\n\n          - PARTNER\n          - CHAIN\n          - STORE\n      parameters:\n        - $ref: \"#/components/parameters/IdentifierType\"\n        - $ref: \"#/components/parameters/IdentifierID\"\n        - $ref: \"#/components/parameters/PartnerChainID\"\n        - $ref: \"#/components/parameters/Hashed\"\n\n      responses:\n        \"204\":\n          description: User exists\n        \"400\":\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n              examples:\n                person_not_found:\n                  value:\n                    error_code: \"40005\"\n                    error_message: \"person not found\"\n                unknown_url_parameter:\n                  value:\n                    error_code: \"40010\"\n                    error_message: \"unknown url parameter\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n              examples:\n                token_missing:\n                  value:\n                    error_code: \"40100\"\n                    error_message: \"jwt token missing\"\n                token_expired:\n                  value:\n                    error_code: \"40101\"\n                    error_message: \"jwt token expired\"\n                token_invalid:\n                  value:\n                    error_code: \"40102\"\n                    error_message: \"jwt token invalid\"\n                credentials_invalid:\n                  value:\n                    error_code: \"40103\"\n                    error_message: \"credentials invalid\"\n        \"500\":\n          $ref: \"#/components/responses/InternalError\"\n  /dr/v1/expense/register:\n    post:\n      summary: Register a new Expense Management System(EMS)\n      description: \u003e\n        ### Access scope\n\n          - EMS\n      requestBody:\n        description: Takes in a expense management object with required information to create a new expense management system\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RegisterEMS\"\n            example:\n              external_id: \"0123456789abcdef0123456789abcdef01234567890\"\n              name: Company Expense\n              icon_url: https://www.ems.se/icon\n              url: https://api.ems.se/v1\n      responses:\n        \"201\":\n          description: Expense management sucessfully created\n          content:\n            application/json:\n              schema:\n                type: object\n        \"400\":\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n              examples:\n                invalid_body:\n                  value:\n                    error_code: \"40001\"\n                    error_message: \"body is missing required fields or has invalid fields\"\n                company_exists:\n                  value:\n                    error_code: \"40008\"\n                    error_message: \"company exists\"\n        \"500\":\n          $ref: \"#/components/responses/InternalError\"\n  /dr/v1/expense/authorise:\n    get:\n      description: \u003e\n        Start the authorisation process for a registering a person for an EMS. Currently only BankID is supported\n      parameters:\n        - $ref: \"#/components/parameters/ClientID\"\n        - $ref: \"#/components/parameters/RedirectURI\"\n        - $ref: \"#/components/parameters/StateParam\"\n      responses:\n        \"200\":\n          description: HTML template to start the authorisation application\n          content:\n            application/json:\n              schema:\n                type: object\n        \"400\":\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n              examples:\n                invalid_query_parameter:\n                  value:\n                    error_code: \"40011\"\n                    error_message: \"invalid query parameter\"\n        \"500\":\n          $ref: \"#/components/responses/InternalError\"\n  /dr/v1/expense/person:\n    post:\n      summary: Register a person for an EMS\n      description: \u003e\n        ### Access scope\n\n          - EMS\n      requestBody:\n        description: Takes in a register person for ems object with required information to register a person for an EMS\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RegisterPersonForEMS\"\n            example:\n              external_id: \"0123456789abcdef0123456789abcdef01234567890\"\n              owner_id: \"191039d537408dbaa8a22a0097a7f962301b36b360fe\"\n              token: \"example_token_for_191039d537408dbaa8a22a0097a7f962301b36b360fe_and_0123456789abcdef0123456789abcdef01234567890\"\n      responses:\n        \"201\":\n          description: Implicit person successfully registered for an EMS\n          content:\n            application/json:\n              schema:\n                type: object\n        \"400\":\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n              examples:\n                invalid_body:\n                  value:\n                    error_code: \"40001\"\n                    error_message: \"body is missing required fields or has invalid fields\"\n                resource_not_found:\n                  value:\n                    error_code: \"40004\"\n                    error_message: \"resource not found\"\n                company_exists:\n                  value:\n                    error_code: \"40008\"\n                    error_message: \"company exists\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n              examples:\n                token_missing:\n                  value:\n                    error_code: \"40100\"\n                    error_message: \"jwt token missing\"\n                token_expired:\n                  value:\n                    error_code: \"40101\"\n                    error_message: \"jwt token expired\"\n                token_invalid:\n                  value:\n                    error_code: \"40102\"\n                    error_message: \"jwt token invalid\"\n                credentials_invalid:\n                  value:\n                    error_code: \"40103\"\n                    error_message: \"credentials invalid\"\n        \"500\":\n          $ref: \"#/components/responses/InternalError\"\n  /dr/v1/expense/person/deregister:\n    post:\n      summary: Deregisters a person from an EMS\n      description: \u003e\n        ### Access scope\n\n          - EMS\n      requestBody:\n        description: Takes in a de-register person for ems object with required information to de-register a person from an EMS\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeregisterPersonForEMS\"\n            example:\n              external_id: \"0123456789abcdef0123456789abcdef01234567890\"\n              owner_id: \"191039d537408dbaa8a22a0097a7f962301b36b360fe\"\n      responses:\n        \"204\":\n          description: Implicit person successfully de-registered from an EMS\n          content:\n            application/json:\n              schema:\n                type: object\n        \"400\":\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n              examples:\n                invalid_body:\n                  value:\n                    error_code: \"40001\"\n                    error_message: \"body is missing required fields or has invalid fields\"\n                resource_not_found:\n                  value:\n                    error_code: \"40004\"\n                    error_message: \"resource not found\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n              examples:\n                token_missing:\n                  value:\n                    error_code: \"40100\"\n                    error_message: \"jwt token missing\"\n                token_expired:\n                  value:\n                    error_code: \"40101\"\n                    error_message: \"jwt token expired\"\n                token_invalid:\n                  value:\n                    error_code: \"40102\"\n                    error_message: \"jwt token invalid\"\n        \"500\":\n          $ref: \"#/components/responses/InternalError\"\n  /dr/v1/expense/receipts/{receiptID}:\n    delete:\n      summary: Deregisters a receipt that has been expensed\n      description: \u003e\n        ### Access scope\n\n          - EMS\n      parameters:\n        - $ref: \"#/components/parameters/ReceiptID\"\n      responses:\n        \"204\":\n          description: Receipt successfully removed from expense system\n          content:\n            application/json:\n              schema:\n                type: object\n        \"400\":\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n              examples:\n                invalid_body:\n                  value:\n                    error_code: \"40001\"\n                    error_message: \"body is missing required fields or has invalid fields\"\n                resource_not_found:\n                  value:\n                    error_code: \"40004\"\n                    error_message: \"resource not found\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n              examples:\n                token_missing:\n                  value:\n                    error_code: \"40100\"\n                    error_message: \"jwt token missing\"\n                token_expired:\n                  value:\n                    error_code: \"40101\"\n                    error_message: \"jwt token expired\"\n                token_invalid:\n                  value:\n                    error_code: \"40102\"\n                    error_message: \"jwt token invalid\"\n                credentials_invalid:\n                  value:\n                    error_code: \"40103\"\n                    error_message: \"credentials invalid\"\n        \"500\":\n          $ref: \"#/components/responses/InternalError\"          \n\ncomponents:\n  schemas:\n    TokenResponse:\n      title: TokenResponse\n      type: object\n      properties:\n        access_token:\n          type: string\n        token_type:\n          type: string\n          enum:\n            - Bearer\n        expires_in:\n          description: expiration time in seconds\n          type: integer\n    AllChainsResponse:\n      title: List of chains    \n      type: array\n      items:\n        $ref: '#/components/schemas/GetChainResponse'\n    AllStoresResponse:\n      title: List of stores\n      type: array\n      items:\n        $ref: '#/components/schemas/GetStoreResponse'        \n    AddStoreResponse:\n      title: AddStoreResponse\n      type: object\n      properties:\n        store_id:\n          type: string\n        vat:\n          type: string\n        external_id:\n          type: string\n        created:\n          type: boolean\n    AddChainResponse:\n      title: AddChainResponse\n      type: object\n      properties:\n        chain_id:\n          type: string\n        vat:\n          type: string\n        created:\n          type: boolean\n    ErrorResponse:\n      title: ErrorResponse\n      type: object\n      properties:\n        error_code:\n          type: string\n        error_message:\n          type: string\n        error_detail:\n          type: array\n          items:\n            type: string\n    GetChainResponse:\n      title: GetChainResponse\n      type: object\n      properties:\n        chain_id:\n          type: string\n          description: The chain id in Kivra\n        partner_id:\n          type: string\n          description: The partner id in Kivra\n        name:\n          type: string\n          description: The name of the chain\n        vat:\n          type: string\n          description: The VAT number of the chain\n        phone:\n          type: string\n          description: The phone number of the chain\n        address:\n          type: object\n          description: The address of the chain\n          properties:\n            street1:\n              type: string\n            street2:\n              type: string\n            street3:\n              type: string\n            postalcode:\n              type: string\n            city:\n              type: string\n            state:\n              type: string\n            country:\n              type: string\n        icon_url:\n          type: string\n          description: Chain Icon URL\n        logo_url:\n          type: string\n          description: Chain Logo URL\n    GetStoreResponse:\n      title: GetStoreResponse\n      type: object\n      properties:\n        store_id:\n          type: string\n          description: The store id in Kivra\n        external_id:\n          type: string\n          description: ID provided by the POS that is unique per chain\n        owner_id:\n          type: string\n          description: ID of the owner company (chain)\n        name:\n          type: string\n          description: The name of the store\n        vat:\n          type: string\n          description: The VAT number of the store\n        phone:\n          type: string\n          description: The phone number of the store\n        address:\n          type: object\n          description: The address of the store\n          properties:\n            street1:\n              type: string\n            street2:\n              type: string\n            street3:\n              type: string\n            postalcode:\n              type: string\n            city:\n              type: string\n            state:\n              type: string\n            country:\n              type: string\n        icon_url:\n          type: string\n          description: Store Icon URL\n        logo_url:\n          type: string\n          description: Store Logo URL          \n    AddStore:\n      title: AddStore\n      type: object\n      properties:\n        external_id:\n          type: string\n          description: ID provided by the POS that is unique per chain\n        name:\n          type: string\n          description: The name of the store\n          minLength: 1\n        vat:\n          type: string\n          description: The VAT number of the store\n          pattern: ^((SE)?[0-9]{12})$\"\n        owner_id:\n          type: string\n          description: ID of the owner company (chain)\n          pattern: \"^([a-z0-9]{42})$\"\n        phone:\n          type: string\n          description: The phone number of the store\n        address:\n          type: object\n          description: The address of the store\n          properties:\n            street1:\n              type: string\n            street2:\n              type: string\n            street3:\n              type: string\n            postalcode:\n              type: string\n            city:\n              type: string\n            state:\n              type: string\n            country:\n              type: string\n              maxLength: 3\n              minLength: 3\n          required:\n            - street1\n            - postalcode\n            - country\n        icon:\n          type: object\n          description: Icon displayed on the receipt\n          properties:\n            data:\n              type: string\n              description: Base64 encoded image\n            content_type:\n              type: string\n              description: The image content type\n          required:\n            - data\n            - content_type\n        logo:\n          type: object\n          description: Logo displayed on the receipt\n          properties:\n            data:\n              type: string\n              description: Base64 encoded image\n            content_type:\n              type: string\n              description: The image content type\n          required:\n            - data\n            - content_type\n      required:\n        - name\n        - vat\n        - owner_id\n    UpdateStore:\n      title: UpdateStore\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of the store\n          minLength: 1\n        vat:\n          type: string\n          description: The VAT number of the store\n          pattern: ^((SE)?[0-9]{12})$\"\n        owner_id:\n          type: string\n          description: ID of the owner company (chain)\n          pattern: \"^([a-z0-9]{42})$\"\n        phone:\n          type: string\n          description: The phone number of the store\n        address:\n          type: object\n          description: The address of the store\n          properties:\n            street1:\n              type: string\n            street2:\n              type: string\n            street3:\n              type: string\n            postalcode:\n              type: string\n            city:\n              type: string\n            state:\n              type: string\n            country:\n              type: string\n              maxLength: 3\n              minLength: 3\n        icon:\n          type: object\n          description: Icon displayed on the receipt\n          properties:\n            data:\n              type: string\n              description: Base64 encoded image\n            content_type:\n              type: string\n              description: The image content type\n          required:\n            - data\n            - content_type\n        logo:\n          type: object\n          description: Logo displayed on the receipt\n          properties:\n            data:\n              type: string\n              description: Base64 encoded image\n            content_type:\n              type: string\n              description: The image content type\n          required:\n            - data\n            - content_type\n    AddChain:\n      title: AddChain\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of the store\n          minLength: 1\n        vat:\n          type: string\n          description: The VAT number of the store\n          pattern: ^((SE)?[0-9]{12})$\"\n        phone:\n          type: string\n          description: The phone number of the store\n        address:\n          type: object\n          description: The address of the store\n          properties:\n            street1:\n              type: string\n            street2:\n              type: string\n            street3:\n              type: string\n            postalcode:\n              type: string\n            city:\n              type: string\n            state:\n              type: string\n            country:\n              type: string\n              maxLength: 3\n              minLength: 3\n          required:\n            - street1\n            - postalcode\n            - country\n        icon:\n          type: object\n          description: Icon displayed on the receipt\n          properties:\n            data:\n              type: string\n              description: Base64 encoded image\n            content_type:\n              type: string\n              description: The image content type\n          required:\n            - data\n            - content_type\n        logo:\n          type: object\n          description: Logo displayed on the receipt\n          properties:\n            data:\n              type: string\n              description: Base64 encoded image\n            content_type:\n              type: string\n              description: The image content type\n          required:\n            - data\n            - content_type\n        item_display_fields:\n          type: array\n          description: The extra fields from receipt items that should be displayed in the app\n          items:\n            type: string\n            enum: [article_number_pos, article_number_gtin]\n      required:\n        - name\n        - vat\n    UpdateChain:\n      title: UpdateChain\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of the chain\n          minLength: 1\n        vat:\n          type: string\n          description: The VAT number of the chain\n          pattern: ^((SE)?[0-9]{12})$\"\n        phone:\n          type: string\n          description: The phone number of the chain\n        address:\n          type: object\n          description: The address of the chain\n          properties:\n            street1:\n              type: string\n            street2:\n              type: string\n            street3:\n              type: string\n            postalcode:\n              type: string\n            city:\n              type: string\n            state:\n              type: string\n            country:\n              type: string\n              maxLength: 3\n              minLength: 3\n        icon:\n          type: object\n          description: Icon displayed on the receipt\n          properties:\n            data:\n              type: string\n              description: Base64 encoded image\n            content_type:\n              type: string\n              description: The image content type\n          required:\n            - data\n            - content_type\n        logo:\n          type: object\n          description: Logo displayed on the receipt\n          properties:\n            data:\n              type: string\n              description: Base64 encoded image\n            content_type:\n              type: string\n              description: The image content type\n          required:\n            - data\n            - content_type\n        item_display_fields:\n          type: array\n          description: The extra fields from receipt items that should be displayed in the app\n          items:\n            type: string\n            enum: [article_number_pos, article_number_gtin]\n\n    RegisterEMS:\n      title: RegisterEMS\n      type: object\n      properties:\n        external_id:\n          type: string\n          description: External ID of the expense management system that identifies it in foreign system\n        name:\n          type: string\n          description: The name of the expense management system\n          minLength: 1\n        url:\n          type: string\n          description: A URL that points to the root URL of the foreign EMS API\n        icon_url:\n          type: string\n          description: An optional icon URL that represents the full URL to an icon belonging to the EMS\n    RegisterPersonForEMS:\n      title: RegisterPersonForEMS\n      type: object\n      properties:\n        external_id:\n          type: string\n          description: External ID of the expense management system that identifies it in foreign system\n        owner_id:\n          type: string\n          description: The id of the person registering for expense management system\n          minLength: 1\n        token:\n          type: string\n          description: A token to use when expensing a receipt for this person in the foreign EMS\n    DeregisterPersonForEMS:\n      title: DeregisterPersonForEMS\n      type: object\n      properties:\n        external_id:\n          type: string\n          description: External ID of the expense management system that identifies it in foreign system\n        owner_id:\n          type: string\n          description: The id of the person registering for expense management system\n          minLength: 1\n  parameters:\n    ReceiptID:\n      name: receiptID\n      in: path\n      description: Receipt ID\n      required: true\n      schema:\n        type: string\n    ChainID:\n      name: chainID\n      in: path\n      description: Chain ID\n      required: true\n      schema:\n        type: string\n    PartnerChainID:\n      name: chain_id\n      in: query\n      description: The chain ID is required if using a partner token\n      required: false\n      schema:\n        type: string\n    StoreID:\n      name: StoreID\n      in: path\n      description: Store ID\n      required: true\n      schema:\n        type: string\n    ExternalIDQuery:\n      name: external_id\n      in: query\n      description: External ID of the store\n      required: false\n      schema:\n        type: string\n    OwnerIDQuery:\n      name: owner_id\n      in: query\n      description: Represents the id of the chain the store belongs to. Only required when using partner token\n      required: false\n      schema:\n        type: string\n    ClientID:\n      name: client_id\n      in: query\n      required: true\n      description: Combination of EMS external id and EMS company id\n      schema:\n        type: string\n      example: 157200307788dc2ecacb9e412a9a215df8f897bb53-16200214\n    RedirectURI:\n      name: redirect_uri\n      in: query\n      required: true\n      description: redirect uri to the external system trying to authorise\n      schema:\n        type: string\n      example: https://api.ems.se/\n    StateParam:\n      name: state\n      in: query\n      required: true\n      description: state parameter provided by external system for verification with the callback\n      schema:\n        type: string\n      example: ce3mwhfZSnvNJ%2FActq9MUD2yCgXGRzHJEsD5nLMTznCZDecwHqfPe1npcz5aY6W7L1Z0csbflCTM5iulelYXGXvrX0jfqeXiWPK8vOuGx0zbnIlcC7sDBjkfIm0iXc%2Fk\n\n    IdentifierType:\n      name: type\n      in: path\n      description: \"The type of identifier given\"\n      required: true\n      schema:\n        type: string\n        enum: [nationalidentitynumber, mobilephone, email, cardtoken]\n    IdentifierID:\n      name: id\n      in: path\n      description: \"The value of the identifier\"\n      required: true\n      schema:\n        type: string\n    Hashed:\n      name: hashed\n      in: query\n      description: \"Determinied if the identifier is given as hashed value or in cleartext\"\n      required: true\n      schema:\n        type: boolean\n        default: true\n  examples:\n    perm_denied:\n      value: { \"error_code\": \"10007\", \"error_message\": \"Permission denied\" }\n    store_blocked:\n      value: { \"error_code\": \"10008\", \"error_message\": \"Store is blocked\" }\n  responses:\n    UserDoesntError:\n      description: User does not exist\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ErrorResponse\"\n          example:\n            { \"error_code\": \"20102\", \"error_message\": \"Person not found\" }\n    UnauthorizedError:\n      description: Unauthorized access\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ErrorResponse\"\n          example:\n            value:\n              error_code: \"10007\"\n              error_message: \"Permission denied\"\n    InternalError:\n      description: Internal server error\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ErrorResponse\"\n          example:\n            error_code: \"50000\"\n            error_message: \"internal error\"\n    Token:\n      description: Token successfully created\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/TokenResponse\"\n          example:\n            {\n              \"access_token\": \"\u003cJWT token\u003e\",\n              \"token_type\": \"Bearer\",\n              \"expires_in\": 86000,\n            }\n",
			"canonicalURL": "/github.com/kivra/developer.kivra.com@800684747c6e630651c02938108f96306601abe9/-/blob/receipt/posapi/posapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/kivra/developer.kivra.com/blob/800684747c6e630651c02938108f96306601abe9/receipt/posapi/posapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/dr/v1/chains/{chainID}/stores/{storeID}\": get: operation \"GetStore2\": at receipt/posapi/posapi.yaml:846:7: parse path \"/dr/v1/chains/{chainID}/stores/{storeID}\": path parameter not specified: \"storeID\""
}