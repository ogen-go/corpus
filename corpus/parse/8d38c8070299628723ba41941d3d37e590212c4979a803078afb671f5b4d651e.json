{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/xero.com/xero_bankfeeds/2.9.4/openapi.yaml",
			"byteSize": 38078,
			"content": "openapi: 3.0.0\nservers:\n  - description: Xero Bank Feeds API base url\n    url: https://api.xero.com/bankfeeds.xro/1.0\ninfo:\n  contact:\n    email: api@xero.com\n    name: Xero Platform Team\n    url: https://developer.xero.com\n    x-twitter: XeroAPI\n  description: The Bank Feeds API is a closed API that is only available to\n    financial institutions that have an established financial services\n    partnership with Xero. If you're an existing financial services partner that\n    wants access, contact your local Partner Manager. If you're a financial\n    institution who wants to provide bank feeds to your business customers,\n    contact us to become a financial services partner.\n  license:\n    name: MIT\n    url: https://github.com/XeroAPI/Xero-OpenAPI/blob/master/LICENSE\n  termsOfService: https://developer.xero.com/xero-developer-platform-terms-conditions/\n  title: Xero Bank Feeds API\n  version: 2.9.4\n  x-apisguru-categories:\n    - financial\n  x-origin:\n    - format: openapi\n      url: https://raw.githubusercontent.com/XeroAPI/Xero-OpenAPI/master/xero_bankfeeds.yaml\n      version: \"3.0\"\n  x-providerName: xero.com\n  x-serviceName: xero_bankfeeds\npaths:\n  /FeedConnections:\n    get:\n      description: By passing in the appropriate options, you can search for available\n        feed connections in the system.\n      operationId: getFeedConnections\n      parameters:\n        - description: Page number which specifies the set of records to retrieve. By\n            default the number of the records per set is 10. Example -\n            https://api.xero.com/bankfeeds.xro/1.0/FeedConnections?page=1 to get\n            the second set of the records. When page value is not a number or a\n            negative number, by default, the first set of records is returned.\n          in: query\n          name: page\n          schema:\n            example: 1\n            type: integer\n        - description: Page size which specifies how many records per page will be\n            returned (default 10). Example -\n            https://api.xero.com/bankfeeds.xro/1.0/FeedConnections?pageSize=100\n            to specify page size of 100.\n          in: query\n          name: pageSize\n          schema:\n            example: 100\n            type: integer\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                items:\n                  - accountId: aefbf6be-4285-4ca5-bf39-0f486c8515c7\n                    accountName: SDK Bank 95921\n                    accountNumber: \"123496842\"\n                    accountToken: foobar31306\n                    accountType: BANK\n                    country: GB\n                    currency: GBP\n                    id: c0eb97b5-4f97-465a-8268-276513c14396\n                  - accountId: fc2f3cc2-126e-40d7-9fc1-12e52d0a71f1\n                    accountName: SDK Bank 11272\n                    accountNumber: \"123481122\"\n                    accountToken: foobar74770\n                    accountType: BANK\n                    country: GB\n                    currency: GBP\n                    id: 3b44b539-4e39-4d53-9334-d8ba01674752\n                pagination:\n                  itemCount: 39\n                  page: 1\n                  pageCount: 1\n                  pageSize: 87654321\n              schema:\n                $ref: \"#/components/schemas/FeedConnections\"\n          description: search results matching criteria returned with pagination and items\n            array\n        \"400\":\n          description: validation error response\n      security:\n        - OAuth2:\n            - bankfeeds\n      summary: Searches for feed connections\n      tags:\n        - BankFeeds\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      description: By passing in the FeedConnections array object in the body, you can\n        create one or more new feed connections\n      operationId: createFeedConnections\n      requestBody:\n        content:\n          application/json:\n            example:\n              items:\n                - accountName: SDK Bank 90861\n                  accountNumber: \"123458637\"\n                  accountToken: foobar71760\n                  accountType: BANK\n                  currency: GBP\n            schema:\n              $ref: \"#/components/schemas/FeedConnections\"\n        description: Feed Connection(s) array object in the body\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                items:\n                  - accountToken: foobar71760\n                    id: 2a19d46c-2a92-4e50-9401-dcf2cb895be7\n                    status: PENDING\n              schema:\n                $ref: \"#/components/schemas/FeedConnections\"\n          description: success new feed connection(s)response\n        \"400\":\n          description: invalid input, object invalid\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: failed to create new feed connection(s)response\n      security:\n        - OAuth2:\n            - bankfeeds\n      summary: Create one or more new feed connection\n      tags:\n        - BankFeeds\n      x-hasBankFeedsValidationError: true\n  /FeedConnections/DeleteRequests:\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      description: By passing in FeedConnections array object in the body, you can\n        delete a feed connection.\n      operationId: deleteFeedConnections\n      requestBody:\n        content:\n          application/json:\n            example:\n              items:\n                - id: b4cc693b-24d9-42ec-a6d4-2943d253ff63\n            schema:\n              $ref: \"#/components/schemas/FeedConnections\"\n        description: Feed Connections array object in the body\n        required: true\n      responses:\n        \"202\":\n          content:\n            application/json:\n              example:\n                items:\n                  - id: b4cc693b-24d9-42ec-a6d4-2943d253ff63\n                    status: PENDING\n                  - accountToken: \"10000125\"\n                    error:\n                      detail: The AccountToken is connected to another Xero Bank Account associated\n                        with this bank. This Xero Bank Account belongs to a\n                        different Xero Organisation.\n                      title: Feed connected in different organisation\n                      type: feed-connected-in-different-organisation\n                    status: REJECTED\n              schema:\n                $ref: \"#/components/schemas/FeedConnections\"\n          description: Success response for deleted feed connection\n        \"400\":\n          description: bad input parameter\n      security:\n        - OAuth2:\n            - bankfeeds\n      summary: Delete an existing feed connection\n      tags:\n        - BankFeeds\n  \"/FeedConnections/{id}\":\n    get:\n      description: By passing in a FeedConnection Id options, you can search for\n        matching feed connections\n      operationId: getFeedConnection\n      parameters:\n        - description: Unique identifier for retrieving single object\n          in: path\n          name: id\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                accountId: f4c4d595-da94-493b-999a-19d1ae1f508a\n                accountName: SDK Bank 5517\n                accountNumber: \"123434859\"\n                accountToken: foobar84778\n                accountType: BANK\n                country: GB\n                currency: GBP\n                id: b58b685a-1bee-4904-91f1-fee30bb6ea52\n              schema:\n                $ref: \"#/components/schemas/FeedConnection\"\n          description: success returns a FeedConnection object matching the id in response\n        \"400\":\n          description: bad input parameter\n      security:\n        - OAuth2:\n            - bankfeeds\n      summary: Retrieve single feed connection based on a unique id provided\n      tags:\n        - BankFeeds\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  /Statements:\n    get:\n      description: By passing in parameters, you can search for matching statements\n      operationId: getStatements\n      parameters:\n        - description: unique id for single object\n          in: query\n          name: page\n          required: false\n          schema:\n            format: int32\n            type: integer\n        - description: Page size which specifies how many records per page will be\n            returned (default 10). Example -\n            https://api.xero.com/bankfeeds.xro/1.0/Statements?pageSize=100 to\n            specify page size of 100.\n          in: query\n          name: pageSize\n          required: false\n          schema:\n            format: int32\n            type: integer\n        - in: header\n          name: Xero-Application-Id\n          required: false\n          schema:\n            default: 00000000-0000-0000-0000-0000000010000\n            type: string\n        - in: header\n          name: Xero-User-Id\n          required: false\n          schema:\n            default: 00000000-0000-0000-0000-0000030000000\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                items:\n                  - endBalance:\n                      amount: \"150.0000\"\n                      creditDebitIndicator: CREDIT\n                    endDate: 2019-08-15\n                    errors:\n                      - detail: The received statement was marked as a duplicate.\n                        status: 409\n                        title: Duplicate Statement Received\n                        type: duplicate-statement\n                    feedConnectionId: 6a4b9ff5-3a5f-4321-936b-4796163550f6\n                    id: 9817e4b8-82b3-4526-91f7-040bd278053f\n                    startBalance:\n                      amount: \"100.0000\"\n                      creditDebitIndicator: CREDIT\n                    startDate: 2019-08-01\n                    statementLineCount: \"1\"\n                    status: REJECTED\n                  - endBalance:\n                      amount: \"150.0000\"\n                      creditDebitIndicator: CREDIT\n                    endDate: 2019-08-15\n                    feedConnectionId: 6a4b9ff5-3a5f-4321-936b-4796163550f6\n                    id: 2fc57bac-7aa7-4981-a5cd-8aee83fe698c\n                    startBalance:\n                      amount: \"100.0000\"\n                      creditDebitIndicator: CREDIT\n                    startDate: 2019-08-01\n                    statementLineCount: \"1\"\n                    status: DELIVERED\n                pagination:\n                  itemCount: 3\n                  page: 1\n                  pageCount: 210\n                  pageSize: 3\n              schema:\n                $ref: \"#/components/schemas/Statements\"\n          description: success returns Statements array of objects response\n        \"400\":\n          content:\n            application/problem+json:\n              example:\n                detail: For the request field missing parameter.\n                status: 400\n                title: Invalid Request\n                type: invalid-request\n              schema:\n                $ref: \"#/components/schemas/Statements\"\n          description: bad input parameter\n      security:\n        - OAuth2:\n            - bankfeeds\n      summary: Retrieve all statements\n      tags:\n        - BankFeeds\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      operationId: createStatements\n      requestBody:\n        content:\n          application/json:\n            example:\n              items:\n                - endBalance:\n                    amount: \"150\"\n                    creditDebitIndicator: CREDIT\n                  endDate: 2019-08-11\n                  feedConnectionId: 6a4b9ff5-3a5f-4321-936b-4796163550f6\n                  startBalance:\n                    amount: \"100\"\n                    creditDebitIndicator: CREDIT\n                  startDate: 2019-08-11\n                  statementLines:\n                    - amount: \"50\"\n                      chequeNumber: \"12379009\"\n                      creditDebitIndicator: CREDIT\n                      description: My new line\n                      payeeName: StarLord90315\n                      postedDate: 2019-08-11\n                      reference: Foobar95578\n                      transactionId: \"123446422\"\n                - endBalance:\n                    amount: \"150\"\n                    creditDebitIndicator: CREDIT\n                  endDate: 2019-08-11\n                  feedConnectionId: 2ebe6393-f3bb-48ab-9a0e-b04fa8585a70\n                  startBalance:\n                    amount: \"100\"\n                    creditDebitIndicator: CREDIT\n                  startDate: 2019-08-11\n                  statementLines:\n                    - amount: \"50\"\n                      chequeNumber: \"12379350\"\n                      creditDebitIndicator: CREDIT\n                      description: My new line\n                      payeeName: StarLord56705\n                      postedDate: 2019-08-11\n                      reference: Foobar67355\n                      transactionId: \"123449402\"\n            schema:\n              $ref: \"#/components/schemas/Statements\"\n        description: Statements array of objects in the body\n      responses:\n        \"202\":\n          content:\n            application/json:\n              example:\n                items:\n                  - feedConnectionId: 6a4b9ff5-3a5f-4321-936b-4796163550f6\n                    id: d69b02b7-a30c-464a-99cf-ba9770373c61\n                    status: PENDING\n                  - feedConnectionId: 2ebe6393-f3bb-48ab-9a0e-b04fa8585a70\n                    id: 598f255c-015b-4138-93df-2e06c64565b3\n                    status: PENDING\n              schema:\n                $ref: \"#/components/schemas/Statements\"\n          description: Success returns Statements array of objects in response\n        \"400\":\n          content:\n            application/problem+json:\n              example:\n                detail: For the request field 'StatementLine.ChequeNumber' exceeded the maximum\n                  length of 20.\n                status: 400\n                title: Invalid Request\n                type: invalid-request\n              schema:\n                $ref: \"#/components/schemas/Statements\"\n          description: Statement failed validation\n        \"403\":\n          content:\n            application/problem+json:\n              example:\n                detail: The application has not been configured to use these API endpoints.\n                status: 403\n                title: Invalid Application\n                type: invalid-application\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Invalid application or feed connection\n        \"409\":\n          content:\n            application/problem+json:\n              example:\n                items:\n                  - errors:\n                      - detail: The received statement was marked as a duplicate.\n                        status: 409\n                        title: Duplicate Statement Received\n                        type: duplicate-statement\n                    feedConnectionId: 6a4b9ff5-3a5f-4321-936b-4796163550f6\n                    id: 29fefeb6-f449-470d-9179-f1d8900930d6\n                    status: REJECTED\n              schema:\n                $ref: \"#/components/schemas/Statements\"\n          description: Duplicate statement received\n        \"413\":\n          content:\n            application/problem+json:\n              example:\n                detail: Request size of 3500000 bytes exceeds the limit of 3000000 bytes.\n                status: 413\n                title: Request too large\n                type: invalid-request\n              schema:\n                $ref: \"#/components/schemas/Statements\"\n          description: Statement exceeds size limit\n        \"422\":\n          content:\n            application/problem+json:\n              example:\n                detail: End balance does not match start balance +/- statement line amounts.\n                status: 422\n                title: Invalid End Balance\n                type: invalid-end-balance\n              schema:\n                $ref: \"#/components/schemas/Statements\"\n          description: Unprocessable Entity\n        \"500\":\n          content:\n            application/problem+json:\n              example:\n                detail: The request should be retried. If the error persists, a Xero support\n                  issue should be raised.\n                status: 500\n                title: Intermittent Internal Xero Error\n                type: internal-error\n              schema:\n                $ref: \"#/components/schemas/Statements\"\n          description: Intermittent Xero Error\n      security:\n        - OAuth2:\n            - bankfeeds\n      summary: Creates one or more new statements\n      tags:\n        - BankFeeds\n      x-hasBankFeedsValidationError: true\n  \"/Statements/{statementID}\":\n    get:\n      description: By passing in a statement id, you can search for matching statements\n      operationId: getStatement\n      parameters:\n        - description: statement id for single object\n          in: query\n          name: statementId\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - in: path\n          name: statementID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                endBalance:\n                  amount: \"150.0000\"\n                  creditDebitIndicator: CREDIT\n                endDate: 2019-10-11\n                feedConnectionId: 6a4b9ff5-3a5f-4321-936b-4796163550f6\n                id: 97aca24a-dd10-4cda-98c7-1084a048257b\n                startBalance:\n                  amount: \"100.0000\"\n                  creditDebitIndicator: CREDIT\n                startDate: 2019-08-11\n                statementLineCount: \"1\"\n                status: DELIVERED\n              schema:\n                $ref: \"#/components/schemas/Statement\"\n          description: search results matching id for single statement\n        \"404\":\n          description: Statement not found\n      security:\n        - OAuth2:\n            - bankfeeds\n      summary: Retrieve single statement based on unique id provided\n      tags:\n        - BankFeeds\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\ncomponents:\n  parameters:\n    requiredHeader:\n      description: Xero identifier for Tenant\n      in: header\n      name: Xero-Tenant-Id\n      required: true\n      schema:\n        type: string\n  schemas:\n    CountryCode:\n      description: ISO-3166 alpha-2 country code, e.g. US, AU This element is required\n        only when the Application supports multi-region. Talk to your Partner\n        Manager to confirm if this is the case.\n      enum:\n        - AD\n        - AE\n        - AF\n        - AG\n        - AI\n        - AL\n        - AM\n        - AN\n        - AO\n        - AQ\n        - AR\n        - AS\n        - AT\n        - AU\n        - AW\n        - AZ\n        - BA\n        - BB\n        - BD\n        - BE\n        - BF\n        - BG\n        - BH\n        - BI\n        - BJ\n        - BL\n        - BM\n        - BN\n        - BO\n        - BR\n        - BS\n        - BT\n        - BW\n        - BY\n        - BZ\n        - CA\n        - CC\n        - CD\n        - CF\n        - CG\n        - CH\n        - CI\n        - CK\n        - CL\n        - CM\n        - CN\n        - CO\n        - CR\n        - CU\n        - CV\n        - CW\n        - CX\n        - CY\n        - CZ\n        - DE\n        - DJ\n        - DK\n        - DM\n        - DO\n        - DZ\n        - EC\n        - EE\n        - EG\n        - EH\n        - ER\n        - ES\n        - ET\n        - FI\n        - FJ\n        - FK\n        - FM\n        - FO\n        - FR\n        - GA\n        - GB\n        - GD\n        - GE\n        - GG\n        - GH\n        - GI\n        - GL\n        - GM\n        - GN\n        - GQ\n        - GR\n        - GT\n        - GU\n        - GW\n        - GY\n        - HK\n        - HN\n        - HR\n        - HT\n        - HU\n        - ID\n        - IE\n        - IL\n        - IM\n        - IN\n        - IO\n        - IQ\n        - IR\n        - IS\n        - IT\n        - JE\n        - JM\n        - JO\n        - JP\n        - KE\n        - KG\n        - KH\n        - KI\n        - KM\n        - KN\n        - KP\n        - KR\n        - KW\n        - KY\n        - KZ\n        - LA\n        - LB\n        - LC\n        - LI\n        - LK\n        - LR\n        - LS\n        - LT\n        - LU\n        - LV\n        - LY\n        - MA\n        - MC\n        - MD\n        - ME\n        - MF\n        - MG\n        - MH\n        - MK\n        - ML\n        - MM\n        - MN\n        - MO\n        - MP\n        - MR\n        - MS\n        - MT\n        - MU\n        - MV\n        - MW\n        - MX\n        - MY\n        - MZ\n        - NA\n        - NC\n        - NE\n        - NG\n        - NI\n        - NL\n        - NO\n        - NP\n        - NR\n        - NU\n        - NZ\n        - OM\n        - PA\n        - PE\n        - PF\n        - PG\n        - PH\n        - PK\n        - PL\n        - PM\n        - PN\n        - PR\n        - PS\n        - PT\n        - PW\n        - PY\n        - QA\n        - RE\n        - RO\n        - RS\n        - RU\n        - RW\n        - SA\n        - SB\n        - SC\n        - SD\n        - SE\n        - SG\n        - SH\n        - SI\n        - SJ\n        - SK\n        - SL\n        - SM\n        - SN\n        - SO\n        - SR\n        - SS\n        - ST\n        - SV\n        - SX\n        - SY\n        - SZ\n        - TC\n        - TD\n        - TG\n        - TH\n        - TJ\n        - TK\n        - TL\n        - TM\n        - TN\n        - TO\n        - TR\n        - TT\n        - TV\n        - TW\n        - TZ\n        - UA\n        - UG\n        - US\n        - UY\n        - UZ\n        - VA\n        - VC\n        - VE\n        - VG\n        - VI\n        - VN\n        - VU\n        - WF\n        - WS\n        - XK\n        - YE\n        - YT\n        - ZA\n        - ZM\n        - ZW\n      example: GB\n      type: string\n    CreditDebitIndicator:\n      description: If the statement balances are credit or debit, the\n        CreditDebitIndicator should be specified from the perspective of the\n        Customer.\n      enum:\n        - CREDIT\n        - DEBIT\n      type: string\n    CurrencyCode:\n      description: 3 letter alpha code for the ISO-4217 currency code, e.g. USD, AUD.\n      enum:\n        - AED\n        - AFN\n        - ALL\n        - AMD\n        - ANG\n        - AOA\n        - ARS\n        - AUD\n        - AWG\n        - AZN\n        - BAM\n        - BBD\n        - BDT\n        - BGN\n        - BHD\n        - BIF\n        - BMD\n        - BND\n        - BOB\n        - BRL\n        - BSD\n        - BTN\n        - BWP\n        - BYN\n        - BZD\n        - CAD\n        - CDF\n        - CHF\n        - CLP\n        - CNY\n        - COP\n        - CRC\n        - CUC\n        - CUP\n        - CVE\n        - CZK\n        - DJF\n        - DKK\n        - DOP\n        - DZD\n        - EGP\n        - ERN\n        - ETB\n        - EUR\n        - FJD\n        - FKP\n        - GBP\n        - GEL\n        - GGP\n        - GHS\n        - GIP\n        - GMD\n        - GNF\n        - GTQ\n        - GYD\n        - HKD\n        - HNL\n        - HRK\n        - HTG\n        - HUF\n        - IDR\n        - ILS\n        - IMP\n        - INR\n        - IQD\n        - IRR\n        - ISK\n        - JEP\n        - JMD\n        - JOD\n        - JPY\n        - KES\n        - KGS\n        - KHR\n        - KMF\n        - KPW\n        - KRW\n        - KWD\n        - KYD\n        - KZT\n        - LAK\n        - LBP\n        - LKR\n        - LRD\n        - LSL\n        - LYD\n        - MAD\n        - MDL\n        - MGA\n        - MKD\n        - MMK\n        - MNT\n        - MOP\n        - MRU\n        - MUR\n        - MVR\n        - MWK\n        - MXN\n        - MYR\n        - MZN\n        - NAD\n        - NGN\n        - NIO\n        - NOK\n        - NPR\n        - NZD\n        - OMR\n        - PAB\n        - PEN\n        - PGK\n        - PHP\n        - PKR\n        - PLN\n        - PYG\n        - QAR\n        - RON\n        - RSD\n        - RUB\n        - RWF\n        - SAR\n        - SBD\n        - SCR\n        - SDG\n        - SEK\n        - SGD\n        - SHP\n        - SLL\n        - SOS\n        - SPL\n        - SRD\n        - STN\n        - SVC\n        - SYP\n        - SZL\n        - THB\n        - TJS\n        - TMT\n        - TND\n        - TOP\n        - TRY\n        - TTD\n        - TVD\n        - TWD\n        - TZS\n        - UAH\n        - UGX\n        - USD\n        - UYU\n        - UZS\n        - VEF\n        - VND\n        - VUV\n        - WST\n        - XAF\n        - XCD\n        - XDR\n        - XOF\n        - XPF\n        - YER\n        - ZAR\n        - ZMW\n        - ZMK\n        - ZWD\n        - \"\"\n      example: AUD\n      type: string\n    EndBalance:\n      description: The StartBalance plus all the Statement Line Amounts should be\n        equal to the EndBalance Amount.\n      properties:\n        amount:\n          example: \"10.1340\"\n          format: double\n          type: number\n          x-is-money: true\n        creditDebitIndicator:\n          $ref: \"#/components/schemas/CreditDebitIndicator\"\n      type: object\n    Error:\n      description: On error, the API consumer will receive an HTTP response with a\n        HTTP Status Code of 4xx or 5xx and a Content-Type of\n        application/problem+json.\n      properties:\n        detail:\n          description: Human readable detailed error description.\n          example: The application has not been configured to use these API endpoints.\n          maximum: 255\n          type: string\n        status:\n          description: The numeric HTTP Status Code, e.g. 404\n          example: 403\n          type: integer\n        title:\n          description: Human readable high level error description.\n          example: Invalid Application\n          maximum: 255\n          type: string\n        type:\n          description: Identifies the type of error.\n          enum:\n            - invalid-request\n            - invalid-application\n            - invalid-feed-connection\n            - duplicate-statement\n            - invalid-end-balance\n            - invalid-start-and-end-date\n            - invalid-start-date\n            - internal-error\n            - feed-already-connected-in-current-organisation\n            - invalid-end-date\n            - statement-not-found\n            - feed-connected-in-different-organisation\n            - feed-already-connected-in-different-organisation\n            - bank-feed-not-found\n            - invalid-country-specified\n            - invalid-organisation-bank-feeds\n            - invalid-organisation-multi-currency\n            - invalid-feed-connection-for-organisation\n            - invalid-user-role\n            - account-not-valid\n          example: invalid-application\n          type: string\n      type: object\n    FeedConnection:\n      externalDocs:\n        url: https://developer.xero.com/documentation/bank-feeds-api/feed-connections\n      properties:\n        accountId:\n          description: Xero identifier for a bank account in Xero. Must be included if\n            AccountNumber is not specified.\n          example: 079a88ea-276d-41fb-a1f1-366ef3e22921\n          format: uuid\n          type: string\n        accountName:\n          description: The Account Name will be used for the creation of a new Xero Bank\n            Account if a matching Xero Bank Account is not found.\n          example: Joe's Savings Account\n          maximum: 30\n          type: string\n        accountNumber:\n          description: String(40) when AccountType is BANK String(4) when AccountType is\n            CREDITCARD The Account Number is used to match the feed to a Xero\n            Bank Account. The API will create a new Xero Bank Account if a match\n            to an existing Xero Bank Account is not found. Only the last 4\n            digits must be supplied for Credit Card numbers. Must be included if\n            AccountId is not specified.\n          example: \"3809087654321500\"\n          maximum: 40\n          type: string\n        accountToken:\n          description: This account identifier is generated by the financial institute\n            (FI). This must be unique for your financial institute.\n          example: \"10000123\"\n          maximum: 50\n          type: string\n        accountType:\n          description: High level bank account type - BANK CREDITCARD BANK encompasses all\n            bank account types other than credit cards.\n          enum:\n            - BANK\n            - CREDITCARD\n          example: BANK\n        country:\n          $ref: \"#/components/schemas/CountryCode\"\n        currency:\n          $ref: \"#/components/schemas/CurrencyCode\"\n        error:\n          $ref: \"#/components/schemas/Error\"\n        id:\n          description: GUID used to identify the Account.\n          example: 0d3cf8d-95dc-4466-8dc0-47e6d1197e28\n          format: uuid\n          type: string\n        status:\n          description: the current status of the feed connection\n          enum:\n            - PENDING\n            - REJECTED\n          example: REJECTED\n          type: string\n      type: object\n    FeedConnections:\n      externalDocs:\n        url: https://developer.xero.com/documentation/bank-feeds-api/feed-connections\n      properties:\n        items:\n          items:\n            $ref: \"#/components/schemas/FeedConnection\"\n          type: array\n        pagination:\n          $ref: \"#/components/schemas/Pagination\"\n      type: object\n    Pagination:\n      properties:\n        itemCount:\n          description: Number of items returned\n          example: 2\n          type: integer\n        page:\n          description: Page number which specifies the set of records to retrieve. Example\n            - https://api.xero.com/bankfeeds.xro/1.0/Statements?page=2 to get\n            the second set of the records. When page value is not a number or a\n            negative number, by default, the first set of records is returned.\n          example: 1\n          type: integer\n        pageCount:\n          description: Number of pages available\n          example: 1\n          type: integer\n        pageSize:\n          description: Page size which specifies how many records per page will be\n            returned (default 50). Example -\n            https://api.xero.com/bankfeeds.xro/1.0/Statements?pageSize=100 to\n            specify page size of 100.\n          example: 10\n          type: integer\n      type: object\n    StartBalance:\n      description: The starting balance of the statement\n      properties:\n        amount:\n          description: decimal(19,4) unsigned Opening/closing balance amount.\n          example: \"9.0000\"\n          format: double\n          type: number\n          x-is-money: true\n        creditDebitIndicator:\n          $ref: \"#/components/schemas/CreditDebitIndicator\"\n      type: object\n    Statement:\n      properties:\n        endBalance:\n          $ref: \"#/components/schemas/EndBalance\"\n        endDate:\n          description: Closing balance date ISO-8601 YYYY-MM-DD\n          example: 2018-07-27\n          format: date\n          type: string\n        errors:\n          items:\n            $ref: \"#/components/schemas/Error\"\n          type: array\n        feedConnectionId:\n          description: The Xero generated feed connection Id that identifies the Xero Bank\n            Account Container into which the statement should be delivered. This\n            is obtained by calling GET FeedConnections.\n          example: 87cb0dc8-fa32-409c-b622-19f8de8dcc83\n          format: uuid\n          type: string\n        id:\n          description: GUID used to identify the Statement.\n          example: ba4f3127-5e46-427d-80ea-dea2fcd26afe\n          format: uuid\n          type: string\n        startBalance:\n          $ref: \"#/components/schemas/StartBalance\"\n        startDate:\n          description: Opening balance date (can be no older than one year from the\n            current date) ISO-8601 YYYY-MM-DD\n          example: 2018-07-27\n          format: date\n          type: string\n        statementLineCount:\n          example: 1\n          type: integer\n        statementLines:\n          $ref: \"#/components/schemas/StatementLines\"\n        status:\n          description: Current status of statements\n          enum:\n            - PENDING\n            - REJECTED\n            - DELIVERED\n          example: PENDING\n      type: object\n    StatementLine:\n      description: the lines details for a statement\n      properties:\n        amount:\n          description: Transaction amount\n          example: \"5.00\"\n          format: double\n          type: number\n          x-is-money: true\n        chequeNumber:\n          description: The cheque/check number\n          example: \"021\"\n          maximum: 20\n          type: string\n        creditDebitIndicator:\n          $ref: \"#/components/schemas/CreditDebitIndicator\"\n        description:\n          description: Transaction description\n          example: Description for statement line 2\n          maximum: 2000\n          type: string\n        payeeName:\n          description: Typically the merchant or payee name\n          example: Payee name for statement line 2\n          maximum: 255\n          type: string\n        postedDate:\n          description: The date that the transaction was processed or cleared as seen in\n            internet banking ISO-8601 YYYY-MM-DD\n          example: 2018-06-10\n          format: date\n          type: string\n        reference:\n          description: Optional field to enhance the Description\n          example: Reference for statement line 2\n          maximum: 255\n          type: string\n        transactionId:\n          description: Financial institute's internal transaction identifier. If provided\n            this field is factored into duplicate detection.\n          example: transaction-id-2\n          type: string\n      type: object\n    StatementLines:\n      items:\n        $ref: \"#/components/schemas/StatementLine\"\n      type: array\n    Statements:\n      externalDocs:\n        url: https://developer.xero.com/documentation/bank-feeds-api/statements\n      properties:\n        items:\n          items:\n            $ref: \"#/components/schemas/Statement\"\n          type: array\n        pagination:\n          $ref: \"#/components/schemas/Pagination\"\n      type: object\n  securitySchemes:\n    OAuth2:\n      description: For more information visit\n        https://developer.xero.com/documentation/oauth2/overview\n      flows:\n        authorizationCode:\n          authorizationUrl: https://login.xero.com/identity/connect/authorize\n          scopes:\n            accounting.attachments: Grant read-write access to attachments\n            accounting.attachments.read: Grant read-only access to attachments\n            accounting.contacts: Grant read-write access to contacts and contact groups\n            accounting.contacts.read: Grant read-only access to contacts and contact groups\n            accounting.journals.read: Grant read-only access to journals\n            accounting.reports.read: Grant read-only access to accounting reports\n            accounting.settings: Grant read-write access to organisation and account settings\n            accounting.settings.read: Grant read-only access to organisation and account settings\n            accounting.transactions: Grant read-write access to bank transactions, credit\n              notes, invoices, repeating invoices\n            accounting.transactions.read: Grant read-only access to invoices\n            assets assets.read: Grant read-only access to fixed assets\n            bankfeeds: Grant read-write access to bankfeeds\n            email: Grant read-only access to your email\n            files: Grant read-write access to files and folders\n            files.read: Grant read-only access to files and folders\n            openid: Grant read-only access to your open id\n            paymentservices: Grant read-write access to payment services\n            payroll: Grant read-write access to payroll\n            payroll.employees: Grant read-write access to payroll employees\n            payroll.employees.read: Grant read-only access to payroll employees\n            payroll.leaveapplications: Grant read-write access to payroll leaveapplications\n            payroll.leaveapplications.read: Grant read-only access to payroll leaveapplications\n            payroll.payitems: Grant read-write access to payroll payitems\n            payroll.payitems.read: Grant read-only access to payroll payitems\n            payroll.payrollcalendars: Grant read-write access to payroll calendars\n            payroll.payrollcalendars.read: Grant read-only access to payroll calendars\n            payroll.payruns: Grant read-write access to payroll payruns\n            payroll.payruns.read: Grant read-only access to payroll payruns\n            payroll.payslip: Grant read-write access to payroll payslips\n            payroll.payslip.read: Grant read-only access to payroll payslips\n            payroll.read: Grant read-only access to payroll\n            payroll.settings.read: Grant read-only access to payroll settings\n            payroll.superfundproducts.read: Grant read-only access to payroll superfundproducts\n            payroll.superfunds: Grant read-write access to payroll superfunds\n            payroll.superfunds.read: Grant read-only access to payroll superfunds\n            payroll.timesheets: Grant read-write access to payroll timesheets\n            payroll.timesheets.read: Grant read-only access to payroll timesheets\n            profile: your profile information\n            projects: Grant read-write access to projects\n            projects.read: Grant read-only access to projects\n          tokenUrl: https://identity.xero.com/connect/token\n      type: oauth2\n"
		}
	},
	"Error": "parse: parse spec: paths: /FeedConnections: get: operation \"getFeedConnections\": responses: 201: content: \"application/json\": schema: parse schema: resolve \"#/components/schemas/FeedConnections\": parse schema: items: parse schema: item: parse schema: resolve \"#/components/schemas/FeedConnection\": parse schema: country: parse schema: resolve \"#/components/schemas/CountryCode\": parse enum values: parse value \"false\": expected type \"string\", got \"bool\""
}