{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/hvuhsg/kiko"
		},
		"file": {
			"name": "spc_a77b40c2f61e40c78077d218d5fb607a.yml",
			"size": 0,
			"path": ".insomnia/ApiSpec/spc_a77b40c2f61e40c78077d218d5fb607a.yml",
			"byteSize": 4994,
			"content": "_id: spc_a77b40c2f61e40c78077d218d5fb607a\ntype: ApiSpec\nparentId: wrk_1033bc1130354dc7acc39b0e8c73bddf\nmodified: 1659109311437\ncreated: 1658747081802\nfileName: kiko\ncontents: |\n  openapi: 3.0.0\n\n  info:\n    description: \"General purpose recommendation system\"\n    version: 0.0.1\n    title: Kiko\n    termsOfService: http://kiko.com\n    contact:\n      email: support@kiko.com\n\n  externalDocs:\n    description: Find out more about Kiko\n    url: http://kiko.com/docs\n\n  servers:\n    - url: https://api.kiko.com/\n      description: Production Server\n    - url: http://127.0.0.1:8080/\n      description: Development Server\n\n  tags:\n    - name: node\n      description: Item representaion in the system\n      externalDocs:\n        description: more\n        url: http://kiko.com/docs/node\n    - name: connection\n      description: Distance between two nodes\n      externalDocs:\n        description: more\n        url: http://kiko.com/docs/connection\n    - name: query\n      description: Using the system\n      externalDocs:\n        description: more\n        url: http://kiko.com/docs/queries\n\n  paths:\n    /node:\n      post:\n        tags:\n          - node\n        summary: Add a new node to the system\n        description: \"Create new node in the system\"\n        operationId: addNode\n        responses:\n          \"201\":\n            description: Node Created\n            content:\n              application/json:\n                schema:\n                  $ref: \"#/components/schemas/NewNode\"\n      get:\n        tags:\n          - node\n        summary: Get existing node\n        description: \"\"\n        operationId: getNode\n        parameters:\n          - name: node\n            in: query\n            description: node uuid\n            schema:\n              type: string\n        responses:\n          \"200\":\n            description: Node object\n            content:\n              application/json:\n                schema:\n                  $ref: \"#/components/schemas/Node\"\n          \"404\":\n            description: Node not found\n      delete:\n        tags:\n          - node\n        summary: Delete existing node\n        description: \"\"\n        operationId: deleteNode\n        parameters:\n          - name: node\n            in: query\n            description: node uuid\n            schema:\n              type: string\n        responses:\n          \"200\":\n            description: Node deleted\n          \"404\":\n            description: Node not found\n    /connection:\n      post:\n        tags:\n          - connection\n        summary: Create connection between nodes\n        description: \"\"\n        operationId: createConnection\n        parameters:\n          - name: from\n            in: query\n            required: true\n            schema:\n              type: string\n          - name: to\n            in: query\n            required: true\n            schema:\n              type: string\n          - name: weight\n            in: query\n            required: true\n            schema:\n              type: integer\n        responses:\n          \"200\":\n            description: Connection created\n          \"404\":\n            description: Nodes not found\n      delete:\n        tags:\n          - connection\n        summary: Delete connection between nodes\n        description: \"\"\n        operationId: deleteConnection\n        parameters:\n          - name: from\n            in: query\n            required: true\n            schema:\n              type: string\n          - name: to\n            in: query\n            required: true\n            schema:\n              type: string\n        responses:\n          \"200\":\n            description: Connection deleted\n          \"404\":\n            description: Connection not found\n    /query/recommendations:\n      get:\n        tags:\n          - query\n        summary: Query recommended nodes for node\n        description: Get k most recommended nodes for node n\n        operationId: getKRecommendations\n        parameters:\n          - name: node\n            in: query\n            description: node uuid\n            schema:\n              type: string\n          - name: k\n            in: query\n            description: number of recommendations\n            schema:\n              type: integer\n            \n        responses:\n          \"200\":\n            description: KNN results\n            content:\n              application/json:\n                schema:\n                  $ref: \"#/components/schemas/NodeList\"\n            \n         \n\n  components:\n    schemas:\n      NewNode:\n        type: object\n        properties:\n          node:\n            type: string\n      Node:\n        type: object\n        properties:\n          uuid:\n            type: string\n          connections:\n            type: object\n            properties:\n              uuid:\n                type: string\n              weight:\n                type: integer\n      NodeList:\n        type: object\n        properties:\n          nodes:\n            type: array\n            items:\n              type: string\ncontentType: yaml\n",
			"canonicalURL": "/github.com/hvuhsg/kiko@870d7eb929509e590cd07007c55fcdbf62571ec1/-/blob/.insomnia/ApiSpec/spc_a77b40c2f61e40c78077d218d5fb607a.yml",
			"externalURLs": [
				{
					"url": "https://github.com/hvuhsg/kiko/blob/870d7eb929509e590cd07007c55fcdbf62571ec1/.insomnia/ApiSpec/spc_a77b40c2f61e40c78077d218d5fb607a.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse version: at .insomnia/ApiSpec/spc_a77b40c2f61e40c78077d218d5fb607a.yml:1:1: invalid version: invalid major version: strconv.Atoi: parsing \"\": invalid syntax"
}