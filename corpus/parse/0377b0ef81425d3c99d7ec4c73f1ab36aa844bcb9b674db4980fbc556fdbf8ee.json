{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/thecheatah/vapor-server-codegen"
		},
		"file": {
			"name": "codegen_test.yml",
			"size": 0,
			"path": "src/test/resources/WithoutAuthTest/codegen_test.yml",
			"byteSize": 7703,
			"content": "openapi: 3.0.0\ninfo:\n  version: 0.0.1\n  title: Swift Vapor 3 Codegen Test\n  description: Used to test the codegen\nservers:\n  - url: https://vapor.codegen/\n    description: Test Server\npaths:\n  /:\n    get:\n      operationId: rootPath\n      tags: [Path Parsing]\n      description: Test the ability to route the root path\n      responses:\n        '200':\n          description: OK\n  /path-single-depth:\n    get:\n      operationId: singleDepth\n      tags: [Path Parsing]\n      description: Test ability to parse single depth\n      responses:\n        '200':\n          description: OK\n  /path/multiple/depth:\n    get:\n      operationId: multipleDepth\n      tags: [Path Parsing]\n      description: Test ability to parse multiple depth\n      responses:\n        '200':\n          description: OK\n  /path/{param1}:\n    get:\n      operationId: singleParameter\n      tags: [Path Parsing]\n      description: Test ability to intake single parameter\n      parameters:\n        - in: path\n          name: param1\n          required: true\n          schema:\n            type: string\n          description: Simple input string\n      responses:\n        '200':\n          description: OK\n          content:\n            applicatin/json:\n              schema:\n                type: string\n                example: parameter\n                description: Returns the parameter value\n  /path/{param1}/and/{param2}:\n    get:\n      operationId: multipleParameter\n      tags: [Path Parsing]\n      description: Test ability to intake single parameter\n      parameters:\n        - in: path\n          name: param1\n          required: true\n          schema:\n            type: string\n          description: Simple input string\n        - in: path\n          name: param2\n          required: true\n          schema:\n            type: string\n          description: Simple input string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MultipleParameterResponse'\n  /query/parameter:\n    get:\n      operationId: queryParameters\n      tags: [Query Parameters]\n      description: Query parameter test\n      parameters:\n        - in: query\n          name: param1\n          required: true\n          schema:\n            type: string\n          description: Simple input string\n        - in: query\n          name: param2\n          required: false\n          schema:\n            type: integer\n          description: Simple input string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/QueryParametersResponse'\n  /schema/referenced/object:\n    post:\n      operationId: referencedObject\n      tags: [Data Model]\n      description: Test data model support\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SimpleObject'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SimpleObject'\n  /form/request:\n    post:\n      operationId: formRequest\n      tags: [Form Data]\n      description: Test ability to parse form data\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/SimpleObject'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SimpleObject'\n  /multiple/response/codes:\n    post:\n      operationId: multipleResponseCodes\n      tags: [Multiple Response Codes]\n      description: Test ability to support multiple response codes in a single call\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MultipleResponseCodeRequest'\n      responses:\n        '200':\n          description: OK\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SimpleObject'\n        '401':\n          description: Unauthorized\n        '500':\n          description: Internal Server Error\n  /headers/in-request:\n    get:\n      operationId: requestHeaders\n      tags: [Headers]\n      description: Ability to read headers sent\n      parameters:\n        - in: header\n          name: x-example-required-header\n          required: true\n          schema:\n            type: string\n          description: Simple input header\n        - in: header\n          name: x-example-array-header\n          required: true\n          schema:\n            type: array\n            items:\n              type: string\n          description: Simple input header\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestHeadersResponse'\n  /headers/in-response:\n    get:\n      operationId: responseHeaders\n      tags: [Headers]\n      responses:\n        '303':\n          description: See Other\n          headers:\n            location:\n              required: true\n              schema:\n                type: string\n              description: Example string header\ncomponents:\n  schemas:\n    SimpleString:\n      type: string\n      description: Simple String\n      example: \"I am a simple string\"\n    SimpleNumber:\n      type: number\n      description: Simple Number\n      example: 101.33\n    SimpleInteger:\n      type: integer\n      description: Simple Integer\n      example: 45\n    SimpleDate:\n      type: string\n      format: date-time\n      example: \"1995-09-07T10:40:52.123Z\"\n    SimpleEnumString:\n      type: string\n      enum: [Value 1, Value 2]\n      description: Enumerated string object\n    SimpleBoolean:\n      type: boolean\n    SimpleObject:\n      type: object\n      required: [simpleString, simpleNumber, simpleInteger, simpleDate, simpleEnumString, simpleBoolean, simpleArray]\n      properties:\n        simpleString:\n          $ref: '#/components/schemas/SimpleString'\n        simpleNumber:\n          $ref: '#/components/schemas/SimpleNumber'\n        simpleInteger:\n          $ref: '#/components/schemas/SimpleInteger'\n        simpleDate:\n          $ref: '#/components/schemas/SimpleDate'\n        simpleEnumString:\n          $ref: '#/components/schemas/SimpleEnumString'\n        simpleBoolean:\n          $ref: '#/components/schemas/SimpleBoolean'\n        simpleArray:\n          type: array\n          items:\n            $ref: '#/components/schemas/SimpleString'\n    MultipleParameterResponse:\n      type: object\n      required: [param1, param2]\n      properties:\n        param1:\n          type: string\n        param2:\n          type: string\n    QueryParametersResponse:\n      type: object\n      required: [param1]\n      properties:\n        param1:\n          type: string\n        param2:\n          type: integer\n    MultipleResponseCodeRequest:\n      type: object\n      required: [responseCode]\n      properties:\n        responseCode:\n          type: string\n          enum: [200, 201, 401, 500]\n    RequestHeadersResponse:\n      type: object\n      required: [requiredHeader]\n      properties:\n        requiredHeader:\n          type: string\n          description: Returns the required header that was sent\n        arrayHeader:\n          type: array\n          items:\n            type: string\n          description: Returns the array header that was sent\n          \n          \n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"MultipleResponseCodeRequest\": parse schema: property \"responseCode\": parse enum values: parse value \"200\": expected type \"string\", got \"number\""
}