{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/wikimedia/restbase"
		},
		"file": {
			"name": "lists.yaml",
			"size": 0,
			"path": "v1/lists.yaml",
			"byteSize": 31590,
			"content": "openapi: 3.0.1\ninfo:\n  version: 0.1\n  title: MediaWiki Reading Lists API\n  description: API for manipulating private [reading lists](https://www.mediawiki.org/wiki/Reading/Reading_Lists)\n  termsOfService: https://www.mediawiki.org/wiki/REST_API#Terms_and_conditions\n  contact:\n    name: Product Infrastructure\n    url: https://www.mediawiki.org/wiki/Wikimedia_Product/Wikimedia_Product_Infrastructure_team\n  license:\n    name: Apache licence, v2\n    url: https://www.apache.org/licenses/LICENSE-2.0\n  x-configuration:\n    maxListsPerUser: \u0026maxListsPerUser 100\n    maxEntriesPerList: \u0026maxEntriesPerList 5000\n    deletedRetentionDays: \u0026deletedRetentionDays 30\n    maxItemsPerBatch: \u0026maxItemsPerBatch 500\nx-yaml-anchors:\n  csrf_token: \u0026csrf_token\n    name: csrf_token\n    in: query\n    required: true\n    schema:\n      type: string\n      example: \"f63c343876da566045e6b59c4532450559c828d3+\\\\\"\n    description: \"The CRSF edit token provided by the MediaWiki API\"\n  list_common: \u0026list_common\n    name:\n      type: string\n      example: \"Planets\"\n    description:\n      type: string\n      example: \"Planets of the Solar System\"\n  list_entry_common: \u0026list_entry_common\n    project: \u0026list_entry_common_project\n      type: string\n      description: 'Domain of the wiki containing the page.'\n      example: 'https://en.wikipedia.org'\n    title: \u0026list_entry_common_title\n      type: string\n      description: 'Title of the page containing the page, in database format.'\n      example: Barack_Obama\npaths:\n  /lists/setup:\n    post:\n      tags:\n        - Reading lists\n      summary: Opt in to use reading lists.\n      description: |\n        Must precede other list operations.\n\n        Request must be authenticated with a MediaWiki session cookie.\n\n        Stability: [unstable](https://www.mediawiki.org/wiki/API_versioning#Unstable)\n      parameters:\n        - \u003c\u003c: *csrf_token\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json; charset=utf-8:\n              schema:\n                type: object\n        default:\n          description: Error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n      x-route-filters:\n        - path: ./lib/mediawiki_auth_filter.js\n      x-request-handler:\n        - forward_to_mw:\n            request:\n              uri: /{domain}/sys/action/rawquery\n              body:\n                action: readinglists\n                command: setup\n                token: '{{request.query.csrf_token}}'\n            return:\n              status: 200\n      x-monitor: false\n  /lists/teardown:\n    post:\n      tags:\n        - Reading lists\n      summary: Opt out from using reading lists.\n      description: |\n        Deletes all data. User needs to opt in again before being able to do anything.\n\n        Request must be authenticated with a MediaWiki session cookie.\n\n        Stability: [unstable](https://www.mediawiki.org/wiki/API_versioning#Unstable)\n      parameters:\n        - \u003c\u003c: *csrf_token\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json; charset=utf-8:\n              schema:\n                type: object\n        default:\n          description: Error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n      x-route-filters:\n        - path: ./lib/mediawiki_auth_filter.js\n      x-request-handler:\n        - forward_to_mw:\n            request:\n              uri: /{domain}/sys/action/rawquery\n              body:\n                action: readinglists\n                command: teardown\n                token: '{{request.query.csrf_token}}'\n            return:\n              status: 200\n      x-monitor: false\n  /lists/:\n    get:\n      tags:\n        - Reading lists\n      summary: Get all lists of the current user.\n      description: |\n        Returns metadata describing the lists of the current user. Might be truncated and include\n        a continuation token.\n\n        Request must be authenticated with a MediaWiki session cookie.\n\n        Stability: [unstable](https://www.mediawiki.org/wiki/API_versioning#Unstable)\n      parameters:\n        - name: next\n          in: query\n          description: Continuation parameter from previous request\n          schema:\n            type: string\n        - name: sort\n          in: query\n          description: |\n            Sort order\n            - `name`: by name, ascending;\n            - `updated`: by last modification date, descending.\n          schema:\n            type: string\n            default: updated\n            enum:\n              - name\n              - updated\n      responses:\n        200:\n          description: An array of list metadata.\n          content:\n            application/json; charset=utf-8; profile=\"https://www.mediawiki.org/wiki/Specs/Lists/0.1\":\n              schema:\n                type: object\n                properties:\n                  lists:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/list_read'\n                  next:\n                    type: string\n                    description: Continuation token.\n                  continue-from:\n                    type: string\n                    format: date-time\n                    description: |\n                      Timestamp to sync from, to be used with the `GET /lists/changes/since/{date}`\n                      endpoint.\n        default:\n          description: Error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n      x-route-filters:\n        - path: ./lib/mediawiki_auth_filter.js\n      x-request-handler:\n        - forward_to_mw:\n            request:\n              uri: /{domain}/sys/action/rawquery\n              body:\n                action: query\n                meta: readinglists\n                rlsort: '{{getSortParameters(request.query.sort).sort}}'\n                rldir: '{{getSortParameters(request.query.sort).dir}}'\n                rllimit: max\n                continue: '{{unflattenContinuation(request.query.next).continue}}'\n                rlcontinue: '{{unflattenContinuation(request.query.next).rlcontinue}}'\n            return:\n              status: 200\n              headers:\n                content-type: application/json; charset=utf-8; profile=\"https://www.mediawiki.org/wiki/Specs/Lists/0.1\"\n                cache-control: max-age=0, s-maxage=0\n              body:\n                lists: '{{forward_to_mw.body.query.readinglists}}'\n                next: '{{flattenContinuation(forward_to_mw.body.continue)}}'\n                continue-from: '{{getContinueFrom(forward_to_mw.body, request.query.next)}}'\n      x-monitor: false\n    post:\n      tags:\n        - Reading lists\n      summary: Create a new list for the current user.\n      description: |\n        Creates a new empty list. On name conflict, does nothing and returns the data of an\n        existing list.\n\n        Request must be authenticated with a MediaWiki session cookie.\n\n        Stability: [unstable](https://www.mediawiki.org/wiki/API_versioning#Unstable)\n\n        This endpoint is deprecated and might be removed without warning. Use the batch version\n        instead.\n      x-maxsize: *maxEntriesPerList\n      parameters:\n        - \u003c\u003c: *csrf_token\n      requestBody:\n        content:\n          '*/*':\n            schema:\n              $ref: '#/components/schemas/list_write'\n        required: true\n      responses:\n        200:\n          description: The data for the new list.\n          content:\n            application/json; charset=utf-8:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: integer\n                    description: |\n                      List ID.\n\n                      Deprecated, will be removed. Use the full list object.\n                    example: 7\n                  list:\n                    $ref: '#/components/schemas/list_read'\n                required:\n                  - id\n                  - list\n        default:\n          description: Error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n      x-route-filters:\n        - path: ./lib/mediawiki_auth_filter.js\n      x-request-handler:\n        - forward_to_mw:\n            request:\n              uri: /{domain}/sys/action/rawquery\n              body:\n                action: readinglists\n                command: create\n                name: '{{request.body.name}}'\n                description: '{{request.body.description}}'\n                token: '{{request.query.csrf_token}}'\n            return:\n              status: 200\n              headers:\n                content-type: application/json; charset=utf-8\n              body:\n                id: '{{forward_to_mw.body.create.id}}'\n                list: '{{forward_to_mw.body.create.list}}'\n      x-monitor: false\n  /lists/{id}:\n    put:\n      tags:\n        - Reading lists\n      summary: Update a list.\n      description: |\n        List must belong to current user and request must be authenticated with\n        a MediaWiki session cookie. If the name is changed, the new name must not be in use.\n\n        Stability: [unstable](https://www.mediawiki.org/wiki/API_versioning#Unstable)\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n            example: 42\n        - \u003c\u003c: *csrf_token\n      requestBody:\n        content:\n          '*/*':\n            schema:\n              $ref: '#/components/schemas/list_write'\n        required: false\n      responses:\n        200:\n          description: The updated data for the list.\n          content:\n            application/json; charset=utf-8:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: integer\n                    description: |\n                      List ID.\n\n                      Deprecated, will be removed. Use the full list object.\n                    example: 7\n                  list:\n                    $ref: '#/components/schemas/list_read'\n                required:\n                  - id\n                  - list\n        default:\n          description: Error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n      x-route-filters:\n        - path: ./lib/mediawiki_auth_filter.js\n      x-request-handler:\n        - forward_to_mw:\n            request:\n              uri: /{domain}/sys/action/rawquery\n              body:\n                action: readinglists\n                command: update\n                list: '{{request.params.id}}'\n                name: '{{request.body.name}}'\n                description: '{{request.body.description}}'\n                token: '{{request.query.csrf_token}}'\n            return:\n              status: 200\n              headers:\n                content-type: application/json; charset=utf-8\n              body:\n                id: '{{forward_to_mw.body.update.id}}'\n                list: '{{forward_to_mw.body.update.list}}'\n      x-monitor: false\n    delete:\n      tags:\n        - Reading lists\n      summary: Delete a list.\n      description: |\n        List must belong to current user and request must be authenticated with\n        a MediaWiki session cookie.\n\n        Stability: [unstable](https://www.mediawiki.org/wiki/API_versioning#Unstable)\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n            example: 42\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json; charset=utf-8:\n              schema:\n                type: object\n        default:\n          description: Error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n      x-route-filters:\n        - path: ./lib/mediawiki_auth_filter.js\n      x-request-handler:\n        - forward_to_mw:\n            request:\n              uri: /{domain}/sys/action/rawquery\n              body:\n                action: readinglists\n                command: delete\n                list: '{{request.params.id}}'\n                token: '{{request.query.csrf_token}}'\n            return:\n              status: 200\n      x-monitor: false\n  /lists/batch:\n    post:\n      tags:\n        - Reading lists\n      summary: Create multiple new lists for the current user.\n      description: |\n        See `POST /lists/`.\n\n        Stability: [unstable](https://www.mediawiki.org/wiki/API_versioning#Unstable)\n      x-maxsize: *maxEntriesPerList\n      parameters:\n        - \u003c\u003c: *csrf_token\n      requestBody:\n        content:\n          '*/*':\n            schema:\n              title: batch\n              required:\n                - batch\n              type: object\n              properties:\n                batch:\n                  maxItems: *maxItemsPerBatch\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/list_write'\n        required: true\n      responses:\n        200:\n          description: The data for the new lists (in the same order as the inputs).\n          content:\n            application/json; charset=utf-8:\n              schema:\n                title: list_create_batch\n                type: object\n                properties:\n                  batch:\n                    type: array\n                    description: Deprecated, will be removed. Use the full list objects\n                      instead.\n                    items:\n                      title: list_id\n                      type: object\n                      required:\n                        - id\n                      properties:\n                        id:\n                          type: integer\n                          description: List ID\n                          example: 7\n                  lists:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/list_read'\n                required:\n                  - batch\n                  - lists\n        default:\n          description: Error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n      x-route-filters:\n        - path: ./lib/mediawiki_auth_filter.js\n      x-request-handler:\n        - forward_to_mw:\n            request:\n              uri: /{domain}/sys/action/rawquery\n              body:\n                action: readinglists\n                command: create\n                batch: '{{stringify(request.body.batch)}}'\n                token: '{{request.query.csrf_token}}'\n            return:\n              status: 200\n              headers:\n                content-type: application/json; charset=utf-8\n              body:\n                batch: '{{idsToObjects(forward_to_mw.body.create.ids, \"id\")}}'\n                lists: '{{forward_to_mw.body.create.lists}}'\n      x-monitor: false\n  /lists/{id}/entries/:\n    get:\n      tags:\n        - Reading lists\n      summary: Get all entries of a given list.\n      description: |\n        Returns pages contained by the given list. Might be truncated and include\n        a continuation token.\n\n        List must belong to current user and request must be authenticated with\n        a MediaWiki session cookie.\n\n        Stability: [unstable](https://www.mediawiki.org/wiki/API_versioning#Unstable)\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n            example: 42\n        - name: next\n          in: query\n          description: Continuation parameter from previous request\n          schema:\n            type: string\n        - name: sort\n          in: query\n          description: |\n            Sort order\n            - `name`: by page title, ascending;\n            - `updated`: by last modification date, descending.\n          schema:\n            type: string\n            default: updated\n            enum:\n              - name\n              - updated\n      responses:\n        200:\n          description: An array of list entries.\n          content:\n            application/json; charset=utf-8; profile=\"https://www.mediawiki.org/wiki/Specs/Lists/0.1\":\n              schema:\n                type: object\n                properties:\n                  entries:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/list_entry_read'\n                  next:\n                    type: string\n                    description: Continuation token.\n        default:\n          description: Error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n      operationId: getListEntries\n      x-route-filters:\n        - path: ./lib/mediawiki_auth_filter.js\n      x-monitor: false\n    post:\n      tags:\n        - Reading lists\n      summary: Create a new list entry.\n      description: |\n        Creates a new list entry in the given list. On conflict, does nothing and returns the\n        data of an existing list.\n\n        The list must belong to the current user and the request must be\n        authenticated with a MediaWiki session cookie.\n\n        Stability: [unstable](https://www.mediawiki.org/wiki/API_versioning#Unstable)\n\n        This endpoint is deprecated and might be removed without warning. Use the batch version\n        instead.\n      x-maxsize: *maxListsPerUser\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n            example: 42\n        - \u003c\u003c: *csrf_token\n      requestBody:\n        content:\n          '*/*':\n            schema:\n              $ref: '#/components/schemas/list_entry_write'\n        required: true\n      responses:\n        200:\n          description: The data for the new list entry.\n          content:\n            application/json; charset=utf-8:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: integer\n                    description: |\n                      List entry ID\n\n                      Deprecated, will be removed. Use the full entry object instead.\n                    example: 13\n                  entry:\n                    $ref: '#/components/schemas/list_entry_read'\n                required:\n                  - id\n                  - entry\n        default:\n          description: Error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n      x-route-filters:\n        - path: ./lib/mediawiki_auth_filter.js\n      x-request-handler:\n        - forward_to_mw:\n            request:\n              uri: /{domain}/sys/action/rawquery\n              body:\n                action: readinglists\n                command: createentry\n                list: '{{request.params.id}}'\n                project: '{{request.body.project}}'\n                title: '{{request.body.title}}'\n                token: '{{request.query.csrf_token}}'\n            return:\n              status: 200\n              headers:\n                content-type: application/json; charset=utf-8\n              body:\n                id: '{{forward_to_mw.body.createentry.id}}'\n                entry: '{{forward_to_mw.body.createentry.entry}}'\n      x-monitor: false\n  /lists/{id}/entries/{entry_id}:\n    delete:\n      tags:\n        - Reading lists\n      summary: Delete a list entry.\n      description: |\n        Deletes a given list entry.\n\n        The list must belong to the current user and the request must be\n        authenticated with a MediaWiki session cookie.\n\n        Stability: [unstable](https://www.mediawiki.org/wiki/API_versioning#Unstable)\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n            example: 42\n        - name: entry_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            example: 64\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json; charset=utf-8:\n              schema:\n                type: object\n        default:\n          description: Error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n      x-route-filters:\n        - path: ./lib/mediawiki_auth_filter.js\n      x-request-handler:\n        - forward_to_mw:\n            request:\n              uri: /{domain}/sys/action/rawquery\n              body:\n                action: readinglists\n                command: deleteentry\n                entry: '{{request.params.entry_id}}'\n                token: '{{request.query.csrf_token}}'\n            return:\n              status: 200\n      x-monitor: false\n  /lists/{id}/entries/batch:\n    post:\n      tags:\n        - Reading lists\n      summary: Create multiple new list entries.\n      description: |\n        See `POST /lists/{id}/entries/`.\n\n        Stability: [unstable](https://www.mediawiki.org/wiki/API_versioning#Unstable)\n      x-maxsize: *maxListsPerUser\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n            example: 42\n        - \u003c\u003c: *csrf_token\n      requestBody:\n        content:\n          '*/*':\n            schema:\n              type: object\n              required:\n                - batch\n              properties:\n                batch:\n                  title: list_entries\n                  type: array\n                  maxItems: *maxItemsPerBatch\n                  items:\n                    $ref: '#/components/schemas/list_entry_write'\n        required: true\n      responses:\n        200:\n          description: The data for the new list entries (in the same order as the\n            inputs).\n          content:\n            application/json; charset=utf-8:\n              schema:\n                type: object\n                properties:\n                  batch:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        id:\n                          type: integer\n                          description: List entry ID\n                          example: 13\n                  entries:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/list_entry_read'\n                required:\n                  - entries\n                  - batch\n        default:\n          description: Error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n      x-route-filters:\n        - path: ./lib/mediawiki_auth_filter.js\n      x-request-handler:\n        - forward_to_mw:\n            request:\n              uri: /{domain}/sys/action/rawquery\n              body:\n                action: readinglists\n                command: createentry\n                list: '{{request.params.id}}'\n                batch: '{{stringify(request.body.batch)}}'\n                token: '{{request.query.csrf_token}}'\n            return:\n              status: 200\n              headers:\n                content-type: application/json; charset=utf-8\n              body:\n                batch: '{{idsToObjects(forward_to_mw.body.createentry.ids, \"id\")}}'\n                entries: '{{forward_to_mw.body.createentry.entries}}'\n      x-monitor: false\n  /lists/pages/{project}/{title}:\n    get:\n      tags:\n        - Reading lists\n      summary: Get lists of the current user which contain a given page.\n      description: |\n        Request must be authenticated with a MediaWiki session cookie.\n\n        Stability: [unstable](https://www.mediawiki.org/wiki/API_versioning#Unstable)\n      parameters:\n        - name: project\n          in: path\n          schema:\n            \u003c\u003c: *list_entry_common_project\n          required: true\n        - name: title\n          in: path\n          schema:\n            \u003c\u003c: *list_entry_common_title\n          required: true\n        - name: next\n          in: query\n          description: Continuation parameter from previous request\n          schema:\n            type: string\n      responses:\n        200:\n          description: An array of list metadata.\n          content:\n            application/json; charset=utf-8; profile=\"https://www.mediawiki.org/wiki/Specs/Lists/0.1\":\n              schema:\n                type: object\n                properties:\n                  lists:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/list_read'\n                  next:\n                    type: string\n                    description: Continuation token.\n        default:\n          description: Error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n      x-route-filters:\n        - path: ./lib/mediawiki_auth_filter.js\n      x-request-handler:\n        - forward_to_mw:\n            request:\n              uri: /{domain}/sys/action/rawquery\n              body:\n                action: query\n                meta: readinglists\n                rllimit: max\n                rlproject: '{{request.params.project}}'\n                rltitle: '{{request.params.title}}'\n                continue: '{{unflattenContinuation(request.query.next).continue}}'\n                rlcontinue: '{{unflattenContinuation(request.query.next).rlcontinue}}'\n            return:\n              status: 200\n              headers:\n                content-type: application/json; charset=utf-8; profile=\"https://www.mediawiki.org/wiki/Specs/Lists/0.1\"\n                cache-control: max-age=0, s-maxage=0\n              body:\n                lists: '{{forward_to_mw.body.query.readinglists}}'\n                next: '{{flattenContinuation(forward_to_mw.body.continue)}}'\n      x-monitor: false\n  /lists/changes/since/{date}:\n    get:\n      tags:\n        - Reading lists\n      summary: Get recent changes to the lists\n      description: |\n        Returns metadata describing lists and entries which have changed. Might be truncated\n        and include a continuation token.\n\n        Request must be authenticated with a MediaWiki session cookie.\n\n        For safe synchronization, the date parameter should be taken from the `continue-from`\n        field of a previous `GET /lists/` or `GET /lists/changes/since/{date}` request. This will\n        ensure that no changes are skipped, at the cost of sometimes receiving the same change\n        multitple times. Clients should handle changes in an idempotent way.\n\n        Stability: [unstable](https://www.mediawiki.org/wiki/API_versioning#Unstable)\n      parameters:\n        - name: date\n          in: path\n          description: |\n            Cutoff date (in ISO 8601). To ensure reliable synchronization, the API\n            might return changes which are slightly older than the cutoff date.\n          schema:\n            type: string\n            format: date-time\n          required: true\n        - name: next\n          in: query\n          description: Continuation parameter from previous request\n          schema:\n            type: string\n      responses:\n        200:\n          description: An array of list and entry metadata.\n          content:\n            application/json; charset=utf-8; profile=\"https://www.mediawiki.org/wiki/Specs/Lists/0.1\":\n              schema:\n                type: object\n                properties:\n                  lists:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/list_read'\n                  next:\n                    type: string\n                    description: Continuation token.\n                  continue-from:\n                    type: string\n                    format: date-time\n                    description: |\n                      Timestamp to sync from, to be used with the `GET /lists/changes/since/{date}`\n                      endpoint.\n        default:\n          description: Error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n      x-route-filters:\n        - path: ./lib/mediawiki_auth_filter.js\n      x-request-handler:\n        - forward_to_mw:\n            request:\n              uri: /{domain}/sys/action/rawquery\n              body:\n                action: query\n                meta: readinglists\n                list: readinglistentries\n                rlchangedsince: '{{request.params.date}}'\n                rlechangedsince: '{{request.params.date}}'\n                rlsort: updated\n                rlesort: updated\n                rldir: ascending\n                rledir: ascending\n                rllimit: max\n                rlelimit: max\n                continue: '{{unflattenContinuation(request.query.next).continue}}'\n                rlcontinue: '{{unflattenContinuation(request.query.next).rlcontinue}}'\n                rlecontinue: '{{unflattenContinuation(request.query.next).rlecontinue}}'\n            return:\n              status: 200\n              headers:\n                content-type: application/json; charset=utf-8; profile=\"https://www.mediawiki.org/wiki/Specs/Lists/0.1\"\n                cache-control: max-age=0, s-maxage=0\n              body:\n                lists: '{{forward_to_mw.body.query.readinglists}}'\n                entries: '{{forward_to_mw.body.query.readinglistentries}}'\n                next: '{{flattenContinuation(forward_to_mw.body.continue)}}'\n                continue-from: '{{getContinueFrom(forward_to_mw.body, request.query.next)}}'\n      x-monitor: false\ntags:\n  - name: Reading lists\n    description: Private lists of selected pages\n    externalDocs:\n      description: Project documentation\n      url: https://www.mediawiki.org/wiki/Reading/Reading_Lists\ncomponents:\n  schemas:\n    list_read:\n      title: list\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 42\n        \u003c\u003c: *list_common\n        created:\n          type: string\n          format: date-time\n          description: \"Creation date (in ISO 8601)\"\n        updated:\n          type: string\n          format: date-time\n          description: \"Last modification date (in ISO 8601)\"\n      required:\n        - id\n        - name\n        - created\n        - updated\n    list_write:\n      title: list\n      type: object\n      properties:\n        \u003c\u003c: *list_common\n      required:\n        - name\n    list_entry_read:\n      title: list_entry\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 64\n        \u003c\u003c: *list_entry_common\n        created:\n          type: string\n          format: date-time\n          description: \"Creation date (in ISO 8601)\"\n        updated:\n          type: string\n          format: date-time\n          description: \"Last modification date (in ISO 8601)\"\n    list_entry_write:\n      type: object\n      properties:\n        \u003c\u003c: *list_entry_common\n      required:\n        - project\n        - title\n",
			"canonicalURL": "/github.com/wikimedia/restbase@d2d75af3f73e783a693a7ef86a2847f0c0e39c1d/-/blob/v1/lists.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/wikimedia/restbase/blob/d2d75af3f73e783a693a7ef86a2847f0c0e39c1d/v1/lists.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/lists/\": get: responses: default: content: application/problem+json: schema: parse schema: at 1:3414: find schema: resolve: can't find value for \"components/schemas/problem\""
}