{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mainflux/mainflux"
		},
		"file": {
			"name": "consumers-notifiers.yml",
			"size": 0,
			"path": "api/openapi/consumers-notifiers.yml",
			"byteSize": 5990,
			"content": "openapi: 3.0.1\ninfo:\n  title: Mainflux Notifiers service\n  description: HTTP API for Notifiers service.\n  version: \"1.0.0\"\npaths:\n  /subscriptions:\n    post:\n      summary: Create subscription\n      description: Creates a new subscription give a topic and contact.\n      tags:\n        - notifiers\n      requestBody:\n        $ref: \"#/components/requestBodies/Create\"\n      responses:\n        \"201\":\n          $ref: \"#/components/responses/Create\"\n        \"400\":\n          description: Failed due to malformed JSON.\n        \"409\":\n          description: Failed due to using an existing topic and contact.\n        \"415\":\n          description: Missing or invalid content type.\n        \"500\":\n          $ref: \"#/components/responses/ServiceError\"\n    get:\n      summary: List subscriptions\n      description: List subscriptions given list parameters.\n      tags:\n        - notifiers\n      parameters:\n        - $ref: \"#/components/parameters/Topic\"\n        - $ref: \"#/components/parameters/Contact\"\n        - $ref: \"#/components/parameters/Offset\"\n        - $ref: \"#/components/parameters/Limit\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Page\"\n        \"400\":\n          description: Failed due to malformed query parameters.\n        \"401\":\n          description: Missing or invalid access token provided.\n        \"500\":\n          $ref: \"#/components/responses/ServiceError\"\n  /subscriptions/{id}:\n    get:\n      summary: Get subscription with the provided id\n      description: Retrieves a subscription with the provided id.\n      tags:\n        - notifiers\n      parameters:\n        - $ref: \"#/components/parameters/Id\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/View\"\n        \"401\":\n          description: Missing or invalid access token provided.\n        \"500\":\n          $ref: \"#/components/responses/ServiceError\"\n    delete:\n      summary: Delete subscription with the provided id\n      description: Removes a subscription with the provided id.\n      tags:\n        - notifiers\n      parameters:\n        - $ref: \"#/components/parameters/Id\"\n      responses:\n        \"204\":\n          description: Subscription removed\n        \"401\":\n          description: Missing or invalid access token provided.\n        \"500\":\n          $ref: \"#/components/responses/ServiceError\"\n  /health:\n    get:\n      summary: Retrieves service health check info.\n      tags:\n        - health\n      responses:\n        '200':\n          $ref: \"#/components/responses/HealthRes\"\n        '500':\n          $ref: \"#/components/responses/ServiceError\"\n\ncomponents:\n  schemas:\n    Subscription:\n      type: object\n      properties:\n        id:\n          type: string\n          format: ulid\n          example: 01EWDVKBQSG80B6PQRS9PAAY35\n          description: ULID id of the subscription.\n        owner_id:\n          type: string\n          format: uuid\n          example: 18167738-f7a8-4e96-a123-58c3cd14de3a\n          description: An id of the owner who created subscription.\n        topic:\n          type: string\n          example: topic.subtopic\n          description: Topic to which the user subscribes.\n        contact:\n          type: string\n          example: user@example.com\n          description: The contact of the user to which the notification will be sent.\n    Page:\n      type: object\n      properties:\n        subscriptions:\n          type: array\n          minItems: 0\n          uniqueItems: true\n          items:\n            $ref: \"#/components/schemas/Subscription\"\n        total:\n          type: integer\n          description: Total number of items.\n        offset:\n          type: integer\n          description: Number of items to skip during retrieval.\n        limit:\n          type: integer\n          description: Maximum number of items to return in one page.\n\n  parameters:\n    Id:\n      name: id\n      description: Unique identifier.\n      in: path\n      schema:\n        type: string\n        format: ulid\n      required: true\n    Limit:\n      name: limit\n      description: Size of the subset to retrieve.\n      in: query\n      schema:\n        type: integer\n        default: 10\n        maximum: 100\n        minimum: 1\n      required: false\n    Offset:\n      name: offset\n      description: Number of items to skip during retrieval.\n      in: query\n      schema:\n        type: integer\n        default: 0\n        minimum: 0\n      required: false\n    Topic:\n      name: topic\n      description: Topic name.\n      in: query\n      schema:\n        type: string\n      required: false\n    Contact:\n      name: contact\n      description: Subscription contact.\n      in: query\n      schema:\n        type: string\n      required: false\n\n  requestBodies:\n    Create:\n      description: JSON-formatted document describing the new subscription to be created\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Subscription\"\n\n  responses:\n    Create:\n      description: Created a new subscription.\n      headers:\n        Location:\n          content:\n            text/plain:\n              schema:\n                type: string\n                description: Created subscription relative URL\n                example: /subscriptions/{id}\n    View:\n      description: View subscription.\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Subscription\"\n    Page:\n      description: Data retrieved.\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Page\"\n    ServiceError:\n      description: Unexpected server-side error occurred.\n    HealthRes:\n      description: Service Health Check.\n      content:\n        application/json:\n          schema:\n            $ref: \"./schemas/HealthInfo.yml\"\n\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n      description: |\n        * Users access: \"Authorization: Bearer \u003cuser_token\u003e\"\n\nsecurity:\n  - bearerAuth: []\n",
			"canonicalURL": "/github.com/mainflux/mainflux@237826e25370cd4970c241dc463d367b3039ca8f/-/blob/api/openapi/consumers-notifiers.yml",
			"externalURLs": [
				{
					"url": "https://github.com/mainflux/mainflux/blob/237826e25370cd4970c241dc463d367b3039ca8f/api/openapi/consumers-notifiers.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: responses: \"HealthRes\": content: application/json: schema: parse schema: at 1:1235: external \"./schemas/HealthInfo.yml\": get: file: local file reference is not allowed"
}