{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/emicklei/melrose"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "docs/openapi.yaml",
			"byteSize": 4189,
			"content": "openapi: 3.0.3\ninfo:\n  title: Melrﾅ行e - OpenAPI 3.0\n  description: |-\n    This is a documentation of the HTTP API of the melrose tool.\n    \n    Some useful links:\n    - [Project github repository](https://github.com/emicklei/melrose)\n    - [The source API definition for the Melrﾅ行e API](https://github.com/emicklei/melrose/blob/master/docs/openapi.yaml)\n    \n  termsOfService: http://swagger.io/terms/\n  contact:\n    email: ernest.micklei@gmail.com\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  version: 1.0.11\nexternalDocs:\nservers:\n  - url: http://localhost:8118\ntags:\n  - name: actions\n    description: Executing Melrﾅ行e language expressions\n    externalDocs:\n      description: Find out more\n      url: \"https://melrﾅ行e.org\"\npaths:\n  /v1/statements:\n    post:\n      tags:\n        - actions\n      summary: Perform the action\n      description: Perform the action\n      operationId: performAction\n      parameters: \n          - name: action\n            in: query\n            required: true\n            schema:\n              type: string\n            description: |-\n              one of:\n              - `play` : try to play the result of the selected expression(s).\n              - `stop` : try to end the loop of the selected expression\n              - `eval` : produce extra logging\n              - `inspect` : print inspection details of the selected expression\n              - `eval` : only evaluate the expression(s) or statements ; no play\n          - name: file\n            in: query\n            schema:\n              type: string\n            required: false\n            description: absolute filename\n          - name: line\n            in: query\n            required: false\n            schema:\n              type: integer\n            description: one-based\n          - name: debug\n            in: query\n            schema:\n              type: boolean\n            required: false\n            description: writes debugging information to output\n      requestBody:\n        description: Source of the expression ; can be multi-line\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EvaluationResult'\n        '400':\n          description: Invalid input\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EvaluationResult'\n  /v1/inspect:\n    post:\n      tags:\n        - actions\n      operationId: showInspection\n      parameters: \n      - name: debug\n        in: query\n        schema:\n          type: boolean\n        required: false\n        description: writes debugging information to output\n      responses:\n        '200':\n          description: Successful operation\n  /v1/notes:\n    post:\n      tags:\n        - actions\n      operationId: showNotesPage\n      parameters: \n      - name: debug\n        in: query\n        schema:\n          type: boolean\n        required: false\n        description: writes debugging information to output\n      responses:\n        '200':\n          description: Successful operation\n  /v1/pianoroll:\n    post:\n      tags:\n        - actions\n      operationId: showPianoRoll\n      parameters: \n      - name: debug\n        in: query\n        schema:\n          type: boolean\n        required: false\n        description: writes debugging information to output\n      responses:\n        '200':\n          description: Successful operation\n  /version:\n    get:\n      tags:\n        - actions\n      responses:\n        '200':\n          description: Successful operation\ncomponents:\n  schemas:\n    VersionInfo:\n      type: object\n      properties:\n        APIVersion:\n          type: string\n        SyntaxVersion:\n          type: string\n        BuildTag:\n          type: string\n    EvaluationResult:\n      type: object\n      properties:\n        type:\n          type: string\n        is-error:\n          type: boolean\n        is-stoppable:\n          type: boolean\n        message:\n          type: string\n        file:\n          type: string\n        line:\n          type: integer\n        object:\n          type: object",
			"canonicalURL": "/github.com/emicklei/melrose@c3c57072e75606338b9c58cca15544003a08f17a/-/blob/docs/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/emicklei/melrose/blob/c3c57072e75606338b9c58cca15544003a08f17a/docs/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/v1/statements\": post: operation \"performAction\": requestBody: at 1:2672: content must have at least one entry"
}