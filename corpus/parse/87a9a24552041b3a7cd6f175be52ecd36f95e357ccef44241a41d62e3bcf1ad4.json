{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/ably.io/platform/1.1.0/openapi.yaml",
			"byteSize": 44030,
			"content": "openapi: 3.0.1\nservers:\n  - url: https://rest.ably.io\ninfo:\n  contact:\n    email: support@ably.io\n    name: Ably Support\n    url: https://www.ably.io/contact\n    x-twitter: ablyrealtime\n  description: The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.\n  title: Platform API\n  version: 1.1.0\n  x-apisguru-categories:\n    - cloud\n  x-logo:\n    url: https://twitter.com/ablyrealtime/profile_image?size=original\n  x-origin:\n    - format: openapi\n      url: https://raw.githubusercontent.com/ably/open-specs/main/definitions/platform-v1.yaml\n      version: \"3.0\"\n  x-providerName: ably.io\n  x-serviceName: platform\nsecurity:\n  - basicAuth: []\n  - bearerAuth: []\npaths:\n  /channels:\n    get:\n      description: Enumerate all active channels of the application\n      operationId: getMetadataOfAllChannels\n      parameters:\n        - in: query\n          name: limit\n          schema:\n            default: 100\n            type: integer\n        - description: Optionally limits the query to only those channels whose name starts with the given prefix\n          in: query\n          name: prefix\n          schema:\n            type: string\n        - description: optionally specifies whether to return just channel names (by=id) or ChannelDetails (by=value)\n          in: query\n          name: by\n          schema:\n            enum:\n              - value\n              - id\n            type: string\n      responses:\n        2XX:\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - items:\n                      $ref: \"#/components/schemas/ChannelDetails\"\n                    type: array\n                  - items:\n                      type: string\n                    type: array\n            application/x-msgpack:\n              schema:\n                oneOf:\n                  - items:\n                      $ref: \"#/components/schemas/ChannelDetails\"\n                    type: array\n                  - items:\n                      type: string\n                    type: array\n            text/html:\n              schema:\n                type: string\n          description: OK\n          headers:\n            link:\n              $ref: \"#/components/headers/Link\"\n        default:\n          $ref: \"#/components/responses/Error\"\n      summary: Enumerate all active channels of the application\n      tags:\n        - Status\n    parameters:\n      - $ref: \"#/components/parameters/versionHeader\"\n      - $ref: \"#/components/parameters/responseFormat\"\n  \"/channels/{channel_id}\":\n    get:\n      description: Get metadata of a channel\n      operationId: getMetadataOfChannel\n      parameters:\n        - $ref: \"#/components/parameters/channelId\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ChannelDetails\"\n          description: OK\n          headers:\n            x-ably-serverid:\n              $ref: \"#/components/headers/ServerId\"\n        default:\n          $ref: \"#/components/responses/Error\"\n      summary: Get metadata of a channel\n      tags:\n        - Status\n    parameters:\n      - $ref: \"#/components/parameters/versionHeader\"\n      - $ref: \"#/components/parameters/responseFormat\"\n  \"/channels/{channel_id}/messages\":\n    get:\n      description: Get message history for a channel\n      operationId: getMessagesByChannel\n      parameters:\n        - $ref: \"#/components/parameters/channelId\"\n        - $ref: \"#/components/parameters/filterStart\"\n        - $ref: \"#/components/parameters/filterLimit\"\n        - $ref: \"#/components/parameters/filterEnd\"\n        - $ref: \"#/components/parameters/filterDirection\"\n      responses:\n        2XX:\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Message\"\n                type: array\n            application/x-msgpack:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Message\"\n                type: array\n            text/html:\n              schema:\n                type: string\n          description: OK\n          headers:\n            link:\n              $ref: \"#/components/headers/Link\"\n            x-ably-serverid:\n              $ref: \"#/components/headers/ServerId\"\n        default:\n          description: Error\n          headers:\n            x-ably-errorcode:\n              $ref: \"#/components/headers/ErrorCode\"\n            x-ably-errormessage:\n              $ref: \"#/components/headers/ErrorMessage\"\n            x-ably-serverid:\n              $ref: \"#/components/headers/ServerId\"\n      summary: Get message history for a channel\n      tags:\n        - History\n    parameters:\n      - $ref: \"#/components/parameters/versionHeader\"\n      - $ref: \"#/components/parameters/responseFormat\"\n    post:\n      description: Publish a message to the specified channel\n      operationId: publishMessagesToChannel\n      parameters:\n        - $ref: \"#/components/parameters/channelId\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Message\"\n          application/x-msgpack:\n            schema:\n              $ref: \"#/components/schemas/Message\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/Message\"\n      responses:\n        2XX:\n          content:\n            application/json:\n              schema:\n                properties:\n                  channel:\n                    type: string\n                  messageId:\n                    type: string\n                type: object\n            application/x-msgpack:\n              schema:\n                properties:\n                  channel:\n                    type: string\n                  messageId:\n                    type: string\n                type: object\n            text/html:\n              schema:\n                properties:\n                  channel:\n                    type: string\n                  messageId:\n                    type: string\n                type: object\n          description: OK\n          headers:\n            x-ably-serverid:\n              $ref: \"#/components/headers/ServerId\"\n        default:\n          $ref: \"#/components/responses/Error\"\n      summary: Publish a message to a channel\n      tags:\n        - Publishing\n  \"/channels/{channel_id}/presence\":\n    get:\n      description: Get presence on a channel\n      operationId: getPresenceOfChannel\n      parameters:\n        - $ref: \"#/components/parameters/channelId\"\n        - in: query\n          name: clientId\n          schema:\n            type: string\n        - in: query\n          name: connectionId\n          schema:\n            type: string\n        - in: query\n          name: limit\n          schema:\n            default: 100\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PresenceMessage\"\n                type: array\n            application/x-msgpack:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PresenceMessage\"\n                type: array\n            text/html:\n              schema:\n                type: string\n          description: OK\n          headers:\n            link:\n              $ref: \"#/components/headers/Link\"\n            x-ably-serverid:\n              $ref: \"#/components/headers/ServerId\"\n        default:\n          $ref: \"#/components/responses/Error\"\n      summary: Get presence of a channel\n      tags:\n        - Status\n    parameters:\n      - $ref: \"#/components/parameters/versionHeader\"\n      - $ref: \"#/components/parameters/responseFormat\"\n  \"/channels/{channel_id}/presence/history\":\n    get:\n      description: Get presence on a channel\n      operationId: getPresenceHistoryOfChannel\n      parameters:\n        - $ref: \"#/components/parameters/channelId\"\n        - $ref: \"#/components/parameters/filterStart\"\n        - $ref: \"#/components/parameters/filterLimit\"\n        - $ref: \"#/components/parameters/filterEnd\"\n        - $ref: \"#/components/parameters/filterDirection\"\n      responses:\n        2XX:\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PresenceMessage\"\n                type: array\n            application/x-msgpack:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PresenceMessage\"\n                type: array\n            text/html:\n              schema:\n                type: string\n          description: OK\n          headers:\n            link:\n              $ref: \"#/components/headers/Link\"\n        default:\n          $ref: \"#/components/responses/Error\"\n      summary: Get presence history of a channel\n      tags:\n        - History\n    parameters:\n      - $ref: \"#/components/parameters/versionHeader\"\n      - $ref: \"#/components/parameters/responseFormat\"\n  \"/keys/{keyName}/requestToken\":\n    parameters:\n      - $ref: \"#/components/parameters/versionHeader\"\n      - $ref: \"#/components/parameters/responseFormat\"\n    post:\n      description: This is the means by which clients obtain access tokens to use the service. You can see how to construct an Ably TokenRequest in the [Ably TokenRequest spec](https://www.ably.io/documentation/rest-api/token-request-spec) documentation, although we recommend you use an Ably SDK rather to create a TokenRequest, as the construction of a TokenRequest is complex. The resulting token response object contains the token properties as defined in Ably TokenRequest spec. Authentication is not required if using a Signed TokenRequest.\n      operationId: requestAccessToken\n      parameters:\n        - $ref: \"#/components/parameters/key_name\"\n      requestBody:\n        content:\n          application/json:\n            example:\n              capability:\n                channel1:\n                  - publish\n                  - subscribe\n                wildcard:channels:*:\n                  - publish\n              keyName: YourKey.Name\n              timestamp: \"1559124196551\"\n            schema:\n              oneOf:\n                - $ref: \"#/components/schemas/TokenRequest\"\n                - $ref: \"#/components/schemas/SignedTokenRequest\"\n      responses:\n        2XX:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TokenDetails\"\n            application/x-msgpack:\n              schema:\n                $ref: \"#/components/schemas/TokenDetails\"\n          description: OK\n        default:\n          $ref: \"#/components/responses/Error\"\n      summary: Request an access token\n      tags:\n        - Authentication\n  /push/channelSubscriptions:\n    delete:\n      description: Delete a device details object.\n      operationId: deletePushDeviceDetails\n      parameters:\n        - description: Filter to restrict to subscriptions associated with that channel.\n          in: query\n          name: channel\n          schema:\n            type: string\n        - description: Must be set when clientId is empty, cannot be used with clientId.\n          in: query\n          name: deviceId\n          schema:\n            type: string\n        - description: Must be set when deviceId is empty, cannot be used with deviceId.\n          in: query\n          name: clientId\n          schema:\n            type: string\n      responses:\n        2XX:\n          description: OK\n        default:\n          $ref: \"#/components/responses/Error\"\n      summary: Delete a registered device's update token\n      tags:\n        - Push\n    get:\n      description: Get a list of push notification subscriptions to channels.\n      operationId: getPushSubscriptionsOnChannels\n      parameters:\n        - description: Filter to restrict to subscriptions associated with that channel.\n          in: query\n          name: channel\n          schema:\n            type: string\n        - description: Optional filter to restrict to devices associated with that deviceId. Cannot be used with clientId.\n          in: query\n          name: deviceId\n          schema:\n            type: string\n        - description: Optional filter to restrict to devices associated with that clientId. Cannot be used with deviceId.\n          in: query\n          name: clientId\n          schema:\n            type: string\n        - description: The maximum number of records to return.\n          in: query\n          name: limit\n          schema:\n            default: 100\n            maximum: 1000\n            type: integer\n      responses:\n        2XX:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeviceDetails\"\n          description: OK\n        default:\n          $ref: \"#/components/responses/Error\"\n      summary: List channel subscriptions\n      tags:\n        - Push\n    parameters:\n      - $ref: \"#/components/parameters/versionHeader\"\n      - $ref: \"#/components/parameters/responseFormat\"\n    post:\n      description: Subscribe either a single device or all devices associated with a client ID to receive push notifications from messages sent to a channel.\n      operationId: subscribePushDeviceToChannel\n      requestBody:\n        content:\n          application/json:\n            example:\n              channel: my:channel\n              clientId: myClientId\n            schema:\n              oneOf:\n                - properties:\n                    channel:\n                      description: Channel name.\n                      type: string\n                    deviceId:\n                      description: Must be set when clientId is empty, cannot be used with clientId.\n                      type: string\n                  type: object\n                - properties:\n                    channel:\n                      description: Channel name.\n                      type: string\n                    clientId:\n                      description: Must be set when deviceId is empty, cannot be used with deviceId.\n                      type: string\n                  type: object\n          application/x-msgpack:\n            example:\n              channel: my:channel\n              clientId: myClientId\n            schema:\n              oneOf:\n                - properties:\n                    channel:\n                      description: Channel name.\n                      type: string\n                    deviceId:\n                      description: Must be set when clientId is empty, cannot be used with clientId.\n                      type: string\n                  type: object\n                - properties:\n                    channel:\n                      description: Channel name.\n                      type: string\n                    clientId:\n                      description: Must be set when deviceId is empty, cannot be used with deviceId.\n                      type: string\n                  type: object\n          application/x-www-form-urlencoded:\n            example:\n              channel: my:channel\n              clientId: myClientId\n            schema:\n              oneOf:\n                - properties:\n                    channel:\n                      description: Channel name.\n                      type: string\n                    deviceId:\n                      description: Must be set when clientId is empty, cannot be used with clientId.\n                      type: string\n                  type: object\n                - properties:\n                    channel:\n                      description: Channel name.\n                      type: string\n                    clientId:\n                      description: Must be set when deviceId is empty, cannot be used with deviceId.\n                      type: string\n                  type: object\n      responses:\n        2XX:\n          description: OK\n        default:\n          $ref: \"#/components/responses/Error\"\n      summary: Subscribe a device to a channel\n      tags:\n        - Push\n  /push/channels:\n    get:\n      description: Returns a paginated response of channel names.\n      operationId: getChannelsWithPushSubscribers\n      responses:\n        2XX:\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n            application/x-msgpack:\n              schema:\n                items:\n                  type: string\n                type: array\n            text/html:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: OK\n        default:\n          $ref: \"#/components/responses/Error\"\n      summary: List all channels with at least one subscribed device\n      tags:\n        - Push\n    parameters:\n      - $ref: \"#/components/parameters/versionHeader\"\n      - $ref: \"#/components/parameters/responseFormat\"\n  /push/deviceRegistrations:\n    delete:\n      description: Unregisters devices. All their subscriptions for receiving push notifications through channels will also be deleted.\n      operationId: unregisterAllPushDevices\n      parameters:\n        - description: Optional filter to restrict to devices associated with that deviceId. Cannot be used with clientId.\n          in: query\n          name: deviceId\n          schema:\n            type: string\n        - description: Optional filter to restrict to devices associated with that clientId. Cannot be used with deviceId.\n          in: query\n          name: clientId\n          schema:\n            type: string\n      responses:\n        2XX:\n          description: OK\n        default:\n          $ref: \"#/components/responses/Error\"\n      summary: Unregister matching devices for push notifications\n      tags:\n        - Push\n    get:\n      description: List of device details of devices registed for push notifications.\n      operationId: getRegisteredPushDevices\n      parameters:\n        - description: Optional filter to restrict to devices associated with that deviceId.\n          in: query\n          name: deviceId\n          schema:\n            type: string\n        - description: Optional filter to restrict to devices associated with that clientId.\n          in: query\n          name: clientId\n          schema:\n            type: string\n        - description: The maximum number of records to return.\n          in: query\n          name: limit\n          schema:\n            default: 100\n            maximum: 1000\n            type: integer\n      responses:\n        2XX:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeviceDetails\"\n            application/x-msgpack:\n              schema:\n                $ref: \"#/components/schemas/DeviceDetails\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/DeviceDetails\"\n          description: OK\n        default:\n          $ref: \"#/components/responses/Error\"\n      summary: List devices registered for receiving push notifications\n      tags:\n        - Push\n    parameters:\n      - $ref: \"#/components/parameters/versionHeader\"\n      - $ref: \"#/components/parameters/responseFormat\"\n    post:\n      description: Register a device’s details, including the information necessary to deliver push notifications to it. Requires \"push-admin\" capability.\n      operationId: registerPushDevice\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeviceDetails\"\n          application/x-msgpack:\n            schema:\n              $ref: \"#/components/schemas/DeviceDetails\"\n      responses:\n        2XX:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeviceDetails\"\n            application/x-msgpack:\n              schema:\n                $ref: \"#/components/schemas/DeviceDetails\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/DeviceDetails\"\n          description: OK\n        default:\n          $ref: \"#/components/responses/Error\"\n      summary: Register a device for receiving push notifications\n      tags:\n        - Push\n  \"/push/deviceRegistrations/{device_id}\":\n    delete:\n      description: Unregisters a single device by its device ID. All its subscriptions for receiving push notifications through channels will also be deleted.\n      operationId: unregisterPushDevice\n      parameters:\n        - $ref: \"#/components/parameters/deviceId\"\n      responses:\n        2XX:\n          description: OK\n        default:\n          $ref: \"#/components/responses/Error\"\n      summary: Unregister a single device for push notifications\n      tags:\n        - Push\n    get:\n      description: Get the full details of a device.\n      operationId: getPushDeviceDetails\n      parameters:\n        - $ref: \"#/components/parameters/deviceId\"\n      responses:\n        2XX:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeviceDetails\"\n            application/x-msgpack:\n              schema:\n                $ref: \"#/components/schemas/DeviceDetails\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/DeviceDetails\"\n          description: OK\n        default:\n          $ref: \"#/components/responses/Error\"\n      summary: Get a device registration\n      tags:\n        - Push\n    parameters:\n      - $ref: \"#/components/parameters/versionHeader\"\n      - $ref: \"#/components/parameters/responseFormat\"\n    patch:\n      description: Specific attributes of an existing registration can be updated. Only clientId, metadata and push.recipient are mutable.\n      operationId: patchPushDeviceDetails\n      parameters:\n        - $ref: \"#/components/parameters/deviceId\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeviceDetails\"\n          application/x-msgpack:\n            schema:\n              $ref: \"#/components/schemas/DeviceDetails\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/DeviceDetails\"\n      responses:\n        2XX:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeviceDetails\"\n            application/x-msgpack:\n              schema:\n                $ref: \"#/components/schemas/DeviceDetails\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/DeviceDetails\"\n          description: OK\n        default:\n          $ref: \"#/components/responses/Error\"\n      summary: Update a device registration\n      tags:\n        - Push\n    put:\n      description: Device registrations can be upserted (the existing registration is replaced entirely) with a PUT operation. Only clientId, metadata and push.recipient are mutable.\n      operationId: putPushDeviceDetails\n      parameters:\n        - $ref: \"#/components/parameters/deviceId\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeviceDetails\"\n          application/x-msgpack:\n            schema:\n              $ref: \"#/components/schemas/DeviceDetails\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/DeviceDetails\"\n      responses:\n        2XX:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeviceDetails\"\n            application/x-msgpack:\n              schema:\n                $ref: \"#/components/schemas/DeviceDetails\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/DeviceDetails\"\n          description: OK\n        default:\n          $ref: \"#/components/responses/Error\"\n      summary: Update a device registration\n      tags:\n        - Push\n  \"/push/deviceRegistrations/{device_id}/resetUpdateToken\":\n    get:\n      description: Gets an updated device details object.\n      operationId: updatePushDeviceDetails\n      parameters:\n        - $ref: \"#/components/parameters/deviceId\"\n      responses:\n        2XX:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeviceDetails\"\n            application/x-msgpack:\n              schema:\n                $ref: \"#/components/schemas/DeviceDetails\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/DeviceDetails\"\n          description: OK\n        default:\n          $ref: \"#/components/responses/Error\"\n      summary: Reset a registered device's update token\n      tags:\n        - Push\n    parameters:\n      - $ref: \"#/components/parameters/versionHeader\"\n      - $ref: \"#/components/parameters/responseFormat\"\n  /push/publish:\n    parameters:\n      - $ref: \"#/components/parameters/versionHeader\"\n      - $ref: \"#/components/parameters/responseFormat\"\n    post:\n      description: A convenience endpoint to deliver a push notification payload to a single device or set of devices identified by their client identifier.\n      operationId: publishPushNotificationToDevices\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                push:\n                  $ref: \"#/components/schemas/Push\"\n                recipient:\n                  $ref: \"#/components/schemas/Recipient\"\n              required:\n                - recipient\n              type: object\n          application/x-msgpack:\n            schema:\n              properties:\n                push:\n                  $ref: \"#/components/schemas/Push\"\n                recipient:\n                  $ref: \"#/components/schemas/Recipient\"\n              required:\n                - recipient\n              type: object\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                push:\n                  $ref: \"#/components/schemas/Push\"\n                recipient:\n                  $ref: \"#/components/schemas/Recipient\"\n              required:\n                - recipient\n              type: object\n      responses:\n        2XX:\n          description: OK\n        default:\n          $ref: \"#/components/responses/Error\"\n      summary: Publish a push notification to device(s)\n      tags:\n        - Push\n  /stats:\n    get:\n      description: The Ably system can be queried to obtain usage statistics for a given application, and results are provided aggregated across all channels in use in the application in the specified period. Stats may be used to track usage against account quotas.\n      operationId: getStats\n      parameters:\n        - $ref: \"#/components/parameters/filterStart\"\n        - $ref: \"#/components/parameters/filterLimit\"\n        - $ref: \"#/components/parameters/filterEnd\"\n        - $ref: \"#/components/parameters/filterDirection\"\n        - description: Specifies the unit of aggregation in the returned results.\n          in: query\n          name: unit\n          schema:\n            default: minute\n            enum:\n              - minute\n              - hour\n              - day\n              - month\n            type: string\n      responses:\n        2XX:\n          content:\n            application/json:\n              schema:\n                type: object\n          description: OK\n        default:\n          $ref: \"#/components/responses/Error\"\n      summary: Retrieve usage statistics for an application\n      tags:\n        - Stats\n    parameters:\n      - $ref: \"#/components/parameters/versionHeader\"\n      - $ref: \"#/components/parameters/responseFormat\"\n  /time:\n    get:\n      description: This returns the service time in milliseconds since the epoch.\n      operationId: getTime\n      responses:\n        2XX:\n          content:\n            application/json:\n              schema:\n                items:\n                  type: integer\n                type: array\n            application/x-msgpack:\n              schema:\n                items:\n                  type: integer\n                type: array\n            text/html:\n              schema:\n                type: string\n          description: OK\n        default:\n          $ref: \"#/components/responses/Error\"\n      security: []\n      summary: Get the service time\n      tags:\n        - Stats\n    parameters:\n      - $ref: \"#/components/parameters/versionHeader\"\n      - $ref: \"#/components/parameters/responseFormat\"\ncomponents:\n  headers:\n    ErrorCode:\n      description: The error code.\n      schema:\n        type: integer\n    ErrorMessage:\n      description: The error message.\n      schema:\n        type: string\n    Link:\n      description: Links to related resources, in the format defined by [RFC 5988](https://tools.ietf.org/html/rfc5988#section-5). This will potentially include a link with relation type `next`, `first`, and `current`, where appropiate.\n      required: true\n      schema:\n        pattern: (\u003c(.*)?\u003e; rel=\\\"(first|current|last)?\\\",)*(\u003c(.*)?\u003e; rel=\\\"(first|current|last)?\\\")+\n        type: string\n    ServerId:\n      description: The ID for the server communicated with.\n      required: true\n      schema:\n        type: string\n  parameters:\n    channelId:\n      description: The [Channel's ID](https://www.ably.io/documentation/rest/channels).\n      in: path\n      name: channel_id\n      required: true\n      schema:\n        type: string\n    deviceId:\n      description: Device's ID.\n      in: path\n      name: device_id\n      required: true\n      schema:\n        type: string\n    filterDirection:\n      in: query\n      name: direction\n      schema:\n        default: backwards\n        enum:\n          - forwards\n          - backwards\n        type: string\n    filterEnd:\n      in: query\n      name: end\n      schema:\n        default: now\n        type: string\n    filterLimit:\n      in: query\n      name: limit\n      schema:\n        default: \"100\"\n        type: integer\n    filterStart:\n      in: query\n      name: start\n      schema:\n        type: string\n    key_name:\n      description: The [key name](https://www.ably.io/documentation/rest-api/token-request-spec#api-key-format) comprises of the app ID and key ID of an API key.\n      in: path\n      name: keyName\n      required: true\n      schema:\n        type: string\n    responseFormat:\n      description: The response format you would like\n      in: query\n      name: format\n      schema:\n        enum:\n          - json\n          - jsonp\n          - msgpack\n          - html\n        type: string\n    versionHeader:\n      description: The version of the API you wish to use.\n      in: header\n      name: X-Ably-Version\n      schema:\n        type: string\n  responses:\n    Error:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n        application/x-msgpack:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n        text/html:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n      description: Error\n      headers:\n        x-ably-errorcode:\n          $ref: \"#/components/headers/ErrorCode\"\n        x-ably-errormessage:\n          $ref: \"#/components/headers/ErrorMessage\"\n        x-ably-serverid:\n          $ref: \"#/components/headers/ServerId\"\n  schemas:\n    ChannelDetails:\n      properties:\n        channelId:\n          description: The required name of the channel including any qualifier, if any.\n          type: string\n        isGlobalMaster:\n          description: In events relating to the activity of a channel in a specific region, this optionally identifies whether or not that region is responsible for global coordination of the channel.\n          type: boolean\n        region:\n          description: In events relating to the activity of a channel in a specific region, this optionally identifies the region.\n          type: string\n        status:\n          $ref: \"#/components/schemas/ChannelStatus\"\n      required:\n        - channelId\n      type: object\n    ChannelStatus:\n      description: A ChannelStatus instance.\n      properties:\n        isActive:\n          description: A required boolean value indicating whether the channel that is the subject of the event is active. For events indicating regional activity of a channel this indicates activity in that region, not global activity.\n          type: boolean\n        occupancy:\n          $ref: \"#/components/schemas/Occupancy\"\n      required:\n        - isActive\n      type: object\n    DeviceDetails:\n      properties:\n        clientId:\n          description: Optional trusted client identifier for the device.\n          type: string\n        deviceSecret:\n          description: Secret value for the device.\n          type: string\n        formFactor:\n          description: Form factor of the push device.\n          enum:\n            - phone\n            - tablet\n            - desktop\n            - tv\n            - watch\n            - car\n            - embedded\n          type: string\n        id:\n          description: Unique identifier for the device generated by the device itself.\n          type: string\n        metadata:\n          description: Optional metadata object for this device. The metadata for a device may only be set by clients with push-admin privileges and will be used more extensively in the future with smart notifications.\n          type: object\n        platform:\n          description: Platform of the push device.\n          enum:\n            - ios\n            - android\n          type: string\n        push.recipient:\n          $ref: \"#/components/schemas/Recipient\"\n        push.state:\n          description: the current state of the push device.\n          enum:\n            - Active\n            - Failing\n            - Failed\n          readOnly: true\n          type: string\n      type: object\n    Error:\n      description: Returned error from failed REST.\n      properties:\n        code:\n          description: Error code.\n          type: integer\n        href:\n          description: Link to help with error.\n          type: string\n        message:\n          description: Message explaining the error's cause.\n          type: string\n        serverId:\n          description: Server ID with which error was encountered.\n          type: string\n        statusCode:\n          description: Status error code.\n          type: integer\n      type: object\n    Extras:\n      description: Extras object. Currently only allows for [push](https://www.ably.io/documentation/general/push/publish#channel-broadcast-example) extra.\n      properties:\n        push:\n          $ref: \"#/components/schemas/Push\"\n      type: object\n    Message:\n      description: Message object.\n      properties:\n        clientId:\n          description: The [client ID](https://www.ably.io/documentation/core-features/authentication#identified-clients) of the publisher of this message.\n          type: string\n        connectionId:\n          description: The connection ID of the publisher of this message.\n          type: string\n        data:\n          description: The string encoded payload, with the encoding specified below.\n          type: string\n        encoding:\n          description: This will typically be empty as all messages received from Ably are automatically decoded client-side using this value. However, if the message encoding cannot be processed, this attribute will contain the remaining transformations not applied to the data payload.\n          type: string\n        extras:\n          $ref: \"#/components/schemas/Extras\"\n        id:\n          description: A Unique ID that can be specified by the publisher for [idempotent publishing](https://www.ably.io/documentation/rest/messages#idempotent).\n          readOnly: true\n          type: string\n        name:\n          description: The event name, if provided.\n          type: string\n        timestamp:\n          description: Timestamp when the message was received by the Ably, as milliseconds since the epoch.\n          format: int64\n          readOnly: true\n          type: integer\n      type: object\n    Notification:\n      properties:\n        body:\n          description: Text below title on the expanded notification.\n          type: string\n        collapseKey:\n          description: Platform-specific, used to group notifications together.\n          type: string\n        icon:\n          description: Platform-specific icon for the notification.\n          type: string\n        sound:\n          description: Platform-specific sound for the notification.\n          type: string\n        title:\n          description: Title to display at the notification.\n          type: string\n      type: object\n    Occupancy:\n      description: An Occupancy instance indicating the occupancy of a channel. For events indicating regional activity of a channel this indicates activity in that region, not global activity.\n      properties:\n        presenceConnections:\n          description: The number of connections that are authorised to enter members into the presence channel.\n          type: integer\n        presenceMembers:\n          description: The number of members currently entered into the presence channel.\n          type: integer\n        presenceSubscribers:\n          description: The number of connections that are authorised to subscribe to presence messages.\n          type: integer\n        publishers:\n          description: The number of connections attached to the channel that are authorised to publish.\n          type: integer\n        subscribers:\n          description: The number of connections attached that are authorised to subscribe to messages.\n          type: integer\n      type: object\n    PresenceMessage:\n      properties:\n        action:\n          description: The event signified by a PresenceMessage.\n          enum:\n            - ABSENT\n            - PRESENT\n            - ENTER\n            - LEAVE\n            - UPDATE\n          readOnly: true\n          type: string\n        clientId:\n          description: The client ID of the publisher of this presence update.\n          type: string\n        connectionId:\n          description: The connection ID of the publisher of this presence update.\n          type: string\n        data:\n          description: The presence update payload, if provided.\n          type: string\n        encoding:\n          description: This will typically be empty as all presence updates received from Ably are automatically decoded client-side using this value. However, if the message encoding cannot be processed, this attribute will contain the remaining transformations not applied to the data payload.\n          type: string\n        extras:\n          $ref: \"#/components/schemas/Extras\"\n        id:\n          description: Unique ID assigned by Ably to this presence update.\n          readOnly: true\n          type: string\n        timestamp:\n          description: Timestamp when the presence update was received by Ably, as milliseconds since the epoch.\n          format: int64\n          readOnly: true\n          type: integer\n      type: object\n    Push:\n      properties:\n        apns:\n          description: Extends and overrides generic values when delivering via APNs. [See examples](https://www.ably.io/documentation/general/push/publish#payload-structure)\n          properties:\n            notification:\n              $ref: \"#/components/schemas/Notification\"\n          type: object\n        data:\n          description: Arbitrary [key-value string-to-string payload](https://www.ably.io/documentation/general/push/publish#channel-broadcast-example).\n          type: string\n        fcm:\n          description: Extends and overrides generic values when delivering via GCM/FCM. [See examples](https://www.ably.io/documentation/general/push/publish#payload-structure)\n          properties:\n            notification:\n              $ref: \"#/components/schemas/Notification\"\n          type: object\n        notification:\n          $ref: \"#/components/schemas/Notification\"\n        web:\n          description: Extends and overrides generic values when delivering via web. [See examples](https://www.ably.io/documentation/general/push/publish#payload-structure)\n          properties:\n            notification:\n              $ref: \"#/components/schemas/Notification\"\n          type: object\n      type: object\n    Recipient:\n      description: Push recipient details for a device.\n      properties:\n        clientId:\n          description: Client ID of recipient\n          type: string\n          writeOnly: true\n        deviceId:\n          description: Client ID of recipient\n          type: string\n          writeOnly: true\n        deviceToken:\n          description: when using APNs, specifies the required device token.\n          type: string\n        registrationToken:\n          description: when using GCM or FCM, specifies the required registration token.\n          type: string\n        transportType:\n          description: Defines which push platform is being used.\n          enum:\n            - apns\n            - fcm\n            - gcm\n          type: string\n      type: object\n    SignedTokenRequest:\n      allOf:\n        - $ref: \"#/components/schemas/TokenRequest\"\n        - properties:\n            mac:\n              description: A signature, generated as an HMAC of each of the above components, using the key secret value.\n              type: string\n          required:\n            - mac\n          type: object\n    TokenDetails:\n      properties:\n        capability:\n          description: Regular expression representation of the capabilities of the token.\n          type: string\n        expires:\n          description: Timestamp of token expiration.\n          type: integer\n        issued:\n          description: Timestamp of token creation.\n          type: integer\n        keyName:\n          description: Name of the key used to create the token\n          type: string\n        token:\n          description: The Ably Token.\n          type: string\n      type: object\n    TokenRequest:\n      properties:\n        capability:\n          description: The [capabilities](https://www.ably.io/documentation/core-features/authentication#capabilities-explained) (i.e. a set of channel names/namespaces and, for each, a set of operations) which should be a subset of the set of capabilities associated with the key specified in keyName.\n          example:\n            channel1:\n              - publish\n              - subscribe\n          type: object\n        clientId:\n          description: The [client ID](https://www.ably.io/documentation/core-features/authentication#identified-clients) to be assosciated with the token. Can be set to * to allow for any client ID to be used.\n          type: string\n        keyName:\n          description: Name of the key used for the TokenRequest. The keyName comprises of the app ID and key ID on an API Key.\n          example: xVLyHw.LMJZxw\n          type: string\n        nonce:\n          description: An unquoted, un-escaped random string of at least 16 characters. Used to ensure the Ably TokenRequest cannot be reused.\n          type: string\n        timestamp:\n          description: Time of creation of the Ably TokenRequest.\n          type: integer\n      required:\n        - keyName\n        - capability\n        - timestamp\n        - nonce\n      type: object\n  securitySchemes:\n    basicAuth:\n      description: Basic Authentication using an [API key](https://www.ably.io/documentation/core-features/authentication#basic-authentication).\n      scheme: basic\n      type: http\n    bearerAuth:\n      description: Token Authentication using an [Ably Token](https://www.ably.io/documentation/core-features/authentication#basic-authentication), or optionally an [Ably JWT](https://www.ably.io/documentation/core-features/authentication#ably-jwt-process).\n      scheme: bearer\n      type: http\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@57168637e057c3e5ebe933717019f6f25bc1886e/-/blob/APIs/ably.io/platform/1.1.0/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/57168637e057c3e5ebe933717019f6f25bc1886e/APIs/ably.io/platform/1.1.0/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: parameters: \"filterLimit\": parse schema: at APIs/ably.io/platform/1.1.0/openapi.yaml:911:18: parse default: expected type \"integer\", got \"string\""
}