{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/MikeRalphson/bbcapis"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "accountPolicyApi/openapi.yaml",
			"byteSize": 27164,
			"content": "openapi: 3.0.0\ninfo:\n  description: |-\n    BBCiD Policy Service\n\n    - [Swagger UI](/swagger-ui)\n    - [ReDoc](/docs)\n  version: ${project.version}\n  title: User Policy API\n  x-logo:\n    url: images/logo.png\ntags:\n  - name: basic-api\n    description: Basic API endpoints (e.g. monitoring, service status)\n  - name: policy-evaluations\n    description: |\n      This group of endpoints assesses a user's elegibility for a policy (or all policies).\nservers:\n  - url: https://account-backend-gateway.int.api.bbci.co.uk\n    description: Integration environment\n  - url: https://account-backend-gateway.test.api.bbci.co.uk\n    description: Testing environment\n  - url: https://account-backend-gateway.stage.api.bbci.co.uk\n    description: Staging environment\n  - url: https://account-backend-gateway.api.bbci.co.uk\n    description: Production environment\n  - url: http://localhost:8082/\n    description: Local development (Spring Boot)\npaths:\n  /status:\n    get:\n      tags:\n        - basic-api\n      summary: Service status\n      description: |\n        Service health check\n\n        This is accessed directly (not via gateway) by the ELB.\n      operationId: status\n      responses:\n        \"200\":\n          $ref: '#/components/responses/Status200'\n        \"503\":\n          $ref: '#/components/responses/Status503'\n      deprecated: false\n  /users/{userId}/policy-evaluations:\n    get:\n      tags:\n        - policy-evaluations\n      security:\n        - bearerAuth: [ ]\n        - sslClientCert: [ ]\n      summary: Get all policy evaluations\n      description: |\n        Evaluate whether or not a user meets each policy. Include any failure reasons for all policies.\n\n        | Scenario | `data.policyResults.\u003cpolicyName\u003e` | `data.policyFailures.\u003cpolicyName\u003e.length` |\n        |----------|-----------------------------------|-------------------------------------------|\n        | Passed   | true                              | 0                                         |\n        | Failed   | false                             | \u003e= 1                                      |\n      operationId: getAllPolicyEvaluations\n      parameters:\n        - $ref: \"#/components/parameters/header_policyApiVersion\"\n        - $ref: \"#/components/parameters/header_subjectDn_REQUIRED\"\n        - $ref: \"#/components/parameters/path_userId_REQUIRED\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PolicyEvaluationsResponse\"\n              examples:\n                allO18User:\n                  $ref: \"#/components/examples/ResponsePolicyEvaluationsAllO18User\"\n                allU18User:\n                  $ref: \"#/components/examples/ResponsePolicyEvaluationsAllU18User\"\n                allU16User:\n                  $ref: \"#/components/examples/ResponsePolicyEvaluationsAllU16User\"\n                allU13UserWithCommentsPermissionAllowed:\n                  $ref: \"#/components/examples/ResponsePolicyEvaluationsAllU13UserWithCommentsPermissionAllowed\"\n                allU13UserWithoutCommentsPermission:\n                  $ref: \"#/components/examples/ResponsePolicyEvaluationsAllU13UserWithoutCommentsPermission\"\n                allU13UserWithCommentsPermissionDenied:\n                  $ref: \"#/components/examples/ResponsePolicyEvaluationsAllU13UserWithCommentsPermissionDenied\"\n        \"400\":\n          $ref: '#/components/responses/BadRequest'\n        \"401\":\n          $ref: '#/components/responses/Unauthenticated'\n        \"403\":\n          $ref: '#/components/responses/Unauthorized'\n        \"404\":\n          $ref: '#/components/responses/UserNotFound'\n        \"410\":\n          $ref: '#/components/responses/Gone'\n        \"500\":\n          $ref: '#/components/responses/InternalServerError'\n      deprecated: false\n    delete:\n      tags:\n        - policy-evaluations\n      security:\n        - sslClientCert: [ ]\n      summary: Purge cached evaluations\n      description: Delete any cached policy evaluations for a user\n      operationId: purgeCachedEvaluations\n      parameters:\n        - $ref: \"#/components/parameters/header_subjectDn_REQUIRED\"\n        - $ref: \"#/components/parameters/path_userId_REQUIRED\"\n      responses:\n        \"204\":\n          description: No content\n        \"400\":\n          $ref: '#/components/responses/BadRequest'\n        \"401\":\n          $ref: '#/components/responses/Unauthenticated'\n        \"403\":\n          $ref: '#/components/responses/Unauthorized'\n        \"404\":\n          $ref: '#/components/responses/UserNotFound'\n        \"500\":\n          $ref: '#/components/responses/InternalServerError'\n      deprecated: false\n  /users/{userId}/policy-evaluations/{policyName}:\n    get:\n      tags:\n        - policy-evaluations\n      security:\n        - bearerAuth: [ ]\n        - sslClientCert: [ ]\n      summary: Get one policy evaluation\n      description: |\n        Evaluate whether or not a user meets a specific policy. Include any failure reasons for that policy.\n\n        | Scenario | `data.policyResult` | `data.policyFailures.length` |\n        |----------|---------------------|------------------------------|\n        | Passed   | true                | 0                            |\n        | Failed   | false               | \u003e= 1                         |\n      operationId: getSpecificPolicyEvaluation\n      parameters:\n        - $ref: \"#/components/parameters/header_policyApiVersion\"\n        - $ref: \"#/components/parameters/header_subjectDn_REQUIRED\"\n        - $ref: \"#/components/parameters/path_userId_REQUIRED\"\n        - $ref: \"#/components/parameters/path_policyName_REQUIRED\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SpecificPolicyEvaluationResponse\"\n              examples:\n                commentsU16User:\n                  $ref: \"#/components/examples/ResponsePolicyEvaluationsCommentsU16User\"\n                commentsO18User:\n                  $ref: \"#/components/examples/ResponsePolicyEvaluationsCommentsO18User\"\n                u16CommentsU16User:\n                  $ref: \"#/components/examples/ResponsePolicyEvaluationsU16CommentsU16User\"\n                u16CommentsO18User:\n                  $ref: \"#/components/examples/ResponsePolicyEvaluationsU16CommentsO18User\"\n                u16CommentsU13UserWithoutParentOrGuardian:\n                  $ref: \"#/components/examples/ResponsePolicyEvaluationsU16CommentsU13UserWithoutParentOrGuardian\"\n        \"400\":\n          $ref: '#/components/responses/BadRequest'\n        \"401\":\n          $ref: '#/components/responses/Unauthenticated'\n        \"403\":\n          $ref: '#/components/responses/Unauthorized'\n        \"404\":\n          $ref: '#/components/responses/UserNotFound'\n        \"410\":\n          $ref: '#/components/responses/Gone'\n        \"500\":\n          $ref: '#/components/responses/InternalServerError'\n      deprecated: false\ncomponents:\n  examples:\n    ResponsePolicyEvaluationsAllO18User:\n      summary: Adult 18+, all policies\n      value:\n        id: fe097dfa-dfa9-4eac-95f2-4a59f3d20536:comments,u16Comments\n        data:\n          policyResults:\n            comments: true\n            u16Comments: false\n          policyFailures:\n            comments: [ ]\n            u16Comments:\n              - comparison: not in\n                name: AGE_TOO_OLD_OR_UNKNOWN\n                propertyPath: age.ageBracket\n                value: '[\"u13\", \"u16\"]'\n        meta:\n          apiVersion: \"1\"\n    ResponsePolicyEvaluationsAllU18User:\n      summary: Child 16-17, all policies\n      value:\n        id: fe097dfa-dfa9-4eac-95f2-4a59f3d20536:comments,u16Comments\n        data:\n          policyResults:\n            comments: true\n            u16Comments: false\n          policyFailures:\n            comments: [ ]\n            u16Comments:\n              - comparison: not in\n                name: AGE_TOO_OLD_OR_UNKNOWN\n                propertyPath: age.ageBracket\n                value: '[\"u13\", \"u16\"]'\n        meta:\n          apiVersion: \"1\"\n    ResponsePolicyEvaluationsAllU16User:\n      summary: Child 13-15, all policies\n      value:\n        id: fe097dfa-dfa9-4eac-95f2-4a59f3d20536:comments,u16Comments\n        data:\n          policyResults:\n            comments: false\n            u16Comments: true\n          policyFailures:\n            comments:\n              - comparison: not in\n                name: AGE_TOO_YOUNG_OR_UNKNOWN\n                propertyPath: age.ageBracket\n                value: '[\"u18\", \"o18\"]'\n            u16Comments: [ ]\n        meta:\n          apiVersion: \"1\"\n    ResponsePolicyEvaluationsAllU13UserWithCommentsPermissionAllowed:\n      summary: Child \u003c13 (with comments permission allowed), all policies\n      value:\n        id: fe097dfa-dfa9-4eac-95f2-4a59f3d20536:comments,u16Comments\n        data:\n          policyResults:\n            comments: false\n            u16Comments: true\n          policyFailures:\n            comments:\n              - comparison: not in\n                name: AGE_TOO_YOUNG_OR_UNKNOWN\n                propertyPath: age.ageBracket\n                value: '[\"u18\", \"o18\"]'\n            u16Comments: [ ]\n        meta:\n          apiVersion: \"1\"\n          parentAssociation: linked\n    ResponsePolicyEvaluationsAllU13UserWithoutCommentsPermission:\n      summary: Child \u003c13 (without comments permission), all policies\n      value:\n        id: fe097dfa-dfa9-4eac-95f2-4a59f3d20536:comments,u16Comments\n        data:\n          policyResults:\n            comments: false\n            u16Comments: false\n          policyFailures:\n            comments:\n              - comparison: not in\n                name: AGE_TOO_YOUNG_OR_UNKNOWN\n                propertyPath: age.ageBracket\n                value: '[\"u18\", \"o18\"]'\n            u16Comments:\n              - comparison: equals\n                name: COMMENTS_PERMISSION_REQUIRED\n                propertyPath: permissions.allowComments\n                value: null\n        meta:\n          apiVersion: \"1\"\n          parentAssociation: linked\n    ResponsePolicyEvaluationsAllU13UserWithCommentsPermissionDenied:\n      summary: Child \u003c13 (with comments permission denied), all policies\n      value:\n        id: fe097dfa-dfa9-4eac-95f2-4a59f3d20536:comments,u16Comments\n        data:\n          policyResults:\n            comments: false\n            u16Comments: false\n          policyFailures:\n            comments:\n              - comparison: not in\n                name: AGE_TOO_YOUNG_OR_UNKNOWN\n                propertyPath: age.ageBracket\n                value: '[\"u18\", \"o18\"]'\n            u16Comments:\n              - comparison: equals\n                name: COMMENTS_PERMISSION_GRANTED_REQUIRED\n                propertyPath: permissions.allowComments\n                value: false\n        meta:\n          apiVersion: \"1\"\n          parentAssociation: linked\n    ResponsePolicyEvaluationsCommentsU16User:\n      summary: Child \u003c16, comments policy\n      value:\n        id: fe097dfa-dfa9-4eac-95f2-4a59f3d20536:comments\n        data:\n          policyResult: false\n          policyFailures:\n            - comparison: not in\n              name: AGE_TOO_YOUNG_OR_UNKNOWN\n              propertyPath: age.ageBracket\n              value: '[\"u18\", \"o18\"]'\n        meta:\n          apiVersion: \"1\"\n    ResponsePolicyEvaluationsCommentsO18User:\n      summary: Adult 18+, comments policy\n      value:\n        id: fe097dfa-dfa9-4eac-95f2-4a59f3d20536:comments\n        data:\n          policyResult: true\n          policyFailures: [ ]\n        meta:\n          apiVersion: \"1\"\n    ResponsePolicyEvaluationsU16CommentsU13UserWithoutCommentsPermissionWithoutDisplayName:\n      summary: Child \u003c13 (without comments permission or display name), u16Comments policy\n      value:\n        id: fe097dfa-dfa9-4eac-95f2-4a59f3d20536:u16Comments\n        data:\n          policyResult: false\n          policyFailures:\n            - comparison: equals\n              name: COMMENTS_PERMISSION_REQUIRED\n              propertyPath: permissions.allowComments\n              value: null\n            - comparison: equals\n              name: DISPLAY_NAME_REQUIRED\n              propertyPath: displayName\n              value: null\n        meta:\n          apiVersion: \"1\"\n          parentAssociation: linked\n    ResponsePolicyEvaluationsU16CommentsU13UserWithoutParentOrGuardian:\n      summary: Child \u003c13 (without parent or guardian), u16Comments policy\n      value:\n        id: fe097dfa-dfa9-4eac-95f2-4a59f3d20536:u16Comments\n        data:\n          policyResult: false\n          policyFailures:\n            - comparison: ==\n              name: CHILD_DOES_NOT_HAVE_GUARDIAN\n              propertyPath: guardianEmail\n              value: null\n        meta:\n          apiVersion: \"1\"\n    ResponsePolicyEvaluationsU16CommentsU16User:\n      summary: Child \u003c16, u16Comments policy\n      value:\n        id: fe097dfa-dfa9-4eac-95f2-4a59f3d20536:u16Comments\n        data:\n          policyResult: false\n          policyFailures: [ ]\n        meta: { }\n    ResponsePolicyEvaluationsU16CommentsO18User:\n      summary: Adult 18+, u16Comments policy\n      value:\n        id: fe097dfa-dfa9-4eac-95f2-4a59f3d20536:u16Comments\n        data:\n          policyResult: true\n          policyFailures:\n            - comparison: ArrayList.contains\n              name: NOT_ACCEPTABLE_AGE\n              propertyPath: age.ageBracket\n              value: '[\"o18\", \"u18\", \"unknown\"]'\n        meta:\n          apiVersion: \"1\"\n  parameters:\n    header_policyApiVersion:\n      name: x-bbc-policy-api-version\n      in: header\n      schema:\n        $ref: \"#/components/schemas/PolicyApiVersion\"\n    header_subjectDn_REQUIRED:\n      name: x-bbc-subject-dn\n      in: header\n      required: true\n      schema:\n        $ref: \"#/components/schemas/SubjectDn\"\n    path_userId_REQUIRED:\n      name: userId\n      in: path\n      required: true\n      schema:\n        $ref: \"#/components/schemas/UserId\"\n    path_policyName_REQUIRED:\n      name: policyName\n      in: path\n      required: true\n      schema:\n        $ref: \"#/components/schemas/PolicyName\"\n  responses:\n    BadRequest:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorResponse400'\n          examples:\n            GenericBadRequest:\n              summary: Bad Request\n              value:\n                error: malformedRequest\n            HeaderMissingSubjectDn:\n              summary: Subject DN header missing\n              value:\n                error: Missing request header 'x-bbc-subject-dn' for method parameter of type String\n            PolicyVersionDoesNotExist:\n              summary: Version of policy does not exist\n              value:\n                error: policyVersionDoesNotExist\n            UserIdFormatUnacceptable:\n              summary: User ID is in the wrong format\n              value:\n                error: userIdFormatUnacceptable\n    BadRequestSinglePolicy:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorResponse400'\n          examples:\n            GenericBadRequest:\n              summary: Bad Request\n              value:\n                error: malformedRequest\n            HeaderMissingSubjectDn:\n              summary: Subject DN header missing\n              value:\n                error: Missing request header 'x-bbc-subject-dn' for method parameter of type String\n            PolicyDoesNotExist:\n              summary: Policy does not exist\n              value:\n                error: policyDoesNotExist\n            PolicyVersionDoesNotExist:\n              summary: Version of policy does not exist\n              value:\n                error: policyVersionDoesNotExist\n            UserIdFormatUnacceptable:\n              summary: User ID is in the wrong format\n              value:\n                error: userIdFormatUnacceptable\n    Gone:\n      description: Gone\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorResponse410'\n          examples:\n            PolicyVersionDoesNotExist:\n              summary: Version of policy does not exist\n              value:\n                error: policyVersionDoesNotExistAnymore\n    InternalServerError:\n      description: Internal Server Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorResponse500'\n          examples:\n            GenericInternalServerError:\n              summary: Internal Server Error\n              value:\n                error: internalServerError\n            UserServiceClientError:\n              summary: User Service client error\n              value:\n                error: userServiceClientError\n    Status200:\n      description: Status Up or Unknown\n      content:\n        application/json:\n          schema:\n            required:\n              - status\n            properties:\n              status:\n                type: string\n                description: |\n                  Indication of the service status health.\n\n                  Possible values: `UP`, `UNKNOWN`\n          examples:\n            StatusOK:\n              summary: Service status up\n              value:\n                status: OK\n            StatusUnknown:\n              summary: Service status unknown\n              value:\n                status: UNKNOWN\n    Status503:\n      description: Status Down or Out Of Service\n      content:\n        application/json:\n          schema:\n            required:\n              - status\n            properties:\n              status:\n                type: string\n                description: |\n                  Indication of the service status health.\n\n                  Possible values: `DOWN`, `OUT_OF_SERVICE`\n          examples:\n            StatusOK:\n              summary: Service status down\n              value:\n                status: DOWN\n            StatusUnknown:\n              summary: Service status out of service\n              value:\n                status: OUT_OF_SERVICE\n    Unauthenticated:\n      description: Unauthenticated (no valid authentication was supplied)\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorResponse401'\n          examples:\n            InvalidToken:\n              summary: Bearer token supplied but invalid\n              value:\n                error: invalidToken\n            MissingToken:\n              summary: Bearer token not supplied\n              value:\n                error: missingToken\n    Unauthorized:\n      description: Unauthorized (authentication not sufficient for the requested resource)\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorResponse403'\n          examples:\n            NotWhitelistedCert:\n              summary: SSL client cert not whitelisted\n              value:\n                error: sslClientCertNotWhitelisted\n    UserNotFound:\n      description: User not found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorResponse404'\n          examples:\n            UserNotFound:\n              summary: User profile not found\n              value:\n                error: userNotFound\n  schemas:\n    ErrorResponse:\n      type: object\n      properties:\n        error:\n          type: string\n    ErrorResponse400:\n      type: object\n      properties:\n        error:\n          type: string\n          description: |\n            Some form of client-side error. This could be bad syntax, or a request with valid syntax but one or more invalid values.\n\n            \u003csub\u003eRFC: https://tools.ietf.org/html/rfc7231#section-6.5.1\u003c/sub\u003e\n          enum:\n            - malformedRequest\n            - policyDoesNotExist\n            - policyVersionDoesNotExist\n            - userIdFormatUnacceptable\n            - Missing request header 'x-bbc-subject-dn' for method parameter of type String\n    ErrorResponse401:\n      type: object\n      properties:\n        error:\n          type: string\n          description: |\n            A valid form of authentication was not supplied.\n\n            \u003csub\u003eRFC: https://tools.ietf.org/html/rfc7235#section-3.1\u003c/sub\u003e\n          enum:\n            - invalidToken\n            - missingToken\n            - unknown\n    ErrorResponse403:\n      type: object\n      properties:\n        error:\n          type: string\n          description: |\n            Authentication not sufficient for the requested resource.\n\n            \u003csub\u003eRFC: https://tools.ietf.org/html/rfc7231#section-6.5.3\u003c/sub\u003e\n          enum:\n            - sslClientCertNotWhitelisted\n            - unknown\n    ErrorResponse404:\n      type: object\n      properties:\n        error:\n          type: string\n          description: The requested user was not found\n          enum:\n            - userNotFound\n    ErrorResponse410:\n      type: object\n      properties:\n        error:\n          type: string\n          description: |\n            Deprecated version (that no longer exists) was requested. This is permanent.\n\n            \u003csub\u003eRFC: https://tools.ietf.org/html/rfc7231#section-6.5.9\u003c/sub\u003e\n          enum:\n            - policyVersionDoesNotExistAnymore\n    ErrorResponse500:\n      type: object\n      properties:\n        error:\n          type: string\n          description: |\n            Something happened that prevented a good response, or more specific error\n            response, from being formed.\n          enum:\n            - internalServerError\n            - userServiceClientError\n            - userServiceConnectTimeout\n            - userServiceConnectionRefused\n            - userServiceReadTimeout\n            - userServiceUnknownHost\n    PolicyApiVersion:\n      type: string\n      example: \"2\"\n      description: |\n        The version of the policy/policies. Some policies have version-specific evaluations while others do not.\n        If an API version is not specified, the latest version will be used.\n\n        Available versions:\n        * 2\n\n        Deprecated versions:\n        * 1\n    PolicyEvaluationsResponse:\n      type: object\n      properties:\n        id:\n          type: string\n          description: |\n            Combined string of the user ID, age bracket and policy version, used internally\n            as a cache key.\n            This is to facilitate cached responses to be returned in repeat requests,\n            and to allow easy cache-miss after age graduation.\n          example: \"fe097dfa-dfa9-4eac-95f2-4a59f3d20536:u16:latest\"\n        data:\n          type: object\n          properties:\n            policyResults:\n              type: object\n              description: A list of the policy evaluation results\n              properties:\n                comments:\n                  $ref: \"#/components/schemas/PolicyResult\"\n                u16comments:\n                  $ref: \"#/components/schemas/PolicyResult\"\n            policyFailures:\n              type: object\n              description: A list of the failures for each failed policy\n              properties:\n                comments:\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/RuleViolation\"\n                u16Comments:\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/RuleViolation\"\n        meta:\n          type: object\n          properties:\n            apiVersion:\n              type: string\n              description: The API version used\n            parentAssociation:\n              type: string\n              description: Status of the parent link\n    PolicyName:\n      type: string\n      description: \u003e\n        The specific policy to evaluate\n          * comments\n          * content-uploads\n          * email-contact\n          * notifications\n          * playlists\n          * tv\n          * u16\n          * u16-comments\n          * uploads\n    PolicyResult:\n      type: boolean\n      description: Whether or not the user meets this policy's criteria\n    RuleViolation:\n      type: object\n      description: Details on the field/value that did not meet a policy rule\n      properties:\n        comparison:\n          type: string\n          description: The rule method/operator applied to this property\n        name:\n          type: string\n          description: A standardised name for this type of failure\n        propertyPath:\n          type: string\n          description: The user property causing the rule failure\n        value:\n          type: string\n          description: The value used to assess the property\n    SpecificPolicyEvaluationResponse:\n      type: object\n      properties:\n        id:\n          type: string\n          description: |\n            Combined string of the user ID, age bracket and policy version, used internally\n            as a cache key.\n            This is to facilitate cached responses to be returned in repeat requests,\n            and to allow easy cache-miss after age graduation.\n          example: \"fe097dfa-dfa9-4eac-95f2-4a59f3d20536:u16:latest\"\n        data:\n          type: object\n          properties:\n            policyResult:\n              $ref: \"#/components/schemas/PolicyResult\"\n            policyFailures:\n              type: array\n              items:\n                $ref: \"#/components/schemas/RuleViolation\"\n        meta:\n          type: object\n          properties:\n            apiVersion:\n              type: string\n              description: The API version used\n            parentAssociation:\n              type: string\n              description: Status of the parent link\n    SubjectDn:\n      type: string\n      example: mail@mail.mail, CN=mail mail, OU=BBC, O=British Broadcasting Corporation, L=London, C=GB\n      description: |\n        **Automatically generated**\n        \n        The SubjectDN field value from the SSL client cert hitting the gateway. This is used to determine who/what is making the request.\n\n        Apache adds a header `SSLClientCertSubject` during the SSL handshake when the BBC-provided `/etc/httpd/conf.d/bbc-httpd-includes/https_vhost/set_request_headers.inc` is used (e.g. as part of RPM `cloud-httpd24-ssl-services-devs`). This header value is\n        then added as `x-bbc-subject-dn` in a custom plugin, `header`, at the gateway.\n    UserId:\n      type: string\n      example: fe097dfa-dfa9-4eac-95f2-4a59f3d20536\n      description: \"User ID: UUID (v5+) *or* digits (v4)\"\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n      description: |\n        ### Client-server only\n        For requests originating from a client, the user access token is required to authenticate\n        that the request is associated with a currently authenticated user.\n\n        For server-to-server requests, this is not required.\n    sslClientCert:\n      type: http\n      scheme: SSL client cert (whitelisted)\n      description: |\n        ### Server-server only\n        Requests made directly to the Policy service will not require an access token, allowing\n        straightforward server-to-server request flow.\n",
			"canonicalURL": "/github.com/MikeRalphson/bbcapis@273026adb3874948f066404d96cf7dd9267f48ef/-/blob/accountPolicyApi/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/MikeRalphson/bbcapis/blob/273026adb3874948f066404d96cf7dd9267f48ef/accountPolicyApi/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/users/{userId}/policy-evaluations\": get: operation \"getAllPolicyEvaluations\": security: parse security scheme \"sslClientCert\": http: at 1:15762: invalid \"scheme\": \"SSL client cert (whitelisted)\""
}