{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/dcsaorg/DCSA-OpenAPI"
		},
		"file": {
			"name": "dcsa_location_v2.0.0.yaml",
			"size": 0,
			"path": "domain/location/dcsa_location_v2.0.0.yaml",
			"byteSize": 9998,
			"content": "# OpenAPI version identifier - required for OpenAPI 3.0 domains\r\nopenapi: 3.0.3\r\n\r\n#######################\r\n# Optional info section\r\n#######################\r\ninfo:\r\n  title: DCSA - Location Components\r\n  description: |\r\n    Common components for Locations. Locations defined in DCSA APIs and Domains should refer to this Domain.\r\n    \r\n    There are multiple ways to define a location.\r\n    \r\n    - the \"General\" purpose location object can be used as a Polymorphic object defining a Location in multiple ways. All \"ways\" of defining a location must point to the same location. An example of this: location object containing values in the `UN Location Code` field as well as in the `Address` object would require that these two fields point to the same location\r\n    - it is also possible to define locations using the `interfaces`. An `interface` is a specific way of defining a location. This Domain defines 5 official ways to define a location: \r\n      - via **UN Location Code** (only defines a location using `UN Location Code`)\r\n      - via **facilityCode** (defines a location by either a `SMDG` or `BIC` code)\r\n      - via **facilitySMDGCode** (defines a location by a `SMDG` code)\r\n      - via a **geoLocation** (defines a location by a `latitude` and `longitude`)\r\n      - via an **Address** (defines a location by an `Address`)\r\n      \r\n      It is possible to \"combine\" interfaces. This should be done using the `anyOf` qualifier. When doing this the same rule as in the \"General\" purpose location applies: all interfaces of the same location object must point to the same location\r\n    \r\n    For a histroy of changes in this domain - please check [GitHub](https://github.com/dcsaorg/DCSA-OpenAPI/tree/master/domain/location). Please also [create a GitHub issue](https://github.com/dcsaorg/DCSA-OpenAPI/issues/new) if you have any questions/comments.\r\n  license:\r\n    name: Apache 2.0\r\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\r\n  contact:\r\n    name: Digital Container Shipping Association (DCSA)\r\n    url: https://dcsa.org\r\n    email: info@dcsa.org\r\n  version: 2.0.0\r\n\r\ncomponents:\r\n\r\n  ####################\r\n  # Common data models\r\n  ####################\r\n  schemas:\r\n    location:\r\n      type: object\r\n      description: |\r\n        General purpose object to capture location-related data, the location can be specified in **any** of the following ways: `geoLocation` (lat+long), `UN Location Code`, a `Facility` or an `Address`.\r\n        \r\n        If multiple ways are used - then they all have to point to the same location!\r\n      allOf:\r\n        - type: object\r\n          properties:\r\n            locationName:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/locationName'\r\n        - type: object\r\n          properties:\r\n            latitude:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/latitude'\r\n        - type: object\r\n          properties:\r\n            longitude:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/longitude'\r\n        - type: object\r\n          properties:\r\n            UNLocationCode:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/UNLocationCode'\r\n        - type: object\r\n          properties:\r\n            facilityCode:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/facilityCode'\r\n        - type: object\r\n          properties:\r\n            facilityCodeListProvider:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/facilityCodeListProvider'\r\n        - type: object\r\n          properties:\r\n            address:\r\n              description: 'Address related information'\r\n              allOf:\r\n                - $ref: '#/components/schemas/address'\r\n    idLocation:\r\n      type: object\r\n      description: |\r\n        An interfrace used to express a location using an id (`locationID`)\r\n        \r\n        **NB**: This interface has not been agreed\r\n      allOf:\r\n        - type: object\r\n          properties:\r\n            locationName:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/locationName'\r\n        - type: object\r\n          properties:\r\n            locationID:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/locationID'\r\n      required:\r\n        - locationID\r\n    addressLocation:\r\n      type: object\r\n      description: |\r\n        An interfrace used to express a location using an `Address` object\r\n      allOf:\r\n        - type: object\r\n          properties:\r\n            locationName:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/locationName'\r\n        - type: object\r\n          properties:\r\n            address:\r\n              description: 'Address related information'\r\n              allOf:\r\n                - $ref: '#/components/schemas/address'\r\n      required:\r\n        - address\r\n    facilityLocation:\r\n      type: object\r\n      description: |\r\n        An interfrace used to express a location using a `Facility`. The facility can either be expressed using a `BIC` code or a `SMDG` code\r\n      allOf:\r\n        - type: object\r\n          properties:\r\n            locationName:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/locationName'\r\n        - type: object\r\n          properties:\r\n            UNLocationCode:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/UNLocationCode'\r\n        - type: object\r\n          properties:\r\n            facilityCode:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/facilityCode'\r\n        - type: object\r\n          properties:\r\n            facilityCodeListProvider:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/facilityCodeListProvider'\r\n      required:\r\n        - facilityCode\r\n        - facilityCodeListProvider\r\n    facilitySMDGLocation:\r\n      type: object\r\n      description: |\r\n        An interfrace used to express a location using a `Facility` by the `SMDG` code list.\r\n      allOf:\r\n        - type: object\r\n          properties:\r\n            locationName:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/locationName'\r\n        - type: object\r\n          properties:\r\n            UNLocationCode:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/UNLocationCode'\r\n        - type: object\r\n          properties:\r\n            facilitySMDGCode:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/facilityCode'\r\n      required:\r\n        - facilitySMDGCode\r\n    geoLocation:\r\n      type: object\r\n      description: |\r\n        An interfrace used to express a location using `latitude` and `longitude`\r\n      allOf:\r\n        - type: object\r\n          properties:\r\n            locationName:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/locationName'\r\n        - type: object\r\n          properties:\r\n            latitude:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/latitude'\r\n        - type: object\r\n          properties:\r\n            longitude:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/longitude'\r\n      required:\r\n        - latitude\r\n        - longitude\r\n    unLocationLocation:\r\n      type: object\r\n      description: |\r\n        An interfrace used to express a location using a `Un Location Code`\r\n      allOf:\r\n        - type: object\r\n          properties:\r\n            locationName:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/locationName'\r\n        - type: object\r\n          properties:\r\n            UNLocationCode:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/UNLocationCode'\r\n      required:\r\n        - UNLocationCode\r\n    address:\r\n      type: object\r\n      description: |\r\n        An object for storing address related information\r\n      allOf:\r\n        - type: object\r\n          properties:\r\n            name:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/addressName'\r\n        - type: object\r\n          properties:\r\n            street:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/streetName'\r\n        - type: object\r\n          properties:\r\n            streetNumber:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/streetNumber'\r\n        - type: object\r\n          properties:\r\n            floor:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/floor'\r\n        - type: object\r\n          properties:\r\n            postCode:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/postCode'\r\n        - type: object\r\n          properties:\r\n            city:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/cityName'\r\n        - type: object\r\n          properties:\r\n            stateRegion:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/stateRegion'\r\n        - type: object\r\n          properties:\r\n            country:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/country'",
			"canonicalURL": "/github.com/dcsaorg/DCSA-OpenAPI@18caeb803330d26b2c25aba119a677d79647af54/-/blob/domain/location/dcsa_location_v2.0.0.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/dcsaorg/DCSA-OpenAPI/blob/18caeb803330d26b2c25aba119a677d79647af54/domain/location/dcsa_location_v2.0.0.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"addressLocation\": parse schema: allOf: [0]: parse schema: property \"locationName\": at 1:1352: parse schema: resolve \"https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/locationName\": external \"https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0\": get: https: do: Get \"https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0\": host \"api.swaggerhub.com\" is not allowed"
}