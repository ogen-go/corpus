{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/AliceO2Group/Bookkeeping"
		},
		"file": {
			"name": "openapi-source.yaml",
			"size": 0,
			"path": "go-api-client/openapi-source.yaml",
			"byteSize": 57028,
			"content": "openapi: 3.0.0\ninfo:\n  title: ALICE Bookkeeping\n  version: 0.0.0\n  license:\n    name: GNU General Public License v3.0\n    url: 'http://alice-o2.web.cern.ch/license'\nservers:\n  - url: /api\npaths:\n  /:\n    get:\n      operationId: getServerInformation\n      summary: Get server information\n      responses:\n        '200':\n          description: API information\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiInformation'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n  /attachments:\n    post:\n      operationId: createAttachment\n      summary: Create a new attachment on a log\n      requestBody:\n        $ref: '#/components/requestBodies/CreateAttachments'\n      responses:\n        '201':\n          $ref: '#/components/responses/ArrayOfAttachments'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n      tags:\n        - attachment\n  '/attachments/{attachmentId}':\n    parameters:\n      - $ref: '#/components/parameters/AttachmentId'\n    get:\n      operationId: getAttachment\n      summary: Get one specific attachment\n      responses:\n        '200':\n          $ref: '#/components/responses/ArrayOfAttachments'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n      tags:\n        - attachment\n  /environments:\n    get:\n      operationId: listEnvironments\n      summary: Fetches all the environments\n      responses:\n        '200':\n          $ref: '#/components/responses/ArrayOfEnvironments'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n      tags:\n       - environment\n    post:\n      operationId: createEnvironment\n      summary: Creation of the environment object.\n      requestBody:\n        $ref: '#/components/requestBodies/CreateEnvironment'\n      responses:\n        '201':\n          $ref: '#/components/responses/Environment'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '409':\n          $ref: '#/components/responses/Conflict'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n      tags:\n       - environment\n  /environments/{envId}:\n    parameters:\n      - $ref: '#/components/parameters/EnvId'\n    put:\n      operationId: replaceEnvironment\n      summary: Update of the environment object.\n      requestBody:\n        $ref: '#/components/requestBodies/UpdateEnvironment'\n      responses:\n        '201':\n          $ref: '#/components/responses/Environment'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '409':\n          $ref: '#/components/responses/Conflict'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n      tags:\n       - environment\n  /flps:\n    get:\n      operationId: listFlps\n      summary: List all flps\n      responses:\n        '200':\n          $ref: '#/components/responses/ArrayOfFlps'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n      tags:\n        - flp\n    post:\n      operationId: createFlp\n      summary: Adds a new flp\n      requestBody:\n        $ref: '#/components/requestBodies/CreateFlp'\n      responses:\n        '201':\n          $ref: '#/components/responses/Flp'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n      tags:\n        - flp\n  '/flps/{flpName}/runs/{runNumber}':\n    parameters:\n      - $ref: '#/components/parameters/FlpName'\n      - $ref: '#/components/parameters/RunNumber'\n    get:\n      operationId: getFlpById\n      summary: Gets a flp by Name\n      responses:\n        '200':\n          $ref: '#/components/responses/Flp'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n      tags:\n        - flp\n    patch:\n      operationId: updateFlp\n      summary: Update an existing flp\n      requestBody:\n        $ref: '#/components/requestBodies/UpdateFlp'\n      responses:\n        '200':\n          $ref: '#/components/responses/Flp'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n      tags:\n        - flp\n  /logs:\n    get:\n      operationId: listLogs\n      summary: List all logs\n      # parameters:\n        # - $ref: '#/components/parameters/Pagination'\n        # - $ref: '#/components/parameters/FilterLogs'\n        # - $ref: '#/components/parameters/LogSorting'\n      responses:\n        '200':\n          $ref: '#/components/responses/ArrayOfLogs'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n      tags:\n        - log\n    post:\n      operationId: createLog\n      summary: Adds a new log\n      requestBody:\n        $ref: '#/components/requestBodies/CreateLog'\n      responses:\n        '201':\n          $ref: '#/components/responses/Log'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n      tags:\n        - log\n  '/logs/{logId}':\n    parameters:\n      - $ref: '#/components/parameters/LogId'\n    get:\n      operationId: getLogById\n      summary: Gets a log by Id\n      responses:\n        '200':\n          $ref: '#/components/responses/Log'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n      tags:\n        - log\n  '/logs/{logId}/attachments':\n    parameters:\n      - $ref: '#/components/parameters/LogId'\n    get:\n      operationId: listLogAttachments\n      summary: Get all attachments associated with a log\n      responses:\n        '200':\n          $ref: '#/components/responses/ArrayOfAttachments'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n      tags:\n        - log\n  '/logs/{logId}/attachments/{attachmentId}':\n    parameters:\n      - $ref: '#/components/parameters/LogId'\n      - $ref: '#/components/parameters/AttachmentId'\n    get:\n      operationId: getLogAttachment\n      summary: Get one specific attachment associated with a log\n      responses:\n        '200':\n          $ref: '#/components/responses/Attachment'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n      tags:\n        - log\n  '/logs/{logId}/tags':\n    parameters:\n      - $ref: '#/components/parameters/LogId'\n    get:\n      operationId: listTagsByLogId\n      summary: Lists all tags associated with a log\n      responses:\n        '200':\n          $ref: '#/components/responses/ArrayOfTags'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n      tags:\n        - log\n  '/logs/{logId}/tree':\n    parameters:\n      - $ref: '#/components/parameters/LogId'\n    get:\n      operationId: getLogTree\n      summary: Get the Log tree for a given Log\n      responses:\n        '200':\n          $ref: '#/components/responses/LogTree'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n      tags:\n        - log\n  /runs:\n    get:\n      operationId: listRuns\n      summary: List all runs\n      # parameters:\n        # - $ref: '#/components/parameters/Pagination'\n        # - $ref: '#/components/parameters/RunSorting'\n      responses:\n        '200':\n          $ref: '#/components/responses/ArrayOfRuns'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n      tags:\n        - run\n    post:\n      operationId: createRun\n      summary: Creates a run\n      requestBody:\n        $ref: '#/components/requestBodies/CreateRun'\n      responses:\n        '201':\n          $ref: '#/components/responses/Run'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '409':\n          $ref: '#/components/responses/Conflict'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n      tags:\n        - run\n  '/runs/{runId}':\n    parameters:\n      - $ref: '#/components/parameters/RunId'\n    get:\n      operationId: getRunById\n      summary: Gets a run by Id\n      responses:\n        '200':\n          $ref: '#/components/responses/Run'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n      tags:\n        - run\n    patch:\n      operationId: updateRun\n      summary: Updates certain fields of a run\n      requestBody:\n        $ref: '#/components/requestBodies/UpdateRun'\n      responses:\n        '201':\n          $ref: '#/components/responses/Run'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '409':\n          $ref: '#/components/responses/Conflict'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n      tags:\n        - run\n  /status:\n    get:\n      operationId: getDeployInformation\n      summary: Get deploy information\n      responses:\n        '200':\n          description: Deploy information\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeployInformation'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n  /subsystems:\n    get:\n      operationId: listSubsystems\n      summary: List all subsystems\n      # parameters:\n        # - $ref: '#/components/parameters/Pagination'\n      responses:\n        '200':\n          $ref: '#/components/responses/ArrayOfSubsystems'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n      tags:\n        - subsystem\n    post:\n      operationId: createSubsystem\n      summary: Adds a new subsystem\n      requestBody:\n        $ref: '#/components/requestBodies/CreateSubsystem'\n      responses:\n        '201':\n          $ref: '#/components/responses/Subsystem'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '409':\n          $ref: '#/components/responses/Conflict'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n      tags:\n        - subsystem\n  '/subsystems/{subsystemId}':\n    parameters:\n      - $ref: '#/components/parameters/SubsystemId'\n    get:\n      operationId: getSubsystem\n      summary: Get a subsystem by Id\n      responses:\n        '200':\n          $ref: '#/components/responses/Subsystem'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n      tags:\n        - subsystem\n    delete:\n      operationId: deleteSubsystem\n      summary: Deletes a subsystem by Id\n      responses:\n        '200':\n          $ref: '#/components/responses/Subsystem'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n      tags:\n        - subsystem\n  /tags:\n    get:\n      operationId: listTags\n      summary: List all tags\n      # parameters:\n        # - $ref: '#/components/parameters/Pagination'\n      responses:\n        '200':\n          $ref: '#/components/responses/ArrayOfTags'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n      tags:\n        - tag\n    post:\n      operationId: createTag\n      summary: Adds a new tag\n      requestBody:\n        $ref: '#/components/requestBodies/CreateTag'\n      responses:\n        '201':\n          $ref: '#/components/responses/Tag'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '409':\n          $ref: '#/components/responses/Conflict'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n      tags:\n        - tag\n  '/tags/{tagId}':\n    parameters:\n      - $ref: '#/components/parameters/TagId'\n    get:\n      operationId: getTagById\n      summary: Gets a tag by Id\n      responses:\n        '200':\n          $ref: '#/components/responses/Tag'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n      tags:\n        - tag\n    delete:\n      operationId: deleteTagById\n      summary: Deletes a tag by Id\n      responses:\n        '200':\n          $ref: '#/components/responses/Tag'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n      tags:\n        - tag\n  '/tags/{tagId}/logs':\n    parameters:\n      - $ref: '#/components/parameters/TagId'\n    get:\n      operationId: getLogsByTagId\n      summary: Gets all logs with this tag id\n      responses:\n        '200':\n          $ref: '#/components/responses/ArrayOfLogs'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n      tags:\n        - tag\ncomponents:\n  parameters:\n    AttachmentId:\n      name: attachmentId\n      description: The id of the attached to retrieve\n      in: path\n      required: true\n      schema:\n        $ref: '#/components/schemas/EntityId'\n    EnvId:\n      name: envId\n      description: The id of the environment to receive\n      in: path\n      required: true\n      schema:\n        $ref: '#/components/schemas/EnvironmentId'\n    FilterLogs:\n      name: filter\n      description: Specifies the filter requirements.\n      in: query\n      schema:\n        $ref: '#/components/schemas/FilterLogsOptions'\n      style: deepObject\n    FlpName:\n      name: flpName\n      description: The id of the flp to retrieve\n      in: path\n      required: true\n      schema:\n        $ref: '#/components/schemas/FlpName'\n    RunNumber:\n      name: runNumber\n      description: The id of the runNumber to retrieve\n      in: path\n      required: true\n      schema:\n        $ref: '#/components/schemas/EntityId'\n    FlpSorting:\n      in: query\n      name: sort\n      description: Specifies the flp sorting requirements.\n      required: false\n      schema:\n        $ref: '#/components/schemas/FlpSortOptions'\n      style: deepObject\n    LogId:\n      name: logId\n      description: The id of the log to retrieve\n      in: path\n      required: true\n      schema:\n        $ref: '#/components/schemas/EntityId'\n    LogSorting:\n      in: query\n      name: sort\n      description: Specifies the log sorting requirements.\n      required: false\n      schema:\n        $ref: '#/components/schemas/LogSortOptions'\n      style: deepObject\n    Pagination:\n      name: page\n      description: Specifies the pagination requirements.\n      in: query\n      schema:\n        $ref: '#/components/schemas/PaginationOptions'\n      style: deepObject\n    RunId:\n      name: runId\n      description: The id of the run to retrieve\n      in: path\n      required: true\n      schema:\n        $ref: '#/components/schemas/EntityId'\n    RunSorting:\n      in: query\n      name: sort\n      description: Specifies the run sorting requirements.\n      required: false\n      schema:\n        $ref: '#/components/schemas/RunSortOptions'\n      style: deepObject\n    SubsystemId:\n      name: subsystemId\n      description: The id of the subsystem to retrieve\n      in: path\n      required: true\n      schema:\n        $ref: '#/components/schemas/EntityId'\n    TagId:\n      name: tagId\n      description: The id of the tag to retrieve\n      in: path\n      required: true\n      schema:\n        $ref: '#/components/schemas/EntityId'\n  requestBodies:\n    CreateEnvironment:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreateEnvironment'\n    CreateRun:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Run'\n    UpdateRun:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Run'\n    CreateAttachments:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreateAttachments'\n    CreateFlp:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreateFlp'\n    CreateLog:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreateLog'\n    CreateSubsystem:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreateSubsystem'\n    CreateTag:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreateTag'\n    UpdateEnvironment:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UpdateEnvironment'\n    UpdateFlp:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UpdateFlp'\n  responses:\n    ArrayOfAttachments:\n      description: Expected response to a valid request.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ArrayOfAttachmentsResponse'\n    ArrayOfEnvironments:\n      description: Expected response to a valid request.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ArrayOfEnvironmentsResponse'\n    ArrayOfFlps:\n      description: Expected response to a valid request.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ArrayOfFlpsResponse'\n    ArrayOfLogs:\n      description: Expected response to a valid request.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ArrayOfLogsResponse'\n    ArrayOfRuns:\n      description: Expected response to a valid request.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ArrayOfRunsResponse'\n    ArrayOfSubsystems:\n      description: Expected response to a valid request.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ArrayOfSubsystemsResponse'\n    ArrayOfTags:\n      description: Expected response to a valid request.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ArrayOfTagsResponse'\n    Attachment:\n      description: Expected response to a valid request.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AttachmentResponse'\n    BadRequest:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Errors'\n    Conflict:\n      description: Conflict\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Errors'\n    Environment:\n      description: Expected response to a valid request.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/EnvironmentResponse'\n    Flp:\n      description: Expected response to a valid request.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/FlpResponse'\n    Forbidden:\n      description: Forbidden\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Errors'\n    Log:\n      description: Expected response to a valid request.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/LogResponse'\n    LogTree:\n      description: Expected response to a valid request.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/LogTreeResponse'\n    NotFound:\n      description: Not Found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Errors'\n    Run:\n      description: Expected response to a valid request.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/RunResponse'\n    ServiceUnavailable:\n      description: Service Unavailable\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Errors'\n    Subsystem:\n      description: Expected response to a valid request.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SubsystemResponse'\n    Tag:\n      description: Expected response to a valid request.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/TagResponse'\n    UnexpectedError:\n      description: Unexpected Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Errors'\n  securitySchemes:\n    ApiKeyAuth:\n      type: apiKey\n      in: query\n      name: token\n  schemas:\n    ApiInformation:\n      description: API information\n      type: object\n      properties:\n        name:\n          description: Name of the API\n          type: string\n        version:\n          description: Version of the API\n          type: string\n      required:\n        - name\n        - version\n      additionalProperties: false\n    ArrayOfAttachments:\n      description: A list of attachment objects.\n      type: array\n      items:\n        $ref: '#/components/schemas/Attachment'\n    ArrayOfAttachmentsResponse:\n      description: Response containing multiple attachments.\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/ArrayOfAttachments'\n      required:\n        - data\n      additionalProperties: false\n    ArrayOfEnvironments:\n      description: A list of Environment objects.\n      type: array\n      items:\n        $ref: '#/components/schemas/Environment'\n    ArrayOfEnvironmentsResponse:\n      description: Response containing multiple environments.\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/ArrayOfEnvironments'\n        meta:\n          $ref: '#/components/schemas/ArrayOfEnvironmentsResponseMeta'\n      required:\n        - data\n      additionalProperties: false\n    ArrayOfEnvironmentsResponseMeta:\n      description: The metadata related to an array of Environments response.\n      type: object\n      properties:\n        page:\n          $ref: '#/components/schemas/PaginationMeta'\n      required:\n        - page\n      additionalProperties: false\n    ArrayOfFlps:\n      description: A list of Flp objects.\n      type: array\n      items:\n        $ref: '#/components/schemas/Flp'\n    ArrayOfFlpsResponse:\n      description: Response containing multiple flps.\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/ArrayOfFlps'\n        meta:\n          $ref: '#/components/schemas/ArrayOfFlpsResponseMeta'\n      required:\n        - data\n      additionalProperties: false\n    ArrayOfFlpsResponseMeta:\n      description: The metadata related to an array of flps response.\n      type: object\n      properties:\n        page:\n          $ref: '#/components/schemas/PaginationMeta'\n      required:\n        - page\n      additionalProperties: false\n    ArrayOfLogTrees:\n      description: A list of Log tree objects.\n      type: array\n      items:\n        $ref: '#/components/schemas/LogTree'\n    ArrayOfLogs:\n      description: A list of Log objects.\n      type: array\n      items:\n        $ref: '#/components/schemas/Log'\n    ArrayOfLogsResponse:\n      description: Response containing multiple logs.\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/ArrayOfLogs'\n        meta:\n          $ref: '#/components/schemas/ArrayOfLogsResponseMeta'\n      required:\n        - data\n      additionalProperties: false\n    ArrayOfLogsResponseMeta:\n      description: The metadata related to an array of logs response.\n      type: object\n      properties:\n        page:\n          $ref: '#/components/schemas/PaginationMeta'\n      required:\n        - page\n      additionalProperties: false\n    RunNumbers:\n      description: A serialized string of run numbers\n      type: string\n      example: \"1,2,3,4,5,6,7,8\"\n    ArrayOfRuns:\n      description: A list of Run objects.\n      type: array\n      items:\n        $ref: '#/components/schemas/Run'\n    ArrayOfRunsResponse:\n      description: Response containing multiple runs.\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/ArrayOfRuns'\n        meta:\n          $ref: '#/components/schemas/ArrayOfRunsResponseMeta'\n      required:\n        - data\n      additionalProperties: false\n    ArrayOfRunsResponseMeta:\n      description: The metadata related to an array of runs response.\n      type: object\n      properties:\n        page:\n          $ref: '#/components/schemas/PaginationMeta'\n      required:\n        - page\n      additionalProperties: false\n    ArrayOfSubsystems:\n      description: A list of Subsystem objects.\n      type: array\n      items:\n        $ref: '#/components/schemas/Subsystem'\n    ArrayOfSubsystemsResponse:\n      description: Response containing multiple subsystems.\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/ArrayOfSubsystems'\n        meta:\n          $ref: '#/components/schemas/ArrayOfSubsystemsResponseMeta'\n      required:\n        - data\n      additionalProperties: false\n    ArrayOfSubsystemsResponseMeta:\n      description: The metadata related to an array of subsystems response.\n      type: object\n      properties:\n        page:\n          $ref: '#/components/schemas/PaginationMeta'\n      required:\n        - page\n      additionalProperties: false\n    ArrayOfTags:\n      description: A list of Tag objects.\n      type: array\n      items:\n        $ref: '#/components/schemas/Tag'\n    ArrayOfTagsResponse:\n      description: Response containing multiple tags.\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/ArrayOfTags'\n      required:\n        - data\n      additionalProperties: false\n    Attachment:\n      description: Describes metadata of an attachment.\n      type: object\n      properties:\n        createdAt:\n          description: Unix timestamp when this entity was created.\n          type: integer\n          format: int32\n          example: 853113599\n        encoding:\n          $ref: '#/components/schemas/FileEncoding'\n        fileName:\n          $ref: '#/components/schemas/FileName'\n        id:\n          $ref: '#/components/schemas/EntityId'\n        logId:\n          $ref: '#/components/schemas/EntityId'\n        mimeType:\n          $ref: '#/components/schemas/FileMimeType'\n        originalName:\n          $ref: '#/components/schemas/FileOriginalName'\n        path:\n          $ref: '#/components/schemas/FilePath'\n        size:\n          $ref: '#/components/schemas/FileSize'\n        updatedAt:\n          description: Unix timestamp when this entity was created.\n          type: integer\n          format: int32\n          example: 853113599\n      required:\n        - id\n      additionalProperties: false\n    AttachmentResponse:\n      description: Response containing a single attachment.\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/Attachment'\n      required:\n        - data\n      additionalProperties: false\n    CommaSeparatedEntityIds:\n      description: CSV style string of EntityIds.\n      type: string\n      pattern: '^([1-9]+\\d*,)*[1-9]+\\d*$'\n      example: '1,2,3'\n    CreateAttachments:\n      description: Describes an attachment\n      type: object\n      properties:\n        attachments:\n          $ref: '#/components/schemas/ArrayOfAttachments'\n      additionalProperties: false\n    CreateEnvironment:\n      description: Describes an environment\n      type: object\n      properties:\n        envId:\n          $ref: '#/components/schemas/EnvironmentId'\n        createdAt:\n          $ref: '#/components/schemas/EnvironmentAt'\n        status:\n          $ref: '#/components/schemas/EnvironmentStatus'\n        statusMessage:\n          $ref: '#/components/schemas/EnvironmentStatusMessage'\n      required:\n        - envId\n      additionalProperties: false\n    CreateFlp:\n      description: Describes an flp\n      type: object\n      properties:\n        name:\n          $ref: '#/components/schemas/FlpName'\n        hostname:\n          $ref: '#/components/schemas/FlpHostname'\n        runNumber:\n          $ref: '#/components/schemas/RunNumber'\n      required:\n        - name\n        - hostname\n      additionalProperties: false\n    CreateLog:\n      description: Describes an intervention or an event that happened.\n      type: object\n      properties:\n        attachments:\n          $ref: '#/components/schemas/ArrayOfAttachments'\n        parentLogId:\n          $ref: '#/components/schemas/EntityId'\n        text:\n          $ref: '#/components/schemas/LogText'\n        title:\n          $ref: '#/components/schemas/LogTitle'\n        runNumbers:\n          $ref: '#/components/schemas/RunNumbers'\n      required:\n        - text\n        - title\n      additionalProperties: false\n    CreateSubsystem:\n      description: A label attached to something for the purpose of identification.\n      type: object\n      properties:\n        text:\n          description: The label value of the subsystem.\n          type: string\n      required:\n        - text\n      additionalProperties: false\n    CreateTag:\n      description: A label attached to something for the purpose of identification.\n      type: object\n      properties:\n        text:\n          description: The label value of the tag.\n          type: string\n      required:\n        - text\n      additionalProperties: false\n    DeployInformation:\n      description: Deploy information\n      type: object\n      properties:\n        age:\n          description: The number of seconds that the server is online.\n          type: number\n        start:\n          description: The unix timestamp of the moment that the the server went online.\n          type: integer\n          format: int32\n          example: 853113599\n      required:\n        - age\n        - start\n      additionalProperties: false\n    Entity:\n      description: Base entity.\n      type: object\n      properties:\n        createdAt:\n          description: Unix timestamp when this entity was created.\n          type: integer\n          format: int32\n          example: 853113599\n        id:\n          $ref: '#/components/schemas/EntityId'\n        updatedAt:\n          description: Unix timestamp when this entity was last updated.\n          type: integer\n          format: int32\n          example: 853113599\n      required:\n        - id\n    EntityId:\n      description: The unique identifier of this entity.\n      type: integer\n      format: int32\n      minimum: 1\n    Environment:\n      description: The Environment object.\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/EnvironmentId'\n        createdAt:\n          description: Unix timestamp when this entity was created.\n          type: integer\n          minimum: 0\n          example: 853113599\n        updatedAt:\n          description: Unix timestamp when this entity was last updated.\n          type: integer\n          minimum: 0\n          example: 853113599\n        toredownAt:\n          description: Unix timestamp when this entity was tore down.\n          type: string\n          format: date-time\n          example: 853113599\n          nullable: true\n        status:\n          description: The status of the environment.\n          type: string\n          nullable: true\n        statusMessage:\n          description: \u003e-\n            A message explaining the status or the current state of the\n            environment.\n          type: string\n          nullable: true\n        runs:\n          description: Array of minified Run objects.\n          type: array\n          items:\n            $ref: '#/components/schemas/Run'\n      required:\n        - id\n      additionalProperties: false\n    EnvironmentAt:\n      description: The earliest allowed unix timestamp for the fetched data.\n      type: string\n      format: date-time\n    EnvironmentId:\n      description: The environment identifier.\n      type: string\n    EnvironmentResponse:\n      description: The Environment response object\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/Environment'\n      required:\n        - data\n      additionalProperties: false\n    EnvironmentRun:\n      description: Run that needs to be added.\n      type: integer\n      minimum: 0\n    EnvironmentStatus:\n      description: Current environment status\n      type: string\n      nullable: true\n    EnvironmentStatusMessage:\n      description: Message about the current status.\n      type: string\n      nullable: true\n    Error:\n      description: An Error object.\n      type: object\n      properties:\n        detail:\n          description: \u003e-\n            A human-readable explanation specific to this occurrence of the\n            problem.\n          type: string\n        source:\n          $ref: '#/components/schemas/ErrorSource'\n        status:\n          description: The HTTP status code applicable to this problem.\n          type: string\n        title:\n          description: 'A short, human-readable summary of the problem.'\n          type: string\n      required:\n        - status\n        - title\n      additionalProperties: false\n    ErrorSource:\n      description: An object containing references to the source of the error.\n      type: object\n      properties:\n        pointer:\n          description: A pointer to the associated entity in the request document.\n          type: string\n      additionalProperties: false\n    Errors:\n      description: A list of Error objects.\n      type: object\n      properties:\n        errors:\n          description: A list of Error objects.\n          type: array\n          items:\n            $ref: '#/components/schemas/Error'\n          minItems: 1\n      required:\n        - errors\n      additionalProperties: false\n    FileEncoding:\n      description: Encoding used on the file.\n      type: string\n    FileMimeType:\n      description: Mime-type of a file.\n      type: string\n    FileName:\n      description: Name of a file.\n      type: string\n    FileOriginalName:\n      description: Original name of a file.\n      type: string\n    FilePath:\n      description: Path of where the file is stored.\n      type: string\n    FileSize:\n      description: Size of a file.\n      type: integer\n      format: int32\n    FilterLogsCreatedOptions:\n      description: Specifies the creation time related filter requirements for a request.\n      type: object\n      properties:\n        from:\n          description: The earliest allowed unix timestamp for the fetched data.\n          type: integer\n          format: int32\n          example: 853113599\n        to:\n          description: The latest allowed unix timestamp for the fetched data.\n          type: integer\n          format: int32\n          example: 853113599\n      additionalProperties: false\n    FilterLogsOptions:\n      description: Specifies the log related filter requirements for a request.\n      type: object\n      properties:\n        author:\n          description: Name of the author.\n          type: string\n          example: John Doe\n        created:\n          $ref: '#/components/schemas/FilterLogsCreatedOptions'\n        origin:\n          $ref: '#/components/schemas/LogOrigin'\n        parentLog:\n          $ref: '#/components/schemas/EntityId'\n        rootLog:\n          $ref: '#/components/schemas/EntityId'\n        tag:\n          $ref: '#/components/schemas/FilterLogsTagOptions'\n        title:\n          $ref: '#/components/schemas/LogTitle'\n      additionalProperties: false\n    FilterLogsTagOptions:\n      description: Specifies the tag related filter requirements for a request.\n      type: object\n      properties:\n        operation:\n          description: The operation indicating the relation between the data.\n          type: string\n          enum:\n            - and\n            - or\n        values:\n          $ref: '#/components/schemas/CommaSeparatedEntityIds'\n      required:\n        - operation\n        - values\n      additionalProperties: false\n    Flp:\n      description: Describes an intervention or an event that happened.\n      type: object\n      properties:\n        bytesEquipmentReadOut:\n          $ref: '#/components/schemas/FlpBytesEquipmentReadOut'\n        bytesFairMQReadOut:\n          $ref: '#/components/schemas/FlpBytesFairMQReadOut'\n        bytesProcessed:\n          $ref: '#/components/schemas/FlpBytesProcessed'\n        bytesRecordingReadOut:\n          $ref: '#/components/schemas/FlpBytesRecordingReadOut'\n        createdAt:\n          description: Unix timestamp when this entity was created.\n          type: integer\n          format: int32\n          example: 853113599\n        hostname:\n          $ref: '#/components/schemas/FlpHostname'\n        id:\n          $ref: '#/components/schemas/EntityId'\n        nTimeframes:\n          $ref: '#/components/schemas/FlpTimeframes'\n        name:\n          $ref: '#/components/schemas/FlpName'\n        updatedAt:\n          description: Unix timestamp when this entity was last updated.\n          type: integer\n          format: int32\n          example: 853113599\n      required:\n        - bytesEquipmentReadOut\n        - bytesFairMQReadOut\n        - bytesProcessed\n        - bytesRecordingReadOut\n        - hostname\n        - id\n        - nTimeframes\n        - name\n      additionalProperties: false\n    FlpBytesEquipmentReadOut:\n      description: \u003e-\n        Total data volume out from the readout 'equipment' component in bytes.\n        Can reach PetaBytes. Updated regularly.\n      type: integer\n      format: int32\n    FlpBytesFairMQReadOut:\n      description: \u003e-\n        Total data volume out from the readout 'fmq' component in bytes. Can\n        reach PetaBytes. Updated regularly.\n      type: integer\n      format: int32\n    FlpBytesProcessed:\n      description: Total data volume read out in bytes.\n      type: integer\n      format: int32\n    FlpBytesRecordingReadOut:\n      description: \u003e-\n        Total data volume out from the readout 'recording' component in bytes.\n        Can reach PetaBytes. Updated regularly.\n      type: integer\n      format: int32\n    FlpHostname:\n      description: FLP hostname.\n      type: string\n    FlpName:\n      description: FLP name.\n      type: string\n    FlpResponse:\n      description: Response containing a single flp.\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/Flp'\n      required:\n        - data\n      additionalProperties: false\n    FlpSortOptions:\n      description: Specifies the sorting requirements of a flp request.\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/SortOrder'\n      additionalProperties: false\n    FlpTimeframes:\n      description: Number of subtimeframes processed in this FLP. Updated regularly.\n      type: integer\n      format: int32\n    Log:\n      description: Describes an intervention or an event that happened.\n      type: object\n      properties:\n        attachments:\n          $ref: '#/components/schemas/ArrayOfAttachments'\n        author:\n          $ref: '#/components/schemas/User'\n        createdAt:\n          description: Unix timestamp when this entity was created.\n          type: integer\n          format: int32\n          example: 853113599\n        id:\n          $ref: '#/components/schemas/EntityId'\n        origin:\n          $ref: '#/components/schemas/LogOrigin'\n        parentLogId:\n          $ref: '#/components/schemas/EntityId'\n        replies:\n          $ref: '#/components/schemas/LogReplies'\n        rootLogId:\n          $ref: '#/components/schemas/EntityId'\n        runs:\n          description: Array of minified Run objects.\n          type: array\n          items:\n            description: Minified Run object.\n            type: object\n            properties:\n              id:\n                $ref: '#/components/schemas/EntityId'\n              runNumber:\n                $ref: '#/components/schemas/RunNumber'\n            required:\n              - id\n              - runNumber\n            additionalProperties: false\n        subsystems:\n          $ref: '#/components/schemas/ArrayOfSubsystems'\n        subtype:\n          $ref: '#/components/schemas/LogSubtype'\n        tags:\n          $ref: '#/components/schemas/ArrayOfTags'\n        text:\n          $ref: '#/components/schemas/LogText'\n        title:\n          $ref: '#/components/schemas/LogTitle'\n        updatedAt:\n          description: Unix timestamp when this entity was last updated.\n          type: integer\n          format: int32\n          example: 853113599\n      required:\n        - author\n        - id\n        - origin\n        - parentLogId\n        - rootLogId\n        - subtype\n        - text\n        - title\n      additionalProperties: false\n    LogOrigin:\n      description: Type of creator.\n      type: string\n      enum:\n        - human\n        - process\n    LogReplies:\n      description: The amount of children of a root log.\n      type: integer\n      format: int32\n    LogResponse:\n      description: Response containing a single log.\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/Log'\n      required:\n        - data\n      additionalProperties: false\n    LogSortOptions:\n      description: Specifies the sorting requirements of a log request.\n      type: object\n      properties:\n        author:\n          $ref: '#/components/schemas/SortOrder'\n        createdAt:\n          $ref: '#/components/schemas/SortOrder'\n        id:\n          $ref: '#/components/schemas/SortOrder'\n        tags:\n          $ref: '#/components/schemas/SortOrder'\n        title:\n          $ref: '#/components/schemas/SortOrder'\n      additionalProperties: false\n    LogSubtype:\n      description: The subtype of a Log.\n      type: string\n      enum:\n        - run\n        - subsystem\n        - announcement\n        - intervention\n        - comment\n    LogText:\n      description: Body of the log.\n      type: string\n      minLength: 3\n    LogTitle:\n      description: Title of the log.\n      type: string\n      minLength: 3\n      maxLength: 140\n    LogTree:\n      description: Describes an intervention or an event that happened.\n      type: object\n      properties:\n        attachments:\n          $ref: '#/components/schemas/ArrayOfAttachments'\n        author:\n          $ref: '#/components/schemas/User'\n        children:\n          $ref: '#/components/schemas/ArrayOfLogTrees'\n        createdAt:\n          description: Unix timestamp when this entity was created.\n          type: integer\n          format: int32\n          example: 853113599\n        id:\n          $ref: '#/components/schemas/EntityId'\n        origin:\n          $ref: '#/components/schemas/LogOrigin'\n        parentLogId:\n          $ref: '#/components/schemas/EntityId'\n        replies:\n          $ref: '#/components/schemas/LogReplies'\n        rootLogId:\n          $ref: '#/components/schemas/EntityId'\n        runs:\n          description: Array of minified Run objects.\n          type: array\n          items:\n            description: Minified Run object.\n            type: object\n            properties:\n              id:\n                $ref: '#/components/schemas/EntityId'\n              runNumber:\n                $ref: '#/components/schemas/RunNumber'\n            required:\n              - id\n              - runNumber\n            additionalProperties: false\n        subsystems:\n          $ref: '#/components/schemas/ArrayOfSubsystems'\n        subtype:\n          $ref: '#/components/schemas/LogSubtype'\n        tags:\n          $ref: '#/components/schemas/ArrayOfTags'\n        text:\n          $ref: '#/components/schemas/LogText'\n        title:\n          $ref: '#/components/schemas/LogTitle'\n        updatedAt:\n          description: Unix timestamp when this entity was last updated.\n          type: integer\n          format: int32\n          example: 853113599\n      required:\n        - author\n        - children\n        - id\n        - origin\n        - parentLogId\n        - rootLogId\n        - subtype\n        - text\n        - title\n      additionalProperties: false\n    LogTreeResponse:\n      description: Response containing a single log tree.\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/LogTree'\n      required:\n        - data\n      additionalProperties: false\n    PaginationLimit:\n      description: The numbers of items to return.\n      type: integer\n      minimum: 1\n      maximum: 100\n      default: 100\n    PaginationMeta:\n      description: The metadata related to pagination.\n      type: object\n      properties:\n        pageCount:\n          description: The total number of pages which contain data.\n          type: integer\n          format: int32\n        totalCount:\n          description: The total number of elements in the collection\n          type: integer\n          format: int32\n      required:\n        - pageCount\n        - totalCount\n      additionalProperties: false\n    PaginationOffset:\n      description: The number of items to skip before starting to collect the result set.\n      type: integer\n      format: int32\n      default: 0\n    PaginationOptions:\n      description: Specifies the pagination requirements of a request.\n      type: object\n      properties:\n        limit:\n          $ref: '#/components/schemas/PaginationLimit'\n        offset:\n          $ref: '#/components/schemas/PaginationOffset'\n      additionalProperties: false\n    Run:\n      description: Describes an intervention or an event that happened.\n      type: object\n      properties:\n        environmentId:\n          $ref: '#/components/schemas/RunEnvironmentId'\n        bytesReadOut:\n          $ref: '#/components/schemas/RunBytesReadOut'\n        createdAt:\n          description: Unix timestamp when this entity was created.\n          type: integer\n          format: int32\n          example: 853113599\n        id:\n          $ref: '#/components/schemas/EntityId'\n        nDetectors:\n          $ref: '#/components/schemas/RunDetectors'\n        nEpns:\n          $ref: '#/components/schemas/RunEpns'\n        nFlps:\n          $ref: '#/components/schemas/RunFlps'\n        nSubtimeframes:\n          $ref: '#/components/schemas/RunSubtimeframes'\n        pdpBeamType:\n          description: Beam type of the pdp\n          type: string\n        pdpConfigOption:\n          description: Repository hash\n          type: string\n        pdpTopologyDescriptionLibraryFile:\n          description: Library file location of the pdp topology descrption.\n          type: string\n        pdpWorkflowParameters:\n          description: Parameters given to the pdp workflow.\n          type: string\n        readoutCfgUri:\n          description: Config uri of readout.\n          type: string\n        runNumber:\n          $ref: '#/components/schemas/RunNumber'\n        runQuality:\n          $ref: '#/components/schemas/RunQuality'\n        runType:\n          $ref: '#/components/schemas/RunType'\n        tfbDdMode:\n          type: string\n          maxLength: 64\n          example: processing\n        timeO2End:\n          $ref: '#/components/schemas/RunO2End'\n        timeO2Start:\n          $ref: '#/components/schemas/RunO2Start'\n        timeTrgEnd:\n          $ref: '#/components/schemas/RunTrgEnd'\n        timeTrgStart:\n          $ref: '#/components/schemas/RunTrgStart'\n        triggerValue:\n          description: Trigger value\n          type: string\n          enum:\n            - OFF\n            - LTU\n            - CTP\n        odcTopologyFullName:\n          description: The fullname or file location of the odcTopology\n          type: string\n        dd_flp:\n          $ref: '#/components/schemas/DD_FLP'\n        dcs:\n          $ref: '#/components/schemas/DCS'\n        epn:\n          $ref: '#/components/schemas/EPN'\n        epnTopology:\n          $ref: '#/components/schemas/EPN_Topology'\n        detectors:\n          $ref: '#/components/schemas/DETECTORS'\n        updatedAt:\n          description: Unix timestamp when this entity was last updated.\n          type: integer\n          format: int32\n          example: 853113599\n        lhcPeriod:\n          description: A string that marks the period of the lhc\n          type: string\n      additionalProperties: false\n    RunEnvironmentId:\n      description: The unique identifier of this entity.\n      type: string\n    RunBytesReadOut:\n      description: Total data volume read out from the detectors by the O2 system in bytes.\n      type: integer\n      format: int32\n    RunDetectors:\n      description: The amount of detectors in a single run.\n      type: integer\n      format: int32\n    RunEpns:\n      description: The amount of Epns nodes in a single run.\n      type: integer\n      format: int32\n    RunFlps:\n      description: The amount of Flps nodes in a single run.\n      type: integer\n      format: int32\n    RunNumber:\n      description: The unique identifier of this entity.\n      type: integer\n      format: int32\n    RunO2End:\n      description: Unix timestamp when this entity was created in miliseconds.\n      type: integer\n      format: int64\n      example: 853113599\n    RunO2Start:\n      description: Unix timestamp when this entity was created in miliseconds.\n      type: integer\n      format: int64\n      example: 853113599\n    RunOrigin:\n      description: Type of creator.\n      type: string\n      enum:\n        - process\n    RunQuality:\n      description: Specifies the type of run.\n      type: string\n      enum:\n        - good\n        - bad\n        - test\n        - null\n      nullable: true\n    RunResponse:\n      description: Response containing a single run.\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/Run'\n      required:\n        - data\n      additionalProperties: false\n    RunSortOptions:\n      description: Specifies the sorting requirements of a run request.\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/SortOrder'\n      additionalProperties: false\n    RunSubtimeframes:\n      description: Total number of subtimeframes processed by the O2 system.\n      type: integer\n      format: int32\n    RunTrgEnd:\n      description: Unix timestamp when this entity was created in miliseconds.\n      type: integer\n      format: int64\n      example: 853113599\n    RunTrgStart:\n      description: Unix timestamp when this entity was created in miliseconds.\n      type: integer\n      format: int64\n      example: 853113599\n    DD_FLP:\n      description: Boolean for Data Distrubution (FLP), On or Off.\n      type: boolean\n      example: 1\n    DCS:\n      description: Boolean for DCS, On or Off.\n      type: boolean\n      example: 1\n    EPN:\n      description: Boolean for EPN, On or Off.\n      type: boolean\n      example: 1\n    EPN_Topology:\n      description: Topology for EPN.\n      type: string\n      example: 'normal'\n    DETECTORS:\n      description: Adds one or multiple detectors to the run.\n      type: string\n      enum:\n        - \"CPV\"\n        - \"EMC\" \n        - \"FDD\"\n        - \"FT0\"\n        - \"FV0\"\n        - \"HMP\"\n        - \"ITS\"\n        - \"MCH\"\n        - \"MFT\"\n        - \"MID\"\n        - \"PHS\"\n        - \"TOF\"\n        - \"TPC\"\n        - \"TRD\"\n        - \"TST\"\n        - \"ZDC\"\n    RunType:\n      description: Specifies the type of run.\n      type: string\n    SortOrder:\n      description: Specifies the sorting direction of a sorting option.\n      type: string\n      enum:\n        - asc\n        - desc\n    Subsystem:\n      description: A label attached to something for the purpose of identification.\n      type: object\n      properties:\n        createdAt:\n          description: Unix timestamp when this entity was created.\n          type: integer\n          format: int32\n          example: 853113599\n        id:\n          $ref: '#/components/schemas/EntityId'\n        name:\n          description: The label value of the subsystem.\n          type: string\n        updatedAt:\n          description: Unix timestamp when this entity was last updated.\n          type: integer\n          format: int32\n          example: 853113599\n      required:\n        - id\n        - name\n      additionalProperties: false\n    SubsystemResponse:\n      description: Response containing a single subsystem.\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/Subsystem'\n      required:\n        - data\n      additionalProperties: false\n    Tag:\n      description: A label attached to something for the purpose of identification.\n      type: object\n      properties:\n        createdAt:\n          description: Unix timestamp when this entity was created.\n          type: integer\n          format: int32\n          example: 853113599\n        id:\n          $ref: '#/components/schemas/EntityId'\n        text:\n          description: The label value of the tag.\n          type: string\n        email:\n          description: The email for the tag.\n          type: string\n          nullable: true\n        mattermost:\n          description: All the mattermost tags for updates\n          type: string\n          nullable: true\n        updatedAt:\n          description: Unix timestamp when this entity was last updated.\n          type: integer\n          format: int32\n          example: 853113599\n        lastEditedName:\n          description: The last person that edited the email/mattermost fields\n          type: string\n          nullable: true\n      required:\n        - id\n        - text\n      additionalProperties: false\n    TagResponse:\n      description: Response containing a single tag.\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/Tag'\n      required:\n        - data\n      additionalProperties: false\n    UpdateEnvironment:\n      description: Describes an update to an environment\n      type: object\n      properties:\n        toredownAt:\n          $ref: '#/components/schemas/EnvironmentAt'\n        status:\n          $ref: '#/components/schemas/EnvironmentStatus'\n        statusMessage:\n          $ref: '#/components/schemas/EnvironmentStatusMessage'\n        run:\n          $ref: '#/components/schemas/EnvironmentRun'\n      additionalProperties: false\n    UpdateFlp:\n      description: Describes an update to an flp\n      type: object\n      properties:\n        nTimeframes:\n          $ref: '#/components/schemas/FlpTimeframes'\n        bytesProcessed:\n          $ref: '#/components/schemas/FlpBytesProcessed'\n        bytesEquipmentReadOut:\n          $ref: '#/components/schemas/FlpBytesEquipmentReadOut'\n        bytesRecordingReadOut:\n          $ref: '#/components/schemas/FlpBytesRecordingReadOut'\n        bytesFairMQReadOut:\n          $ref: '#/components/schemas/FlpBytesFairMQReadOut'\n      additionalProperties: false\n    User:\n      description: Describes an intervention or an event that happened.\n      type: object\n      properties:\n        externalId:\n          description: The unique CERN identifier of this user.\n          type: integer\n          format: int32\n        id:\n          description: The unique identifier of this entity.\n          type: integer\n          format: int32\n        name:\n          type: string\n          description: Name of the user.\n      required:\n        - externalId\n        - id\n        - name\n      additionalProperties: false\nsecurity:\n  - ApiKeyAuth: []\n",
			"canonicalURL": "/github.com/AliceO2Group/Bookkeeping@9c308f7e254e1f9bf4f493cf5b232a7c2c102948/-/blob/go-api-client/openapi-source.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/AliceO2Group/Bookkeeping/blob/9c308f7e254e1f9bf4f493cf5b232a7c2c102948/go-api-client/openapi-source.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"ArrayOfEnvironments\": parse schema: parse schema: parse schema: property \"runs\": parse schema: parse schema: parse schema: property \"triggerValue\": at 1:29319: parse enum values: parse value \"false\": expected type \"string\", got \"bool\""
}