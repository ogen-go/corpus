{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ovotech/laminar"
		},
		"file": {
			"name": "statements.yaml",
			"size": 0,
			"path": "packages/laminar-cli/test/api/statements.yaml",
			"byteSize": 25286,
			"content": "openapi: 3.0.0\ninfo:\n  title: Api\n  version: '1.0'\n  description: Generates final statements for customers\n  contact:\n    name: Value Team\nservers:\n  - url: 'http://localhost:3000'\n    description: Local Development\n  - url: 'https://statements-api.example.com'\n    description: Nonprod instance for testing\n  - url: 'https://statements-api.example.com'\n    description: Prod instance for testing\npaths:\n  /.well-known/health-check:\n    get:\n      summary: Health Check\n      description: Health check endpoint\n      responses:\n        '200':\n          $ref: '#/components/responses/SuccessResponse'\n  /.well-known/openapi.yaml:\n    get:\n      summary: API Docs YAML\n      description: The open api spec for the service. OpenAPI v3.\n      responses:\n        '200':\n          $ref: '#/components/responses/OpenApiResponse'\n  /.well-known/openapi.html:\n    get:\n      security:\n        - BearerAuth: []\n      summary: API Docs\n      description: The open api spec for the service. OpenAPI v3.\n      responses:\n        '200':\n          $ref: '#/components/responses/HtmlResponse'\n  /v2/statements:\n    parameters:\n      - $ref: '#/components/parameters/traceToken'\n    get:\n      security:\n        - BearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/accountIdQuery'\n      summary: Account Statements\n      description: 'A full history of statements generated for an account, including invalid statements'\n      responses:\n        '200':\n          $ref: '#/components/responses/StatementsListResponse'\n        '500':\n          $ref: '#/components/responses/HttpErrorResponse'\n    post:\n      security:\n        - BearerAuth: ['edit']\n      summary: Generate a Statement\n      description: Manually start generating a statement for a given account\n      requestBody:\n        $ref: '#/components/requestBodies/GenerateStatementRequest'\n      responses:\n        '200':\n          $ref: '#/components/responses/ManualStatementResponse'\n        '409':\n          $ref: '#/components/responses/StatementAlreadySentResponse'\n        '500':\n          $ref: '#/components/responses/HttpErrorResponse'\n  '/v2/statements/{id}/data':\n    parameters:\n      - $ref: '#/components/parameters/traceToken'\n      - $ref: '#/components/parameters/statementId'\n    get:\n      security:\n        - BearerAuth: []\n      summary: Statement Data\n      description: 'Raw data used to generate a statement for an account, at the point of generation.'\n      responses:\n        '200':\n          $ref: '#/components/responses/StatementDataResponse'\n        '404':\n          $ref: '#/components/responses/StatementNotFoundResponse'\n        '500':\n          $ref: '#/components/responses/HttpErrorResponse'\n  '/v2/statements/{id}/approval':\n    parameters:\n      - $ref: '#/components/parameters/traceToken'\n      - $ref: '#/components/parameters/statementId'\n    post:\n      security:\n        - BearerAuth: ['edit']\n      summary: Approve a statement\n      description: Approve a given statement to be sent to the customer\n      responses:\n        '200':\n          $ref: '#/components/responses/SuccessResponse'\n        '400':\n          $ref: '#/components/responses/StatementNotReadyResponse'\n        '404':\n          $ref: '#/components/responses/StatementNotFoundResponse'\n        '500':\n          $ref: '#/components/responses/HttpErrorResponse'\n  '/v2/statements/{id}/modifications':\n    parameters:\n      - $ref: '#/components/parameters/traceToken'\n      - $ref: '#/components/parameters/statementId'\n    post:\n      security:\n        - BearerAuth: ['edit']\n      summary: Apply modifications\n      description: Save modificaitons for the current statement\n      requestBody:\n        $ref: '#/components/requestBodies/ApplyStatementDataModification'\n      responses:\n        '200':\n          $ref: '#/components/responses/StatementDataResponse'\n        '400':\n          $ref: '#/components/responses/StatementNotReadyResponse'\n        '404':\n          $ref: '#/components/responses/StatementNotFoundResponse'\n        '500':\n          $ref: '#/components/responses/HttpErrorResponse'\n  '/v2/statements/{id}/pdf':\n    parameters:\n      - $ref: '#/components/parameters/traceToken'\n      - $ref: '#/components/parameters/statementId'\n    get:\n      security:\n        - BearerAuth: []\n      summary: Statement PDF\n      description: Retrieve the pdf of a generated statement\n      responses:\n        '200':\n          $ref: '#/components/responses/PdfResponse'\n        '400':\n          $ref: '#/components/responses/StatementNotReadyResponse'\n        '404':\n          $ref: '#/components/responses/StatementNotFoundResponse'\n        '500':\n          $ref: '#/components/responses/HttpErrorResponse'\n  '/v2/statements/{id}/html':\n    parameters:\n      - $ref: '#/components/parameters/traceToken'\n      - $ref: '#/components/parameters/statementId'\n    get:\n      security:\n        - BearerAuth: []\n      summary: Statement Html\n      description: 'Retrieve the html, used to generate the statement pdf'\n      responses:\n        '200':\n          $ref: '#/components/responses/HtmlResponse'\n        '404':\n          $ref: '#/components/responses/StatementNotFoundResponse'\n        '500':\n          $ref: '#/components/responses/HttpErrorResponse'\n  /v2/reports/daily:\n    parameters:\n      - $ref: '#/components/parameters/traceToken'\n    post:\n      security:\n        - BearerAuth: ['edit']\n      summary: Generate Daily Reports\n      description: Generate all daily reports for the day. Should be called by a cron service\n      responses:\n        '200':\n          $ref: '#/components/responses/SuccessResponse'\n        '500':\n          $ref: '#/components/responses/HttpErrorResponse'\n  '/v2/reports/{type}':\n    parameters:\n      - $ref: '#/components/parameters/traceToken'\n      - $ref: '#/components/parameters/reportType'\n    get:\n      security:\n        - BearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/offsetQuery'\n      summary: Report list\n      description: Return a list of reports for a specific type\n      responses:\n        '200':\n          $ref: '#/components/responses/ReportListResponse'\n        '500':\n          $ref: '#/components/responses/HttpErrorResponse'\n    post:\n      security:\n        - BearerAuth: ['edit']\n      summary: Generate a Report\n      description: 'Trigger report generation for a specific type, you can pick the date range, but by default it would use the current day'\n      requestBody:\n        $ref: '#/components/requestBodies/ReportRequest'\n      responses:\n        '200':\n          $ref: '#/components/responses/SuccessResponse'\n        '500':\n          $ref: '#/components/responses/HttpErrorResponse'\n  '/v2/reports/{type}/{filename}':\n    parameters:\n      - $ref: '#/components/parameters/traceToken'\n      - $ref: '#/components/parameters/reportType'\n      - $ref: '#/components/parameters/reportFilename'\n    get:\n      security:\n        - BearerAuth: []\n      summary: Report file\n      description: A report file in CSV format\n      responses:\n        '200':\n          $ref: '#/components/responses/CsvResponse'\n        '404':\n          $ref: '#/components/responses/ReportNotFoundResponse'\n        '500':\n          $ref: '#/components/responses/HttpErrorResponse'\ncomponents:\n  securitySchemes:\n    BearerAuth:\n      type: http\n      scheme: bearer\n  responses:\n    HttpErrorResponse:\n      description: Unkown Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HttpError'\n    StatementNotFoundResponse:\n      description: No statement with that id has been found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HttpError'\n    StatementNotReadyResponse:\n      description: Statement does not have the needed data\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HttpError'\n    StatementAlreadySentResponse:\n      description: 'This statement has already been generated and sent to the customer, you can use force to regenerate anyway.'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HttpError'\n    ReportNotFoundResponse:\n      description: The report file that name has been found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HttpError'\n    SuccessResponse:\n      description: OK\n      content:\n        application/json:\n          schema:\n            additionalProperties: false\n            properties:\n              success:\n                type: boolean\n            required:\n              - success\n    OpenApiResponse:\n      description: Yaml File\n      content:\n        'application/yaml':\n          schema:\n            type: string\n    HtmlResponse:\n      description: Html File\n      content:\n        'text/html':\n          schema:\n            type: string\n    CsvResponse:\n      description: Csv File\n      content:\n        text/csv:\n          schema:\n            type: string\n    PdfResponse:\n      description: Statement PDF\n      content:\n        application/pdf:\n          schema:\n            type: string\n            format: binary\n    ReportListResponse:\n      description: A list of reports\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ReportsList'\n    StatementsListResponse:\n      description: A list of statements\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/StatementsList'\n    StatementDataResponse:\n      description: Raw statement data\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/StatementData'\n    StatementDataModificationsResponse:\n      description: Modifications that apply to this statement\n      content:\n        application/json:\n          schema:\n            items:\n              $ref: '#/components/schemas/StatementDataModification'\n    ManualStatementResponse:\n      description: Manual Statement generation response\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/StatementsListItem'\n  requestBodies:\n    GenerateStatementRequest:\n      description: Manual Statement generation response\n      required: true\n      content:\n        application/json:\n          schema:\n            additionalProperties: false\n            properties:\n              accountId:\n                type: string\n              force:\n                type: boolean\n              forceLossType:\n                $ref: '#/components/schemas/LossType'\n              forceLossDate:\n                type: string\n                format: date\n            required:\n              - accountId\n    ApplyStatementDataModification:\n      description: 'Apply data modification to a statement, replace the previous modifications'\n      required: true\n      content:\n        application/json:\n          schema:\n            additionalProperties: false\n            properties:\n              modification:\n                $ref: '#/components/schemas/StatementDataModification'\n              dryRun:\n                type: boolean\n            required:\n              - modification\n    ReportRequest:\n      description: Options for generating the report\n      required: true\n      content:\n        application/json:\n          schema:\n            oneOf:\n              - additionalProperties: false\n                properties:\n                  date:\n                    type: string\n                    format: date-time\n                required:\n                  - date\n              - additionalProperties: false\n                properties:\n                  fromDate:\n                    type: string\n                    format: date-time\n                  toDate:\n                    type: string\n                    format: date-time\n                required:\n                  - fromDate\n                  - toDate\n  parameters:\n    statementId:\n      name: id\n      in: path\n      description: Statement Id number\n      schema:\n        type: string\n        pattern: \"\\\\d+\"\n      required: true\n    reportType:\n      name: type\n      in: path\n      description: Report type\n      schema:\n        type: string\n        enum:\n          - errors\n          - foundation\n          - statements\n          - memos\n          - refunds\n      required: true\n    reportFilename:\n      name: filename\n      in: path\n      description: Report filename\n      schema:\n        type: string\n      required: true\n    accountIdQuery:\n      name: accountId\n      in: query\n      description: Id for the account\n      schema:\n        type: string\n        pattern: \"\\\\d+\"\n      required: true\n    offsetQuery:\n      name: offset\n      in: query\n      description: Start from this id\n      schema:\n        type: string\n        pattern: \"\\\\d+\"\n    traceToken:\n      name: X-Trace-Token\n      in: header\n      description: An optional trace token to be passed to the service and used for logging\n      schema:\n        type: string\n        format: uuid\n  schemas:\n    HttpError:\n      additionalProperties: false\n      properties:\n        message:\n          type: string\n    LossType:\n      enum:\n        - ChangeOfTenancy\n        - EstimatedLoss\n        - SupplyLoss\n    StatementsListItem:\n      additionalProperties: false\n      properties:\n        id:\n          type: string\n        ref:\n          type: string\n        accountId:\n          type: string\n        createdAt:\n          type: string\n          format: date-time\n        isModified:\n          type: boolean\n        errors:\n          items:\n            $ref: '#/components/schemas/StatementError'\n        state:\n          $ref: '#/components/schemas/StatementState'\n      required:\n        - id\n        - ref\n        - createdAt\n        - accountId\n        - errors\n        - isModified\n        - state\n    StatementsList:\n      items:\n        $ref: '#/components/schemas/StatementsListItem'\n    ModificationTransactionRemove:\n      additionalProperties: false\n      properties:\n        type:\n          enum:\n            - BillyTransactionRemove\n            - FinanceTransactionRemove\n            - QuantumTopUpRemove\n            - D188Remove\n            - OldTopUpRemove\n            - BitTransactionRemove\n        id:\n          type: string\n      required:\n        - type\n        - id\n    ModificationMeterTransactionRemove:\n      additionalProperties: false\n      properties:\n        type:\n          enum:\n            - VendTransactionRemove\n            - S2TopUpRemove\n        id:\n          type: string\n        meterType:\n          enum:\n            - gas\n            - elec\n      required:\n        - type\n        - meterType\n        - id\n    ModificationTransactionAdd:\n      additionalProperties: false\n      properties:\n        type:\n          enum:\n            - AddManualTransaction\n            - AddManualTopUp\n        description:\n          type: string\n        dateTime:\n          type: string\n          format: date-time\n        amount:\n          type: number\n      required:\n        - type\n        - description\n        - dateTime\n        - amount\n    Modification:\n      oneOf:\n        - $ref: '#/components/schemas/ModificationTransactionRemove'\n        - $ref: '#/components/schemas/ModificationMeterTransactionRemove'\n        - $ref: '#/components/schemas/ModificationTransactionAdd'\n    StatementDataModification:\n      additionalProperties: false\n      properties:\n        note:\n          type: string\n        createdAt:\n          type: string\n          format: date-time\n        modifications:\n          items:\n            $ref: '#/components/schemas/Modification'\n      required:\n        - createdAt\n        - modifications\n    Address:\n      additionalProperties: false\n      properties:\n        firstName:\n          type: string\n        lastName:\n          type: string\n        town:\n          type: string\n        postcode:\n          type: string\n        address:\n          type: string\n      required:\n        - firstName\n        - lastName\n        - town\n        - postcode\n        - address\n    DateInterval:\n      additionalProperties: false\n      properties:\n        from:\n          type: string\n          format: date\n        to:\n          type: string\n          format: date\n    Transaction:\n      additionalProperties: false\n      type: object\n      properties:\n        id:\n          type: string\n        type:\n          enum:\n            - Billy\n            - Old\n            - Bit\n            - Finance\n        date:\n          type: string\n          format: date-time\n        description:\n          type: string\n        amount:\n          type: number\n        balance:\n          type: number\n        included:\n          type: boolean\n      required:\n        - id\n        - type\n        - date\n        - description\n        - amount\n    MeterTransaction:\n      additionalProperties: false\n      type: object\n      properties:\n        msn:\n          type: string\n        id:\n          type: string\n        type:\n          enum:\n            - Vend\n            - S2\n            - Quantum\n            - D188\n        date:\n          type: string\n          format: date-time\n        description:\n          type: string\n        amount:\n          type: number\n        balance:\n          type: number\n        included:\n          type: boolean\n      required:\n        - msn\n        - id\n        - type\n        - date\n        - description\n        - amount\n    Projection:\n      additionalProperties: false\n      properties:\n        source:\n          type: string\n        plan:\n          type: string\n        from:\n          type: string\n          format: date-time\n        value:\n          type: number\n        valueAdditional:\n          type: number\n      required:\n        - source\n    Rate:\n      additionalProperties: false\n      properties:\n        dates:\n          $ref: '#/components/schemas/DateInterval'\n        plan:\n          type: string\n        unit:\n          type: number\n        unitAdditional:\n          type: number\n        standing:\n          type: number\n      required:\n        - dates\n        - plan\n    RegisterValue:\n      additionalProperties: false\n      properties:\n        id:\n          type: string\n        value:\n          type: number\n      required:\n        - id\n        - value\n    FlowElec:\n      additionalProperties: false\n      properties:\n        type:\n          type: string\n        msn:\n          type: string\n        date:\n          type: string\n          format: date-time\n        registers:\n          items:\n            $ref: '#/components/schemas/RegisterValue'\n        details:\n          type: string\n      required:\n        - type\n        - msn\n        - registers\n        - date\n        - details\n    FlowGas:\n      additionalProperties: false\n      properties:\n        type:\n          type: string\n        msn:\n          type: string\n        date:\n          type: string\n          format: date-time\n        value:\n          type: number\n        details:\n          type: string\n      required:\n        - type\n        - msn\n        - value\n        - date\n        - details\n    MsdElec:\n      additionalProperties: false\n      properties:\n        msn:\n          type: string\n        balance:\n          type: number\n        date:\n          type: string\n          format: date-time\n        register1:\n          type: number\n        register2:\n          type: number\n        totalRegister:\n          type: number\n      required:\n        - type\n        - msn\n        - register1\n        - totalRegister\n        - date\n    MsdGas:\n      additionalProperties: false\n      properties:\n        msn:\n          type: string\n        date:\n          type: string\n          format: date-time\n        value:\n          type: number\n        balance:\n          type: number\n      required:\n        - type\n        - msn\n        - value\n    StatementDataAccount:\n      additionalProperties: false\n      properties:\n        id:\n          type: string\n        globalId:\n          type: string\n        lossType:\n          $ref: '#/components/schemas/LossType'\n        isEconomyEnergy:\n          type: boolean\n        address:\n          $ref: '#/components/schemas/Address'\n        transactions:\n          items:\n            $ref: '#/components/schemas/Transaction'\n      required:\n        - id\n        - transactions\n    StatementDataSupplyElec:\n      additionalProperties: false\n      properties:\n        type:\n          enum:\n            - elec\n        mpxn:\n          type: string\n        service:\n          $ref: '#/components/schemas/DateInterval'\n        ownership:\n          $ref: '#/components/schemas/DateInterval'\n        flows:\n          items:\n            $ref: '#/components/schemas/FlowElec'\n        msds:\n          items:\n            $ref: '#/components/schemas/MsdElec'\n        rates:\n          items:\n            $ref: '#/components/schemas/Rate'\n        projection:\n          $ref: '#/components/schemas/Projection'\n        address:\n          type: string\n        transactions:\n          items:\n            $ref: '#/components/schemas/MeterTransaction'\n      required:\n        - type\n        - mpxn\n        - service\n        - ownership\n        - flows\n        - msds\n        - rates\n        - projection\n        - transactions\n    StatementDataSupplyGas:\n      additionalProperties: false\n      properties:\n        type:\n          enum:\n            - gas\n        mpxn:\n          type: string\n        service:\n          $ref: '#/components/schemas/DateInterval'\n        ownership:\n          $ref: '#/components/schemas/DateInterval'\n        flows:\n          items:\n            $ref: '#/components/schemas/FlowGas'\n        msds:\n          items:\n            $ref: '#/components/schemas/MsdGas'\n        rates:\n          items:\n            $ref: '#/components/schemas/Rate'\n        projection:\n          $ref: '#/components/schemas/Projection'\n        address:\n          type: string\n        transactions:\n          items:\n            $ref: '#/components/schemas/MeterTransaction'\n      required:\n        - type\n        - mpxn\n        - service\n        - ownership\n        - flows\n        - msds\n        - rates\n        - projection\n        - transactions\n    StatementError:\n      additionalProperties: false\n      properties:\n        id:\n          type: string\n        title:\n          type: string\n        description:\n          type: string\n      required:\n        - id\n    StatementState:\n      enum:\n        - CREATED\n        - GENERATING_QUEUED\n        - IDENTIFICATION_STARTED\n        - IDENTIFICATION_COMPLETED\n        - IDENTIFICATION_FAILED\n        - GATHERING_DATA_STARTED\n        - GATHERING_DATA_COMPLETED\n        - GENERATING_STATEMENT_STARTED\n        - GENERATING_STATEMENT_COMPLETED\n        - GENERATING_ASSETS_STARTED\n        - GENERATING_ASSETS_COMPLETED\n        - PENDING_APPROVAL\n        - SENDING_COMM_QUEUED\n        - SENDING_COMM_STARTED\n        - SENDING_COMM_COMPLETED\n        - SENDING_DATA_TO_REFUND_TEAM\n        - INVALID\n        - TESTING_ONLY\n        - SENDING_COMM_RETRY_POSTAL\n        - SENDING_COMM_FAILED\n        - COMPLETED\n    StatementComm:\n      oneOf:\n        - additionalProperties: false\n          properties:\n            id:\n              type: string\n            status:\n              type: string\n            sentAt:\n              type: string\n              format: date-time\n          required:\n            - id\n        - additionalProperties: false\n          properties:\n            queuedAt:\n              type: string\n              format: date-time\n          required:\n            - queuedAt\n    StatementMoney:\n      additionalProperties: false\n      properties:\n        totalIn:\n          type: number\n        totalOut:\n          type: number\n        balance:\n          type: number\n      required:\n        - totalIn\n        - totalOut\n        - balance\n    StatementData:\n      additionalProperties: false\n      properties:\n        id:\n          type: string\n        ref:\n          type: string\n        state:\n          $ref: '#/components/schemas/StatementState'\n        errors:\n          items:\n            $ref: '#/components/schemas/StatementError'\n        account:\n          $ref: '#/components/schemas/StatementDataAccount'\n        html:\n          type: boolean\n        pdf:\n          type: boolean\n        comm:\n          $ref: '#/components/schemas/StatementComm'\n        modification:\n          $ref: '#/components/schemas/StatementDataModification'\n        money:\n          $ref: '#/components/schemas/StatementMoney'\n        supplies:\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/StatementDataSupplyGas'\n              - $ref: '#/components/schemas/StatementDataSupplyElec'\n      required:\n        - id\n        - ref\n        - state\n        - account\n        - supplies\n    ReportsListItem:\n      additionalProperties: false\n      properties:\n        filename:\n          type: string\n        createdAt:\n          type: string\n          format: date-time\n      required:\n        - filename\n        - createdAt\n    ReportsList:\n      additionalProperties: false\n      properties:\n        items:\n          items:\n            $ref: '#/components/schemas/ReportsListItem'\n        total:\n          type: integer\n      required:\n        - items\n        - total\n",
			"canonicalURL": "/github.com/ovotech/laminar@4ca0ed2dd51383530489720a0ecc4b96f93eb797/-/blob/packages/laminar-cli/test/api/statements.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ovotech/laminar/blob/4ca0ed2dd51383530489720a0ecc4b96f93eb797/packages/laminar-cli/test/api/statements.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/v2/reports/daily\": post: security: at packages/laminar-cli/test/api/statements.yaml:161:24: list of scopes MUST be empty for \"type\" \"http\""
}