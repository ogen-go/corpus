{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mock-server/mockserver"
		},
		"file": {
			"name": "mock-server-openapi-embedded-model.yaml",
			"size": 0,
			"path": "mockserver-core/src/main/resources/org/mockserver/openapi/mock-server-openapi-embedded-model.yaml",
			"byteSize": 30517,
			"content": "openapi: 3.0.0\nservers:\n  - url: 'http://localhost:1080/'\n  - url: 'https://localhost:1080/'\ninfo:\n  title: MockServer API\n  version: 5.13.x\n  description: \u003e-\n    MockServer enables easy mocking of any system you integrate with via HTTP or HTTPS with clients written in Java, JavaScript and Ruby and a simple REST API (as shown below).\n\n\n    MockServer Proxy is a proxy that introspects all proxied traffic including encrypted SSL traffic and supports Port Forwarding, Web Proxying (i.e. HTTP proxy), HTTPS Tunneling Proxying (using HTTP CONNECT) and SOCKS Proxying (i.e. dynamic port forwarding).\n\n\n    Both MockServer and the MockServer Proxy record all received requests so that it is possible to verify exactly what requests have been sent by the system under test.\n  license:\n    url: 'https://github.com/mock-server/mockserver/blob/master/LICENSE.md'\n    name: Apache 2.0\ntags:\n  - name: expectation\n    description: Create or update expectations - updates if the id matches an existing expecations (only supported by MockServer)\n  - name: verify\n    description: Verify requests (both MockServer \u0026 MockServer Proxy)\n  - name: control\n    description: Manage state or process (both MockServer \u0026 MockServer Proxy)\n\npaths:\n  /mockserver/expectation:\n    put:\n      tags:\n        - expectation\n      summary: create expectation\n      responses:\n        '201':\n          description: expectations created\n          content:\n            application/json:\n              schema:\n                title: list of upserted expectations\n                type: array\n                additionalProperties: false\n                items:\n                  $ref: \"#/components/schemas/Expectation\"\n        '400':\n          description: incorrect request format\n        '406':\n          description: invalid expectation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Expectations\"\n        description: expectation(s) to create\n        required: true\n  /mockserver/openapi:\n    put:\n      tags:\n        - expectation\n      summary: create expectations from OpenAPI or Swagger\n      responses:\n        '201':\n          description: expectations created\n          content:\n            application/json:\n              schema:\n                title: list of upserted expectations\n                type: array\n                additionalProperties: false\n                items:\n                  $ref: \"#/components/schemas/Expectation\"\n        '400':\n          description: incorrect request format\n        '406':\n          description: invalid expectation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/OpenAPIExpectations\"\n        description: expectation(s) to create\n        required: true\n  /mockserver/clear:\n    put:\n      tags:\n        - control\n      summary: clears expectations and recorded requests that match the request matcher\n      responses:\n        '200':\n          description: expectations and recorded requests cleared\n        '400':\n          description: incorrect request format\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: \"#/components/schemas/RequestDefinition\"\n                - $ref: \"#/components/schemas/ExpectationId\"\n        description: request used to match expectations and recored requests to clear\n  /mockserver/reset:\n    put:\n      tags:\n        - control\n      summary: clears all expectations and recorded requests\n      responses:\n        '200':\n          description: expectations and recorded requests cleared\n  /mockserver/retrieve:\n    put:\n      tags:\n        - control\n      summary: retrieve recorded requests, active expectations, recorded expectations or log messages\n      parameters:\n        - in: query\n          name: format\n          schema:\n            type: string\n            enum: [ \"java\", \"json\", \"log_entries\" ]\n          description: changes response format, default if not specificed is \"json\", supported values are \"java\", \"json\", \"log_entries\"\n        - in: query\n          name: type\n          schema:\n            type: string\n            enum: [ \"logs\", \"requests\", \"request_responses\", \"recorded_expectations\", \"active_expectations\" ]\n          description: specifies the type of object that is retrieve, default if not specified is \"requests\", supported values are \"logs\", \"requests\", \"recorded_expectations\", \"active_expectations\"\n      responses:\n        '200':\n          description: recorded requests or active expectations returned\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - type: array\n                    additionalProperties: false\n                    items:\n                      $ref: \"#/components/schemas/Expectation\"\n                  - type: array\n                    additionalProperties: false\n                    items:\n                      $ref: \"#/components/schemas/HttpResponse\"\n            application/java:\n              schema:\n                type: string\n                description: Java code for the list of either Expectations or HttpResponses\n            text/plain:\n              schema:\n                type: string\n                description: List of recorded log messages\n        '400':\n          description: incorrect request format\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RequestDefinition\"\n        description: \u003e-\n          request used to match which recorded requests, expectations or log messages to return, an empty body matches all requests, expectations or log messages\n  /mockserver/verify:\n    put:\n      tags:\n        - verify\n      summary: verify a request has been received a specific number of times\n      responses:\n        '202':\n          description: matching request has been received specified number of times\n        '400':\n          description: incorrect request format\n        '406':\n          description: request has not been received specified numbers of times\n          content:\n            text/plain:\n              schema:\n                type: string\n                description: 'JUnit expected:\u003c...\u003e but was:\u003c...\u003e format'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Verification\"\n        description: request matcher and the number of times to match\n        required: true\n  /mockserver/verifySequence:\n    put:\n      tags:\n        - verify\n      summary: verify a sequence of request has been received in the specific order\n      responses:\n        '202':\n          description: request sequence has been received in specified order\n        '400':\n          description: incorrect request format\n        '406':\n          description: request sequence has not been received in specified order\n          content:\n            text/plain:\n              schema:\n                type: string\n                description: 'JUnit expected:\u003c...\u003e but was:\u003c...\u003e format'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/VerificationSequence\"\n        description: the sequence of requests matchers\n        required: true\n  /mockserver/status:\n    put:\n      tags:\n        - control\n      summary: return listening ports\n      responses:\n        '200':\n          description: MockServer is running and listening on the listed ports\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Ports\"\n  /mockserver/bind:\n    put:\n      tags:\n        - control\n      summary: bind additional listening ports\n      description: only supported on Netty version\n      responses:\n        '200':\n          description: \u003e-\n            listening on additional requested ports, note: the response ony\n            contains ports added for the request, to list all ports use /status\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Ports\"\n        '400':\n          description: incorrect request format\n        '406':\n          description: \u003e-\n            unable to bind to ports (i.e. already bound or JVM process doesn't\n            have permission)\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Ports\"\n        description: \u003e-\n          list of ports to bind to, where 0 indicates dynamically bind to any\n          available port\n        required: true\n  /mockserver/stop:\n    put:\n      tags:\n        - control\n      summary: stop running process\n      description: only supported on Netty version\n      responses:\n        '200':\n          description: MockServer process is stopping\ncomponents:\n  schemas:\n    Expectations:\n      title: \"list of expectations\"\n      oneOf:\n        - $ref: \"#/components/schemas/Expectation\"\n        - type: array\n          additionalProperties: false\n          items:\n            $ref: \"#/components/schemas/Expectation\"\n    Expectation:\n      title: \"expectation\"\n      type: object\n      additionalProperties: false\n      properties:\n        id:\n          type: string\n        priority:\n          type: integer\n        httpRequest:\n          $ref: \"#/components/schemas/RequestDefinition\"\n        openAPIDefinition:\n          $ref: \"#/components/schemas/OpenAPIDefinition\"\n        httpResponse:\n          $ref: \"#/components/schemas/HttpResponse\"\n        httpResponseTemplate:\n          $ref: \"#/components/schemas/HttpTemplate\"\n        httpResponseClassCallback:\n          $ref: \"#/components/schemas/HttpClassCallback\"\n        httpResponseObjectCallback:\n          $ref: \"#/components/schemas/HttpObjectCallback\"\n        httpForward:\n          $ref: \"#/components/schemas/HttpForward\"\n        httpForwardTemplate:\n          $ref: \"#/components/schemas/HttpTemplate\"\n        httpForwardClassCallback:\n          $ref: \"#/components/schemas/HttpClassCallback\"\n        httpForwardObjectCallback:\n          $ref: \"#/components/schemas/HttpObjectCallback\"\n        httpOverrideForwardedRequest:\n          $ref: \"#/components/schemas/HttpOverrideForwardedRequest\"\n        httpError:\n          $ref: \"#/components/schemas/HttpError\"\n        times:\n          $ref: \"#/components/schemas/Times\"\n        timeToLive:\n          $ref: \"#/components/schemas/TimeToLive\"\n      oneOf:\n        - required:\n            - httpResponse\n        - required:\n            - httpResponseTemplate\n        - required:\n            - httpResponseClassCallback\n        - required:\n            - httpResponseObjectCallback\n        - required:\n            - httpForward\n        - required:\n            - httpForwardTemplate\n        - required:\n            - httpForwardClassCallback\n        - required:\n            - httpForwardObjectCallback\n        - required:\n            - httpOverrideForwardedRequest\n        - required:\n            - httpError\n    ExpectationId:\n      title: \"pointer to existing expectation\"\n      type: object\n      additionalProperties: false\n      properties:\n        id:\n          type: string\n      required:\n        - id\n    OpenAPIExpectations:\n      title: \"list of open api expectations\"\n      oneOf:\n        - $ref: \"#/components/schemas/OpenAPIExpectation\"\n        - type: array\n          additionalProperties: false\n          items:\n            $ref: \"#/components/schemas/OpenAPIExpectation\"\n    OpenAPIExpectation:\n      title: \"open api or swagger expectation\"\n      type: object\n      additionalProperties: false\n      properties:\n        specUrlOrPayload:\n          anyOf:\n            - type: string\n            - type: object\n        operationsAndResponses:\n          type: object\n          additionalProperties:\n            type: string\n      required:\n        - specUrlOrPayload\n    RequestDefinition:\n      title: \"request definition\"\n      oneOf:\n        - $ref: \"#/components/schemas/HttpRequest\"\n        - $ref: \"#/components/schemas/OpenAPIDefinition\"\n    HttpRequest:\n      title: \"request properties matcher\"\n      type: object\n      additionalProperties: false\n      properties:\n        secure:\n          type: boolean\n        keepAlive:\n          type: boolean\n        method:\n          $ref: \"#/components/schemas/StringOrJsonSchema\"\n        path:\n          $ref: \"#/components/schemas/StringOrJsonSchema\"\n        pathParameters:\n          $ref: \"#/components/schemas/KeyToMultiValue\"\n        queryStringParameters:\n          $ref: \"#/components/schemas/KeyToMultiValue\"\n        body:\n          $ref: \"#/components/schemas/Body\"\n        headers:\n          $ref: \"#/components/schemas/KeyToMultiValue\"\n        cookies:\n          $ref: \"#/components/schemas/KeyToValue\"\n        socketAddress:\n          $ref: \"#/components/schemas/SocketAddress\"\n    OpenAPIDefinition:\n      title: \"open api or swagger request matcher\"\n      type: object\n      additionalProperties: false\n      properties:\n        specUrlOrPayload:\n          type: string\n        operationId:\n          type: string\n    HttpResponse:\n      title: \"response to return\"\n      type: object\n      additionalProperties: false\n      properties:\n        delay:\n          $ref: \"#/components/schemas/Delay\"\n        body:\n          $ref: \"#/components/schemas/BodyWithContentType\"\n        cookies:\n          $ref: \"#/components/schemas/KeyToValue\"\n        connectionOptions:\n          $ref: \"#/components/schemas/ConnectionOptions\"\n        headers:\n          $ref: \"#/components/schemas/KeyToMultiValue\"\n        statusCode:\n          type: integer\n        reasonPhrase:\n          type: string\n    HttpTemplate:\n      title: \"template to generate response / request\"\n      type: object\n      additionalProperties: false\n      properties:\n        delay:\n          $ref: \"#/components/schemas/Delay\"\n        templateType:\n          enum:\n            - VELOCITY\n            - JAVASCRIPT\n            - MUSTACHE\n        template:\n          type: string\n    HttpForward:\n      title: host and port to forward to\n      type: object\n      additionalProperties: false\n      properties:\n        delay:\n          $ref: \"#/components/schemas/Delay\"\n        host:\n          type: string\n        port:\n          type: integer\n        scheme:\n          enum:\n            - HTTP\n            - HTTPS\n    HttpClassCallback:\n      title: class callback\n      type: object\n      additionalProperties: false\n      properties:\n        delay:\n          $ref: \"#/components/schemas/Delay\"\n        callbackClass:\n          type: string\n    HttpObjectCallback:\n      title: object / method callback\n      type: object\n      additionalProperties: false\n      properties:\n        delay:\n          $ref: \"#/components/schemas/Delay\"\n        clientId:\n          type: string\n        responseCallback:\n          type: boolean\n    HttpOverrideForwardedRequest:\n      title: override forwarded request\n      oneOf:\n        - type: object\n          additionalProperties: false\n          properties:\n            delay:\n              \"$ref\": \"#/components/schemas/Delay\"\n            requestOverride:\n              \"$ref\": \"#/components/schemas/HttpRequest\"\n            requestModifier:\n              type: object\n              additionalProperties: false\n              properties:\n                path:\n                  type: object\n                  additionalProperties: false\n                  properties:\n                    regex:\n                      type: string\n                    substitution:\n                      type: string\n                queryStringParameters:\n                  type: object\n                  additionalProperties: false\n                  properties:\n                    add:\n                      \"$ref\": \"#/components/schemas/KeyToMultiValue\"\n                    replace:\n                      \"$ref\": \"#/components/schemas/KeyToMultiValue\"\n                    remove:\n                      type: array\n                      additionalProperties: false\n                      items:\n                        type: string\n                headers:\n                  type: object\n                  additionalProperties: false\n                  properties:\n                    add:\n                      \"$ref\": \"#/components/schemas/KeyToMultiValue\"\n                    replace:\n                      \"$ref\": \"#/components/schemas/KeyToMultiValue\"\n                    remove:\n                      type: array\n                      additionalProperties: false\n                      items:\n                        type: string\n                cookies:\n                  type: object\n                  additionalProperties: false\n                  properties:\n                    add:\n                      \"$ref\": \"#/components/schemas/KeyToValue\"\n                    replace:\n                      \"$ref\": \"#/components/schemas/KeyToValue\"\n                    remove:\n                      type: array\n                      additionalProperties: false\n                      items:\n                        type: string\n            responseOverride:\n              \"$ref\": \"#/components/schemas/HttpResponse\"\n            responseModifier:\n              type: object\n              additionalProperties: false\n              properties:\n                headers:\n                  type: object\n                  additionalProperties: false\n                  properties:\n                    add:\n                      \"$ref\": \"#/components/schemas/KeyToMultiValue\"\n                    replace:\n                      \"$ref\": \"#/components/schemas/KeyToMultiValue\"\n                    remove:\n                      type: array\n                      additionalProperties: false\n                      items:\n                        type: string\n                cookies:\n                  type: object\n                  additionalProperties: false\n                  properties:\n                    add:\n                      \"$ref\": \"#/components/schemas/KeyToValue\"\n                    replace:\n                      \"$ref\": \"#/components/schemas/KeyToValue\"\n                    remove:\n                      type: array\n                      additionalProperties: false\n                      items:\n                        type: string\n        - type: object\n          additionalProperties: false\n          properties:\n            delay:\n              \"$ref\": \"#/components/schemas/Delay\"\n            httpRequest:\n              \"$ref\": \"#/components/schemas/HttpRequest\"\n            httpResponse:\n              \"$ref\": \"#/components/schemas/HttpResponse\"\n    HttpError:\n      title: error behaviour\n      type: object\n      additionalProperties: false\n      properties:\n        delay:\n          $ref: \"#/components/schemas/Delay\"\n        dropConnection:\n          type: boolean\n        responseBytes:\n          type: string\n    Times:\n      title: \"number of responses\"\n      type: object\n      additionalProperties: false\n      properties:\n        remainingTimes:\n          type: integer\n        unlimited:\n          type: boolean\n    TimeToLive:\n      title: \"time expectation is valid for\"\n      type: object\n      additionalProperties: false\n      properties:\n        timeUnit:\n          enum:\n            - DAYS\n            - HOURS\n            - MINUTES\n            - SECONDS\n            - MILLISECONDS\n            - MICROSECONDS\n            - NANOSECONDS\n        timeToLive:\n          type: integer\n        unlimited:\n          type: boolean\n    KeyToMultiValue:\n      oneOf:\n        - type: array\n          additionalProperties: false\n          items:\n            type: object\n            additionalProperties: false\n            properties:\n              name:\n                type: string\n              values:\n                type: array\n                additionalProperties: false\n                items:\n                  type: string\n        - type: object\n          additionalProperties: true\n          properties:\n            keyMatchStyle:\n              type: string\n              enum:\n                - MATCHING_KEY\n                - SUB_SET\n              default: SUB_SET\n          # patternProperties:\n          #   \"^(?!keyMatchStyle)\\\\S+$\":\n          #     oneOf:\n          #     - type: array\n          #       additionalProperties: false\n          #       items:\n          #         $ref: \"#/components/schemas/StringOrJsonSchema\"\n          #     - type: object\n          #       additionalProperties: false\n          #       properties:\n          #         parameterStyle:\n          #           type: string\n          #           enum:\n          #           - SIMPLE\n          #           - SIMPLE_EXPLODED\n          #           - LABEL\n          #           - LABEL_EXPLODED\n          #           - MATRIX\n          #           - MATRIX_EXPLODED\n          #           - FORM_EXPLODED\n          #           - FORM\n          #           - SPACE_DELIMITED_EXPLODED\n          #           - SPACE_DELIMITED\n          #           - PIPE_DELIMITED_EXPLODED\n          #           - PIPE_DELIMITED\n          #           - DEEP_OBJECT\n          #           default: ''\n          #         values:\n          #           type: array\n          #           additionalProperties: false\n          #           items:\n          #             $ref: \"#/components/schemas/StringOrJsonSchema\"\n    KeyToValue:\n      oneOf:\n        - type: array\n          additionalProperties: false\n          items:\n            type: object\n            properties:\n              name:\n                type: string\n              value:\n                type: string\n        - type: object\n          additionalProperties: true\n          # patternProperties:\n          #   \"^\\\\S+$\":\n          #     $ref: \"#/components/schemas/StringOrJsonSchema\"\n    StringOrJsonSchema:\n      title: string value that can be support nottable, optional or a json schema\n      oneOf:\n        - type: string\n        - type: object\n          additionalProperties: false\n          properties:\n            not:\n              type: boolean\n            optional:\n              type: boolean\n            value:\n              type: string\n            schema:\n              $ref: http://json-schema.org/draft-04/schema\n            parameterStyle:\n              type: string\n              enum:\n                - SIMPLE\n                - SIMPLE_EXPLODED\n                - LABEL\n                - LABEL_EXPLODED\n                - MATRIX\n                - MATRIX_EXPLODED\n                - FORM_EXPLODED\n                - FORM\n                - SPACE_DELIMITED_EXPLODED\n                - SPACE_DELIMITED\n                - PIPE_DELIMITED_EXPLODED\n                - PIPE_DELIMITED\n                - DEEP_OBJECT\n    SocketAddress:\n      title: remote address to send request to\n      type: object\n      additionalProperties: false\n      properties:\n        host:\n          type: string\n        port:\n          type: integer\n        scheme:\n          enum:\n            - HTTP\n            - HTTPS\n    Body:\n      description: \"request body matcher\"\n      anyOf:\n        - type: object\n          description: \"binary body matcher\"\n          additionalProperties: false\n          properties:\n            not:\n              type: boolean\n            type:\n              enum:\n                - BINARY\n            base64Bytes:\n              type: string\n            contentType:\n              type: string\n        - type: object\n          description: \"json body matcher\"\n          additionalProperties: false\n          properties:\n            not:\n              type: boolean\n            type:\n              enum:\n                - JSON\n            json:\n              type: string\n            contentType:\n              type: string\n            matchType:\n              enum:\n                - STRICT\n                - ONLY_MATCHING_FIELDS\n        - type: object\n          description: \"json matching fields body matcher\"\n          additionalProperties: true\n        - type: object\n          description: \"json schema body matcher\"\n          additionalProperties: false\n          properties:\n            not:\n              type: boolean\n            type:\n              enum:\n                - JSON_SCHEMA\n            jsonSchema:\n              $ref: http://json-schema.org/draft-04/schema\n        - type: object\n          description: \"JSON path body matcher\"\n          additionalProperties: false\n          properties:\n            not:\n              type: boolean\n            type:\n              enum:\n                - JSON_PATH\n            jsonPath:\n              type: string\n        - type: object\n          description: \"parameter body matcher\"\n          additionalProperties: false\n          properties:\n            not:\n              type: boolean\n            type:\n              enum:\n                - PARAMETERS\n            parameters:\n              $ref: \"#/components/schemas/KeyToMultiValue\"\n        - type: object\n          description: \"regex body matcher\"\n          additionalProperties: false\n          properties:\n            not:\n              type: boolean\n            type:\n              enum:\n                - REGEX\n            regex:\n              type: string\n        - type: object\n          description: \"string body matcher\"\n          additionalProperties: false\n          properties:\n            not:\n              type: boolean\n            type:\n              enum:\n                - STRING\n            string:\n              type: string\n            contentType:\n              type: string\n            subString:\n              type: boolean\n        - type: string\n          description: \"substring body matcher\"\n        - type: object\n          description: \"xml body matcher\"\n          additionalProperties: false\n          properties:\n            not:\n              type: boolean\n            type:\n              enum:\n                - XML\n            xml:\n              type: string\n            contentType:\n              type: string\n        - type: object\n          description: \"xml schema body matcher\"\n          additionalProperties: false\n          properties:\n            not:\n              type: boolean\n            type:\n              enum:\n                - XML_SCHEMA\n            xmlSchema:\n              type: string\n        - type: object\n          description: \"xpath body matcher\"\n          additionalProperties: false\n          properties:\n            not:\n              type: boolean\n            type:\n              enum:\n                - XPATH\n            xpath:\n              type: string\n    BodyWithContentType:\n      description: \"response body\"\n      anyOf:\n        - type: object\n          description: \"binary response body\"\n          additionalProperties: false\n          properties:\n            not:\n              type: boolean\n            type:\n              enum:\n                - BINARY\n            base64Bytes:\n              type: string\n            contentType:\n              type: string\n        - type: object\n          description: \"json response body\"\n          additionalProperties: false\n          properties:\n            not:\n              type: boolean\n            type:\n              enum:\n                - JSON\n            json:\n              type: string\n            contentType:\n              type: string\n        - type: object\n          description: \"json response body\"\n          additionalProperties: true\n        - type: object\n          description: \"string response body\"\n          additionalProperties: false\n          properties:\n            not:\n              type: boolean\n            type:\n              enum:\n                - STRING\n            string:\n              type: string\n            contentType:\n              type: string\n        - type: string\n          description: \"string response body\"\n        - type: object\n          description: \"xml response body\"\n          additionalProperties: false\n          properties:\n            not:\n              type: boolean\n            type:\n              enum:\n                - XML\n            xml:\n              type: string\n            contentType:\n              type: string\n    Delay:\n      description: \"response delay\"\n      type: object\n      additionalProperties: false\n      properties:\n        timeUnit:\n          type: string\n        value:\n          type: integer\n    ConnectionOptions:\n      description: \"connection options\"\n      type: object\n      additionalProperties: false\n      properties:\n        suppressContentLengthHeader:\n          type: boolean\n        contentLengthHeaderOverride:\n          type: integer\n        suppressConnectionHeader:\n          type: boolean\n        chunkSize:\n          type: integer\n        keepAliveOverride:\n          type: boolean\n        closeSocket:\n          type: boolean\n        closeSocketDelay:\n          $ref: \"#/components/schemas/Delay\"\n    Verification:\n      description: \"verification\"\n      type: object\n      additionalProperties: false\n      properties:\n        expectationId:\n          $ref: \"#/components/schemas/ExpectationId\"\n        httpRequest:\n          $ref: \"#/components/schemas/RequestDefinition\"\n        times:\n          $ref: \"#/components/schemas/VerificationTimes\"\n        maximumNumberOfRequestToReturnInVerificationFailure:\n          type: integer\n      oneOf:\n        - required:\n            - expectationId\n        - required:\n            - httpRequest\n    VerificationTimes:\n      description: \"number of request to verify\"\n      type: object\n      additionalProperties: false\n      properties:\n        atLeast:\n          type: integer\n        atMost:\n          type: integer\n    VerificationSequence:\n      description: \"verification sequence\"\n      type: object\n      additionalProperties: false\n      properties:\n        expectationIds:\n          type: array\n          additionalProperties: false\n          items:\n            $ref: \"#/components/schemas/ExpectationId\"\n        httpRequests:\n          type: array\n          items:\n            $ref: \"#/components/schemas/RequestDefinition\"\n        maximumNumberOfRequestToReturnInVerificationFailure:\n          type: integer\n      oneOf:\n        - required:\n            - expectationIds\n        - required:\n            - httpRequests\n    Ports:\n      description: \"list of ports\"\n      type: object\n      additionalProperties: false\n      properties:\n        ports:\n          items:\n            type: number\n          type: array"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"StringOrJsonSchema\": parse schema: oneOf: [1]: parse schema: property \"schema\": parse schema: resolve \"http://json-schema.org/draft-04/schema\": external \"http://json-schema.org/draft-04/schema\": http: do: Get \"http://json-schema.org/draft-04/schema\": host \"json-schema.org\" is not allowed"
}