{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/unstoppabledomains/live-docs"
		},
		"file": {
			"name": "openapi-3.yaml",
			"size": 0,
			"path": "src/.gitbook/assets/openapi-3.yaml",
			"byteSize": 14450,
			"content": "components:\n  schemas:\n    Model:\n      properties:\n        id:\n          type: number\n        createdAt:\n          oneOf:\n            - format: date\n              type: string\n            - format: date-time\n              type: string\n        updatedAt:\n          oneOf:\n            - format: date\n              type: string\n            - format: date-time\n              type: string\n      type: object\n    DomainsResolution:\n      properties:\n        ownerAddress:\n          pattern: ^0x[a-fA-F0-9]{40}$\n          type: string\n        resolver:\n          not:\n            type: string\n            enum:\n              - '0x0000000000000000000000000000000000000000'\n          pattern: ^0x[a-fA-F0-9]{40}$\n          type: string\n        registry: {}\n        resolution:\n          $ref: '#/components/schemas/Object'\n          type: object\n        blockchain:\n          enum:\n            - ETH\n            - ZIL\n            - MATIC\n          type: string\n        id:\n          type: number\n        createdAt:\n          oneOf:\n            - format: date\n              type: string\n            - format: date-time\n              type: string\n        updatedAt:\n          oneOf:\n            - format: date\n              type: string\n            - format: date-time\n              type: string\n      type: object\n      required:\n        - blockchain\n    WorkerStatus:\n      properties:\n        location:\n          enum:\n            - ETH\n            - ZIL\n            - MATIC\n          type: string\n        lastMirroredBlockNumber:\n          minimum: 0\n          type: number\n        lastMirroredBlockHash: {}\n        lastAtxuid:\n          type: number\n        id:\n          type: number\n        createdAt:\n          oneOf:\n            - format: date\n              type: string\n            - format: date-time\n              type: string\n        updatedAt:\n          oneOf:\n            - format: date\n              type: string\n            - format: date-time\n              type: string\n      type: object\n      required:\n        - location\n        - lastMirroredBlockNumber\n    CnsRegistryEvent:\n      properties:\n        type:\n          enum:\n            - Transfer\n            - Resolve\n            - NewURI\n            - Sync\n            - Set\n            - ResetRecords\n            - Approval\n            - ApprovalForAll\n            - NewURIPrefix\n            - Upgraded\n            - AdminChanged\n          type: string\n        blockchain:\n          type: string\n        networkId:\n          type: number\n        blockNumber:\n          $ref: '#/components/schemas/Object'\n          type: number\n        blockHash:\n          pattern: 0x[0-9a-f]+\n          type: string\n        logIndex:\n          $ref: '#/components/schemas/Object'\n          minimum: 0\n          type: number\n        transactionHash:\n          $ref: '#/components/schemas/Object'\n          pattern: 0x[0-9a-f]+\n          type: string\n        returnValues:\n          type: object\n        node:\n          pattern: 0x[0-9a-f]+\n          type: string\n        id:\n          type: number\n        createdAt:\n          oneOf:\n            - format: date\n              type: string\n            - format: date-time\n              type: string\n        updatedAt:\n          oneOf:\n            - format: date\n              type: string\n            - format: date-time\n              type: string\n      type: object\n      required:\n        - type\n        - blockchain\n        - networkId\n        - blockNumber\n        - returnValues\n    Domain:\n      properties:\n        name:\n          type: string\n        node:\n          pattern: ^0x[a-f0-9]{64}$\n          type: string\n        parent: {}\n        id:\n          type: number\n        createdAt:\n          oneOf:\n            - format: date\n              type: string\n            - format: date-time\n              type: string\n        updatedAt:\n          oneOf:\n            - format: date\n              type: string\n            - format: date-time\n              type: string\n      type: object\n      required:\n        - name\n        - node\n    ZnsTransaction:\n      properties:\n        atxuid:\n          $ref: '#/components/schemas/Object'\n          minimum: 0\n          type: number\n        hash:\n          pattern: ^0x[0-9a-f]{64}$\n          type: string\n        blockNumber:\n          $ref: '#/components/schemas/Object'\n          minimum: 165700\n          type: integer\n        id:\n          type: number\n        createdAt:\n          oneOf:\n            - format: date\n              type: string\n            - format: date-time\n              type: string\n        updatedAt:\n          oneOf:\n            - format: date\n              type: string\n            - format: date-time\n              type: string\n      type: object\n      required:\n        - blockNumber\n    ApiKey:\n      properties:\n        name:\n          type: string\n        apiKey:\n          format: uuid\n          type: string\n        id:\n          type: number\n        createdAt:\n          oneOf:\n            - format: date\n              type: string\n            - format: date-time\n              type: string\n        updatedAt:\n          oneOf:\n            - format: date\n              type: string\n            - format: date-time\n              type: string\n      type: object\n      required:\n        - name\n        - apiKey\n    DomainMetadata:\n      properties:\n        domain:\n          type: string\n        owner:\n          type: string\n        resolver:\n          type: string\n        blockchain:\n          items:\n            type: string\n            enum:\n              - ETH\n              - ZIL\n              - MATIC\n          type: string\n        networkId:\n          type: number\n          enum:\n            - 1\n            - 4\n            - 137\n            - 1337\n            - 80001\n        registry:\n          type: string\n      type: object\n      required:\n        - domain\n    DomainResponse:\n      properties:\n        meta:\n          $ref: '#/components/schemas/DomainMetadata'\n        records:\n          type: object\n      type: object\n      required:\n        - meta\n        - records\n    DomainsListQuery:\n      properties:\n        owners:\n          items:\n            minLength: 1\n            type: string\n          type: array\n          minItems: 1\n        tlds:\n          $ref: '#/components/schemas/Object'\n          items:\n            type: string\n          type: array\n        sortBy:\n          type: string\n          enum:\n            - id\n            - name\n        sortDirection:\n          type: string\n          enum:\n            - ASC\n            - DESC\n        perPage:\n          maximum: 200\n          type: integer\n          minimum: 1\n        startingAfter: {}\n      type: object\n      required:\n        - owners\n    DomainAttributes:\n      properties:\n        id:\n          type: string\n        attributes:\n          $ref: '#/components/schemas/DomainResponse'\n      type: object\n      required:\n        - id\n        - attributes\n    DomainsListMeta:\n      properties:\n        nextStartingAfter:\n          type: string\n          minLength: 1\n        sortBy:\n          type: string\n          minLength: 1\n        sortDirection:\n          type: string\n          minLength: 1\n        perPage:\n          maximum: 200\n          type: string\n          minimum: 1\n          minLength: 1\n        hasMore:\n          type: string\n          minLength: 1\n      type: object\n      required:\n        - nextStartingAfter\n        - sortBy\n        - sortDirection\n        - perPage\n        - hasMore\n    BlockchainStatus:\n      properties:\n        isUpToDate:\n          type: boolean\n        latestNetworkBlock:\n          type: number\n        latestMirroredBlock:\n          type: number\n        networkId:\n          type: number\n        acceptableDelayInBlocks:\n          type: number\n      type: object\n      required:\n        - isUpToDate\n        - latestNetworkBlock\n        - latestMirroredBlock\n        - networkId\n        - acceptableDelayInBlocks\n    Blockchains:\n      properties:\n        ETH:\n          $ref: '#/components/schemas/BlockchainStatus'\n        MATIC:\n          $ref: '#/components/schemas/BlockchainStatus'\n        ZIL:\n          $ref: '#/components/schemas/BlockchainStatus'\n      type: object\n      required:\n        - ETH\n        - MATIC\n        - ZIL\n    StatusResponse:\n      properties:\n        blockchain:\n          $ref: '#/components/schemas/Blockchains'\n      type: object\n      required:\n        - blockchain\n    Erc721Metadata:\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n        image:\n          type: string\n        external_url:\n          type: string\n      type: object\n      required:\n        - name\n        - description\n        - image\n        - external_url\n    OpenSeaMetadata:\n      properties:\n        external_link:\n          type: string\n        image_data:\n          type: string\n        properties:\n          type: object\n        attributes:\n          items: {}\n          type: array\n        background_color:\n          type: string\n        animation_url:\n          type: string\n        youtube_url:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        image:\n          type: string\n        external_url:\n          type: string\n      type: object\n      required:\n        - properties\n        - attributes\n        - name\n        - description\n        - image\n        - external_url\n    ImageResponse:\n      properties:\n        image_data:\n          type: string\n      type: object\n      required:\n        - image_data\n  securitySchemes:\n    apiKeyAuth:\n      scheme: bearer\n      type: http\ninfo:\n  title: ''\n  version: 1.0.0\nopenapi: 3.0.0\npaths:\n  /domains/{domainName}:\n    get:\n      operationId: DomainsController.getDomain\n      parameters:\n        - in: path\n          name: domainName\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainResponse'\n          description: ''\n      summary: Get domain\n      tags:\n        - Domains\n      security:\n        - apiKeyAuth: []\n  /domains:\n    get:\n      operationId: DomainsController.getDomainsList\n      parameters:\n        - in: query\n          name: owners\n          required: true\n          schema:\n            items:\n              minLength: 1\n              type: string\n            type: array\n            minItems: 1\n        - in: query\n          name: tlds\n          required: false\n          schema:\n            $ref: '#/components/schemas/Object'\n            items:\n              type: string\n            type: array\n        - in: query\n          name: sortBy\n          required: false\n          schema:\n            type: string\n            enum:\n              - id\n              - name\n        - in: query\n          name: sortDirection\n          required: false\n          schema:\n            type: string\n            enum:\n              - ASC\n              - DESC\n        - in: query\n          name: perPage\n          required: false\n          schema:\n            maximum: 200\n            type: integer\n            minimum: 1\n        - in: query\n          name: startingAfter\n          required: false\n          schema: {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/DomainAttributes'\n          description: Successful response\n      summary: Get domains list\n      tags:\n        - Domains\n      security:\n        - apiKeyAuth: []\n  /status:\n    get:\n      operationId: StatusController.getStatus\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatusResponse'\n          description: ''\n      summary: Get status\n      tags:\n        - Status\n  /liveness_check:\n    get:\n      operationId: StatusController.livenessCheck\n      responses:\n        '200':\n          content:\n            application/json: {}\n          description: Successful response\n      summary: Liveness check\n      tags:\n        - Status\n  /readiness_check:\n    get:\n      operationId: StatusController.readinessCheck\n      responses:\n        '200':\n          content:\n            application/json: {}\n          description: Successful response\n      summary: Readiness check\n      tags:\n        - Status\n  /deaddata/{domainOrToken}:\n    get:\n      operationId: MetaDataController.getDeadData\n      parameters:\n        - in: path\n          name: domainOrToken\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            text/html; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/OpenSeaMetadata'\n          description: ''\n      summary: Get dead data\n      tags:\n        - Meta Data\n  /metadata/{domainOrToken}:\n    get:\n      operationId: MetaDataController.getMetaData\n      parameters:\n        - in: path\n          name: domainOrToken\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            text/html; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/OpenSeaMetadata'\n          description: ''\n      summary: Get meta data\n      tags:\n        - Meta Data\n  /image/{domainOrToken}:\n    get:\n      operationId: MetaDataController.getImage\n      parameters:\n        - in: path\n          name: domainOrToken\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            text/html; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/ImageResponse'\n          description: ''\n      summary: Get image\n      tags:\n        - Meta Data\n  /image-src/{domainOrToken}:\n    get:\n      operationId: MetaDataController.getImageSrc\n      parameters:\n        - in: path\n          name: domainOrToken\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            text/html; charset=utf-8: {}\n          description: Successful response\n      summary: Get image src\n      tags:\n        - Meta Data\n"
		}
	},
	"Error": "parse: parse spec: paths: /domains: get: operation \"DomainsController.getDomainsList\": parameters: parse parameter \"tlds\": schema: parse schema: resolve \"#/components/schemas/Object\": find schema: resolve \"#/components/schemas/Object\": can't find value for \"components/schemas/Object\""
}