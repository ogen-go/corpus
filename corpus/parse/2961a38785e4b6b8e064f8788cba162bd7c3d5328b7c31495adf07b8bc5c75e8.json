{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/adobe.analytics/openapi.yaml",
			"byteSize": 120221,
			"content": "openapi: 3.0.1\ninfo:\n  title: Adobe Analytics APIs\n  description: \n    The Adobe Analytics 2.0 APIs allow you to directly call Adobe's servers to perform almost any action that you can \n    perform in the user interface. You can create reports to explore, get insights, or answer important questions about your data. \n    You can also manage components of Adobe Analytics, such as the creation of segments or calculated metrics. \n  version: 'v1 - Build: 2019-10-03_20:32:29.323'\n  x-ballerina-init-description: \n    The connector initialization requires setting the API credentials.\n\n    Create an [Adobe Developer account](https://developer.adobe.com) and obtain tokens by following [this guide](https://developer.adobe.com/analytics-apis/docs/2.0/guides/).\n  x-ballerina-display:\n    label: Adobe Analytics\n    iconPath: \"icon.png\" \nservers:\n- url: https://analytics.adobe.io/\ntags:\n- name: calculatedmetrics\n- name: collections\n- name: component-metadata - tags\n- name: component-metadata - shares\n- name: dateranges\n- name: dimensions\n- name: metrics\n- name: reports\n- name: segments\n- name: users\n- name: usagelogs\npaths:\n  /calculatedmetrics:\n    get:\n      tags:\n      - calculatedmetrics\n      summary: Retrieve many calculated metrics\n      description: \"A calculated metric response will always include these default\\\n        \\ items: *id, name, description, rsid, owner, polarity, precision, type* \\n\\\n        \\nOther attributes can be optionally requested through the 'expansion' field:\\n\\\n        \\n* *modified*: Date that the metric was last modified (ISO 8601)\\n* *definition*:\\\n        \\ Calculated metric definition as JSON object\\n* *compatibility*: Products\\\n        \\ that the metric is compatible with\\n* *reportSuiteName*: Also return the\\\n        \\ friendly Report Suite name for the RSID\\n* *tags*: Gives all existing tags\\\n        \\ associated with the calculated metric\\n\\nFor more information about calculated\\\n        \\ metrics go [here](https://github.com/AdobeDocs/analytics-2.0-apis/blob/master/calculatedmetrics.md)\\n\\\n        \\n\"\n      operationId: find Calculated Metrics\n      parameters:\n      - name: rsids\n        in: query\n        description: Filter list to only include calculated metrics tied to specified\n          RSID list (comma-delimited)\n        schema:\n          type: string\n      - name: ownerId\n        in: query\n        description: Filter list to only include calculated metrics owned by the specified\n          loginId\n        schema:\n          type: integer\n          format: int32\n      - name: filterByIds\n        in: query\n        description: Filter list to only include calculated metrics in the specified\n          list (comma-delimited list of IDs) (this is the same as calculatedMetricFilter,\n          and is overwritten by calculatedMetricFilter\n        schema:\n          type: string\n      - name: toBeUsedInRsid\n        in: query\n        description: The report suite where the calculated metric intended to be used.  This\n          report suite will be used to determine things like compatibility and permissions.  If\n          it is not specified then the permissions will be calculated based on the\n          union of all metrics authorized in all groups the user belongs to.  If the\n          compatibility expansion is specified and toBeUsedInRsid is not then the\n          compatibility returned is based off the compatibility from the last time\n          the calculated metric was saved.\n        schema:\n          type: string\n      - name: locale\n        in: query\n        description: Locale\n        schema:\n          type: string\n          default: en_US\n      - name: name\n        in: query\n        description: Filter list to only include calculated metrics that contains\n          the Name\n        schema:\n          type: string\n      - name: tagNames\n        in: query\n        description: Filter list to only include calculated metrics that contains\n          one of the tags\n        schema:\n          type: string\n      - name: favorite\n        in: query\n        description: Filter list to only include calculated metrics that are favorites\n        schema:\n          type: boolean\n      - name: approved\n        in: query\n        description: Filter list to only include calculated metrics that are approved\n        schema:\n          type: boolean\n      - name: limit\n        in: query\n        description: Number of results per page\n        schema:\n          type: integer\n          default: 10\n      - name: page\n        in: query\n        description: Page number (base 0 - first page is \"0\")\n        schema:\n          type: integer\n          default: 0\n      - name: sortDirection\n        in: query\n        description: Sort direction (ASC or DESC)\n        schema:\n          type: string\n          default: ASC\n      - name: sortProperty\n        in: query\n        description: Property to sort by (name, modified_date, id is currently allowed)\n        schema:\n          type: string\n          default: id\n      - name: expansion\n        in: query\n        description: Comma-delimited list of additional calculated metric metadata\n          fields to include on response.\n        style: form\n        explode: false\n        schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - reportSuiteName\n            - ownerFullName\n            - modified\n            - tags\n            - shares\n            - definition\n            - compatibility\n            - categories\n          enum:\n          - reportSuiteName\n          - ownerFullName\n          - modified\n          - tags\n          - shares\n          - definition\n          - compatibility\n          - categories\n      - name: includeType\n        in: query\n        description: Include additional calculated metrics not owned by user. The\n          \"all\" option takes precedence over \"shared\"\n        style: form\n        explode: false\n        schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - all\n            - shared\n            - templates\n          enum:\n          - all\n          - shared\n          - templates\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AnalyticsCalculatedMetric'\n        400:\n          description: Unable to retrieve list of calculated metrics shared with user\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CalculatedMetricErrorStatus'\n        401:\n          description: Owner filter error; user specified is not in the same company\n            as the requesting user\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CalculatedMetricErrorStatus'\n        403:\n          description: Requesting non-shared calculated metrics for other users is\n            restricted to admin users\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CalculatedMetricErrorStatus'\n        500:\n          description: External API error; Calculated metric retrieval failed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CalculatedMetricErrorStatus'\n    post:\n      tags:\n      - calculatedmetrics\n      summary: Create a new Calculated Metric\n      description: \"Creates a new calculated metric. The following attributes are\\\n        \\ available when creating a calculated metric:\\n\\nIMPORTANT: Required Fields:\\\n        \\ name, definition, rsid\\n\\nOptional fields: description\\n\\nExample definition\\\n        \\ for use in testing API below (\\\"Visits per visitor\\\"):\\n\\n```json\\n\\n\\\"\\\n        definition\\\": {\\r\\n      \\\"formula\\\": {\\r\\n        \\\"func\\\": \\\"divide\\\",\\r\\\n        \\n        \\\"col1\\\": {\\r\\n          \\\"func\\\": \\\"metric\\\",\\r\\n          \\\"name\\\"\\\n        : \\\"metrics/visits\\\",\\r\\n          \\\"description\\\": \\\"Visits\\\"\\r\\n       \\\n        \\ },\\r\\n        \\\"col2\\\": {\\r\\n          \\\"func\\\": \\\"metric\\\",\\r\\n       \\\n        \\   \\\"name\\\": \\\"metrics/visitors\\\",\\r\\n          \\\"description\\\": \\\"Unique\\\n        \\ Visitors\\\"\\r\\n        }\\r\\n      },\\r\\n      \\\"func\\\": \\\"calc-metric\\\",\\r\\\n        \\n      \\\"version\\\": [\\r\\n        1,\\r\\n        0,\\r\\n        0\\r\\n      ]\\r\\\n        \\n    }\\n```\\n\\nA calculated metric response will always include these default\\\n        \\ items:* id, name, description, rsid, owner* \\n\\nOther attributes can be\\\n        \\ optionally requested through the 'expansion' field as defined/documented\\\n        \\ in the GET endpoints (see GET \\\"/calculatedmetrics\\\" or GET \\\"/calculatedmetrics/{id}\\\"\\\n        \\ for more documentation).\"\n      operationId: create Calculated Metric\n      parameters:\n      - name: locale\n        in: query\n        description: Locale\n        schema:\n          type: string\n          default: en_US\n      - name: expansion\n        in: query\n        description: Comma-delimited list of additional calculated metric metadata\n          fields to include on response.\n        style: form\n        explode: false\n        schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - reportSuiteName\n            - ownerFullName\n            - modified\n            - tags\n            - shares\n            - definition\n            - compatibility\n            - categories\n          enum:\n          - reportSuiteName\n          - ownerFullName\n          - modified\n          - tags\n          - shares\n          - definition\n          - compatibility\n          - categories\n      requestBody:\n        description: JSON-formatted Object containing key/value pairs for calculated\n          metric creation.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AnalyticsCalculatedMetric'\n        required: false\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AnalyticsCalculatedMetric'\n        400:\n          description: Invalid input; name, rsid, and definition are all required.\n            Definition must be formatted as a JSON Object.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CalculatedMetricErrorStatus'\n        500:\n          description: External API error; Calculated metric create or retrieval failed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CalculatedMetricErrorStatus'\n      x-codegen-request-body-name: body\n  /calculatedmetrics/functions:\n    get:\n      tags:\n      - calculatedmetrics\n      summary: Retrieve calculated metric functions\n      operationId: get Calculated Metric Functions\n      parameters:\n      - name: locale\n        in: query\n        description: Locale\n        schema:\n          type: string\n          default: en_US\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CalcMetricFunction'\n        500:\n          description: External API error; Calculated metric functions retrieval failed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CalculatedMetricErrorStatus'\n  /calculatedmetrics/functions/{id}:\n    get:\n      tags:\n      - calculatedmetrics\n      summary: Retrieve a calculated metric function by id\n      operationId: get Calculated Metric Function\n      parameters:\n      - name: id\n        in: path\n        description: The function ID to retrieve\n        required: true\n        schema:\n          type: string\n      - name: locale\n        in: query\n        description: Locale\n        schema:\n          type: string\n          default: en_US\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CalcMetricFunction'\n        404:\n          description: Calculated metric function not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CalculatedMetricErrorStatus'\n        500:\n          description: External API error; Calculated metric function retrieval failed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CalculatedMetricErrorStatus'\n  /calculatedmetrics/validate:\n    post:\n      tags:\n      - calculatedmetrics\n      summary: Validate a calculated metric definition\n      operationId: validate Calculated Metric\n      parameters:\n      - name: locale\n        in: query\n        description: Locale\n        schema:\n          type: string\n          default: en_US\n      - name: migrating\n        in: query\n        description: Include migration functions in validation\n        schema:\n          type: boolean\n          default: false\n      requestBody:\n        description: JSON-formatted Object containing key/value pairs for calculated\n          metric validation.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AnalyticsCalculatedMetric'\n        required: false\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AnalyticsCalculatedMetric'\n        400:\n          description: Invalid input; name, rsid, and definition are all required.\n            Definition must be formatted as a JSON Object.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CalculatedMetricErrorStatus'\n        500:\n          description: External API error; Calculated metric validation failed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CalculatedMetricErrorStatus'\n      x-codegen-request-body-name: body\n  /calculatedmetrics/{id}:\n    get:\n      tags:\n      - calculatedmetrics\n      summary: Retrieve a single calculated metric by id\n      description: \"A calculated metric response will always include these default\\\n        \\ items: *id, name, description, rsid, owner, polarity, precision, type* \\n\\\n        \\nOther attributes can be optionally requested through the 'expansion' field:\\n\\\n        \\n* *modified*: Date that the metric was last modified (ISO 8601)\\n* *definition*:\\\n        \\ Calculated metric definition as JSON object\\n* *compatibility*: Products\\\n        \\ that the metric is compatible with\\n* *reportSuiteName*: Also return the\\\n        \\ friendly Report Suite name for the RSID\\n* *tags*: Gives all existing tags\\\n        \\ associated with the calculated metric\\n\\nFor more information about calculated\\\n        \\ metrics go [here](https://github.com/AdobeDocs/analytics-2.0-apis/blob/master/calculatedmetrics.md)\\n\\\n        \\n\"\n      operationId: find One Calculated Metric\n      parameters:\n      - name: id\n        in: path\n        description: The calculated metric ID to retrieve\n        required: true\n        schema:\n          type: string\n      - name: locale\n        in: query\n        description: Locale\n        schema:\n          type: string\n          default: en_US\n      - name: expansion\n        in: query\n        description: Comma-delimited list of additional calculated metric metadata\n          fields to include on response.\n        style: form\n        explode: false\n        schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - reportSuiteName\n            - ownerFullName\n            - modified\n            - tags\n            - shares\n            - definition\n            - compatibility\n            - categories\n          enum:\n          - reportSuiteName\n          - ownerFullName\n          - modified\n          - tags\n          - shares\n          - definition\n          - compatibility\n          - categories\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AnalyticsCalculatedMetric'\n        403:\n          description: Requesting non-shared calculated metrics for other users is\n            restricted to admin users\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CalculatedMetricErrorStatus'\n        500:\n          description: External API error; calculated metric retrieval failed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CalculatedMetricErrorStatus'\n    put:\n      tags:\n      - calculatedmetrics\n      summary: Update an existing calculated metric\n      description: \"The following fields can be modified through this endpoint: \u003cbr\u003e\u003cb\u003ename,\\\n        \\ description, definition, owner, rsid\u003c/b\u003e\\nExample \\\"defintion\\\" for use\\\n        \\ in testing API below (\\\"Visits per visitor\\\"):\u003cbr\u003e\\n\\\"definition\\\": {\\r\\n\\\n        \\      \\\"formula\\\": {\\r\\n        \\\"func\\\": \\\"divide\\\",\\r\\n        \\\"col1\\\"\\\n        : {\\r\\n          \\\"func\\\": \\\"metric\\\",\\r\\n          \\\"name\\\": \\\"metrics/visits\\\"\\\n        ,\\r\\n          \\\"description\\\": \\\"Visits\\\"\\r\\n        },\\r\\n        \\\"col2\\\"\\\n        : {\\r\\n          \\\"func\\\": \\\"metric\\\",\\r\\n          \\\"name\\\": \\\"metrics/visitors\\\"\\\n        ,\\r\\n          \\\"description\\\": \\\"Unique Visitors\\\"\\r\\n        }\\r\\n     \\\n        \\ },\\r\\n      \\\"func\\\": \\\"calc-metric\\\",\\r\\n      \\\"version\\\": [\\r\\n     \\\n        \\   1,\\r\\n        0,\\r\\n        0\\r\\n      ]\\r\\n    }\u003cbr\u003e\u003cbr\u003eResponse will\\\n        \\ be the newly modified calculated metric object after the update request\\\n        \\ completes.\u003cbr\u003e\u003cbr\u003e\u003cb\u003e\u003cspan style=\\\"text-decoration: underline;\\\"\u003eCalculatedMetricResponse\u003c/span\u003e\u003c/b\u003e\u003cbr\u003eA\\\n        \\ calculated metric response will always include these default items:* id,\\\n        \\ name, description, rsid, owner* \\n\\nOther attributes can be optionally requested\\\n        \\ through the 'expansion' field as defined/documented in the GET endpoints\\\n        \\ (see GET \\\"/calculatedmetrics\\\" or GET \\\"/calculatedmetrics/{id}\\\" for more\\\n        \\ documentation).\"\n      operationId: update Calculated Metric\n      parameters:\n      - name: id\n        in: path\n        description: Calculated Metric ID to be updated\n        required: true\n        schema:\n          type: string\n      - name: locale\n        in: query\n        description: Locale\n        schema:\n          type: string\n          default: en_US\n      - name: expansion\n        in: query\n        description: Comma-delimited list of additional calculated metric metadata\n          fields to include on response.\n        style: form\n        explode: false\n        schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - reportSuiteName\n            - ownerFullName\n            - modified\n            - tags\n            - shares\n            - definition\n            - compatibility\n            - categories\n          enum:\n          - reportSuiteName\n          - ownerFullName\n          - modified\n          - tags\n          - shares\n          - definition\n          - compatibility\n          - categories\n      requestBody:\n        description: JSON-formatted Object containing key/value pairs to be updated.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AnalyticsCalculatedMetric'\n        required: false\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AnalyticsCalculatedMetric'\n        400:\n          description: Definition must be formatted as a JSON Object\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CalculatedMetricErrorStatus'\n        401:\n          description: Company mismatch; calculated metric ownership can only be transferred\n            within the same organization\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CalculatedMetricErrorStatus'\n        403:\n          description: User does not have permission to update this calculated metric\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CalculatedMetricErrorStatus'\n        500:\n          description: External API error; Calculated metric update or retrieval failed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CalculatedMetricErrorStatus'\n      x-codegen-request-body-name: body\n    delete:\n      tags:\n      - calculatedmetrics\n      summary: Deletion of Calculated Metrics by Id\n      operationId: delete Calculated Metric\n      parameters:\n      - name: id\n        in: path\n        description: The calculated metric ID to be deleted\n        required: true\n        schema:\n          type: string\n      - name: locale\n        in: query\n        description: Locale\n        schema:\n          type: string\n          default: en_US\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteResponse'\n        500:\n          description: External API error; Calculated metric delete failed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CalculatedMetricErrorStatus'\n  /collections/suites:\n    get:\n      tags:\n      - collections\n      summary: Retrieves report suites that match the given filters.\n      description: Returns all report suite types in a single collection.\n      operationId: list report suites\n      parameters:\n      - name: rsids\n        in: query\n        description: Filter list to only include suites in this RSID list (comma-delimited)\n        schema:\n          type: string\n      - name: rsidContains\n        in: query\n        description: Filter list to only include suites whose rsid contains rsidContains.\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Number of results per page\n        schema:\n          type: integer\n          default: 10\n      - name: page\n        in: query\n        description: Page number (base 0 - first page is \"0\")\n        schema:\n          type: integer\n          default: 0\n      - name: expansion\n        in: query\n        description: Comma-delimited list of additional metadata fields to include\n          on response.\n        style: form\n        explode: false\n        schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - name\n            - parentRsid\n            - currency\n            - calendarType\n            - timezoneZoneinfo\n          enum:\n          - name\n          - parentRsid\n          - currency\n          - calendarType\n          - timezoneZoneinfo\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuiteCollectionItem'\n        500:\n          description: Unexpected error; report suite retrieval failed\n          content: {}\n  /collections/suites/{rsid}:\n    get:\n      tags:\n      - collections\n      summary: Retrieves report suite by id\n      description: Returns all report suite types in a single collection.\n      operationId: get Report Suite\n      parameters:\n      - name: rsid\n        in: path\n        description: The rsid of the suite to return\n        required: true\n        schema:\n          type: string\n      - name: expansion\n        in: query\n        description: Comma-delimited list of additional metadata fields to include\n          on response.\n        style: form\n        explode: false\n        schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - name\n            - parentRsid\n            - currency\n            - calendarType\n            - timezoneZoneinfo\n          enum:\n          - name\n          - parentRsid\n          - currency\n          - calendarType\n          - timezoneZoneinfo\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuiteCollectionItem'\n        500:\n          description: Unexpected error; report suite retrieval failed\n          content: {}\n  /componentmetadata/tags/component/search:\n    post:\n      tags:\n      - component-metadata - tags\n      summary: search for tags for several components at once\n      operationId: search Component Tags\n      parameters:\n      - name: limit\n        in: query\n        description: Number of results per page\n        schema:\n          type: integer\n          default: 10\n      - name: page\n        in: query\n        description: Page number (base 0 - first page is \"0\")\n        schema:\n          type: integer\n          default: 0\n      requestBody:\n        description: items to search for\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ComponentSearch'\n        required: false\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaggedComponent'\n      x-codegen-request-body-name: body\n  /componentmetadata/tags:\n    get:\n      tags:\n      - component-metadata - tags\n      summary: Returns a list of tags for the current user's company\n      operationId: find All Tags For Company\n      parameters:\n      - name: limit\n        in: query\n        description: Number of results per page\n        schema:\n          type: integer\n          default: 10\n      - name: page\n        in: query\n        description: Page number (base 0 - first page is \"0\")\n        schema:\n          type: integer\n          default: 0\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Tag'\n        500:\n          description: Unable to retrieve list of tags for user.\n          content: {}\n    post:\n      tags:\n      - component-metadata - tags\n      summary: Saves the given tag(s) for the current user's company\n      description: Allows creation of a new tag and applies that new tag to the passed\n        component\n      operationId: save Tag List For Company\n      requestBody:\n        description: JSON-formatted array of Tag objects containing key-value pairs\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/Tag'\n        required: false\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Tag'\n        500:\n          description: Unable to save list of tags.\n          content: {}\n      x-codegen-request-body-name: body\n    delete:\n      tags:\n      - component-metadata - tags\n      summary: Disassociates all tags from the given components\n      description: Removes all tags from the passed componentIds. Note that currently\n        this is done in a single DB query, so there is a single combined response\n        for the entire operation.\n      operationId: delete Tag Items From Components\n      parameters:\n      - name: componentIds\n        in: query\n        description: Comma-separated list of componentIds to operate on.\n        required: true\n        schema:\n          type: string\n      - name: componentType\n        in: query\n        description: The component type to operate on.\n        required: true\n        schema:\n          type: string\n          enum:\n          - segment\n          - dashboard\n          - bookmark\n          - calculatedMetric\n          - project\n          - dateRange\n          - metric\n          - dimension\n          - virtualReportSuite\n          - scheduledJob\n          - alert\n          - classificationSet\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  additionalProperties:\n                    type: object\n                    properties: {}\n        400:\n          description: Invalid component type.\n          content: {}\n        500:\n          description: Unable to remove tags for given components.\n          content: {}\n  /componentmetadata/tags/search:\n    get:\n      tags:\n      - component-metadata - tags\n      summary: Retrieves a tags for a given component by componentId and componentType\n      description: Given a componentId, return all tags associated with that component\n      operationId: get Tag List By Component Id And Component Type\n      parameters:\n      - name: componentId\n        in: query\n        description: The componentId to operate on. Currently this is just the segmentId.\n        required: true\n        schema:\n          type: string\n      - name: componentType\n        in: query\n        description: The component type to operate on.\n        required: true\n        schema:\n          type: string\n          enum:\n          - segment\n          - dashboard\n          - bookmark\n          - calculatedMetric\n          - project\n          - dateRange\n          - metric\n          - dimension\n          - virtualReportSuite\n          - scheduledJob\n          - alert\n          - classificationSet\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Tag'\n        400:\n          description: Invalid component type.\n          content: {}\n        500:\n          description: Unable to retrieve tags for given component.\n          content: {}\n  /componentmetadata/tags/tagitems:\n    put:\n      tags:\n      - component-metadata - tags\n      summary: 'Tag a component with one or many tags at once. WARNING: Authoritative;\n        deletes/overwrites all pre-existing associations'\n      description: This endpoint allows many tags at once to be created/deleted. Any\n        tags passed to this endpoint will become the *only* tags for that componentId\n        (all other tags will be removed).\n      operationId: save Tag Component List\n      requestBody:\n        description: JSON-formatted object containing key-value pairs that conform\n          to the schema\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/TaggedComponent'\n        required: false\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/TaggedComponent'\n        500:\n          description: Unable to save tag list.\n          content: {}\n      x-codegen-request-body-name: body\n  /componentmetadata/tags/{id}:\n    get:\n      tags:\n      - component-metadata - tags\n      summary: Retrieves an tag by its id\n      operationId: get Tag By Id\n      parameters:\n      - name: id\n        in: path\n        description: Tag ID to be retrieved\n        required: true\n        schema:\n          type: integer\n          format: int32\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Tag'\n        404:\n          description: Unable to find a tag with the given ID\n          content: {}\n        500:\n          description: Unexpected server error while trying to retrieve tag\n          content: {}\n    delete:\n      tags:\n      - component-metadata - tags\n      summary: Removes the tagId and all associations from that tag to any components\n      description: Delete by tagId. Will un-tag any/all components that were associated\n        with the passed tagId.\n      operationId: delete Tag\n      parameters:\n      - name: id\n        in: path\n        description: The tagId to be deleted\n        required: true\n        schema:\n          type: integer\n          format: int32\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  additionalProperties:\n                    type: object\n                    properties: {}\n        404:\n          description: The given tagId does not exist\n          content: {}\n        500:\n          description: Unable to delete the given tagId.\n          content: {}\n  /componentmetadata/tags/tagnames:\n    get:\n      tags:\n      - component-metadata - tags\n      summary: Retrieves component ids associated with the given tag names\n      description: Given a comma separated list of tag names, return component ids\n        associated with them.\n      operationId: get Components By Tag Name\n      parameters:\n      - name: tagNames\n        in: query\n        description: Comma separated list of tag names.\n        required: true\n        schema:\n          type: string\n      - name: componentType\n        in: query\n        description: The component type to operate on.\n        required: true\n        schema:\n          type: string\n          enum:\n          - segment\n          - dashboard\n          - bookmark\n          - calculatedMetric\n          - project\n          - dateRange\n          - metric\n          - dimension\n          - virtualReportSuite\n          - scheduledJob\n          - alert\n          - classificationSet\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n        400:\n          description: Invalid component type.\n          content: {}\n        500:\n          description: Unable to retrieve tags for given component.\n          content: {}\n  /componentmetadata/shares/component/search:\n    post:\n      tags:\n      - component-metadata - shares\n      summary: search for shares for several components at once\n      operationId: search Component Shares\n      parameters:\n      - name: limit\n        in: query\n        description: Number of results per page\n        schema:\n          type: integer\n          default: 10\n      - name: page\n        in: query\n        description: Page number (base 0 - first page is \"0\")\n        schema:\n          type: integer\n          default: 0\n      requestBody:\n        description: items to search for\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ComponentSearch'\n        required: false\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SharedComponent'\n      x-codegen-request-body-name: body\n  /componentmetadata/shares/sharedto/me:\n    get:\n      tags:\n      - component-metadata - shares\n      summary: get components shared with the current user by type\n      operationId: get Components shared To Me\n      parameters:\n      - name: componentType\n        in: query\n        description: Component type to get shared ids for\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n  /componentmetadata/shares:\n    get:\n      tags:\n      - component-metadata - shares\n      summary: Returns a list of shares for the current user's company\n      operationId: find All Shares For Company\n      parameters:\n      - name: limit\n        in: query\n        description: Number of results per page\n        schema:\n          type: integer\n          default: 10\n      - name: page\n        in: query\n        description: Page number (base 0 - first page is \"0\")\n        schema:\n          type: integer\n          default: 0\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Share'\n        500:\n          description: Unable to retrieve list of shares for user.\n          content: {}\n    put:\n      tags:\n      - component-metadata - shares\n      summary: 'Share components with users. WARNING: Authoritative; deletes/overwrites\n        all pre-existing shares for the given components'\n      operationId: update Shares For Components\n      requestBody:\n        description: JSON-formatted array of Share objects containing key-value pairs\n        content:\n          '*/*':\n            schema:\n              $ref: '#/components/schemas/SharedComponent'\n        required: false\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SharedComponent'\n        500:\n          description: Unexpected server error while trying to update shares\n          content: {}\n      x-codegen-request-body-name: body\n    post:\n      tags:\n      - component-metadata - shares\n      summary: Saves the given share for the current user's company\n      description: Allows creation of a new share with a group/user/all\n      operationId: save Share my Company\n      requestBody:\n        description: JSON-formatted array of Share objects containing key-value pairs\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Share'\n        required: false\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Share'\n        500:\n          description: Unable to save list of tags.\n          content: {}\n      x-codegen-request-body-name: body\n  /componentmetadata/shares/{id}:\n    get:\n      tags:\n      - component-metadata - shares\n      summary: Retrieves an share by its id\n      operationId: get Share By Id\n      parameters:\n      - name: id\n        in: path\n        description: Share ID to be retrieved\n        required: true\n        schema:\n          type: integer\n          format: int32\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Share'\n        404:\n          description: Unable to find a share with the given ID\n          content: {}\n        500:\n          description: Unexpected server error while trying to retrieve share\n          content: {}\n    delete:\n      tags:\n      - component-metadata - shares\n      summary: Removes the shareId and all associations from that share\n      description: Delete by shareId. Will un-share the associated component with\n        the entity shared with.\n      operationId: delete Share\n      parameters:\n      - name: id\n        in: path\n        description: The shareId to be deleted\n        required: true\n        schema:\n          type: integer\n          format: int32\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  shareId:\n                    type: integer\n                  success:\n                    type: object\n                    properties:\n                      success:\n                        type: string\n        404:\n          description: The given shareId does not exist\n          content: {}\n        500:\n          description: Unable to delete the given shareId.\n          content: {}\n  /dateranges:\n    get:\n      tags:\n      - dateranges\n      summary: Returns a list of dateranges for the user\n      description: This API allows users to store commonly used date ranges so that\n        they can be reused throughout the product.\n      operationId: get Date Ranges for User\n      parameters:\n      - name: locale\n        in: query\n        description: Locale\n        schema:\n          type: string\n          default: en_US\n      - name: filterByIds\n        in: query\n        description: Filter list to only include date ranges in the specified list\n          (comma-delimited list of IDs)\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Number of results per page\n        schema:\n          type: integer\n          default: 10\n      - name: page\n        in: query\n        description: Page number (base 0 - first page is \"0\")\n        schema:\n          type: integer\n          default: 0\n      - name: expansion\n        in: query\n        description: Comma-delimited list of additional date range metadata fields\n          to include on response.\n        style: form\n        explode: false\n        schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - definition\n            - ownerFullName\n            - modified\n            - tags\n          enum:\n          - definition\n          - ownerFullName\n          - modified\n          - tags\n      - name: includeType\n        in: query\n        description: Include additional date ranges not owned by user. The \"all\" option\n          takes precedence over \"shared\"\n        style: form\n        explode: false\n        schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - all\n            - shared\n            - templates\n          enum:\n          - all\n          - shared\n          - templates\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AnalyticsDateRange'\n    post:\n      tags:\n      - dateranges\n      summary: Creates configuration for a DateRange.\n      operationId: create Date Range\n      parameters:\n      - name: locale\n        in: query\n        description: Locale\n        schema:\n          type: string\n          default: en_US\n      - name: expansion\n        in: query\n        description: Comma-delimited list of additional date range metadata fields\n          to include on response.\n        style: form\n        explode: false\n        schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - definition\n            - ownerFullName\n            - modified\n            - tags\n          enum:\n          - definition\n          - ownerFullName\n          - modified\n          - tags\n      requestBody:\n        description: JSON-formatted array of Date Range objects containing key-value\n          pairs\n        content:\n          '*/*':\n            schema:\n              $ref: '#/components/schemas/AnalyticsDateRange'\n        required: false\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AnalyticsDateRange'\n      x-codegen-request-body-name: body\n  /dateranges/{dateRangeId}:\n    get:\n      tags:\n      - dateranges\n      summary: Retrieves configuration for a DateRange.\n      operationId: get Date Range\n      parameters:\n      - name: dateRangeId\n        in: path\n        description: The DateRange id for which to retrieve information\n        required: true\n        schema:\n          type: string\n      - name: locale\n        in: query\n        description: Locale\n        schema:\n          type: string\n          default: en_US\n      - name: expansion\n        in: query\n        description: Comma-delimited list of additional date range metadata fields\n          to include on response.\n        style: form\n        explode: false\n        schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - definition\n            - ownerFullName\n            - modified\n            - tags\n          enum:\n          - definition\n          - ownerFullName\n          - modified\n          - tags\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AnalyticsDateRange'\n    put:\n      tags:\n      - dateranges\n      summary: Updates configuration for a DateRange.\n      operationId: update Date Range\n      parameters:\n      - name: dateRangeId\n        in: path\n        description: The DateRange id for which to retrieve information\n        required: true\n        schema:\n          type: string\n      - name: locale\n        in: query\n        description: Locale\n        schema:\n          type: string\n          default: en_US\n      - name: expansion\n        in: query\n        description: Comma-delimited list of additional date range metadata fields\n          to include on response.\n        style: form\n        explode: false\n        schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - definition\n            - ownerFullName\n            - modified\n            - tags\n          enum:\n          - definition\n          - ownerFullName\n          - modified\n          - tags\n      requestBody:\n        description: JSON-formatted array of Date Range objects containing key-value\n          pairs\n        content:\n          '*/*':\n            schema:\n              $ref: '#/components/schemas/AnalyticsDateRange'\n        required: false\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AnalyticsDateRange'\n      x-codegen-request-body-name: body\n    delete:\n      tags:\n      - dateranges\n      summary: Deletes a DateRange.\n      operationId: delete Date Range\n      parameters:\n      - name: dateRangeId\n        in: path\n        description: The id of the date range to delete\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: string\n  /dimensions:\n    get:\n      tags:\n      - dimensions\n      summary: Returns a list of dimensions for a given report suite.\n      operationId: get Dimensions for Report Suite\n      parameters:\n      - name: rsid\n        in: query\n        description: A Report Suite ID\n        required: true\n        schema:\n          type: string\n      - name: locale\n        in: query\n        description: Locale\n        schema:\n          type: string\n          default: en_US\n      - name: segmentable\n        in: query\n        description: Only include dimensions that are valid within a segment.\n        schema:\n          type: boolean\n          enum:\n          - true\n      - name: reportable\n        in: query\n        description: Only include dimensions that are valid within a report.\n        schema:\n          type: boolean\n          enum:\n          - true\n      - name: classifiable\n        in: query\n        description: Only include classifiable dimensions.\n        schema:\n          type: boolean\n          default: false\n          enum:\n          - true\n      - name: expansion\n        in: query\n        description: Add extra metadata to items (comma-delimited list)\n        style: form\n        explode: false\n        schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - tags\n            - shares\n            - allowedForReporting\n            - categories\n          enum:\n          - tags\n          - shares\n          - allowedForReporting\n          - categories\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AnalyticsDimension'\n        400:\n          description: Invalid JSON input\n          content: {}\n        401:\n          description: User does not have access to this report suite\n          content: {}\n        500:\n          description: Unexpected internal server error\n          content: {}\n  /dimensions/{dimensionId}:\n    get:\n      tags:\n      - dimensions\n      summary: Returns a dimension for the given report suite\n      operationId: get Dimension for Report Suite\n      parameters:\n      - name: dimensionId\n        in: path\n        description: The dimension ID. For example a valid id is a value like 'evar1'\n        required: true\n        schema:\n          type: string\n      - name: rsid\n        in: query\n        description: The report suite ID.\n        required: true\n        schema:\n          type: string\n      - name: locale\n        in: query\n        description: The locale to use for returning system named dimensions.\n        schema:\n          type: string\n          default: en_US\n      - name: expansion\n        in: query\n        description: Add extra metadata to items (comma-delimited list)\n        style: form\n        explode: false\n        schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - tags\n            - shares\n            - allowedForReporting\n            - categories\n          enum:\n          - tags\n          - shares\n          - allowedForReporting\n          - categories\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AnalyticsDimension'\n        401:\n          description: User Doesn't have sufficient privileges\n          content: {}\n  /metrics:\n    get:\n      tags:\n      - metrics\n      summary: Returns a list of metrics for the given report suite\n      description: This returns the metrics list primarily for the Analytics product.\n        The platform identity API Returns a list of all possible metrics for the supported\n        systems.\n      operationId: get Metrics for Report Suite\n      parameters:\n      - name: rsid\n        in: query\n        description: ID of desired report suite ie. myrsid\n        required: true\n        schema:\n          type: string\n      - name: locale\n        in: query\n        description: Locale that system named metrics should be returned in\n        schema:\n          type: string\n          default: en_US\n      - name: segmentable\n        in: query\n        description: Filter the metrics by if they are valid in a segment.\n        schema:\n          type: boolean\n          default: false\n      - name: expansion\n        in: query\n        description: Add extra metadata to items (comma-delimited list)\n        style: form\n        explode: false\n        schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - tags\n            - shares\n            - allowedForReporting\n            - categories\n          enum:\n          - tags\n          - shares\n          - allowedForReporting\n          - categories\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AnalyticsMetric'\n        400:\n          description: Invalid JSON input\n          content: {}\n        403:\n          description: Insufficient access to perform operation\n          content: {}\n        500:\n          description: Unexpected internal server error\n          content: {}\n  /metrics/{id}:\n    get:\n      tags:\n      - metrics\n      summary: Returns a metric for the given report suite\n      operationId: get Metric for Report Suite\n      parameters:\n      - name: id\n        in: path\n        description: The id of the metric for which to retrieve info. Note ids are\n          values like pageviews, not metrics/pageviews\n        required: true\n        schema:\n          type: string\n      - name: rsid\n        in: query\n        description: ID of desired report suite ie. myrsid\n        required: true\n        schema:\n          type: string\n      - name: locale\n        in: query\n        description: Locale that system named metrics should be returned in\n        schema:\n          type: string\n          default: en_US\n      - name: expansion\n        in: query\n        description: Add extra metadata to items (comma-delimited list)\n        style: form\n        explode: false\n        schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - tags\n            - shares\n            - allowedForReporting\n            - categories\n          enum:\n          - tags\n          - shares\n          - allowedForReporting\n          - categories\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AnalyticsMetric'\n        400:\n          description: Invalid JSON input\n          content: {}\n        403:\n          description: Insufficient access to perform operation\n          content: {}\n        500:\n          description: Unexpected internal server error\n          content: {}\n  /projects/{projectId}:\n    get:\n      tags:\n      - projects\n      summary: Retrieves configuration for a Project.\n      operationId: get Project Configuration\n      parameters:\n      - name: projectId\n        in: path\n        description: The Project id for which to retrieve information\n        required: true\n        schema:\n          type: string\n      - name: expansion\n        in: query\n        description: Comma-delimited list of additional project metadata fields to\n          include on response.\n        style: form\n        explode: false\n        schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - reportSuiteName\n            - shares\n            - tags\n            - accessLevel\n            - modified\n            - externalReferences\n            - definition\n      - name: locale\n        in: query\n        description: Locale\n        schema:\n          type: string\n          default: en_US\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AnalyticsProject'\n    put:\n      tags:\n      - projects\n      summary: Updates configuration for a project.\n      operationId: update Project Configuration\n      parameters:\n      - name: projectId\n        in: path\n        description: The Project id for which to retrieve information\n        required: true\n        schema:\n          type: string\n      - name: expansion\n        in: query\n        description: Comma-delimited list of additional project metadata fields to\n          include on response.\n        style: form\n        explode: false\n        schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - reportSuiteName\n            - shares\n            - tags\n            - accessLevel\n            - modified\n            - externalReferences\n            - definition\n      - name: locale\n        in: query\n        description: Locale\n        schema:\n          type: string\n          default: en_US\n      requestBody:\n        description: JSON-formatted Object containing project keys/value pairs to\n          be updated.\n        content:\n          '*/*':\n            schema:\n              $ref: '#/components/schemas/AnalyticsProject'\n        required: false\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AnalyticsProject'\n      x-codegen-request-body-name: body\n    delete:\n      tags:\n      - projects\n      summary: deletes a project.\n      operationId: delete Project\n      parameters:\n      - name: projectId\n        in: path\n        description: The Project id for which to retrieve information\n        required: true\n        schema:\n          type: string\n      - name: locale\n        in: query\n        description: Locale\n        schema:\n          type: string\n          default: en_US\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteResponse'\n  /projects/validate:\n    post:\n      tags:\n      - projects\n      summary: Validates a Project definition\n      operationId: validate Project definition\n      parameters:\n      - name: locale\n        in: query\n        description: Locale\n        schema:\n          type: string\n          default: en_US\n      requestBody:\n        description: JSON-formatted Object containing key/value pairs for Project\n          validation.\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                project:\n                  type: object\n                  properties: {}\n        required: true\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectCompatibility'\n        400:\n          description: Invalid input; definition is required. Definition must be formatted\n            as a JSON Object.\n          content: {}\n        500:\n          description: External API error; Project validation failed\n          content: {}\n      x-codegen-request-body-name: body\n  /projects:\n    get:\n      tags:\n      - projects\n      summary: Returns a list of projects for the user\n      description: 'This Returns the projects list primarily for the Analytics product. '\n      operationId: get Projects of user\n      parameters:\n      - name: includeType\n        in: query\n        description: Include additional projects not owned by user. The \"all\" option\n          takes precedence over \"shared\". If neither guided, or project is included,\n          both types are returned\n        style: form\n        explode: false\n        schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - all\n            - shared\n      - name: expansion\n        in: query\n        description: Comma-delimited list of additional project metadata fields to\n          include on response.\n        style: form\n        explode: false\n        schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - reportSuiteName\n            - shares\n            - tags\n            - accessLevel\n            - modified\n            - externalReferences\n            - definition\n      - name: filterByIds\n        in: query\n        description: Filter list to only include projects in the specified list (comma-delimited\n          list of IDs)\n        schema:\n          type: string\n      - name: locale\n        in: query\n        description: Locale\n        schema:\n          type: string\n          default: en_US\n      - name: pagination\n        in: query\n        description: return paginated results\n        schema:\n          type: string\n          default: \"false\"\n          enum:\n          - \"true\"\n          - \"false\"\n      - name: ownerId\n        in: query\n        description: Filter list to only include projects owned by the specified loginId\n        schema:\n          type: integer\n          format: int32\n      - name: limit\n        in: query\n        description: Number of results per page\n        schema:\n          type: integer\n          default: 10\n      - name: page\n        in: query\n        description: Page number (base 0 - first page is \"0\")\n        schema:\n          type: integer\n          default: 0\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AnalyticsProject'\n    post:\n      tags:\n      - projects\n      summary: Creates a single project.\n      operationId: create Project\n      parameters:\n      - name: expansion\n        in: query\n        description: Comma-delimited list of additional project metadata fields to\n          include on response.\n        style: form\n        explode: false\n        schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - reportSuiteName\n            - shares\n            - tags\n            - accessLevel\n            - modified\n            - externalReferences\n            - definition\n      - name: locale\n        in: query\n        description: Locale\n        schema:\n          type: string\n          default: en_US\n      requestBody:\n        description: JSON-formatted Object containing project keys/value pairs to\n          be updated.\n        content:\n          '*/*':\n            schema:\n              $ref: '#/components/schemas/AnalyticsProject'\n        required: false\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AnalyticsProject'\n      x-codegen-request-body-name: body\n  /reports:\n    post:\n      tags:\n      - reports\n      summary: Runs a report for the request in the post body\n      description: See the [Reporting User Guide](https://github.com/AdobeDocs/analytics-2.0-apis/blob/master/reporting-guide.md)\n        for details.\n      operationId: run Report\n      requestBody:\n        description: Ranked report request\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RankedRequest'\n        required: false\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RankedReportData'\n        206:\n          description: Partially successful operation.  Some response columns contain\n            errors.  See the [Partial Responses](https://github.com/AdobeDocs/analytics-2.0-apis/blob/master/reporting-guide.md#partial-responses-206-status-code)\n            for details.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RankedReportData'\n        400:\n          description: Invalid input; name, rsid, and definition are all required.\n            Definition must be formatted as a JSON Object.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReportErrorStatus'\n      x-codegen-request-body-name: body\n  /reports/topItems:\n    get:\n      tags:\n      - reports\n      summary: Runs a top items report for the request in the post body\n      description: Get the top X items (based on paging restriction) for the specified\n        dimension and rsid. Defaults to last 90 days.\n      operationId: run Top Item Report\n      parameters:\n      - name: rsid\n        in: query\n        description: ID of desired report suite ie. myrsid\n        required: true\n        schema:\n          type: string\n      - name: dimension\n        in: query\n        description: 'Dimension to run the report against. Example: ''variables/page'''\n        required: true\n        schema:\n          type: string\n      - name: locale\n        in: query\n        description: Locale that system named metrics should be returned in\n        schema:\n          type: string\n          default: en_US\n      - name: dateRange\n        in: query\n        description: 'Format: YYYY-MM-DD/YYYY-MM-DD'\n        schema:\n          type: string\n      - name: search-clause\n        in: query\n        description: 'General search string; wrap with single quotes. Example: ''PageABC'''\n        schema:\n          type: string\n      - name: startDate\n        in: query\n        description: 'Format: YYYY-MM-DD'\n        schema:\n          type: string\n      - name: endDate\n        in: query\n        description: 'Format: YYYY-MM-DD'\n        schema:\n          type: string\n      - name: searchAnd\n        in: query\n        description: Search terms that will be AND-ed together. Space delimited.\n        schema:\n          type: string\n      - name: searchOr\n        in: query\n        description: Search terms that will be OR-ed together. Space delimited.\n        schema:\n          type: string\n      - name: searchNot\n        in: query\n        description: Search terms that will be treated as NOT including. Space delimited.\n        schema:\n          type: string\n      - name: searchPhrase\n        in: query\n        description: A full search phrase that will be searched for.\n        schema:\n          type: string\n\n      - name: lookupNoneValues\n        in: query\n        description: Controls None values to be included\n        schema:\n          type: boolean\n          default: true\n      - name: limit\n        in: query\n        description: Number of results per page\n        schema:\n          type: integer\n          default: 10\n      - name: page\n        in: query\n        description: Page number (base 0 - first page is \"0\")\n        schema:\n          type: integer\n          default: 0\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnhashReportData'\n        206:\n          description: Partially successful operation.  Some response columns contain\n            errors.  See the [Partial Responses](https://github.com/AdobeDocs/analytics-2.0-apis/blob/master/reporting-guide.md#partial-responses-206-status-code)\n            for details.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnhashReportData'\n        400:\n          description: Invalid input; name, rsid, and definition are all required.\n            Definition must be formatted as a JSON Object.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReportErrorStatus'\n  /segments:\n    get:\n      tags:\n      - segments\n      summary: Retrieve All Segments\n      operationId: get all Segments\n      parameters:\n      - name: rsids\n        in: query\n        description: Filter list to only include segments tied to specified RSID list\n          (comma-delimited)\n        schema:\n          type: string\n      - name: segmentFilter\n        in: query\n        description: Filter list to only include segments in the specified list (comma-delimited\n          list of IDs)\n        schema:\n          type: string\n      - name: locale\n        in: query\n        description: Locale\n        schema:\n          type: string\n          default: en_US\n      - name: name\n        in: query\n        description: Filter list to only include segments that contains the Name\n        schema:\n          type: string\n      - name: tagNames\n        in: query\n        description: Filter list to only include segments that contains one of the\n          tags\n        schema:\n          type: string\n      - name: filterByPublishedSegments\n        in: query\n        description: Filter list to only include segments where the published field\n          is set to one of the allowable values (all, true, false).\n        schema:\n          type: string\n          default: all\n          enum:\n          - all\n          - \"true\"\n          - \"false\"\n      - name: limit\n        in: query\n        description: Number of results per page\n        schema:\n          type: integer\n          default: 10\n      - name: page\n        in: query\n        description: Page number (base 0 - first page is \"0\")\n        schema:\n          type: integer\n          default: 0\n      - name: sortDirection\n        in: query\n        description: Sort direction (ASC or DESC\n        schema:\n          type: string\n          default: ASC\n      - name: sortProperty\n        in: query\n        description: Property to sort by (name, modified_date, id is currently allowed)\n        schema:\n          type: string\n          default: id\n      - name: expansion\n        in: query\n        description: Comma-delimited list of additional segment metadata fields to\n          include on response.\n        style: form\n        explode: false\n        schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - reportSuiteName\n            - ownerFullName\n            - modified\n            - tags\n            - shares\n            - compatibility\n            - definition\n            - publishingStatus\n            - definitionLastModified\n            - categories\n          enum:\n          - reportSuiteName\n          - ownerFullName\n          - modified\n          - tags\n          - shares\n          - compatibility\n          - definition\n          - publishingStatus\n          - definitionLastModified\n          - categories\n      - name: includeType\n        in: query\n        description: Include additional segments not owned by user. The \"all\" option\n          takes precedence over \"shared\"\n        style: form\n        explode: false\n        schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - shared\n            - all\n            - templates\n          enum:\n          - shared\n          - all\n          - templates\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AnalyticsSegmentResponseItem'\n        400:\n          description: Unable to retrieve list of segments shared with user\n          content: {}\n        401:\n          description: Owner filter error; user specified is not in the same company\n            as the requesting user\n          content: {}\n        403:\n          description: Requesting non-shared segments for other users is restricted\n            to admin users\n          content: {}\n        500:\n          description: External API error; Segment retrieval failed\n          content: {}\n    post:\n      tags:\n      - segments\n      summary: Creates Segment\n      operationId: create Segment\n      parameters:\n      - name: locale\n        in: query\n        description: Locale\n        schema:\n          type: string\n          default: en_US\n      - name: expansion\n        in: query\n        description: Comma-delimited list of additional segment metadata fields to\n          include on response.\n        style: form\n        explode: false\n        schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - reportSuiteName\n            - ownerFullName\n            - modified\n            - tags\n            - shares\n            - compatibility\n            - definition\n            - publishingStatus\n            - definitionLastModified\n            - categories\n          enum:\n          - reportSuiteName\n          - ownerFullName\n          - modified\n          - tags\n          - shares\n          - compatibility\n          - definition\n          - publishingStatus\n          - definitionLastModified\n          - categories\n      requestBody:\n        description: JSON-formatted Object containing key/value pairs for segment\n          creation.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AnalyticsSegment'\n        required: true\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AnalyticsSegmentResponseItem'\n        400:\n          description: Invalid input; name, rsid, and definition are all required.\n            Definition must be formatted as a JSON Object.\n          content: {}\n        500:\n          description: External API error; Segment create or retrieval failed\n          content: {}\n      x-codegen-request-body-name: body\n  /segments/validate:\n    post:\n      tags:\n      - segments\n      summary: Validate a Segment\n      description: Returns a segment validation for the segment contained in the post\n        body of the report.\n      operationId: validate Segment\n      parameters:\n      - name: rsid\n        in: query\n        description: RSID to run the report against\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Segment definition\n        content:\n          application/json:\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SegmentCompatibility'\n        400:\n          description: Bad JSON input; request not formatted correctly\n          content: {}\n        500:\n          description: Unexpected error;\n          content: {}\n      x-codegen-request-body-name: body\n  /segments/{id}:\n    get:\n      tags:\n      - segments\n      summary: Get a Single Segment\n      operationId: get Segment\n      parameters:\n      - name: id\n        in: path\n        description: The segment ID to retrieve\n        required: true\n        schema:\n          type: string\n      - name: locale\n        in: query\n        description: Locale\n        schema:\n          type: string\n          default: en_US\n      - name: expansion\n        in: query\n        description: Comma-delimited list of additional segment metadata fields to\n          include on response.\n        style: form\n        explode: false\n        schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - reportSuiteName\n            - ownerFullName\n            - modified\n            - tags\n            - shares\n            - compatibility\n            - definition\n            - publishingStatus\n            - definitionLastModified\n            - categories\n          enum:\n          - reportSuiteName\n          - ownerFullName\n          - modified\n          - tags\n          - shares\n          - compatibility\n          - definition\n          - publishingStatus\n          - definitionLastModified\n          - categories\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AnalyticsSegmentResponseItem'\n        403:\n          description: Requesting non-shared segments for other users is restricted\n            to admin users\n          content: {}\n        500:\n          description: External API error; segment retrieval failed\n          content: {}\n    put:\n      tags:\n      - segments\n      summary: Update a Segment\n      operationId: update Segment\n      parameters:\n      - name: id\n        in: path\n        description: Segment ID to be updated\n        required: true\n        schema:\n          type: string\n      - name: locale\n        in: query\n        description: Locale\n        schema:\n          type: string\n          default: en_US\n      - name: expansion\n        in: query\n        description: Comma-delimited list of additional segment metadata fields to\n          include on response.\n        style: form\n        explode: false\n        schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - reportSuiteName\n            - ownerFullName\n            - modified\n            - tags\n            - shares\n            - compatibility\n            - definition\n            - publishingStatus\n            - definitionLastModified\n            - categories\n          enum:\n          - reportSuiteName\n          - ownerFullName\n          - modified\n          - tags\n          - shares\n          - compatibility\n          - definition\n          - publishingStatus\n          - definitionLastModified\n          - categories\n      requestBody:\n        description: JSON-formatted Object containing key/value pairs to be updated.\n        content:\n          application/json:\n            schema:\n              type: object\n              additionalProperties:\n                type: object\n                properties: {}\n        required: false\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AnalyticsSegmentResponseItem'\n        400:\n          description: Definition must be formatted as a JSON Object\n          content: {}\n        401:\n          description: Company mismatch; segment ownership can only be transferred\n            within the same organization\n          content: {}\n        403:\n          description: User does not have permission to update this segment\n          content: {}\n        500:\n          description: External API error; Segment update or retrieval failed\n          content: {}\n      x-codegen-request-body-name: body\n    delete:\n      tags:\n      - segments\n      summary: Delete Segment\n      operationId: delete Segment\n      parameters:\n      - name: id\n        in: path\n        description: The segment ID to be deleted\n        required: true\n        schema:\n          type: string\n      - name: locale\n        in: query\n        description: Locale\n        schema:\n          type: string\n          default: en_US\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n        500:\n          description: External API error; Segment delete failed\n          content: {}\n  /users:\n    get:\n      tags:\n      - users\n      summary: Returns a list of users for the current user's login company\n      description: Retrieves a list of all users for the company designated by the\n        auth token.\n      operationId: list All Users for company\n      parameters:\n      - name: limit\n        in: query\n        description: Number of results per page\n        schema:\n          type: integer\n          default: 10\n      - name: page\n        in: query\n        description: Page number (base 0 - first page is \"0\")\n        schema:\n          type: integer\n          default: 0\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AnalyticsUser'\n        500:\n          description: Database error or other unexpected error\n          content: {}\n  /users/me:\n    get:\n      tags:\n      - users\n      summary: Get the current user\n      operationId: get Current User\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AnalyticsUser'\n  /auditlogs/usage:\n    get:\n      tags:\n      - usagelogs\n      summary: Retrieves usage and access logs for the search criteria provided.\n      description: This API returns the usage and access logs for a given date range\n        within a 3 month period. This API authenticates with an IMS user token.\n      operationId: get Usage Access Logs\n      parameters:\n      - name: startDate\n        in: query\n        description: Start date for the maximum of a 3 month period.\n        required: true\n        schema:\n          type: string\n          default: 2021-01-01T00:00:00-07\n      - name: endDate\n        in: query\n        description: End date for the maximum of a 3 month period.\n        required: true\n        schema:\n          type: string\n          default: 2021-01-02T14:32:33-07\n      - name: login\n        in: query\n        description: The login value of the user you want to filter logs by.\n        schema:\n          type: string\n      - name: ip\n        in: query\n        description: The IP address you want to filter logs by.\n        schema:\n          type: string\n      - name: rsid\n        in: query\n        description: The report suite ID you want to filter logs by.\n        schema:\n          type: string\n      - name: eventType\n        in: query\n        description: The numeric id for the event type you want to filter logs by.\n        schema:\n          type: string\n      - name: event\n        in: query\n        description: The event description you want to filter logs by. No wildcards\n          permitted.\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Number of results per page.\n        schema:\n          type: integer\n          format: int32\n          default: 10\n      - name: page\n        in: query\n        description: Page number (base 0 - first page is \"0\").\n        schema:\n          type: integer\n          format: int32\n          default: 0\n      responses:\n        200:\n          description: Successful\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ResponsePageUsageLogDto'\n        400:\n          description: Invalid Request. Please check parameters.\n          content: {}\n        403:\n          description: User does not have permission to view this data.\n          content: {}\n        500:\n          description: External API Error; Data could not be retrieved.\n          content: {}\ncomponents:\n  schemas:\n    AnalyticsCalculatedMetric:\n      required:\n      - definition\n      type: object\n      properties:\n        id:\n          type: string\n          description: System generated id\n          readOnly: true\n        name:\n          type: string\n        description:\n          type: string\n        rsid:\n          type: string\n          description: The report suite id for which the component was created/updated\n        reportSuiteName:\n          type: string\n          description: The report suite name for which the component was created/updated\n          readOnly: true\n        owner:\n          $ref: '#/components/schemas/Owner'\n        polarity:\n          type: string\n          description: Set metric polarity, which indicates whether it's good or bad\n            if a given metric goes up. Default=positive\n          enum:\n          - positive\n          - negative\n        precision:\n          type: integer\n          description: Number of decimal places to include in calculated metric result\n          format: int32\n        type:\n          type: string\n          enum:\n          - CURRENCY\n          - TIME\n          - DECIMAL\n          - PERCENT\n        definition:\n          $ref: '#/components/schemas/CalculatedMetricDef'\n        categories:\n          type: array\n          items:\n            type: string\n        tags:\n          type: array\n          items:\n            $ref: '#/components/schemas/Tag'\n        siteTitle:\n          type: string\n        modified:\n          type: string\n          format: date-time\n        created:\n          type: string\n          description: Calculated metric creation date\n          format: date-time\n          readOnly: true\n    AnalyticsDateRange:\n      type: object\n      properties:\n        id:\n          type: string\n          description: System generated id\n          readOnly: true\n        name:\n          type: string\n          description: Name\n        description:\n          description: Description\n          type: string\n        rsid:\n          type: string\n          description: The report suite id for which the component was created/updated\n        reportSuiteName:\n          type: string\n          description: The report suite name for which the component was created/updated\n          readOnly: true\n        owner:\n          $ref: '#/components/schemas/Owner'\n        definition:\n          type: object\n          description: Definition\n          properties: {}\n        tags:\n          description: Tags\n          type: array\n          items:\n            $ref: '#/components/schemas/Tag'\n        siteTitle:\n          type: string\n          description: Site Title\n        modified:\n          type: string\n          description: Modified date time\n          format: date-time\n        created:\n          description: Created date time\n          type: string\n          format: date-time\n    AnalyticsDateRangeDefinition:\n      type: object\n      properties:\n        start:\n          type: array\n          items:\n            $ref: '#/components/schemas/RollingDateFunction'\n        end:\n          type: array\n          items:\n            $ref: '#/components/schemas/RollingDateFunction'\n        calendarType:\n          $ref: '#/components/schemas/CalendarType'\n        version:\n          type: string\n    AnalyticsDimension:\n      type: object\n      properties:\n        id:\n          type: string\n        title:\n          type: string\n        name:\n          type: string\n        type:\n          type: string\n          enum:\n          - STRING\n          - INT\n          - DECIMAL\n          - CURRENCY\n          - PERCENT\n          - TIME\n          - ENUM\n          - ORDERED_ENUM\n        category:\n          type: string\n        categories:\n          type: array\n          items:\n            type: string\n        support:\n          type: array\n          items:\n            type: string\n        pathable:\n          type: boolean\n        parent:\n          type: string\n        extraTitleInfo:\n          type: string\n        segmentable:\n          type: boolean\n        reportable:\n          type: array\n          items:\n            type: string\n        description:\n          type: string\n        allowedForReporting:\n          type: boolean\n        noneSettings:\n          $ref: '#/components/schemas/NoneSettings'\n        tags:\n          type: array\n          items:\n            $ref: '#/components/schemas/Tag'\n    AnalyticsMetric:\n      type: object\n      properties:\n        id:\n          type: string\n        title:\n          type: string\n        name:\n          type: string\n        type:\n          type: string\n          enum:\n          - STRING\n          - INT\n          - DECIMAL\n          - CURRENCY\n          - PERCENT\n          - TIME\n          - ENUM\n          - ORDERED_ENUM\n        extraTitleInfo:\n          type: string\n        category:\n          type: string\n        categories:\n          type: array\n          items:\n            type: string\n        support:\n          type: array\n          items:\n            type: string\n        allocation:\n          type: boolean\n        precision:\n          type: integer\n          format: int32\n        calculated:\n          type: boolean\n        segmentable:\n          type: boolean\n        description:\n          type: string\n        polarity:\n          type: string\n          enum:\n          - positive\n          - negative\n        helpLink:\n          type: string\n        allowedForReporting:\n          type: boolean\n        tags:\n          type: array\n          items:\n            $ref: '#/components/schemas/Tag'\n    AnalyticsProject:\n      type: object\n      properties:\n        id:\n          type: string\n          description: System generated id\n          readOnly: true\n        name:\n          type: string\n          description: Name\n        description:\n          type: string\n          description: Description\n        rsid:\n          type: string\n          description: The report suite id for which the component was created/updated\n        reportSuiteName:\n          type: string\n          description: The report suite name for which the component was created/updated\n          readOnly: true\n        owner:\n          $ref: '#/components/schemas/Owner'\n        type:\n          description: Type\n          type: string\n          enum:\n          - project\n          - mobileScorecard\n        definition:\n          $ref: '#/components/schemas/JsonNode'\n        externalReferences:\n          type: object\n          additionalProperties:\n            uniqueItems: true\n            type: array\n            items:\n              type: string\n        accessLevel:\n          type: string\n          description: Access Level\n        versionNotes:\n          type: string\n        tags:\n          type: array\n          items:\n            type: object\n            additionalProperties:\n              type: object\n              properties: {}\n        shares:\n          type: array\n          items:\n            type: object\n            additionalProperties:\n              type: object\n              properties: {}\n        modified:\n          type: string\n          format: date-time\n        created:\n          type: string\n          format: date-time\n    JsonNode:\n      type: object\n    ProjectCompatibility:\n      type: object\n      properties:\n        valid:\n          type: boolean\n        validatorVersion:\n          type: string\n        message:\n          type: string\n    AnalyticsSegment:\n      type: object\n      properties:\n        name:\n          type: string\n          description: A name for the segment.\n        description:\n          type: string\n          description: A description of the segment.\n        rsid:\n          type: string\n          description: The report suite id.\n        reportSuiteName:\n          type: string\n          description: The friendly name for the report suite id.\n        owner:\n          $ref: '#/components/schemas/Owner'\n        definition:\n          $ref: '#/components/schemas/AnalyticsSegmentDefinition'\n        compatibility:\n          $ref: '#/components/schemas/SegmentCompatibility'\n        definitionLastModified:\n          type: string\n          format: date-time\n        categories:\n          type: array\n          items:\n            type: string\n        siteTitle:\n          type: string\n          description: A name for the report suite.  This is deprecated and should\n            use the report suite name instead.\n        tags:\n          type: array\n          description: All existing tags associated with the segment.\n          items:\n            $ref: '#/components/schemas/Tag'\n        modified:\n          type: string\n          format: date-time\n        created:\n          type: string\n          format: date-time\n    AnalyticsSegmentResponseItem:\n      type: object\n      properties:\n        id:\n          type: string\n          description: Id of the segment.\n        name:\n          type: string\n          description: A name for the segment.\n        description:\n          type: string\n          description: A description of the segment.\n        rsid:\n          type: string\n          description: The report suite id.\n        reportSuiteName:\n          type: string\n          description: The friendly name for the report suite id.\n        owner:\n          description: Owner\n          $ref: '#/components/schemas/Owner'\n        definition:\n          description: Analytics segment definition.\n          $ref: '#/components/schemas/AnalyticsSegmentDefinition'\n        compatibility:\n          description: Segment compatibility.\n          $ref: '#/components/schemas/SegmentCompatibility'\n        definitionLastModified:\n          type: string\n          format: date-time\n        categories:\n          type: array\n          items:\n            type: string\n        siteTitle:\n          type: string\n          description: A name for the report suite.  This is deprecated and should\n            use the report suite name instead.\n        tags:\n          type: array\n          description: All existing tags associated with the segment.\n          items:\n            $ref: '#/components/schemas/Tag'\n        modified:\n          description: Modified date and time.\n          type: string\n          format: date-time\n        created:\n          description: Created date and time\n          type: string\n          format: date-time\n    AnalyticsSegmentDefinition:\n      type: object\n      description: Analytics segment definition\n      properties:\n        container:\n          description: Analytics segment definition container\n          type: object\n          properties:\n            context:\n              description: Context\n              type: string\n            func:\n              description: Func\n              type: string\n            pred:\n              description: Pred\n              type: object\n              properties:\n                val:\n                  description: Val\n                  type: object\n                  properties:\n                    description:\n                      description: Description\n                      type: string\n                    name:\n                      description: Name\n                      type: string\n                    func:\n                      description: Func\n                      type: string\n                str:\n                  description: Str\n                  type: string\n                func:\n                  description: Func\n                  type: string\n        func:\n          description: Func\n          type: string\n        version:\n          description: Version\n          type: array\n          items:\n            type: integer\n            format: int32\n    AnalyticsUser:\n      type: object\n      properties:\n        companyid:\n          type: integer\n          format: int32\n        loginId:\n          type: integer\n          format: int32\n        login:\n          type: string\n        changePassword:\n          type: boolean\n        createDate:\n          type: string\n          format: date-time\n        disabled:\n          type: boolean\n        email:\n          type: string\n        firstName:\n          type: string\n        fullName:\n          type: string\n        imsUserId:\n          type: string\n        lastName:\n          type: string\n        lastAccess:\n          type: string\n          format: date-time\n        phoneNumber:\n          type: string\n        tempLoginEnd:\n          type: string\n          format: date-time\n        title:\n          type: string\n    AnalyticsVirtualReportSuite:\n      type: object\n      properties:\n        id:\n          type: string\n          description: System generated virtual report suite id\n        name:\n          type: string\n        description:\n          type: string\n        rsid:\n          type: string\n          description: The report suite id for which the component was created/updated\n        reportSuiteName:\n          type: string\n          description: The report suite name for which the component was created/updated\n          readOnly: true\n        owner:\n          $ref: '#/components/schemas/Owner'\n        parentRsid:\n          type: string\n          description: Parent report suite id for virtual report suite\n        parentRsidName:\n          type: string\n          description: Parent report suite name\n        timezone:\n          type: integer\n          format: int32\n        segmentList:\n          type: array\n          description: List of segments applied to this virtual report suite\n          items:\n            type: string\n        currency:\n          type: string\n        calendarType:\n          $ref: '#/components/schemas/CalendarType'\n        timezoneZoneInfo:\n          type: string\n          description: Suite friendly timezone name\n        tags:\n          type: array\n          items:\n            $ref: '#/components/schemas/Tag'\n        siteTitle:\n          type: string\n        modified:\n          type: string\n          format: date-time\n        created:\n          type: string\n          format: date-time\n    CalcMetricCompatibility:\n      type: object\n      properties:\n        valid:\n          type: boolean\n        message:\n          type: string\n        identityMetrics:\n          type: array\n          items:\n            $ref: '#/components/schemas/IdentityMetric'\n        identityDimensions:\n          uniqueItems: true\n          type: array\n          items:\n            type: string\n        segments:\n          uniqueItems: true\n          type: array\n          items:\n            type: string\n        functions:\n          uniqueItems: true\n          type: array\n          items:\n            type: string\n        validator_version:\n          type: string\n        supported_products:\n          type: array\n          items:\n            type: string\n        supported_schema:\n          type: array\n          items:\n            type: string\n    CalcMetricFunction:\n      type: object\n      properties:\n        id:\n          type: string\n          description: Calculated Metric Function ID\n        category:\n          type: string\n          description: Calculated Metric Function category\n        persistable:\n          type: boolean\n          description: If a Calculated Metric Function is persistable\n        name:\n          type: string\n          description: Calculated Metric Function name\n        namespace:\n          type: string\n          description: Calculated Metric Function namespace\n        description:\n          type: string\n          description: Calculated Metric Function description\n        exampleKey:\n          type: string\n          description: Calculated Metric Function example key\n        example:\n          type: string\n          description: Calculated Metric Function example\n        definition:\n          $ref: '#/components/schemas/CalcMetricFunctionDef'\n    CalcMetricFunctionDef:\n      type: object\n      properties:\n        func:\n          type: string\n        parameters:\n          type: array\n          items:\n            $ref: '#/components/schemas/CalcMetricFunctionParameter'\n        formula:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n        version:\n          type: array\n          items:\n            type: integer\n            format: int32\n    CalcMetricFunctionParameter:\n      type: object\n      properties:\n        func:\n          type: string\n        name:\n          type: string\n        type:\n          type: string\n        friendlyNameKey:\n          type: string\n        descKey:\n          type: string\n        friendlyName:\n          type: string\n        description:\n          type: string\n        default-value:\n          type: object\n          properties: {}\n    CalculatedMetricDef:\n      type: object\n    CalculatedMetricErrorStatus:\n      type: object\n      properties:\n        errorCode:\n          type: string\n          enum:\n          - no_feature_access_to_advanced_calculated_metrics\n          - invalid_metric_access\n          - method_not_allowed\n          - resource_conflict\n          - invalid_access\n          - resource_temporarily_unavailable\n          - external_api_failure\n          - aam_failure\n          - resource_already_exists\n          - invalid_state\n          - invalid_json_input\n          - invalid_parameters\n          - invalid_dimension_access\n          - unsupported_data_type\n          - resource_not_found\n          - insufficient_access\n          - health_check_error\n          - invalid_data\n          - unexpected_error\n          - external_api_error\n          - unsupported_resource\n          - io_error\n          - invalid_request\n          - invalid_client_id\n          - unauthorized\n          - authorization_error\n          - invalid_token\n          - insufficient_scope\n          - bluecoat_unauthorized\n        errorDescription:\n          type: string\n        errorId:\n          type: string\n        errorDetails:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n        rootCauseService:\n          type: string\n    CalendarType:\n      type: object\n      properties:\n        rsid:\n          type: string\n        type:\n          type: string\n          enum:\n          - gregorian\n          - nrf\n          - qrs\n          - custom_454\n          - custom_445\n          - modified_gregorian\n        anchorDate:\n          type: string\n          format: date-time\n    Column:\n      type: object\n      properties:\n        type:\n          type: string\n          enum:\n          - DIMENSION\n          - METRIC\n        id:\n          type: string\n        title:\n          type: string\n        segmentIds:\n          type: array\n          items:\n            type: string\n    DeleteResponse:\n      type: object\n      properties:\n        result:\n          type: string\n        message:\n          type: string\n    IdentityMetric:\n      type: object\n      properties:\n        identity:\n          type: string\n        dimensionView:\n          type: string\n          enum:\n          - LINEAR_ALLOCATION\n          - PARTICIPATION_ALLOCATION\n          - LAST_TOUCH_ALLOCATION\n          - MC_FIRST_TOUCH_ALLOCATION\n          - MC_LAST_TOUCH_ALLOCATION\n        allocationModel:\n          type: string\n          enum:\n          - ALLOCATION_FIRST_TOUCH\n          - ALLOCATION_LAST_TOUCH\n          - ALLOCATION_INSTANCE\n          - ALLOCATION_DEDUPED_INSTANCE\n          - ALLOCATION_LAST_KNOWN\n          - ALLOCATION_LEGACY\n          - ALLOCATION_LINEAR\n          - ALLOCATION_PARTICIPATION\n          - ALLOCATION_POSITION_BASED\n          - ALLOCATION_TIME_DECAY\n          - ALLOCATION_U_SHAPED\n          - ALLOCATION_J_SHAPED\n          - ALLOCATION_REVERSE_J_SHAPED\n    Locale:\n      type: object\n      properties:\n        language:\n          type: string\n        script:\n          type: string\n        country:\n          type: string\n        variant:\n          type: string\n        extensionKeys:\n          uniqueItems: true\n          type: array\n          items:\n            type: string\n        unicodeLocaleAttributes:\n          uniqueItems: true\n          type: array\n          items:\n            type: string\n        unicodeLocaleKeys:\n          uniqueItems: true\n          type: array\n          items:\n            type: string\n        iso3Language:\n          type: string\n        iso3Country:\n          type: string\n        displayLanguage:\n          type: string\n        displayScript:\n          type: string\n        displayCountry:\n          type: string\n        displayVariant:\n          type: string\n        displayName:\n          type: string\n    NoneSettings:\n      type: object\n      properties:\n        includeNoneByDefault:\n          type: boolean\n        noneChangeable:\n          type: boolean\n    Owner:\n      required:\n      - id\n      type: object\n      description: Owner\n      properties:\n        id:\n          type: integer\n          description: the login id of the owner\n          format: int32\n        name:\n          type: string\n          description: the friendly full login name of the owner, included when the\n            expansion parameter ownerFullName is true\n        login:\n          type: string\n          description: the friendly full login name of the owner, included when the\n            expansion parameter ownerFullName is true\n    Pageable:\n      type: object\n      properties:\n        offset:\n          type: integer\n          format: int32\n        sort:\n          $ref: '#/components/schemas/Sort'\n        pageNumber:\n          type: integer\n          format: int32\n        pageSize:\n          type: integer\n          format: int32\n    PredictiveSettings:\n      type: object\n      properties:\n        trainingPeriods:\n          type: integer\n          format: int32\n        highAnomalies:\n          type: boolean\n        lowAnomalies:\n          type: boolean\n    PublishingStatus:\n      type: object\n      properties:\n        published:\n          type: boolean\n        publishedDate:\n          type: string\n          format: date-time\n        lookbackPeriod:\n          type: integer\n          format: int32\n        lookbackGranularity:\n          type: string\n    RankedColumnError:\n      type: object\n      properties:\n        columnId:\n          type: string\n        errorCode:\n          type: string\n          enum:\n          - unauthorized_metric\n          - unauthorized_dimension\n          - unauthorized_dimension_global\n          - anomaly_detection_failure_unexpected_item_count\n          - anomaly_detection_failure_tsa_service\n          - not_enabled_metric\n          - not_enabled_dimension\n          - not_enabled_dimension_global\n        errorId:\n          type: string\n        errorDescription:\n          type: string\n    RankedColumnMetaData:\n      type: object\n      properties:\n        dimension:\n          $ref: '#/components/schemas/ReportDimension'\n        columnIds:\n          type: array\n          items:\n            type: string\n        columnErrors:\n          type: array\n          items:\n            $ref: '#/components/schemas/RankedColumnError'\n    RankedReportData:\n      type: object\n      properties:\n        totalPages:\n          type: integer\n          format: int32\n        firstPage:\n          type: boolean\n        lastPage:\n          type: boolean\n        numberOfElements:\n          type: integer\n          format: int32\n        number:\n          type: integer\n          format: int32\n        totalElements:\n          type: integer\n          format: int32\n        message:\n          type: string\n        request:\n          $ref: '#/components/schemas/RankedRequest'\n        reportId:\n          type: string\n        columns:\n          $ref: '#/components/schemas/RankedColumnMetaData'\n        rows:\n          type: array\n          items:\n            $ref: '#/components/schemas/Row'\n        # summaryData:\n        #   $ref: '#/components/schemas/RankedSummaryData'\n    RankedRequest:\n      type: object\n      properties:\n        rsid:\n          type: string\n        dimension:\n          type: string\n        locale:\n          $ref: '#/components/schemas/Locale'\n        globalFilters:\n          type: array\n          items:\n            $ref: '#/components/schemas/ReportFilter'\n        search:\n          $ref: '#/components/schemas/ReportSearch'\n        settings:\n          $ref: '#/components/schemas/RankedSettings'\n        statistics:\n          $ref: '#/components/schemas/RankedStatistics'\n        metricContainer:\n          $ref: '#/components/schemas/ReportMetrics'\n        rowContainer:\n          $ref: '#/components/schemas/ReportRows'\n        anchorDate:\n          type: string\n    RankedSettings:\n      type: object\n      properties:\n        limit:\n          type: integer\n          format: int32\n        page:\n          type: integer\n          format: int32\n        dimensionSort:\n          type: string\n        countRepeatInstances:\n          type: boolean\n        reflectRequest:\n          type: boolean\n        includeAnomalyDetection:\n          type: boolean\n        includePercentChange:\n          type: boolean\n        includeLatLong:\n          type: boolean\n        nonesBehavior:\n          type: string\n    RankedStatistics:\n      type: object\n      properties:\n        functions:\n          type: array\n          items:\n            type: string\n        ignoreZeroes:\n          type: boolean\n    # RankedSummaryData:\n    #   type: object\n    ReportDimension:\n      type: object\n      properties:\n        id:\n          type: string\n        type:\n          type: string\n          enum:\n          - STRING\n          - INT\n          - DECIMAL\n          - CURRENCY\n          - PERCENT\n          - TIME\n          - ENUM\n          - ORDERED_ENUM\n    ReportErrorStatus:\n      type: object\n      properties:\n        errorCode:\n          type: string\n          enum:\n          - invalid_segment_ids_found\n          - invalid_metric_access\n          - method_not_allowed\n          - resource_conflict\n          - invalid_access\n          - resource_temporarily_unavailable\n          - external_api_failure\n          - aam_failure\n          - resource_already_exists\n          - invalid_state\n          - invalid_json_input\n          - invalid_parameters\n          - invalid_dimension_access\n          - unsupported_data_type\n          - resource_not_found\n          - insufficient_access\n          - health_check_error\n          - invalid_data\n          - unexpected_error\n          - external_api_error\n          - unsupported_resource\n          - io_error\n          - invalid_request\n          - invalid_client_id\n          - unauthorized\n          - authorization_error\n          - invalid_token\n          - insufficient_scope\n          - bluecoat_unauthorized\n        errorDescription:\n          type: string\n        errorId:\n          type: string\n        errorDetails:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n        rootCauseService:\n          type: string\n    ReportFilter:\n      type: object\n      properties:\n        id:\n          type: string\n        type:\n          type: string\n          enum:\n          - dateRange\n          - breakdown\n          - segment\n          - excludeItemIds\n        dimension:\n          type: string\n        itemId:\n          type: string\n        itemIds:\n          type: array\n          items:\n            type: string\n        segmentId:\n          type: string\n        segmentDefinition:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n        dateRange:\n          type: string\n        excludeItemIds:\n          type: array\n          items:\n            type: string\n    ReportMetric:\n      type: object\n      properties:\n        id:\n          type: string\n        columnId:\n          type: string\n        filters:\n          type: array\n          items:\n            type: string\n        sort:\n          type: string\n        metricDefinition:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n        predictive:\n          $ref: '#/components/schemas/ReportMetricPredictiveSettings'\n    ReportMetricPredictiveSettings:\n      type: object\n      properties:\n        anomalyConfidence:\n          type: number\n          format: double\n    ReportMetrics:\n      type: object\n      properties:\n        metricFilters:\n          type: array\n          items:\n            $ref: '#/components/schemas/ReportFilter'\n        metrics:\n          type: array\n          items:\n            $ref: '#/components/schemas/ReportMetric'\n    ReportRow:\n      type: object\n      properties:\n        rowId:\n          type: string\n        filters:\n          type: array\n          items:\n            type: string\n    ReportRows:\n      type: object\n      properties:\n        rowFilters:\n          type: array\n          items:\n            $ref: '#/components/schemas/ReportFilter'\n        rows:\n          type: array\n          items:\n            $ref: '#/components/schemas/ReportRow'\n    ReportSearch:\n      type: object\n      properties:\n        clause:\n          type: string\n        excludeItemIds:\n          type: array\n          items:\n            type: string\n        itemIds:\n          type: array\n          items:\n            type: string\n        includeSearchTotal:\n          type: boolean\n        empty:\n          type: boolean\n    RollingDateFunction:\n      type: object\n      properties:\n        function:\n          type: string\n        granularity:\n          type: string\n          enum:\n          - year\n          - quarter\n          - month\n          - week\n          - day\n          - hour\n          - minute\n        offset:\n          type: integer\n          format: int32\n        dow:\n          type: string\n          enum:\n          - monday\n          - tuesday\n          - wednesday\n          - thursday\n          - friday\n          - saturday\n          - sunday\n        date:\n          type: string\n    Row:\n      type: object\n      properties:\n        itemId:\n          type: string\n        value:\n          type: string\n        rowId:\n          type: string\n        data:\n          type: array\n          items:\n            type: number\n            format: double\n        dataExpected:\n          type: array\n          items:\n            type: number\n            format: double\n        dataUpperBound:\n          type: array\n          items:\n            type: number\n            format: double\n        dataLowerBound:\n          type: array\n          items:\n            type: number\n            format: double\n        dataAnomalyDetected:\n          type: array\n          items:\n            type: boolean\n        percentChange:\n          type: array\n          items:\n            type: number\n            format: double\n        latitude:\n          type: number\n          format: double\n        longitude:\n          type: number\n          format: double\n    RowItem:\n      type: object\n      properties:\n        itemId:\n          type: string\n        value:\n          type: string\n    SegmentCompatibility:\n      type: object\n      description: Segment compatibility.\n      properties:\n        valid:\n          description: Validity\n          type: boolean\n        message:\n          description: Message\n          type: string\n        validator_version:\n          description: Validator version\n          type: string\n        supported_products:\n          description: Suported products\n          type: array\n          items:\n            type: string\n        supported_schema:\n          description: Supported schema\n          type: array\n          items:\n            type: string\n        supported_features:\n          description: Supported features\n          type: array\n          items:\n            type: string\n    Sort:\n      type: object\n    SuiteCollectionItem:\n      type: object\n      properties:\n        name:\n          type: string\n        timezoneZoneInfo:\n          type: string\n          description: Suite friendly timezone name\n        parentRsid:\n          type: string\n          description: Parent report suite id for virtual report suite\n        collectionItemType:\n          type: string\n          description: Suite type\n          enum:\n          - reportsuite\n          - virtualreportsuite\n        currency:\n          type: string\n        calendarType:\n          $ref: '#/components/schemas/CalendarType'\n        rsid:\n          type: string\n          readOnly: true\n    Share:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: the share id\n          format: int32\n        shareToId:\n          type: integer\n          description: the id of the user/group the component is shared with\n          format: int32\n        shareToType:\n          type: string\n          description: the type of entity shared with (user/group/all)\n        shareToDisplayName:\n          type: string\n          description: full name of the entity shared with\n        componentType:\n          type: string\n          description: the type of component being shared\n        componentId:\n          type: string\n          description: the id of the component being shared\n        accessLevel:\n          type: string\n          description: Level of rights shared with entity. (for projects only)\n      description: Share Model\n    SharedComponent:\n      type: object\n      properties:\n        componentType:\n          type: string\n        componentId:\n          type: string\n        shares:\n          type: array\n          items:\n            $ref: '#/components/schemas/Share'\n    Tag:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: the tag id\n          format: int32\n        name:\n          type: string\n          description: 'the tag name '\n        description:\n          type: string\n          description: the tag description\n        components:\n          uniqueItems: true\n          type: array\n          description: the list of components that have been tagged with this tag\n          items:\n            $ref: '#/components/schemas/TaggedComponent'\n      description: Tag Model\n    TaggedComponent:\n      type: object\n      properties:\n        componentType:\n          type: string\n        componentId:\n          type: string\n        tags:\n          type: array\n          items:\n            $ref: '#/components/schemas/Tag'\n    UnhashReportData:\n      type: object\n      properties:\n        totalPages:\n          type: integer\n          format: int32\n        firstPage:\n          type: boolean\n        lastPage:\n          type: boolean\n        numberOfElements:\n          type: integer\n          format: int32\n        number:\n          type: integer\n          format: int32\n        totalElements:\n          type: integer\n          format: int32\n        message:\n          type: string\n        reportId:\n          type: string\n        searchAnd:\n          type: string\n        searchOr:\n          type: string\n        searchNot:\n          type: string\n        searchPhrase:\n          type: string\n        oberonRequestXML:\n          type: string\n        oberonResponseXML:\n          type: string\n        rows:\n          type: array\n          items:\n            $ref: '#/components/schemas/RowItem'\n    ComponentSearch:\n      type: object\n      properties:\n        componentType:\n          type: string\n        componentIds:\n          uniqueItems: true\n          type: array\n          items:\n            type: string\n    ResponsePageUsageLogDto:\n      type: object\n      properties:\n        content:\n          type: array\n          items:\n            $ref: '#/components/schemas/UsageLogDto'\n        totalElements:\n          type: integer\n          format: int64\n        lastPage:\n          type: boolean\n        numberOfElements:\n          type: integer\n          format: int64\n        totalPages:\n          type: integer\n          format: int32\n        firstPage:\n          type: boolean\n        sort:\n          type: string\n        size:\n          type: integer\n          format: int32\n        number:\n          type: integer\n          format: int32\n    UsageLogDto:\n      type: object\n      properties:\n        dateCreated:\n          type: string\n          format: date-time\n        eventDescription:\n          type: string\n        ipAddress:\n          type: string\n        rsid:\n          type: string\n        eventType:\n          type: string\n        login:\n          type: string\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n    oAuth2Auth:\n      type: oauth2\n      description: Use your own account to authenticate with the API. See [OAuth connection](https://developer.adobe.com/developer-console/docs/guides/authentication/OAuthIntegration/) in the Adobe I/O Authentication user guide.\n      flows:\n        authorizationCode:\n          authorizationUrl: https://account-d.docusign.com/oauth/auth\n          tokenUrl: https://account-d.docusign.com/oauth/token\n          scopes: \n            {}"
		}
	},
	"Error": "parse: parse spec: paths: /dimensions: get: operation \"get Dimensions for Report Suite\": parameters: parse parameter \"expansion\": schema: parse enum values: parse value \"\\\"tags\\\"\": expected type \"array\", got \"string\""
}