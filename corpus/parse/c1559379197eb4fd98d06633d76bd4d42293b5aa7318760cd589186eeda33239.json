{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/couchbase/sync_gateway"
		},
		"file": {
			"name": "api_docs.yaml",
			"size": 0,
			"path": "docs/api/api_docs.yaml",
			"byteSize": 237746,
			"content": "openapi: 3.0.0\ninfo:\n  title: Sync Gateway API\n  version: '3.0'\n  license:\n    name: Business Source License 1.1 (BSL)\n    url: 'https://github.com/couchbase/sync_gateway/blob/master/LICENSE'\nservers:\n  - url: 'http://localhost:4984'\n    description: Public API\n  - url: 'http://localhost:4985'\n    description: Admin API\n  - url: 'http://localhost:4986'\n    description: Metric API\npaths:\n  /:\n    get:\n      responses:\n        '200':\n          description: Returned server information\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  ADMIN:\n                    type: boolean\n                    description: Whether the request is from the Admin API (`true`) or the Public API (`false`).\n                  couchdb:\n                    type: string\n                    default: Welcome\n                  vendor:\n                    $ref: '#/components/schemas/Vendor'\n                  version:\n                    type: string\n                    description: |-\n                      The product version including the build number and edition (ie. `EE` or `CE`).\n\n                      Blank if `api.hide_product_version=true` in the startup configuration.\n                required:\n                  - ADMIN\n                  - couchdb\n                  - vendor\n      tags:\n        - Admin\n        - Public\n      summary: Get server information\n      description: This will return information about the server.\n    head:\n      responses:\n        '200':\n          description: Server is online\n      tags:\n        - Admin\n        - Public\n      summary: Check if server online\n      description: Check if the server is online by checking the status code of response.\n  '/{db}/':\n    parameters:\n      - $ref: '#/components/parameters/db'\n    get:\n      responses:\n        '200':\n          description: Successfully returned database information\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  db_name:\n                    type: string\n                    description: Database name\n                  update_seq:\n                    type: number\n                    description: |-\n                      The last sequence number that was committed to the database. This is the number of updates to the database.\n\n                      Will return 0 if the database is offline.\n                  committed_update_seq:\n                    type: number\n                    description: |-\n                      The last sequence number that was committed to the database. This is the number of updates to the database.\n\n                      Will return 0 if the database is offline.\n                  instance_start_time:\n                    type: integer\n                    description: Date and time the database was opened in microseconds since 1st January 1970.\n                  compact_running:\n                    type: boolean\n                    description: Indicates whether database compaction is currently taking place or not.\n                  purge_seq:\n                    type: number\n                    description: Unused field.\n                    default: 0\n                  disk_format_version:\n                    type: number\n                    description: Unused field.\n                    default: 0\n                  state:\n                    type: string\n                    enum:\n                      - Online\n                      - Offline\n                    description: |-\n                      Whether the database is in an offline or online state.\n\n                      The database state can be changed by using the `/{db}/_offline` and `/{db}/_online` endpoints.\n                  server_uuid:\n                    type: string\n                    description: Unique server identifier. This is the same for all databases on the Sync Gateway node.\n              examples: {}\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n        - Public\n      description: Retrieve information about the database.\n      summary: Get database information\n    post:\n      responses:\n        '200':\n          description: New revision created sucessfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/New-revision'\n          headers:\n            Etag:\n              schema:\n                type: string\n              description: The revision ID of the newly created document.\n            Location:\n              schema:\n                type: string\n              description: The document ID of the newly created document.\n        '400':\n          $ref: '#/components/responses/request-problem'\n        '404':\n          $ref: '#/components/responses/Not-found'\n        '409':\n          $ref: '#/components/responses/Conflict'\n        '415':\n          $ref: '#/components/responses/Invalid-content-type'\n      tags:\n        - Admin\n        - Public\n      summary: Create a new document\n      description: |-\n        Create a new document in the database.\n\n        This will generate a random document ID unless specified in the body.\n\n        A document can have a maximum size of 20MB.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Document'\n      parameters:\n        - $ref: '#/components/parameters/roundtrip'\n    delete:\n      responses:\n        '200':\n          description: Successfully removed the database\n          content:\n            application/json:\n              schema:\n                type: object\n                properties: {}\n        '404':\n          $ref: '#/components/responses/Not-found'\n        '500':\n          description: Cannot remove database from bucket\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTP-Error'\n      tags:\n        - Admin\n      description: |-\n        Delete a database configuration from the bucket and remove it from the current node.\n\n        **Note:** If running in legacy mode, this will only delete the database from the current node.\n      summary: Remove a database\n    head:\n      responses:\n        '200':\n          description: Database exists\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n        - Public\n      summary: Check if database exists\n      description: Check if a database exists by using the response status code.\n    put:\n      responses:\n        '201':\n          description: Database created successfully\n        '400':\n          $ref: '#/components/responses/request-problem'\n        '403':\n          description: An authentication failure occurred\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTP-Error'\n        '409':\n          description: A database already exists for this bucket\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTP-Error'\n        '412':\n          description: A database under that name already exists\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTP-Error'\n        '500':\n          description: A server error occurred\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTP-Error'\n      tags:\n        - Admin\n      summary: Create a new Sync Gateway database\n      description: |-\n        This is to create a new database for Sync Gateway. \n\n        The new database name will be the name specified in the URL, not what is specified in the request body database configuration.\n\n        If the bucket is not provided in the database configuration, Sync Gateway will attempt to find and use the database name as the bucket.\n\n        By default, the new database will be brought online immediately. This can be avoided by including `\"offline\": true` in the configuration in the request body.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Database'\n        description: The configuration to use for the new database\n  '/{db}/_all_docs':\n    parameters:\n      - $ref: '#/components/parameters/db'\n    get:\n      responses:\n        '200':\n          $ref: '#/components/responses/all-docs'\n        '400':\n          $ref: '#/components/responses/request-problem'\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n        - Public\n      parameters:\n        - $ref: '#/components/parameters/include_docs'\n        - $ref: '#/components/parameters/Include-channels'\n        - $ref: '#/components/parameters/include-access'\n        - $ref: '#/components/parameters/include-revs'\n        - $ref: '#/components/parameters/include-seqs'\n        - $ref: '#/components/parameters/keys'\n        - $ref: '#/components/parameters/startkey'\n        - $ref: '#/components/parameters/endkey'\n        - $ref: '#/components/parameters/limit'\n      summary: Gets all the documents in the database with the given parameters\n      description: Returns all documents in the databased based on the specified parameters.\n    post:\n      responses:\n        '200':\n          $ref: '#/components/responses/all-docs'\n        '400':\n          $ref: '#/components/responses/request-problem'\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n        - Public\n      summary: Get all the documents in the database using a built-in view\n      parameters:\n        - $ref: '#/components/parameters/include_docs'\n        - $ref: '#/components/parameters/Include-channels'\n        - $ref: '#/components/parameters/include-access'\n        - $ref: '#/components/parameters/include-revs'\n        - $ref: '#/components/parameters/include-seqs'\n        - $ref: '#/components/parameters/startkey'\n        - $ref: '#/components/parameters/endkey'\n        - $ref: '#/components/parameters/limit'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                keys:\n                  description: List of the documents to retrieve.\n                  type: array\n                  items:\n                    type: string\n              required:\n                - keys\n      description: Get a built-in view of all the documents in the database.\n    head:\n      responses:\n        '200':\n          description: OK\n        '400':\n          $ref: '#/components/responses/request-problem'\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n        - Public\n      parameters:\n        - $ref: '#/components/parameters/include_docs'\n        - $ref: '#/components/parameters/Include-channels'\n        - $ref: '#/components/parameters/include-access'\n        - $ref: '#/components/parameters/include-revs'\n        - $ref: '#/components/parameters/include-seqs'\n        - $ref: '#/components/parameters/keys'\n        - $ref: '#/components/parameters/startkey'\n        - $ref: '#/components/parameters/endkey'\n        - $ref: '#/components/parameters/limit'\n  '/{db}/_bulk_docs':\n    parameters:\n      - $ref: '#/components/parameters/db'\n    post:\n      responses:\n        '201':\n          description: |-\n            Executed all operations. \n\n            Each object in the returned array represents a document. Each document should be checked to make sure it was successfully added to the database.\n          content:\n            application/json:\n              schema:\n                type: array\n                uniqueItems: true\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: string\n                      description: The ID of the document that the operation was performed on.\n                    rev:\n                      type: string\n                      description: The new revision of the document if the operation was a success.\n                    error:\n                      type: string\n                      description: The error type if the operation of the document failed.\n                    reason:\n                      type: string\n                      description: The reason the operation failed.\n                    status:\n                      type: string\n                      description: The HTTP status code for why the operation failed.\n                  required:\n                    - id\n              examples:\n                Success:\n                  value:\n                    - id: FooBar\n                      rev: 1-cd809becc169215072fd567eebd8b8de\n                    - id: AliceSettings\n                      rev: 6-b3e8dcf825b71ccee112f3572ec4323c\n                    - id: BobSettings\n                      rev: 2-5145e1086bb8d1d71a531e9f6b543c58\n                Partial success:\n                  value:\n                    - error: conflict\n                      id: FooBar\n                      reason: Document exists\n                      status: 409\n                    - id: AliceSettings\n                      rev: 6-b3e8dcf825b71ccee112f3572ec4323c\n                    - error: conflict\n                      id: BobSettings\n                      reason: Document revision conflict\n                      status: 409\n        '400':\n          $ref: '#/components/responses/request-problem'\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n        - Public\n      summary: Bulk document operations\n      description: |-\n        This will allow multiple documented to be created, updated or deleted in bulk.\n\n        To create a new document, simply add the body in an object under `docs`. A doc ID will be generated by Sync Gateway unless `_id` is specified.\n\n        To update an existing document, provide the document ID (`_id`) and revision ID (`_rev`) as well as the new body values.\n\n        To delete an existing document, provide the document ID (`_id`), revision ID (`_rev`), and set the deletion flag (`_deleted`) to true.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                new_edits:\n                  default: true\n                  type: boolean\n                  description: This controls whether to assign new revision identifiers to new edits (`true`) or use the existing ones (`false`).\n                docs:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Document'\n              required:\n                - docs\n            examples:\n              Example:\n                value:\n                  new_edits: true\n                  docs:\n                    - _id: FooBar\n                      foo: bar\n                    - _id: AliceSettings\n                      _rev: 5-832a6db48ed130adadede928aee54576\n                      FailedLoginAttempts: 7\n                    - _id: BobSettings\n                      _rev: 1-fa76ba41ee5fdfee1b91fc478ed09e59\n                      _deleted: true\n  '/{db}/_bulk_get':\n    parameters:\n      - $ref: '#/components/parameters/db'\n    post:\n      responses:\n        '200':\n          description: Returned the requested docs as `multipart/mixed` response type\n        '400':\n          description: Bad Request\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n        - Public\n      parameters:\n        - name: attachments\n          in: query\n          schema:\n            type: boolean\n            default: 'false'\n          description: This is for whether to include attachments in each of the documents returned or not.\n        - $ref: '#/components/parameters/include-revs'\n        - name: revs_limit\n          schema:\n            type: integer\n          in: query\n          description: The number of revisions to include in the response from the document history. This parameter only makes a different if the `revs` query parameter is set to `true`. The full revision history will be returned if `revs` is set but this is not.\n        - name: X-Accept-Part-Encoding\n          schema:\n            type: string\n          in: header\n          description: If this header includes `gzip` then the part HTTP compression encoding will be done.\n        - name: Accept-Encoding\n          schema:\n            type: string\n          in: header\n          description: If this header includes `gzip` then the the HTTP response will be compressed. This takes priority over `X-Accept-Part-Encoding`. Only part compression will be done if `X-Accept-Part-Encoding=gzip` and the `User-Agent` is below 1.2 due to clients not being able to handle full compression.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                docs:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      id:\n                        type: string\n                        description: ID of the document to retrieve.\n                    required:\n                      - id\n              required:\n                - docs\n            examples:\n              Example:\n                value:\n                  docs:\n                    - id: FooBar\n                    - id: attachment\n                    - id: AliceSettings\n      description: |\n        This request returns any number of documents, as individual bodies in a MIME multipart response.\n\n        Each enclosed body contains one requested document. The bodies appear in the same order as in the request, but can also be identified by their `X-Doc-ID` and `X-Rev-ID` headers (if the `attachments` query is `true`).\n\n        A body for a document with no attachments will have content type `application/json` and contain the document itself.\n\n        A body for a document that has attachments will be written as a nested `multipart/related` body.\n      summary: Get multiple documents in a MIME multipart response\n  '/{db}/_changes':\n    parameters:\n      - $ref: '#/components/parameters/db'\n    get:\n      responses:\n        '200':\n          $ref: '#/components/responses/changes-feed'\n        '400':\n          $ref: '#/components/responses/request-problem'\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n        - Public\n      summary: Get changes list\n      description: |-\n        This request retrieves a sorted list of changes made to documents in the database, in time order of application. Each document appears at most once, ordered by its most recent change, regardless of how many times it’s been changed.\n\n        This request can be used to listen for update and modifications to the database for post processing or synchronization. A continuously connected changes feed is a reasonable approach for generating a real-time log for most applications.\n      parameters:\n        - name: limit\n          in: query\n          schema:\n            type: integer\n          description: Maximum number of changes to return.\n        - name: style\n          schema:\n            type: string\n            default: main_only\n            enum:\n              - main_only\n              - all_docs\n          in: query\n          description: Controls whether to return the current winning revision (`main_only`) or all the leaf revision including conflicts and deleted former conflicts (`all_docs`).\n        - name: active_only\n          schema:\n            type: boolean\n            default: 'false'\n          in: query\n          description: Set true to exclude deleted documents and notifications for documents the user no longer has access to from the changes feed.\n        - $ref: '#/components/parameters/include_docs'\n        - name: revocations\n          schema:\n            type: boolean\n          in: query\n          description: 'If true, revocation messages will be sent on the changes feed.'\n        - name: filter\n          schema:\n            type: string\n            enum:\n              - sync_gateway/bychannel\n              - _doc_ids\n          in: query\n          description: Set a filter to either filter by channels or document IDs.\n        - name: channels\n          schema:\n            type: string\n          in: query\n          description: 'A comma-separated list of channel names to filter the response to only the channels specified. To use this option, the `filter` query option must be set to `sync_gateway/bychannels`.'\n        - name: doc_ids\n          schema:\n            type: array\n            items:\n              type: string\n          in: query\n          description: 'A valid JSON array of document IDs to filter the documents in the response to only the documents specified. To use this option, the `filter` query option must be set to `_doc_ids` and the `feed` parameter must be `normal`. Also accepts a comma separated list of document IDs instead.'\n        - name: heartbeat\n          schema:\n            type: integer\n            default: 0\n            minimum: 25000\n          in: query\n          description: The interval (in milliseconds) to send an empty line (CRLF) in the response. This is to help prevent gateways from deciding the socket is idle and therefore closing it. This is only applicable to `feed=longpoll` or `feed=continuous`. This will override any timeouts to keep the feed alive indefinitely. Setting to 0 results in no heartbeat. The maximum heartbeat can be set in the server replication configuration.\n        - name: timeout\n          schema:\n            type: integer\n            default: 300000\n            maximum: 900000\n            minimum: 0\n          in: query\n          description: 'This is the maximum period (in milliseconds) to wait for a change before the response is sent, even if there are no results. This is only applicable for `feed=longpoll` or `feed=continuous` changes feeds. Setting to 0 results in no timeout.'\n        - name: feed\n          schema:\n            type: string\n            default: normal\n            enum:\n              - normal\n              - longpoll\n              - continuous\n              - websocket\n          in: query\n          description: 'The type of changes feed to use. '\n    post:\n      responses:\n        '200':\n          $ref: '#/components/responses/changes-feed'\n        '400':\n          $ref: '#/components/responses/request-problem'\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n        - Public\n      summary: Get changes list\n      description: |-\n        This request retrieves a sorted list of changes made to documents in the database, in time order of application. Each document appears at most once, ordered by its most recent change, regardless of how many times it’s been changed.\n\n        This request can be used to listen for update and modifications to the database for post processing or synchronization. A continuously connected changes feed is a reasonable approach for generating a real-time log for most applications.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                limit:\n                  type: string\n                  description: Maximum number of changes to return.\n                style:\n                  type: string\n                  description: Controls whether to return the current winning revision (`main_only`) or all the leaf revision including conflicts and deleted former conflicts (`all_docs`).\n                active_only:\n                  type: string\n                  description: Set true to exclude deleted documents and notifications for documents the user no longer has access to from the changes feed.\n                include_docs:\n                  type: string\n                  description: Include the body associated with each document.\n                revocations:\n                  type: string\n                  description: 'If true, revocation messages will be sent on the changes feed.'\n                filter:\n                  type: string\n                  description: Set a filter to either filter by channels or document IDs.\n                channels:\n                  type: string\n                  description: 'A comma-separated list of channel names to filter the response to only the channels specified. To use this option, the `filter` query option must be set to `sync_gateway/bychannels`.'\n                doc_ids:\n                  type: string\n                  description: 'A valid JSON array of document IDs to filter the documents in the response to only the documents specified. To use this option, the `filter` query option must be set to `_doc_ids` and the `feed` parameter must be `normal`.'\n                heartbeat:\n                  type: string\n                  description: The interval (in milliseconds) to send an empty line (CRLF) in the response. This is to help prevent gateways from deciding the socket is idle and therefore closing it. This is only applicable to `feed=longpoll` or `feed=continuous`. This will override any timeouts to keep the feed alive indefinitely. Setting to 0 results in no heartbeat. The maximum heartbeat can be set in the server replication configuration.\n                timeout:\n                  type: string\n                  description: 'This is the maximum period (in milliseconds) to wait for a change before the response is sent, even if there are no results. This is only applicable for `feed=longpoll` or `feed=continuous` changes feeds. Setting to 0 results in no timeout.'\n                feed:\n                  type: string\n                  description: 'The type of changes feed to use. '\n    head:\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n      tags:\n        - Admin\n        - Public\n  '/{db}/_design/{ddoc}':\n    parameters:\n      - $ref: '#/components/parameters/db'\n      - $ref: '#/components/parameters/ddoc'\n    get:\n      responses:\n        '200':\n          description: Successfully returned design document.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Design-doc'\n        '403':\n          $ref: '#/components/responses/ddoc-forbidden'\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n        - Public\n      summary: Get views of a design document | Unsupported\n      description: |-\n        **This is unsupported**\n        Query a design document.\n    put:\n      responses:\n        '200':\n          description: Design document changes successfully\n        '403':\n          $ref: '#/components/responses/ddoc-forbidden'\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n        - Public\n      summary: Update views of a design document | Unsupported\n      description: |-\n        **This is unsupported**\n        Update the views of a design document.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Design-doc'\n    delete:\n      responses:\n        '200':\n          description: Design document deleted successfully\n        '403':\n          $ref: '#/components/responses/ddoc-forbidden'\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n        - Public\n      description: |-\n        **This is unsupported**\n        Delete a design document.\n      summary: Delete a design document | Unsupported\n    head:\n      responses:\n        '200':\n          description: Design document exists\n        '403':\n          description: Forbidden access possibly due to not using the Admin API or the design document is a built-in Sync Gateway one.\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n        - Public\n      description: |-\n        **This is unsupported**\n        Check if a design document can be queried.\n      summary: Check if view of design document exists | Unsupported\n  '/{db}/_design/{ddoc}/_view/{view}':\n    parameters:\n      - $ref: '#/components/parameters/db'\n      - $ref: '#/components/parameters/ddoc'\n      - $ref: '#/components/parameters/view'\n    get:\n      responses:\n        '200':\n          description: Returned view successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  total_rows:\n                    type: integer\n                  rows:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        id:\n                          type: string\n                        key:\n                          type: object\n                        value:\n                          type: object\n                        doc:\n                          type: object\n                  errors:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        From:\n                          type: string\n                        Reason:\n                          type: string\n                required:\n                  - total_rows\n                  - rows\n        '403':\n          description: Forbidden\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n        - Public\n      parameters:\n        - name: inclusive_end\n          schema:\n            type: boolean\n          in: query\n          description: Indicates whether the specified end key should be included in the result.\n        - name: descending\n          schema:\n            type: boolean\n          in: query\n          description: Return documents in descending order.\n        - name: include_docs\n          in: query\n          schema:\n            type: boolean\n          description: Only works when using Couchbase Server 3.0 and earlier. Indicates whether to include the full content of the documents in the response.\n        - name: reduce\n          schema:\n            type: boolean\n          in: query\n          description: Whether to execute a reduce function on the response or not.\n        - name: group\n          schema:\n            type: boolean\n          in: query\n          description: Group the results using the reduce function to a group or single row.\n        - name: skip\n          schema:\n            type: integer\n          in: query\n          description: Skip the specified number of documents before starting to return results.\n        - name: limit\n          in: query\n          schema:\n            type: integer\n          description: Return only the specified number of documents\n        - name: group_level\n          schema:\n            type: integer\n          in: query\n          description: Specify the group level to be used.\n        - name: startkey_docid\n          schema:\n            type: string\n          in: query\n          description: Return documents starting with the specified document identifier.\n        - name: endkey_docid\n          schema:\n            type: string\n          in: query\n          description: Stop returning records when the specified document identifier is reached.\n        - name: stale\n          schema:\n            type: string\n            enum:\n              - ok\n              - update_after\n          in: query\n          description: 'Allow the results from a stale view to be used, without triggering a rebuild of all views within the encompassing design document.'\n        - $ref: '#/components/parameters/startkey'\n        - $ref: '#/components/parameters/endkey'\n        - name: key\n          schema:\n            type: string\n          in: query\n          description: Return only the document that matches the specified key.\n        - $ref: '#/components/parameters/keys'\n      description: |-\n        **This is unsupported**\n        Query a view on a design document.\n      summary: Query a view on a design document | Unsupported\n  '/{db}/_ensure_full_commit':\n    parameters:\n      - $ref: '#/components/parameters/db'\n    post:\n      responses:\n        '201':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  instance_start_time:\n                    type: integer\n                  ok:\n                    type: boolean\n      tags:\n        - Admin\n        - Public\n  '/{db}/_revs_diff':\n    parameters:\n      - $ref: '#/components/parameters/db'\n    post:\n      responses:\n        '200':\n          description: Comparisons successful\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  docid:\n                    type: object\n                    description: The document ID.\n                    properties:\n                      missing:\n                        type: array\n                        description: The revisions that are not in the database (and therefore `missing`).\n                        items:\n                          type: string\n                      possible_ancestors:\n                        type: array\n                        description: An array of known revisions that might be the recent ancestors.\n                        items:\n                          type: string\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n        - Public\n      summary: Compare revisions to whats in the database\n      description: |-\n        This is used by the replicator to detect which revisions Sync Gateway does not have. \n\n        This takes the document IDs with each having set of revision IDs, then this is used to look up which revisions do not corrospond to what's in the database. An array of the unknown revisions are returned, and an array of known revisions that might be recent ancestors for each of the documents.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                docid:\n                  type: array\n                  description: The document ID with an array of revisions to use for the comparison.\n                  items:\n                    type: string\n  '/{db}/_local/{docid}':\n    parameters:\n      - $ref: '#/components/parameters/db'\n      - schema:\n          type: string\n        name: docid\n        in: path\n        required: true\n        description: The name of the local document ID excluding the `_local/` prefix.\n    get:\n      responses:\n        '200':\n          description: Successfully found local document\n        '400':\n          $ref: '#/components/responses/request-problem'\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n        - Public\n      description: |-\n        This request retrieves a local document. \n\n        Local document IDs begin with `_local/`. Local documents are not replicated or indexed, don’t support attachments, and don’t save revision histories. In practice they are almost only used by Couchbase Lite’s replicator, as a place to store replication checkpoint data.\n      summary: Get local document\n    put:\n      responses:\n        '201':\n          description: Document successfully upserted. The document ID will be prefixed with `_local/`.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/New-revision'\n        '400':\n          $ref: '#/components/responses/request-problem'\n        '404':\n          $ref: '#/components/responses/Not-found'\n        '409':\n          description: A revision ID conflict would result from updating this document revision.\n      tags:\n        - Admin\n        - Public\n      description: |-\n        This request creates or updates a local document. Updating a local document requires that the revision ID be put in the body under `_rev`.\n\n        Local document IDs are given a `_local/` prefix. Local documents are not replicated or indexed, don’t support attachments, and don’t save revision histories. In practice they are almost only used by the client’s replicator, as a place to store replication checkpoint data.\n      summary: Upsert a local document\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                _rev:\n                  type: string\n                  description: Revision to replace. Required if updating existing local document.\n        description: The body of the document\n    delete:\n      responses:\n        '200':\n          description: Successfully removed the local document.\n        '400':\n          $ref: '#/components/responses/request-problem'\n        '404':\n          $ref: '#/components/responses/Not-found'\n        '409':\n          description: A revision ID conflict would result from deleting this document revision.\n      tags:\n        - Admin\n        - Public\n      description: |-\n        This request deletes a local document.\n\n        Local document IDs begin with `_local/`. Local documents are not replicated or indexed, don’t support attachments, and don’t save revision histories. In practice they are almost only used by Couchbase Lite’s replicator, as a place to store replication checkpoint data.\n      parameters:\n        - schema:\n            type: string\n          in: query\n          name: rev\n          description: The revision ID of the revision to delete.\n          required: true\n    head:\n      responses:\n        '200':\n          description: Document exists\n        '400':\n          $ref: '#/components/responses/request-problem'\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n        - Public\n      summary: Check if local document exists\n      description: |-\n        This request checks if a local document exists. \n\n        Local document IDs begin with `_local/`. Local documents are not replicated or indexed, don’t support attachments, and don’t save revision histories. In practice they are almost only used by Couchbase Lite’s replicator, as a place to store replication checkpoint data.\n  '/{db}/{docid}':\n    parameters:\n      - $ref: '#/components/parameters/db'\n      - $ref: '#/components/parameters/docid'\n    get:\n      responses:\n        '200':\n          description: Document found and returned successfully\n          headers:\n            Etag:\n              schema:\n                type: string\n              description: The document revision ID if only returning 1 revision.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  _id:\n                    type: string\n                    description: The ID of the document.\n                  _rev:\n                    type: string\n                    description: The revision ID of the document.\n              examples:\n                Example with no optional fields filled:\n                  value:\n                    FailedLoginAttempts: 5\n                    Friends:\n                      - Bob\n                    _id: AliceSettings\n                    _rev: 1-64d4a1f179db5c1848fe52967b47c166\n        '400':\n          $ref: '#/components/responses/invalid-doc-id'\n        '404':\n          $ref: '#/components/responses/Not-found'\n        '501':\n          description: Not Implemented. It is likely this error was caused due to trying to use an enterprise-only feature on the community edition.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTP-Error'\n      tags:\n        - Admin\n        - Public\n      summary: Get a document\n      parameters:\n        - $ref: '#/components/parameters/rev'\n        - $ref: '#/components/parameters/open_revs'\n        - $ref: '#/components/parameters/show_exp'\n        - $ref: '#/components/parameters/revs_from'\n        - $ref: '#/components/parameters/atts_since'\n        - $ref: '#/components/parameters/revs_limit'\n        - $ref: '#/components/parameters/includeAttachments'\n        - $ref: '#/components/parameters/replicator2'\n      description: Retrieve a document from the database by it's doc ID.\n    put:\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/New-revision'\n          headers:\n            Etag:\n              schema:\n                type: string\n              description: The revision of the upserted document. Not set if query option `new_edits` is true.\n        '400':\n          $ref: '#/components/responses/request-problem'\n        '404':\n          $ref: '#/components/responses/Not-found'\n        '409':\n          $ref: '#/components/responses/Conflict'\n        '415':\n          $ref: '#/components/responses/Invalid-content-type'\n      tags:\n        - Admin\n        - Public\n      description: |-\n        This will upsert a document meaning if it does not exist, then it will be created. Otherwise a new revision will be made for the existing document. A revision ID must be provided if targetting an existing document.\n\n        A document ID must be specified for this endpoint. To let Sync Gateway generate the ID, use the `POST /{db}/` endpoint. \n\n        If a document does exist, then replace the document content with the request body. This means unspecified fields will be removed in the new revision.\n\n        The maximum size for a document is 20MB.\n      parameters:\n        - $ref: '#/components/parameters/roundtrip'\n        - $ref: '#/components/parameters/replicator2'\n        - $ref: '#/components/parameters/new_edits'\n        - $ref: '#/components/parameters/rev'\n        - $ref: '#/components/parameters/If-Match'\n      summary: Upsert a document\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Document'\n    delete:\n      responses:\n        '200':\n          $ref: '#/components/responses/New-revision'\n        '400':\n          $ref: '#/components/responses/request-problem'\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n        - Public\n      summary: Delete a document\n      description: |-\n        Delete a document from the database. A new revision is created so the database can track the deletion in synchronized copies.\n\n        A revision ID either in the header or on the query parameters is required.\n      parameters:\n        - $ref: '#/components/parameters/rev'\n        - $ref: '#/components/parameters/If-Match'\n    head:\n      responses:\n        '200':\n          description: Document exists\n        '400':\n          $ref: '#/components/responses/invalid-doc-id'\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n        - Public\n      summary: Check if a document exists\n      parameters:\n        - $ref: '#/components/parameters/rev'\n        - $ref: '#/components/parameters/open_revs'\n        - $ref: '#/components/parameters/show_exp'\n        - $ref: '#/components/parameters/revs_from'\n        - $ref: '#/components/parameters/atts_since'\n        - $ref: '#/components/parameters/revs_limit'\n        - $ref: '#/components/parameters/includeAttachments'\n        - $ref: '#/components/parameters/replicator2'\n      description: Return a status code based on if the document exists or not.\n  '/{db}/{docid}/{attach}':\n    parameters:\n      - $ref: '#/components/parameters/db'\n      - $ref: '#/components/parameters/docid'\n      - name: attach\n        schema:\n          type: string\n        in: path\n        required: true\n        description: 'The attachment name. This value must be URL encoded. For example, if the attachment name is `blob_/avatar`, the path component passed to the URL should be `blob_%2Favatar` (tested with [URLEncoder](https://www.urlencoder.org/)).'\n    get:\n      responses:\n        '200':\n          description: Found attachment successfully.\n          headers:\n            Content-Length:\n              schema:\n                type: number\n              description: Length of the attachment in bytes\n            Etag:\n              schema:\n                type: string\n              description: 'The attachment digest. Does not get set when request `meta=true`. '\n        '206':\n          description: Partial attachment content returned\n        '404':\n          $ref: '#/components/responses/Not-found'\n        '416':\n          description: Requested range exceeds content length\n      tags:\n        - Admin\n        - Public\n      summary: Get an attachment from a document\n      description: |-\n        This request retrieves a file attachment associated with the document. \n\n        The raw data of the associated attachment is returned (just as if you were accessing a static file). The `Content-Type` response header is the same content type set when the document attachment was added to the database. The `Content-Disposition` response header will be set if the content type is considered unsafe to display in a browser (unless overriden by by database config option `serve_insecure_attachment_types`) which will force the attachment to be downloaded.\n\n        If the `meta` query parameter is set then the response will be in JSON with the additional metadata tags.\n      parameters:\n        - $ref: '#/components/parameters/rev'\n        - name: content_encoding\n          schema:\n            type: boolean\n            default: 'true'\n          in: query\n          description: Set to false to disable the `Content-Encoding` response header.\n        - name: Range\n          schema:\n            type: string\n          in: header\n          description: RFC-2616 bytes range header.\n          example: bytes=123-456\n        - name: meta\n          schema:\n            type: boolean\n            default: 'false'\n          in: query\n          description: Return only the metadata of the attachment in the response body.\n    put:\n      responses:\n        '201':\n          description: Attachment added to new or existing document successfully\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/New-revision'\n          headers:\n            Etag:\n              schema:\n                type: string\n              description: The ID of the new revision.\n        '404':\n          $ref: '#/components/responses/Not-found'\n        '409':\n          $ref: '#/components/responses/Conflict'\n      tags:\n        - Admin\n        - Public\n      summary: Create or update an attachment on a document\n      description: |-\n        This request adds or updates an attachment associated with the document. If the document does not exist, it will be created and the attachment will be added to it.\n\n        If the attachment already exists, the data of the existing attachment will be replaced in the new revision.\n\n        The maximum content size of an attachment is 20MB. The `Content-Type` header of the request specifies the content type of the attachment.\n\n        To remove an attachment from a document, omit the attachment in the `_attachments` object of the document in the `PUT /{db}/{docid}` request.\n      parameters:\n        - name: Content-Type\n          schema:\n            type: string\n            default: application/octet-stream\n          in: header\n          description: The content type of the attachment.\n        - name: rev\n          schema:\n            type: string\n          in: query\n          description: The existing document revision ID to modify. Required only when modifying an existing document.\n        - name: If-Match\n          schema:\n            type: string\n          in: header\n          description: An alternative way of specifying the document revision ID.\n      requestBody:\n        content:\n          Attachment content type:\n            schema:\n              description: The content to store in the body\n              type: string\n        description: The attachment data\n    head:\n      responses:\n        '200':\n          description: The document exists and the attachment exists on the document.\n          headers:\n            Content-Length:\n              schema:\n                type: number\n                description: Length of the attachment in bytes\n            Etag:\n              schema:\n                type: string\n              description: The attachment digest.\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n        - Public\n      summary: Check if attachment exists\n      description: This request check if the attachment exists on the specified document.\n      parameters:\n        - $ref: '#/components/parameters/rev'\n  '/{db}/_session':\n    parameters:\n      - $ref: '#/components/parameters/db'\n    get:\n      responses:\n        '200':\n          $ref: '#/components/responses/User-session-information'\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n        - Public\n      summary: Get information about the current user\n      description: This will get the information about the current user.\n    post:\n      responses:\n        '200':\n          description: Session created successfully. Returned body is dependant on if using Public or Admin APIs\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  session_id:\n                    type: string\n                    description: '**Admin API only**: The ID of the session. This is the value that would be put in to the cookie to keep the user authenticated.'\n                  expires:\n                    type: string\n                    description: '**Admin API only**: The date and time the cookie expires.'\n                  cookie_name:\n                    type: string\n                    description: '**Admin API only**: The name of the cookie that would be used to store the users session.'\n              examples:\n                Admin API response:\n                  value:\n                    session_id: c5af80a039db4ed9d2b6865576b6999935282689\n                    expires: '2022-01-21T15:24:44Z'\n                    cookie_name: SyncGatewaySession\n                Public API response:\n                  value:\n                    authentication_handlers:\n                      - default\n                      - cookie\n                    ok: true\n                    userCtx:\n                      channels:\n                        '!': 1\n                      name: Bob\n        '400':\n          $ref: '#/components/responses/Invalid-CORS'\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n        - Public\n      summary: Create a new user session\n      description: |-\n        # Admin API\n        Generates a login session for a user and returns the session ID and cookie name for that session. If no TTL is provided, then the default of 24 hours will be used.\n\n        A session cannot be generated for an non-existent user or the `GUEST` user.\n\n        # Public API\n        Generates a login session for the user based on the credentials provided in the request body or if that fails (due to invalid credentials or none provided at all), generates the new session for the currently authenticated user instead. On a successful session creation, a session cookie is stored to keep the user authenticated for future API calls.\n\n        If CORS is enabled, the origin must match an allowed login origin otherwise an error will be returned.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  description: User name to generate the session for.\n                ttl:\n                  type: integer\n                  description: '**Admin API only**: Time until the session expires. Uses default value of 24 hours if left blank.'\n                password:\n                  type: string\n                  description: '**Public API only**: Password of the user to generate the session for.'\n        description: The body can depend on if using the Public or Admin APIs.\n    delete:\n      responses:\n        '200':\n          description: Successfully removed session (logged out)\n        '400':\n          description: Bad Request\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Public\n      description: |-\n        Invalidates the session for the currently authenticated user and removes their session cookie.\n\n        If CORS is enabled, the origin must match an allowed login origin otherwise an error will be returned.\n      summary: Log out\n    head:\n      responses:\n        '200':\n          description: OK\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n        - Public\n  '/{db}/_facebook':\n    parameters:\n      - $ref: '#/components/parameters/db'\n    post:\n      deprecated: true\n      responses:\n        '200':\n          description: Session created successfully\n        '400':\n          $ref: '#/components/responses/Invalid-CORS'\n        '401':\n          description: Recieved error from Facebook verifier\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                  reason:\n                    type: string\n        '404':\n          $ref: '#/components/responses/Not-found'\n        '502':\n          description: Recieved invalid response from the Facebook verifier\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                  reason:\n                    type: string\n        '504':\n          description: Unable to send request to Facebook API\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                  reason:\n                    type: string\n      tags:\n        - Admin\n        - Public\n      summary: Create a new Facebook-based session\n      description: |-\n        Creates a new session based on a Facebook user. On a successful session creation, a session cookie is stored to keep the user authenticated for future API calls.\n\n        If CORS is enabled, the origin must match an allowed login origin otherwise an error will be returned.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                access_token:\n                  type: string\n                  description: Facebook access token to base the new session on.\n              required:\n                - access_token\n  '/{db}/_google':\n    parameters:\n      - $ref: '#/components/parameters/db'\n    post:\n      deprecated: true\n      responses:\n        '200':\n          description: Session created successfully\n        '400':\n          $ref: '#/components/responses/Invalid-CORS'\n        '401':\n          description: Recieved error from Google token verifier or invalid application ID in the config\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                  reason:\n                    type: string\n        '404':\n          $ref: '#/components/responses/Not-found'\n        '502':\n          description: Recieved invalid response from the Google token verifier\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                  reason:\n                    type: string\n        '504':\n          description: Unable to send request to the Google token verifier\n      tags:\n        - Admin\n        - Public\n      summary: Create a new Google-based session\n      description: |-\n        Creates a new session based on a Google user. On a successful session creation, a session cookie is stored to keep the user authenticated for future API calls.\n\n        If CORS is enabled, the origin must match an allowed login origin otherwise an error will be returned.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                id_token:\n                  type: string\n                  description: Google ID token to base the new session on.\n              required:\n                - id_token\n  '/{db}/_oidc':\n    parameters:\n      - $ref: '#/components/parameters/db'\n    get:\n      responses:\n        '302':\n          description: Successfully connected with the OpenID Connect provider so now redirecting to the requested OIDC provider for authentication.\n          headers:\n            Location:\n              schema:\n                type: string\n              description: The link to redirect to so the client can authenticate.\n        '400':\n          $ref: '#/components/responses/OIDC-invalid-provider'\n        '404':\n          $ref: '#/components/responses/Not-found'\n        '500':\n          $ref: '#/components/responses/OIDC-connection'\n      tags:\n        - Admin\n        - Public\n      summary: OpenID Connect authentication initiation via Location header redirect\n      description: 'Called by clients to initiate the OpenID Connect Authorization Code Flow. Redirects to the OpenID Connect provider if successful. '\n      parameters:\n        - $ref: '#/components/parameters/provider'\n        - $ref: '#/components/parameters/offline'\n  '/{db}/_oidc_challenge':\n    parameters:\n      - $ref: '#/components/parameters/db'\n    get:\n      responses:\n        '400':\n          description: 'The provider provided is not defined in the Sync Gateway config. If no provided was specified then there is no default provider set. '\n        '401':\n          description: Successfully connected with the OpenID Connect provider so now the client can login.\n          headers:\n            WWW-Authenticate:\n              schema:\n                type: string\n              description: The OpenID Connect authentication URL.\n        '404':\n          $ref: '#/components/responses/Not-found'\n        '500':\n          description: Unable to connect and validate with the OpenID Connect provider requested\n      tags:\n        - Admin\n        - Public\n      summary: OpenID Connect authentication initiation via WWW-Authenticate header\n      description: 'Called by clients to initiate the OpenID Connect Authorization Code Flow. This will establish a connection with the provider, then put the redirect URL in the `WWW-Authenticate` header.'\n      parameters:\n        - $ref: '#/components/parameters/provider'\n        - $ref: '#/components/parameters/offline'\n  '/{db}/_oidc_callback':\n    parameters:\n      - $ref: '#/components/parameters/db'\n    get:\n      responses:\n        '200':\n          $ref: '#/components/responses/OIDC-callback'\n        '400':\n          description: A problem occurred when reading the callback request body\n        '401':\n          description: An error was receieved from the OpenID Connect provider. This means the error query parameter was filled.\n        '404':\n          $ref: '#/components/responses/Not-found'\n        '500':\n          description: A problem occurred in regards to the token\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                  reason:\n                    type: string\n      tags:\n        - Admin\n        - Public\n      summary: OpenID Connect authentication callback\n      parameters:\n        - name: error\n          schema:\n            type: string\n          in: query\n          description: 'The OpenID Connect error, if any occurred.'\n        - $ref: '#/components/parameters/oidc-code'\n        - $ref: '#/components/parameters/provider'\n        - $ref: '#/components/parameters/oidc-state'\n      description: The callback URL that the client is redirected to after authenticating with the OpenID Connect provider.\n  '/{db}/_oidc_refresh':\n    parameters:\n      - $ref: '#/components/parameters/db'\n    get:\n      responses:\n        '200':\n          $ref: '#/components/responses/OIDC-callback'\n        '400':\n          $ref: '#/components/responses/OIDC-invalid-provider'\n        '404':\n          $ref: '#/components/responses/Not-found'\n        '500':\n          $ref: '#/components/responses/OIDC-connection'\n      tags:\n        - Admin\n        - Public\n      summary: OpenID Connect token refresh\n      parameters:\n        - name: refresh_token\n          schema:\n            type: string\n          in: query\n          description: The OpenID Connect refresh token.\n          required: true\n        - $ref: '#/components/parameters/provider'\n      description: Refresh the OpenID Connect token based on the provided refresh token.\n  '/{db}/_oidc_testing/.well-known/openid-configuration':\n    parameters:\n      - $ref: '#/components/parameters/db'\n    get:\n      responses:\n        '200':\n          description: 'Sucessfully generated OpenID Connect provider mock response. '\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  issuer:\n                    type: string\n                  authorization_endpoint:\n                    type: string\n                  token_endpoint:\n                    type: string\n                  jwks_uri:\n                    type: string\n                  userinfo_endpoint:\n                    type: string\n                  id_token_signing_alg_values_supported:\n                    type: string\n                  response_types_supported:\n                    type: string\n                  subject_types_supported:\n                    type: string\n                  scopes_supported:\n                    type: string\n                  claims_supported:\n                    type: string\n                  token_endpoint_auth_methods_supported:\n                    type: string\n          headers:\n            Expiry:\n              schema:\n                type: string\n              description: the time until the response expires.\n        '403':\n          $ref: '#/components/responses/OIDC-test-provider-disabled'\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n        - Public\n      summary: OpenID Connect mock provider\n      description: Mock an OpenID Connect provider response for testing purposes. This returns a response that is the same structure as what Sync Gateway expects from an OIDC provider after initiating OIDC authentication.\n  '/{db}/_oidc_testing/authorize':\n    parameters:\n      - $ref: '#/components/parameters/db'\n    get:\n      responses:\n        '200':\n          description: OK\n        '400':\n          $ref: '#/components/responses/OIDC-invalid-scope'\n        '403':\n          $ref: '#/components/responses/OIDC-test-provider-disabled'\n        '404':\n          $ref: '#/components/responses/Not-found'\n        '500':\n          $ref: '#/components/responses/OIDC-testing-internal-error'\n      tags:\n        - Admin\n        - Public\n      summary: OpenID Connect mock login page\n      description: Show a mock OpenID Connect login page for the client to log in to.\n      parameters:\n        - $ref: '#/components/parameters/oidc-scope'\n    post:\n      responses:\n        '200':\n          description: OK\n        '400':\n          $ref: '#/components/responses/OIDC-invalid-scope'\n        '403':\n          $ref: '#/components/responses/OIDC-test-provider-disabled'\n        '404':\n          $ref: '#/components/responses/Not-found'\n        '500':\n          $ref: '#/components/responses/OIDC-testing-internal-error'\n      tags:\n        - Admin\n        - Public\n      summary: OpenID Connect mock login page\n      description: Show a mock OpenID Connect login page for the client to log in to.\n      parameters:\n        - $ref: '#/components/parameters/oidc-scope'\n  '/{db}/_oidc_testing/token':\n    parameters:\n      - $ref: '#/components/parameters/db'\n    post:\n      responses:\n        '200':\n          $ref: '#/components/responses/OIDC-token'\n        '400':\n          description: Invalid token provided\n        '403':\n          $ref: '#/components/responses/OIDC-test-provider-disabled'\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n        - Public\n      summary: OpenID Connect mock token\n      description: Return a mock OpenID Connect token for the OIDC authentication flow.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                grant_type:\n                  type: string\n                  description: The grant type of the token to request. Can either be an `authorization_code` or `refresh_token`.\n                code:\n                  type: string\n                  description: '**`grant_type=authorization_code` only**: The OpenID Connect authentication token.'\n                refresh_token:\n                  type: string\n                  description: '**`grant_type=refresh_token` only**: The OpenID Connect refresh token.'\n              required:\n                - grant_type\n  '/{db}/_oidc_testing/certs':\n    parameters:\n      - $ref: '#/components/parameters/db'\n    get:\n      responses:\n        '200':\n          description: Returned public key sucessfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  keys:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        Key:\n                          type: object\n                        KeyID:\n                          type: string\n                        Use:\n                          type: string\n                        Certificates:\n                          type: array\n                          items:\n                            type: object\n                        Algorithm:\n                          type: string\n                      required:\n                        - Key\n                        - KeyID\n                        - Use\n                required:\n                  - keys\n        '403':\n          $ref: '#/components/responses/OIDC-test-provider-disabled'\n        '404':\n          $ref: '#/components/responses/Not-found'\n        '500':\n          description: An error occurred while getting the private RSA key\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                  reason:\n                    type: string\n      tags:\n        - Admin\n        - Public\n      summary: OpenID Connect public certificates for signing keys\n      description: Return a mock OpenID Connect public key to be used as signing keys.\n  '/{db}/_oidc_testing/authenticate':\n    parameters:\n      - $ref: '#/components/parameters/db'\n    get:\n      responses:\n        '302':\n          $ref: '#/components/responses/OIDC-testing-redirect'\n        '403':\n          $ref: '#/components/responses/OIDC-test-provider-disabled'\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n        - Public\n      parameters:\n        - $ref: '#/components/parameters/oidc-redirect_uri'\n        - $ref: '#/components/parameters/oidc-scope'\n        - name: username\n          in: query\n          schema:\n            type: string\n          required: true\n        - name: tokenttl\n          in: query\n          schema:\n            type: integer\n          required: true\n        - name: identity-token-formats\n          in: query\n          schema:\n            type: string\n          required: true\n        - name: authenticated\n          in: query\n          schema:\n            type: string\n          required: true\n      description: 'Used to handle the login page displayed for the `GET /{db}/_oidc_testing/authorize` endpoint.'\n      summary: OpenID Connect mock login page handler\n    post:\n      responses:\n        '302':\n          $ref: '#/components/responses/OIDC-testing-redirect'\n        '403':\n          $ref: '#/components/responses/OIDC-test-provider-disabled'\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n        - Public\n      description: 'Used to handle the login page displayed for the `GET /{db}/_oidc_testing/authorize` endpoint.'\n      parameters:\n        - $ref: '#/components/parameters/oidc-redirect_uri'\n        - $ref: '#/components/parameters/oidc-scope'\n      summary: OpenID Connect mock login page handler\n      requestBody:\n        $ref: '#/components/requestBodies/OIDC-login-page-handler'\n  '/{db}/_blipsync':\n    parameters:\n      - $ref: '#/components/parameters/db'\n    get:\n      responses:\n        '101':\n          description: Upgraded to a web socket connection\n        '404':\n          $ref: '#/components/responses/Not-found'\n        '426':\n          description: Cannot upgrade connection to a web socket connection\n      tags:\n        - Admin\n        - Public\n      summary: Handle incoming BLIP Sync web socket request\n      description: This handles incoming BLIP Sync requests from either Couchbase Lite or another Sync Gateway node. The connection has to be upgradable to a websocket connection or else the request will fail.\n      parameters:\n        - name: client\n          schema:\n            type: string\n            default: cbl2\n            enum:\n              - cbl2\n              - sgr2\n          in: query\n          description: This is the client type that is making the BLIP Sync request. Used to control client-type specific replication behaviour.\n  '/{targetdb}/':\n    parameters:\n      - name: targetdb\n        schema:\n          type: string\n        in: path\n        required: true\n        description: The database name to target.\n    put:\n      responses:\n        '403':\n          description: Database does not exist and cannot be created over the public API\n        '412':\n          description: Database exists\n      tags:\n        - Public\n  '/{db}/_session/{sessionid}':\n    parameters:\n      - $ref: '#/components/parameters/db'\n      - $ref: '#/components/parameters/sessionid'\n    get:\n      responses:\n        '200':\n          $ref: '#/components/responses/User-session-information'\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n      summary: Get session information\n      description: Retrieve session information such as the user the session belongs too and what channels that user can access.\n    delete:\n      responses:\n        '200':\n          description: Successfully removed the user session\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n      summary: Remove session\n      description: Invalidates the session provided so that anyone using it is logged out and is prevented from future use.\n  '/{db}/_raw/{docid}':\n    parameters:\n      - $ref: '#/components/parameters/db'\n      - $ref: '#/components/parameters/docid'\n    get:\n      responses:\n        '200':\n          description: Document found sucessfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  _sync:\n                    type: object\n                    properties:\n                      rev:\n                        type: string\n                        description: The current document revision ID.\n                      sequence:\n                        type: number\n                        description: The most recent sequence number of the document.\n                      recent_sequences:\n                        type: array\n                        description: The previous sequence numbers of the document.\n                        items:\n                          type: number\n                      history:\n                        type: object\n                        properties:\n                          revs:\n                            type: array\n                            description: The past revision IDs.\n                            items:\n                              type: string\n                          parents:\n                            type: array\n                            items:\n                              type: number\n                          channels:\n                            description: 'The past channel history. Can contain string arrays, strings, or be null depending on if and how the channels where set.'\n                            type: array\n                            items:\n                              type: array\n                              items:\n                                type: string\n                              nullable: true\n                      cas:\n                        type: string\n                        description: The document CAS (Concurrent Document Mutations) number used for document locking.\n                      value_crc32c:\n                        type: string\n                        description: The documents CRC32 number.\n                      channel_set:\n                        type: array\n                        description: The channels the document has been in.\n                        nullable: true\n                        items:\n                          type: object\n                          properties:\n                            name:\n                              type: string\n                              description: The name of the channel.\n                            start:\n                              type: string\n                              description: The sequence number that document was added to the channel.\n                            end:\n                              type: string\n                              description: The sequence number the document was removed from the channel. Omitted if not removed.\n                      channel_set_history:\n                        type: array\n                        nullable: true\n                        items:\n                          type: object\n                          properties:\n                            name:\n                              type: string\n                            start:\n                              type: string\n                            end:\n                              type: string\n                      time_saved:\n                        type: string\n                        description: The time and date the document was most recently changed.\n        '400':\n          $ref: '#/components/responses/request-problem'\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n      summary: Get a document with the corresponding metadata\n      description: |-\n        Returns the a documents latest revision with it's metadata.\n\n        Note: The direct use of this endpoint is unsupported. The sync metadata is maintained internally by Sync Gateway and its structure can change. It should not be used to drive business logic of applications since the response to the `/{db}/_raw/{id}` endpoint can change at any time.\n      parameters:\n        - $ref: '#/components/parameters/include_doc'\n        - schema:\n            type: boolean\n          in: query\n          name: redact\n          description: This redacts sensitive parts of the sync data. Cannot be used when `include_docs=true`\n    head:\n      responses:\n        '200':\n          description: Document exists\n        '400':\n          $ref: '#/components/responses/request-problem'\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n  '/{db}/_revtree/{docid}':\n    parameters:\n      - $ref: '#/components/parameters/db'\n      - $ref: '#/components/parameters/docid'\n    get:\n      responses:\n        '200':\n          description: Found document\n          content:\n            application/json:\n              schema:\n                type: string\n              examples:\n                Example:\n                  value: 'digraph graphname{\"1-d4d949b7feafc8c31215684baa45b6cd\" -\u003e \"2-4f3f24143ea43d85a9a340ac016fdfc4\"; }'\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n      summary: Revision tree structure in Graphviz Dot format | Unsupported\n      description: |-\n        This returns the Dot syntax of the revision tree for the document so that it can be rendered in to a PNG image using the [Graphviz CLI tool](http://www.graphviz.org/).\n\n        To use:\n        1. Install the Graphviz tool. Using Brew, this can be done by calling `brew install graphviz`.\n        2. Save the response text from this endpoint to a file (for example, `revtree.dot`).\n        3. Render the PNG by calling `dot -Tpng revtree.dot \u003e revtree.png`.\n\n\n        **Note: This endpoint is useful for debugging purposes only. It is not officially supported.**\n  '/{db}/_user/':\n    parameters:\n      - $ref: '#/components/parameters/db'\n    get:\n      responses:\n        '200':\n          description: Users retrieved successfully\n          content:\n            application/json:\n              schema:\n                type: array\n                description: List of all user names\n                items:\n                  type: string\n              examples:\n                Example:\n                  value:\n                    - Alice\n                    - Bob\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n      summary: Get all the names of the users\n      description: Retrieves all the names of the users that are in the database.\n    post:\n      responses:\n        '201':\n          description: New user created successfully\n        '404':\n          $ref: '#/components/responses/Not-found'\n        '409':\n          $ref: '#/components/responses/Conflict'\n      tags:\n        - Admin\n      summary: Create a new user\n      requestBody:\n        $ref: '#/components/requestBodies/User'\n      description: Create a new user using the request body to specify the properties on the user.\n    head:\n      responses:\n        '200':\n          description: OK\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n  '/{db}/_user/{name}':\n    parameters:\n      - $ref: '#/components/parameters/db'\n      - $ref: '#/components/parameters/user-name'\n    get:\n      responses:\n        '200':\n          $ref: '#/components/responses/User'\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n      summary: Get a user\n      description: Retrieve a single users information.\n    put:\n      responses:\n        '200':\n          description: Existing user modified successfully\n        '201':\n          description: New user created\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n      description: 'If the user does not exist, create a new user otherwise update the existing user.'\n      summary: Upsert a user\n      requestBody:\n        $ref: '#/components/requestBodies/User'\n    delete:\n      responses:\n        '200':\n          description: User deleted successfully\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n      description: Delete a user from the database.\n      summary: Delete a user\n    head:\n      responses:\n        '200':\n          description: User exists\n        '404':\n          description: Not Found\n      tags:\n        - Admin\n      summary: Check if user exists\n      description: Check if the user exists by checking the status code.\n  '/{db}/_user/{name}/_session':\n    parameters:\n      - $ref: '#/components/parameters/db'\n      - $ref: '#/components/parameters/user-name'\n    delete:\n      responses:\n        '200':\n          description: User now has no sessions\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n      summary: Remove all of a users sessions\n      description: |-\n        Invalidates all the sessions that a user has.\n\n        Will still return a `200` status code if the user has no sessions.\n  '/{db}/_user/{name}/_session/{sessionid}':\n    parameters:\n      - $ref: '#/components/parameters/db'\n      - $ref: '#/components/parameters/user-name'\n      - $ref: '#/components/parameters/sessionid'\n    delete:\n      responses:\n        '200':\n          description: Session has been sucessfully removed as the user was associated with the session\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n      summary: Remove session with user validation\n      description: Invalidates the session only if it belongs to the user.\n  '/{db}/_role/':\n    parameters:\n      - $ref: '#/components/parameters/db'\n    get:\n      responses:\n        '200':\n          description: Roles retrieved successfully\n          content:\n            application/json:\n              schema:\n                type: array\n                minItems: 0\n                uniqueItems: true\n                description: List of all role names\n                items:\n                  type: string\n              examples:\n                Example:\n                  value:\n                    - Administrator\n                    - Moderator\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n      summary: Get all names of the roles\n      description: Retrieves all the roles that are in the database.\n    post:\n      responses:\n        '201':\n          description: New role created successfully\n        '404':\n          $ref: '#/components/responses/Not-found'\n        '409':\n          $ref: '#/components/responses/Conflict'\n      tags:\n        - Admin\n      summary: Create a new role\n      description: Create a new role using the request body to specify the properties on the role.\n      requestBody:\n        $ref: '#/components/requestBodies/Role'\n    head:\n      responses:\n        '200':\n          description: OK\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n  '/{db}/_role/{name}':\n    parameters:\n      - $ref: '#/components/parameters/db'\n      - $ref: '#/components/parameters/role-name'\n    get:\n      responses:\n        '200':\n          $ref: '#/components/responses/Role'\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n      summary: Get a role\n      description: Retrieve a single roles properties.\n    put:\n      responses:\n        '200':\n          description: OK\n        '201':\n          description: Created\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n      summary: Upsert a role\n      description: 'If the role does not exist, create a new role otherwise update the existing role.'\n      requestBody:\n        $ref: '#/components/requestBodies/Role'\n    delete:\n      responses:\n        '200':\n          description: OK\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n      description: Delete a role from the database.\n      summary: Delete a role\n    head:\n      responses:\n        '200':\n          description: Role exists\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n      description: Check if the role exists by checking the status code.\n      summary: Check if role exists\n  '/{db}/_replication/':\n    parameters:\n      - $ref: '#/components/parameters/db'\n    get:\n      responses:\n        '200':\n          description: |-\n            Retrieved replication configurations successfully.\n            The `assigned_node` fields will end with `(local)` or `(non-local)` depending on if the replication is running on this Sync Gateway node.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/All-replications'\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n      summary: Get all replication configurations\n      description: This will retrieve all database replication definitions.\n    post:\n      responses:\n        '200':\n          $ref: '#/components/responses/Replicator-updated'\n        '201':\n          $ref: '#/components/responses/Replicator-created'\n        '400':\n          $ref: '#/components/responses/request-problem'\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n      summary: Upsert a replication\n      description: |-\n        Create or update a replication in the database.\n\n        If an existing replication is being updated, that replication must be stopped first.\n      requestBody:\n        $ref: '#/components/requestBodies/Replication-upsert'\n    head:\n      responses:\n        '200':\n          description: OK\n        '404':\n          description: Not Found\n      tags:\n        - Admin\n  '/{db}/_replication/{replicationid}':\n    parameters:\n      - $ref: '#/components/parameters/db'\n      - $ref: '#/components/parameters/replicationid'\n    get:\n      responses:\n        '200':\n          description: Successfully retrieved the replication configuration\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Retrieved-replication'\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n      summary: Get a replication configuration\n      description: Retrieve a replication configuration from the database.\n    put:\n      responses:\n        '200':\n          $ref: '#/components/responses/Replicator-updated'\n        '201':\n          $ref: '#/components/responses/Replicator-created'\n        '400':\n          $ref: '#/components/responses/request-problem'\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n      summary: Upsert a replication\n      description: |-\n        Create or update a replication in the database.\n\n        The replication ID does **not** need to be set in the request body.\n\n        If an existing replication is being updated, that replication must be stopped first and, if the `replication_id` is specified in the request body, it must match the replication ID in the URI.\n      requestBody:\n        $ref: '#/components/requestBodies/Replication-upsert'\n    delete:\n      responses:\n        '200':\n          description: Replication successfully deleted\n        '400':\n          $ref: '#/components/responses/request-problem'\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n      summary: Stop and delete a replication\n      description: This will delete a replication causing it to stop and no longer exist.\n    head:\n      responses:\n        '200':\n          description: Replication exists\n        '404':\n          description: Replication does not exist\n      tags:\n        - Admin\n      summary: Check if a replication exists\n      description: Check if a replication exists.\n  /_replicationStatus/:\n    get:\n      responses:\n        '200':\n          description: Successfully retrieved all replication statuses.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Replication-status'\n        '400':\n          $ref: '#/components/responses/request-problem'\n      tags:\n        - Admin\n      summary: Get all replication statuses\n      description: Retrieve all the replication statuses in the Sync Gateway node.\n      parameters:\n        - $ref: '#/components/parameters/replication-active-only'\n        - $ref: '#/components/parameters/replication-local-only'\n        - $ref: '#/components/parameters/replication-include-error'\n        - $ref: '#/components/parameters/replication-include-config'\n    head:\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Bad Request\n      tags:\n        - Admin\n  '/_replicationStatus/{replicationid}':\n    parameters:\n      - $ref: '#/components/parameters/replicationid'\n    get:\n      responses:\n        '200':\n          description: Successfully retrieved replication status\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Replication-status'\n        '400':\n          $ref: '#/components/responses/request-problem'\n        '404':\n          description: Could not find replication\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTP-Error'\n      tags:\n        - Admin\n      summary: Get replication status\n      description: Retrieve the status of a replication.\n      parameters:\n        - $ref: '#/components/parameters/replication-active-only'\n        - $ref: '#/components/parameters/replication-local-only'\n        - $ref: '#/components/parameters/replication-include-error'\n        - $ref: '#/components/parameters/replication-include-config'\n    put:\n      responses:\n        '200':\n          description: Successfully changed target state of replicator\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Replication-status'\n        '400':\n          $ref: '#/components/responses/request-problem'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTP-Error'\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n      description: |-\n        Change the replication state to target. \n\n        This is done through the action query parameter, which has 3 valid values:\n        * `start` - starts a stopped replication\n        * `stop` - stops an active replication\n        * `reset` - resets the replication checkpoint to 0. For bidirectional replication, both push and pull checkpoints are reset to 0. The replication must be stopped to use this.\n      summary: Modify a replication status\n      parameters:\n        - name: action\n          schema:\n            type: string\n            enum:\n              - start\n              - stop\n              - reset\n          in: query\n          description: The target state to put the replicator into.\n          required: true\n    head:\n      responses:\n        '200':\n          description: Replication exists\n        '400':\n          $ref: '#/components/responses/request-problem'\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n      summary: Check if replication exists\n      parameters:\n        - $ref: '#/components/parameters/replication-active-only'\n        - $ref: '#/components/parameters/replication-local-only'\n        - $ref: '#/components/parameters/replication-include-error'\n        - $ref: '#/components/parameters/replication-include-config'\n      description: Check if a replication exists\n  /_logging:\n    get:\n      responses:\n        '200':\n          description: Returned map of console log keys\n          content:\n            application/json:\n              schema:\n                type: object\n                description: Map of console log keys\n                properties:\n                  log_key:\n                    type: boolean\n                    default: true\n                    description: This is the console log keys currently in use (therefore all the values will be `true`).\n                required:\n                  - log_key\n      tags:\n        - Admin\n      description: |-\n        **Deprecated in favour of `GET /_config`**\n        This will return a map of the log keys being used for the console. This will include the runtime log keys.\n      summary: Get the console log keys\n      deprecated: true\n    put:\n      responses:\n        '200':\n          description: Log keys successfully replace\n        '400':\n          $ref: '#/components/responses/request-problem'\n      tags:\n        - Admin\n      deprecated: true\n      description: |-\n        **Deprecated in favour of `PUT /_config`**\n        This is for replacing all the log keys and optionally changing the console log level.\n      summary: Replace console log keys and change log level\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              description: A map of the console log keys to replace all the current log keys with.\n              properties:\n                log_key:\n                  type: boolean\n                  description: The name of the log key and the value `true` to use it.\n        description: The map of log keys to use for console logging.\n      parameters:\n        - $ref: '#/components/parameters/log-level'\n        - $ref: '#/components/parameters/log-level-int'\n    post:\n      responses:\n        '200':\n          description: Log keys successfully upserted.\n        '400':\n          $ref: '#/components/responses/request-problem'\n      tags:\n        - Admin\n      deprecated: true\n      summary: Update console log keys and change log level\n      description: |-\n        **Deprecated in favour of `PUT /_config`**\n        This is for upserting the log keys provided and optionally changing the console log level.\n      parameters:\n        - $ref: '#/components/parameters/log-level'\n        - $ref: '#/components/parameters/log-level-int'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                log_key:\n                  type: boolean\n                  description: 'The console log key to upsert along with the value. If the value is `false` then the log key will not be used, or else if `true` than the log key will be used.'\n        description: The console log keys to upsert.\n  '/_profile/{profilename}':\n    parameters:\n      - name: profilename\n        schema:\n          type: string\n          enum:\n            - heap\n            - block\n            - threadcreate\n            - mutex\n            - goroutine\n        in: path\n        required: true\n        description: The handler to use for profiling.\n    post:\n      responses:\n        '200':\n          description: Successfully started profiling\n        '400':\n          $ref: '#/components/responses/request-problem'\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n      description: |-\n        This endpoint allows you to start profiling Sync Gateway. Profiling outputs a Go pprof file so performance can be analysed.\n\n        To start profiling, call this endpoint with the handler to use for profiling and supply a file to output the pprof file to.\n      summary: Start profiling\n  /_profile:\n    post:\n      responses:\n        '200':\n          description: Sucessfully started or stopped CPU profiling\n        '400':\n          $ref: '#/components/responses/request-problem'\n      tags:\n        - Admin\n      description: |-\n        This endpoint allows you to start or stop CPU profiling for Sync Gateway. Profiling outputs a Go pprof file so performance can be analysed.\n\n        To start profiling the CPU, call this endpoint and supply a file to output the pprof file to. To stop profiling, call this endpoint but don't supply the `file` in the body.\n      summary: Start or stop CPU profiling\n      requestBody:\n        $ref: '#/components/requestBodies/Profile'\n  /_heap:\n    post:\n      responses:\n        '200':\n          description: Successfully dumped heap profile\n        '400':\n          $ref: '#/components/responses/request-problem'\n      tags:\n        - Admin\n      summary: Dump heap profile\n      description: This endpoint will dump a pprof heap profile.\n      requestBody:\n        $ref: '#/components/requestBodies/Profile'\n  /_stats:\n    get:\n      responses:\n        '200':\n          description: Returned memory usage statistics\n      tags:\n        - Admin\n      description: This will return the current Sync Gateway nodes memory statistics such as current memory usage.\n      summary: Get memory statistics\n  /_config:\n    get:\n      responses:\n        '200':\n          description: Successfully returned server configuration\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Startup-config'\n        '400':\n          $ref: '#/components/responses/request-problem'\n      tags:\n        - Admin\n      description: This will return the configuration that the Sync Gateway node is running with.\n      parameters:\n        - $ref: '#/components/parameters/redact'\n        - name: include_runtime\n          in: query\n          description: Include the default values that Sync Gateway is running with (known as the runtime configuration) and include all the databases under the `databases` key.\n          schema:\n            type: boolean\n            default: 'false'\n      summary: Get the server configuration\n    put:\n      responses:\n        '200':\n          description: Successfully updated logging options\n        '400':\n          $ref: '#/components/responses/request-problem'\n      tags:\n        - Admin\n      summary: Update the server logging options\n      description: This endpoint is used to update the server logging options without needing a restart.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                logging:\n                  type: object\n                  properties:\n                    console:\n                      type: object\n                      description: Options for outputting the logs to the console.\n                      properties:\n                        log_level:\n                          type: string\n                          enum:\n                            - none\n                            - error\n                            - warn\n                            - info\n                            - debug\n                            - trace\n                          description: The minimum log level to output to console.\n                        log_keys:\n                          type: array\n                          description: |-\n                            The log keys to use to filter the outputted log messages.\n\n                            **If set, this will replace any existing logging keys.**\n                          items:\n                            type: string\n                            enum:\n                              - '*'\n                              - Admin\n                              - Access\n                              - Auth\n                              - Bucket\n                              - Cache\n                              - Changes\n                              - SGCluster\n                              - Config\n                              - CRUD\n                              - DCP\n                              - Events\n                              - gocb\n                              - HTTP\n                              - HTTP+\n                              - Import\n                              - Javascript\n                              - Migrate\n                              - Query\n                              - Replicate\n                              - Sync\n                              - SyncMsg\n                              - WS\n                              - WSFrame\n                              - TEST\n                    error:\n                      $ref: '#/components/schemas/Log-update-enabled'\n                    warn:\n                      $ref: '#/components/schemas/Log-update-enabled'\n                    info:\n                      $ref: '#/components/schemas/Log-update-enabled'\n                    debug:\n                      $ref: '#/components/schemas/Log-update-enabled'\n                    trace:\n                      $ref: '#/components/schemas/Log-update-enabled'\n                    stats:\n                      $ref: '#/components/schemas/Log-update-enabled'\n  /_status:\n    get:\n      responses:\n        '200':\n          description: Returned the status successfully\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n        '400':\n          $ref: '#/components/responses/request-problem'\n      tags:\n        - Admin\n      summary: Get the server status\n      description: This will retrieve the status of each database and the overall server status.\n  /_sgcollect_info:\n    get:\n      responses:\n        '200':\n          description: Returned sgcollect_info status\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                    enum:\n                      - stopped\n                      - running\n                    description: The status of sgcollect_info.\n                required:\n                  - status\n      tags:\n        - Admin\n      summary: Get the status of the Sync Gateway Collect Info\n      description: This will return the status of whether Sync Gateway Collect Info (sgcollect_info) is currently running or not.\n    post:\n      responses:\n        '200':\n          description: Successfully started sgcollect_info\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                    default: started\n                    description: The new sgcollect_info status.\n        '400':\n          $ref: '#/components/responses/request-problem'\n        '500':\n          description: An error occurred while trying to run sgcollect_info\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTP-Error'\n      tags:\n        - Admin\n      summary: Start Sync Gateway Collect Info\n      description: This endpoint is used to start a Sync Gateway Collect Info (sgcollect_info) job so that Sync Gateway diagnostic data can be outputted to a file.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                redact_level:\n                  type: string\n                  default: partial\n                  enum:\n                    - partial\n                    - none\n                  description: The redaction level to use for redacting the collected logs.\n                redact_salt:\n                  type: string\n                  description: The salt to use for the log redactions.\n                output_dir:\n                  type: string\n                  description: |-\n                    The directory to output the collected logs zip file at.\n\n                    This overrides the configured default output directory configured in the startup config `logging.log_file_path`.\n                  default: The configured path set in the startup config `logging.log_file_path`\n                upload:\n                  type: boolean\n                  description: |-\n                    If set, upload the logs to Couchbase Support.\n\n                    A customer name must be set if this is set.\n                upload_host:\n                  type: string\n                  default: 'https://uploads.couchbase.com'\n                  description: The host to send the logs too.\n                upload_proxy:\n                  type: string\n                  description: The proxy to use while uploading the logs.\n                customer:\n                  type: string\n                  description: The customer name to use when uploading the logs.\n                ticket:\n                  type: string\n                  description: The Zendesk ticket number to use when uploading logs.\n                  minLength: 1\n                  maxLength: 7\n        description: sgcollect_info options\n    delete:\n      responses:\n        '200':\n          description: Job cancelled successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                    default: cancelled\n                    description: The new status of sgcollect_info.\n        '400':\n          $ref: '#/components/responses/request-problem'\n      tags:\n        - Admin\n      summary: Cancel the Sync Gateway Collect Info job\n      description: 'This endpoint is used to cancel a current Sync Gateway Collect Info (sgcollect_info) job that is running. '\n  /_debug/pprof/goroutine:\n    get:\n      responses:\n        '200':\n          description: OK\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n      tags:\n        - Admin\n      summary: Get the goroutine pprof debug file\n    post:\n      responses:\n        '200':\n          description: OK\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n      tags:\n        - Admin\n      summary: Get the goroutine pprof debug file\n  /_debug/pprof/cmdline:\n    get:\n      responses:\n        '200':\n          description: OK\n          content:\n            text/plain:\n              schema:\n                type: string\n      tags:\n        - Admin\n      summary: Get passed in command line parameters\n      description: 'Gets the command line parameters that was passed in to Sync Gateway which will include the binary, flags (if any) and startup configuration.'\n    post:\n      responses:\n        '200':\n          description: OK\n          content:\n            text/plain:\n              schema:\n                type: string\n      description: 'Gets the command line parameters that was passed in to Sync Gateway which will include the binary, flags (if any) and startup configuration.'\n      tags:\n        - Admin\n      summary: Get passed in command line parameters\n  /_debug/pprof/symbol:\n    get:\n      responses:\n        '200':\n          description: OK\n          content:\n            text/plain:\n              schema:\n                type: string\n      tags:\n        - Admin\n      summary: Get symbol pprof debug information\n    post:\n      responses:\n        '200':\n          description: OK\n          content:\n            text/plain:\n              schema:\n                type: string\n      tags:\n        - Admin\n      summary: Get symbol pprof debug information\n  /_debug/pprof/heap:\n    get:\n      responses:\n        '200':\n          description: OK\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n      tags:\n        - Admin\n      summary: Get the heap pprof debug file\n    post:\n      responses:\n        '200':\n          description: OK\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n      tags:\n        - Admin\n      summary: Get the heap pprof debug file\n  /_debug/pprof/profile:\n    get:\n      responses:\n        '200':\n          description: OK\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n      tags:\n        - Admin\n      summary: Get the profile pprof debug file\n    post:\n      responses:\n        '200':\n          description: OK\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n      tags:\n        - Admin\n      summary: Get the profile pprof debug file\n  /_debug/pprof/block:\n    get:\n      responses:\n        '200':\n          description: OK\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTP-Error'\n      tags:\n        - Admin\n      summary: Get the block pprof debug file\n      parameters:\n        - $ref: '#/components/parameters/debug-profile-seconds'\n    post:\n      responses:\n        '200':\n          description: OK\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTP-Error'\n      tags:\n        - Admin\n      summary: Get the block pprof debug file\n      parameters:\n        - $ref: '#/components/parameters/debug-profile-seconds'\n  /_debug/pprof/threadcreate:\n    get:\n      responses:\n        '200':\n          description: OK\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n      tags:\n        - Admin\n      summary: Get the threadcreate pprof debug file\n    post:\n      responses:\n        '200':\n          description: OK\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n      tags:\n        - Admin\n      summary: Get the threadcreate pprof debug file\n  /_debug/pprof/mutex:\n    get:\n      responses:\n        '200':\n          description: OK\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTP-Error'\n      tags:\n        - Admin\n      summary: Get the mutex pprof debug file\n      parameters:\n        - $ref: '#/components/parameters/debug-profile-seconds'\n    post:\n      responses:\n        '200':\n          description: OK\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTP-Error'\n      tags:\n        - Admin\n      summary: Get the mutex pprof debug file\n      parameters:\n        - $ref: '#/components/parameters/debug-profile-seconds'\n  /_debug/pprof/trace:\n    get:\n      responses:\n        '200':\n          description: OK\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n      tags:\n        - Admin\n      summary: Get the trace pprof debug file\n    post:\n      responses:\n        '200':\n          description: OK\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n      tags:\n        - Admin\n      summary: Get the trace pprof debug file\n  /_debug/fgprof:\n    get:\n      responses:\n        '200':\n          description: OK\n          content:\n            application/x-gzip:\n              schema:\n                type: string\n      tags:\n        - Admin\n      summary: Get the fgprof debug profile\n    post:\n      responses:\n        '200':\n          description: OK\n          content:\n            application/x-gzip:\n              schema:\n                type: string\n      tags:\n        - Admin\n      summary: Get the fgprof debug profile\n  /_post_upgrade:\n    post:\n      responses:\n        '200':\n          description: Returned results\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  post_upgrade_results:\n                    type: object\n                    description: A map of databases.\n                    properties:\n                      database_name:\n                        type: object\n                        description: The database name that was targetted.\n                        properties:\n                          removed_design_docs:\n                            type: array\n                            description: The design documents that have or will be removed.\n                            items:\n                              type: string\n                          removed_indexes:\n                            description: The indexes that have or will be removed.\n                            type: array\n                            items:\n                              type: string\n                        required:\n                          - removed_design_docs\n                          - removed_indexes\n                  preview:\n                    type: boolean\n                    description: 'If set, nothing in the database was changed as this was a dry-run. This can be controlled by the `preview` query parameter in the request.'\n                required:\n                  - post_upgrade_results\n      tags:\n        - Admin\n      summary: Run the post upgrade process on all databases\n      parameters:\n        - schema:\n            type: string\n            default: 'false'\n          in: query\n          name: preview\n          description: 'If set, a dry-run will be done to return what would be removed.'\n      description: The post upgrade process involves removing obsolete design documents and indexes when they are no longer needed.\n  '/{db}/_config':\n    get:\n      responses:\n        '200':\n          description: Successfully retrieved database configuration\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Database'\n          headers:\n            Etag:\n              schema:\n                type: string\n              description: The database configuration revision.\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n      summary: Get an existing database configuration\n      parameters:\n        - $ref: '#/components/parameters/redact'\n        - name: include_javascript\n          schema:\n            type: boolean\n            default: 'true'\n          in: query\n          description: 'Include the fields that have Javascript functions in the response. This is the sync function, import filter, document changed event, and database state changed event.'\n        - $ref: '#/components/parameters/include_runtime'\n        - name: refresh_config\n          schema:\n            type: boolean\n            default: 'false'\n          in: query\n          description: Forces the configuration to be loaded out the bucket and applied on the Sync Gateway node..\n      description: Retrieve the full configuration for the database specified.\n    put:\n      responses:\n        '201':\n          $ref: '#/components/responses/DB-config-updated'\n        '400':\n          $ref: '#/components/responses/request-problem'\n        '404':\n          $ref: '#/components/responses/Not-found'\n        '412':\n          description: Precondition Failed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTP-Error'\n      tags:\n        - Admin\n      summary: Replace an existing database configuration\n      description: |-\n        This is used to replace the whole database configuration with a new one. \n\n        The bucket and database name cannot be changed. If these need to be changed, the database will need to be deleted then recreated with the new settings.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Database'\n        description: The new database configuration to use\n      parameters:\n        - name: If-Match\n          schema:\n            type: string\n          in: header\n          description: Database revision to replace. This will cause a HTTP 412 response if it does not match the latest database configuration revision.\n    post:\n      summary: Update an existing database configuration\n      responses:\n        '201':\n          $ref: '#/components/responses/DB-config-updated'\n        '400':\n          $ref: '#/components/responses/request-problem'\n        '404':\n          description: Not Found\n        '412':\n          description: Precondition Failed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTP-Error'\n      description: |-\n        This is used to update the database configuration fields specified. This means that only the fields specified in the request will have their values replaced.\n\n        The bucket and database name cannot be changed. If these need to be changed, the database will need to be deleted then recreated with the new settings.\n      parameters:\n        - $ref: '#/components/parameters/DB-config-If-Match'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Database'\n        description: The database configuration fields to update\n      tags:\n        - Admin\n    parameters:\n      - $ref: '#/components/parameters/db'\n  '/{db}/_config/sync':\n    parameters:\n      - $ref: '#/components/parameters/db'\n    get:\n      responses:\n        '200':\n          description: Successfully retrieved the sync function\n          headers:\n            Etag:\n              schema:\n                type: string\n              description: The database configuration revision.\n          content:\n            application/javascript:\n              schema:\n                type: string\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n      summary: Get the database sync function\n      description: |-\n        This returns the database's sync function that documents are ran through when created.\n\n        Response will be blank if there has been no sync function set.\n    put:\n      responses:\n        '200':\n          description: Updated sync function successfully\n        '400':\n          $ref: '#/components/responses/request-problem'\n        '404':\n          $ref: '#/components/responses/Not-found'\n        '412':\n          description: Precondition Failed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTP-Error'\n      tags:\n        - Admin\n      summary: Replace the database sync function\n      description: This will allow you to update the sync function that documents are ran through on creation.\n      parameters:\n        - $ref: '#/components/parameters/DB-config-If-Match'\n      requestBody:\n        content:\n          application/javascript:\n            schema:\n              type: string\n            examples:\n              Example:\n                value: 'function(doc, oldDoc) { channel(doc.channels); }'\n        description: The new sync function to use\n    delete:\n      responses:\n        '200':\n          description: Successfully reset the sync function\n        '404':\n          $ref: '#/components/responses/Not-found'\n        '412':\n          description: Precondition Failed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTP-Error'\n      tags:\n        - Admin\n      summary: Reset the sync function back to it's default\n      description: |-\n        This will delete the current sync function from the database configuration so that Sync Gateway will instead use the default function.\n\n        The default sync function is: `function(doc){channel(doc.channels);}`.\n      parameters:\n        - $ref: '#/components/parameters/If-Match'\n  '/{db}/_config/import_filter':\n    parameters:\n      - $ref: '#/components/parameters/db'\n    get:\n      responses:\n        '200':\n          description: Successfully retrieved the import filter\n          headers:\n            Etag:\n              schema:\n                type: string\n              description: The database configuration revision.\n          content:\n            application/javascript:\n              schema:\n                type: string\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n      summary: Get the database import filter\n      description: |-\n        This returns the database's import filter that documents are ran through when importing.\n\n        Response will be blank if there has been no import filter set.\n    put:\n      responses:\n        '200':\n          description: Updated import filter successfully\n        '400':\n          $ref: '#/components/responses/request-problem'\n        '404':\n          $ref: '#/components/responses/Not-found'\n        '412':\n          description: Precondition Failed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTP-Error'\n      tags:\n        - Admin\n      summary: Replace the database import filter\n      description: This will allow you to update the import filter that documents are ran through when importing.\n      parameters:\n        - $ref: '#/components/parameters/DB-config-If-Match'\n      requestBody:\n        content:\n          application/javascript:\n            schema:\n              type: string\n        description: The import filter to use\n    delete:\n      responses:\n        '200':\n          description: Successfully deleted the import filter\n        '404':\n          $ref: '#/components/responses/Not-found'\n        '412':\n          description: Precondition Failed\n          content:\n            application/json:\n              schema:\n                type: object\n      tags:\n        - Admin\n      summary: Delete the import filter\n      description: This will delete the current import filter from the database configuration so that Sync Gateway will not filter any documents during import.\n      parameters:\n        - $ref: '#/components/parameters/DB-config-If-Match'\n  '/{db}/_resync':\n    parameters:\n      - $ref: '#/components/parameters/db'\n    get:\n      responses:\n        '200':\n          description: Sucessfully retrieved the most recent resync operation status\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Resync-status'\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n      summary: Get the most recent resync operation details\n      description: This will retrieve the status of last resync operation (whether it is running or not).\n    post:\n      responses:\n        '200':\n          description: Sucessfully changed the status of the resync operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Resync-status'\n        '503':\n          description: Service Unavailable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTP-Error'\n      tags:\n        - Admin\n      description: |\n        This can be used to start or stop a resync operation. A resync operation will cause all documents in the database to be reprocessed through the database sync function. \n\n        Generally, a resync operation might be wanted when the sync function has been modified in such a way that the channel or access mappings for any existing documents would change as a result.\n\n        **action=start**\n        This is an asynchronous operation.\n\n        The `requireUser()` and `requireRole()` calls in the sync function will always return `true`. \n\n        A resync operation cannot be done if the database is online. The database can be taken offline by calling the `POST /{db}/_offline` endpoint.\n\n        **action=stop**\n        This will stop the currently running resync operation.\n      summary: Reprocess all documents through the sync function\n      parameters:\n        - name: action\n          schema:\n            type: string\n            enum:\n              - start\n              - stop\n            default: start\n          in: query\n          description: This is whether to start a new resync job or stop an existing one.\n        - name: regenerate_sequences\n          schema:\n            type: boolean\n          in: query\n          description: '**Use this only when requested to do so by the Couchbase support team** This request will regenerate the sequence numbers for each document processed. It is only carried out on this node. It is not cross-node aware. In a multi-node cluster, the resync operation must only be ran on one node therefore, users should bring other nodes offline before initiating this action. Undefined system behaviour will happen if running resync on more than 1 node.'\n  '/{db}/_purge':\n    parameters:\n      - $ref: '#/components/parameters/db'\n    post:\n      responses:\n        '200':\n          description: 'Attempted documents purge. Check output to verify the documents that were purged. The document IDs will not be listed if they have not been purged (for example, due to no existing).'\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  purged:\n                    type: object\n                    properties:\n                      doc_id:\n                        type: array\n                        items:\n                          type: string\n                required:\n                  - purged\n              examples:\n                Example:\n                  value:\n                    purged:\n                      doc_id:\n                        - '*'\n                Multiple purges example:\n                  value:\n                    purged:\n                      doc_id_1:\n                        - '*'\n                      doc_id_2:\n                        - '*'\n        '400':\n          description: 'Bad request. This could be due to the documents listed in the request body not having the `[\"*\"]` value for each document ID.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTP-Error'\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n      description: |-\n        The purge command provides a way to remove a document from the bucket itself. The operation removes all the revisions (active and tombstones) for the specified document(s). A common usage of this endpoint is to remove tombstone documents that are no longer needed, thus recovering storage space and reducing data replicated to clients. Other clients are not notified when a revision has been purged; so in order to purge a revision from the system it must be done from all databases (on Couchbase Lite and Sync Gateway).\n\n        When convergence is enabled, this endpoint removes the document and its associated extended attributes.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                doc_id:\n                  type: array\n                  description: |-\n                    The document ID to purge. The array must only be 1 element which is `*`.\n\n                    All revisions will be permanently removed for that document.\n                  items:\n                    type: string\n                    enum:\n                      - '*'\n            examples:\n              Example:\n                value:\n                  doc_id:\n                    - '*'\n              Multiple purges example:\n                value:\n                  doc_id_1:\n                    - '*'\n                  doc_id_2:\n                    - '*'\n        description: Purge request body\n      summary: Remove a document from the bucket\n  '/{db}/_flush':\n    parameters:\n      - $ref: '#/components/parameters/db'\n    post:\n      responses:\n        '200':\n          description: Successfully flushed the bucket\n        '404':\n          $ref: '#/components/responses/Not-found'\n        '503':\n          description: The bucket does not support flush or delete\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTP-Error'\n      tags:\n        - Admin\n      summary: Flush the entire database bucket | Unsupported\n      description: |-\n        **This is unsupported**\n        This will remove all documents in the entire bucket that the database uses.\n\n        The bucket will only be flushed if the unsupported database configuration option `enable_couchbase_bucket_flush` is set.\n  '/{db}/_online':\n    parameters:\n      - $ref: '#/components/parameters/db'\n    post:\n      responses:\n        '200':\n          description: Database will be brought online immediately or with the specified delay\n        '404':\n          $ref: '#/components/responses/Not-found'\n        '503':\n          description: An error occurred\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTP-Error'\n      tags:\n        - Admin\n      summary: Bring the database online\n      description: |-\n        This will bring the database online so the Public and full Admin REST API requests can be served.\n\n        Bringing a database online will:\n        * Close the database connection to the backing Couchbase Server bucket.\n        * Reload the database configuration, and connect to the backing Couchbase Server bucket.\n        * Re-establish access to the database from the Public REST API and accept all Admin API requests.\n\n        A specific delay before bringing the database online may be wanted to:\n        * Make the database available for Couchbase Lite clients at a specific time.\n        * Make the databases on several Sync Gateway instances available at the same time.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                delay:\n                  type: integer\n                  description: The amount of seconds to delay bringing the database online.\n                  default: 0\n        description: Add an optional delay to wait before bringing the database online\n  '/{db}/_offline':\n    parameters:\n      - $ref: '#/components/parameters/db'\n    post:\n      responses:\n        '200':\n          description: Database has been taken offline successfully\n        '404':\n          $ref: '#/components/responses/Not-found'\n        '503':\n          description: An error occurred while trying to take the database offline\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTP-Error'\n      tags:\n        - Admin\n      summary: Take the database offline\n      description: |\n        This will take the database offline meaning actions can be taken without distrupting current operations ungracefully or having the restart the Sync Gateway instance. \n\n        This will not take the backing Couchbase Server bucket offline. \n\n        Taking a database offline that is in the progress of coming online will take the database offline after it comes online.\n\n        Taking the database offline will:\n        * Close all active `_changes` feeds for the database.\n        * Reject all access to the database via the Public REST API (returning a 503 Service Unavailable code).\n        * Reject most Admin API requests (by returning a 503 Service Unavailable code). The only endpoints to be available are: the resync endpoints, the configuration endpoints, `DELETE, GET, HEAD /{db}/`, `POST /{db}/_offline`, and `POST /{db}/_online`. \n        * Stops webhook event handlers.\n  '/{db}/_dump/{view}':\n    parameters:\n      - $ref: '#/components/parameters/db'\n      - $ref: '#/components/parameters/view'\n    get:\n      responses:\n        '200':\n          description: Retrieved view successfully\n          content:\n            text/html:\n              schema:\n                type: string\n        '404':\n          $ref: '#/components/responses/Not-found'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTP-Error'\n      tags:\n        - Admin\n      description: |-\n        **This is unsupported**\n        This queries the view and outputs it as HTML.\n      summary: Dump a view | Unsupported\n  '/{db}/_view/{view}':\n    parameters:\n      - $ref: '#/components/parameters/db'\n      - $ref: '#/components/parameters/view'\n    get:\n      responses:\n        '200':\n          description: Returned view successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  total_rows:\n                    type: integer\n                  rows:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        id:\n                          type: string\n                        key:\n                          type: object\n                        value:\n                          type: object\n                        doc:\n                          type: object\n                  errors:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        From:\n                          type: string\n                        Reason:\n                          type: string\n                required:\n                  - total_rows\n                  - rows\n        '403':\n          description: Forbidden\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n        - Public\n      parameters:\n        - name: inclusive_end\n          schema:\n            type: boolean\n          in: query\n          description: Indicates whether the specified end key should be included in the result.\n        - name: descending\n          schema:\n            type: boolean\n          in: query\n          description: Return documents in descending order.\n        - name: include_docs\n          in: query\n          schema:\n            type: boolean\n          description: Only works when using Couchbase Server 3.0 and earlier. Indicates whether to include the full content of the documents in the response.\n        - name: reduce\n          schema:\n            type: boolean\n          in: query\n          description: Whether to execute a reduce function on the response or not.\n        - name: group\n          schema:\n            type: boolean\n          in: query\n          description: Group the results using the reduce function to a group or single row.\n        - name: skip\n          schema:\n            type: integer\n          in: query\n          description: Skip the specified number of documents before starting to return results.\n        - name: limit\n          in: query\n          schema:\n            type: integer\n          description: Return only the specified number of documents\n        - name: group_level\n          schema:\n            type: integer\n          in: query\n          description: Specify the group level to be used.\n        - name: startkey_docid\n          schema:\n            type: string\n          in: query\n          description: Return documents starting with the specified document identifier.\n        - name: endkey_docid\n          schema:\n            type: string\n          in: query\n          description: Stop returning records when the specified document identifier is reached.\n        - name: stale\n          schema:\n            type: string\n            enum:\n              - ok\n              - update_after\n          in: query\n          description: 'Allow the results from a stale view to be used, without triggering a rebuild of all views within the encompassing design document.'\n        - $ref: '#/components/parameters/startkey'\n        - $ref: '#/components/parameters/endkey'\n        - name: key\n          schema:\n            type: string\n          in: query\n          description: Return only the document that matches the specified key.\n        - $ref: '#/components/parameters/keys'\n      description: |-\n        **This is unsupported**\n        Query a view on the default Sync Gateway design document.\n      summary: Query a view on the default design document | Unsupported\n  '/{db}/_dumpchannel/{channel}':\n    parameters:\n      - $ref: '#/components/parameters/db'\n      - name: channel\n        schema:\n          type: string\n        in: path\n        required: true\n        description: The channel to dump all the documents from.\n    get:\n      responses:\n        '200':\n          description: Successfully got all documents in the channel\n          content:\n            text/html:\n              schema:\n                type: string\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n      description: |-\n        **This is unsupported**\n        This queries a channel and displays all the document IDs and revisions that are in that channel.\n      summary: Dump all the documents in a channel | Unsupported\n      parameters:\n        - in: query\n          name: since\n          description: The minimum sequence number to retrieve the documents from.\n          schema:\n            type: integer\n  '/{db}/_repair':\n    parameters:\n      - $ref: '#/components/parameters/db'\n    post:\n      responses:\n        '500':\n          description: This endpoint is disabled\n      tags:\n        - Admin\n      description: This endpoint is disabled.\n      summary: ''\n  /_all_dbs:\n    get:\n      responses:\n        '200':\n          description: Successfully retrieved all database names\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n      tags:\n        - Admin\n      description: This retrieves all the database's names that are in the current Sync Gateway node.\n      summary: Get a list of all the databases\n    head:\n      responses:\n        '200':\n          description: OK\n      tags:\n        - Admin\n  '/{db}/_compact':\n    parameters:\n      - $ref: '#/components/parameters/db'\n    post:\n      responses:\n        '200':\n          description: Started or stopped compact operation successfully\n        '400':\n          $ref: '#/components/responses/request-problem'\n        '404':\n          $ref: '#/components/responses/Not-found'\n        '503':\n          description: Cannot start compaction due to another compaction operation still running.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTP-Error'\n      tags:\n        - Admin\n      parameters:\n        - $ref: '#/components/parameters/compact-type'\n        - schema:\n            type: string\n            default: start\n            enum:\n              - start\n              - stop\n          in: query\n          name: action\n          description: Defines whether the a compact operation is being started or stopped.\n        - schema:\n            type: boolean\n          in: query\n          name: reset\n          description: '**Attachment compaction only**: This forces a fresh compact start instead of trying to resume the previous failed compact operation.'\n        - schema:\n            type: boolean\n          in: query\n          name: dry_run\n          description: '**Attachment compaction only**: This will run through all 3 stages of attachment compact but will not purge any attachments. This can be used to check how many attachments will be purged.'\n      summary: Manage a compact operation\n      description: |-\n        This allows a new compact operation to be done on the database, or to stop an existing running compact operation. \n\n        The type of compaction that is done depends on what the `type` query parameter is set to. The 2 options will:\n        * `tombstone` - purge the JSON bodies of non-leaf revisions. This is known as database compaction. Database compaction is done periodically automatically by the system. JSON bodies of leaf nodes (conflicting branches) are not removed therefore it is imporant to resolve conflicts in order to re-claim disk space.\n        * `attachment` - purge all unlinked/unused legacy (pre 3.0) attachments. If the previous attachment compact operation failed, this will attempt to restart the `compact_id` at the appropiate phase (if possible).\n\n        Both types can each have a maximum of 1 compact operation running at any one point. This means that an attachment compaction can be running at the same time as a tombstone compaction but not 2 tombstone compactions.\n    get:\n      responses:\n        '200':\n          description: Compaction status retrieved successfully\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Compact-status'\n        '400':\n          $ref: '#/components/responses/request-problem'\n        '404':\n          $ref: '#/components/responses/Not-found'\n      tags:\n        - Admin\n      parameters:\n        - $ref: '#/components/parameters/compact-type'\n      summary: Get the status of the most recent compact operation\n      description: This will retrieve the current status of the most recent compact operation.\n  /_metrics:\n    get:\n      responses:\n        '200':\n          description: Successfully returned stats\n          content:\n            text/plain:\n              schema:\n                type: string\n      tags:\n        - Metric\n      summary: Get monitoring statistics in Prometheus format\n      description: |-\n        This returns Sync Gateway statistics and other runtime variables in Prometheus format. \n\n        Generally, this is used for debugging or performance monitoring purposes.\n  /_expvar:\n    get:\n      responses:\n        '200':\n          description: Returned statistics\n      tags:\n        - Admin\n        - Metric\n      summary: Get all Sync Gateway debug statistics\n      description: |-\n        This returns all the statistics of Sync Gateway for debugging purposes.\n\n        This includes per database stats, replication stats, and server stats.\ncomponents:\n  parameters:\n    db:\n      name: db\n      in: path\n      required: true\n      schema:\n        type: string\n      description: The name of the database to run the operation against.\n    newdb:\n      name: newdb\n      in: path\n      required: true\n      schema:\n        type: string\n      description: The name of the new database.\n    docid:\n      name: docid\n      in: path\n      required: true\n      schema:\n        type: string\n      description: The document ID to run the operation against.\n    user-name:\n      name: name\n      in: path\n      required: true\n      schema:\n        type: string\n      description: The name of the user.\n    role-name:\n      name: name\n      in: path\n      required: true\n      schema:\n        type: string\n      description: The name of the role.\n    include_docs:\n      name: include_docs\n      in: query\n      required: false\n      schema:\n        type: string\n      description: Include the body associated with each document.\n    Include-channels:\n      name: channels\n      in: query\n      required: false\n      schema:\n        type: string\n      description: Include the channels each document is part of that the calling user also has access too.\n    include-access:\n      name: access\n      in: query\n      required: false\n      schema:\n        type: string\n      description: Include what user/roles that each document grants access too.\n    include-revs:\n      name: revs\n      in: query\n      required: false\n      schema:\n        type: string\n      description: Include all the revisions for each document under the `_revisions` property.\n    include-seqs:\n      name: update_seq\n      in: query\n      required: false\n      schema:\n        type: string\n      description: Include the document sequence number `update_seq` property for each document.\n    keys:\n      name: keys\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n      description: An array of document ID strings to filter by.\n    provider:\n      name: provider\n      in: query\n      required: false\n      schema:\n        type: string\n      description: 'The OpenID Connect provider to use for authentication.  The list of providers are defined in the Sync Gateway config. If left empty, the default provider will be used.'\n    offline:\n      name: offline\n      in: query\n      required: false\n      schema:\n        type: string\n      description: 'If true, the OpenID Connect provider is requested to confirm with the user the permissions requested and refresh the OIDC token. To do this, access_type=offline and prompt=consent is set on the redirection link.'\n    oidc-code:\n      name: code\n      in: query\n      required: true\n      schema:\n        type: string\n      description: The OpenID Connect authentication code.\n    oidc-state:\n      name: state\n      in: query\n      required: false\n      schema:\n        type: string\n      description: The OpenID Connect state to verify against the state cookie. This is used to prevent cross-site request forgery (CSRF). This is not required if `disable_callback_state=true` for the provider config (NOT recommended).\n    oidc-scope:\n      name: scope\n      in: query\n      required: true\n      schema:\n        type: string\n      description: The OpenID Connect authentication scope.\n    oidc-redirect_uri:\n      name: redirect_uri\n      in: query\n      required: false\n      schema:\n        type: string\n      description: The Sync Gateway OpenID Connect callback URL.\n    rev:\n      name: rev\n      in: query\n      required: false\n      schema:\n        type: string\n      description: The document revision to target.\n    show_exp:\n      name: show_exp\n      in: query\n      required: false\n      schema:\n        type: string\n      description: Whether to show the expiry property (`_exp`) in the response.\n    revs_from:\n      name: revs_from\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n      description: 'Trim the revision history to stop at the first revision in the provided list. If no match is found, the revisions will be trimmed to the `revs_limit`.'\n    atts_since:\n      name: atts_since\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n      description: Include attachments only since specified revisions. Excludes the attachments for the specified revisions. Only gets used if `attachments=true`.\n    revs_limit:\n      name: revs_limit\n      in: query\n      required: false\n      schema:\n        type: integer\n      description: Maximum amount of revisions to return for each document.\n    includeAttachments:\n      name: attachments\n      in: query\n      required: false\n      schema:\n        type: string\n      description: Include attachment bodies in response.\n    replicator2:\n      name: replicator2\n      in: query\n      required: false\n      schema:\n        type: boolean\n      description: Returns the document with the required properties for replication. This is an enterprise-edition only feature.\n    roundtrip:\n      name: roundtrip\n      in: query\n      required: false\n      schema:\n        type: boolean\n      description: Block until document has been received by change cache\n    new_edits:\n      name: new_edits\n      in: query\n      required: false\n      schema:\n        type: boolean\n        default: 'true'\n      description: 'Setting this to false indicates that the request body is an already-existing revision that should be directly inserted into the database, instead of a modification to apply to the current document. This mode is used for replication.  This option must be used in conjunction with the `_revisions` property in the request body.'\n    If-Match:\n      name: If-Match\n      in: header\n      required: false\n      schema:\n        type: string\n      description: The revision ID to target.\n    include_doc:\n      name: include_doc\n      in: query\n      required: false\n      schema:\n        type: string\n      description: Include the body associated with the document.\n    startkey:\n      name: startkey\n      in: query\n      required: false\n      schema:\n        type: string\n      description: Return records starting with the specified key.\n    endkey:\n      name: endkey\n      in: query\n      required: false\n      schema:\n        type: string\n      description: Stop returning records when this key is reached.\n    limit:\n      name: limit\n      in: query\n      required: false\n      schema:\n        type: number\n      description: This limits the number of result rows returned. Using a value of `0` has the same effect as the value `1`.\n    ddoc:\n      name: ddoc\n      in: path\n      required: true\n      schema:\n        type: string\n      description: The design document name.\n    open_revs:\n      name: open_revs\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n      description: 'Option to fetch specified revisions of the document. The value can be all to fetch all leaf revisions or an array of revision numbers (i.e. open_revs=[\"rev1\", “rev2”]). Only leaf revision bodies that haven’t been pruned are guaranteed to be returned. If this option is specified the response will be in multipart format. Use the `Accept: application/json` request header to get the result as a JSON object.'\n    replicationid:\n      name: replicationid\n      in: path\n      required: true\n      schema:\n        type: string\n      description: What replication to target based on it's replication ID.\n    replication-active-only:\n      name: activeOnly\n      in: query\n      required: false\n      schema:\n        type: boolean\n        default: 'false'\n      description: Only return replications that are actively running (`state=running`).\n    replication-local-only:\n      name: localOnly\n      in: query\n      required: false\n      schema:\n        type: boolean\n        default: 'false'\n      description: Only return replications that were started on the current Sync Gateway node.\n    replication-include-error:\n      name: includeError\n      in: query\n      required: false\n      schema:\n        type: boolean\n        default: 'true'\n      description: Include replications that have stopped due to an error (`state=error`).\n    replication-include-config:\n      name: includeConfig\n      in: query\n      required: false\n      schema:\n        type: boolean\n        default: 'false'\n      description: Include the replication configuration with each replicator status in the response.\n    redact:\n      name: redact\n      in: query\n      required: false\n      schema:\n        type: boolean\n        default: 'true'\n      description: No longer supported field.\n    include_runtime:\n      name: include_runtime\n      in: query\n      required: false\n      schema:\n        type: boolean\n        default: 'false'\n      description: Include the default values that Sync Gateway is running with (known as the runtime configuration).\n    DB-config-If-Match:\n      name: If-Match\n      in: header\n      required: false\n      schema:\n        type: string\n        default: The current revision\n      description: Database revision to replace. This will cause a HTTP 412 response if it does not match the latest database configuration revision.\n    compact-type:\n      name: type\n      in: query\n      required: false\n      schema:\n        type: string\n        default: tombstone\n        enum:\n          - attachment\n          - tombstone\n      description: 'This is the type of compaction to use. The type must be either: `attachment` for cleaning up legacy (pre-3.0) attachments, or `tombstone` for purging the JSON bodies of non-leaf revisions.'\n    view:\n      name: view\n      in: path\n      required: true\n      schema:\n        type: string\n      description: The view to target.\n    log-level:\n      name: logLevel\n      in: query\n      required: false\n      schema:\n        type: string\n        enum:\n          - none\n          - error\n          - warn\n          - info\n          - debug\n          - trace\n      description: The is what to set the console log level too.\n    log-level-int:\n      name: level\n      in: query\n      required: false\n      schema:\n        type: integer\n        minimum: 1\n        maximum: 3\n      deprecated: true\n      description: '**Deprecated: use log level instead.** This sets the console log level depending on the value provide. 1 sets to `info`, 2 sets to `warn`, and 3 sets to `error`.'\n    debug-profile-seconds:\n      name: seconds\n      in: query\n      required: false\n      schema:\n        type: integer\n        minimum: 0\n        default: 30\n      description: The amount of seconds to run the profiler for.\n    sessionid:\n      name: sessionid\n      in: path\n      required: true\n      schema:\n        type: string\n      description: The ID of the session to target.\n  responses:\n    Not-found:\n      description: Resource could not be found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTP-Error'\n          examples:\n            Database not found:\n              value:\n                error: not_found\n                reason: no such database \"invalid-db\"\n    Conflict:\n      description: Resource already exists under that name\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTP-Error'\n    User:\n      description: Properties associated with a user\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/User'\n    Role:\n      description: Properties associated with a role\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Role'\n    Invalid-CORS:\n      description: Origin is not in the approved list of allowed origins\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTP-Error'\n    User-session-information:\n      description: Properties associated with a user session\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/User-session-information'\n    OIDC-callback:\n      description: Successfully authenticated with OpenID Connect.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OIDC-callback'\n    OIDC-invalid-provider:\n      description: 'The provider provided is not defined in the Sync Gateway config. If no provided was specified then there is no default provider set. '\n    OIDC-connection:\n      description: Unable to connect and validate with the OpenID Connect provider requested\n    OIDC-test-provider-disabled:\n      description: 'The OpenID Connect unsupported config option `oidc_test_provider` is not enabled. To use this endpoint, this option must be enabled.'\n    OIDC-invalid-scope:\n      description: A validation error occurred with the scope.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTP-Error'\n    OIDC-testing-internal-error:\n      description: An error occurred.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTP-Error'\n    OIDC-token:\n      description: Properties expected back from an OpenID Connect provider after successful authentication\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OIDC-token'\n    OIDC-testing-redirect:\n      description: Redirecting to Sync Gateway OpenID Connect callback URL\n      headers:\n        Location:\n          schema:\n            type: string\n          description: The location to the Sync Gateway OpenID Connect callback URL.\n    invalid-doc-id:\n      description: |-\n        Document ID is not in an allowed format therefore is invalid.\n\n        This could be because it is over 250 characters or is prefixed with an underscore (\"_\").\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTP-Error'\n    New-revision:\n      description: New revision created sucessfully\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/New-revision'\n    request-problem:\n      description: There was a problem with your request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTP-Error'\n    Invalid-content-type:\n      description: Invalid content type\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTP-Error'\n    all-docs:\n      description: Operation ran successfully\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              rows:\n                type: array\n                uniqueItems: true\n                items:\n                  type: object\n                  properties:\n                    key:\n                      type: string\n                    id:\n                      type: string\n                    value:\n                      type: object\n                      properties:\n                        rev:\n                          type: string\n              total_rows:\n                type: number\n              update_seq:\n                type: number\n            required:\n              - rows\n              - total_rows\n              - update_seq\n    changes-feed:\n      description: Successfully returned the changes feed\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Changes-feed'\n    ddoc-forbidden:\n      description: Forbidden access possibly due to not using the Admin API or the design document is a built-in Sync Gateway one.\n    Replicator-created:\n      description: Created new replication successfully\n    Replicator-updated:\n      description: Updated existing configuration successfully\n    DB-config-updated:\n      description: Database configuration successfully updated\n      headers:\n        Etag:\n          schema:\n            type: string\n          description: The new database configuration revision.\n  schemas:\n    User:\n      description: Properties associated with a user\n      type: object\n      title: User\n      properties:\n        name:\n          type: string\n          description: |-\n            The name of the user.\n\n            User names can only have alphanumeric ASCII characters and underscores.\n        password:\n          type: string\n          description: |-\n            The password of the user.\n\n            Mandatory. unless `allow_empty_password` is `true` in the database configs.\n        admin_channels:\n          type: array\n          description: The channels that user is able to access.\n          items:\n            type: string\n        all_channels:\n          type: array\n          description: |-\n            All the channels that the user has been granted access to.\n\n            Access could have been granted through the sync function, roles, or explicitly on the user under the `admin_channels` property.\n          items:\n            type: string\n            readOnly: true\n        email:\n          type: string\n          description: The email address of the user.\n        disabled:\n          type: boolean\n          description: 'If true, the user will not be able to login to the account as it is disabled.'\n        admin_roles:\n          type: array\n          description: The roles the user is assigned to.\n          items:\n            type: string\n        roles:\n          type: array\n          description: The roles that the user is assigned to by the Sync function.\n          items:\n            type: string\n          readOnly: true\n    Role:\n      description: Properties associated with a role\n      type: object\n      title: Role\n      properties:\n        name:\n          type: string\n          description: |-\n            The name of the role.\n\n            Role names can only have alphanumeric ASCII characters and underscores.\n        admin_channels:\n          type: array\n          description: The channels that users in the role are able to access.\n          items:\n            type: string\n        all_channels:\n          type: array\n          description: |-\n            The channels that the role grants access to.\n\n            These channels could have been assigned by the Sync function or using the `admin_channels` property.\n          items:\n            type: string\n            readOnly: true\n    User-session-information:\n      type: object\n      properties:\n        authentication_handlers:\n          type: array\n          description: The ways authentication can be established to authenticate as the user.\n          items:\n            type: string\n        ok:\n          type: boolean\n        userCtx:\n          type: object\n          properties:\n            channels:\n              type: object\n              description: |\n                A map of the channels the user has access to and the sequence number each channel was created at.\n\n                The key is the channel name and the value is the sequence number.\n            name:\n              type: string\n              description: The name of the user.\n              nullable: true\n      title: User Session Information\n    OIDC-callback:\n      type: object\n      title: OpenID Connect callback properties\n      properties:\n        id_token:\n          type: string\n          description: The OpenID Connect ID token\n        refresh_token:\n          type: string\n          description: The OpenID Connect ID refresh token\n        session_id:\n          type: string\n          description: The Sync Gateway session token\n        name:\n          type: string\n          description: The Sync Gateway user\n        access_token:\n          type: string\n          description: The OpenID Connect access token\n        token_type:\n          type: string\n          description: The OpenID Connect ID token type\n        expires_in:\n          type: number\n          description: The time until the id_token expires (TTL).\n    OIDC-token:\n      title: OIDC-token\n      type: object\n      description: Properties expected back from an OpenID Connect provider after successful authentication\n      properties:\n        access_token:\n          type: string\n        token_type:\n          type: string\n        refresh_token:\n          type: string\n        expires_in:\n          type: string\n        id_token:\n          type: string\n    OIDC-login-page-handler:\n      description: Properties passed from the OpenID Connect mock login page to the handler\n      type: object\n      properties:\n        username:\n          type: string\n        tokenttl:\n          type: string\n        identity-token-formats:\n          type: string\n        authenticated:\n          type: string\n      required:\n        - username\n        - tokenttl\n        - identity-token-formats\n        - authenticated\n    Document:\n      description: The configurable Sync Gateway properties of a document.\n      type: object\n      properties:\n        _id:\n          type: string\n          description: The ID of the document.\n        _rev:\n          type: string\n          description: The revision of the document.\n        _exp:\n          type: string\n          description: |-\n            Expiry time after which the document will be purged. The expiration time is set and managed on the Couchbase Server document. The value can be specified in two ways; in ISO-8601 format, for example the 6th of July 2022 at 17:00 in the BST timezone would be `2016-07-06T17:00:00+01:00`; it can also be specified as a numeric Couchbase Server expiry value. Couchbase Server expiries are specified as Unix time, and if the desired TTL is below 30 days then it can also represent an interval in seconds from the current time (for example, a value of 5 will remove the document 5 seconds after it is written to Couchbase Server). The document expiration time is returned in the response of `GET /{db}/{doc} ` when `show_exp=true` is included in the query.\n\n            As with the existing explicit purge mechanism, this applies only to the local database; it has nothing to do with replication. This expiration time is not propagated when the document is replicated. The purge of the document does not cause it to be deleted on any other database.\n        _deleted:\n          type: boolean\n          description: 'Whether the document is a tombstone or not. If true, it is a tombstone.'\n        _revisions:\n          type: object\n          properties:\n            start:\n              type: number\n              description: Prefix number for the latest revision.\n            ids:\n              type: array\n              description: 'Array of valid revision IDs, in reverse order (latest first).'\n              items:\n                type: string\n        _attachments:\n          type: object\n          properties:\n            attachment_name:\n              type: object\n              description: The name of the attachment.\n              properties:\n                content_type:\n                  type: string\n                  description: Content type of the attachment.\n                data:\n                  type: string\n                  description: The data in the attachment in base64.\n    New-revision:\n      title: New-revision\n      type: object\n      description: Properties returned when a new revision is created\n      properties:\n        id:\n          type: string\n          description: The ID of the document.\n        ok:\n          type: boolean\n          description: Wheather the request completed successfully.\n        rev:\n          type: string\n          description: The revision of the document.\n      required:\n        - id\n        - ok\n        - rev\n    Changes-feed:\n      description: Properties of a changes feed\n      type: object\n      properties:\n        results:\n          type: array\n          uniqueItems: true\n          items:\n            type: object\n            properties:\n              seq:\n                type: number\n                description: The change sequence number.\n              id:\n                type: string\n                description: The document ID the change happened on.\n              changes:\n                type: array\n                uniqueItems: true\n                description: List of document leafs with each leaf containing only a `rev` field.\n                items:\n                  type: object\n                  properties:\n                    rev:\n                      type: string\n                      description: The new revision that was caused by that change.\n        last_seq:\n          type: string\n          description: The last change sequence number.\n    Design-doc:\n      description: Properties of a design document\n      type: object\n      properties:\n        language:\n          type: string\n        views:\n          type: object\n          properties:\n            view_name:\n              type: object\n              properties:\n                map:\n                  type: string\n                reduce:\n                  type: string\n        options:\n          type: object\n          properties:\n            local_seq:\n              type: string\n            include_design:\n              type: string\n            raw:\n              type: string\n            index_xattr_on_deleted_docs:\n              type: string\n    HTTP-Error:\n      title: HTTP-Error\n      type: object\n      properties:\n        error:\n          type: string\n        reason:\n          type: string\n          description: The error description.\n      required:\n        - error\n        - reason\n    Retrieved-replication:\n      title: Replication\n      type: object\n      description: Properties of a replication\n      properties:\n        replication_id:\n          type: string\n          description: |-\n            This is the ID of the replication.\n\n            When creating a new replication using a POST request, this will be set to a random UUID if not explicitly set. \n\n            When the replication ID is specified in the URL, this must be set to the same replication ID if specifying it at all.\n        remote:\n          type: string\n          description: |-\n            This is the endpoint of the database for the remote Sync Gateway that is the subject of this replication's `push`, `pull`, or `pushAndPull` action.\n\n            Typically this would include the URI, port, and database name. For example, `http://localhost:4985/db`.\n\n            How this remote is used depends on the `direction` of the replication:\n            * `pull` - this replicator _pulls_ changes from the `remote`\n            * `push` - this replicator _pushes_ changes to this `remote`\n            * `pushAndPull` - this replicator _pushes_ changes to this `remote`, while also pulling recieving changes\n        username:\n          type: string\n          deprecated: true\n          description: |-\n            **This has been deprecated in favour of `remote_username`.**\n\n            This is the username to use to authenticate with the remote.\n\n            This can only be used for a pull replication.\n        password:\n          type: string\n          deprecated: true\n          description: |-\n            **This has been deprecated in favour of `remote_password`.**\n\n            This is the password to use to authenticate with the remote.\n\n            This password will be redacted in the replication config.\n\n            This can only be used for a pull replication.\n        remote_username:\n          type: string\n          description: |-\n            The username to use to authenticate with the remote.\n\n            This can only be used for a pull replication.\n        remote_password:\n          type: string\n          description: |-\n            The password to use to authenticate with the remote.\n\n            This password will be redacted in the replication config.\n\n            This can only be used for a pull replication.\n        direction:\n          type: string\n          enum:\n            - push\n            - pull\n            - pushAndPull\n          description: |-\n            This specifies which direction the replication will be replicating with the `remote` replicator.\n\n            The directions are:\n            * `pull` - changes are pulled from the remote database\n            * `push` - changes are pushed to the remote database\n            * `pushAndPull` - changes are both push-to and pulled-from the remote database\n\n            Replications created prior to Sync Gateway 2.8 derive their `direction` from the source/target URL of the replication.\n        conflict_resolution_type:\n          type: string\n          default: default\n          enum:\n            - default\n            - remoteWins\n            - localWins\n            - custom\n          description: |-\n            This defines what conflict resolution policy Sync Gateway should use to apply when resolving conflicting revisions.\n\n            Changing this is an enterprise-edition only feature.\n\n            **Behavior**\n            * *default* - In priority order, this will cause\n              - Deletes to always win (the delete with the logest revision history wins if both revisions are deletes)\n              - The revision with the longest revision history to win. This means the the revision with the most changes and therefore the highest revision ID will win.\n            * *localWins* - This will result in local revisions always being the winner in any conflict.\n            * *remoteWins* - This will result in remote revisions always being the winner in any conflict.\n            * *custom* - This will result in conflicts going through your own custom conflict resolver. You must provide this logic as a Javascript function in the `custom_conflict_resolver` parameter. This is an enterprise-edition only feature.\n\n\n            Note: replications created prior to Sync Gateway 2.8 will default to `default`.\n        custom_conflict_resolver:\n          type: string\n          default: none\n          description: \"This specifies the Javascript function to use to resolve conflicts between conflicting revisions.\\n \\nThis **must** be used when `conflict_resolution_type=custom`. This property will be ignored when `conflict_resolution_type` is not `custom`.\\n\\nThe Javascript function to provide this property should be in backticks (like the sync function). The function takes 1 parameter which is a struct that represents the conflict. This struct has 2 properties:\\n* `LocalDocument` - The local document. This contains the document ID under the `_id` key.\\n* `RemoteDocument` - The remote document\\nThe function should return the new documents body. This can be the winning revision (for example, `return conflict.LocalDocument`), a new body, or `nil` to resolve as a delete.\\n\\nExample:\\n```\\n\\\"custom_conflict_resolver\\\":\\\\`\\n\\tfunction(conflict) {\\n\\t\\tconsole.log(\\\"Doc ID: \\\"+conflict.LocalDocument._id);\\n\\t\\tconsole.log(\\\"Full remote doc: \\\"+JSON.stringify(conflict.RemoteDocument));\\n\\t\\treturn conflict.RemoteDocument;\\n\\t}\\n\\\\`\\n```\\n\\nUsing complex `custom_conflict_resolver` functions can noticeably degrade performance. Use a built-in resolver whenever possible.\\n\\nThis is an enterprise-edition only feature.\\n\"\n        purge_on_removal:\n          type: boolean\n          default: false\n          description: |-\n            Specifies whether to purge a document if the remote user loses access to all of the channels on the document when attempting to pull it from the remote.\n\n            If false, documents will not be replicated and not be purged when the user loses access.\n        enable_delta_sync:\n          type: boolean\n          default: false\n          description: |-\n            This will turn on delta- sync for the replication. This works in conjunction with the database level setting `delta_sync.enabled`\n\n            If set to true, delta-sync will be used as long as both databases involved in the replication have delta-sync enabled. If a database does not have delta-sync enabled, then the replication will run without delta-sync.\n\n            Replications created prior to Sync Gateway 2.8 must have delta-sync disabled.\n\n            Enabling this is an enterprise-edition only feature.\n        max_backoff_time:\n          type: integer\n          default: 5\n          description: |-\n            Specifies the maximum time-period (in minutes) that Sync Gateway will attempt to reconnect to a lost or unreachable remote.\n\n            When a disconnection happens, Sync Gateway will do an exponential backoff up to this specified value. When this value is met, it will attempt to reconnect indefnitely every `max_backoff_time` minutes.\n\n            If this is set to 0, Sync Gateway will do the normal exponential backoff after the disconnect happens but then attempting 10 minutes and stop the replication.\n\n            Note: this defaults to 5 minutes for replications created prior to Sync Gateway 2.8.\n        initial_state:\n          type: string\n          default: running\n          enum:\n            - running\n            - stopped\n          description: |-\n            This is what state to start the replication in when creating a new replication.\n\n            This allows you to control if the replication starts in a `stopped` start or `running` state.\n\n            Replications prior to Sync Gateway 2.8 will run in the default state `running`.\n        continuous:\n          type: boolean\n          default: false\n          description: |-\n            If true, changes will be immediately synced whewn they happen. This is known as a continuous replication.\n\n            If false, all changes will be synced until they have been processed. The replication will then cease and not process any future changes (unless started again by the user). This is known as a one-shot replication.\n        filter:\n          type: string\n          enum:\n            - sync_gateway/bychannel\n          description: |-\n            This defines whether to filter documents by their channels or not.\n\n            If set to `sync_gateway/bychannel` then a **pull** replication will be limited to a specific set of channels specified by the `query_params.channels` property. \n\n            This only can be used with pull replications.\n        query_params:\n          type: array\n          description: |-\n            This is a set of key/value pairs used in the query string of the replication.\n\n            If `filters=sync_gateway/bychannel` then this can be used to set the channels to filter by in a pull replication. To do this, set the `channels` key to a string array of the channels to filter by. For example:\n            ```\n            \"filter\":\"sync_gateway/bychannel\",\n            \"query_params\": {\n              \"channels\":[\"chanUser1\"]\n            },\n            ```\n          items:\n            type: string\n        cancel:\n          type: boolean\n          description: Unused field\n        adhoc:\n          type: boolean\n          default: false\n          description: |-\n            Set to true to run the replication as an adhoc replication instead of a persistent one. \n\n            This means that the replication will only last the period of the replication until the status is changed to `stopped` and then it will be removed automatically. It will also be removed if Sync Gateway restarts or if removed due to user action.\n        batch_size:\n          type: integer\n          default: 200\n          description: The amount of changes to be sent in one batch of replications. Changing this is an enterprise-edition only feature.\n        run_as:\n          type: string\n          description: This is used if you want to specify a user to run the replication as. This means that the replication will only be able to replicate what the user  access to what the user has access to.\n        assigned_node:\n          type: string\n          description: The unique ID of the node assigned to the replication.\n        target_state:\n          type: string\n          enum:\n            - running\n            - stopped\n            - resetting\n            - error\n            - starting\n            - reconnecting\n          description: This is the state that the replicator is in or that trying to transition in to.\n    Replication:\n      title: User configurable replication properties\n      type: object\n      description: Properties of a replication\n      properties:\n        replication_id:\n          type: string\n          description: |-\n            This is the ID of the replication.\n\n            When creating a new replication using a POST request, this will be set to a random UUID if not explicitly set. \n\n            When the replication ID is specified in the URL, this must be set to the same replication ID if specifying it at all.\n        remote:\n          type: string\n          description: |-\n            This is the endpoint of the database for the remote Sync Gateway that is the subject of this replication's `push`, `pull`, or `pushAndPull` action.\n\n            Typically this would include the URI, port, and database name. For example, `http://localhost:4985/db`.\n\n            How this remote is used depends on the `direction` of the replication:\n            * `pull` - this replicator _pulls_ changes from the `remote`\n            * `push` - this replicator _pushes_ changes to this `remote`\n            * `pushAndPull` - this replicator _pushes_ changes to this `remote`, while also pulling recieving changes\n        username:\n          type: string\n          deprecated: true\n          description: |-\n            **This has been deprecated in favour of `remote_username`.**\n\n            This is the username to use to authenticate with the remote.\n\n            This can only be used for a pull replication.\n        password:\n          type: string\n          deprecated: true\n          description: |-\n            **This has been deprecated in favour of `remote_password`.**\n\n            This is the password to use to authenticate with the remote.\n\n            This password will be redacted in the replication config.\n\n            This can only be used for a pull replication.\n        remote_username:\n          type: string\n          description: |-\n            The username to use to authenticate with the remote.\n\n            This can only be used for a pull replication.\n        remote_password:\n          type: string\n          description: |-\n            The password to use to authenticate with the remote.\n\n            This password will be redacted in the replication config.\n\n            This can only be used for a pull replication.\n        direction:\n          type: string\n          enum:\n            - push\n            - pull\n            - pushAndPull\n          description: |-\n            This specifies which direction the replication will be replicating with the `remote` replicator.\n\n            The directions are:\n            * `pull` - changes are pulled from the remote database\n            * `push` - changes are pushed to the remote database\n            * `pushAndPull` - changes are both push-to and pulled-from the remote database\n\n            Replications created prior to Sync Gateway 2.8 derive their `direction` from the source/target URL of the replication.\n        conflict_resolution_type:\n          type: string\n          default: default\n          enum:\n            - default\n            - remoteWins\n            - localWins\n            - custom\n          description: |-\n            This defines what conflict resolution policy Sync Gateway should use to apply when resolving conflicting revisions.\n\n            Changing this is an enterprise-edition only feature.\n\n            **Behavior**\n            * *default* - In priority order, this will cause\n              - Deletes to always win (the delete with the logest revision history wins if both revisions are deletes)\n              - The revision with the longest revision history to win. This means the the revision with the most changes and therefore the highest revision ID will win.\n            * *localWins* - This will result in local revisions always being the winner in any conflict.\n            * *remoteWins* - This will result in remote revisions always being the winner in any conflict.\n            * *custom* - This will result in conflicts going through your own custom conflict resolver. You must provide this logic as a Javascript function in the `custom_conflict_resolver` parameter. This is an enterprise-edition only feature.\n\n\n            Note: replications created prior to Sync Gateway 2.8 will default to `default`.\n        custom_conflict_resolver:\n          type: string\n          default: none\n          description: \"This specifies the Javascript function to use to resolve conflicts between conflicting revisions.\\n \\nThis **must** be used when `conflict_resolution_type=custom`. This property will be ignored when `conflict_resolution_type` is not `custom`.\\n\\nThe Javascript function to provide this property should be in backticks (like the sync function). The function takes 1 parameter which is a struct that represents the conflict. This struct has 2 properties:\\n* `LocalDocument` - The local document. This contains the document ID under the `_id` key.\\n* `RemoteDocument` - The remote document\\nThe function should return the new documents body. This can be the winning revision (for example, `return conflict.LocalDocument`), a new body, or `nil` to resolve as a delete.\\n\\nExample:\\n```\\n\\\"custom_conflict_resolver\\\":\\\\`\\n\\tfunction(conflict) {\\n\\t\\tconsole.log(\\\"Doc ID: \\\"+conflict.LocalDocument._id);\\n\\t\\tconsole.log(\\\"Full remote doc: \\\"+JSON.stringify(conflict.RemoteDocument));\\n\\t\\treturn conflict.RemoteDocument;\\n\\t}\\n\\\\`\\n```\\n\\nUsing complex `custom_conflict_resolver` functions can noticeably degrade performance. Use a built-in resolver whenever possible.\\n\\nThis is an enterprise-edition only feature.\\n\"\n        purge_on_removal:\n          type: boolean\n          default: false\n          description: |-\n            Specifies whether to purge a document if the remote user loses access to all of the channels on the document when attempting to pull it from the remote.\n\n            If false, documents will not be replicated and not be purged when the user loses access.\n        enable_delta_sync:\n          type: boolean\n          default: false\n          description: |-\n            This will turn on delta- sync for the replication. This works in conjunction with the database level setting `delta_sync.enabled`\n\n            If set to true, delta-sync will be used as long as both databases involved in the replication have delta-sync enabled. If a database does not have delta-sync enabled, then the replication will run without delta-sync.\n\n            Replications created prior to Sync Gateway 2.8 must have delta-sync disabled.\n\n            Enabling this is an enterprise-edition only feature.\n        max_backoff_time:\n          type: integer\n          default: 5\n          description: |-\n            Specifies the maximum time-period (in minutes) that Sync Gateway will attempt to reconnect to a lost or unreachable remote.\n\n            When a disconnection happens, Sync Gateway will do an exponential backoff up to this specified value. When this value is met, it will attempt to reconnect indefnitely every `max_backoff_time` minutes.\n\n            If this is set to 0, Sync Gateway will do the normal exponential backoff after the disconnect happens but then attempting 10 minutes and stop the replication.\n\n            Note: this defaults to 5 minutes for replications created prior to Sync Gateway 2.8.\n        initial_state:\n          type: string\n          default: running\n          enum:\n            - running\n            - stopped\n          description: |-\n            This is what state to start the replication in when creating a new replication.\n\n            This allows you to control if the replication starts in a `stopped` start or `running` state.\n\n            Replications prior to Sync Gateway 2.8 will run in the default state `running`.\n        continuous:\n          type: boolean\n          default: false\n          description: |-\n            If true, changes will be immediately synced whewn they happen. This is known as a continuous replication.\n\n            If false, all changes will be synced until they have been processed. The replication will then cease and not process any future changes (unless started again by the user). This is known as a one-shot replication.\n        filter:\n          type: string\n          enum:\n            - sync_gateway/bychannel\n          description: |-\n            This defines whether to filter documents by their channels or not.\n\n            If set to `sync_gateway/bychannel` then a **pull** replication will be limited to a specific set of channels specified by the `query_params.channels` property. \n\n            This only can be used with pull replications.\n        query_params:\n          type: array\n          description: |-\n            This is a set of key/value pairs used in the query string of the replication.\n\n            If `filters=sync_gateway/bychannel` then this can be used to set the channels to filter by in a pull replication. To do this, set the `channels` key to a string array of the channels to filter by. For example:\n            ```\n            \"filter\":\"sync_gateway/bychannel\",\n            \"query_params\": {\n              \"channels\":[\"chanUser1\"]\n            },\n            ```\n          items:\n            type: string\n        cancel:\n          type: boolean\n          description: Unused field\n        adhoc:\n          type: boolean\n          default: false\n          description: |-\n            Set to true to run the replication as an adhoc replication instead of a persistent one. \n\n            This means that the replication will only last the period of the replication until the status is changed to `stopped` and then it will be removed automatically. It will also be removed if Sync Gateway restarts or if removed due to user action.\n        batch_size:\n          type: integer\n          default: 200\n          description: The amount of changes to be sent in one batch of replications. Changing this is an enterprise-edition only feature.\n        run_as:\n          type: string\n          description: This is used if you want to specify a user to run the replication as. This means that the replication will only be able to replicate what the user  access to what the user has access to.\n      required:\n        - direction\n    All-replications:\n      title: All-replications\n      type: object\n      description: Contains all the replication IDs with their corresponding replication configurations\n      properties:\n        replication_id:\n          $ref: '#/components/schemas/Retrieved-replication'\n    Replication-status:\n      title: Replication-status\n      type: object\n      properties:\n        replication_id:\n          type: string\n          description: The ID of the replication.\n        config:\n          $ref: '#/components/schemas/Replication'\n        status:\n          type: string\n          description: The status of the replication.\n          enum:\n            - stopped\n            - running\n            - reconnecting\n            - resetting\n            - error\n            - starting\n        error_message:\n          type: string\n          description: The error message of the replication if an error has occurred.\n        docs_read:\n          type: integer\n          description: The number of documents that have been read (fetched) from the source database.\n        docs_checked_pull:\n          type: integer\n        docs_purged:\n          type: integer\n          description: The number of documents that have been purged.\n        rejected_by_local:\n          type: integer\n          description: The number of documents that were received by the local but did not get replicated due to getting rejected by the sync function on the local.\n        last_seq_pull:\n          type: string\n          description: The last changes sequence number that was pulled from the remote.\n        deltas_recv:\n          type: integer\n          description: The number of deltas that have been receieved from the remote.\n        deltas_requested:\n          type: integer\n        docs_written:\n          type: integer\n          description: The number of documents that have been wrote (pushed) to the target database.\n        docs_checked_push:\n          type: integer\n        docs_write_failures:\n          type: integer\n          description: The number of documents that have failed to be wrote (pushed) to the target database. There will be no attempt to try to push these docs again.\n        docs_write_conflicts:\n          type: integer\n          description: The number of documents that had a conflict.\n        rejected_by_remote:\n          type: integer\n          description: The number of documents that were received by the remote but did not get replicated due to getting rejected by the sync function on the remote.\n        last_seq_push:\n          type: string\n          description: The last changes sequence number that was pushed to the remote.\n        deltas_sent:\n          type: integer\n          description: 'The number of deltas that have been sent to the remote. '\n      required:\n        - replication_id\n    Database:\n      title: Database-config\n      type: object\n      description: The properties of a database configuration.\n      properties:\n        server:\n          type: string\n          description: 'This is the Couchbase Server address or addresses that the database connect to. '\n        pool:\n          type: string\n          deprecated: true\n          description: Couchbase pool name. Always forced to be `default` due to deprecation.\n        bucket:\n          type: string\n          description: The Couchbase Server backing bucket for the database.\n          default: The database name\n        username:\n          type: string\n          description: The username for authenticating to the server.\n        password:\n          type: string\n          description: The password for authenticating to the server.\n        certpath:\n          type: string\n          description: The cert path (public key) for X.509 bucket auth.\n        keypath:\n          type: string\n          description: The key path (private key) for X.509 bucket auth\n        cacertpath:\n          type: string\n          description: The root CA cert path for X.509 bucket authentication.\n        kv_tls_port:\n          type: integer\n          default: 11207\n          description: The Memcached TLS port.\n        max_concurrent_query_ops:\n          type: integer\n          description: The maximum amount of query operations that can be running at any one point.\n          default: 1000\n        name:\n          type: string\n          description: The name of the database.\n        sync:\n          type: string\n          description: The Javascript function that newly created documents are ran through.\n          default: 'function(doc){channel(doc.channels);}'\n        users:\n          $ref: '#/components/schemas/User'\n        roles:\n          $ref: '#/components/schemas/Role'\n        revs_limit:\n          type: number\n          description: |-\n            The maximum depth a document's revision tree can grow too.\n\n            The minimum is `20` if conflicts are allowed and 0 if not. It is not recommended to go below `100` when conflicts are allowed.\n          default: 100 if conflict allowed and 50 if not\n          minimum: 0\n        import_docs:\n          type: boolean\n          description: |-\n            If true, documents will be imported in to Sync Gateway from the bucket when requested. Documents will be ran through the set `import_filter` if any is set.\n\n            The default value depends on the edition of Sync Gateway being used. If the edition is the community-edition, then this will default to `false` or else in the enterprise-edition, it will default to `true`.\n\n            This can also be set to the string `continuous` which maps to true.\n        import_partitions:\n          type: number\n          description: |-\n            ** This is an enterprise-edition feature only**\n            This is how many import partitions should be used for import sharding. \n\n            Partitions are distributed among all Sync Gateway nodes participating in import processing (`import_docs=true`), and each process a subset of the server’s vbuckets.\n\n            Each partition is processed by an independant function that runs simultaneously to others, so `import_partitions` can be used to tune concurrency based on the number of Sync Gateway nodes, and the number of cores per node.\n          default: 16\n        import_filter:\n          type: string\n          description: |-\n            This is the function that all imported documents are ran through in order to filter out what to import and what not to import. This allows you to control what is made available to Couchbase Mobile clients. If it is not set, then no documents are filtered when imported.\n\n            `import_docs` must be true to make this field applicable.\n          example: 'function(doc) { if (doc.type != ''mobile'') { return false; } return true; }'\n        import_backup_old_rev:\n          type: boolean\n          description: This controls whether import should attempt to create a temporary backup of the previous revision body (if available) when the document is modified in the bucket.\n          default: false\n        event_handlers:\n          type: object\n          description: These are the settings for webhooks.\n          properties:\n            max_processes:\n              type: string\n              description: The maximum amount of concurrent event handling independant functions that can be running at the same time.\n            wait_for_process:\n              type: string\n              description: The maximum amount of time (in milliseconds) to wait when the even queue is full.\n            document_changed:\n              $ref: '#/components/schemas/Event-config'\n            db_state_changed:\n              $ref: '#/components/schemas/Event-config'\n        feed_type:\n          type: string\n          description: |-\n            The type of feed to use to communicate with Couchbase Server.\n\n            Import cannot be used with a TAP feed.\n          default: Based on Couchbase Server version\n          enum:\n            - TAP\n            - DCP\n        allow_empty_password:\n          type: boolean\n          default: false\n          description: This controls whether users that are created can have an empty password or not.\n        cache:\n          type: object\n          properties:\n            rev_cache:\n              type: object\n              description: The revision cache config settings.\n              properties:\n                size:\n                  type: string\n                  description: The maximum number of revisions that can be stored in the revision cache.\n                  default: 5000\n                shard_count:\n                  type: string\n                  description: The number of shards the revision cache should be split into.\n                  default: 16\n            channel_cache:\n              type: object\n              description: The channel cache config settings.\n              properties:\n                max_number:\n                  type: integer\n                  description: The maximum number of channel caches which can exist at any one point.\n                  default: 50000\n                compact_high_watermark_pct:\n                  type: integer\n                  description: |-\n                    The trigger value for starting the channel cache eviction process. \n\n                    Specify this as a percentage which will be the percentage used on `max_number).\n\n                    When the cache size, determined by `max_number`, reaches the high watermark, the eviction process iterates through the cache, removing inactive channels.\n                  default: 80\n                compact_low_watermark_pct:\n                  type: integer\n                  default: 60\n                  description: |-\n                    The trigger value for stopping the channel cache eviction process. \n\n                    Specify this as a percentage which will be the percentage used on `max_number).\n\n                    When the cache size, determined by `max_number` returns to a value lower than the percentage of it set here, the cache eviction process is stopped.\n                max_wait_pending:\n                  type: number\n                  description: The maximum time (in milliseconds) for waiting for a pending sequence before skipping it.\n                  default: 5000\n                max_num_pending:\n                  type: integer\n                  description: The maximum number of pending sequences before skipping sequences.\n                  default: 10000\n                max_wait_skipped:\n                  type: number\n                  description: The maximum amount of time (in milliseconds) to wait for a skipped sequence before abandoning it.\n                  default: 3600000\n                enable_star_channel:\n                  type: boolean\n                  description: Used to control whether Sync Gateway should use the all documents (*) channel.\n                  default: false\n                max_length:\n                  type: integer\n                  description: The maximum number of entries to maintain in the cache per channel.\n                  default: 500\n                min_length:\n                  type: integer\n                  description: The minimum number of entries to maintain in the cache per channel.\n                  default: 50\n                expiry_seconds:\n                  type: integer\n                  description: The amount of time (in seconds) to keep entries in the cache beyond the minimum retained.\n                  default: 60\n                query_limit:\n                  type: integer\n                  description: |-\n                    **Deprecated in favour of the database setting `query_pagination_limit`**\n                    The limit used for channel queries.\n                  deprecated: true\n                  default: 5000\n            max_wait_pending:\n              type: number\n              deprecated: true\n              description: |-\n                **Deprecated, please use the database setting `cache.channel_cache.max_wait_pending` instead**\n                The maximum time (in milliseconds) for waiting for a pending sequence before skipping it.\n            max_wait_skipped:\n              type: number\n              deprecated: true\n              description: |-\n                **Deprecated, please use the database setting `cache.channel_cache.max_wait_skipped` instead**\n                The maximum time (in milliseconds) for waiting for pending sequences before skipping.\n            enable_star_channel:\n              type: boolean\n              deprecated: true\n              description: |-\n                **Deprecated, please use the database setting `cache.channel_cache.enable_star_channel` instead**\n                Used to control whether Sync Gateway should use the all documents (*) channel.\n            channel_cache_max_length:\n              type: number\n              deprecated: true\n              description: |-\n                **Deprecated, please use the database setting `cache.channel_cache.max_length` instead**\n                The maximum number of entries maintained in cache per channel.\n            channel_cache_min_length:\n              type: integer\n              deprecated: true\n              description: |-\n                **Deprecated, please use the database setting `cache.channel_cache.min_length` instead**\n                The minimum number of entries maintained in cache per channel.\n            channel_cache_expiry:\n              type: integer\n              deprecated: true\n              description: |-\n                **Deprecated, please use the database setting `cache.channel_cache.expiry_seconds` instead**\n                The time (seconds) to keep entries in cache beyond the minimum retained.\n            max_num_pending:\n              type: integer\n              deprecated: true\n              description: |-\n                **Deprecated, please use the database setting `cache.channel_cache.max_num_pending` instead**\n                The max number of pending sequences before skipping.\n        rev_cache_size:\n          type: number\n          deprecated: true\n          description: |-\n            **Deprecated, please use the database setting `cache.rev_cache.size` instead**\n            The maximum number of revisions to store in the revision cache.\n        offline:\n          type: boolean\n          default: false\n          description: Start the database in an offline state.\n        unsupported:\n          type: object\n          description: These are unsupported options and therfore it is not recommended to use them.\n          properties:\n            user_views:\n              type: object\n              properties:\n                enabled:\n                  type: boolean\n                  description: Whether pass-through view query is supported through public API.\n            oidc_test_provider:\n              type: object\n              properties:\n                enabled:\n                  type: boolean\n                  description: Whether the `oidc_test_provider` endpoints should be exposed on the public API.\n            api_endpoints:\n              type: object\n              properties:\n                enable_couchbase_bucket_flush:\n                  type: boolean\n                  description: |-\n                    **Setting for test purposes only**\n                    Whether Couchbase buckets can be flushed via Admin REST API.\n            warning_thresholds:\n              type: object\n              properties:\n                xattr_size_bytes:\n                  type: number\n                  description: The number of bytes to be used as a threshold for xattr size limit warnings.\n                channels_per_doc:\n                  type: number\n                  description: The number of channels per document to be used as a threshold for the channel count warnings.\n                access_and_role_grants_per_doc:\n                  type: number\n                  description: The number of access and role grants per document to be used as a threshold for grant count warnings.\n                channels_per_user:\n                  type: number\n                  description: The number of channels per user to be used as a threshold for channel count warnings.\n                channel_name_size:\n                  type: number\n                  description: The number of channel name characters to be used as a threshold for channel name warnings.\n            disable_clean_skipped_query:\n              type: boolean\n              description: Whether to clean skipped sequence processing to bypass final checks.\n            oidc_tls_skip_verify:\n              type: boolean\n              description: Enable self-signed certificates for OIDC testing.\n            sgr_tls_skip_verify:\n              type: boolean\n              description: Enable self-signed certificates for SG-replicate testing.\n            remote_config_tls_skip_verify:\n              type: boolean\n              description: Enable self-signed certificates for external JavaScript load.\n        oidc:\n          type: object\n          description: Configuration for OpenID Connect authentication.\n          properties:\n            providers:\n              type: object\n              description: List of OpenID Connect issuers.\n              properties:\n                provider_name:\n                  type: object\n                  description: The providers name.\n                  properties:\n                    issuer:\n                      type: string\n                      description: The URL for the OpenID Connect issuer.\n                    register:\n                      type: boolean\n                      description: If to register a new Sync Gateway user account when a user logs in with OpenID Connect.\n                    client_id:\n                      type: string\n                      description: The OpenID Connect provider client ID.\n                    validation_key:\n                      type: string\n                      description: The OpenID Connect provider client secret.\n                    callback_url:\n                      type: string\n                      description: |-\n                        The URL that the OpenID Connect will redirect to after authentication.\n\n                        If not provided, a callback URL will be generated.\n                    disable_session:\n                      type: boolean\n                      description: Disable Sync Gateway session creation on successful OpenID Connect authentication.\n                    scope:\n                      type: array\n                      description: The scope sent for the OpenID Connect request.\n                      items:\n                        type: string\n                    include_access:\n                      type: boolean\n                      description: 'This is whether the `_oidc_callback` response should include the OpenID Connect access token and associated fields (such as `token_type`, and `expires_in`).'\n                    user_prefix:\n                      type: string\n                      description: This is the username prefix for all users created through this provider.\n                    discovery_url:\n                      type: string\n                      description: The non-standard discovery endpoint.\n                    disable_cfg_validation:\n                      type: boolean\n                      description: This bypasses the configuration validation based on the OpenID Connect specifications. This may be required for some OpenID providers that don't strictly adhere to the specifications.\n                      default: false\n                    disable_callback_state:\n                      type: boolean\n                      description: |-\n                        Controls whether to maintain state between the auth request and callback endpoints (`/_oidc` and `/_oidc_callback`).\n\n                        **This is not recommended as it would cause OpenID Connect authentication to be vulnerable to Cross-Site Request Forgery (CSRF, XSRF).**\n                      default: false\n                    username_claim:\n                      type: string\n                      description: |-\n                        Allows a different OpenID Connect field to be specified instead of the Subject (`sub`).\n\n                        The field name to use can be specified here.\n                    allow_unsigned_provider_tokens:\n                      type: boolean\n                      description: Allows users accept unsigned tokens from providers.\n                    IsDefault:\n                      type: boolean\n                      description: Indicates if this is the default OpenID Connect provider.\n                    Name:\n                      type: string\n                      description: The name of the OpenID Connect Provider.\n                    InsecureSkipVerify:\n                      type: boolean\n                      description: 'Determines whether the TLS certificate verification should be disabled for this provider. '\n                      default: false\n            default_provider:\n              type: string\n              description: The default provider to use when the provider is not specified in the client.\n        old_rev_expiry_seconds:\n          type: number\n          description: The number of seconds before old revisions are removed from the Couchbase Server bucket.\n          default: 300\n        view_query_timeout_secs:\n          type: integer\n          description: The number of seconds before a view query should timeout.\n          default: 75\n        local_doc_expiry_secs:\n          type: integer\n          description: The number of seconds before a `_local` document should expire.\n          default: 7776000\n        enable_shared_bucket_access:\n          type: boolean\n          description: Whether to use extended attributes to store Sync Gateway document (`_sync`) metadata.\n          default: true\n        session_cookie_secure:\n          type: boolean\n          description: |-\n            Override the session cookie `secure` flag. If set, the cookie will have the `secure` flag.\n\n            This will default to `true` if startup config `api.https.tls_cert_path` is set otherwise it will default to `false`.\n        session_cookie_name:\n          type: string\n          description: This can be used to define a custom per-database session cookie name.\n        session_cookie_http_only:\n          type: boolean\n          description: Make all session cookies for the database set the `HttpOnly` flag so they are inaccessible to JavaScript.\n          default: false\n        allow_conflicts:\n          type: boolean\n          default: true\n          deprecated: true\n          description: This controls whether to allow conflicting document revisions.\n        num_index_replicas:\n          type: number\n          description: This is the number of Global Secondary Indexes (GSI) to use for core indexes.\n          default: 1\n        use_views:\n          type: boolean\n          description: Force the use of views instead of GSI.\n          default: false\n        send_www_authentice_header:\n          type: boolean\n          description: Controls whether to send a `WWW-Authenticate` header in `401 Unauthorized` HTTP responses.\n          default: true\n        bucket_op_timeout_ms:\n          type: number\n          description: 'This is the amount of milliseconds should pass before a bucket operation times out. An error will be returned if the bucket operation times out saying: `operation timed out`.'\n        slow_query_warning_threshold:\n          type: number\n          description: 'The amount of milliseconds a N1QL query should run before logging a warning. '\n          default: 500\n        delta_sync:\n          type: object\n          description: |-\n            Delta sync configuration settings.\n\n            **This is an enterprise-edition feature only**\n          properties:\n            enabled:\n              type: boolean\n              description: |-\n                Whether delta sync is enabled.\n\n                **This is an enterprise-edition feature only**\n              default: false\n            rev_max_age_seconds:\n              type: number\n              description: |-\n                The number of seconds deltas for old revisions are available for.\n\n                This defaults to 24 hours (in seconds).\n              default: 86400\n        compact_interval_days:\n          type: number\n          description: |-\n            The interval between scheduled tombstone compaction runs (in days). This can be a floating point number.\n\n            If set to 0, compaction will not run automatically.\n          default: 1\n        sgreplicate_enabled:\n          type: boolean\n          default: true\n          description: Whether the node should accept assign replications (`true`) or not (`false`).\n        sgreplicate_websocket_heartbeat_secs:\n          type: integer\n          description: Use a custom heartbeat interval (in seconds) for websocket ping frames.\n          default: 300\n        replications:\n          type: object\n          properties:\n            replication_id:\n              $ref: '#/components/schemas/Replication'\n        serve_insecure_attachment_types:\n          type: boolean\n          description: |\n            If set, always serve attachments with the `Content-Type` header set to the type of the attachment.\n\n            When serving an attachment, usually the `Content-Type` header is set to the type of the attachment but the `Content-Disposition` response header will be set instead if the content type is vulnerable to a phishing attack, causing the browser to download the file instead of display it. This option will override that behaviour and always set the `Content-Type` header.\n          default: false\n        query_pagination_limit:\n          type: integer\n          description: The query limit to be used during pagination of large queries.\n          default: 5000\n        user_xattr_key:\n          type: string\n          description: 'The key to use for the user xattr that will be accessible from the sync function. IF empty, the feature will be disabled.'\n        client_partition_window_secs:\n          type: integer\n          description: |-\n            How long (in seconds) clients can remain offline for without losing replication metadata.\n\n            Defaults to 30 days (in seconds)\n          default: 2592000\n        guest:\n          $ref: '#/components/schemas/User'\n    Event-config:\n      title: Event-config\n      type: object\n      properties:\n        handler:\n          type: string\n          description: The handler type.\n          enum:\n            - webhook\n        url:\n          type: string\n          description: The URL of the webhook.\n        filter:\n          type: string\n          description: The Javascript function to use to filter the webhook events.\n        timeout:\n          type: number\n          description: The amount of time (in seconds) to attempt connect to the webhook before giving up.\n        options:\n          type: object\n          description: The options for the event.\n          properties:\n            option_name:\n              description: The option key and value.\n    Resync-status:\n      title: Resync-status\n      type: object\n      properties:\n        status:\n          type: string\n          description: The status of the current operation.\n          enum:\n            - running\n            - completed\n            - stopping\n            - stopped\n            - error\n        start_time:\n          type: string\n          description: The ISO-8601 date and time the resync operation was started.\n        last_error:\n          type: string\n          description: The last error that occurred in the resync operation (if any).\n        docs_changed:\n          type: integer\n          description: The amount of documents that have been changed as a result of the resync operation.\n        docs_processed:\n          type: integer\n          description: The amount of docs that have been processed so far in the resync operation.\n      required:\n        - status\n        - start_time\n        - last_error\n        - docs_changed\n        - docs_processed\n      description: The status of a resync operation\n    Compact-status:\n      title: Compact-status\n      type: object\n      description: The status returned from a compaction.\n      properties:\n        status:\n          type: string\n          description: The status of the current operation.\n        start_time:\n          type: string\n          description: The ISO-8601 date and time the compact operation was started.\n        last_error:\n          type: string\n          description: The last error that occurred in the compact operation (if any).\n        docs_purged:\n          type: string\n          description: |-\n            **Applicable to tombstone compaction only**\n            This is the amount of documents that have been purged so far.\n        marked_attachments:\n          type: string\n          description: |-\n            **Applicable to attachment compaction only**\n            This is the amount of attachments that have been marked to be purged.\n        purged_attachments:\n          type: string\n          description: |-\n            **Applicable to attachment compaction only**\n            This is the amount of attachments that have been purged so far.\n        compact_id:\n          type: string\n          description: |-\n            **Applicable to attachment compaction only**\n            This is the ID of the compaction.\n        phase:\n          type: string\n          description: |-\n            **Applicable to attachment compaction only**\n            This indicates the current phase of running attachment compact processes.\n\n            For failed processes, this indicates the phase at which a compact_id restart will commence (where relevant).\n        dry_run:\n          type: string\n          description: |\n            **Applicable to attachment compaction only**\n          enum:\n            - mark\n            - sweep\n            - cleanup\n      required:\n        - status\n        - start_time\n        - last_error\n    Startup-config:\n      title: Startup-config\n      type: object\n      properties:\n        bootstrap:\n          type: object\n          description: Configuration settings for interacting with Couchbase Server.\n          properties:\n            group_id:\n              type: string\n              description: The config group ID to use when discovering databases. Allows for non-homogenous configuration.\n              default: default\n            config_update_frequency:\n              type: string\n              description: |-\n                How often to poll Couchbase Server for new config changes.\n\n                This is a duration and therefore can be provided with units \"h\", \"m\", \"s\", \"ms\", \"us\", and \"ns\". For example, 5 hours, 20 minutes, and 30 seconds would be `5h20m30s`.\n              default: 10s\n            server:\n              type: string\n              description: Couchbase Server connection string/URL.\n            username:\n              type: string\n              description: Username for authenticating to server.\n            password:\n              type: string\n              description: Password for authenticating to server\n            ca_cert_path:\n              type: string\n              description: Root CA cert path for TLS connection\n            server_tls_skip_verify:\n              type: boolean\n              description: Allow empty server CA Cert Path without attempting to use system root pool\n              default: false\n            x509_cert_path:\n              type: string\n              description: Cert path (public key) for X.509 bucket auth\n            x509_key_path:\n              type: string\n              description: Key path (private key) for X.509 bucket auth\n            use_tls_server:\n              type: boolean\n              description: Enforces a secure or non-secure server scheme\n              default: true\n          required:\n            - server\n            - username\n            - password\n        api:\n          type: object\n          description: Configuration settings for modifying how the REST API is interacted with.\n          properties:\n            public_interface:\n              type: string\n              description: Network interface to bind public API to\n              default: ':4984'\n            admin_interface:\n              type: string\n              description: |-\n                Network interface to bind admin API to.\n\n                By default, this will only be accessible to the localhost.\n              default: '127.0.0.1:4985'\n            metric_interface:\n              type: string\n              description: |-\n                Network interface to bind metrics API to.\n\n                By default, this will only be accessible to the localhost.\n              default: '127.0.0.1:4986'\n            profile_interface:\n              type: string\n              description: Network interface to bind profiling API to\n            admin_interface_authentication:\n              type: boolean\n              description: Whether the admin API requires authentication\n              default: true\n            metrics_interface_authentication:\n              type: boolean\n              description: Whether the metrics API requires authentication\n              default: true\n            enable_advanced_auth_dp:\n              type: boolean\n              description: |-\n                Whether to enable the DP permissions check feature of admin auth.\n\n                Defaults to `true` if using enterprise-edition or `false` if using community-edition.\n            server_read_timeout:\n              type: string\n              description: |-\n                Maximum duration.Second before timing out read of the HTTP(S) request.\n\n                This is a duration and therefore can be provided with units \"h\", \"m\", \"s\", \"ms\", \"us\", and \"ns\". For example, 5 hours, 20 minutes, and 30 seconds would be `5h20m30s`.\n            server_write_timeout:\n              type: string\n              description: |-\n                Maximum duration.Second before timing out write of the HTTP(S) response.\n\n                This is a duration and therefore can be provided with units \"h\", \"m\", \"s\", \"ms\", \"us\", and \"ns\". For example, 5 hours, 20 minutes, and 30 seconds would be `5h20m30s`.\n            read_header_timeout:\n              type: string\n              description: |-\n                The amount of time allowed to read request headers.\n\n                This is a duration and therefore can be provided with units \"h\", \"m\", \"s\", \"ms\", \"us\", and \"ns\". For example, 5 hours, 20 minutes, and 30 seconds would be `5h20m30s`.\n              default: 5s\n            idle_timeout:\n              type: string\n              description: |-\n                The maximum amount of time to wait for the next request when keep-alives are enabled.\n\n                This is a duration and therefore can be provided with units \"h\", \"m\", \"s\", \"ms\", \"us\", and \"ns\". For example, 5 hours, 20 minutes, and 30 seconds would be `5h20m30s`.\n              default: 90s\n            pretty:\n              type: boolean\n              description: Pretty-print JSON responses\n            max_connections:\n              type: number\n              description: 'Max # of incoming HTTP connections to accept'\n              default: 0\n            compress_responses:\n              type: boolean\n              description: 'If false, disables compression of HTTP responses'\n              default: true\n            hide_product_version:\n              type: boolean\n              description: Whether product versions removed from Server headers and REST API responses\n            https:\n              type: object\n              properties:\n                tls_minimum_version:\n                  type: string\n                  description: The minimum allowable TLS version for the REST APIs\n                  default: tlsv1.2\n                tls_cert_path:\n                  type: string\n                  description: The TLS cert file to use for the REST APIs\n                tls_key_path:\n                  type: string\n                  description: The TLS key file to use for the REST APIs\n            cors:\n              type: object\n              properties:\n                origin:\n                  type: array\n                  description: 'List of allowed origins, use [''*''] to allow access from everywhere'\n                  items:\n                    type: string\n                login_origin:\n                  type: array\n                  description: List of allowed login origins\n                  items:\n                    type: string\n                headers:\n                  type: array\n                  description: List of allowed headers\n                  items:\n                    type: string\n                max_age:\n                  type: integer\n                  description: Maximum age of the CORS Options request\n        logging:\n          type: object\n          description: The configuration settings for moddifying Sync Gateway logging.\n          properties:\n            log_file_path:\n              type: string\n              description: Absolute or relative path on the filesystem to the log file directory. A relative path is from the directory that contains the Sync Gateway executable file.\n            redaction_level:\n              type: string\n              description: Redaction level to apply to log output.\n              enum:\n                - none\n                - partial\n                - full\n                - unset\n              default: partial\n            console:\n              $ref: '#/components/schemas/Console-logging-config'\n            error:\n              $ref: '#/components/schemas/File-logging-config'\n            warn:\n              $ref: '#/components/schemas/File-logging-config'\n            info:\n              $ref: '#/components/schemas/File-logging-config'\n            debug:\n              $ref: '#/components/schemas/File-logging-config'\n            trace:\n              $ref: '#/components/schemas/File-logging-config'\n            stats:\n              $ref: '#/components/schemas/File-logging-config'\n        auth:\n          type: object\n          properties:\n            bcrypt_cost:\n              type: integer\n              default: 10\n              maximum: 31\n              minimum: 10\n              description: Cost to use for bcrypt password hashes\n        replicator:\n          type: object\n          properties:\n            max_heartbeat:\n              type: string\n              description: |-\n                Max heartbeat value for `_changes` request.\n\n                This is a duration and therefore can be provided with units \"h\", \"m\", \"s\", \"ms\", \"us\", and \"ns\". For example, 5 hours, 20 minutes, and 30 seconds would be `5h20m30s`.\n            blip_compression:\n              type: integer\n              description: BLIP data compression level (0-9)\n              minimum: 0\n              maximum: 9\n        unsupported:\n          type: object\n          description: Settings that are not officially supported. It is highly recommended these are **not** used.\n          properties:\n            stats_log_frequency:\n              type: string\n              description: |-\n                How often should stats be written to stats logs.\n\n                This is a duration and therefore can be provided with units \"h\", \"m\", \"s\", \"ms\", \"us\", and \"ns\". For example, 5 hours, 20 minutes, and 30 seconds would be `5h20m30s`.\n              default: 1m\n            use_stdlib_json:\n              type: boolean\n              description: Bypass the jsoniter package and use Go's stdlib instead\n            http2:\n              type: object\n              properties:\n                enabled:\n                  type: boolean\n                  description: Whether HTTP2 support is enabled\n        database_credentials:\n          description: 'A map of database name to credentials, that can be used instead of the bootstrap ones.'\n          type: object\n          properties:\n            database_name:\n              type: object\n              properties:\n                username:\n                  type: string\n                  description: Username for authenticating to the bucket\n                password:\n                  type: string\n                  description: Password for authenticating to the bucket\n                x509_cert_path:\n                  type: string\n                  description: Cert path (public key) for X.509 bucket auth\n                x509_key_path:\n                  type: string\n                  description: Key path (private key) for X.509 bucket auth\n        max_file_descriptors:\n          type: number\n          description: 'Max # of open file descriptors (RLIMIT_NOFILE)'\n          minimum: 0\n          default: 5000\n        couchbase_keepalive_interval:\n          description: TCP keep-alive interval between SG and Couchbase server\n          type: integer\n    File-logging-config:\n      title: File-logging-config\n      type: object\n      properties:\n        enabled:\n          type: boolean\n          description: Toggle for this log output\n        rotation:\n          $ref: '#/components/schemas/Log-rotation-config'\n        collation_buffer_size:\n          type: integer\n          description: The size of the log collation buffer\n    Log-rotation-config:\n      title: Log-rotation-config\n      type: object\n      properties:\n        max_size:\n          type: integer\n          description: The maximum size in MB of the log file before it gets rotated.\n        max_age:\n          type: integer\n          description: The maximum number of days to retain old log files.\n        localtime:\n          type: boolean\n          description: 'If true, it uses the computer''s local time to format the backup timestamp.'\n        rotated_logs_size:\n          type: integer\n          description: Max Size (in mb) of log files before deletion\n    Console-logging-config:\n      title: Console-logging-config\n      type: object\n      properties:\n        log_level:\n          type: string\n          description: Log Level for the console output\n          default: none\n          enum:\n            - none\n            - error\n            - warn\n            - info\n            - debug\n            - trace\n        log_keys:\n          type: array\n          description: Log Keys for the console output\n          items:\n            type: string\n        color_enabled:\n          type: boolean\n          description: Log with color for the console output\n        file_output:\n          type: string\n          description: 'Override the default stderr output, and write to the file specified instead'\n        enabled:\n          type: boolean\n          description: Toggle for this log output\n        rotation:\n          $ref: '#/components/schemas/Log-rotation-config'\n        collation_buffer_size:\n          type: integer\n          description: The size of the log collation buffer.\n    Log-update-enabled:\n      title: Log-update-enabled\n      type: object\n      properties:\n        enabled:\n          type: boolean\n          description: 'If set, this log level will be outputted.'\n    Status:\n      title: Status\n      type: object\n      properties:\n        databases:\n          type: object\n          description: Map of the databases in the node.\n          properties:\n            database_name:\n              type: object\n              properties:\n                seq:\n                  type: number\n                  minimum: 0\n                  description: The latest sequence number in the database.\n                server_uuid:\n                  type: string\n                  description: The server unique identifier.\n                state:\n                  type: string\n                  enum:\n                    - Online\n                    - Offline\n                  description: Whether the database is online or offline.\n                replication_status:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Replication-status'\n                cluster:\n                  type: object\n                  properties:\n                    replication:\n                      type: object\n                      description: Map of replication configs defined for the cluster.\n                      properties:\n                        replication_id:\n                          $ref: '#/components/schemas/Retrieved-replication'\n                    nodes:\n                      type: object\n                      description: Map of all Sync Gateway nodes in the cluster.\n                      properties:\n                        node_uuid:\n                          type: object\n                          description: The nodes unique identifier.\n                          properties:\n                            uuid:\n                              type: string\n                              description: The nodes unique identifier.\n                            host:\n                              type: string\n                              description: The nodes host name.\n        version:\n          type: string\n          description: |-\n            The product version including the build number and edition (ie. `EE` or `CE`).\n\n            Blank if `api.hide_product_version=true` in the startup configuration.\n    Vendor:\n      title: Vendor\n      type: object\n      properties:\n        name:\n          type: string\n          default: Couchbase Sync Gateway\n          description: The product name.\n        version:\n          type: string\n          description: |-\n            The product version.\n\n            Blank if `api.hide_product_version=true` in the startup configuration.\n      required:\n        - name\n  requestBodies:\n    User:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/User'\n      description: Properties associated with a user\n    Role:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Role'\n      description: Properties associated with a role\n    OIDC-login-page-handler:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OIDC-login-page-handler'\n      description: Properties passed from the OpenID Connect mock login page to the handler\n    Doc-body:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Document'\n      description: Properties of a document\n    Replication-upsert:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Replication'\n      description: If the `replication_id` matches an existing replication then the existing configuration will be updated. Only the specified fields in the request will be used to update the existing configuration. Unspecified fields will remain untouched.\n    Profile:\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              file:\n                type: string\n                description: This is the file to output the pprof profile at.\n"
		}
	},
	"Error": "parse: parse spec: paths: /{db}/{docid}/{attach}: get: operation \"\": parameters: parse parameter \"content_encoding\": schema: parse default: expected type \"boolean\", got \"string\""
}