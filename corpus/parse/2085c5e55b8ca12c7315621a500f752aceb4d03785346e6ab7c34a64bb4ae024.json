{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi/gotowebinar/openapi.yml",
			"byteSize": 120275,
			"content": "openapi: 3.0.0\ninfo:\n  title: GoToWebinar 2.0 REST API\n  description: |\n    This is a generated connector for [GoToWebinar API v2.0](https://developer.goto.com/GoToWebinarV2) OpenAPI specification.  \n    The GoToWebinar API provides the capability to schedule webinars and customize webinars with panelists, polls, questions and surveys.\n  x-ballerina-init-description: |\n    The connector initialization requires setting the API credentials. \n    Create a [LogMeIn account](https://accounts.logme.in/registration.aspx) and obtain tokens by following [this guide](https://developer.goto.com/guides/HowTos/02_HOW_createClient/).\n  x-ballerina-display:\n    label: GoTo Webinar\n    iconPath: \"icon.png\"\n  version: 2.0.0\ntags:\n  - name: Webinars\n    description: Operations available for webinars of a given organizer.\n  - name: Co-organizers\n    description: Operations available for co-organizers of a given webinar.\n  - name: Panelists\n    description: Operations available for panelists of a given webinar.\n  - name: Registrants\n    description: Operations available for registrants of a given webinar.\n  - name: Sessions\n    description: Operations available for sessions of a given webinar.\n  - name: Attendees\n    description: Operations available for attendees of a given webinar session.\n  - name: RecordingAssets\n    description: Operations available for assets of a given organizer.\n  - name: Webhooks\n    description: APIs available for management of a webhooks.\n\nsecurity:\n  - OAuth2: []\n  - Bearer: []\n\npaths:\n  '/accounts/{accountKey}/webinars':\n    get:\n      tags:\n        - Webinars\n      operationId: getAllAccountWebinars\n      summary: 'Get all webinars for an account'\n      description: \u003e\n        Retrieves the list of webinars for an account within a given date range.\n        `Page` and `size` parameters are optional. Default `page` is\n        0 and default `size` is 20.\n      parameters:\n        - $ref: '#/components/parameters/accountKey'\n        - $ref: '#/components/parameters/requiredFromTime'\n        - $ref: '#/components/parameters/requiredToTime'\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/size'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReportingWebinarsResponse'\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  '/organizers/{organizerKey}/sessions':\n    get:\n      tags:\n        - Sessions\n      operationId: getOrganizerSessions\n      summary: 'Get organizer sessions'\n      description: Retrieve all completed sessions of all the webinars of a given organizer.\n      parameters:\n        - $ref: '#/components/parameters/organizerKey'\n        - $ref: '#/components/parameters/requiredFromTime'\n        - $ref: '#/components/parameters/requiredToTime'\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/size'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReportingSessionsResponse'\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n  '/organizers/{organizerKey}/webinars':\n    get:\n      tags:\n        - Webinars\n      operationId: getWebinars\n      summary: 'Get Webinars'\n      description: Returns upcoming and past webinars for the currently authenticated\n        organizer that are scheduled within the specified date/time range.\n        `Page` and `size` parameters are optional. Default `page` is\n        0 and default `size` is 20. Maximum `size` is 200.\n      parameters:\n        - $ref: '#/components/parameters/organizerKey'\n        - $ref: '#/components/parameters/requiredFromTime'\n        - $ref: '#/components/parameters/requiredToTime'\n        - $ref: '#/components/parameters/page'\n        - name: size\n          in: query\n          required: false\n          description: The size of the page.\n          schema:\n            type: integer\n            format: int64\n            maximum: 200\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReportingWebinarsResponse'\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n    post:\n      tags:\n        - Webinars\n      operationId: createWebinar\n      summary: 'Create webinar'\n      description: \u003e\n        Creates a single session webinar, a sequence of webinars or a series of webinars depending on the type field in the body:\n         * `\"type\": \"single_session\"` creates a single webinar session\n         * `\"type\": \"sequence\"` creates a webinar with multiple meeting times where attendees are expected to be the same for\n        all sessions\n         * `\"type\": \"series\"` creates a webinar with multiple meetings times where attendees choose only one to attend\n\n        The default, if no type is declared, is `\"single_session\"`.\n\n         A sequence webinar requires a `\"recurrenceStart\"` object consisting of a `\"startTime\"` and `\"endTime\"` key\n          for the first webinar of the sequence, a `\"recurrencePattern\"` of \"daily\",\n          \"weekly\", \"monthly\", and a `\"recurrenceEnd\"` which is the last date of the sequence (for example, 2016-12-01).\n\n         A series webinar requires a `\"times\"`\n          array with a discrete `\"startTime\"` and `\"endTime\"` for each webinar in the\n          series.\n\n         The call requires a webinar subject and description. The \"isPasswordProtected\" sets whether the webinar requires a password for\n          attendees to join. If set to True, the organizer must go to Registration Settings at My Webinars (https://global.gotowebinar.com/webinars.tmpl)\n          and add the password to the webinar, and send the password to the registrants. The response provides a numeric webinarKey in string format\n          for the new webinar. Once a webinar has been created with this method,you can accept registrations.\n      parameters:\n        - $ref: '#/components/parameters/organizerKey'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WebinarReqCreate'\n        description: The webinar details\n        required: true\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreatedWebinar'\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n  '/organizers/{organizerKey}/insessionWebinars':\n    get:\n      tags:\n        - Webinars\n      operationId: getInSessionWebinars\n      summary: 'Get All Insession Webinars'\n      description: \u003e\n        Returns all insession webinars for the currently authenticated organizer\n        that are scheduled within the specified date/time range. All inession\n        webinars are returned in case no date/time range is provided.\n      parameters:\n        - $ref: '#/components/parameters/organizerKey'\n        - $ref: '#/components/parameters/optionalFromTime'\n        - $ref: '#/components/parameters/optionalToTime'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/BrokerWebinar'\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n  '/organizers/{organizerKey}/webinars/{webinarKey}':\n    get:\n      tags:\n        - Webinars\n      operationId: getWebinar\n      summary: Get webinar\n      description: \u003e\n        Retrieve information on a specific webinar. If the type of the webinar\n        is 'sequence', a sequence of future times will be provided. Webinars of\n        type 'series' are treated the same as normal webinars - each session in\n        the webinar series has a different webinarKey. If an organizer cancels a\n        webinar, then a request to get that webinar would return a '404 Not\n        Found' error.\n      parameters:\n        - $ref: '#/components/parameters/organizerKey'\n        - $ref: '#/components/parameters/webinarKey'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WebinarByKey'\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n    put:\n      tags:\n        - Webinars\n      operationId: updateWebinar\n      summary: 'Update webinar'\n      description: \u003e\n        Updates a webinar. The call requires at least one of the parameters in\n        the request body. The request completely replaces the existing session,\n        series, or sequence and so must include the full definition of each as\n        for the Create call. Set notifyParticipants=true to send update emails\n        to registrants.\n      parameters:\n        - $ref: '#/components/parameters/organizerKey'\n        - $ref: '#/components/parameters/webinarKey'\n        - name: notifyParticipants\n          in: query\n          description: Defines whether to send notifications to participants\n          required: false\n          schema:\n            type: boolean\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WebinarReqUpdate'\n        description: The webinar details\n        required: true\n      responses:\n        '202':\n          description: Accepted\n        '400':\n          description: Bad Request (times not valid, webinar in progress, webinar ended,\n            etc.)\n        '403':\n          description: Forbidden\n    delete:\n      tags:\n        - Webinars\n      operationId: cancelWebinar\n      summary: Cancel webinar\n      description: \u003e\n        Cancels a specific webinar. If the webinar is a series or sequence, this\n        call deletes all scheduled sessions. To send cancellation emails to\n        registrants set sendCancellationEmails=true in the request. When the\n        cancellation emails are sent, the default generated message is used in\n        the cancellation email body.\n      parameters:\n        - $ref: '#/components/parameters/organizerKey'\n        - $ref: '#/components/parameters/webinarKey'\n        - name: sendCancellationEmails\n          in: query\n          description: Indicates whether cancellation notice emails should be sent. The\n            default value is false\n          required: false\n          schema:\n            type: boolean\n      responses:\n        '204':\n          description: No Content\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '405':\n          description: Method Not Allowed (Webinar is in the past)\n        '409':\n          description: Conflict (Webinar is in session)\n  '/organizers/{organizerKey}/webinars/{webinarKey}/attendees':\n    get:\n      tags:\n        - Webinars\n      operationId: getAttendeesForAllWebinarSessions\n      summary: 'Get attendees for all webinar sessions'\n      description: Returns all attendees for all sessions of the specified webinar.\n      parameters:\n        - $ref: '#/components/parameters/organizerKey'\n        - $ref: '#/components/parameters/webinarKey'\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/size'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReportingAttendeeResponse'\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  '/organizers/{organizerKey}/webinars/{webinarKey}/coorganizers':\n    get:\n      tags:\n        - Co-organizers\n      operationId: getCoorganizers\n      summary: 'Get co-organizers'\n      description: \u003e\n        Returns the co-organizers for the specified webinar. The original\n        organizer who created the webinar is filtered out of the list. If the\n        webinar has no co-organizers, an empty array is returned. Co-organizers\n        that do not have a GoToWebinar account are returned as external\n        co-organizers. For those organizers no surname is returned.\n      parameters:\n        - $ref: '#/components/parameters/organizerKey'\n        - $ref: '#/components/parameters/webinarKey'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Coorganizer'\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n    post:\n      tags:\n        - Co-organizers\n      operationId: createCoorganizers\n      summary: 'Create co-organizers'\n      description: \u003e\n        Creates co-organizers for the specified webinar. For co-organizers that\n        have a GoToWebinar account you have to set the parameter 'external' to\n        'false'. In this case you have to pass the parameter 'organizerKey'\n        only. For co-organizers that have no GoToWebinar account you have to set\n        the parameter 'external' to 'true'. In this case you have to pass the\n        parameters 'givenName' and 'email'. Since there is no parameter for\n        'surname' you should pass first and last name to the parameter\n        'givenName'.\n      parameters:\n        - $ref: '#/components/parameters/organizerKey'\n        - $ref: '#/components/parameters/webinarKey'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/CoorganizerReqCreate'\n        description: The co-organizer details\n        required: true\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Coorganizer'\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  '/organizers/{organizerKey}/webinars/{webinarKey}/coorganizers/{coorganizerKey}':\n    delete:\n      tags:\n        - Co-organizers\n      operationId: deleteCoorganizer\n      summary: 'Delete co-organizer'\n      description: \u003e\n        Deletes an internal co-organizer specified by the coorganizerKey (memberKey).\n      parameters:\n        - $ref: '#/components/parameters/organizerKey'\n        - $ref: '#/components/parameters/webinarKey'\n        - $ref: '#/components/parameters/coorganizerKey'\n        - name: external\n          in: query\n          description: \u003e\n            By default only internal co-organizers (with a GoToWebinar account)\n            can be deleted. If you want to use this call for external\n            co-organizers you have to set this parameter to 'true'.\n          required: false\n          schema:\n            type: boolean\n      responses:\n        '204':\n          description: No Content (Co-organizer was deleted)\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  '/organizers/{organizerKey}/webinars/{webinarKey}/coorganizers/{coorganizerKey}/resendInvitation':\n    post:\n      tags:\n        - Co-organizers\n      operationId: resendCoorganizerInvitation\n      summary: 'Resend invitation'\n      description: Resends an invitation email to the specified co-organizer\n      parameters:\n        - $ref: '#/components/parameters/organizerKey'\n        - $ref: '#/components/parameters/webinarKey'\n        - $ref: '#/components/parameters/coorganizerKey'\n        - name: external\n          in: query\n          description: \u003e\n            By default only internal co-organizers (with a GoToWebinar account)\n            will retrieve the resent invitation email. If you want to use this\n            call for external co-organizers you have to set this parameter to\n            'true'.\n          required: false\n          schema:\n            type: boolean\n      responses:\n        '204':\n          description: No Content (Invitation email was sent)\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  '/organizers/{organizerKey}/webinars/{webinarKey}/meetingtimes':\n    get:\n      tags:\n        - Webinars\n      operationId: getWebinarMeetingTimes\n      summary: 'Get webinar meeting times'\n      description: Retrieves the meeting times for a webinar.\n      parameters:\n        - $ref: '#/components/parameters/organizerKey'\n        - $ref: '#/components/parameters/webinarKey'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DateTimeRange'\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  '/organizers/{organizerKey}/webinars/{webinarKey}/panelists':\n    get:\n      tags:\n        - Panelists\n      operationId: getPanelists\n      summary: 'Get webinar panelists'\n      description: Retrieves all the panelists for a specific webinar.\n      parameters:\n        - $ref: '#/components/parameters/organizerKey'\n        - $ref: '#/components/parameters/webinarKey'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Panelist'\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n    post:\n      tags:\n        - Panelists\n      operationId: createPanelists\n      summary: 'Create Panelists'\n      description: Create panelists for a specified webinar\n      parameters:\n        - $ref: '#/components/parameters/organizerKey'\n        - $ref: '#/components/parameters/webinarKey'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/PanelistReqCreate'\n        description: Array of panelists\n        required: true\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CreatedPanelist'\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  '/organizers/{organizerKey}/webinars/{webinarKey}/audio':\n    get:\n      tags:\n        - Webinars\n      operationId: getAudioInformation\n      summary: 'Get audio information'\n      description: Retrieves the audio/conferencing information for a specific webinar.\n      parameters:\n        - $ref: '#/components/parameters/organizerKey'\n        - $ref: '#/components/parameters/webinarKey'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Audio'\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n    post:\n      tags:\n        - Webinars\n      operationId: updateAudioInformation\n      summary: 'Update audio information'\n      description: Updates the audio/conferencing settings for a specific webinar\n      parameters:\n        - $ref: '#/components/parameters/organizerKey'\n        - $ref: '#/components/parameters/webinarKey'\n        - name: notifyParticipants\n          in: query\n          description: Defines whether to send notifications to participants\n          required: false\n          schema:\n            type: boolean\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AudioUpdate'\n        description: The audio/conferencing settings\n        required: true\n      responses:\n        '204':\n          description: No Content\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  '/organizers/{organizerKey}/webinars/{webinarKey}/performance':\n    get:\n      tags:\n        - Webinars\n      operationId: getPerformanceForAllWebinarSessions\n      summary: 'Get performance for all webinar sessions'\n      description: Gets performance details for all sessions of a specific webinar.\n      parameters:\n        - $ref: '#/components/parameters/organizerKey'\n        - $ref: '#/components/parameters/webinarKey'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                description: Describes performance details for webinars\n                type: object\n                additionalProperties:\n                  $ref: '#/components/schemas/SessionPerformance'\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  '/webinars/{webinarKey}/startUrl':\n    get:\n      tags:\n        - Webinars\n      operationId: getStartUrl\n      summary: Webinar start url\n      description: \u003e\n        Retrieves a URL that can be used to start a webinar. When this URL is\n        opened in a web browser, the GoToWebinar client will be downloaded,\n        launched and the webinar will start after the organizer logs in with its\n        credentials.\n      parameters:\n        - $ref: '#/components/parameters/webinarKey'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WebinarStartUrlResponse'\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  '/webinars/{webinarKey}/copy':\n    put:\n      tags:\n        - Webinars\n      operationId: copyWebinar\n      summary: 'Copy a webinar'\n      description: |\n        Copy webinar is created with new webinar key, based on source webinar key provided in URL. Only the organizer and co-organizer of given webinar can copy a webinar.\n\n        ### Example Interaction with curl\n\n        Below is the minimum request to make a request, default type is single_session.\n\n        ```\n        curl --request PUT 'https://api.getgo.com/G2W/rest/v2/webinars/{webinarKey}/copy' \\\n        --header 'Authorization: Bearer {ACCESS_TOKEN}' \\\n        --header 'Content-Type: application/json' \\\n        --data-raw '{\n            \"subject\": \"My Webinar\",\n            \"times\": [\n                {\n                    \"startTime\": \"2021-02-20T07:30:00.000Z\",\n                    \"endTime\": \"2021-02-20T07:40:00.000Z\"\n                }\n            ]\n        }'\n\n        ```\n\n        Below is a request for when the parent webinar is SIMULIVE\n\n        ```\n        curl --request PUT 'https://api.getgo.com/G2W/rest/v2/webinars/{webinarKey}/copy' \\\n        --header 'Authorization: Bearer {ACCESS_TOKEN}' \\\n        --header 'Content-Type: application/json' \\\n        --data-raw '{\n            \"subject\": \"My Webinar\",\n            \"recordingAssetKey\": \"string\",\n            \"isOndemand\": true,\n            \"type\": \"single_session\",\n            \"times\": [\n                {\n                    \"startTime\": \"2021-10-22T07:30:00.000Z\",\n                    \"endTime\": \"2021-10-22T08:30:00.000Z\"\n                }\n            ]\n        }'\n\n        ```\n\n        Below request is when the parent webinar is CLASSIC or BROADCAST.\n\n        ```\n        curl --request PUT 'https://api.getgo.com/G2W/rest/v2/webinars/{webinarKey}/copy' \\\n        --header 'Authorization: Bearer {ACCESS_TOKEN}' \\\n        --header 'Content-Type: application/json' \\\n        --data-raw '{\n            \"subject\": \"My Webinar\",\n            \"times\": [\n                {\n                    \"startTime\": \"2021-02-20T07:30:00.000Z\",\n                    \"endTime\": \"2021-02-20T07:40:00.000Z\"\n                }\n            ],\n            \"emailSettings\": {\n                \"confirmationEmail\": {\n                    \"enabled\": true\n                },\n                \"reminderEmail\": {\n                    \"enabled\": true\n                },\n                \"absenteeFollowUpEmail\": {\n                    \"enabled\": true\n                },\n                \"attendeeFollowUpEmail\": {\n                    \"enabled\": true,\n                    \"includeCertificate\": true\n                }\n            }\n        }'\n\n        ```\n      parameters:\n        - $ref: '#/components/parameters/sourceWebinarKey'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CopyWebinar'\n        description: Provide a webinar details to be copied\n        required: true\n      responses:\n        '201':\n          description: Copied\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CopiedWebinar'\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n\n  '/organizers/{organizerKey}/webinars/{webinarKey}/registrants':\n    post:\n      tags:\n        - Registrants\n      operationId: createRegistrant\n      summary: 'Create registrant'\n      description: \u003e\n        Register an attendee for a scheduled webinar. The response contains the\n        registrantKey and join URL for the registrant. An email will be sent to\n        the registrant unless the organizer turns off the confirmation email\n        setting from the GoToWebinar website. Please note that you must provide\n        all required fields including custom fields defined during the webinar\n        creation. Use the API call 'Get registration fields' to get a list of\n        all fields, if they are required, and their possible values. At this\n        time there are two versions of the 'Create Registrant' call. The first\n        version only accepts firstName, lastName, and email and ignores all\n        other fields. If you have custom fields or want to capture additional\n        information this version won't work for you. The second version allows\n        you to pass all required and optional fields, including custom fields\n        defined when creating the webinar. To use the second version you must\n        pass the Accept header value as 'application/json' instead of\n        'application/vnd.citrix.g2wapi-v1.1+json.\n      parameters:\n        - $ref: '#/components/parameters/organizerKey'\n        - $ref: '#/components/parameters/webinarKey'\n        - name: Accept\n          in: header\n          description: \u003e\n            Set to 'application/json' to make a registration using fields\n            (custom or default) additional to the basic ones or set it to\n            'application/vnd.citrix.g2wapi-v1.1+json' for just basic\n            fields(firstName, lastName, and email).\n          required: false\n          schema:\n            type: string\n        - name: resendConfirmation\n          in: query\n          description: Indicates whether the confirmation email should be resent when a\n            registrant is re-registered. The default value is false.\n          required: false\n          schema:\n            type: boolean\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegistrantFields'\n        description: The registrant details. To get all possible values run the API call\n          'Get registration fields' which is also part of this documentation.\n        required: true\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RegistrantCreated'\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '409':\n          description: The user is already registered\n    get:\n      tags:\n        - Registrants\n      operationId: getAllRegistrantsForWebinar\n      summary: 'Get registrants'\n      description: \u003e\n        Retrieve registration details for all registrants of a specific webinar.\n        Registrant details will not include all fields captured when creating\n        the registrant. To see all data, use the API call 'Get Registrant'.\n        Registrants can have one of the following states;\n        WAITING -\n        registrant registered and is awaiting approval (where organizer has\n        required approval),\n        APPROVED - registrant registered and is\n        approved, and\n        DENIED - registrant registered and was denied.\n      parameters:\n        - $ref: '#/components/parameters/organizerKey'\n        - $ref: '#/components/parameters/webinarKey'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Registrant'\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  '/organizers/{organizerKey}/webinars/{webinarKey}/registrants/{registrantKey}':\n    delete:\n      tags:\n        - Registrants\n      operationId: deleteRegistrant\n      summary: 'Delete registrant'\n      description: Removes a webinar registrant from current registrations for the\n        specified webinar. The webinar must be a scheduled, future webinar.\n      parameters:\n        - $ref: '#/components/parameters/organizerKey'\n        - $ref: '#/components/parameters/webinarKey'\n        - $ref: '#/components/parameters/registrantKey'\n      responses:\n        '204':\n          description: No content\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n    get:\n      tags:\n        - Registrants\n      operationId: getRegistrant\n      summary: 'Get registrant'\n      description: Retrieve registration details for a specific registrant.\n      parameters:\n        - $ref: '#/components/parameters/organizerKey'\n        - $ref: '#/components/parameters/webinarKey'\n        - $ref: '#/components/parameters/registrantKey'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RegistrantDetailed'\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  '/organizers/{organizerKey}/webinars/{webinarKey}/registrants/fields':\n    get:\n      tags:\n        - Registrants\n      operationId: getRegistrationFields\n      summary: 'Get registration fields'\n      description: Retrieve required, optional registration, and custom questions for a\n        specified webinar.\n      parameters:\n        - $ref: '#/components/parameters/organizerKey'\n        - $ref: '#/components/parameters/webinarKey'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RegistrationFields'\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  '/organizers/{organizerKey}/webinars/{webinarKey}/sessions':\n    get:\n      tags:\n        - Sessions\n      operationId: getAllSessions\n      summary: 'Get webinar sessions'\n      description: Retrieves details for all past sessions of a specific webinar.\n      parameters:\n        - $ref: '#/components/parameters/organizerKey'\n        - $ref: '#/components/parameters/webinarKey'\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/size'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReportingSessionsResponse'\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  '/organizers/{organizerKey}/webinars/{webinarKey}/sessions/{sessionKey}':\n    get:\n      tags:\n        - Sessions\n      operationId: getWebinarSession\n      summary: 'Get webinar session'\n      description: \u003e\n        Retrieves attendance details for a specific webinar session that has\n        ended. If attendees attended the session ('registrantsAttended'),\n        specific attendance details, such as attendenceTime for a registrant,\n        will also be retrieved.\n      parameters:\n        - $ref: '#/components/parameters/organizerKey'\n        - $ref: '#/components/parameters/webinarKey'\n        - $ref: '#/components/parameters/sessionKey'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Attendee'\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  '/organizers/{organizerKey}/webinars/{webinarKey}/sessions/{sessionKey}/attendees':\n    get:\n      tags:\n        - Attendees\n      operationId: getAttendees\n      summary: 'Get session attendees'\n      description: Retrieve details for all attendees of a specific webinar session.\n      parameters:\n        - $ref: '#/components/parameters/organizerKey'\n        - $ref: '#/components/parameters/webinarKey'\n        - $ref: '#/components/parameters/sessionKey'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Attendee'\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  '/organizers/{organizerKey}/webinars/{webinarKey}/sessions/{sessionKey}/attendees/{registrantKey}':\n    get:\n      tags:\n        - Attendees\n      operationId: getAttendee\n      summary: 'Get attendee'\n      description: Retrieve registration details for a particular attendee of a specific\n        webinar session.\n      parameters:\n        - $ref: '#/components/parameters/organizerKey'\n        - $ref: '#/components/parameters/webinarKey'\n        - $ref: '#/components/parameters/sessionKey'\n        - $ref: '#/components/parameters/registrantKey'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Registrant'\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  '/organizers/{organizerKey}/webinars/{webinarKey}/sessions/{sessionKey}/attendees/{registrantKey}/polls':\n    get:\n      tags:\n        - Attendees\n      operationId: getAttendeePollAnswers\n      summary: 'Get attendee poll answers'\n      description: Get poll answers from a particular attendee of a specific webinar\n        session.\n      parameters:\n        - $ref: '#/components/parameters/organizerKey'\n        - $ref: '#/components/parameters/webinarKey'\n        - $ref: '#/components/parameters/sessionKey'\n        - $ref: '#/components/parameters/registrantKey'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PollAnswer'\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  '/organizers/{organizerKey}/webinars/{webinarKey}/sessions/{sessionKey}/attendees/{registrantKey}/questions':\n    get:\n      tags:\n        - Attendees\n      operationId: getAttendeeQuestions\n      summary: 'Get attendee questions'\n      description: Get questions asked by an attendee during a webinar session.\n      parameters:\n        - $ref: '#/components/parameters/organizerKey'\n        - $ref: '#/components/parameters/webinarKey'\n        - $ref: '#/components/parameters/sessionKey'\n        - $ref: '#/components/parameters/registrantKey'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AttendeeQuestion'\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  '/organizers/{organizerKey}/webinars/{webinarKey}/sessions/{sessionKey}/attendees/{registrantKey}/surveys':\n    get:\n      tags:\n        - Attendees\n      operationId: getAttendeeSurveyAnswers\n      summary: 'Get attendee survey answers'\n      description: Retrieve survey answers from a particular attendee during a webinar\n        session.\n      parameters:\n        - $ref: '#/components/parameters/organizerKey'\n        - $ref: '#/components/parameters/webinarKey'\n        - $ref: '#/components/parameters/sessionKey'\n        - $ref: '#/components/parameters/registrantKey'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PollAnswer'\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  '/organizers/{organizerKey}/webinars/{webinarKey}/sessions/{sessionKey}/performance':\n    get:\n      tags:\n        - Sessions\n      operationId: getPerformance\n      summary: 'Get session performance'\n      description: Get performance details for a session.\n      parameters:\n        - $ref: '#/components/parameters/organizerKey'\n        - $ref: '#/components/parameters/webinarKey'\n        - $ref: '#/components/parameters/sessionKey'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SessionPerformance'\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  '/organizers/{organizerKey}/webinars/{webinarKey}/sessions/{sessionKey}/polls':\n    get:\n      tags:\n        - Sessions\n      operationId: getPolls\n      summary: 'Get session polls'\n      description: Retrieve all collated attendee questions and answers for polls from a\n        specific webinar session.\n      parameters:\n        - $ref: '#/components/parameters/organizerKey'\n        - $ref: '#/components/parameters/webinarKey'\n        - $ref: '#/components/parameters/sessionKey'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Poll'\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  '/organizers/{organizerKey}/webinars/{webinarKey}/sessions/{sessionKey}/questions':\n    get:\n      tags:\n        - Sessions\n      operationId: getQuestions\n      summary: 'Get session questions'\n      description: Retrieve questions and answers for a past webinar session.\n      parameters:\n        - $ref: '#/components/parameters/organizerKey'\n        - $ref: '#/components/parameters/webinarKey'\n        - $ref: '#/components/parameters/sessionKey'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AttendeeQuestion'\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  '/organizers/{organizerKey}/webinars/{webinarKey}/sessions/{sessionKey}/surveys':\n    get:\n      tags:\n        - Sessions\n      operationId: getSurveys\n      summary: 'Get session surveys'\n      description: Retrieve surveys for a past webinar session.\n      parameters:\n        - $ref: '#/components/parameters/organizerKey'\n        - $ref: '#/components/parameters/webinarKey'\n        - $ref: '#/components/parameters/sessionKey'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Poll'\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  '/organizers/{organizerKey}/webinars/{webinarKey}/panelists/{panelistKey}/resendInvitation':\n    post:\n      tags:\n        - Panelists\n      operationId: resendPanelistInvitation\n      summary: 'Resend panelist invitation'\n      description: Resend the panelist invitation email.\n      parameters:\n        - $ref: '#/components/parameters/organizerKey'\n        - $ref: '#/components/parameters/webinarKey'\n        - $ref: '#/components/parameters/panelistKey'\n      responses:\n        '204':\n          description: No Content\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  '/organizers/{organizerKey}/webinars/{webinarKey}/panelists/{panelistKey}':\n    delete:\n      tags:\n        - Panelists\n      operationId: deleteWebinarPanelist\n      summary: 'Delete webinar panelist'\n      description: Removes a webinar panelist.\n      parameters:\n        - $ref: '#/components/parameters/organizerKey'\n        - $ref: '#/components/parameters/webinarKey'\n        - $ref: '#/components/parameters/panelistKey'\n      responses:\n        '204':\n          description: No content\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  '/recordingassets/search':\n    post:\n      tags:\n        - RecordingAssets\n      operationId: searchAssets\n      summary: 'Search for completed recording assets'\n      description: |\n        Allows search for a completed recording asset.\n\n        ### Example Interaction with curl\n\n        The default request is represented below, that excludes the `includes` query parameter.\n        You will get the `mp4DownloadUrl` and `transcriptUrl` by default in the response if they exist. \n        The `recordingShareUrl` and `webinarKey` fields will not be included.\n\n        ```\n        curl --request PUT 'https://api.getgo.com/G2W/rest/v2/recordingassets/search?page={page}\u0026size={size}' \\\n        --header 'Authorization: Bearer {ACCESS_TOKEN}' \\\n        --header 'Content-Type: application/json' \\\n        --data-raw '{\n             \"accountKey\": \"123456\",\n             \"sortField\": \"CREATETIME\",\n             \"sortOrder\": \"DESC\"\n        }'\n\n        ```\n        By adding the `includes` query parameter has shown below, you'll get\n        the `recordingShareUrl` and `webinarKey` fields in the response.\n\n        ```\n        curl --request PUT 'https://api.getgo.com/G2W/rest/v2/recordingassets/search?page={page}\u0026size={size}\u0026includes=recordingShareUrl%2CwebinarKey' \\\n        --header 'Authorization: Bearer {ACCESS_TOKEN}' \\\n        --header 'Content-Type: application/json' \\\n        --data-raw '{\n              \"accountKey\": \"123456\",\n              \"sortField\": \"CREATETIME\",\n              \"sortOrder\": \"DESC\"\n            }'\n         ```\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/size'\n        - $ref: '#/components/parameters/includes'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AssetsSearchReq'\n        description: The asset search parameters\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AssetsResponse'\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  /webhooks/secretkey:\n    post:\n      tags:\n        - Webhooks\n      operationId: createSecretKey\n      summary: 'Creates a new secret key'\n      description: \u003e\n        This creates a new secret key per application. It takes an optional\n        validFrom value, a date time in ISO8601 format, e.g.\n        2019-07-01T22:00:00Z. The secret key will be activated at the given\n        date. If validFrom is not passed, the secret key will be activated\n        immediately. The secret key is used to generate a signature for events\n        published to the callback url.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SecretKeyRequest'\n        description: The secret key object to create\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SecretKeyResponse'\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  '/webhooks':\n    post:\n      tags:\n        - Webhooks\n      operationId: createWebhooks\n      summary: 'Creates new webhooks'\n      description: A new webhook will be created with the provided callback url. Callback\n        url should be a https url. Callback url will be validated by making a\n        GET request. It should return 200 OK.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/CreateWebhookRequest'\n        description: Webhooks object to create\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WebhooksResponse'\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n    put:\n      tags:\n        - Webhooks\n      operationId: updateWebhooks\n      summary: 'Updates webhooks'\n      description: Callback url and state of webhooks can be updated using this API.\n        Callback url should be a https url. Callback url will be validated by\n        making a GET request. It should return 200 OK.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/UpdateWebhooksRequest'\n        description: Webhooks object to update\n        required: true\n      responses:\n        '204':\n          description: No Content\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n    get:\n      tags:\n        - Webhooks\n      operationId: getWebhooks\n      summary: 'Get webhooks'\n      description: Get the list of webhooks by product for the requesting user. Product\n        must be provided.\n      parameters:\n        - $ref: '#/components/parameters/product'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WebhooksResponse'\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n    delete:\n      tags:\n        - Webhooks\n      operationId: deleteWebhooks\n      summary: 'Deletes webhooks'\n      description: Deletes webhooks by list of webhookKeys\n      responses:\n        '202':\n          description: Accepted\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  '/webhooks/{webhookKey}':\n    get:\n      tags:\n        - Webhooks\n      operationId: getWebhook\n      summary: 'Get webhook'\n      description: Get a webhook by webhookKey for the requesting user.\n      parameters:\n        - $ref: '#/components/parameters/webhookKey'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Webhook'\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  '/userSubscriptions':\n    post:\n      tags:\n        - Webhooks\n      operationId: createUserSubscriptions\n      summary: 'Creates new user subscriptions'\n      description: A user subscriptions will be created for the provided webhook. Callback\n        url can be provided for user subscription. The callback url will be\n        validated by making a GET request. It should return 200 OK.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/CreateUserSubscriptionRequest'\n        description: User subscriptions to create\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserSubscriptionResponse'\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n    put:\n      tags:\n        - Webhooks\n      operationId: updateUserSubscriptions\n      summary: 'Updates user subscriptions'\n      description: Callback url and state of user subscriptions can be updated using this\n        API. The callback url will be validated by making a GET request. It\n        should return 200 OK.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/UpdateUserSubscriptionsRequest'\n        description: User subscriptions to update\n        required: true\n      responses:\n        '204':\n          description: No Content\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n    get:\n      tags:\n        - Webhooks\n      operationId: getUserSubscriptions\n      summary: 'Get user subscriptions'\n      description: Get the list of user subscriptions by product for the requesting user.\n        Product must be provided.\n      parameters:\n        - $ref: '#/components/parameters/product'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserSubscriptionResponse'\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n    delete:\n      tags:\n        - Webhooks\n      operationId: deleteUserSubscriptions\n      summary: 'Deletes user subscriptions'\n      description: Deletes user subscriptions by list of userSubscriptionKeys\n      responses:\n        '202':\n          description: Accepted\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  '/userSubscriptions/{userSubscriptionsKey}':\n    get:\n      tags:\n        - Webhooks\n      operationId: getUserSubscription\n      summary: 'Get user subscription'\n      description: Get a user subscription by userSubscriptionKey for the requesting user.\n      parameters:\n        - $ref: '#/components/parameters/userSubscriptionsKey'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserSubscription'\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\nservers:\n  - url: 'https://api.getgo.com/G2W/rest/v2'\ncomponents:\n  securitySchemes:\n    OAuth2:\n      type: oauth2\n      description: \u003e\n        To use this API, you _must_ provide an OAuth Token that has been requested from LogMeIn OAuth Authorization Server.\n        See https://goto-developer.logmeininc.com/how-get-access-token-and-organizer-key for documentation about how to use LogMeIn’s OAuth.\n      flows:\n        password:\n          scopes: {}\n          tokenUrl: https://api.getgo.com/oauth/v2/token\n          refreshUrl: https://api.getgo.com/oauth/v2/token\n        authorizationCode:\n          scopes: {}\n          authorizationUrl: https://api.getgo.com/oauth/v2/authorize\n          tokenUrl: https://api.getgo.com/oauth/v2/token\n          refreshUrl: https://api.getgo.com/oauth/v2/token\n    Bearer:\n      type: http\n      scheme: bearer\n  parameters:\n    Authorization:\n      name: Authorization\n      in: header\n      description: Access token\n      required: true\n      schema:\n        type: string\n    organizerKey:\n      name: organizerKey\n      in: path\n      description: The key of the organizer\n      required: true\n      schema:\n        type: integer\n        format: int64\n    accountKey:\n      name: accountKey\n      in: path\n      description: The key of the account\n      required: true\n      schema:\n        type: integer\n        format: int64\n    name:\n      name: name\n      in: path\n      description: The name of the asset\n      required: true\n      schema:\n        type: string\n    webinarKey:\n      name: webinarKey\n      in: path\n      description: The key of the webinar\n      required: true\n      schema:\n        type: integer\n        format: int64\n    sessionKey:\n      name: sessionKey\n      in: path\n      description: The key of the webinar session\n      required: true\n      schema:\n        type: integer\n        format: int64\n    registrantKey:\n      name: registrantKey\n      in: path\n      description: The key of the registrant\n      required: true\n      schema:\n        type: integer\n        format: int64\n    coorganizerKey:\n      name: coorganizerKey\n      in: path\n      description: The key of the internal or external co-organizer (memberKey)\n      required: true\n      schema:\n        type: integer\n        format: int64\n    panelistKey:\n      name: panelistKey\n      in: path\n      description: The key of the webinar panelist\n      required: true\n      schema:\n        type: integer\n        format: int64\n    product:\n      name: product\n      in: query\n      description: Supported products\n      required: true\n      schema:\n        type: string\n        enum:\n          - g2w\n    webhookKey:\n      name: webhookKey\n      in: path\n      description: The unique identifier for a webhook.\n      required: true\n      schema:\n        type: string\n    userSubscriptionsKey:\n      name: userSubscriptionsKey\n      in: path\n      description: The unique identifier for a user subscription.\n      required: true\n      schema:\n        type: string\n    requiredFromTime:\n      name: fromTime\n      in: query\n      description: \u003e\n        Start of the datetime range in ISO8601 UTC format\n      required: true\n      example: '2020-03-13T10:00:00Z'\n      schema:\n        type: string\n        format: date-time\n    requiredToTime:\n      name: toTime\n      in: query\n      description: \u003e\n        End of the datetime range in ISO8601 UTC format\n      example: '2020-03-13T22:00:00Z'\n      required: true\n      schema:\n        type: string\n        format: date-time\n    optionalFromTime:\n      name: fromTime\n      in: query\n      description: \u003e\n        Start of the datetime range in ISO8601 UTC format\n      required: false\n      example: '2020-03-13T10:00:00Z'\n      schema:\n        type: string\n        format: date-time\n    optionalToTime:\n      name: toTime\n      in: query\n      description: \u003e\n        End of the datetime range in ISO8601 UTC format\n      example: '2020-03-13T22:00:00Z'\n      required: true\n      schema:\n        type: string\n        format: date-time\n    page:\n      name: page\n      in: query\n      required: false\n      description: The page number to be displayed. The first page is 0.\n      schema:\n        type: integer\n        format: int64\n    size:\n      name: size\n      in: query\n      required: false\n      description: The size of the page.\n      schema:\n        type: integer\n        format: int64\n        maximum: 200\n    sourceWebinarKey:\n      name: webinarKey\n      in: path\n      description: The key of source webinar\n      required: true\n      schema:\n        type: integer\n        format: int64\n    includes:\n      name: includes\n      in: query\n      required: false\n      description: Add the response variables.\n      schema:\n        type: array\n        items:\n          type: string\n          enum: [recordingShareUrl, webinarKey]\n  schemas:\n    WebinarReqUpdate:\n      description: Describes the details of the webinar\n      properties:\n        subject:\n          type: string\n          description: The name/subject of the webinar (128 characters maximum)\n        description:\n          type: string\n          description: A description of the webinar (2048 characters maximum)\n        times:\n          description: Array with start and end time(s) for webinar\n          type: array\n          items:\n            $ref: '#/components/schemas/DateTimeRange'\n        timeZone:\n          type: string\n          description: \u003e\n            The time zone where the webinar is taking place (must be a valid\n            time zone ID, see [Date and time conventions](/guides/References/01_Date-Time/)). If\n            this parameter is not passed, the timezone of the organizer's\n            profile will be used\n        locale:\n          type: string\n          enum:\n            - en_US\n            - de_DE\n            - es_ES\n            - fr_FR\n            - it_IT\n            - zh_CN\n          description: The webinar language\n        emailSettings:\n          $ref: '#/components/schemas/WebinarEmailSettings'\n    AudioType:\n      description: How to connect to the webinar's audio conference\n      type: string\n      enum:\n        - PSTN\n        - VOIP\n        - Hybrid\n        - Private\n    AudioUpdate:\n      description: Defines the audio/conferencing settings for the specified webinar\n      required:\n        - type\n      properties:\n        type:\n          $ref: '#/components/schemas/AudioType'\n        pstnInfo:\n          $ref: '#/components/schemas/PstnInfoUpdate'\n        privateInfo:\n          $ref: '#/components/schemas/PrivateInfoUpdate'\n    TollFreeCountries:\n      description: Countries in which toll free PSTN numbers are available.\n      type: string\n      enum:\n        - AE\n        - AR\n        - AT\n        - AU\n        - BE\n        - BG\n        - BH\n        - BR\n        - BY\n        - CA\n        - CH\n        - CL\n        - CN\n        - CO\n        - CZ\n        - DE\n        - DK\n        - ES\n        - FI\n        - FR\n        - GB\n        - GR\n        - HK\n        - HU\n        - ID\n        - IE\n        - IL\n        - IN\n        - IS\n        - IT\n        - JP\n        - KR\n        - LU\n        - MX\n        - MY\n        - NL\n        - NO\n        - NZ\n        - PA\n        - PE\n        - PH\n        - PL\n        - PT\n        - RO\n        - RU\n        - SA\n        - SE\n        - SG\n        - TH\n        - TR\n        - TW\n        - UA\n        - US\n        - UY\n        - VN\n        - ZA\n    TollCountries:\n      description: Defines in which countries toll PSTN numbers are available.\n      type: string\n      enum:\n        - AT\n        - AU\n        - BE\n        - CA\n        - CH\n        - DE\n        - DK\n        - ES\n        - FI\n        - FR\n        - GB\n        - IE\n        - IT\n        - NL\n        - NO\n        - NZ\n        - SE\n        - US\n    PstnInfoUpdate:\n      description: Defines the audio/conferencing settings for the specified webinar. It\n        required to pass 'tollFreeCountries' or 'tollCountries' or both.\n      properties:\n        tollFreeCountries:\n          description: Defines in which countries toll free PSTN numbers are available.\n          type: array\n          items:\n            $ref: '#/components/schemas/TollFreeCountries'\n        tollCountries:\n          description: Defines in which countries toll PSTN numbers are available.\n          type: array\n          items:\n            $ref: '#/components/schemas/TollCountries'\n    PrivateInfoUpdate:\n      description: Defines the audio data for an own conferencing system\n      required:\n        - attendee\n      properties:\n        attendee:\n          description: Attendee phone number for own conference call system\n          type: string\n        organizer:\n          description: Organizer phone number for own conference call system\n          type: string\n        panelist:\n          description: Panelist phone number for own conference call system\n          type: string\n    DateTimeRange:\n      description: A pair of DateTime values, the first of which serves as a start time and\n        the second as an end time of an interval.\n      required:\n        - startTime\n        - endTime\n      properties:\n        startTime:\n          type: string\n          format: date-time\n          description: The starting time of an interval, e.g. 2020-03-13T10:00:00Z\n        endTime:\n          type: string\n          format: date-time\n          description: The ending time of an interval, e.g. 2020-03-13T22:00:00Z\n    WebinarReqCreate:\n      description: Describes the details used to create a new single session webinar.\n      required:\n        - subject\n        - times\n      properties:\n        subject:\n          type: string\n          description: The name/subject of the webinar (128 characters maximum)\n        description:\n          type: string\n          description: A short description of the webinar (2048 characters maximum)\n        times:\n          description: \u003e\n            Array with startTime and endTime for webinar. Since this call\n            creates single session webinars, the array can only contain a single\n            pair of startTime and endTime\n          type: array\n          items:\n            $ref: '#/components/schemas/DateTimeRange'\n        timeZone:\n          type: string\n          description: \u003e\n            The time zone where the webinar is taking place (must be a valid\n            time zone ID, see [Date and time conventions](/guides/References/01_Date-Time/)). If\n            this parameter is not passed, the timezone of the organizer's\n            profile will be used\n        type:\n          description: \u003e\n            Specifies the webinar type. The default type value is\n            'single_session', which is used to create a single webinar session.\n            The possible values are 'single_session', 'series', 'sequence'. If\n            type is set to 'single_session', a single webinar session is\n            created. If type is set to 'series', a webinar series is created. In\n            this case 2 or more timeframes must be specified for each webinar.\n            Example: 'times': [{'startTime': '...', 'endTime':\n            '...'},{'startTime': '...', 'endTime': '...'},{'startTime': '...',\n            'endTime': '...'}. If type is set to 'sequence' a sequence of\n            webinars is created. The times object in the body must be replaced\n            by the 'recurrenceStart' object. Example: 'recurrenceStart':\n            {'startTime':'2012-06-12T16:00:00Z', 'endTime':\n            '2012-06-12T17:00:00Z' }.  The 'recurrenceEnd' and\n            'recurrencePattern' body parameter must be specified. Example: ,\n            'recurrenceEnd': '2012-07-10', 'recurrencePattern': 'daily'.\n          type: string\n          default: single_session\n        isPasswordProtected:\n          type: boolean\n          default: false\n          description: A boolean flag indicating if the webinar is password protected or not.\n        recordingAssetKey:\n          type: string\n          description: The recording asset with which the simulive webinar should be\n            created from. In case the recordingasset was created as an online\n            recording the simulive webinar settings, poll and surveys would be\n            copied from the webinar whose session was recorded.\n        isOndemand:\n          type: boolean\n          default: false\n          description: A boolean flag indicating if the webinar should be ondemand\n        experienceType:\n          description: Specifies the experience type. The possible values are 'CLASSIC',\n            'BROADCAST' and 'SIMULIVE'.\n          default: CLASSIC\n          type: string\n        emailSettings:\n          $ref: '#/components/schemas/WebinarEmailSettings'\n    WebinarEmailSettings:\n      description: Describes email settings of a webinar.\n      properties:\n        confirmationEmail:\n          $ref: '#/components/schemas/EmailSettings'\n        reminderEmail:\n          $ref: '#/components/schemas/EmailSettings'\n        absenteeFollowUpEmail:\n          $ref: '#/components/schemas/EmailSettings'\n        attendeeFollowUpEmail:\n          $ref: '#/components/schemas/AttendeeFollowUpEmailSetting'\n    EmailSettings:\n      description: Describes Confirmation email, Reminder email and Absentee follow-up\n        email settings.\n      properties:\n        enabled:\n          type: boolean\n          description: Indicates whether email settings are enabled or disabled.\n    AttendeeFollowUpEmailSetting:\n      description: Describes Attendee follow-up email settings.\n      allOf:\n        - $ref: '#/components/schemas/EmailSettings'\n        - type: object\n          properties:\n            includeCertificate:\n              type: boolean\n              description: Indicates whether to include certificates in attendee follow-up emails is enabled or disabled.\n    AssetsSearchReq:\n      description: Describes the details used to search a completed recordingasset.\n      required:\n        - accountKey\n      properties:\n        accountKey:\n          type: string\n          description: The key of the account\n        name:\n          type: string\n          description: The name of the recordingasset\n        sortField:\n          type: string\n          description: Sorts on the specified field. The default value is 'CREATETIME'. The possible values are 'CREATETIME' and 'NAME'.\n          default: CREATETIME\n        sortOrder:\n          description: Specifies the sort order type. The default value is 'DESC'. The possible values are 'DESC', 'ASC'.\n          type: string\n          default: DESC\n    CreatedWebinar:\n      description: Describes a newly created webinar.\n      required:\n        - webinarKey\n      properties:\n        webinarKey:\n          type: string\n          description: The unique key of the webinar.\n    AssetsResponse:\n      description: Describes a list of completed assets\n      required:\n        - _embedded\n        - page\n      properties:\n        _embedded:\n          $ref: '#/components/schemas/Assets'\n        page:\n          $ref: '#/components/schemas/page'\n    Assets:\n      description: 'Assets'\n      required:\n        - recordingAssets\n      properties:\n        recordingAssets:\n          type: array\n          description: Recording assets\n          items:\n            $ref: '#/components/schemas/Asset'\n    Asset:\n      description: Describes a completed recordingasset.\n      required:\n        - name\n        - recordingAssetKey\n        - productName\n        - createTime\n        - creatorKey\n        - accountKey\n        - totalReferenceCount\n        - mp4DownloadUrl\n      properties:\n        name:\n          type: string\n          description: The name of the asset\n        recordingAssetKey:\n          type: string\n          description: The unique identifier for the recording asset\n        productName:\n          type: string\n          description: The product with which the asset was originally created\n        createTime:\n          type: string\n          format: date-time\n          description: The create time of the asset\n        creatorKey:\n          type: string\n          description: The key of the creator\n        accountKey:\n          type: string\n          description: The key of the account\n        totalReferenceCount:\n          type: integer\n          format: int32\n          description: The total number of references of the asset across products\n        mp4DownloadUrl:\n          type: string\n          description: The url to download recording assets video\n        transcriptDownloadUrl:\n          type: string\n          description: The url to download the transcript for the given recording video, available only if the transcript was generated\n        recordingShareUrl:\n          type: string\n          description: The share link for recording\n        webinarKey:\n          type: string\n          description: The webinarKey of parent webinar for which this online recordings was created, not available for uploaded recordings\n    WebinarByKey:\n      description: Describes a webinar\n      required:\n        - webinarKey\n        - webinarID\n        - subject\n        - description\n        - organizerKey\n        - organizerEmail\n        - organizerName\n        - times\n        - registrationUrl\n        - inSession\n        - impromptu\n        - type\n        - timeZone\n        - numberOfRegistrants\n        - registrationLimit\n        - locale\n        - accountKey\n        - recurrencePeriod\n        - experienceType\n        - isPasswordProtected\n      properties:\n        webinarKey:\n          type: integer\n          format: int64\n          description: The unique key of the webinar\n        webinarID:\n          type: string\n          description: The 9-digit webinar ID\n        subject:\n          type: string\n          description: The webinar subject.\n        description:\n          type: string\n          description: A short description of the webinar\n        organizerKey:\n          type: integer\n          format: int64\n          description: The key of the webinar organizer\n        organizerEmail:\n          type: string\n          description: The email of the webinar organizer\n        organizerName:\n          type: string\n          description: The name of the webinar organizer\n        times:\n          type: array\n          items:\n            $ref: '#/components/schemas/DateTimeRange'\n          description: Array with startTime and endTime for the webinar sessions\n        registrationUrl:\n          type: string\n          description: The URL the webinar invitees can use to register\n        inSession:\n          type: boolean\n          description: Indicates whether there is a webinar session currently in progress\n        impromptu:\n          type: boolean\n          description: A boolean flag indicating if the webinar type is impromptu\n        type:\n          description: Specifies the recurrence type. The possible values are\n            'single_session', 'series' and 'sequence'.\n          type: string\n        timeZone:\n          type: string\n          description: The timezone where the webinar is taking place\n        numberOfRegistrants:\n          type: integer\n          format: int32\n          description: The number of registrants at the webinar\n        registrationLimit:\n          type: integer\n          format: int32\n          description: The maximum number of registrants a webinar can have\n        locale:\n          type: string\n          enum:\n            - en_US\n            - de_DE\n            - es_ES\n            - fr_FR\n            - it_IT\n            - zh_CN\n          description: The webinar language\n        accountKey:\n          type: string\n          description: The key of the account\n        recurrencePeriod:\n          description: Specifies the recurrence type. The possible values are\n            'single_session', 'series' and 'sequence'.\n          type: string\n        experienceType:\n          description: Specifies the experience type. The possible values are 'classic',\n            'broadcast' and 'simulive'.\n          type: string\n        isPasswordProtected:\n          type: boolean\n          description: A boolean flag indicating if the webinar is password protected\n    Webinar:\n      description: Describes a webinar\n      required:\n        - webinarKey\n        - webinarId\n        - organizerKey\n        - accountKey\n        - subject\n        - description\n        - times\n        - timeZone\n        - locale\n        - status\n        - approvalType\n        - registrationUrl\n        - impromptu\n        - isPasswordProtected\n        - recurrenceType\n        - experienceType\n      properties:\n        webinarKey:\n          type: string\n          description: The unique key of the webinar\n        webinarID:\n          type: string\n          description: The 9-digit webinar ID\n        organizerKey:\n          type: string\n          description: The key of the webinar organizer\n        accountKey:\n          type: string\n          description: The key of the account\n        subject:\n          type: string\n          description: The webinar subject\n        description:\n          type: string\n          description: A short description of the webinar\n        times:\n          type: array\n          items:\n            $ref: '#/components/schemas/DateTimeRange'\n          description: Array with startTime and endTime for the webinar sessions\n        timeZone:\n          type: string\n          description: The timezone where the webinar is taking place\n        locale:\n          type: string\n          enum:\n            - en_US\n            - de_DE\n            - es_ES\n            - fr_FR\n            - it_IT\n            - zh_CN\n          description: The webinar language\n        approvalType:\n          type: string\n          description: Specifies if the organizer needs to approve the webinar\n            registrations. The possible values are 'AUTOMATIC' and 'MANUAL'.\n        registrationUrl:\n          type: string\n          description: The URL the webinar invitees can use to register\n        impromptu:\n          type: boolean\n          description: A boolean flag indicating if the webinar type is impromptu\n        isPasswordProtected:\n          type: boolean\n          description: A boolean flag indicating if the webinar is password protected\n        recurrenceType:\n          description: Specifies the recurrence type. The possible values are\n            'single_session', 'series' and 'sequence'.\n          type: string\n        experienceType:\n          description: Specifies the experience type. The possible values are 'classic',\n            'broadcast' and 'simulive'.\n          type: string\n    ReportingWebinarsResponse:\n      description: Describes a list of webinars for an account within a given date range\n      required:\n        - _embedded\n        - page\n      properties:\n        _embedded:\n          $ref: '#/components/schemas/ReportingWebinars'\n        page:\n          $ref: '#/components/schemas/page'\n    ReportingWebinars:\n      description: 'Reporting webinars'\n      required:\n        - webinars\n      properties:\n        webinars:\n          description: Webinar list\n          type: array\n          items:\n            $ref: '#/components/schemas/Webinar'\n    BrokerWebinar:\n      description: Describes a scheduled webinar\n      required:\n        - numberOfRegistrants\n        - times\n        - description\n        - subject\n        - inSession\n        - organizerKey\n        - webinarKey\n        - webinarID\n        - timeZone\n        - registrationUrl\n        - experienceType\n      properties:\n        numberOfRegistrants:\n          type: integer\n          format: int32\n          description: The number of registrants at the webinar\n        times:\n          type: array\n          items:\n            $ref: '#/components/schemas/DateTimeRange'\n          description: Array with startTime and endTime for the webinar sessions\n        description:\n          type: string\n          description: A short description of the webinar\n        subject:\n          type: string\n          description: The webinar subject\n        inSession:\n          type: boolean\n          description: Indicates whether there is a webinar session currently in progress\n        organizerKey:\n          type: integer\n          format: int64\n          description: The key of the webinar organizer\n        webinarKey:\n          type: integer\n          format: int64\n          description: The unique key of the webinar\n        webinarID:\n          type: string\n          description: The 9-digit webinar ID\n        timeZone:\n          type: string\n          description: The timezone where the webinar is taking place\n        registrationUrl:\n          type: string\n          description: The URL the webinar invitees can use to register\n        experienceType:\n          description: Specifies the experience type. The possible values are 'classic',\n            'broadcast' and 'simulive'.\n          type: string\n    page:\n      description: Page\n      required:\n        - size\n        - totalElements\n        - totalPages\n        - number\n      properties:\n        size:\n          type: integer\n          format: int32\n          description: The page size\n        totalElements:\n          type: integer\n          format: int32\n          description: The total elements\n        totalPages:\n          type: integer\n          format: int32\n          description: The pages count\n        number:\n          type: integer\n          format: int32\n          description: The current page number. The first page is 0\n    firstPage:\n      required:\n        - href\n      properties:\n        href:\n          type: string\n          description: The first page link\n    selfPage:\n      required:\n        - href\n      properties:\n        href:\n          type: string\n          description: The current page link\n    lastPage:\n      required:\n        - href\n      properties:\n        href:\n          type: string\n          description: The last page link\n    ReportingSessionsResponse:\n      description: Describes a list of webinar sessions\n      required:\n        - _embedded\n        - page\n      properties:\n        _embedded:\n          $ref: '#/components/schemas/ReportingSessions'\n        page:\n          $ref: '#/components/schemas/page'\n    ReportingSessions:\n      description: 'Reporting Sessions'\n      required:\n        - sessionInfoResources\n      properties:\n        sessionInfoResources:\n          description: Reporting session list\n          type: array\n          items:\n            $ref: '#/components/schemas/ReportingSession'\n    ReportingSession:\n      description: Describes a completed webinar session.\n      required:\n        - sessionKey\n        - webinarKey\n        - webinarName\n        - startTime\n        - endTime\n        - registrantsAttended\n        - registrantCount\n        - accountKey\n        - creatingOrganizerKey\n        - creatingOrganizerName\n        - startingOrganizerKey\n        - startingOrganizerName\n        - totalPollCount\n        - timeZone\n        - experienceType\n        - webinarID\n      properties:\n        sessionKey:\n          type: string\n          description: The unique key of the webinar session\n        webinarKey:\n          type: string\n          description: The unique key of the webinar\n        webinarName:\n          type: string\n          description: The webinar name\n        startTime:\n          type: string\n          format: date-time\n          description: The starting time of the webinar session\n        endTime:\n          type: string\n          format: date-time\n          description: The ending time of the webinar session\n        registrantsAttended:\n          type: integer\n          format: int32\n          description: The number of registrants who attended the webinar session\n        registrantCount:\n          type: integer\n          format: int32\n          description: The total number of registrants for the webinar\n        accountKey:\n          type: string\n          description: The key of the account\n        creatingOrganizerKey:\n          type: string\n          description: The key of the webinar organizer who scheduled the webinar\n        creatingOrganizerName:\n          type: string\n          description: The name of the webinar organizer who scheduled the webinar\n        startingOrganizerKey:\n          type: string\n          description: The key of the webinar organizer who started the webinar session\n        startingOrganizerName:\n          type: string\n          description: The name of the webinar organizer who started the webinar session\n        totalPollCount:\n          type: integer\n          format: int32\n          description: The total number of polls for the webinar session\n        timeZone:\n          type: string\n          description: The timezone where the webinar is taking place\n        experienceType:\n          description: Specifies the experience type. The possible values are 'classic',\n            'broadcast' and 'simulive'.\n          type: string\n        webinarID:\n          type: string\n          description: The 9-digit webinar ID\n    Session:\n      description: Describes a completed webinar session.\n      required:\n        - startTime\n        - registrantsAttended\n        - webinarKey\n        - webinarID\n        - sessionKey\n        - endTime\n      properties:\n        startTime:\n          type: string\n          format: date-time\n          description: The starting time of the webinar session\n        registrantsAttended:\n          type: integer\n          format: int32\n          description: The number of registrants who attended the webinar session\n        webinarKey:\n          type: integer\n          format: int64\n          description: The unique key of the webinar\n        webinarID:\n          type: string\n          description: The 9-digit webinar ID\n        sessionKey:\n          type: integer\n          format: int64\n          description: The unique key of the webinar session\n        endTime:\n          type: string\n          format: date-time\n          description: The ending time of the webinar session\n    Attendance:\n      description: Describes the times the attendee joined and left a webinar session.\n      required:\n        - joinTime\n        - leaveTime\n      properties:\n        joinTime:\n          type: string\n          format: date-time\n          description: The time the attendee joined a webinar session\n        leaveTime:\n          type: string\n          format: date-time\n          description: The time the attendee left a webinar session\n    ReportingAttendeeResponse:\n      description: Describes a list of webinar attendees\n      required:\n        - _embedded\n        - page\n      properties:\n        _embedded:\n          $ref: '#/components/schemas/ReportingAttendees'\n        page:\n          $ref: '#/components/schemas/page'\n    ReportingAttendees:\n      description: 'Reporting attendees'\n      required:\n        - attendeeParticipationResponses\n      properties:\n        attendeeParticipationResponses:\n          description: Reporting attendees list\n          type: array\n          items:\n            $ref: '#/components/schemas/ReportingAttendee'\n    ReportingAttendee:\n      description: Describes the attendee of a webinar\n      required:\n        - registrantKey\n        - sessionKey\n        - email\n        - attendanceTimeInSeconds\n        - attendance\n        - firstName\n        - lastName\n      properties:\n        registrantKey:\n          type: integer\n          format: int64\n          description: The key of the webinar attendee\n        sessionKey:\n          type: integer\n          format: int64\n          description: The unique key of the webinar session\n        email:\n          type: string\n          description: The attendee's email address\n        attendanceTimeInSeconds:\n          type: integer\n          format: int64\n          description: The total attendance time in seconds\n        attendance:\n          type: array\n          items:\n            $ref: '#/components/schemas/Attendance'\n          description: The list of times the attendee joined and left the webinar session\n        firstName:\n          type: string\n          description: The attendee's first name\n        lastName:\n          type: string\n          description: The attendee's last name\n    Attendee:\n      description: Describes the attendee of a webinar\n      required:\n        - registrantKey\n        - firstName\n        - lastName\n        - email\n        - attendanceTimeInSeconds\n        - attendance\n        - sessionKey\n      properties:\n        registrantKey:\n          type: integer\n          format: int64\n          description: The key of the webinar attendee\n        firstName:\n          type: string\n          description: The attendee's first name\n        lastName:\n          type: string\n          description: The attendee's last name\n        email:\n          type: string\n          description: The attendee's email address\n        attendanceTimeInSeconds:\n          type: integer\n          format: int64\n          description: The total attendance time in seconds\n        sessionKey:\n          type: integer\n          format: int64\n          description: The unique key of the webinar session\n        attendance:\n          type: array\n          items:\n            $ref: '#/components/schemas/Attendance'\n          description: The list of times the attendee joined and left the webinar session\n    AttendeeQuestion:\n      description: Describes the question asked by an attendee during a webinar session;\n        includes the answers given to it.\n      required:\n        - answers\n        - question\n        - askedBy\n      properties:\n        answers:\n          type: array\n          items:\n            $ref: '#/components/schemas/AnswerToAttendeeQuestion'\n          description: Answer to a question of an attendee and key of the organizer that\n            answered\n        question:\n          type: string\n          description: The question asked by the attendee\n        askedBy:\n          type: string\n          description: The email address of the attendee that asked the question\n    AnswerToAttendeeQuestion:\n      description: Describes an answer to a question asked by an attendee during a webinar\n        session.\n      required:\n        - answer\n        - answeredBy\n      properties:\n        answer:\n          type: string\n          description: An answer given to a question asked by an attendee during a webinar\n            session\n        answeredBy:\n          type: string\n          description: The key of the organizer that answered the attendee's question\n    Coorganizer:\n      description: Describes a webinar co-organizer. A co-organizer without a GoToWebinar\n        account is marked as external and is returned without a surname\n      required:\n        - joinLink\n        - email\n        - memberKey\n        - external\n        - surname\n        - givenName\n      properties:\n        joinLink:\n          type: string\n          description: The co-organizer's join link\n        email:\n          type: string\n          description: The co-organizer's email address\n        memberKey:\n          type: string\n          description: The co-organizer's organizer key. A new member key is created for\n            external co-organizers\n        external:\n          type: boolean\n          description: If the co-organizer has no GoToWebinar account, this value is set to\n            'true'\n        surname:\n          type: string\n          description: The co-organizer's surname. For external co-organizers this\n            parameter is not returned\n        givenName:\n          type: string\n          description: The co-organizer's given name\n    CoorganizerReqCreate:\n      description: 'Details used for creating a co-organizer for a webinar. '\n      required:\n        - external\n      properties:\n        external:\n          type: boolean\n          description: If the co-organizer has no GoToWebinar account, this value has to be\n            set to 'true'\n        organizerKey:\n          type: string\n          description: The co-organizer's organizer key. This parameter has to be passed\n            only, if 'external' is set to 'false'\n        givenName:\n          type: string\n          description: The co-organizer's given name. This parameter has to be passed only,\n            if 'external' is set to 'true'\n        email:\n          type: string\n          description: The co-organizer's email address. This parameter has to be passed\n            only, if 'external' is set to 'true'\n    Panelist:\n      description: Describes a webinar session panelist\n      required:\n        - joinLink\n        - lastName\n        - email\n        - name\n        - panelistId\n        - firstName\n      properties:\n        joinLink:\n          type: string\n          description: The co-organizer's join link\n        lastName:\n          deprecated: true\n          type: string\n          description: DEPRECATED. The fields 'firstName' and 'lastName' are replaced by\n            the field 'name'\n        email:\n          type: string\n          description: The panelist's email address\n        name:\n          type: string\n          description: The panelist's name\n        panelistId:\n          type: integer\n          format: int64\n          description: The panelist's ID\n        firstName:\n          deprecated: true\n          type: string\n          description: DEPRECATED. The fields 'firstName' and 'lastName' are replaced by\n            the field 'name'\n    PanelistReqCreate:\n      description: Describes a single panelist\n      required:\n        - email\n        - name\n      properties:\n        email:\n          type: string\n          description: The panelist's email address\n        name:\n          type: string\n          description: The panelist's name\n    CreatedPanelist:\n      description: Describes a created panelist\n      required:\n        - name\n        - email\n        - joinLink\n        - panelistKey\n      properties:\n        name:\n          type: string\n          description: The panelist's name\n        email:\n          type: string\n          description: The panelist's email address\n        joinLink:\n          type: string\n          description: The panelist's join link\n        panelistKey:\n          type: string\n          description: The panelist's key\n    Audio:\n      description: Describes the audio/conferencing information for a webinar.\n      required:\n        - type\n      properties:\n        type:\n          $ref: '#/components/schemas/AudioType'\n        confCallNumbers:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/CallNumbers'\n          description: \u003e\n            The conference call numbers and access codes per country. This will\n            be returned only, if 'type' is not set to 'Private'.\n        privateInfo:\n          $ref: '#/components/schemas/PrivateInfo'\n    CallNumbers:\n      description: Conference call numbers per country.\n      required:\n        - accessCodes\n        - toll\n      properties:\n        accessCodes:\n          $ref: '#/components/schemas/AccessCodes'\n        toll:\n          type: string\n          description: Conference number for toll calls.\n        tollFree:\n          type: string\n          description: Conference number for toll-free calls.\n    PrivateInfo:\n      description: Phone numbers for an own conference call service.\n      required:\n        - attendee\n      properties:\n        attendee:\n          type: string\n          description: Text for the panelist when using an own conference call service\n        organizer:\n          type: string\n          description: Text for the organizer when using an own conference call service\n        panelist:\n          type: string\n          description: Text for the panelist when using an own conference call service\n    AccessCodes:\n      description: Describes the access codes for organizer, panelists and attendees\n      required:\n        - organizer\n        - panelist\n        - attendee\n      properties:\n        organizer:\n          type: string\n          description: Access code for the organizer\n        panelist:\n          type: string\n          description: Access code for panelists\n        attendee:\n          type: string\n          description: Access code for attendees\n    AttendanceStatistics:\n      description: Describes attendance metrics for a webinar session.\n      required:\n        - registrantCount\n        - percentageAttendance\n        - averageInterestRating\n        - averageAttentiveness\n        - averageAttendanceTimeSeconds\n      properties:\n        registrantCount:\n          type: integer\n          format: int32\n          description: The number of registrations for the webinar\n        percentageAttendance:\n          type: number\n          format: float\n          description: The percentage of registrants that actually attended the webinar\n            session\n        averageInterestRating:\n          type: number\n          format: float\n          description: Numerical value 1-100 (100 being most interested) indicating the\n            average interest rating of the webinar attendees\n        averageAttentiveness:\n          type: number\n          format: float\n          description: Average based on the focus of the attendees Viewer during the\n            webinar session\n        averageAttendanceTimeSeconds:\n          type: number\n          format: float\n          description: Average attendance time in seconds\n    Poll:\n      description: A poll or survey launched by an organizer during or after a webinar\n        session; includes the responses given to it by the attendees.\n      required:\n        - responses\n        - question\n        - numberOfResponses\n      properties:\n        responses:\n          type: array\n          items:\n            $ref: '#/components/schemas/PollResponse'\n          description: The responses given by the attendees to the poll or survey\n        question:\n          type: string\n          description: The poll or survey question asked by the webinar organizer\n        numberOfResponses:\n          type: integer\n          format: int32\n          description: The total number of responses received for this poll or survey\n    PollAnswer:\n      description: Describes the answer given by a webinar attendee to a poll or survey\n        launched by an organizer.\n      required:\n        - answers\n        - question\n      properties:\n        answer:\n          type: string\n          description: The answer given to the poll or survey question. Use `answers` array instead.\n          example: 'Great'\n          deprecated: true\n        answers:\n          type: array\n          description: The answer given to the poll or survey question\n          items:\n            type: string\n            example:\n              - 'Great'\n              - 'Super'\n        question:\n          type: string\n          description: The poll or survey question\n          example: How was the experience?\n    PollResponse:\n      description: One of the potential responses/options to a poll or survey launched by\n        an organizer during a webinar session.\n      required:\n        - text\n        - percentage\n      properties:\n        text:\n          type: string\n          description: The text of the response/option to a poll or survey\n        percentage:\n          type: number\n          format: float\n          description: The percentage of responses that favored this particular option\n          maximum: 100\n          minimum: 0\n    PollsAndSurveysStatistics:\n      description: Details on the polls and surveys for a webinar session.\n      required:\n        - pollCount\n        - surveyCount\n        - questionsAsked\n        - percentagePollsCompleted\n        - percentageSurveysCompleted\n      properties:\n        pollCount:\n          type: integer\n          format: int32\n          description: The number of polls launched at a webinar session\n        surveyCount:\n          type: number\n          format: float\n          description: The percentage of surveys launched at a webinar session\n        questionsAsked:\n          type: integer\n          format: int32\n          description: The number of questions asked at a webinar session\n        percentagePollsCompleted:\n          type: number\n          format: float\n          description: The percentage of polls completed by the attendees\n        percentageSurveysCompleted:\n          type: number\n          format: float\n          description: The percentage of surveys completed by the attendees\n    SessionPerformance:\n      description: Describes performance details for webinar sessions\n      required:\n        - attendance\n        - pollsAndSurveys\n      properties:\n        attendance:\n          $ref: '#/components/schemas/AttendanceStatistics'\n        pollsAndSurveys:\n          $ref: '#/components/schemas/PollsAndSurveysStatistics'\n    RegistrantCreated:\n      description: Describes a newly created webinar registrant.\n      required:\n        - registrantKey\n        - joinUrl\n      properties:\n        registrantKey:\n          type: integer\n          format: int64\n          description: The registrant's key\n        joinUrl:\n          type: string\n          description: The URL the registrant will use to join the webinar.\n    Registrant:\n      description: Describes a webinar registrant\n      required:\n        - lastName\n        - email\n        - firstName\n        - registrantKey\n        - registrationDate\n        - status\n        - joinUrl\n        - timeZone\n      properties:\n        lastName:\n          type: string\n          description: The registrant's last name\n        email:\n          type: string\n          description: The registrant's email address\n        firstName:\n          type: string\n          description: The registrant's first name\n        registrantKey:\n          type: integer\n          format: int64\n          description: The registrant's key\n        registrationDate:\n          type: string\n          format: date-time\n          description: The registration date and time\n        status:\n          type: string\n          enum:\n            - APPROVED\n            - DENIED\n            - WAITING\n          description: The registration status\n        joinUrl:\n          type: string\n          description: The URL the registrant will use to join the webinar\n        timeZone:\n          type: string\n          description: The time zone where the webinar will take place\n    RegistrantQAResponse:\n      description: \u003e\n        Describes a completed registration question for a webinar registrant. If\n        you use \"Multiple choice\" questions the response contains the numeric\n        answerKey, otherwise the answer text.\n      required:\n        - questionKey\n      properties:\n        questionKey:\n          type: integer\n          format: int64\n          description: The unique key of the question\n        responseText:\n          type: string\n          description: Answer of the question.\n        answerKey:\n          type: integer\n          format: int64\n          description: The numeric key of the answer to a multiple-choice question.\n    RegistrantFields:\n      description: Detailed description of a all fields to register a registrant for a\n        webinar.\n      required:\n        - firstName\n        - lastName\n        - email\n      properties:\n        firstName:\n          type: string\n          description: The registrant's first name\n        lastName:\n          type: string\n          description: The registrant's last name\n        email:\n          type: string\n          description: The registrant's email address\n        source:\n          type: string\n          description: The source that led to the registration. This can be any string like\n            'Newsletter 123' or 'Marketing campaign ABC'\n        address:\n          type: string\n          description: The registrant's address\n        city:\n          type: string\n          description: The registrant's city\n        state:\n          type: string\n          description: The registrant's state (US only)\n        zipCode:\n          type: string\n          description: The registrant's zip (post) code\n        country:\n          type: string\n          description: The registrant's country\n        phone:\n          type: string\n          description: The registrant's phone\n        organization:\n          type: string\n          description: The registrant's organization\n        jobTitle:\n          type: string\n          description: The registrant's job title\n        questionsAndComments:\n          type: string\n          description: Any questions or comments the registrant made at the time of\n            registration\n        industry:\n          type: string\n          description: The type of industry the registrant's organization belongs to\n        numberOfEmployees:\n          type: string\n          description: The size in employees of the registrant's organization\n        purchasingTimeFrame:\n          type: string\n          description: The time frame within which the product will be purchased\n        purchasingRole:\n          type: string\n          description: The registrant's role in purchasing the product\n        responses:\n          type: array\n          items:\n            $ref: '#/components/schemas/RegistrantQAResponse'\n          description: Set the answers of all questions\n    RegistrantDetailed:\n      description: Detailed description of a webinar registrant with all registration\n        fields.\n      required:\n        - firstName\n        - lastName\n        - email\n        - registrantKey\n        - registrationDate\n        - status\n        - joinUrl\n        - timeZone\n      properties:\n        lastName:\n          type: string\n          description: The registrant's last name\n        email:\n          type: string\n          description: The registrant's email address\n        firstName:\n          type: string\n          description: The registrant's first name\n        registrantKey:\n          type: integer\n          format: int64\n          description: The registrant's key\n        registrationDate:\n          type: string\n          format: date-time\n          description: The registration date and time\n        source:\n          type: string\n          description: The source that led to the registration. This can be any string like\n            'Newsletter 123' or 'Marketing campaign ABC'\n        status:\n          type: string\n          enum:\n            - APPROVED\n            - DENIED\n            - WAITING\n          description: The registration status\n        joinUrl:\n          type: string\n          description: The URL the registrant will use to join the webinar\n        timeZone:\n          type: string\n          description: The time zone where the webinar will take place\n        phone:\n          type: string\n          description: The registrant's phone\n        state:\n          type: string\n          description: The registrant's state (US only)\n        city:\n          type: string\n          description: The registrant's city\n        organization:\n          type: string\n          description: The registrant's organization\n        zipCode:\n          type: string\n          description: The registrant's zip (post) code\n        numberOfEmployees:\n          type: string\n          description: The size in employees of the registrant's organization\n        industry:\n          type: string\n          description: The type of industry the registrant's organization belongs to\n        jobTitle:\n          type: string\n          description: The registrant's job title\n        purchasingRole:\n          type: string\n          description: The registrant's role in purchasing the product\n        implementationTimeFrame:\n          type: string\n          description: The time frame within which the product will be purchased\n        purchasingTimeFrame:\n          type: string\n          description: The time frame within which the product will be purchased\n        questionsAndComments:\n          type: string\n          description: Any questions or comments the registrant made at the time of\n            registration\n        employeeCount:\n          type: string\n          description: The size in employees of the registrant's organization\n        country:\n          type: string\n          description: The registrant's country\n        address:\n          type: string\n          description: The registrant's address\n        type:\n          type: string\n          description: The type is REGULAR for 'One session' and 'Sequence' webinars. The\n            type LATE is for registrants registering for past webinars. For\n            webinar series this parameter is not passed\n          enum:\n            - LATE\n            - REGULAR\n        unsubscribed:\n          type: boolean\n          description: Indicates whether the registrant opted-out from receiving other\n            emails from this webinar's organizer\n        responses:\n          description: Responses to custom questions\n          type: array\n          items:\n            $ref: '#/components/schemas/CustomAnswers'\n    RegistrationAnswer:\n      description: Describes an answer to a multiple choice custom registration field.\n      required:\n        - answer\n        - answerKey\n      properties:\n        answer:\n          type: string\n          description: The answer value\n        answerKey:\n          type: integer\n          format: int64\n          description: The answer key\n    RegistrationQuestion:\n      description: Describes a custom field for a webinar registration.\n      required:\n        - questionKey\n        - question\n        - required\n        - type\n        - maxSize\n      properties:\n        questionKey:\n          type: integer\n          format: int64\n          description: The unique key of the custom registration field\n        question:\n          type: string\n          description: The value (text) of the custom registration field\n        required:\n          type: boolean\n          description: Indicates whether the custom registration field is compulsory\n        type:\n          type: string\n          enum:\n            - multipleChoice\n            - shortAnswer\n          description: Indicates whether the custom registration field requires a single\n            short answer or whether it is a multiple choice question\n        maxSize:\n          type: integer\n          format: int32\n          description: The character size of the custom registration field (max 1000)\n        answers:\n          type: array\n          items:\n            $ref: '#/components/schemas/RegistrationAnswer'\n          description: The answers to a multiple choice custom registration field\n    RegistrationField:\n      description: Describes a field for a webinar registration.\n      required:\n        - field\n        - required\n        - maxSize\n      properties:\n        field:\n          type: string\n          description: The name of the registration field\n        answers:\n          type: array\n          items:\n            type: string\n          description: List of choices for a multiple choice registration field\n        required:\n          type: boolean\n          description: Indicates whether the custom registration field is compulsory\n        maxSize:\n          type: integer\n          format: int32\n          description: The character size of the custom registration field (max 128)\n    RegistrationFields:\n      description: The fields to be completed on the webinar registration form.\n      required:\n        - questions\n        - fields\n      properties:\n        questions:\n          type: array\n          items:\n            $ref: '#/components/schemas/RegistrationQuestion'\n          description: Custom fields created by the organizer for the webinar registration\n            form\n        fields:\n          type: array\n          items:\n            $ref: '#/components/schemas/RegistrationField'\n          description: The default fields the organizer has selected for the webinar\n            registration form\n    CustomAnswers:\n      description: Answers to custom questions of the registrant\n      required:\n        - answer\n        - question\n      properties:\n        answer:\n          type: string\n          description: Answer to a custom question when registering\n        question:\n          type: string\n          description: Custom question for registering\n    SecretKeyRequest:\n      description: Representation of a secret key\n      properties:\n        validFrom:\n          description: A date time in ISO8601 format, e.g. 2019-07-01T22:00:00Z. The secret\n            key will be activated at the given date\n          type: string\n    SecretKeyResponse:\n      description: Representation of a secret key\n      properties:\n        id:\n          description: The unique identifier for the secret key\n          type: integer\n        value:\n          description: The value of the secret key. This is used for generating a signature\n            of events posted to the callback url\n          type: string\n        validFrom:\n          description: A date time in ISO8601 format, e.g. 2019-07-01T22:00:00Z. The secret\n            key will be activated at the given date\n          type: string\n    WebhooksResponse:\n      description: List of webhooks\n      required:\n        - _embedded\n      properties:\n        _embedded:\n          $ref: '#/components/schemas/Webhooks'\n    Webhooks:\n      description: 'Webhooks'\n      required:\n        - webhooks\n      properties:\n        webhooks:\n          description: Webhook list\n          type: array\n          items:\n            $ref: '#/components/schemas/Webhook'\n    WebhookState:\n      type: string\n      description: State of the webhook\n      enum:\n        - INACTIVE\n        - ACTIVE\n    Product:\n      type: string\n      description: Product of the events\n      enum:\n        - g2w\n    CreateWebhookRequest:\n      description: Representation of a single webhook\n      required:\n        - callbackUrl\n        - eventName\n        - eventVersion\n        - product\n      properties:\n        callbackUrl:\n          type: string\n          description: A HTTPs url that can accept posted events. It should return 200 OK\n            for GET requests.\n        eventName:\n          type: string\n          description: Type of event for the webhook. Supported eventNames are\n            registrant.added, registrant.joined, webinar.created,\n            webinar.changed\n        eventVersion:\n          type: string\n          description: Version of event being subscribed for. Supported eventVersion is\n            1.0.0\n        product:\n          $ref: '#/components/schemas/Product'\n    Webhook:\n      description: Representation of a single webhook\n      required:\n        - callbackUrl\n        - eventName\n        - eventVersion\n        - product\n      properties:\n        callbackUrl:\n          type: string\n          description: A HTTPs url that can accept posted events. It should return 200 OK\n            for GET requests.\n        eventName:\n          type: string\n          description: Type of event for the webhook. Supported eventNames are\n            registrant.added, registrant.joined, webinar.created,\n            webinar.changed\n        eventVersion:\n          type: string\n          description: Version of event being subscribed for. Supported eventVersion is\n            1.0.0\n        product:\n          $ref: '#/components/schemas/Product'\n        webhookKey:\n          type: string\n          description: The unique identifier for the webhook\n        state:\n          $ref: '#/components/schemas/WebhookState'\n        createTime:\n          type: string\n          description: The create time of the webhook\n    UpdateWebhooksRequest:\n      description: Describes a single webhook update request\n      required:\n        - webhookKey\n      properties:\n        callbackUrl:\n          type: string\n          description: A HTTPs url that can accept posted events. It should return 200 OK\n            for GET requests.\n        webhookKey:\n          type: string\n          description: The unique identifier for the webhook\n        state:\n          $ref: '#/components/schemas/WebhookState'\n    UserSubscriptionState:\n      type: string\n      description: State of the user subscription\n      enum:\n        - INACTIVE\n        - ACTIVE\n    ActivationState:\n      type: string\n      description: Final state of user subscription. ActivationState will be ACTIVE if both\n        webhook and user subscription states are ACTIVE, INACTIVE otherwise.\n      enum:\n        - INACTIVE\n        - ACTIVE\n    CreateUserSubscriptionRequest:\n      description: Describes a single user subscription\n      required:\n        - webhookKey\n      properties:\n        callbackUrl:\n          type: string\n          description: A HTTPs url that can accept posted events. It should return 200 OK\n            for GET requests.\n        webhookKey:\n          type: string\n          description: The unique identifier for the webhook\n        userSubscriptionState:\n          $ref: '#/components/schemas/UserSubscriptionState'\n    UserSubscriptionResponse:\n      description: Describes a list of user subscriptions\n      required:\n        - _embedded\n      properties:\n        _embedded:\n          $ref: '#/components/schemas/UserSubscriptions'\n    UserSubscriptions:\n      description: 'User subscriptions'\n      required:\n        - userSubscriptions\n      properties:\n        userSubscriptions:\n          description: User subscriptions list\n          type: array\n          items:\n            $ref: '#/components/schemas/UserSubscription'\n    UserSubscription:\n      description: Describes a single user subscription\n      properties:\n        callbackUrl:\n          type: string\n          description: A HTTPs url that can accept posted events. It should return 200 OK\n            for GET requests.\n        eventName:\n          type: string\n          description: Type of event of the webhook\n        eventVersion:\n          type: string\n          description: Version of event being subscribed for\n        product:\n          $ref: '#/components/schemas/Product'\n        webhookKey:\n          type: string\n          description: The unique identifier for the webhook\n        userSubscriptionKey:\n          type: string\n          description: The unique identifier for the user subscription\n        userSubscriptionState:\n          $ref: '#/components/schemas/UserSubscriptionState'\n        activationState:\n          $ref: '#/components/schemas/ActivationState'\n        createTime:\n          type: string\n          description: The create time of the webhook\n    UpdateUserSubscriptionsRequest:\n      description: Describes a single user subscription update request\n      required:\n        - webhookKey\n        - userSubscriptionKey\n      properties:\n        callbackUrl:\n          type: string\n          description: A HTTPs url that can accept posted events. It should return 200 OK\n            for GET requests.\n        webhookKey:\n          type: string\n          description: The unique identifier for the webhook\n        userSubscriptionKey:\n          type: string\n          description: The unique identifier for the user subscription\n        userSubscriptionState:\n          $ref: '#/components/schemas/UserSubscriptionState'\n    WebinarStartUrlResponse:\n      description: Describes a webinar start url\n      required:\n        - startUrl\n      properties:\n        startUrl:\n          type: string\n          description: The URL that can be used to start a webinar\n    CopyWebinar:\n      description: Describes the details of the webinar to be copied\n      properties:\n        subject:\n          type: string\n          description: The name/subject of the webinar (128 characters maximum)\n        description:\n          type: string\n          description: A description of the webinar (2048 characters maximum)\n        type:\n          description: \u003e\n            Specifies the webinar type. The default type value is\n            'single_session', which is used to create a single webinar session.\n            The possible values are 'single_session', 'series' and 'sequence'. If\n            type is set to 'single_session', a single webinar session is\n            created. If type is set to 'series', a webinar series is created. In\n            this case 2 or more timeframes must be specified for each webinar.\n            Example: 'times': [{'startTime': '...', 'endTime':'...'},\n            {'startTime': '...', 'endTime': '...'},{'startTime': '...','endTime': '...'}].\n            If type is set to 'sequence', a sequence of webinars is created. In\n            this case 2 or more timeframes must be specified for each webinar.\n            If given webinar is 'single_session', we can create 'sequence' or 'series'\n             webinar, in this case 2 or more timeframes must be specified for each webinar\n            (same example as above). If given webinar is 'series', we can create 'single_session'\n            or 'sequence' webinar with 2 or more timeframes must be specified. If given webinar\n            is simulive webinar 'sequence' type is not supported.\n          type: string\n          default: single_session\n        recordingAssetKey:\n          type: string\n          description: The recording asset with from the simulive webinar should be\n            created from. In case the recordingasset was created as an online\n            recording the simulive webinar settings, poll and surveys would be\n            copied from the webinar whose session was recorded. We can get recordingasset from [RecordingAssets](GoToWebinarV2#operation/searchAssets)\n        isOndemand:\n          type: boolean\n          default: false\n          description: A boolean flag indicating if the webinar should be ondemand\n        emailSettings:\n          $ref: '#/components/schemas/WebinarEmailSettings'\n        times:\n          description: Array with start and end time(s) for webinar\n          type: array\n          items:\n            $ref: '#/components/schemas/DateTimeRange'\n        timeZone:\n          type: string\n          description: \"The time zone where the webinar is taking place (must be a valid time zone ID, see [Date and time conventions](/guides/References/01_Date-Time/)). If this parameter is not passed, the timezone of the organizer's profile will be used\"\n    CopiedWebinar:\n      description: Describes a newly copied webinar.\n      required:\n        - webinarKey\n      properties:\n        webinarKey:\n          type: string\n          description: The unique key of the webinar.\n",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@d8de4a705adce6beeffb8dd580f8d61a7d2662dc/-/blob/openapi/gotowebinar/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/d8de4a705adce6beeffb8dd580f8d61a7d2662dc/openapi/gotowebinar/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"TollFreeCountries\": at 1:39695: parse enum values: parse value \"false\": expected type \"string\", got \"bool\""
}