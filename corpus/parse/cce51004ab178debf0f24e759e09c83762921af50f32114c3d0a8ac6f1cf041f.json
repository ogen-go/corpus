{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "nexmo.com-sms-1.0.4-openapi.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/nexmo.com-sms-1.0.4-openapi.yaml",
			"byteSize": 21091,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://rest.nexmo.com\ninfo:\n  contact:\n    email: devrel@nexmo.com\n    name: Nexmo DevRel\n    url: https://developer.nexmo.com/\n  description: With the Nexmo SMS API you can send SMS from your account and lookup\n    messages both messages that you've sent as well as messages sent to your\n    virtual numbers. Numbers are specified in E.164 format. More SMS API\n    documentation is at <https://developer.nexmo.com/messaging/sms/overview>\n  title: SMS\n  version: 1.0.4\n  x-origin:\n    - converter:\n        url: https://github.com/lucybot/api-spec-converter\n        version: 2.7.31\n      format: openapi\n      url: https://raw.githubusercontent.com/nexmo/api-specification/master/definitions/sms.yml\n      version: \"3.0\"\n  x-providerName: nexmo.com\n  x-serviceName: sms\npaths:\n  \"/sms/{format}\":\n    post:\n      callbacks:\n        delivery-receipt:\n          \"{$request.body#/callback}\":\n            post:\n              description: The following are parameters sent in as a [delivery\n                receipt](https://developer.nexmo.com/messaging/sms/guides/delivery-receipts)\n                callback. You can subscribe to\n                [webhooks](https://developer.nexmo.com/concepts/guides/webhooks)\n                to receive notification when the delivery status of an SMS that\n                you have sent with Nexmo changes.\n              operationId: delivery-receipt\n              requestBody:\n                content:\n                  application/json:\n                    schema:\n                      $ref: \"#/components/schemas/DeliveryReceipt\"\n                required: true\n              responses:\n                \"200\":\n                  description: Your server returns this code if it accepts the callback\n              summary: Delivery Receipt\n              x-example-path: /webhooks/delivery-receipt\n      description: Send an outbound SMS from your Nexmo account\n      operationId: send-an-sms\n      parameters:\n        - description: The format of the response\n          in: path\n          name: format\n          required: true\n          schema:\n            default: json\n            enum:\n              - json\n              - xml\n            example: json\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/NewMessage\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SMS\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/MessageXmlWrapper\"\n          description: Success\n      summary: Send an SMS\n      x-code-example-path: messaging.sms.send\ncomponents:\n  schemas:\n    DeliveryReceipt:\n      properties:\n        err-code:\n          description: The status of the request. Will be a non `0` value if there has been\n            an error. See the [Delivery Receipt\n            documentation](https://developer.nexmo.com/messaging/sms/guides/delivery-receipts#dlr-error-codes)\n            for more details\n          example: \"0\"\n          type: string\n        message-timestamp:\n          description: The time when Nexmo started to push this Delivery Receipt to your\n            webhook endpoint.\n          example: 2020-01-01T12:00:00.000Z\n          type: string\n        messageId:\n          description: The Nexmo ID for this message.\n          example: 0A0000001234567B\n          type: string\n        msisdn:\n          description: The number the message was sent to. Numbers are specified in E.164\n            format.\n          example: \"447700900000\"\n          type: string\n        network-code:\n          description: The Mobile Country Code Mobile Network Code (MCCMNC) of the carrier\n            this phone number is registered with.\n          example: \"12345\"\n          type: string\n        price:\n          description: The cost of the message\n          example: \"0.03330000\"\n          type: string\n        scts:\n          description: When the DLR was recieved from the carrier in the following format\n            `YYMMDDHHMM`. For example, `2001011400` is at `2020-01-01 14:00`\n          example: \"2001011400\"\n          type: string\n        status:\n          description: A code that explains where the message is in the delivery process.\n          example: delivered\n          type: string\n          x-possible-values:\n            - delivered\n            - expired\n            - failed\n            - rejected\n            - accepted\n            - buffered\n            - unknown\n        to:\n          description: The SenderID you set in `from` in your request.\n          example: AcmeInc\n          type: string\n      type: object\n    Error:\n      properties:\n        message-count:\n          description: The amount of messages in the request\n          example: 1\n          type: string\n        messages:\n          items:\n            $ref: \"#/components/schemas/ErrorMessage\"\n          type: array\n      type: object\n    ErrorMessage:\n      properties:\n        error-text:\n          description: The description of the error\n          example: Missing to param\n          type: string\n        status:\n          description: The error status of the message\n          example: \"2\"\n          type: string\n      type: object\n    InboundMessage:\n      properties:\n        concat:\n          description: True - if this is a concatenated message. This field does not exist\n            if it is a single message\n          example: \"true\"\n          type: string\n        concat-part:\n          description: The number of this part in the message. Counting starts at 1.\n          example: \"2\"\n          type: string\n        concat-ref:\n          description: The transaction reference. All parts of this message share this\n            value.\n          example: \"1\"\n          type: string\n        concat-total:\n          description: The number of parts in this concatenated message.\n          example: \"3\"\n          type: string\n        data:\n          description: The content of this message, if type is binary.\n          format: binary\n          type: string\n        keyword:\n          description: The first word in the message body. This is typically used with\n            short codes.\n          example: Hello\n          type: string\n        message-timestamp:\n          description: The time when Nexmo started to push this Delivery Receipt to your\n            webhook endpoint.\n          example: 2020-01-01T12:00:00.000Z\n          type: string\n        messageId:\n          description: The ID of the message\n          example: 0A0000000123ABCD1\n          type: string\n        msisdn:\n          description: The phone number that this inbound message was sent from. Numbers\n            are specified in E.164 format.\n          example: \"447700900001\"\n          type: string\n        nonce:\n          description: A random string that forms part of the signed set of parameters, it\n            adds an extra element of unpredictability into the signature for the\n            request. You use the nonce and timestamp parameters with your shared\n            secret to calculate and validate the signature for inbound messages.\n          example: aaaaaaaa-bbbb-cccc-dddd-0123456789ab\n          type: string\n        text:\n          description: The message body for this inbound message.\n          example: Hello world\n          type: string\n        timestamp:\n          description: A unix timestamp representation of message-timestamp.\n          example: \"1578787200\"\n          type: string\n        to:\n          description: The phone number the message was sent to. **This is your virtual\n            number**. Numbers are specified in E.164 format.\n          example: \"447700900000\"\n          type: string\n        type:\n          description: >\n            Possible values are:\n\n              - `text` - standard text.\n              - `unicode` - URLencoded   unicode  . This is valid for standard GSM, Arabic, Chinese, double-encoded characters and so on.\n              - `binary` - a binary message.\n          example: text\n          type: string\n        udh:\n          description: The hex encoded User Data Header, if type is binary\n          type: string\n      required:\n        - msisdn\n        - to\n        - messageId\n        - text\n        - type\n        - keyword\n        - message-timestamp\n      type: object\n    Message:\n      properties:\n        account-ref:\n          description: \"**Advanced**: An optional string used to identify separate accounts\n            using the SMS endpoint for billing purposes. To use this feature,\n            please email [support@nexmo.com](mailto:support@nexmo.com)\"\n          example: customer1234\n          type: string\n        message-id:\n          description: The ID of the message\n          example: 0A0000000123ABCD1\n          type: string\n          xml:\n            name: messageId\n        message-price:\n          description: The cost of the message\n          example: \"0.03330000\"\n          type: string\n          xml:\n            name: messagePrice\n        network:\n          description: The ID of the network of the recipient\n          example: \"12345\"\n          type: string\n        remaining-balance:\n          description: Your remaining balance\n          example: \"3.14159265\"\n          type: string\n          xml:\n            name: remainingBalance\n        status:\n          description: The status of the message. See [Troubleshooting Failed\n            SMS](https://developer.nexmo.com/messaging/sms/guides/troubleshooting-sms).\n          example: \"0\"\n          type: string\n        to:\n          description: The number the message was sent to. Numbers are specified in E.164\n            format.\n          example: \"447700900000\"\n          type: string\n      type: object\n    MessageXmlWrapper:\n      properties:\n        messages:\n          items:\n            $ref: \"#/components/schemas/Message\"\n          properties:\n            count:\n              example: 1\n              type: integer\n              xml:\n                attribute: true\n          type: array\n          x-skip-response-description: true\n      type: object\n      xml:\n        name: mt-submission-response\n    NewMessage:\n      properties:\n        account-ref:\n          description: \"**Advanced**: An optional string used to identify separate accounts\n            using the SMS endpoint for billing purposes. To use this feature,\n            please email [support@nexmo.com](mailto:support@nexmo.com)\"\n          example: customer1234\n          type: string\n        api_key:\n          description: Your API key\n          example: abcd1234\n          maxLength: 8\n          minLength: 8\n          type: string\n        api_secret:\n          description: Your API secret. Required unless `sig` is provided\n          example: abcdef0123456789\n          maxLength: 16\n          minLength: 16\n          type: string\n        body:\n          description: \"**Advanced**: Hex encoded binary data. Depends on `type` parameter\n            having the value `binary`.\"\n          example: 638265253311\n          type: string\n        callback:\n          description: \"**Advanced**: The webhook endpoint the delivery receipt for this\n            sms is sent to. This parameter overrides the webhook endpoint you\n            set in Dashboard.\"\n          example: https://example.com/sms-dlr\n          type: string\n        client-ref:\n          description: \"**Advanced**: You can optionally include your own reference of up\n            to 40 characters.\"\n          example: my-personal-reference\n          type: string\n        from:\n          description: The name or number the message should be sent from. Alphanumeric\n            senderID's are not supported in all countries, see [Global\n            Messaging](https://developer.nexmo.com/messaging/sms/guides/global-messaging#country-specific-features)\n            for more details. If alphanumeric, spaces will be ignored. Numbers\n            are specified in E.164 format.\n          example: AcmeInc\n          type: string\n        message-class:\n          description: \"**Advanced**: The Data Coding Scheme value of the message\"\n          enum:\n            - 0\n            - 1\n            - 2\n            - 3\n          type: integer\n        protocol-id:\n          description: \"**Advanced**: The value of the [protocol\n            identifier](https://en.wikipedia.org/wiki/GSM_03.40#Protocol_Identi\\\n            fier) to use. Ensure that the value is aligned with `udh`.\"\n          example: 127\n          type: integer\n        sig:\n          description: The hash of the request parameters in alphabetical order, a\n            timestamp and the signature secret. See [Signing\n            Requests](/concepts/guides/signing-messages) for more details.\n          maxLength: 16\n          minLength: 16\n          type: string\n        status-report-req:\n          default: true\n          description: \"**Advanced**: Boolean indicating if you like to receive a [Delivery\n            Receipt](https://developer.nexmo.com/messaging/sms/building-blocks/\\\n            receive-a-delivery-receipt).\"\n          example: false\n          type: boolean\n        text:\n          description: The body of the message being sent. If your message contains\n            characters that can be encoded according to the GSM Standard and\n            Extended tables then you can set the `type` to `text`. If your\n            message contains characters outside this range, then you will need\n            to set the `type` to `unicode`.\n          example: Hello World!\n          type: string\n        title:\n          description: \"**Advanced**: The title for a wappush SMS. Depends on `type`\n            parameter having the value `wappush`.\"\n          example: Welcome\n          type: string\n        to:\n          description: The number that the message should be sent to. Numbers are specified\n            in E.164 format.\n          example: 447700900000\n          maxLength: 15\n          minLength: 7\n          pattern: \\d{7,15}\n          type: string\n        ttl:\n          default: 259200000\n          description: \"**Advanced**: The duration in milliseconds the delivery of an SMS\n            will be attempted.§§ By default Nexmo attempt delivery for 72 hours,\n            however the maximum effective value depends on the operator and is\n            typically 24 - 48 hours. We recommend this value should be kept at\n            its default or at least 30 minutes.\"\n          example: 900000\n          maximum: 604800000\n          minimum: 20000\n          type: integer\n        type:\n          default: text\n          description: \"**Advanced**: The format of the message body\"\n          enum:\n            - text\n            - binary\n            - wappush\n            - unicode\n            - vcal\n            - vcard\n          example: text\n          type: string\n        udh:\n          description: \"**Advanced**: Your custom Hex encoded [User Data\n            Header](https://en.wikipedia.org/wiki/User_Data_Header). Depends on\n            `type` parameter having the value `binary`.\"\n          example: 6050415811581\n          type: string\n        url:\n          description: \"**Advanced**: The URL of your website. Depends on `type` parameter\n            having the value `wappush`.\"\n          example: https://example.com\n          type: string\n        validity:\n          description: \"**Advanced**: The availability for an SMS in milliseconds. Depends\n            on `type` parameter having the value `wappush`.\"\n          example: 300000\n          type: string\n        vcal:\n          description: \"**Advanced**: A calendar event in [vCal\n            format](https://en.wikipedia.org/wiki/VCal). Depends on `type`\n            parameter having the value `vcal`.\"\n          format: vcal\n          type: string\n        vcard:\n          description: \"**Advanced**: A business card in [vCard\n            format](https://en.wikipedia.org/wiki/VCard). Depends on `type`\n            parameter having the value `vcard`.\"\n          format: vcard\n          type: string\n      required:\n        - api_key\n        - from\n        - to\n    SMS:\n      properties:\n        message-count:\n          description: The amount of messages in the request\n          example: 1\n          type: string\n        messages:\n          items:\n            $ref: \"#/components/schemas/Message\"\n          type: array\n      type: object\nx-errors:\n  \"1\":\n    description: Throttled. You are sending SMS faster than the account limit.\n    resolution: Refer to [What is the Throughput Limit for Outbound\n      SMS?](https://help.nexmo.com/hc/en-us/articles/203993598) for more\n      information.\n  \"2\":\n    description: Missing Parameters. Your request is missing one of the required parameters\n      `from`, `to`, `api_key`, `api_secret` or `text`.\n    resolution: Check your parameters and try again.\n  \"3\":\n    description: Invalid Parameters. The value of one or more parameters is invalid.\n    resolution: Check your parameters and try again.\n  \"4\":\n    description: Invalid Credentials. Your API key and/or secret are incorrect, invalid or\n      disabled.\n    resolution: Visit the [Dashboard](https://dashboard.nexmo.com) and check your\n      credentials.\n  \"5\":\n    description: Internal Error. An error has occurred in the platform whilst processing\n      this message.\n    resolution: If the error persists, contact support@nexmo.com.\n  \"6\":\n    description: Invalid Message. The platform was unable to process this message, for\n      example, an un-recognized number prefix.\n    resolution: N/A\n  \"7\":\n    description: Number Barred. The number you are trying to send messages to is\n      blacklisted and may not receive them.\n    resolution: N/A\n  \"8\":\n    description: Partner Account Barred. Your Nexmo account has been suspended.\n    resolution: Contact <support@nexmo.com>.\n  \"9\":\n    description: Partner Quota Violation. You do not have sufficient credit to send the\n      message.\n    resolution: Top-up and retry.\n  \"10\":\n    description: Too Many Existing Binds. The number of simultaneous connections to the\n      platform exceeds your account allocation.\n    resolution: Back-off and retry.\n  \"11\":\n    description: Account Not Enabled For HTTP. This account is not provisioned for the SMS\n      API.\n    resolution: This error usually indicates that you should use SMPP instead.\n  \"12\":\n    description: Message Too Long. The message length exceeds the maximum allowed.\n    resolution: Send shorter messages.\n  \"14\":\n    description: Invalid Signature. The signature supplied could not be verified.\n    resolution: Check the [documentation for signing\n      messages](https://developer.nexmo.com/concepts/guides/signing-messages) or\n      use one of the [SDKs](https://developer.nexmo.com/tools) to handle the\n      signing.\n  \"15\":\n    description: Invalid Sender Address. You are using a non-authorized sender ID in the\n      `from` field.\n    resolution: This is most commonly seen in North America, where a Nexmo long virtual\n      number or short code is required.\n  \"22\":\n    description: Invalid Network Code. The network code supplied was either not recognized,\n      or does not match the country of the destination address.\n    resolution: Check the network code or remove it from your request.\n  \"23\":\n    description: Invalid Callback Url. The callback URL supplied was either too long or\n      contained illegal characters.\n    resolution: Supply a valid URL for the callback.\n  \"29\":\n    description: Non-Whitelisted Destination. Your Nexmo account is still in demo mode.\n      While in demo mode you must add target numbers to your whitelisted\n      destination list.\n    resolution: Top-up your account to remove this limitation.\n  \"32\":\n    description: Signature And API Secret Disallowed. A signed request may not also present\n      an `api_secret`.\n    resolution: Remove the API secret from your request, or don't sign the message.\n  \"33\":\n    description: Number De-activated. The number you are trying to send messages to is\n      de-activated and may not receive them.\n    resolution: N/A\nx-webhooks:\n  inbound-sms:\n    \"{$request.body#/callback}\":\n      post:\n        description: >\n          If you rent one or more virtual numbers from Nexmo, inbound messages\n          to that number are sent to your [webhook\n          endpoint](https://developer.nexmo.com/concepts/guides/webhooks).\n\n\n          When you receive an inbound message, you must send a 2xx response. If you do not send a 2xx response Nexmo will resend the inbound message for the next 24 hours.\n        operationId: inbound-sms\n        requestBody:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InboundMessage\"\n          required: true\n        responses:\n          \"200\":\n            description: Your server returns this code if it accepts the callback\n        summary: Inbound SMS\n        x-example-path: /webhooks/inbound-sms\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/nexmo.com-sms-1.0.4-openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/nexmo.com-sms-1.0.4-openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: at 1:15: schemas: \"MessageXmlWrapper\": parse schema: property \"messages\": at 1:5689: parse schema: array cannot contain properties"
}