{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/rzrbld/adminio-api"
		},
		"file": {
			"name": "openapi_v3.yaml",
			"size": 0,
			"path": "openAPI/openapi_v3.yaml",
			"byteSize": 34626,
			"content": "openapi: \"3.0.0\"\ninfo:\n  description: \"Adminio API\"\n  version: \"2.4.0\"\n  title: \"Adminio API\"\n  contact:\n    name: \"rzrbld at github.com\"\n    url: \"https://github.com/rzrbld/adminio-api/issues\"\n  license:\n    name: \"MIT\"\n    url: \"https://github.com/rzrbld/adminio-api/blob/master/LICENSE\"\nservers:\n  - url: http://localhost:8080/api/v2\npaths:\n  /buckets/list:\n    get:\n      summary: List all buckets\n      operationId: listBuckets\n      tags:\n        - bucket\n      responses:\n        '200':\n          description: List all buckets\n          content:\n            application/json; charset=UTF-8:\n              schema:\n                $ref: \"#/components/schemas/BucketList\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /buckets/list-extended:\n    get:\n      summary: List all buckets with ARN's and Quota's\n      operationId: listBucketsExtended\n      tags:\n        - bucket\n      responses:\n        '200':\n          description: List all buckets plus ARN and Quota\n          content:\n            application/json; charset=UTF-8:\n              schema:\n                $ref: \"#/components/schemas/BucketListExtended\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /bucket/create:\n    post:\n      summary: Create a bucket\n      operationId: createBucket\n      tags:\n        - bucket\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                newBucket:\n                  type: string\n                  format: string\n                newBucketRegion:\n                  description: Optional parameter. if value is null value will be retrieved from ENV variable\n                  type: string\n                  format: string\n                newBucketObjectLocking:\n                  description: Optional parameter. if value is null value will be retrieved from ENV variable\n                  type: string\n                  format: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Success\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /bucket/delete:\n    post:\n      summary: Delete bucket\n      operationId: deleteBucket\n      tags:\n        - bucket\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                bucketName:\n                  type: string\n                  format: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Success\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /bucket/remove-events:\n    post:\n      summary: remove bucket events notifications\n      operationId: removeBucketEvents\n      tags:\n        - bucket\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                bucket:\n                  type: string\n                  format: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Success\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /bucket/set-events:\n    post:\n      summary: Set bucket events\n      operationId: setBucketEvents\n      tags:\n        - bucket\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                bucket:\n                  type: string\n                  format: string\n                eventTypes:\n                  type: string\n                  format: string\n                filterPrefix:\n                  type: string\n                  format: string\n                filterSuffix:\n                  type: string\n                  format: string\n      responses:\n        '200':\n          description: lifecycle XML string or empty string if lifecycle does not exist\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Success\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /bucket/get-events:\n    post:\n      summary: Get bucket events\n      operationId: getBucketEvents\n      tags:\n        - bucket\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                bucket:\n                  type: string\n                  format: string\n      responses:\n        '200':\n          description: return bucket event\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BucketEvent\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /bucket/get-lifecycle:\n    post:\n      summary: Get bucket lifecycle\n      operationId: getBucketLifecycle\n      tags:\n        - bucket\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                bucketName:\n                  type: string\n                  format: string\n      responses:\n        '200':\n          description: lifecycle XML string or empty string if lifecycle does not exist\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BucketLifecycle\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /bucket/set-lifecycle:\n    post:\n      summary: Set bucket lifecycle\n      operationId: setBucketLifecycle\n      tags:\n        - bucket\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                bucketName:\n                  type: string\n                  format: string\n                lifecycle:\n                  description: lifecycle XML string\n                  type: string\n                  format: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Success\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /bucket/set-quota:\n    post:\n      summary: Set bucket quota\n      operationId: setBucketQuota\n      tags:\n        - bucket\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                bucketName:\n                  type: string\n                  format: string\n                quotaType:\n                  type: string\n                  format: string\n                quotaValue:\n                  description: quota size in bytes\n                  type: string\n                  format: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Success\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /bucket/get-quota:\n    post:\n      summary: Get bucket quota\n      operationId: getBucketQuota\n      tags:\n        - bucket\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                bucketName:\n                  type: string\n                  format: string\n      responses:\n        '200':\n          description: bucket quota\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BucketQuota\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /bucket/remove-quota:\n    post:\n      summary: Remove bucket quota\n      operationId: removeBucketQuota\n      tags:\n        - bucket\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                bucketName:\n                  type: string\n                  format: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Success\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /bucket/set-tags:\n    post:\n      summary: Set bucket tags\n      operationId: setBucketTags\n      tags:\n        - bucket\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                bucketName:\n                  type: string\n                  format: string\n                bucketTags:\n                  description: comma separated list of tags. e.g. `tag1=value1\u0026tag2=value2`\n                  type: string\n                  format: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Success\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /bucket/get-tags:\n    post:\n      summary: Get bucket tags\n      operationId: getBucketTags\n      tags:\n        - bucket\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                bucketName:\n                  type: string\n                  format: string\n      responses:\n        '200':\n          description: bucket tags\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BucketTags\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /bucket/get-policy:\n    post:\n      summary: Get bucket policy\n      operationId: getBucketPolicy\n      tags:\n        - bucket\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                bucketName:\n                  type: string\n                  format: string\n      responses:\n        '200':\n          description: bucket policy\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BucketPolicy\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /bucket/set-policy:\n    post:\n      summary: Set bucket policy\n      operationId: setBucketPolicy\n      tags:\n        - bucket\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                bucketName:\n                  type: string\n                  format: string\n                bucketPolicy:\n                  description: predefined values none, upload, download, public or custom json string\n                  type: string\n                  format: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Success\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /bucket/set-encryption:\n    post:\n      summary: Set bucket encryption\n      operationId: setBucketEncryption\n      tags:\n        - bucket\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                bucketName:\n                  type: string\n                  format: string\n                bucketEncryptionType:\n                  description: available options is sse-kms ans sse-s3\n                  type: string\n                  format: string\n                kmsMasterKey:\n                  description: master key ID if use sse-kms\n                  type: string\n                  format: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Success\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /bucket/get-encryption:\n    post:\n      summary: Get bucket encryption\n      operationId: getBucketEncryption\n      tags:\n        - bucket\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                bucketName:\n                  type: string\n                  format: string\n      responses:\n        '200':\n          description: bucket encryption\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BucketEncryption\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /bucket/remove-encryption:\n    post:\n      summary: Remove bucket encryption\n      operationId: removeBucketEncryption\n      tags:\n        - bucket\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                bucketName:\n                  type: string\n                  format: string\n      responses:\n        '200':\n          description: bucket encryption removed\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Success\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /users/list:\n    get:\n      summary: List all users\n      operationId: listUsers\n      tags:\n        - user\n      responses:\n        '200':\n          description: List all users\n          content:\n            application/json; charset=UTF-8:\n              schema:\n                $ref: \"#/components/schemas/UserList\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /user/set-status:\n    post:\n      summary: Set User status\n      operationId: setUserStatus\n      tags:\n        - user\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                accessKey:\n                  type: string\n                  format: string\n                status:\n                  enum: [enabled, disabled]\n                  type: string\n                  format: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Success\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /user/delete:\n    post:\n      summary: Delete User\n      operationId: deleteUser\n      tags:\n        - user\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                accessKey:\n                  type: string\n                  format: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Success\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /user/create:\n    post:\n      summary: Create User\n      operationId: createUser\n      tags:\n        - user\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                accessKey:\n                  type: string\n                  format: string\n                secretKey:\n                  type: string\n                  format: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Success\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /user/create-extended:\n    post:\n      summary: Create User with bounded policy\n      operationId: createUserWPolicy\n      tags:\n        - user\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                accessKey:\n                  type: string\n                  format: string\n                secretKey:\n                  type: string\n                  format: string\n                policyName:\n                  type: string\n                  format: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Success\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /user/update:\n    post:\n      summary: Update User - change policy or status\n      operationId: updateUser\n      tags:\n        - user\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                accessKey:\n                  type: string\n                  format: string\n                secretKey:\n                  type: string\n                  format: string\n                policyName:\n                  type: string\n                  format: string\n                status:\n                  type: string\n                  format: string\n                  enum: [enabled, disabled]\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Success\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /policies/list:\n    get:\n      summary: List all policies\n      operationId: listPolicy\n      tags:\n        - policy\n      responses:\n        '200':\n          description: List all policies\n          content:\n            application/json; charset=UTF-8:\n              schema:\n                $ref: \"#/components/schemas/PolicyList\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /policy/create:\n    post:\n      summary: Create policy\n      operationId: createPolicy\n      tags:\n        - policy\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                policyName:\n                  type: string\n                  format: string\n                policyString:\n                  type: string\n                  format: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Success\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /policy/delete:\n    post:\n      summary: Delete policy\n      operationId: deletePolicy\n      tags:\n        - policy\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                policyName:\n                  type: string\n                  format: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Success\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /policy/update:\n    post:\n      summary: Bound policy to user or group\n      operationId: setPolicy\n      tags:\n        - policy\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                policyName:\n                  description: Ploicy Name\n                  type: string\n                  format: string\n                entityName:\n                  description: Group or User name\n                  type: string\n                  format: string\n                isGroup:\n                  type: boolean\n                  format: boolean\n                  enum: [true,false]\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Success\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /group/set-status:\n    post:\n      summary: Group set status\n      operationId: groupSetStatus\n      tags:\n        - group\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                group:\n                  description: Group Name\n                  type: string\n                  format: string\n                status:\n                  type: boolean\n                  format: boolean\n                  enum: [enabled,disabled]\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Success\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /group/get-description:\n    post:\n      summary: Group get description\n      operationId: groupGetDescription\n      tags:\n        - group\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                group:\n                  description: Group Name\n                  type: string\n                  format: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GroupInfo\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /group/update-members:\n    post:\n      summary: Update Group members\n      operationId: groupUpdateMembers\n      tags:\n        - group\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                group:\n                  description: Group Name\n                  type: string\n                  format: string\n                members:\n                  description: multiple usernames with comma delimiter\n                  type: string\n                  format: string\n                IsRemove:\n                  description: set false if you need remove members from group\n                  type: boolean\n                  format: boolean\n                  enum: [true,false]\n\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Success\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /groups/list:\n    get:\n      summary: List all groups\n      operationId: groupsList\n      tags:\n        - group\n      responses:\n        '200':\n          description: List all groups\n          content:\n            application/json; charset=UTF-8:\n              schema:\n                $ref: \"#/components/schemas/GroupList\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /server/common-info:\n    get:\n      summary: Server basic info\n      operationId: serverCommonInfo\n      tags:\n        - server\n      responses:\n        '200':\n          description: Server Info\n          content:\n            application/json; charset=UTF-8:\n              schema:\n                $ref: \"#/components/schemas/ServerInfo\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /server/disk-info:\n    get:\n      summary: Server disk info\n      operationId: serverDiskInfo\n      tags:\n        - server\n      responses:\n        '200':\n          description: Server Disk Info\n          content:\n            application/json; charset=UTF-8:\n              schema:\n                $ref: \"#/components/schemas/ServerDisk\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /kv/get:\n    post:\n      summary: get value by key\n      operationId: kvGet\n      tags:\n        - kv\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                keyString:\n                  description: Group Name\n                  type: string\n                  format: string\n      responses:\n        '200':\n          description: base64 string\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetKV\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n\ncomponents:\n  schemas:\n    GetKV:\n      type: string\n    ServerDisk:\n      type: object\n      properties:\n        lastUpdate:\n          type: string\n        objectsCount:\n          type: integer\n        objectsTotalSize:\n          type: integer\n        objectsSizesHistogram:\n          type: object\n          properties:\n           BETWEEN_1024_B_AND_1_MB:\n             type: integer\n           BETWEEN_10_MB_AND_64_MB:\n             type: integer\n           BETWEEN_128_MB_AND_512_MB:\n             type: integer\n           BETWEEN_1_MB_AND_10_MB:\n             type: integer\n           BETWEEN_64_MB_AND_128_MB:\n             type: integer\n           GREATER_THAN_512_MB:\n             type: integer\n           LESS_THAN_1024_B:\n             type: integer\n        bucketsCount:\n          type: integer\n        bucketsSizes:\n          type: object\n    ServerInfo:\n      type: object\n      properties:\n       mode:\n         type: string\n       sqsARN:\n         type: array\n         items:\n           type: string\n       deploymentID:\n         type: string\n       buckets:\n         type: object\n         properties:\n           count:\n             type: integer\n       objects:\n         type: object\n         properties:\n           count:\n             type: integer\n       usage:\n         type: object\n         properties:\n           size:\n             type: integer\n       services:\n         type: object\n         properties:\n           vault:\n             type: object\n             properties:\n               status:\n                 type: string\n           ldap:\n             type: object\n           notifications:\n             type: array\n             items:\n               type: object\n               properties:\n                 kafka:\n                   type: array\n                   items:\n                     type: object\n       backend:\n         type: object\n         properties:\n           backendType:\n             type: string\n       servers:\n         type: array\n         items:\n           type: object\n           properties:\n             state:\n               type: string\n             endpoint:\n               type: string\n             uptime:\n               type: string\n             version:\n               type: string\n             commitID:\n               type: string\n             network:\n               type: object\n             disks:\n               type: array\n               items:\n                 type: object\n                 properties:\n                   path:\n                     type: string\n                   state:\n                     type: string\n                   totalspace:\n                     type: string\n                   usedspace:\n                     type: string\n    UserInfo:\n     properties:\n       name:\n         type: object\n         properties:\n           policyName:\n             type: string\n           status:\n             type: string\n    GroupInfo:\n     properties:\n       name:\n         type: string\n       status:\n         type: string\n       members:\n         type: array\n         items:\n           type: string\n       policy:\n         type: string\n    PolicyInfo:\n     properties:\n       name:\n         type: object\n         properties:\n           Version:\n             type: string\n           Statement:\n             type: array\n             items:\n               type: object\n               properties:\n                 Effect:\n                   type: string\n                 Action:\n                   type: array\n                   items:\n                     type: string\n                 Resource:\n                   type: array\n                   items:\n                     type: string\n    UserList:\n      type: object\n      $ref: \"#/components/schemas/UserInfo\"\n    PolicyList:\n      type: object\n      $ref: \"#/components/schemas/PolicyInfo\"\n    GroupList:\n      type: array\n      items:\n        type: string\n    BucketEncryption:\n     type: object\n     properties:\n       XMLname:\n         type: object\n         properties:\n           Space:\n             type: string\n           Local:\n             type: string\n       Rules:\n         type: array\n         items:\n           type: object\n    BucketEvent:\n     type: object\n     properties:\n       XMLname:\n         type: object\n         properties:\n           Space:\n             type: string\n           Local:\n             type: string\n       LambdaConfigs:\n         type: object\n       TopicConfigs:\n         type: object\n       QueueConfigs:\n         type: object\n    BucketQuota:\n     type: object\n     properties:\n       quota:\n         type: integer\n       quotatype:\n         type: string\n    BucketTags:\n     type: object\n    BucketPolicy:\n     type: object\n     properties:\n       policy:\n         type: string\n       name:\n         type: string\n    BucketInfo:\n     type: object\n     properties:\n       name:\n         type: string\n       creationDate:\n         type: string\n    BucketList:\n      type: array\n      items:\n       $ref: \"#/components/schemas/BucketInfo\"\n    BucketListExtended:\n      type: array\n      items:\n       type: object\n       properties:\n         events:\n           $ref: \"#/components/schemas/BucketEvent\"\n         info:\n           $ref: \"#/components/schemas/BucketInfo\"\n         quota:\n           $ref: \"#/components/schemas/BucketQuota\"\n         tags:\n           $ref: \"#/components/schemas/BucketTags\"\n         policy:\n           type: string\n         encryption:\n            $ref: \"#/components/schemas/BucketEncryption\"\n    BucketLifecycle:\n      type: string\n    Error:\n      type: object\n      required:\n        - error\n      properties:\n        error:\n          type: string\n    Success:\n      type: object\n      example: {\"Success\":\"OK\"}\n      required:\n        - Success\n      properties:\n        Success:\n          type: string\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /group/set-status: post: operation \"groupSetStatus\": requestBody: content: multipart/form-data: schema: parse schema: property \"status\": parse enum values: parse value \"\\\"enabled\\\"\": expected type \"boolean\", got \"string\""
}