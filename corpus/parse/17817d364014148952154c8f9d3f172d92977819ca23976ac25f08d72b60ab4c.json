{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/swagger-api/swagger-parser"
		},
		"file": {
			"name": "troublesome.yaml",
			"size": 0,
			"path": "modules/swagger-parser-v3/src/test/resources/troublesome.yaml",
			"byteSize": 6105,
			"content": "openapi: 3.0.0\nservers:\n  - url: /sonos\ninfo:\n  description: A REST API for the Sonos platform\n  version: 1.0.0\n  title: Sonos API\npaths:\n  '/{playerId}/back':\n    post:\n      description: move to previous track\n      x-swagger-router-controller: Sound\n      tags:\n        - sound\n      operationId: previousTrack\n      parameters:\n        - name: playerId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ok\n  '/{playerId}/volume/{volume}':\n    post:\n      description: sets player volume\n      x-swagger-router-controller: Sound\n      tags:\n        - sound\n      operationId: setPlayerVolume\n      parameters:\n        - name: playerId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: volume\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n            minimum: 0\n            maximum: 100\n      responses:\n        '200':\n          description: ok\n  '/{playerId}/incrementVolume/{updown}':\n    post:\n      description: incremental player volume\n      x-swagger-router-controller: Sound\n      tags:\n        - sound\n      operationId: incrementVolume\n      parameters:\n        - name: playerId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: updown\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n            enum:\n              - '-1'\n              - '1'\n      responses:\n        '200':\n          description: ok\n  '/{playerId}/resume':\n    post:\n      description: resume a player\n      x-swagger-router-controller: Sound\n      tags:\n        - sound\n      operationId: resumePlayer\n      parameters:\n        - name: playerId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ok\n  '/{playerId}/next':\n    post:\n      description: move to next track\n      x-swagger-router-controller: Sound\n      tags:\n        - sound\n      operationId: nextTrack\n      parameters:\n        - name: playerId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ok\n  /:\n    get:\n      x-swagger-router-controller: Sound\n      tags:\n        - sound\n      operationId: soundSummary\n      responses:\n        '200':\n          description: ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SoundSummary'\n  '/{playerId}/volume':\n    get:\n      description: gets player volume\n      x-swagger-router-controller: Sound\n      tags:\n        - sound\n      operationId: getPlayerVolume\n      parameters:\n        - name: playerId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ok\n          content:\n            application/json:\n              schema:\n                type: integer\n                format: int32\n  '/{playerId}':\n    get:\n      x-swagger-router-controller: Sound\n      tags:\n        - sound\n      operationId: playerStatus\n      parameters:\n        - $ref: '#/components/parameters/playerId'\n      responses:\n        '200':\n          description: ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SoundZoneStatus'\n  '/{playerId}/pause':\n    post:\n      description: pause a player\n      x-swagger-router-controller: Sound\n      tags:\n        - sound\n      operationId: pausePlayer\n      parameters:\n        - name: playerId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ok\ncomponents:\n  parameters:\n    playerId:\n      name: playerId\n      in: path\n      required: true\n      schema:\n        type: string\n    volume:\n      name: volume\n      in: path\n      required: true\n      schema:\n        type: integer\n        format: int32\n        minimum: 0\n        maximum: 100\n  schemas:\n    SoundSummary:\n      properties:\n        zones:\n          type: array\n          items:\n            $ref: '#/components/schemas/SoundZone'\n    SoundZone:\n      properties:\n        id:\n          type: integer\n          format: int32\n        name:\n          type: string\n        description:\n          type: string\n        address:\n          type: string\n        zoneType:\n          type: integer\n          format: int32\n    SoundZoneStatus:\n      properties:\n        currentTrack:\n          $ref: '#/components/schemas/ActiveTrack'\n        nextTrack:\n          $ref: '#/components/schemas/Track'\n        relTime:\n          type: integer\n          format: int32\n        stateTime:\n          type: integer\n          format: int64\n        volume:\n          type: integer\n          format: int32\n        mute:\n          type: boolean\n        trackNo:\n          type: integer\n          format: int32\n        currentState:\n          type: string\n      description: status of a single sound zone\n    ActiveTrack:\n      required:\n        - artist\n        - title\n        - album\n        - albumArtURI\n        - duration\n        - type\n      properties:\n        artist:\n          type: string\n        uri:\n          type: string\n        streamInfo:\n          type: string\n        album:\n          type: string\n        duration:\n          type: integer\n          format: int32\n        title:\n          type: string\n        albumArtURI:\n          type: string\n          format: URI\n        type:\n          type: string\n        radioShowMeta:\n          type: string\n    Track:\n      required:\n        - title\n        - uri\n        - albumArtURI\n        - artist\n        - album\n      properties:\n        title:\n          type: string\n        uri:\n          type: string\n        albumArtURI:\n          type: string\n          format: URI\n        artist:\n          type: string\n        album:\n          type: string",
			"canonicalURL": "/github.com/swagger-api/swagger-parser@ff232fc7428d584c08410544f33f7ce8eb6a77a3/-/blob/modules/swagger-parser-v3/src/test/resources/troublesome.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/swagger-api/swagger-parser/blob/ff232fc7428d584c08410544f33f7ce8eb6a77a3/modules/swagger-parser-v3/src/test/resources/troublesome.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/{playerId}/incrementVolume/{updown}\": at 1:2592: post: operation \"incrementVolume\": at 1:2600: parameters: parse parameter \"updown\": at 1:2764: schema: at 1:2818: parse enum values: parse value \"\\\"-1\\\"\": expected type \"integer\", got \"string\""
}