{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/amazonaws.com/iot1click-devices/2018-05-14/openapi.yaml",
			"byteSize": 43481,
			"content": "openapi: 3.0.0\ninfo:\n  version: '2018-05-14'\n  x-release: v4\n  title: AWS IoT 1-Click Devices Service\n  description: |-\n    Describes all of the AWS IoT 1-Click device-related API operations for the service.\n     Also provides sample requests, responses, and errors for the supported web services\n     protocols.\n  x-logo:\n    url: 'https://twitter.com/awscloud/profile_image?size=original'\n    backgroundColor: '#FFFFFF'\n  termsOfService: 'https://aws.amazon.com/service-terms/'\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: 'https://github.com/mermade/aws2openapi'\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: 'http://www.apache.org/licenses/'\n  x-providerName: amazonaws.com\n  x-serviceName: iot1click-devices\n  x-aws-signingName: iot1click\n  x-origin:\n    - contentType: application/json\n      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/iot1click-devices-2018-05-14.normal.json'\n      converter:\n        url: 'https://github.com/mermade/aws2openapi'\n        version: 1.0.0\n      x-apisguru-driver: external\n  x-apiClientRegistration:\n    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: 'https://docs.aws.amazon.com/iot1click/'\nservers:\n  - url: 'http://devices.iot1click.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The AWS IoT 1-Click Devices Service multi-region endpoint\n  - url: 'https://devices.iot1click.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The AWS IoT 1-Click Devices Service multi-region endpoint\n  - url: 'http://devices.iot1click.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AWS IoT 1-Click Devices Service endpoint for China (Beijing) and China (Ningxia)\n  - url: 'https://devices.iot1click.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AWS IoT 1-Click Devices Service endpoint for China (Beijing) and China (Ningxia)\nx-hasEquivalentPaths: true\npaths:\n  '/claims/{claimCode}':\n    put:\n      operationId: ClaimDevicesByClaimCode\n      description: |-\n        Adds device(s) to your account (i.e., claim one or more devices) if and only if you\n         received a claim code with the device(s).\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClaimDevicesByClaimCodeResponse'\n        '480':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '481':\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalFailureException'\n        '482':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n      parameters:\n        - name: claimCode\n          in: path\n          required: true\n          description: 'The claim code, starting with \"C-\", as provided by the device manufacturer.'\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/devices/{deviceId}':\n    get:\n      operationId: DescribeDevice\n      description: |-\n        Given a device ID, returns a DescribeDeviceResponse object describing the\n         details of the device.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeDeviceResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '482':\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalFailureException'\n      parameters:\n        - name: deviceId\n          in: path\n          required: true\n          description: The unique identifier of the device.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/devices/{deviceId}/finalize-claim':\n    put:\n      operationId: FinalizeDeviceClaim\n      description: |-\n        \u003cp\u003eGiven a device ID, finalizes the claim request for the associated device.\u003c/p\u003e\u003cnote\u003e\n         \u003cp\u003eClaiming a device consists of initiating a claim, then publishing a device event,\n         and finalizing the claim. For a device of type button, a device event can\n         be published by simply clicking the device.\u003c/p\u003e\n         \u003c/note\u003e\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FinalizeDeviceClaimResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '482':\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalFailureException'\n        '483':\n          description: PreconditionFailedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PreconditionFailedException'\n        '484':\n          description: ResourceConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceConflictException'\n      parameters:\n        - name: deviceId\n          in: path\n          required: true\n          description: The unique identifier of the device.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                tags:\n                  description: |-\n                    \u003cp\u003eA collection of key/value pairs defining the resource tags. For example, {\n                     \"tags\": {\"key1\": \"value1\", \"key2\": \"value2\"} }. For more information, see \u003ca href=\"https://aws.amazon.com/answers/account-management/aws-tagging-strategies/\"\u003eAWS\n                     Tagging Strategies\u003c/a\u003e.\u003c/p\u003e\u003cp\u003e\n                     \n                     \u003c/p\u003e\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/__string'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/devices/{deviceId}/methods':\n    get:\n      operationId: GetDeviceMethods\n      description: 'Given a device ID, returns the invokable methods associated with the device.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetDeviceMethodsResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '482':\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalFailureException'\n      parameters:\n        - name: deviceId\n          in: path\n          required: true\n          description: The unique identifier of the device.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      operationId: InvokeDeviceMethod\n      description: |-\n        Given a device ID, issues a request to invoke a named device method (with possible\n         parameters). See the \"Example POST\" code snippet below.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvokeDeviceMethodResponse'\n        '480':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '481':\n          description: PreconditionFailedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PreconditionFailedException'\n        '482':\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalFailureException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: RangeNotSatisfiableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RangeNotSatisfiableException'\n        '485':\n          description: ResourceConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceConflictException'\n      parameters:\n        - name: deviceId\n          in: path\n          required: true\n          description: The unique identifier of the device.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                deviceMethod:\n                  description: The device method to invoke.\n                  type: object\n                  properties:\n                    DeviceType:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: deviceType\n                          description: 'The type of the device, such as \"button\".'\n                    MethodName:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: methodName\n                          description: The name of the method applicable to the deviceType.\n                deviceMethodParameters:\n                  description: A JSON encoded string containing the device method request parameters.\n                  type: string\n  '/devices/{deviceId}/initiate-claim':\n    put:\n      operationId: InitiateDeviceClaim\n      description: |-\n        \u003cp\u003eGiven a device ID, initiates a claim request for the associated device.\u003c/p\u003e\u003cnote\u003e\n         \u003cp\u003eClaiming a device consists of initiating a claim, then publishing a device event,\n         and finalizing the claim. For a device of type button, a device event can\n         be published by simply clicking the device.\u003c/p\u003e\n         \u003c/note\u003e\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InitiateDeviceClaimResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '482':\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalFailureException'\n        '483':\n          description: ResourceConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceConflictException'\n      parameters:\n        - name: deviceId\n          in: path\n          required: true\n          description: The unique identifier of the device.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/devices/{deviceId}/events#fromTimeStamp\u0026toTimeStamp':\n    get:\n      operationId: ListDeviceEvents\n      description: |-\n        Using a device ID, returns a DeviceEventsResponse object containing an\n         array of events for the device.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListDeviceEventsResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: RangeNotSatisfiableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RangeNotSatisfiableException'\n        '482':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '483':\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalFailureException'\n      parameters:\n        - name: deviceId\n          in: path\n          required: true\n          description: The unique identifier of the device.\n          schema:\n            type: string\n        - name: fromTimeStamp\n          in: query\n          required: true\n          description: |-\n            The start date for the device event query, in ISO8061 format. For example,\n             2018-03-28T15:45:12.880Z\n             \n          schema:\n            type: string\n            format: date-time\n        - name: maxResults\n          in: query\n          required: false\n          description: |-\n            The maximum number of results to return per request. If not set, a default value of\n             100 is used.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 250\n        - name: nextToken\n          in: query\n          required: false\n          description: The token to retrieve the next set of results.\n          schema:\n            type: string\n        - name: toTimeStamp\n          in: query\n          required: true\n          description: |-\n            The end date for the device event query, in ISO8061 format. For example,\n             2018-03-28T15:45:12.880Z\n             \n          schema:\n            type: string\n            format: date-time\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /devices:\n    get:\n      operationId: ListDevices\n      description: Lists the 1-Click compatible devices associated with your AWS account.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListDevicesResponse'\n        '480':\n          description: RangeNotSatisfiableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RangeNotSatisfiableException'\n        '481':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '482':\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalFailureException'\n      parameters:\n        - name: deviceType\n          in: query\n          required: false\n          description: 'The type of the device, such as \"button\".'\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          required: false\n          description: |-\n            The maximum number of results to return per request. If not set, a default value of\n             100 is used.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 250\n        - name: nextToken\n          in: query\n          required: false\n          description: The token to retrieve the next set of results.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/tags/{resource-arn}':\n    get:\n      operationId: ListTagsForResource\n      description: Lists the tags associated with the specified resource ARN.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListTagsForResourceResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalFailureException'\n      parameters:\n        - name: resource-arn\n          in: path\n          required: true\n          description: The ARN of the resource.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      operationId: TagResource\n      description: |-\n        Adds or updates the tags associated with the resource ARN. See \u003ca href=\"https://docs.aws.amazon.com/iot-1-click/latest/developerguide/1click-appendix.html#1click-limits\"\u003eAWS IoT 1-Click Service Limits\u003c/a\u003e for the maximum number of tags allowed per\n         resource.\n      responses:\n        '204':\n          description: Success\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '482':\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalFailureException'\n      parameters:\n        - name: resource-arn\n          in: path\n          required: true\n          description: The ARN of the resource.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - tags\n              properties:\n                tags:\n                  description: |-\n                    \u003cp\u003eA collection of key/value pairs defining the resource tags. For example, {\n                     \"tags\": {\"key1\": \"value1\", \"key2\": \"value2\"} }. For more information, see \u003ca href=\"https://aws.amazon.com/answers/account-management/aws-tagging-strategies/\"\u003eAWS\n                     Tagging Strategies\u003c/a\u003e.\u003c/p\u003e\u003cp\u003e\n                     \n                     \u003c/p\u003e\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/__string'\n  '/devices/{deviceId}/unclaim':\n    put:\n      operationId: UnclaimDevice\n      description: Disassociates a device from your AWS account using its device ID.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnclaimDeviceResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '482':\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalFailureException'\n      parameters:\n        - name: deviceId\n          in: path\n          required: true\n          description: The unique identifier of the device.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/tags/{resource-arn}#tagKeys':\n    delete:\n      operationId: UntagResource\n      description: |-\n        Using tag keys, deletes the tags (key/value pairs) associated with the specified\n         resource ARN.\n      responses:\n        '204':\n          description: Success\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '482':\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalFailureException'\n      parameters:\n        - name: resource-arn\n          in: path\n          required: true\n          description: The ARN of the resource.\n          schema:\n            type: string\n        - name: tagKeys\n          in: query\n          required: true\n          description: 'A collections of tag keys. For example, {\"key1\",\"key2\"}'\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/__string'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/devices/{deviceId}/state':\n    put:\n      operationId: UpdateDeviceState\n      description: |-\n        Using a Boolean value (true or false), this operation\n         enables or disables the device given a device ID.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateDeviceStateResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '482':\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalFailureException'\n      parameters:\n        - name: deviceId\n          in: path\n          required: true\n          description: The unique identifier of the device.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                enabled:\n                  description: |-\n                    If true, the device is enabled. If false, the device is\n                     disabled.\n                  type: boolean\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      schema:\n        type: string\n      required: false\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    ClaimDevicesByClaimCodeResponse:\n      type: object\n      properties:\n        ClaimCode:\n          allOf:\n            - $ref: '#/components/schemas/__stringMin12Max40'\n            - xml:\n                name: claimCode\n              description: The claim code provided by the device manufacturer.\n        Total:\n          allOf:\n            - $ref: '#/components/schemas/__integer'\n            - xml:\n                name: total\n              description: |-\n                The total number of devices associated with the claim code that has been processed in\n                 the claim request.\n    InvalidRequestException: {}\n    InternalFailureException: {}\n    ForbiddenException: {}\n    DescribeDeviceResponse:\n      type: object\n      properties:\n        DeviceDescription:\n          allOf:\n            - $ref: '#/components/schemas/DeviceDescription'\n            - xml:\n                name: deviceDescription\n              description: Device details.\n    ResourceNotFoundException: {}\n    FinalizeDeviceClaimResponse:\n      type: object\n      properties:\n        State:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: state\n              description: The device's final claim state.\n    __string:\n      type: string\n    PreconditionFailedException: {}\n    ResourceConflictException: {}\n    GetDeviceMethodsResponse:\n      type: object\n      properties:\n        DeviceMethods:\n          allOf:\n            - $ref: '#/components/schemas/__listOfDeviceMethod'\n            - xml:\n                name: deviceMethods\n              description: List of available device APIs.\n    InitiateDeviceClaimResponse:\n      type: object\n      properties:\n        State:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: state\n              description: The device's final claim state.\n    InvokeDeviceMethodResponse:\n      type: object\n      properties:\n        DeviceMethodResponse:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: deviceMethodResponse\n              description: A JSON encoded string containing the device method response.\n    RangeNotSatisfiableException: {}\n    ListDeviceEventsResponse:\n      type: object\n      properties:\n        Events:\n          allOf:\n            - $ref: '#/components/schemas/__listOfDeviceEvent'\n            - xml:\n                name: events\n              description: |-\n                An array of zero or more elements describing the event(s) associated with the\n                 device.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: nextToken\n              description: The token to retrieve the next set of results.\n    ListDevicesResponse:\n      type: object\n      properties:\n        Devices:\n          allOf:\n            - $ref: '#/components/schemas/__listOfDeviceDescription'\n            - xml:\n                name: devices\n              description: A list of devices.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: nextToken\n              description: The token to retrieve the next set of results.\n    ListTagsForResourceResponse:\n      type: object\n      properties:\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/__mapOf__string'\n            - xml:\n                name: tags\n              description: |-\n                \u003cp\u003eA collection of key/value pairs defining the resource tags. For example, {\n                 \"tags\": {\"key1\": \"value1\", \"key2\": \"value2\"} }. For more information, see \u003ca href=\"https://aws.amazon.com/answers/account-management/aws-tagging-strategies/\"\u003eAWS\n                 Tagging Strategies\u003c/a\u003e.\u003c/p\u003e\u003cp\u003e\n                 \n                 \u003c/p\u003e\n    UnclaimDeviceResponse:\n      type: object\n      properties:\n        State:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: state\n              description: The device's final claim state.\n    UpdateDeviceStateResponse:\n      type: object\n      properties: {}\n    Attributes:\n      type: object\n      properties: {}\n    ClaimDevicesByClaimCodeRequest:\n      type: object\n      title: ClaimDevicesByClaimCodeRequest\n      properties: {}\n    __stringMin12Max40:\n      type: string\n      minLength: 12\n      maxLength: 40\n    __integer:\n      type: integer\n    DescribeDeviceRequest:\n      type: object\n      title: DescribeDeviceRequest\n      properties: {}\n    DeviceDescription:\n      type: object\n      properties:\n        Arn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: arn\n              description: The ARN of the device.\n        Attributes:\n          allOf:\n            - $ref: '#/components/schemas/DeviceAttributes'\n            - xml:\n                name: attributes\n              description: |-\n                An array of zero or more elements of DeviceAttribute objects providing\n                 user specified device attributes.\n        DeviceId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: deviceId\n              description: The unique identifier of the device.\n        Enabled:\n          allOf:\n            - $ref: '#/components/schemas/__boolean'\n            - xml:\n                name: enabled\n              description: A Boolean value indicating whether or not the device is enabled.\n        RemainingLife:\n          allOf:\n            - $ref: '#/components/schemas/__doubleMin0Max100'\n            - xml:\n                name: remainingLife\n              description: |-\n                A value between 0 and 1 inclusive, representing the fraction of life remaining for the\n                 device.\n        Type:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: type\n              description: 'The type of the device, such as \"button\".'\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/__mapOf__string'\n            - xml:\n                name: tags\n              description: The tags currently associated with the AWS IoT 1-Click device.\n    Device:\n      type: object\n      properties:\n        Attributes:\n          allOf:\n            - $ref: '#/components/schemas/Attributes'\n            - xml:\n                name: attributes\n              description: The user specified attributes associated with the device for an event.\n        DeviceId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: deviceId\n              description: The unique identifier of the device.\n        Type:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: type\n              description: 'The device type, such as \"button\".'\n    DeviceAttributes:\n      type: object\n      description: |2-\n\n         DeviceAttributes is a string-to-string map specified by the user.\n      additionalProperties:\n        $ref: '#/components/schemas/__string'\n    __boolean:\n      type: boolean\n    __doubleMin0Max100:\n      type: number\n      format: double\n    __mapOf__string:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/__string'\n    DeviceEvent:\n      type: object\n      properties:\n        Device:\n          allOf:\n            - $ref: '#/components/schemas/Device'\n            - xml:\n                name: device\n              description: An object representing the device associated with the event.\n        StdEvent:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: stdEvent\n              description: A serialized JSON object representing the device-type specific event.\n    DeviceMethod:\n      type: object\n      properties:\n        DeviceType:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: deviceType\n              description: 'The type of the device, such as \"button\".'\n        MethodName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: methodName\n              description: The name of the method applicable to the deviceType.\n    FinalizeDeviceClaimRequest:\n      type: object\n      title: FinalizeDeviceClaimRequest\n      properties:\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/__mapOf__string'\n            - xml:\n                name: tags\n              description: |-\n                \u003cp\u003eA collection of key/value pairs defining the resource tags. For example, {\n                 \"tags\": {\"key1\": \"value1\", \"key2\": \"value2\"} }. For more information, see \u003ca href=\"https://aws.amazon.com/answers/account-management/aws-tagging-strategies/\"\u003eAWS\n                 Tagging Strategies\u003c/a\u003e.\u003c/p\u003e\u003cp\u003e\n                 \n                 \u003c/p\u003e\n    GetDeviceMethodsRequest:\n      type: object\n      title: GetDeviceMethodsRequest\n      properties: {}\n    __listOfDeviceMethod:\n      type: array\n      items:\n        $ref: '#/components/schemas/DeviceMethod'\n    InitiateDeviceClaimRequest:\n      type: object\n      title: InitiateDeviceClaimRequest\n      properties: {}\n    InvokeDeviceMethodRequest:\n      type: object\n      title: InvokeDeviceMethodRequest\n      properties:\n        DeviceMethod:\n          allOf:\n            - $ref: '#/components/schemas/DeviceMethod'\n            - xml:\n                name: deviceMethod\n              description: The device method to invoke.\n        DeviceMethodParameters:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: deviceMethodParameters\n              description: A JSON encoded string containing the device method request parameters.\n    __timestampIso8601:\n      type: string\n      format: date-time\n    MaxResults:\n      type: integer\n      minimum: 1\n      maximum: 250\n    ListDeviceEventsRequest:\n      type: object\n      title: ListDeviceEventsRequest\n      properties: {}\n    __listOfDeviceEvent:\n      type: array\n      items:\n        $ref: '#/components/schemas/DeviceEvent'\n    ListDevicesRequest:\n      type: object\n      title: ListDevicesRequest\n      properties: {}\n    __listOfDeviceDescription:\n      type: array\n      items:\n        $ref: '#/components/schemas/DeviceDescription'\n    ListTagsForResourceRequest:\n      type: object\n      title: ListTagsForResourceRequest\n      properties: {}\n    TagResourceRequest:\n      type: object\n      required:\n        - Tags\n      title: TagResourceRequest\n      properties:\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/__mapOf__string'\n            - xml:\n                name: tags\n              description: |-\n                \u003cp\u003eA collection of key/value pairs defining the resource tags. For example, {\n                 \"tags\": {\"key1\": \"value1\", \"key2\": \"value2\"} }. For more information, see \u003ca href=\"https://aws.amazon.com/answers/account-management/aws-tagging-strategies/\"\u003eAWS\n                 Tagging Strategies\u003c/a\u003e.\u003c/p\u003e\u003cp\u003e\n                 \n                 \u003c/p\u003e\n    UnclaimDeviceRequest:\n      type: object\n      title: UnclaimDeviceRequest\n      properties: {}\n    __listOf__string:\n      type: array\n      items:\n        $ref: '#/components/schemas/__string'\n    UntagResourceRequest:\n      type: object\n      title: UntagResourceRequest\n      properties: {}\n    UpdateDeviceStateRequest:\n      type: object\n      title: UpdateDeviceStateRequest\n      properties:\n        Enabled:\n          allOf:\n            - $ref: '#/components/schemas/__boolean'\n            - xml:\n                name: enabled\n              description: |-\n                If true, the device is enabled. If false, the device is\n                 disabled.\nsecurity:\n  - hmac: []\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/amazonaws.com/iot1click-devices/2018-05-14/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/amazonaws.com/iot1click-devices/2018-05-14/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /tags/{resource-arn}#tagKeys: delete: operation \"UntagResource\": parse path \"/tags/{resource-arn}#tagKeys\": path MUST NOT contain a fragment"
}