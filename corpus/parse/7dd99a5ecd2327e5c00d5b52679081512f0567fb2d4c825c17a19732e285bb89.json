{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/DerManoMann/openapi-verifier"
		},
		"file": {
			"name": "users.json",
			"size": 0,
			"path": "tests/specifications/users.json",
			"byteSize": 5738,
			"content": "{\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n        \"title\": \"API\",\n        \"version\": \"1.0\"\n    },\n    \"paths\": {\n        \"/users\": {\n            \"get\": {\n                \"summary\": \"Get all users\",\n                \"operationId\": \"users.index\",\n                \"parameters\": [\n                    {\n                        \"name\": \"perPage\",\n                        \"in\": \"query\",\n                        \"description\": \"Number of results\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"default\": 6\n                        }\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"in\": \"query\",\n                        \"description\": \"Page number\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"default\": 1\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Users\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"allOf\": [\n                                        {\n                                            \"$ref\": \"#components/schemas/paginate\"\n                                        },\n                                        {\n                                            \"required\": [\n                                                \"data\"\n                                            ],\n                                            \"properties\": {\n                                                \"data\": {\n                                                    \"type\": \"array\",\n                                                    \"items\": {\n                                                        \"$ref\": \"#components/schemas/user\"\n                                                    }\n                                                }\n                                            },\n                                            \"type\": \"object\"\n                                        }\n                                    ]\n                                }\n                            }\n                        }\n                    },\n                    \"401\": {\n                        \"$ref\": \"#components/responses/401\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"JWT\": []\n                    }\n                ]\n            }\n        }\n    },\n    \"components\": {\n        \"schemas\": {\n            \"user\": {\n                \"required\": [\n                    \"id\",\n                    \"name\",\n                    \"email\"\n                ],\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"integer\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"email\": {\n                        \"type\": \"string\"\n                    },\n                    \"dob\": {\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"paginate\": {\n                \"properties\": {\n                    \"links\": {\n                        \"schema\": \"links\",\n                        \"properties\": {\n                            \"first\": {\n                                \"type\": \"string\"\n                            },\n                            \"last\": {\n                                \"nullable\": true,\n                                \"type\": \"string\"\n                            },\n                            \"prev\": {\n                                \"nullable\": true,\n                                \"type\": \"string\"\n                            },\n                            \"next\": {\n                                \"nullable\": true,\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"type\": \"object\"\n                    },\n                    \"meta\": {\n                        \"schema\": \"meta\",\n                        \"properties\": {\n                            \"current_page\": {\n                                \"type\": \"integer\"\n                            },\n                            \"from\": {\n                                \"nullable\": true,\n                                \"type\": \"integer\"\n                            },\n                            \"to\": {\n                                \"nullable\": true,\n                                \"type\": \"integer\"\n                            },\n                            \"per_page\": {\n                                \"type\": \"integer\"\n                            },\n                            \"path\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"type\": \"object\"\n                    }\n                },\n                \"type\": \"object\"\n            }\n        },\n        \"responses\": {\n            \"200\": {\n                \"description\": \"Success\"\n            },\n            \"401\": {\n                \"description\": \"Unauthorized\"\n            }\n        },\n        \"securitySchemes\": {\n            \"JWT\": {\n                \"type\": \"apiKey\",\n                \"description\": \"Bearer JWT Token\",\n                \"name\": \"Authorization\",\n                \"in\": \"header\"\n            }\n        }\n    }\n}"
		}
	},
	"Error": "parse: parse spec: paths: /users: get: operation \"users.index\": responses: 200: content: \"application/json\": schema: parse schema: allOf: [0]: parse schema: resolve \"#components/schemas/paginate\": find schema: resolve \"#components/schemas/paginate\": invalid pointer \"components/schemas/paginate\": pointer must start with '/'"
}