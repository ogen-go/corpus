{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/NiklasTiede/IMDb-Clone"
		},
		"file": {
			"name": "imdb-clone-backend.yaml",
			"size": 0,
			"path": "src/main/resources/open-api/imdb-clone-backend.yaml",
			"byteSize": 30977,
			"content": "openapi: 3.0.1\ninfo:\n  title: OpenAPI definition\n  version: v0\nservers:\n  - url: http://localhost:8080\n    description: Generated server url\npaths:\n  /api/movie/{movieId}:\n    get:\n      tags:\n        - movie-controller\n      operationId: getMovieById\n      parameters:\n        - name: movieId\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/MovieRecord'\n    put:\n      tags:\n        - movie-controller\n      operationId: updateMovie\n      parameters:\n        - name: movieId\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int64\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MovieRequest'\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Movie'\n    delete:\n      tags:\n        - movie-controller\n      operationId: deleteMovieById\n      parameters:\n        - name: movieId\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/MessageResponse'\n  /api/comment/{commentId}:\n    get:\n      tags:\n        - comment-controller\n      operationId: getCommentById\n      parameters:\n        - name: commentId\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/CommentRecord'\n    put:\n      tags:\n        - comment-controller\n      operationId: updateComment\n      parameters:\n        - name: commentId\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int64\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateCommentRequest'\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/CommentRecord'\n    delete:\n      tags:\n        - comment-controller\n      operationId: deleteComment\n      parameters:\n        - name: commentId\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/MessageResponse'\n  /api/account/{username}:\n    put:\n      tags:\n        - account-controller\n      operationId: updateAccount\n      parameters:\n        - name: username\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AccountRecord'\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Account'\n    delete:\n      tags:\n        - account-controller\n      operationId: deleteAccount\n      parameters:\n        - name: username\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/MessageResponse'\n  /api/account/{username}/take-admin:\n    put:\n      tags:\n        - account-controller\n      operationId: takeAdminRole\n      parameters:\n        - name: username\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/MessageResponse'\n  /api/account/{username}/give-admin:\n    put:\n      tags:\n        - account-controller\n      operationId: giveAdminRole\n      parameters:\n        - name: username\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/MessageResponse'\n  /api/movie/get-movies:\n    post:\n      tags:\n        - movie-controller\n      operationId: getMoviesByIds\n      parameters:\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MovieIdsRequest'\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedResponseMovieRecord'\n  /api/movie/create-movie:\n    post:\n      tags:\n        - movie-controller\n      operationId: createMovie\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MovieRequest'\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Movie'\n  /api/comment/{movieId}:\n    post:\n      tags:\n        - comment-controller\n      operationId: createComment\n      parameters:\n        - name: movieId\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int64\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                request:\n                  $ref: '#/components/schemas/CreateCommentRequest'\n                currentAccount:\n                  $ref: '#/components/schemas/UserPrincipal'\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/CommentRecord'\n  /api/auth/save-new-password:\n    post:\n      tags:\n        - authentication-controller\n      operationId: saveNewPassword\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PasswordResetRequest'\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/MessageResponse'\n  /api/auth/registration:\n    post:\n      tags:\n        - authentication-controller\n      operationId: registerAccount\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegistrationRequest'\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/MessageResponse'\n  /api/auth/login:\n    post:\n      tags:\n        - authentication-controller\n      operationId: authenticateAccount\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LoginRequest'\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/LoginResponse'\n  /api/account/add-account:\n    post:\n      tags:\n        - account-controller\n      operationId: createAccount\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegistrationRequest'\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Account'\n  /api/watched-movie/{movieId}/watch:\n    get:\n      tags:\n        - watched-movie-controller\n      operationId: watchMovie\n      parameters:\n        - name: movieId\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/WatchedMovie'\n  /api/movie/search/{primaryTitle}:\n    get:\n      tags:\n        - movie-controller\n      operationId: searchMoviesByTitle\n      parameters:\n        - name: primaryTitle\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedResponseMovie'\n  /api/movie-rating/{movieId}/rating-score/{score}:\n    get:\n      tags:\n        - rating-controller\n      operationId: rateMovie\n      parameters:\n        - name: movieId\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - name: score\n          in: path\n          required: true\n          schema:\n            type: number\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Rating'\n  /api/comment/{movieId}/comments:\n    get:\n      tags:\n        - comment-controller\n      operationId: getCommentsByMovieId\n      parameters:\n        - name: movieId\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedResponseCommentRecord'\n  /api/auth/reset-password:\n    get:\n      tags:\n        - authentication-controller\n      operationId: resetPassword\n      parameters:\n        - name: email\n          in: query\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/MessageResponse'\n  /api/auth/confirm-email-address:\n    get:\n      tags:\n        - authentication-controller\n      operationId: confirmEmailAddress\n      parameters:\n        - name: token\n          in: query\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/MessageResponse'\n  /api/auth/check-username-availability:\n    get:\n      tags:\n        - authentication-controller\n      operationId: checkUsernameAvailability\n      parameters:\n        - name: username\n          in: query\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/UserIdentityAvailability'\n  /api/auth/check-email-availability:\n    get:\n      tags:\n        - authentication-controller\n      operationId: checkEmailAvailability\n      parameters:\n        - name: email\n          in: query\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/UserIdentityAvailability'\n  /api/account/{username}/watchlist:\n    get:\n      tags:\n        - account-controller\n      operationId: getWatchedMoviesByAccount\n      parameters:\n        - name: username\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedResponseWatchedMovieRecord'\n  /api/account/{username}/ratings:\n    get:\n      tags:\n        - account-controller\n      operationId: getRatingsByAccount\n      parameters:\n        - name: username\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedResponseRatingRecord'\n  /api/account/{username}/profile:\n    get:\n      tags:\n        - account-controller\n      operationId: getAccountProfile\n      parameters:\n        - name: username\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/AccountProfile'\n  /api/account/{username}/comments:\n    get:\n      tags:\n        - account-controller\n      operationId: getCommentsByAccount\n      parameters:\n        - name: username\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedResponseCommentRecord'\n  /api/account/me:\n    get:\n      tags:\n        - account-controller\n      operationId: getCurrentAccount\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/AccountSummaryResponse'\n      security:\n        - bearerAuth: []\n  /api/watched-movie/{movieId}:\n    delete:\n      tags:\n        - watched-movie-controller\n      operationId: deleteWatchedMovie\n      parameters:\n        - name: movieId\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/MessageResponse'\n  /api/movie-rating/{movieId}:\n    delete:\n      tags:\n        - rating-controller\n      operationId: deleteRating\n      parameters:\n        - name: movieId\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/MessageResponse'\ncomponents:\n  schemas:\n    MovieRequest:\n      required:\n        - originalTitle\n      type: object\n      properties:\n        primaryTitle:\n          maxLength: 200\n          minLength: 0\n          type: string\n        originalTitle:\n          maxLength: 200\n          minLength: 0\n          type: string\n        startYear:\n          maximum: 2030\n          minimum: 1850\n          type: integer\n          format: int32\n        endYear:\n          maximum: 2030\n          minimum: 1850\n          type: integer\n          format: int32\n        runtimeMinutes:\n          type: integer\n          format: int32\n        movieGenre:\n          uniqueItems: true\n          type: array\n          items:\n            type: string\n            enum:\n              - HORROR\n              - MYSTERY\n              - THRILLER\n              - CRIME\n              - WESTERN\n              - WAR\n              - ACTION\n              - ADVENTURE\n              - FAMILY\n              - COMEDY\n              - ANIMATION\n              - FANTASY\n              - SCI_FI\n              - DRAMA\n              - ROMANCE\n              - SPORT\n              - HISTORY\n              - BIOGRAPHY\n              - MUSIC\n              - MUSICAL\n              - DOCUMENTARY\n              - NEWS\n              - ADULT\n              - REALITY_TV\n              - TALK_SHOW\n              - GAME_SHOW\n              - FILM_NOIR\n              - SHORT\n        movieType:\n          type: string\n          enum:\n            - SHORT\n            - MOVIE\n            - VIDEO\n            - TV_MOVIE\n            - TV_EPISODE\n            - TV_MINI_SERIES\n            - TV_SPECIAL\n            - TV_SERIES\n            - TV_SHORT\n            - TV_PILOT\n            - VIDEO_GAME\n        adult:\n          type: boolean\n    Movie:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        primaryTitle:\n          type: string\n        originalTitle:\n          type: string\n        startYear:\n          type: integer\n          format: int32\n        endYear:\n          type: integer\n          format: int32\n        runtimeMinutes:\n          type: integer\n          format: int32\n        movieGenre:\n          uniqueItems: true\n          type: array\n          items:\n            type: string\n            enum:\n              - HORROR\n              - MYSTERY\n              - THRILLER\n              - CRIME\n              - WESTERN\n              - WAR\n              - ACTION\n              - ADVENTURE\n              - FAMILY\n              - COMEDY\n              - ANIMATION\n              - FANTASY\n              - SCI_FI\n              - DRAMA\n              - ROMANCE\n              - SPORT\n              - HISTORY\n              - BIOGRAPHY\n              - MUSIC\n              - MUSICAL\n              - DOCUMENTARY\n              - NEWS\n              - ADULT\n              - REALITY_TV\n              - TALK_SHOW\n              - GAME_SHOW\n              - FILM_NOIR\n              - SHORT\n        movieType:\n          type: string\n          enum:\n            - SHORT\n            - MOVIE\n            - VIDEO\n            - TV_MOVIE\n            - TV_EPISODE\n            - TV_MINI_SERIES\n            - TV_SPECIAL\n            - TV_SERIES\n            - TV_SHORT\n            - TV_PILOT\n            - VIDEO_GAME\n        imdbRating:\n          type: number\n          format: float\n        imdbRatingCount:\n          type: integer\n          format: int32\n        adult:\n          type: boolean\n        rating:\n          type: number\n        ratingCount:\n          type: integer\n          format: int32\n    UpdateCommentRequest:\n      type: object\n      properties:\n        message:\n          maxLength: 1000\n          minLength: 0\n          type: string\n    CommentRecord:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        message:\n          type: string\n        accountId:\n          type: integer\n          format: int64\n        movieId:\n          type: integer\n          format: int64\n    AccountRecord:\n      required:\n        - email\n        - password\n        - username\n      type: object\n      properties:\n        username:\n          maxLength: 50\n          minLength: 2\n          type: string\n        password:\n          type: string\n        email:\n          type: string\n        firstName:\n          maxLength: 35\n          minLength: 2\n          type: string\n        lastName:\n          maxLength: 35\n          minLength: 2\n          type: string\n        phone:\n          type: string\n        bio:\n          type: string\n        birthday:\n          type: string\n          format: date-time\n    Account:\n      required:\n        - email\n        - username\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        username:\n          type: string\n        email:\n          type: string\n        firstName:\n          type: string\n        lastName:\n          type: string\n        phone:\n          type: string\n        bio:\n          type: string\n        birthday:\n          type: string\n          format: date-time\n        roles:\n          type: array\n          items:\n            $ref: '#/components/schemas/Role'\n    Role:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n          enum:\n            - ROLE_USER\n            - ROLE_ADMIN\n    MessageResponse:\n      type: object\n      properties:\n        message:\n          type: string\n    MovieIdsRequest:\n      type: object\n      properties:\n        movieIds:\n          type: array\n          items:\n            type: integer\n            format: int64\n    MovieRecord:\n      type: object\n      properties:\n        primaryTitle:\n          type: string\n        originalTitle:\n          type: string\n        startYear:\n          type: integer\n          format: int32\n        endYear:\n          type: integer\n          format: int32\n        runtimeMinutes:\n          type: integer\n          format: int32\n        modifiedAtInUtc:\n          type: string\n          format: date-time\n        createdAtInUtc:\n          type: string\n          format: date-time\n        movieGenre:\n          uniqueItems: true\n          type: array\n          items:\n            type: string\n            enum:\n              - HORROR\n              - MYSTERY\n              - THRILLER\n              - CRIME\n              - WESTERN\n              - WAR\n              - ACTION\n              - ADVENTURE\n              - FAMILY\n              - COMEDY\n              - ANIMATION\n              - FANTASY\n              - SCI_FI\n              - DRAMA\n              - ROMANCE\n              - SPORT\n              - HISTORY\n              - BIOGRAPHY\n              - MUSIC\n              - MUSICAL\n              - DOCUMENTARY\n              - NEWS\n              - ADULT\n              - REALITY_TV\n              - TALK_SHOW\n              - GAME_SHOW\n              - FILM_NOIR\n              - SHORT\n        movieType:\n          type: string\n          enum:\n            - SHORT\n            - MOVIE\n            - VIDEO\n            - TV_MOVIE\n            - TV_EPISODE\n            - TV_MINI_SERIES\n            - TV_SPECIAL\n            - TV_SERIES\n            - TV_SHORT\n            - TV_PILOT\n            - VIDEO_GAME\n        imdbRating:\n          type: number\n          format: float\n        imdbRatingCount:\n          type: integer\n          format: int32\n        adult:\n          type: boolean\n        rating:\n          type: number\n          format: float\n        ratingCount:\n          type: integer\n          format: int32\n    PagedResponseMovieRecord:\n      type: object\n      properties:\n        content:\n          type: array\n          items:\n            $ref: '#/components/schemas/MovieRecord'\n        page:\n          type: integer\n          format: int32\n        size:\n          type: integer\n          format: int32\n        totalElements:\n          type: integer\n          format: int64\n        totalPages:\n          type: integer\n          format: int32\n        last:\n          type: boolean\n    CreateCommentRequest:\n      type: object\n      properties:\n        message:\n          maxLength: 1000\n          minLength: 0\n          type: string\n    GrantedAuthority:\n      type: object\n      properties:\n        authority:\n          type: string\n    UserPrincipal:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        firstName:\n          type: string\n        lastName:\n          type: string\n        username:\n          type: string\n        enabled:\n          type: boolean\n        authorities:\n          type: array\n          items:\n            $ref: '#/components/schemas/GrantedAuthority'\n        accountNonExpired:\n          type: boolean\n        accountNonLocked:\n          type: boolean\n        credentialsNonExpired:\n          type: boolean\n    PasswordResetRequest:\n      type: object\n      properties:\n        token:\n          maxLength: 36\n          minLength: 36\n          type: string\n        newPassword:\n          type: string\n    RegistrationRequest:\n      required:\n        - email\n        - password\n        - username\n      type: object\n      properties:\n        username:\n          maxLength: 50\n          minLength: 3\n          type: string\n        email:\n          type: string\n        password:\n          type: string\n    LoginRequest:\n      required:\n        - password\n        - usernameOrEmail\n      type: object\n      properties:\n        usernameOrEmail:\n          type: string\n        password:\n          type: string\n    LoginResponse:\n      type: object\n      properties:\n        accessToken:\n          type: string\n        tokenType:\n          type: string\n    WatchedMovie:\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/WatchedMovieId'\n    WatchedMovieId:\n      required:\n        - accountId\n        - movieId\n      type: object\n      properties:\n        movieId:\n          type: integer\n          format: int64\n        accountId:\n          type: integer\n          format: int64\n    PagedResponseMovie:\n      type: object\n      properties:\n        content:\n          type: array\n          items:\n            $ref: '#/components/schemas/Movie'\n        page:\n          type: integer\n          format: int32\n        size:\n          type: integer\n          format: int32\n        totalElements:\n          type: integer\n          format: int64\n        totalPages:\n          type: integer\n          format: int32\n        last:\n          type: boolean\n    Rating:\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/RatingId'\n        rating:\n          type: number\n    RatingId:\n      required:\n        - accountId\n        - movieId\n      type: object\n      properties:\n        movieId:\n          type: integer\n          format: int64\n        accountId:\n          type: integer\n          format: int64\n    PagedResponseCommentRecord:\n      type: object\n      properties:\n        content:\n          type: array\n          items:\n            $ref: '#/components/schemas/CommentRecord'\n        page:\n          type: integer\n          format: int32\n        size:\n          type: integer\n          format: int32\n        totalElements:\n          type: integer\n          format: int64\n        totalPages:\n          type: integer\n          format: int32\n        last:\n          type: boolean\n    UserIdentityAvailability:\n      type: object\n      properties:\n        isAvailable:\n          type: boolean\n    PagedResponseWatchedMovieRecord:\n      type: object\n      properties:\n        content:\n          type: array\n          items:\n            $ref: '#/components/schemas/WatchedMovieRecord'\n        page:\n          type: integer\n          format: int32\n        size:\n          type: integer\n          format: int32\n        totalElements:\n          type: integer\n          format: int64\n        totalPages:\n          type: integer\n          format: int32\n        last:\n          type: boolean\n    WatchedMovieRecord:\n      type: object\n      properties:\n        accountId:\n          type: integer\n          format: int64\n        movieId:\n          type: integer\n          format: int64\n    PagedResponseRatingRecord:\n      type: object\n      properties:\n        content:\n          type: array\n          items:\n            $ref: '#/components/schemas/RatingRecord'\n        page:\n          type: integer\n          format: int32\n        size:\n          type: integer\n          format: int32\n        totalElements:\n          type: integer\n          format: int64\n        totalPages:\n          type: integer\n          format: int32\n        last:\n          type: boolean\n    RatingRecord:\n      type: object\n      properties:\n        rating:\n          type: number\n        accountId:\n          type: integer\n          format: int64\n        movieId:\n          type: integer\n          format: int64\n    AccountProfile:\n      type: object\n      properties:\n        username:\n          type: string\n        email:\n          type: string\n        password:\n          type: string\n        firstName:\n          type: string\n        lastName:\n          type: string\n        phone:\n          type: string\n        bio:\n          type: string\n        birthday:\n          type: string\n          format: date-time\n        roles:\n          type: array\n          items:\n            $ref: '#/components/schemas/Role'\n        ratingsCount:\n          type: integer\n          format: int64\n        watchlistCount:\n          type: integer\n          format: int64\n        commentsCount:\n          type: integer\n          format: int64\n    AccountSummaryResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        username:\n          type: string\n        email:\n          type: string\n        firstName:\n          type: string\n        lastName:\n          type: string\n",
			"canonicalURL": "/github.com/NiklasTiede/IMDb-Clone@286632f929dbfe8c5638e57aabf3b51813e9e8fc/-/blob/src/main/resources/open-api/imdb-clone-backend.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/NiklasTiede/IMDb-Clone/blob/286632f929dbfe8c5638e57aabf3b51813e9e8fc/src/main/resources/open-api/imdb-clone-backend.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/api/account/me\": get: operation \"getCurrentAccount\": security: at src/main/resources/open-api/imdb-clone-backend.yaml:668:11: unknown security scheme \"bearerAuth\""
}