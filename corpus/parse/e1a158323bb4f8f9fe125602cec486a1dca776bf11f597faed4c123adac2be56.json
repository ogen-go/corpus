{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/api2cart.com/1.1/openapi.yaml",
			"byteSize": 392324,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://api.api2cart.com/v1.1\ninfo:\n  contact:\n    email: contact@api2cart.com\n    x-twitter: API2Cart\n  description: API2Cart\n  termsOfService: https://api2cart.com/terms-service\n  title: Swagger API2Cart\n  version: \"1.1\"\n  x-apisguru-categories:\n    - ecommerce\n  x-logo:\n    url: https://twitter.com/API2Cart/profile_image?size=original\n  x-origin:\n    - format: openapi\n      url: https://app.api2cart.com/default/index/swagger-json\n      version: \"3.0\"\n  x-providerName: api2cart.com\nexternalDocs:\n  description: Find out more about API2Cart\n  url: http://docs.api2cart.com\ntags:\n  - name: account\n  - name: cart\n  - name: product\n  - name: category\n  - name: order\n  - name: customer\n  - name: attribute\n  - name: tax\n  - name: webhook\npaths:\n  /account.cart.add.json:\n    post:\n      description: Add store to the account\n      operationId: AccountCartAdd\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AccountCartAdd\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      store_key:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n      tags:\n        - account\n  /account.cart.list.json:\n    get:\n      description: Get list of carts.\n      operationId: AccountCartList\n      parameters:\n        - description: Set this parameter in order to choose which entity fields you want to retrieve\n          in: query\n          name: params\n          required: false\n          schema:\n            default: force_all\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all\n          in: query\n          name: exclude\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities from their creation date\n          in: query\n          name: request_from_date\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities to their creation date\n          in: query\n          name: request_to_date\n          required: false\n          schema:\n            type: string\n        - description: A web address of a store\n          in: query\n          name: store_url\n          required: false\n          schema:\n            type: string\n        - description: Find store by store key\n          in: query\n          name: store_key\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      carts:\n                        items:\n                          properties:\n                            cart_id:\n                              type: string\n                            id:\n                              type: string\n                            store_key:\n                              type: string\n                            total_calls:\n                              type: string\n                            url:\n                              type: string\n                          type: object\n                        type: array\n                      carts_count:\n                        type: integer\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n      tags:\n        - account\n  /account.config.update.json:\n    put:\n      description: Update configs in the API2Cart database.\n      operationId: AccountConfigUpdate\n      parameters:\n        - description: Update store key\n          in: query\n          name: new_store_key\n          required: false\n          schema:\n            type: string\n        - description: This parameter allows to set up store with custom bridge url (also you must use store_root parameter if a bridge folder is not in the root folder of the store)\n          in: query\n          name: bridge_url\n          required: false\n          schema:\n            type: string\n        - description: Absolute path to the store root directory (used with \"bridge_url\" parameter)\n          in: query\n          name: store_root\n          required: false\n          schema:\n            type: string\n        - description: DB tables prefix\n          in: query\n          name: db_tables_prefix\n          required: false\n          schema:\n            type: string\n        - description: 3DCart Private Key\n          in: query\n          name: 3dcart_private_key\n          required: false\n          schema:\n            type: string\n        - description: 3DCart Token\n          in: query\n          name: 3dcart_access_token\n          required: false\n          schema:\n            type: string\n        - description: 3DCart API Key\n          in: query\n          name: 3dcartapi_api_key\n          required: false\n          schema:\n            type: string\n        - description: Amazon SP API app client id\n          in: query\n          name: amazon_sp_client_id\n          required: false\n          schema:\n            type: string\n        - description: Amazon SP API app client secret\n          in: query\n          name: amazon_sp_client_secret\n          required: false\n          schema:\n            type: string\n        - description: Amazon AWS user access key ID\n          in: query\n          name: amazon_sp_aws_user_key_id\n          required: false\n          schema:\n            type: string\n        - description: Amazon AWS user secret access key\n          in: query\n          name: amazon_sp_aws_user_secret\n          required: false\n          schema:\n            type: string\n        - description: Amazon AWS Region\n          in: query\n          name: amazon_sp_aws_region\n          required: false\n          schema:\n            type: string\n        - description: Amazon AWS Role ARN\n          in: query\n          name: amazon_sp_aws_role_arn\n          required: false\n          schema:\n            type: string\n        - description: Amazon SP API OAuth refresh token\n          in: query\n          name: amazon_sp_refresh_token\n          required: false\n          schema:\n            type: string\n        - description: Amazon SP API environment\n          in: query\n          name: amazon_sp_api_environment\n          required: false\n          schema:\n            default: production\n            type: string\n        - description: MWS Auth Token. Access token authorizing the app to access resources on behalf of a user\n          in: query\n          name: amazon_access_token\n          required: false\n          schema:\n            type: string\n        - description: Amazon Seller ID (Merchant token)\n          in: query\n          name: amazon_seller_id\n          required: false\n          schema:\n            type: string\n        - description: Amazon Marketplace IDs comma separated string\n          in: query\n          name: amazon_marketplaces_ids\n          required: false\n          schema:\n            type: string\n        - description: Amazon Secret Key\n          in: query\n          name: amazon_secret_key\n          required: false\n          schema:\n            type: string\n        - description: Amazon Secret Key Id\n          in: query\n          name: amazon_access_key_id\n          required: false\n          schema:\n            type: string\n        - description: It's a AspDotNetStorefront account for which API is available\n          in: query\n          name: aspdotnetstorefront_api_user\n          required: false\n          schema:\n            type: string\n        - description: AspDotNetStorefront API Password\n          in: query\n          name: aspdotnetstorefront_api_pass\n          required: false\n          schema:\n            type: string\n        - description: It's a BigCommerce account for which API is enabled\n          in: query\n          name: bigcommerceapi_admin_account\n          required: false\n          schema:\n            type: string\n        - description: BigCommerce API URL\n          in: query\n          name: bigcommerceapi_api_path\n          required: false\n          schema:\n            type: string\n        - description: Bigcommerce API Key\n          in: query\n          name: bigcommerceapi_api_key\n          required: false\n          schema:\n            type: string\n        - description: Client ID of the requesting app\n          in: query\n          name: bigcommerceapi_client_id\n          required: false\n          schema:\n            type: string\n        - description: Access token authorizing the app to access resources on behalf of a user\n          in: query\n          name: bigcommerceapi_access_token\n          required: false\n          schema:\n            type: string\n        - description: API Path section unique to the store\n          in: query\n          name: bigcommerceapi_context\n          required: false\n          schema:\n            type: string\n        - description: Demandware client id\n          in: query\n          name: demandware_client_id\n          required: false\n          schema:\n            type: string\n        - description: Demandware api password\n          in: query\n          name: demandware_api_password\n          required: false\n          schema:\n            type: string\n        - description: Demandware user name\n          in: query\n          name: demandware_user_name\n          required: false\n          schema:\n            type: string\n        - description: Demandware user password\n          in: query\n          name: demandware_user_password\n          required: false\n          schema:\n            type: string\n        - description: Demandware environment\n          in: query\n          name: demandware_env_type\n          required: false\n          schema:\n            type: string\n        - description: Application ID (AppID).\n          in: query\n          name: ebay_client_id\n          required: false\n          schema:\n            type: string\n        - description: Shared Secret from eBay application\n          in: query\n          name: ebay_client_secret\n          required: false\n          schema:\n            type: string\n        - description: The RuName value that eBay assigns to your application.\n          in: query\n          name: ebay_runame\n          required: false\n          schema:\n            type: string\n        - description: Used to authenticate API requests.\n          in: query\n          name: ebay_access_token\n          required: false\n          schema:\n            type: string\n        - description: Used to renew the access token.\n          in: query\n          name: ebay_refresh_token\n          required: false\n          schema:\n            type: string\n        - description: eBay environment\n          in: query\n          name: ebay_environment\n          required: false\n          schema:\n            type: string\n        - description: eBay global ID\n          in: query\n          name: ebay_site_id\n          required: false\n          schema:\n            default: 0\n            type: integer\n        - description: Access token authorizing the app to access resources on behalf of a user\n          in: query\n          name: ecwid_acess_token\n          required: false\n          schema:\n            type: string\n        - description: Store Id\n          in: query\n          name: ecwid_store_id\n          required: false\n          schema:\n            type: string\n        - description: Etsy keystring\n          in: query\n          name: etsy_keystring\n          required: false\n          schema:\n            type: string\n        - description: Etsy shared secret\n          in: query\n          name: etsy_shared_secret\n          required: false\n          schema:\n            type: string\n        - description: Access token authorizing the app to access resources on behalf of a user\n          in: query\n          name: etsy_access_token\n          required: false\n          schema:\n            type: string\n        - description: Secret token authorizing the app to access resources on behalf of a user\n          in: query\n          name: etsy_token_secret\n          required: false\n          schema:\n            type: string\n        - description: Neto API Key\n          in: query\n          name: neto_api_key\n          required: false\n          schema:\n            type: string\n        - description: Neto User Name\n          in: query\n          name: neto_api_username\n          required: false\n          schema:\n            type: string\n        - description: Shopify API Key\n          in: query\n          name: shopify_api_key\n          required: false\n          schema:\n            type: string\n        - description: Shopify API Password\n          in: query\n          name: shopify_api_password\n          required: false\n          schema:\n            type: string\n        - description: Shared secret\n          in: query\n          name: shopify_shared_secret\n          required: false\n          schema:\n            type: string\n        - description: Access token authorizing the app to access resources on behalf of a user\n          in: query\n          name: shopify_access_token\n          required: false\n          schema:\n            type: string\n        - description: Shopware api key\n          in: query\n          name: shopware_api_key\n          required: false\n          schema:\n            type: string\n        - description: Shopware client secret access key\n          in: query\n          name: shopware_api_secret\n          required: false\n          schema:\n            type: string\n        - description: It's a Volusion account for which API is enabled\n          in: query\n          name: volusion_login\n          required: false\n          schema:\n            type: string\n        - description: Volusion API Password\n          in: query\n          name: volusion_password\n          required: false\n          schema:\n            type: string\n        - description: Walmart client ID\n          in: query\n          name: walmart_client_id\n          required: false\n          schema:\n            type: string\n        - description: Walmart client secret\n          in: query\n          name: walmart_client_secret\n          required: false\n          schema:\n            type: string\n        - description: Walmart environment\n          in: query\n          name: walmart_environment\n          required: false\n          schema:\n            default: production\n            type: string\n        - description: Walmart WM_CONSUMER.CHANNEL.TYPE header\n          in: query\n          name: walmart_channel_type\n          required: false\n          schema:\n            type: string\n        - description: Squarespace API Key\n          in: query\n          name: squarespace_api_key\n          required: false\n          schema:\n            type: string\n        - description: Omni Commerce Connector Client ID\n          in: query\n          name: hybris_client_id\n          required: false\n          schema:\n            type: string\n        - description: Omni Commerce Connector Client Secret\n          in: query\n          name: hybris_client_secret\n          required: false\n          schema:\n            type: string\n        - description: User Name\n          in: query\n          name: hybris_username\n          required: false\n          schema:\n            type: string\n        - description: User password\n          in: query\n          name: hybris_password\n          required: false\n          schema:\n            type: string\n        - description: Websites to stores mapping data\n          explode: false\n          in: query\n          name: hybris_websites\n          required: false\n          schema:\n            items:\n              type: string\n            type: array\n          style: form\n        - description: LightSpeed api key\n          in: query\n          name: lightspeed_api_key\n          required: false\n          schema:\n            type: string\n        - description: LightSpeed api secret\n          in: query\n          name: lightspeed_api_secret\n          required: false\n          schema:\n            type: string\n        - description: CommerceHQ api key\n          in: query\n          name: commercehq_api_key\n          required: false\n          schema:\n            type: string\n        - description: CommerceHQ api password\n          in: query\n          name: commercehq_api_password\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      updated_items:\n                        type: integer\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - account\n  /account.failed_webhooks.json:\n    get:\n      description: List webhooks that was not delivered to the callback.\n      operationId: AccountFailedWebhooks\n      parameters:\n        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250\n          in: query\n          name: count\n          required: false\n          schema:\n            default: 10\n            type: integer\n        - description: This parameter sets the number from which you want to get entities\n          in: query\n          name: start\n          required: false\n          schema:\n            default: 0\n            type: integer\n        - description: List of сomma-separated webhook ids\n          in: query\n          name: ids\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      all_failed_webhook:\n                        type: string\n                      webhook:\n                        items:\n                          properties:\n                            entity_id:\n                              type: string\n                            time:\n                              $ref: \"#/components/schemas/A2CDateTime\"\n                            webhook_id:\n                              type: integer\n                          type: object\n                        type: array\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n      tags:\n        - account\n  /account.supported_platforms.json:\n    get:\n      description: Get list of supported platforms\n      operationId: AccountSupportedPlatforms\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      supported_platforms:\n                        items:\n                          properties:\n                            cart_id:\n                              type: string\n                            cart_name:\n                              type: string\n                            cart_versions:\n                              type: string\n                            params:\n                              properties:\n                                additional:\n                                  items:\n                                    properties:\n                                      description:\n                                        type: string\n                                      name:\n                                        type: string\n                                    type: object\n                                  type: array\n                                required:\n                                  items:\n                                    items:\n                                      properties:\n                                        description:\n                                          type: string\n                                        name:\n                                          type: string\n                                      type: object\n                                    type: array\n                                  type: array\n                              type: object\n                          type: object\n                        type: array\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n      tags:\n        - account\n  /attribute.add.json:\n    post:\n      description: Add new attribute\n      operationId: AttributeAdd\n      parameters:\n        - description: Defines attribute's type\n          in: query\n          name: type\n          required: true\n          schema:\n            enum:\n              - text\n              - select\n              - textarea\n              - date\n              - price\n              - multiselect\n              - boolean\n            type: string\n        - description: Entity code\n          in: query\n          name: code\n          required: false\n          schema:\n            type: string\n        - description: Defines attributes's name\n          in: query\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: Language id\n          in: query\n          name: lang_id\n          required: false\n          schema:\n            type: string\n        - description: Set visibility status\n          in: query\n          name: visible\n          required: false\n          schema:\n            default: false\n            type: boolean\n        - description: Defines if the option is required\n          in: query\n          name: required\n          required: false\n          schema:\n            default: false\n            type: boolean\n        - description: Attribute`s position\n          in: query\n          name: position\n          required: false\n          schema:\n            default: 0\n            type: integer\n        - description: Filter by attribute_group_id\n          in: query\n          name: attribute_group_id\n          required: false\n          schema:\n            type: string\n        - description: Attribute saving scope\n          in: query\n          name: is_global\n          required: false\n          schema:\n            default: Store\n            type: string\n        - description: Use attribute in Quick Search\n          in: query\n          name: is_searchable\n          required: false\n          schema:\n            default: false\n            type: boolean\n        - description: Use In Layered Navigation\n          in: query\n          name: is_filterable\n          required: false\n          schema:\n            default: No\n            type: string\n        - description: Comparable on Front-end\n          in: query\n          name: is_comparable\n          required: false\n          schema:\n            default: false\n            type: boolean\n        - description: Allow HTML Tags on Frontend\n          in: query\n          name: is_html_allowed_on_front\n          required: false\n          schema:\n            default: false\n            type: boolean\n        - description: Use In Search Results Layered Navigation\n          in: query\n          name: is_filterable_in_search\n          required: false\n          schema:\n            default: false\n            type: boolean\n        - description: Use To Create Configurable Product\n          in: query\n          name: is_configurable\n          required: false\n          schema:\n            default: false\n            type: boolean\n        - description: Use in Advanced Search\n          in: query\n          name: is_visible_in_advanced_search\n          required: false\n          schema:\n            default: false\n            type: boolean\n        - description: Use for Promo Rule Conditions\n          in: query\n          name: is_used_for_promo_rules\n          required: false\n          schema:\n            default: false\n            type: boolean\n        - description: Used in Product Listing\n          in: query\n          name: used_in_product_listing\n          required: false\n          schema:\n            default: false\n            type: boolean\n        - description: Used for Sorting in Product Listing\n          in: query\n          name: used_for_sort_by\n          required: false\n          schema:\n            default: false\n            type: boolean\n        - description: Types of products which can have this attribute\n          in: query\n          name: apply_to\n          required: false\n          schema:\n            default: all_types\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      id:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - attribute\n  /attribute.assign.group.json:\n    post:\n      description: Assign attribute to the group\n      operationId: AttributeAssignGroup\n      parameters:\n        - description: Entity id\n          in: query\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: Attribute group_id\n          in: query\n          name: group_id\n          required: true\n          schema:\n            type: string\n        - description: Attribute set id\n          in: query\n          name: attribute_set_id\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      assigned:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - attribute\n  /attribute.assign.set.json:\n    post:\n      description: Assign attribute to the attribute set\n      operationId: AttributeAssignSet\n      parameters:\n        - description: Entity id\n          in: query\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: Attribute group_id\n          in: query\n          name: group_id\n          required: false\n          schema:\n            type: string\n        - description: Attribute set id\n          in: query\n          name: attribute_set_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      assigned:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - attribute\n  /attribute.attributeset.list.json:\n    get:\n      description: Get attribute_set list\n      operationId: AttributeAttributesetList\n      parameters:\n        - description: This parameter sets the number from which you want to get entities\n          in: query\n          name: start\n          required: false\n          schema:\n            default: 0\n            type: integer\n        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250\n          in: query\n          name: count\n          required: false\n          schema:\n            default: 10\n            type: integer\n        - description: Set this parameter in order to choose which entity fields you want to retrieve\n          in: query\n          name: params\n          required: false\n          schema:\n            default: id,name\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all\n          in: query\n          name: exclude\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    items:\n                      $ref: \"#/components/schemas/StoreAttribute_Group\"\n                    type: array\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - attribute\n  /attribute.count.json:\n    get:\n      description: Get attributes count\n      operationId: AttributeCount\n      parameters:\n        - description: Defines attribute's type\n          in: query\n          name: type\n          required: false\n          schema:\n            type: string\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: Language id\n          in: query\n          name: lang_id\n          required: false\n          schema:\n            type: string\n        - description: Filter items by visibility status\n          in: query\n          name: visible\n          required: false\n          schema:\n            type: boolean\n        - description: Defines if the option is required\n          in: query\n          name: required\n          required: false\n          schema:\n            type: boolean\n        - description: True if attribute is system\n          in: query\n          name: system\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      attributes_count:\n                        type: integer\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - attribute\n  /attribute.delete.json:\n    delete:\n      description: Delete attribute from store\n      operationId: AttributeDelete\n      parameters:\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: Entity id\n          in: query\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      deleted:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - attribute\n  /attribute.group.list.json:\n    get:\n      description: Get attribute group list\n      operationId: AttributeGroupList\n      parameters:\n        - description: This parameter sets the number from which you want to get entities\n          in: query\n          name: start\n          required: false\n          schema:\n            default: 0\n            type: integer\n        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250\n          in: query\n          name: count\n          required: false\n          schema:\n            default: 10\n            type: integer\n        - description: Language id\n          in: query\n          name: lang_id\n          required: false\n          schema:\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to retrieve\n          in: query\n          name: params\n          required: false\n          schema:\n            default: id,name\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all\n          in: query\n          name: exclude\n          required: false\n          schema:\n            type: string\n        - description: Attribute set id\n          in: query\n          name: attribute_set_id\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    items:\n                      $ref: \"#/components/schemas/StoreAttribute_Group\"\n                    type: array\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - attribute\n  /attribute.info.json:\n    get:\n      description: Get attribute info\n      operationId: AttributeInfo\n      parameters:\n        - description: Entity id\n          in: query\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: Language id\n          in: query\n          name: lang_id\n          required: false\n          schema:\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to retrieve\n          in: query\n          name: params\n          required: false\n          schema:\n            default: force_all\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all\n          in: query\n          name: exclude\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    $ref: \"#/components/schemas/StoreAttribute\"\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - attribute\n  /attribute.list.json:\n    get:\n      description: Get attributes list\n      operationId: AttributeList\n      parameters:\n        - description: This parameter sets the number from which you want to get entities\n          in: query\n          name: start\n          required: false\n          schema:\n            default: 0\n            type: integer\n        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250\n          in: query\n          name: count\n          required: false\n          schema:\n            default: 10\n            type: integer\n        - description: Defines attribute's type\n          in: query\n          name: type\n          required: false\n          schema:\n            type: string\n        - description: Filter attributes by ids\n          in: query\n          name: attribute_ids\n          required: false\n          schema:\n            type: string\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: Retrieves attributes on specified language id\n          in: query\n          name: lang_id\n          required: false\n          schema:\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to retrieve\n          in: query\n          name: params\n          required: false\n          schema:\n            default: id,name,code,type\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all\n          in: query\n          name: exclude\n          required: false\n          schema:\n            type: string\n        - description: Filter items by visibility status\n          in: query\n          name: visible\n          required: false\n          schema:\n            type: boolean\n        - description: Defines if the option is required\n          in: query\n          name: required\n          required: false\n          schema:\n            type: boolean\n        - description: True if attribute is system\n          in: query\n          name: system\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      order:\n                        items:\n                          $ref: \"#/components/schemas/StoreAttribute\"\n                        type: array\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - attribute\n  /attribute.type.list.json:\n    get:\n      description: Get list of supported attributes types\n      operationId: AttributeTypeList\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      attribute_type:\n                        items:\n                          type: string\n                        type: array\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - attribute\n  /attribute.unassign.group.json:\n    post:\n      description: Unassign attribute from group\n      operationId: AttributeUnassignGroup\n      parameters:\n        - description: Entity id\n          in: query\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: Customer group_id\n          in: query\n          name: group_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      unassigned:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - attribute\n  /attribute.unassign.set.json:\n    post:\n      description: Unassign attribute from attribute set\n      operationId: AttributeUnassignSet\n      parameters:\n        - description: Entity id\n          in: query\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: Attribute set id\n          in: query\n          name: attribute_set_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      unassigned:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - attribute\n  /attribute.update.json:\n    post:\n      description: Update attribute data\n      operationId: AttributeUpdate\n      parameters:\n        - description: Entity id\n          in: query\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: Defines new attributes's name\n          in: query\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: Language id\n          in: query\n          name: lang_id\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      updated:\n                        type: boolean\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - attribute\n  /basket.info.json:\n    get:\n      description: Retrieve basket information.\n      operationId: BasketInfo\n      parameters:\n        - description: Entity id\n          in: query\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to retrieve\n          in: query\n          name: params\n          required: false\n          schema:\n            default: force_all\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all\n          in: query\n          name: exclude\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    $ref: \"#/components/schemas/Basket\"\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - basket\n  /basket.item.add.json:\n    post:\n      description: Add item to basket\n      operationId: BasketItemAdd\n      parameters:\n        - description: Retrieves orders specified by customer id\n          in: query\n          name: customer_id\n          required: true\n          schema:\n            type: string\n        - description: Defines id of the product which should be added to the basket\n          in: query\n          name: product_id\n          required: true\n          schema:\n            type: string\n        - description: Defines product's variants specified by variant id\n          in: query\n          name: variant_id\n          required: false\n          schema:\n            type: string\n        - description: Defines new items quantity\n          in: query\n          name: quantity\n          required: false\n          schema:\n            default: 0\n            type: number\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      added:\n                        type: boolean\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - basket\n  /basket.live_shipping_service.create.json:\n    post:\n      description: Create live shipping rate service. (Beta)\n      operationId: BasketLiveShippingServiceCreate\n      parameters:\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: Shipping Service Name\n          in: query\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: Callback url that returns shipping rates. It should be able to accept POST requests with json data.\n          in: query\n          name: callback\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      id:\n                        type: integer\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - basket\n  /basket.live_shipping_service.delete.json:\n    delete:\n      description: Delete live shipping rate service. (Beta)\n      operationId: BasketLiveShippingServiceDelete\n      parameters:\n        - description: Entity id\n          in: query\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      status:\n                        type: boolean\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - basket\n  /basket.live_shipping_service.list.json:\n    get:\n      description: Retrieve a list of live shipping rate services. (Beta)\n      operationId: BasketLiveShippingServiceList\n      parameters:\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: This parameter sets the number from which you want to get entities\n          in: query\n          name: start\n          required: false\n          schema:\n            default: 0\n            type: integer\n        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250\n          in: query\n          name: count\n          required: false\n          schema:\n            default: 10\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      live_shipping_services:\n                        items:\n                          $ref: \"#/components/schemas/Basket_LiveShippingService\"\n                        type: array\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - basket\n  /bridge.delete.json:\n    post:\n      description: Delete bridge from the store.\n      operationId: BridgeDelete\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      deleted:\n                        type: boolean\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - bridge\n  /bridge.download.file:\n    get:\n      description: Download bridge for store\n      operationId: BridgeDownload\n      parameters:\n        - description: Identifies if there is a necessity to download whitelabel bridge.\n          in: query\n          name: whitelabel\n          required: false\n          schema:\n            default: false\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/zip:\n              schema:\n                format: binary\n                type: string\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - cart\n  /bridge.update.json:\n    post:\n      description: Update bridge in the store.\n      operationId: BridgeUpdate\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      updated:\n                        type: boolean\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - bridge\n  /cart.bridge.json:\n    get:\n      description: Get bridge key and store key\n      operationId: CartBridge\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      bridge:\n                        type: string\n                      store_key:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n      tags:\n        - cart\n  /cart.catalog_price_rules.count.json:\n    get:\n      description: Get count of cart catalog price rules discounts.\n      operationId: CartCatalogPriceRulesCount\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      catalog_price_rules_count:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - cart\n  /cart.catalog_price_rules.list.json:\n    get:\n      description: Get cart catalog price rules discounts.\n      operationId: CartCatalogPriceRulesList\n      parameters:\n        - description: Used to retrieve entities via cursor-based pagination (it can't be used with any other filtering parameter)\n          in: query\n          name: page_cursor\n          required: false\n          schema:\n            type: string\n        - description: This parameter sets the number from which you want to get entities\n          in: query\n          name: start\n          required: false\n          schema:\n            default: 0\n            type: integer\n        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250\n          in: query\n          name: count\n          required: false\n          schema:\n            default: 10\n            type: integer\n        - description: Retrieves  catalog_price_rules by ids\n          in: query\n          name: ids\n          required: false\n          schema:\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to retrieve\n          in: query\n          name: params\n          required: false\n          schema:\n            default: id,name,description\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all\n          in: query\n          name: exclude\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Model_Response_Cart_Catalog_PriceRules_List\"\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - cart\n  /cart.clear_cache.json:\n    post:\n      description: Clear cache on store.\n      operationId: CartClearCache\n      parameters:\n        - description: Defines which cache should be cleared.\n          in: query\n          name: cache_type\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      cache_cleared:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - cart\n  /cart.config.json:\n    get:\n      description: Get list of cart configs\n      operationId: CartConfig\n      parameters:\n        - description: Set this parameter in order to choose which entity fields you want to retrieve\n          in: query\n          name: params\n          required: false\n          schema:\n            default: store_name,store_url,db_prefix\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all\n          in: query\n          name: exclude\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      db_prefix:\n                        type: string\n                      store_name:\n                        type: string\n                      store_url:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - cart\n  /cart.config.update.json:\n    put:\n      deprecated: true\n      description: Use this API method to update custom data in client database.\n      operationId: CartConfigUpdate\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CartConfigUpdate\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - cart\n  /cart.coupon.add.json:\n    post:\n      description: Create new coupon\n      operationId: CartCouponAdd\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CartCouponAdd\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      coupon_id:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - cart\n  /cart.coupon.condition.add.json:\n    post:\n      description: Create new coupon condition\n      operationId: CartCouponConditionAdd\n      parameters:\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: Coupon Id\n          in: query\n          name: coupon_id\n          required: true\n          schema:\n            type: string\n        - description: Defines condition operator\n          in: query\n          name: target\n          required: false\n          schema:\n            default: coupon_prerequisite\n            type: string\n        - description: Defines condition entity type\n          in: query\n          name: entity\n          required: true\n          schema:\n            enum:\n              - order\n              - order_shipping_address\n              - product\n              - customer\n            type: string\n        - description: Defines condition entity attribute key\n          in: query\n          name: key\n          required: true\n          schema:\n            enum:\n              - total\n              - subtotal\n              - shipping_total\n              - total_quantity\n              - total_weight\n              - country\n              - product_id\n              - variant_id\n              - category_id\n              - customer_id\n              - item_price\n              - item_total_price\n              - item_quantity\n            type: string\n        - description: Defines condition operator\n          in: query\n          name: operator\n          required: true\n          schema:\n            enum:\n              - ==\n              - \u003c\n              - \u003c=\n              - \"\u003e\"\n              - \"\u003e=\"\n              - ONE_OF\n            type: string\n        - description: Defines condition value, can be comma separated according to the operator.\n          in: query\n          name: value\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      status:\n                        type: boolean\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - cart\n  /cart.coupon.count.json:\n    get:\n      description: Get cart coupons count.\n      operationId: CartCouponCount\n      parameters:\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: Filter entity by date_start (greater or equal)\n          in: query\n          name: date_start_from\n          required: false\n          schema:\n            type: string\n        - description: Filter entity by date_start (less or equal)\n          in: query\n          name: date_start_to\n          required: false\n          schema:\n            type: string\n        - description: Filter entity by date_end (greater or equal)\n          in: query\n          name: date_end_from\n          required: false\n          schema:\n            type: string\n        - description: Filter entity by date_end (less or equal)\n          in: query\n          name: date_end_to\n          required: false\n          schema:\n            type: string\n        - description: Defines category's visibility status\n          in: query\n          name: avail\n          required: false\n          schema:\n            default: true\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      coupons_count:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - cart\n  /cart.coupon.delete.json:\n    delete:\n      description: Delete coupon\n      operationId: CartCouponDelete\n      parameters:\n        - description: Entity id\n          in: query\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      deleted:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - cart\n  /cart.coupon.list.json:\n    get:\n      description: Get cart coupon discounts.\n      operationId: CartCouponList\n      parameters:\n        - description: Used to retrieve entities via cursor-based pagination (it can't be used with any other filtering parameter)\n          in: query\n          name: page_cursor\n          required: false\n          schema:\n            type: string\n        - description: This parameter sets the number from which you want to get entities\n          in: query\n          name: start\n          required: false\n          schema:\n            default: 0\n            type: integer\n        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250\n          in: query\n          name: count\n          required: false\n          schema:\n            default: 10\n            type: integer\n        - description: Filter coupons by ids\n          in: query\n          name: coupons_ids\n          required: false\n          schema:\n            type: string\n        - description: Filter coupons by store id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: Filter entity by date_start (greater or equal)\n          in: query\n          name: date_start_from\n          required: false\n          schema:\n            type: string\n        - description: Filter entity by date_start (less or equal)\n          in: query\n          name: date_start_to\n          required: false\n          schema:\n            type: string\n        - description: Filter entity by date_end (greater or equal)\n          in: query\n          name: date_end_from\n          required: false\n          schema:\n            type: string\n        - description: Filter entity by date_end (less or equal)\n          in: query\n          name: date_end_to\n          required: false\n          schema:\n            type: string\n        - description: Filter coupons by avail status\n          in: query\n          name: avail\n          required: false\n          schema:\n            type: boolean\n        - description: Language id\n          in: query\n          name: lang_id\n          required: false\n          schema:\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to retrieve\n          in: query\n          name: params\n          required: false\n          schema:\n            default: force_all\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all\n          in: query\n          name: exclude\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Model_Response_Cart_Coupon_List\"\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - cart\n  /cart.create.json:\n    post:\n      description: Add store to the account\n      operationId: CartCreate\n      parameters:\n        - description: Store’s identifier which you can get from cart_list method\n          in: query\n          name: cart_id\n          required: true\n          schema:\n            enum:\n              - 3DCart\n              - 3DCartApi\n              - AceShop\n              - AmazonSP\n              - Amazon\n              - AspDotNetStorefront\n              - BigcommerceApi\n              - Creloaded\n              - CommerceHQ\n              - Cscart\n              - Cubecart\n              - Demandware\n              - EBay\n              - Ecwid\n              - Etsy\n              - Gambio\n              - Interspire\n              - JooCart\n              - Magento1212\n              - MijoShop\n              - Neto\n              - Opencart14\n              - LightSpeed\n              - Oscmax2\n              - Oscommerce22ms2\n              - Oxid\n              - Pinnacle\n              - Prestashop\n              - SSPremium\n              - Shopify\n              - Squarespace\n              - Shopware\n              - ShopwareApi\n              - Tomatocart\n              - Ubercart\n              - Virtuemart\n              - Volusion\n              - WPecommerce\n              - Walmart\n              - WebAsyst\n              - Woocommerce\n              - Xcart\n              - Xtcommerce\n              - XtcommerceVeyton\n              - Zencart137\n              - Hybris\n            type: string\n        - description: A web address of a store that you would like to connect to API2Cart\n          in: query\n          name: store_url\n          required: true\n          schema:\n            type: string\n        - description: This parameter allows to set up store with custom bridge url (also you must use store_root parameter if a bridge folder is not in the root folder of the store)\n          in: query\n          name: bridge_url\n          required: false\n          schema:\n            type: string\n        - description: Absolute path to the store root directory (used with \"bridge_url\" parameter)\n          in: query\n          name: store_root\n          required: false\n          schema:\n            type: string\n        - description: Set this parameter if bridge is already uploaded to store\n          in: query\n          name: store_key\n          required: false\n          schema:\n            type: string\n        - description: Shared secret\n          in: query\n          name: shared_secret\n          required: false\n          schema:\n            type: string\n        - description: Specify if api2cart should validate cart version\n          in: query\n          name: validate_version\n          required: false\n          schema:\n            default: false\n            type: boolean\n        - description: Enables or disables cart's verification\n          in: query\n          name: verify\n          required: false\n          schema:\n            default: true\n            type: boolean\n        - description: DB tables prefix\n          in: query\n          name: db_tables_prefix\n          required: false\n          schema:\n            type: string\n        - description: FTP connection host\n          in: query\n          name: ftp_host\n          required: false\n          schema:\n            type: string\n        - description: FTP User\n          in: query\n          name: ftp_user\n          required: false\n          schema:\n            type: string\n        - description: FTP Password\n          in: query\n          name: ftp_password\n          required: false\n          schema:\n            type: string\n        - description: FTP Port\n          in: query\n          name: ftp_port\n          required: false\n          schema:\n            type: integer\n        - description: FTP Store dir\n          in: query\n          name: ftp_store_dir\n          required: false\n          schema:\n            type: string\n        - description: 3DCart API Key\n          in: query\n          name: apiKey_3dcart\n          required: false\n          schema:\n            type: string\n        - description: It's a BigCommerce account for which API is enabled\n          in: query\n          name: AdminAccount\n          required: false\n          schema:\n            type: string\n        - description: BigCommerce API URL\n          in: query\n          name: ApiPath\n          required: false\n          schema:\n            type: string\n        - description: Bigcommerce API Key\n          in: query\n          name: ApiKey\n          required: false\n          schema:\n            type: string\n        - description: Client ID of the requesting app\n          in: query\n          name: client_id\n          required: false\n          schema:\n            type: string\n        - description: Access token authorizing the app to access resources on behalf of a user\n          in: query\n          name: accessToken\n          required: false\n          schema:\n            type: string\n        - description: API Path section unique to the store\n          in: query\n          name: context\n          required: false\n          schema:\n            type: string\n        - description: Access token authorizing the app to access resources on behalf of a user\n          in: query\n          name: access_token\n          required: false\n          schema:\n            type: string\n        - description: Shopify API Key\n          in: query\n          name: apiKey_shopify\n          required: false\n          schema:\n            type: string\n        - description: Shopify API Password\n          in: query\n          name: apiPassword\n          required: false\n          schema:\n            type: string\n        - description: Access token authorizing the app to access resources on behalf of a user\n          in: query\n          name: accessToken_shopify\n          required: false\n          schema:\n            type: string\n        - description: Neto API Key\n          in: query\n          name: apiKey\n          required: false\n          schema:\n            type: string\n        - description: Neto User Name\n          in: query\n          name: apiUsername\n          required: false\n          schema:\n            type: string\n        - description: Volusion API Password\n          in: query\n          name: EncryptedPassword\n          required: false\n          schema:\n            type: string\n        - description: It's a Volusion account for which API is enabled\n          in: query\n          name: Login\n          required: false\n          schema:\n            type: string\n        - description: It's a AspDotNetStorefront account for which API is available\n          in: query\n          name: apiUser_adnsf\n          required: false\n          schema:\n            type: string\n        - description: AspDotNetStorefront API Password\n          in: query\n          name: apiPass\n          required: false\n          schema:\n            type: string\n        - description: Shopping Cart Elite Access Key\n          in: query\n          name: accessKey_scelite\n          required: false\n          schema:\n            type: string\n        - description: Shopping Cart Elite API Key\n          in: query\n          name: apiKey_scelite\n          required: false\n          schema:\n            type: string\n        - description: Shopping Cart Elite API Secret Key\n          in: query\n          name: apiSecretKey_scelite\n          required: false\n          schema:\n            type: string\n        - description: 3DCart Application Private Key\n          in: query\n          name: privateKey\n          required: false\n          schema:\n            type: string\n        - description: 3DCart Token from Application\n          in: query\n          name: appToken\n          required: false\n          schema:\n            type: string\n        - description: Etsy keystring\n          in: query\n          name: etsy_keystring\n          required: false\n          schema:\n            type: string\n        - description: Etsy shared secret\n          in: query\n          name: etsy_shared_secret\n          required: false\n          schema:\n            type: string\n        - description: Secret token authorizing the app to access resources on behalf of a user\n          in: query\n          name: tokenSecret\n          required: false\n          schema:\n            type: string\n        - description: Application ID (AppID).\n          in: query\n          name: ebay_client_id\n          required: false\n          schema:\n            type: string\n        - description: Shared Secret from eBay application\n          in: query\n          name: ebay_client_secret\n          required: false\n          schema:\n            type: string\n        - description: The RuName value that eBay assigns to your application.\n          in: query\n          name: ebay_runame\n          required: false\n          schema:\n            type: string\n        - description: Used to authenticate API requests.\n          in: query\n          name: ebay_access_token\n          required: false\n          schema:\n            type: string\n        - description: Used to renew the access token.\n          in: query\n          name: ebay_refresh_token\n          required: false\n          schema:\n            type: string\n        - description: eBay environment\n          in: query\n          name: ebay_environment\n          required: false\n          schema:\n            default: production\n            type: string\n        - description: eBay global ID\n          in: query\n          name: ebay_site_id\n          required: false\n          schema:\n            default: 0\n            type: integer\n        - description: Demandware client id\n          in: query\n          name: dw_client_id\n          required: false\n          schema:\n            type: string\n        - description: Demandware api password\n          in: query\n          name: dw_api_pass\n          required: false\n          schema:\n            type: string\n        - description: Demandware user name\n          in: query\n          name: demandware_user_name\n          required: false\n          schema:\n            type: string\n        - description: Demandware user password\n          in: query\n          name: demandware_user_password\n          required: false\n          schema:\n            type: string\n        - description: Store Id\n          in: query\n          name: store_id\n          required: true\n          schema:\n            type: string\n        - description: Seller Id\n          in: query\n          name: seller_id\n          required: false\n          schema:\n            type: string\n        - description: Amazon Secret Key\n          in: query\n          name: amazon_secret_key\n          required: false\n          schema:\n            type: string\n        - description: Amazon Secret Key Id\n          in: query\n          name: amazon_access_key_id\n          required: false\n          schema:\n            type: string\n        - description: Comma separated marketplaces ids\n          in: query\n          name: marketplaces_ids\n          required: false\n          schema:\n            type: string\n        - description: \"\"\n          in: query\n          name: environment\n          required: false\n          schema:\n            default: production\n            type: string\n        - description: Omni Commerce Connector Client ID\n          in: query\n          name: hybris_client_id\n          required: false\n          schema:\n            type: string\n        - description: Omni Commerce Connector Client Secret\n          in: query\n          name: hybris_client_secret\n          required: false\n          schema:\n            type: string\n        - description: User Name\n          in: query\n          name: hybris_username\n          required: false\n          schema:\n            type: string\n        - description: User password\n          in: query\n          name: hybris_password\n          required: false\n          schema:\n            type: string\n        - description: Websites to stores mapping data\n          explode: false\n          in: query\n          name: hybris_websites\n          required: false\n          schema:\n            items:\n              type: string\n            type: array\n          style: form\n        - description: Walmart client ID\n          in: query\n          name: walmart_client_id\n          required: false\n          schema:\n            type: string\n        - description: Walmart client secret\n          in: query\n          name: walmart_client_secret\n          required: false\n          schema:\n            type: string\n        - description: Walmart environment\n          in: query\n          name: walmart_environment\n          required: false\n          schema:\n            default: production\n            type: string\n        - description: Walmart WM_CONSUMER.CHANNEL.TYPE header\n          in: query\n          name: walmart_channel_type\n          required: false\n          schema:\n            type: string\n        - description: LightSpeed api key\n          in: query\n          name: lightspeed_api_key\n          required: false\n          schema:\n            type: string\n        - description: LightSpeed api secret\n          in: query\n          name: lightspeed_api_secret\n          required: false\n          schema:\n            type: string\n        - description: Shopware api key\n          in: query\n          name: shopware_api_key\n          required: false\n          schema:\n            type: string\n        - description: Shopware client secret access key\n          in: query\n          name: shopware_api_secret\n          required: false\n          schema:\n            type: string\n        - description: CommerceHQ api key\n          in: query\n          name: commercehq_api_key\n          required: false\n          schema:\n            type: string\n        - description: CommerceHQ api password\n          in: query\n          name: commercehq_api_password\n          required: false\n          schema:\n            type: string\n        - description: 3DCart Private Key\n          in: query\n          name: 3dcart_private_key\n          required: false\n          schema:\n            type: string\n        - description: 3DCart Token\n          in: query\n          name: 3dcart_access_token\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      store_key:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n      tags:\n        - cart\n  /cart.delete.json:\n    delete:\n      description: Remove store from API2Cart\n      operationId: CartDelete\n      parameters:\n        - description: Identifies if there is a necessity to delete bridge\n          in: query\n          name: delete_bridge\n          required: false\n          schema:\n            default: true\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      store:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - cart\n  /cart.disconnect.json:\n    get:\n      description: Disconnect with the store and clear store session data.\n      operationId: CartDisconnect\n      parameters:\n        - description: Identifies if there is a necessity to delete bridge\n          in: query\n          name: delete_bridge\n          required: false\n          schema:\n            default: false\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      connection:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - cart\n  /cart.giftcard.add.json:\n    post:\n      description: Create new gift card\n      operationId: CartGiftcardAdd\n      parameters:\n        - description: Defines the gift card amount value.\n          in: query\n          name: amount\n          required: true\n          schema:\n            type: number\n        - description: Gift card code\n          in: query\n          name: code\n          required: false\n          schema:\n            type: string\n        - description: Gift card owner email\n          in: query\n          name: owner_email\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      code:\n                        type: string\n                      id:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - cart\n  /cart.giftcard.count.json:\n    get:\n      description: Get gift cards count.\n      operationId: CartGiftcardCount\n      parameters:\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      gift_cards_count:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - cart\n  /cart.giftcard.list.json:\n    get:\n      description: Get gift cards list.\n      operationId: CartGiftcardList\n      parameters:\n        - description: Used to retrieve entities via cursor-based pagination (it can't be used with any other filtering parameter)\n          in: query\n          name: page_cursor\n          required: false\n          schema:\n            type: string\n        - description: This parameter sets the number from which you want to get entities\n          in: query\n          name: start\n          required: false\n          schema:\n            default: 0\n            type: integer\n        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250\n          in: query\n          name: count\n          required: false\n          schema:\n            default: 10\n            type: integer\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to retrieve\n          in: query\n          name: params\n          required: false\n          schema:\n            default: force_all\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all\n          in: query\n          name: exclude\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Model_Response_Cart_GiftCard_List\"\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - cart\n  /cart.info.json:\n    get:\n      description: Get cart information\n      operationId: CartInfo\n      parameters:\n        - description: Set this parameter in order to choose which entity fields you want to retrieve\n          in: query\n          name: params\n          required: false\n          schema:\n            default: store_name,store_url,db_prefix\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all\n          in: query\n          name: exclude\n          required: false\n          schema:\n            type: string\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    $ref: \"#/components/schemas/Cart\"\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - cart\n  /cart.list.json:\n    get:\n      description: Get list of supported carts\n      operationId: CartList\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      supported_carts:\n                        items:\n                          properties:\n                            cart_id:\n                              type: string\n                            cart_name:\n                              type: string\n                            cart_versions:\n                              type: string\n                            params:\n                              items:\n                                type: string\n                              type: array\n                          type: object\n                        type: array\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n      tags:\n        - cart\n  /cart.meta_data.list.json:\n    get:\n      description: Get entity meta data\n      operationId: CartMetaDataList\n      parameters:\n        - description: Entity Id\n          in: query\n          name: entity_id\n          required: true\n          schema:\n            type: string\n        - description: Entity\n          in: query\n          name: entity\n          required: false\n          schema:\n            default: product\n            type: string\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: Key\n          in: query\n          name: key\n          required: false\n          schema:\n            type: string\n        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250\n          in: query\n          name: count\n          required: false\n          schema:\n            default: 10\n            type: integer\n        - description: Used to retrieve entities via cursor-based pagination (it can't be used with any other filtering parameter)\n          in: query\n          name: page_cursor\n          required: false\n          schema:\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to retrieve\n          in: query\n          name: params\n          required: false\n          schema:\n            default: key,value\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all\n          in: query\n          name: exclude\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Model_Response_Cart_MetaData_List\"\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - cart\n  /cart.meta_data.set.json:\n    post:\n      description: Set meta data for a specific entity\n      operationId: CartMetaDataSet\n      parameters:\n        - description: Entity Id\n          in: query\n          name: entity_id\n          required: true\n          schema:\n            type: string\n        - description: Entity\n          in: query\n          name: entity\n          required: false\n          schema:\n            default: product\n            type: string\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: Key\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: Value\n          in: query\n          name: value\n          required: true\n          schema:\n            type: string\n        - description: Metafield namespace\n          in: query\n          name: namespace\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      id:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - cart\n  /cart.meta_data.unset.json:\n    delete:\n      description: Unset meta data for a specific entity\n      operationId: CartMetaDataUnset\n      parameters:\n        - description: Entity Id\n          in: query\n          name: entity_id\n          required: true\n          schema:\n            type: string\n        - description: Entity\n          in: query\n          name: entity\n          required: false\n          schema:\n            default: product\n            type: string\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: Key\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: Entity id\n          in: query\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      status:\n                        type: boolean\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - cart\n  /cart.methods.json:\n    get:\n      description: Get list of cart methods\n      operationId: CartMethods\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      method:\n                        items:\n                          type: string\n                        type: array\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - cart\n  /cart.plugin.list.json:\n    get:\n      description: Get list of installed plugins\n      operationId: CartPluginList\n      parameters:\n        - description: Set this parameter if bridge is already uploaded to store\n          in: query\n          name: store_key\n          required: false\n          schema:\n            type: string\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: This parameter sets the number from which you want to get entities\n          in: query\n          name: start\n          required: false\n          schema:\n            default: 0\n            type: integer\n        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250\n          in: query\n          name: count\n          required: false\n          schema:\n            default: 10\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      all_plugins:\n                        type: integer\n                      plugins:\n                        items:\n                          $ref: \"#/components/schemas/PluginList\"\n                        type: array\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - cart\n  /cart.script.add.json:\n    post:\n      description: Add new script to the storefront\n      operationId: CartScriptAdd\n      parameters:\n        - description: The user-friendly script name\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n        - description: The user-friendly description\n          in: query\n          name: description\n          required: false\n          schema:\n            type: string\n        - description: An html string containing exactly one `script` tag.\n          in: query\n          name: html\n          required: false\n          schema:\n            type: string\n        - description: The URL of the remote script\n          in: query\n          name: src\n          required: false\n          schema:\n            type: string\n        - description: The load method to use for the script\n          in: query\n          name: load_method\n          required: false\n          schema:\n            type: string\n        - description: The page or pages on the online store where the script should be included\n          in: query\n          name: scope\n          required: false\n          schema:\n            default: storefront\n            type: string\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      script_id:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - cart\n  /cart.script.delete.json:\n    delete:\n      description: Remove script from the storefront\n      operationId: CartScriptDelete\n      parameters:\n        - description: Entity id\n          in: query\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      deleted:\n                        type: boolean\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - cart\n  /cart.script.list.json:\n    get:\n      description: Get scripts installed to the storefront\n      operationId: CartScriptList\n      parameters:\n        - description: Used to retrieve entities via cursor-based pagination (it can't be used with any other filtering parameter)\n          in: query\n          name: page_cursor\n          required: false\n          schema:\n            type: string\n        - description: This parameter sets the number from which you want to get entities\n          in: query\n          name: start\n          required: false\n          schema:\n            default: 0\n            type: integer\n        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250\n          in: query\n          name: count\n          required: false\n          schema:\n            default: 10\n            type: integer\n        - description: Retrieve entities from their creation date\n          in: query\n          name: created_from\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities to their creation date\n          in: query\n          name: created_to\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities from their modification date\n          in: query\n          name: modified_from\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities to their modification date\n          in: query\n          name: modified_to\n          required: false\n          schema:\n            type: string\n        - description: Retrieves only scripts with specific ids\n          in: query\n          name: script_ids\n          required: false\n          schema:\n            type: string\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to retrieve\n          in: query\n          name: params\n          required: false\n          schema:\n            default: force_all\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all\n          in: query\n          name: exclude\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Model_Response_Cart_Script_List\"\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - cart\n  /cart.shipping_zones.list.json:\n    get:\n      description: Get list of shipping zones\n      operationId: CartShippingZonesList\n      parameters:\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    $ref: \"#/components/schemas/Cart_ShippingZone\"\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - cart\n  /cart.validate.json:\n    get:\n      description: Check store availability, bridge connection for the downloadable carts, identify DB prefix, validate API accesses for API carts.\n      operationId: CartValidate\n      parameters:\n        - description: Specify if api2cart should validate cart version\n          in: query\n          name: validate_version\n          required: false\n          schema:\n            default: false\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      status:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - cart\n  /category.add.json:\n    post:\n      description: Add new category in store\n      operationId: CategoryAdd\n      parameters:\n        - description: Defines category's name that has to be added\n          in: query\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: Adds categories specified by parent id\n          in: query\n          name: parent_id\n          required: false\n          schema:\n            type: string\n        - description: Create category in the stores that is specified by comma-separated stores' id\n          in: query\n          name: stores_ids\n          required: false\n          schema:\n            default: 0\n            type: string\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: Language id\n          in: query\n          name: lang_id\n          required: false\n          schema:\n            type: string\n        - description: Defines category's visibility status\n          in: query\n          name: avail\n          required: false\n          schema:\n            default: true\n            type: boolean\n        - description: Sort number in the list\n          in: query\n          name: sort_order\n          required: false\n          schema:\n            default: 0\n            type: integer\n        - description: Entity's date creation\n          in: query\n          name: created_time\n          required: false\n          schema:\n            type: string\n        - description: Entity's date modification\n          in: query\n          name: modified_time\n          required: false\n          schema:\n            type: string\n        - description: Defines category's description\n          in: query\n          name: description\n          required: false\n          schema:\n            type: string\n        - description: Defines unique meta title for each entity\n          in: query\n          name: meta_title\n          required: false\n          schema:\n            type: string\n        - description: Defines unique meta description of a entity\n          in: query\n          name: meta_description\n          required: false\n          schema:\n            type: string\n        - description: Defines unique meta keywords for each entity\n          in: query\n          name: meta_keywords\n          required: false\n          schema:\n            type: string\n        - description: Defines unique category's URL for SEO\n          in: query\n          name: seo_url\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      category_id:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - category\n  /category.assign.json:\n    post:\n      description: Assign category to product\n      operationId: CategoryAssign\n      parameters:\n        - description: Defines category assign to the product, specified by product id\n          in: query\n          name: product_id\n          required: true\n          schema:\n            type: string\n        - description: Defines category assign, specified by category id\n          in: query\n          name: category_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - category\n  /category.count.json:\n    get:\n      description: Count categories in store.\n      operationId: CategoryCount\n      parameters:\n        - description: Counts categories specified by parent id\n          in: query\n          name: parent_id\n          required: false\n          schema:\n            type: string\n        - description: Counts category specified by store id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: Counts category specified by language id\n          in: query\n          name: lang_id\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      categories_count:\n                        type: integer\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - category\n  /category.delete.json:\n    delete:\n      description: Delete category in store\n      operationId: CategoryDelete\n      parameters:\n        - description: Defines category removal, specified by category id\n          in: query\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      deleted:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - category\n  /category.find.json:\n    get:\n      description: Search category in store. \"Laptop\" is specified here by default.\n      operationId: CategoryFind\n      parameters:\n        - description: Entity search that is specified by some value\n          in: query\n          name: find_value\n          required: true\n          schema:\n            type: string\n        - description: Entity search that is specified by the comma-separated unique fields\n          in: query\n          name: find_where\n          required: false\n          schema:\n            default: name\n            type: string\n        - description: Entity search that is specified by comma-separated parameters\n          in: query\n          name: find_params\n          required: false\n          schema:\n            default: whole_words\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      category:\n                        items:\n                          properties:\n                            description:\n                              type: string\n                            id:\n                              type: string\n                            name:\n                              type: string\n                          type: object\n                        type: array\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - category\n  /category.image.add.json:\n    post:\n      description: Add image to category\n      operationId: CategoryImageAdd\n      parameters:\n        - description: Defines category id where the image should be added\n          in: query\n          name: category_id\n          required: true\n          schema:\n            type: string\n        - description: Defines image's name\n          in: query\n          name: image_name\n          required: true\n          schema:\n            type: string\n        - description: Defines URL of the image that has to be added\n          in: query\n          name: url\n          required: true\n          schema:\n            type: string\n        - description: Defines alternative text that has to be attached to the picture\n          in: query\n          name: label\n          required: false\n          schema:\n            type: string\n        - description: Mime type of image http://en.wikipedia.org/wiki/Internet_media_type.\n          in: query\n          name: mime\n          required: false\n          schema:\n            type: string\n        - description: Defines image's types that are specified by comma-separated list\n          in: query\n          name: type\n          required: true\n          schema:\n            enum:\n              - base\n              - thumbnail\n            type: string\n        - description: Defines image’s position in the list\n          in: query\n          name: position\n          required: false\n          schema:\n            default: 0\n            type: integer\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      image_path:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - category\n  /category.image.delete.json:\n    delete:\n      description: Delete image\n      operationId: CategoryImageDelete\n      parameters:\n        - description: Defines category id where the image should be deleted\n          in: query\n          name: category_id\n          required: true\n          schema:\n            type: string\n        - description: Define image id\n          in: query\n          name: image_id\n          required: true\n          schema:\n            type: string\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      deleted:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - category\n  /category.info.json:\n    get:\n      description: Get category info about category ID*** or specify other category ID.\n      operationId: CategoryInfo\n      parameters:\n        - description: Retrieves category's info specified by category id\n          in: query\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to retrieve\n          in: query\n          name: params\n          required: false\n          schema:\n            default: id,parent_id,name,description\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all\n          in: query\n          name: exclude\n          required: false\n          schema:\n            type: string\n        - description: Retrieves category info  specified by store id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: Retrieves category info  specified by language id\n          in: query\n          name: lang_id\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    $ref: \"#/components/schemas/Category\"\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - category\n  /category.list.json:\n    get:\n      description: Get list of categories from store.\n      operationId: CategoryList\n      parameters:\n        - description: This parameter sets the number from which you want to get entities\n          in: query\n          name: start\n          required: false\n          schema:\n            default: 0\n            type: integer\n        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250\n          in: query\n          name: count\n          required: false\n          schema:\n            default: 10\n            type: integer\n        - description: Used to retrieve entities via cursor-based pagination (it can't be used with any other filtering parameter)\n          in: query\n          name: page_cursor\n          required: false\n          schema:\n            type: string\n        - description: Retrieves categories specified by parent id\n          in: query\n          name: parent_id\n          required: false\n          schema:\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to retrieve\n          in: query\n          name: params\n          required: false\n          schema:\n            default: id,parent_id,name,description\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all\n          in: query\n          name: exclude\n          required: false\n          schema:\n            type: string\n        - description: Retrieves categories specified by store id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: Retrieves categorys specified by language id\n          in: query\n          name: lang_id\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Model_Response_Category_List\"\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - category\n  /category.unassign.json:\n    post:\n      description: Unassign category to product\n      operationId: CategoryUnassign\n      parameters:\n        - description: Defines category unassign, specified by category id\n          in: query\n          name: category_id\n          required: true\n          schema:\n            type: string\n        - description: Defines category unassign to the product, specified by product id\n          in: query\n          name: product_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - category\n  /category.update.json:\n    put:\n      description: Update category in store\n      operationId: CategoryUpdate\n      parameters:\n        - description: Defines category update specified by category id\n          in: query\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: Defines new category’s name\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n        - description: Defines new parent category id\n          in: query\n          name: parent_id\n          required: false\n          schema:\n            type: string\n        - description: Update category in the stores that is specified by comma-separated stores' id\n          in: query\n          name: stores_ids\n          required: false\n          schema:\n            default: 0\n            type: string\n        - description: Defines category's visibility status\n          in: query\n          name: avail\n          required: false\n          schema:\n            type: boolean\n        - description: Sort number in the list\n          in: query\n          name: sort_order\n          required: false\n          schema:\n            type: integer\n        - description: Entity's date modification\n          in: query\n          name: modified_time\n          required: false\n          schema:\n            type: string\n        - description: Defines new category's description\n          in: query\n          name: description\n          required: false\n          schema:\n            type: string\n        - description: Defines unique meta title for each entity\n          in: query\n          name: meta_title\n          required: false\n          schema:\n            type: string\n        - description: Defines unique meta description of a entity\n          in: query\n          name: meta_description\n          required: false\n          schema:\n            type: string\n        - description: Defines unique meta keywords for each entity\n          in: query\n          name: meta_keywords\n          required: false\n          schema:\n            type: string\n        - description: Defines unique category's URL for SEO\n          in: query\n          name: seo_url\n          required: false\n          schema:\n            type: string\n        - description: Language id\n          in: query\n          name: lang_id\n          required: false\n          schema:\n            type: string\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      updated_items:\n                        type: integer\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - category\n  /customer.add.json:\n    post:\n      description: Add customer into store.\n      operationId: CustomerAdd\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CustomerAdd\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      customer_id:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - customer\n  /customer.attribute.list.json:\n    get:\n      description: Get attributes for specific customer\n      operationId: CustomerAttributeList\n      parameters:\n        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250\n          in: query\n          name: count\n          required: false\n          schema:\n            default: 10\n            type: integer\n        - description: Used to retrieve entities via cursor-based pagination (it can't be used with any other filtering parameter)\n          in: query\n          name: page_cursor\n          required: false\n          schema:\n            type: string\n        - description: Retrieves orders specified by customer id\n          in: query\n          name: customer_id\n          required: true\n          schema:\n            type: string\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: Language id\n          in: query\n          name: lang_id\n          required: false\n          schema:\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to retrieve\n          in: query\n          name: params\n          required: false\n          schema:\n            default: force_all\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all\n          in: query\n          name: exclude\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Model_Response_Customer_Attribute_List\"\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - customer\n  /customer.count.json:\n    get:\n      description: Get number of customers from store.\n      operationId: CustomerCount\n      parameters:\n        - description: Customer group_id\n          in: query\n          name: group_id\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities from their creation date\n          in: query\n          name: created_from\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities to their creation date\n          in: query\n          name: created_to\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities from their modification date\n          in: query\n          name: modified_from\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities to their modification date\n          in: query\n          name: modified_to\n          required: false\n          schema:\n            type: string\n        - description: Counts customer specified by store id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: The numeric ID of the customer list in Demandware.\n          in: query\n          name: customer_list_id\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      customers_count:\n                        type: integer\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - customer\n  /customer.find.json:\n    get:\n      description: Find customers in store.\n      operationId: CustomerFind\n      parameters:\n        - description: Entity search that is specified by some value\n          in: query\n          name: find_value\n          required: true\n          schema:\n            type: string\n        - description: Entity search that is specified by the comma-separated unique fields\n          in: query\n          name: find_where\n          required: false\n          schema:\n            default: email\n            type: string\n        - description: Entity search that is specified by comma-separated parameters\n          in: query\n          name: find_params\n          required: false\n          schema:\n            default: whole_words\n            type: string\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      email:\n                        type: string\n                      first_name:\n                        type: string\n                      id:\n                        type: string\n                      last_name:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - customer\n  /customer.group.add.json:\n    post:\n      description: Create customer group.\n      operationId: CustomerGroupAdd\n      parameters:\n        - description: Customer group name\n          in: query\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: Assign customer group to the stores that is specified by comma-separated stores' id\n          in: query\n          name: stores_ids\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    items:\n                      $ref: \"#/components/schemas/Customer_Group\"\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - customer\n  /customer.group.list.json:\n    get:\n      description: Get list of customers groups.\n      operationId: CustomerGroupList\n      parameters:\n        - description: Used to retrieve entities via cursor-based pagination (it can't be used with any other filtering parameter)\n          in: query\n          name: page_cursor\n          required: false\n          schema:\n            type: string\n        - description: This parameter sets the number from which you want to get entities\n          in: query\n          name: start\n          required: false\n          schema:\n            default: 0\n            type: integer\n        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250\n          in: query\n          name: count\n          required: false\n          schema:\n            default: 10\n            type: integer\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: Language id\n          in: query\n          name: lang_id\n          required: false\n          schema:\n            type: string\n        - description: Groups that will be assigned to a customer\n          in: query\n          name: group_ids\n          required: false\n          schema:\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to retrieve\n          in: query\n          name: params\n          required: false\n          schema:\n            default: force_all\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all\n          in: query\n          name: exclude\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Model_Response_Customer_Group_List\"\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - customer\n  /customer.info.json:\n    get:\n      description: Get customers' details from store.\n      operationId: CustomerInfo\n      parameters:\n        - description: Retrieves customer's info specified by customer id\n          in: query\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to retrieve\n          in: query\n          name: params\n          required: false\n          schema:\n            default: id,email,first_name,last_name\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all\n          in: query\n          name: exclude\n          required: false\n          schema:\n            type: string\n        - description: Retrieves customer info specified by store id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    $ref: \"#/components/schemas/Customer\"\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - customer\n  /customer.list.json:\n    get:\n      description: Get list of customers from store.\n      operationId: CustomerList\n      parameters:\n        - description: Used to retrieve entities via cursor-based pagination (it can't be used with any other filtering parameter)\n          in: query\n          name: page_cursor\n          required: false\n          schema:\n            type: string\n        - description: This parameter sets the number from which you want to get entities\n          in: query\n          name: start\n          required: false\n          schema:\n            default: 0\n            type: integer\n        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250\n          in: query\n          name: count\n          required: false\n          schema:\n            default: 10\n            type: integer\n        - description: Retrieve entities from their creation date\n          in: query\n          name: created_from\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities to their creation date\n          in: query\n          name: created_to\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities from their modification date\n          in: query\n          name: modified_from\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities to their modification date\n          in: query\n          name: modified_to\n          required: false\n          schema:\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to retrieve\n          in: query\n          name: params\n          required: false\n          schema:\n            default: id,email,first_name,last_name\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all\n          in: query\n          name: exclude\n          required: false\n          schema:\n            type: string\n        - description: Customer group_id\n          in: query\n          name: group_id\n          required: false\n          schema:\n            type: string\n        - description: Retrieves customers specified by store id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: The numeric ID of the customer list in Demandware.\n          in: query\n          name: customer_list_id\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Model_Response_Customer_List\"\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - customer\n  /customer.update.json:\n    put:\n      description: Update information of customer in store.\n      operationId: CustomerUpdate\n      parameters:\n        - description: Entity id\n          in: query\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: Customer group_id\n          in: query\n          name: group_id\n          required: false\n          schema:\n            type: string\n        - description: Groups that will be assigned to a customer\n          in: query\n          name: group_ids\n          required: false\n          schema:\n            type: string\n        - description: Defines customer's first name\n          in: query\n          name: first_name\n          required: false\n          schema:\n            type: string\n        - description: Defines customer's last name\n          in: query\n          name: last_name\n          required: false\n          schema:\n            type: string\n        - description: Defines whether the newsletter subscription is available for the user\n          in: query\n          name: news_letter_subscription\n          required: false\n          schema:\n            type: boolean\n        - description: Customer tags\n          in: query\n          name: tags\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      updated:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - customer\n  /order.abandoned.list.json:\n    get:\n      description: Get list of orders that were left by customers before completing the order.\n      operationId: OrderAbandonedList\n      parameters:\n        - description: Retrieves orders specified by customer id\n          in: query\n          name: customer_id\n          required: false\n          schema:\n            type: string\n        - description: Retrieves orders specified by customer email\n          in: query\n          name: customer_email\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities to their creation date\n          in: query\n          name: created_to\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities from their creation date\n          in: query\n          name: created_from\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities to their modification date\n          in: query\n          name: modified_to\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities from their modification date\n          in: query\n          name: modified_from\n          required: false\n          schema:\n            type: string\n        - description: Filter empty emails\n          in: query\n          name: skip_empty_email\n          required: false\n          schema:\n            default: false\n            type: boolean\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: Used to retrieve entities via cursor-based pagination (it can't be used with any other filtering parameter)\n          in: query\n          name: page_cursor\n          required: false\n          schema:\n            type: string\n        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250\n          in: query\n          name: count\n          required: false\n          schema:\n            default: 10\n            type: integer\n        - description: This parameter sets the number from which you want to get entities\n          in: query\n          name: start\n          required: false\n          schema:\n            default: 0\n            type: integer\n        - description: Set this parameter in order to choose which entity fields you want to retrieve\n          in: query\n          name: params\n          required: false\n          schema:\n            default: customer,totals,items\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all\n          in: query\n          name: exclude\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Model_Response_Order_Abandoned_List\"\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - order\n  /order.add.json:\n    post:\n      description: Add a new order to the cart.\n      operationId: OrderAdd\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/OrderAdd\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      order_id:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - order\n  /order.count.json:\n    get:\n      description: Count orders in store\n      operationId: OrderCount\n      parameters:\n        - description: Counts orders quantity specified by customer id\n          in: query\n          name: customer_id\n          required: false\n          schema:\n            type: string\n        - description: Counts orders quantity specified by customer email\n          in: query\n          name: customer_email\n          required: false\n          schema:\n            type: string\n        - description: Counts orders quantity specified by order status\n          in: query\n          name: order_status\n          required: false\n          schema:\n            type: string\n        - description: Retrieves orders specified by order statuses\n          explode: false\n          in: query\n          name: order_status_ids\n          required: false\n          schema:\n            items:\n              type: string\n            type: array\n          style: form\n        - description: Retrieve entities to their creation date\n          in: query\n          name: created_to\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities from their creation date\n          in: query\n          name: created_from\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities to their modification date\n          in: query\n          name: modified_to\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities from their modification date\n          in: query\n          name: modified_from\n          required: false\n          schema:\n            type: string\n        - description: Counts orders quantity specified by store id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: Counts orders specified by ids\n          in: query\n          name: ids\n          required: false\n          schema:\n            type: string\n        - description: Counts orders specified by order ids\n          in: query\n          name: order_ids\n          required: false\n          schema:\n            type: string\n        - description: Counts orders quantity specified by order status\n          in: query\n          name: ebay_order_status\n          required: false\n          schema:\n            type: string\n        - description: Counts orders quantity specified by financial status\n          in: query\n          name: financial_status\n          required: false\n          schema:\n            type: string\n        - description: Create order with fulfillment status\n          in: query\n          name: fulfillment_status\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities according to shipping method\n          in: query\n          name: shipping_method\n          required: false\n          schema:\n            type: string\n        - description: Retrieves order with delivery method\n          in: query\n          name: delivery_method\n          required: false\n          schema:\n            type: string\n        - description: Retrieves order with ship node type\n          in: query\n          name: ship_node_type\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      orders_count:\n                        type: integer\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - order\n  /order.financial_status.list.json:\n    get:\n      description: Retrieve list of financial statuses\n      operationId: OrderFinancialStatusList\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      order_financial_statuses:\n                        items:\n                          properties:\n                            id:\n                              type: string\n                            name:\n                              type: string\n                          type: object\n                        type: array\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - order\n  /order.find.json:\n    get:\n      description: Find orders\n      operationId: OrderFind\n      parameters:\n        - description: Retrieves orders specified by customer id\n          in: query\n          name: customer_id\n          required: false\n          schema:\n            type: string\n        - description: Retrieves orders specified by customer email\n          in: query\n          name: customer_email\n          required: false\n          schema:\n            type: string\n        - description: Retrieves orders specified by order status\n          in: query\n          name: order_status\n          required: false\n          schema:\n            type: string\n        - description: This parameter sets the number from which you want to get entities\n          in: query\n          name: start\n          required: false\n          schema:\n            default: 0\n            type: integer\n        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250\n          in: query\n          name: count\n          required: false\n          schema:\n            default: 10\n            type: integer\n        - description: Set this parameter in order to choose which entity fields you want to retrieve\n          in: query\n          name: params\n          required: false\n          schema:\n            default: order_id,customer,totals,address,items,bundles,status\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all\n          in: query\n          name: exclude\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities to their creation date\n          in: query\n          name: created_to\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities from their creation date\n          in: query\n          name: created_from\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities to their modification date\n          in: query\n          name: modified_to\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities from their modification date\n          in: query\n          name: modified_from\n          required: false\n          schema:\n            type: string\n        - description: Retrieves orders specified by financial status\n          in: query\n          name: financial_status\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      order:\n                        items:\n                          $ref: \"#/components/schemas/Order\"\n                        type: array\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - order\n  /order.fulfillment_status.list.json:\n    get:\n      description: Retrieve list of fulfillment statuses\n      operationId: OrderFulfillmentStatusList\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      order_fulfillment_statuses:\n                        items:\n                          properties:\n                            id:\n                              type: string\n                            name:\n                              type: string\n                          type: object\n                        type: array\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - order\n  /order.info.json:\n    get:\n      description: Info about a specific order by ID\n      operationId: OrderInfo\n      parameters:\n        - description: Retrieves order’s info specified by order id\n          in: query\n          name: order_id\n          required: false\n          schema:\n            type: string\n        - description: Retrieves order info specified by id\n          in: query\n          name: id\n          required: false\n          schema:\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to retrieve\n          in: query\n          name: params\n          required: false\n          schema:\n            default: order_id,customer,totals,address,items,bundles,status\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all\n          in: query\n          name: exclude\n          required: false\n          schema:\n            type: string\n        - description: Defines store id where the order should be found\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: If the value is 'true' and order exist in our cache, we will return order.info response from cache\n          in: query\n          name: enable_cache\n          required: false\n          schema:\n            default: false\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    $ref: \"#/components/schemas/Order\"\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - order\n  /order.list.json:\n    get:\n      description: Get list of orders from store.\n      operationId: OrderList\n      parameters:\n        - description: Retrieves orders specified by customer id\n          in: query\n          name: customer_id\n          required: false\n          schema:\n            type: string\n        - description: Retrieves orders specified by customer email\n          in: query\n          name: customer_email\n          required: false\n          schema:\n            type: string\n        - description: Filter orders by customer's phone number\n          in: query\n          name: phone\n          required: false\n          schema:\n            type: string\n        - description: Retrieves orders specified by order status\n          in: query\n          name: order_status\n          required: false\n          schema:\n            type: string\n        - description: Retrieves orders specified by order statuses\n          explode: false\n          in: query\n          name: order_status_ids\n          required: false\n          schema:\n            items:\n              type: string\n            type: array\n          style: form\n        - description: This parameter sets the number from which you want to get entities\n          in: query\n          name: start\n          required: false\n          schema:\n            default: 0\n            type: integer\n        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250\n          in: query\n          name: count\n          required: false\n          schema:\n            default: 10\n            type: integer\n        - description: Used to retrieve orders via cursor-based pagination (it can't be used with any other filtering parameter)\n          in: query\n          name: page_cursor\n          required: false\n          schema:\n            type: string\n        - description: Set field to sort by\n          in: query\n          name: sort_by\n          required: false\n          schema:\n            default: order_id\n            type: string\n        - description: Set sorting direction\n          in: query\n          name: sort_direction\n          required: false\n          schema:\n            default: asc\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to retrieve\n          in: query\n          name: params\n          required: false\n          schema:\n            default: order_id,customer,totals,address,items,bundles,status\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all\n          in: query\n          name: exclude\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities to their creation date\n          in: query\n          name: created_to\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities from their creation date\n          in: query\n          name: created_from\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities to their modification date\n          in: query\n          name: modified_to\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities from their modification date\n          in: query\n          name: modified_from\n          required: false\n          schema:\n            type: string\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: Retrieves orders specified by ids\n          in: query\n          name: ids\n          required: false\n          schema:\n            type: string\n        - description: Retrieves orders specified by order ids\n          in: query\n          name: order_ids\n          required: false\n          schema:\n            type: string\n        - description: Retrieves orders specified by order status\n          in: query\n          name: ebay_order_status\n          required: false\n          schema:\n            type: string\n        - description: Retrieves order’s info specified by basket id.\n          in: query\n          name: basket_id\n          required: false\n          schema:\n            type: string\n        - description: Retrieves orders specified by financial status\n          in: query\n          name: financial_status\n          required: false\n          schema:\n            type: string\n        - description: Create order with fulfillment status\n          in: query\n          name: fulfillment_status\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities according to shipping method\n          in: query\n          name: shipping_method\n          required: false\n          schema:\n            type: string\n        - description: Skipped orders by ids\n          in: query\n          name: skip_order_ids\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities starting from the specified id.\n          in: query\n          name: since_id\n          required: false\n          schema:\n            type: integer\n        - description: Filter deleted orders\n          in: query\n          name: is_deleted\n          required: false\n          schema:\n            type: boolean\n        - description: Retrieve entities according to shipping country\n          in: query\n          name: shipping_country_iso3\n          required: false\n          schema:\n            type: string\n        - description: If the value is 'true', we will cache orders for a 15 minutes in order to increase speed and reduce requests throttling for some methods and shoping platforms (for example order.shipment.add)\n          in: query\n          name: enable_cache\n          required: false\n          schema:\n            default: false\n            type: boolean\n        - description: Retrieves order with delivery method\n          in: query\n          name: delivery_method\n          required: false\n          schema:\n            type: string\n        - description: Retrieves order with ship node type\n          in: query\n          name: ship_node_type\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Model_Response_Order_List\"\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - order\n  /order.refund.add.json:\n    post:\n      description: Add a refund to the order.\n      operationId: OrderRefundAdd\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/OrderRefundAdd\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      refund_id:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - order\n  /order.shipment.add.json:\n    post:\n      description: Add a shipment to the order.\n      operationId: OrderShipmentAdd\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/OrderShipmentAdd\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      shipment_id:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - order\n  /order.shipment.delete.json:\n    delete:\n      description: Delete order's shipment.\n      operationId: OrderShipmentDelete\n      parameters:\n        - description: Shipment id indicates the number of delivery\n          in: query\n          name: shipment_id\n          required: true\n          schema:\n            type: string\n        - description: Defines the order for which the shipment will be deleted\n          in: query\n          name: order_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      status:\n                        type: integer\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - order\n  /order.shipment.list.json:\n    get:\n      description: Get list of shipments by orders.\n      operationId: OrderShipmentList\n      parameters:\n        - description: Retrieves shipments specified by order id\n          in: query\n          name: order_id\n          required: true\n          schema:\n            type: string\n        - description: Used to retrieve entities via cursor-based pagination (it can't be used with any other filtering parameter)\n          in: query\n          name: page_cursor\n          required: false\n          schema:\n            type: string\n        - description: This parameter sets the number from which you want to get entities\n          in: query\n          name: start\n          required: false\n          schema:\n            default: 0\n            type: integer\n        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250\n          in: query\n          name: count\n          required: false\n          schema:\n            default: 10\n            type: integer\n        - description: Set this parameter in order to choose which entity fields you want to retrieve\n          in: query\n          name: params\n          required: false\n          schema:\n            default: id,order_id,items,tracking_numbers\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all\n          in: query\n          name: exclude\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities from their creation date\n          in: query\n          name: created_from\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities to their creation date\n          in: query\n          name: created_to\n          required: false\n          schema:\n            type: string\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Model_Response_Order_Shipment_List\"\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - order\n  /order.shipment.tracking.add.json:\n    post:\n      description: Add order shipment's tracking info.\n      operationId: OrderShipmentTrackingAdd\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/OrderShipmentTrackingAdd\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      tracking_id:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - order\n  /order.shipment.update.json:\n    put:\n      description: Update order's shipment information.\n      operationId: OrderShipmentUpdate\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/OrderShipmentUpdate\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      updated_items:\n                        type: integer\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - order\n  /order.status.list.json:\n    get:\n      description: Retrieve list of statuses\n      operationId: OrderStatusList\n      parameters:\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      cart_order_statuses:\n                        items:\n                          properties:\n                            id:\n                              type: string\n                            name:\n                              type: string\n                          type: object\n                        type: array\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - order\n  /order.update.json:\n    put:\n      description: Update existing order.\n      operationId: OrderUpdate\n      parameters:\n        - description: Defines the orders specified by order id\n          in: query\n          name: order_id\n          required: true\n          schema:\n            type: string\n        - description: Defines store id where the order should be found\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: Defines new order's status\n          in: query\n          name: order_status\n          required: false\n          schema:\n            type: string\n        - description: Specifies order comment\n          in: query\n          name: comment\n          required: false\n          schema:\n            type: string\n        - description: Specifies admin's order comment\n          in: query\n          name: admin_comment\n          required: false\n          schema:\n            type: string\n        - description: Specifies private admin's order comment\n          in: query\n          name: admin_private_comment\n          required: false\n          schema:\n            type: string\n        - description: Specifies order's  modification date\n          in: query\n          name: date_modified\n          required: false\n          schema:\n            type: string\n        - description: Specifies order's  finished date\n          in: query\n          name: date_finished\n          required: false\n          schema:\n            type: string\n        - description: Update order financial status to specified\n          in: query\n          name: financial_status\n          required: false\n          schema:\n            type: string\n        - description: Create order with fulfillment status\n          in: query\n          name: fulfillment_status\n          required: false\n          schema:\n            type: string\n        - description: Defines order payment method.\u003cbr/\u003eSetting order_payment_method on Shopify will also change financial_status field value to 'paid'\n          in: query\n          name: order_payment_method\n          required: false\n          schema:\n            type: string\n        - description: Send notifications to customer after order was created\n          in: query\n          name: send_notifications\n          required: false\n          schema:\n            default: false\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      updated_items:\n                        type: integer\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - order\n  /product.add.json:\n    post:\n      description: Add new product to store.\n      operationId: ProductAdd\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ProductAdd\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      product_id:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - product\n  /product.attribute.list.json:\n    get:\n      description: Get list of attributes and values.\n      operationId: ProductAttributeList\n      parameters:\n        - description: Used to retrieve entities via cursor-based pagination (it can't be used with any other filtering parameter)\n          in: query\n          name: page_cursor\n          required: false\n          schema:\n            type: string\n        - description: This parameter sets the number from which you want to get entities\n          in: query\n          name: start\n          required: false\n          schema:\n            default: 0\n            type: integer\n        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250\n          in: query\n          name: count\n          required: false\n          schema:\n            default: 10\n            type: integer\n        - description: Retrieves attributes specified by product id\n          in: query\n          name: product_id\n          required: true\n          schema:\n            type: string\n        - description: Defines product's variants specified by variant id\n          in: query\n          name: variant_id\n          required: false\n          schema:\n            type: string\n        - description: Retrieves info for specified attribute_id\n          in: query\n          name: attribute_id\n          required: false\n          schema:\n            type: string\n        - description: Filter by attribute_group_id\n          in: query\n          name: attribute_group_id\n          required: false\n          schema:\n            type: string\n        - description: Retrieves attributes specified by set_name in Magento\n          in: query\n          name: set_name\n          required: false\n          schema:\n            type: string\n        - description: Retrieves attributes specified by language id\n          in: query\n          name: lang_id\n          required: false\n          schema:\n            type: string\n        - description: Retrieves attributes specified by store id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: Set field to sort by\n          in: query\n          name: sort_by\n          required: false\n          schema:\n            default: attribute_id\n            type: string\n        - description: Set sorting direction\n          in: query\n          name: sort_direction\n          required: false\n          schema:\n            default: asc\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to retrieve\n          in: query\n          name: params\n          required: false\n          schema:\n            default: attribute_id,name\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all\n          in: query\n          name: exclude\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Model_Response_Product_Attribute_List\"\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - product\n  /product.attribute.value.set.json:\n    post:\n      description: Set attribute value to product.\n      operationId: ProductAttributeValueSet\n      parameters:\n        - description: Defines product id where the attribute should be added\n          in: query\n          name: product_id\n          required: true\n          schema:\n            type: string\n        - description: Filter by attribute_id\n          in: query\n          name: attribute_id\n          required: false\n          schema:\n            type: string\n        - description: Filter by attribute_group_id\n          in: query\n          name: attribute_group_id\n          required: false\n          schema:\n            type: string\n        - description: Define attribute name\n          in: query\n          name: attribute_name\n          required: false\n          schema:\n            type: string\n        - description: Define attribute value\n          in: query\n          name: value\n          required: false\n          schema:\n            type: string\n        - description: Define attribute value id\n          in: query\n          name: value_id\n          required: false\n          schema:\n            type: integer\n        - description: Language id\n          in: query\n          name: lang_id\n          required: false\n          schema:\n            type: string\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      attribute_id:\n                        type: string\n                      product_id:\n                        type: string\n                      value_id:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - product\n  /product.attribute.value.unset.json:\n    post:\n      description: Removes attribute value for a product.\n      operationId: ProductAttributeValueUnset\n      parameters:\n        - description: Product id\n          in: query\n          name: product_id\n          required: true\n          schema:\n            type: string\n        - description: Attribute Id\n          in: query\n          name: attribute_id\n          required: true\n          schema:\n            type: string\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: Boolean, whether or not to unset default value of the attribute, if applicable\n          in: query\n          name: include_default\n          required: false\n          schema:\n            default: false\n            type: boolean\n        - description: Is reindex required\n          in: query\n          name: reindex\n          required: false\n          schema:\n            default: true\n            type: boolean\n        - description: Is cache clear required\n          in: query\n          name: clear_cache\n          required: false\n          schema:\n            default: true\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      success:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - product\n  /product.brand.list.json:\n    get:\n      description: Get list of brands from your store.\n      operationId: ProductBrandList\n      parameters:\n        - description: This parameter sets the number from which you want to get entities\n          in: query\n          name: start\n          required: false\n          schema:\n            default: 0\n            type: integer\n        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250\n          in: query\n          name: count\n          required: false\n          schema:\n            default: 10\n            type: integer\n        - description: Set this parameter in order to choose which entity fields you want to retrieve\n          in: query\n          name: params\n          required: false\n          schema:\n            default: id,name,short_description,active,url\n            type: string\n        - description: Retrieves brands specified by brand ids\n          in: query\n          name: brand_ids\n          required: false\n          schema:\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all\n          in: query\n          name: exclude\n          required: false\n          schema:\n            type: string\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: Language id\n          in: query\n          name: lang_id\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities from their creation date\n          in: query\n          name: created_from\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities to their creation date\n          in: query\n          name: created_to\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities from their modification date\n          in: query\n          name: modified_from\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities to their modification date\n          in: query\n          name: modified_to\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      product:\n                        items:\n                          $ref: \"#/components/schemas/Brand\"\n                        type: array\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - product\n  /product.child_item.find.json:\n    get:\n      description: Search product child item (bundled item or configurable product variant) in store catalog.\n      operationId: ProductChildItemFind\n      parameters:\n        - description: Entity search that is specified by some value\n          in: query\n          name: find_value\n          required: true\n          schema:\n            type: string\n        - description: Entity search that is specified by the comma-separated unique fields\n          in: query\n          name: find_where\n          required: false\n          schema:\n            default: name\n            type: string\n        - description: Entity search that is specified by comma-separated parameters\n          in: query\n          name: find_params\n          required: false\n          schema:\n            default: whole_words\n            type: string\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      children:\n                        items:\n                          $ref: \"#/components/schemas/Child\"\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - product\n  /product.child_item.info.json:\n    get:\n      description: Get child for specific product.\n      operationId: ProductChildItemInfo\n      parameters:\n        - description: Set this parameter in order to choose which entity fields you want to retrieve\n          in: query\n          name: params\n          required: false\n          schema:\n            default: force_all\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all\n          in: query\n          name: exclude\n          required: false\n          schema:\n            type: string\n        - description: Filter by parent product id\n          in: query\n          name: product_id\n          required: true\n          schema:\n            type: string\n        - description: Entity id\n          in: query\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: Language id\n          in: query\n          name: lang_id\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    $ref: \"#/components/schemas/Child\"\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - product\n  /product.child_item.list.json:\n    get:\n      description: Get child items list of specific product(s).\n      operationId: ProductChildItemList\n      parameters:\n        - description: Used to retrieve products child items via cursor-based pagination (it can't be used with any other filtering parameter)\n          in: query\n          name: page_cursor\n          required: false\n          schema:\n            type: string\n        - description: This parameter sets the number from which you want to get entities\n          in: query\n          name: start\n          required: false\n          schema:\n            default: 0\n            type: integer\n        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250\n          in: query\n          name: count\n          required: false\n          schema:\n            default: 10\n            type: integer\n        - description: Set this parameter in order to choose which entity fields you want to retrieve\n          in: query\n          name: params\n          required: false\n          schema:\n            default: force_all\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all\n          in: query\n          name: exclude\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities from their creation date\n          in: query\n          name: created_from\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities to their creation date\n          in: query\n          name: created_to\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities from their modification date\n          in: query\n          name: modified_from\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities to their modification date\n          in: query\n          name: modified_to\n          required: false\n          schema:\n            type: string\n        - description: Filter by parent product id\n          in: query\n          name: product_id\n          required: false\n          schema:\n            type: string\n        - description: Filter by parent product ids\n          in: query\n          name: product_ids\n          required: false\n          schema:\n            type: string\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: Language id\n          in: query\n          name: lang_id\n          required: false\n          schema:\n            type: string\n        - description: Currency Id\n          in: query\n          name: currency_id\n          required: false\n          schema:\n            type: string\n        - description: Specifies the set of available/not available products for sale\n          in: query\n          name: avail_sale\n          required: false\n          schema:\n            type: boolean\n        - description: Report request id\n          in: query\n          name: report_request_id\n          required: false\n          schema:\n            type: string\n        - description: Disable report cache for current request\n          in: query\n          name: disable_report_cache\n          required: false\n          schema:\n            default: false\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Model_Response_Product_ChildItem_List\"\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - product\n  /product.count.json:\n    get:\n      description: Count products in store.\n      operationId: ProductCount\n      parameters:\n        - description: Counts products specified by category id\n          in: query\n          name: category_id\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities from their creation date\n          in: query\n          name: created_from\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities to their creation date\n          in: query\n          name: created_to\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities from their modification date\n          in: query\n          name: modified_from\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities to their modification date\n          in: query\n          name: modified_to\n          required: false\n          schema:\n            type: string\n        - description: Specifies the set of visible/invisible products\n          in: query\n          name: avail_view\n          required: false\n          schema:\n            type: boolean\n        - description: Specifies the set of available/not available products for sale\n          in: query\n          name: avail_sale\n          required: false\n          schema:\n            type: boolean\n        - description: Counts products specified by store id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: Counts products specified by language id\n          in: query\n          name: lang_id\n          required: false\n          schema:\n            type: string\n        - description: Counts products specified by product ids\n          in: query\n          name: product_ids\n          required: false\n          schema:\n            type: string\n        - description: Report request id\n          in: query\n          name: report_request_id\n          required: false\n          schema:\n            type: string\n        - description: Disable report cache for current request\n          in: query\n          name: disable_report_cache\n          required: false\n          schema:\n            default: false\n            type: boolean\n        - description: Retrieves brands specified by brand name\n          in: query\n          name: brand_name\n          required: false\n          schema:\n            type: string\n        - description: Defines product attributes\n          explode: false\n          in: query\n          name: product_attributes\n          required: false\n          schema:\n            items:\n              type: string\n            type: array\n          style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      products_count:\n                        type: integer\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - product\n  /product.currency.add.json:\n    post:\n      description: Add currency and/or set default in store\n      operationId: ProductCurrencyAdd\n      parameters:\n        - description: Specifies standardized currency code\n          in: query\n          name: iso3\n          required: true\n          schema:\n            type: string\n        - description: Defines the numerical identifier against to the major currency\n          in: query\n          name: rate\n          required: true\n          schema:\n            type: number\n        - description: Defines currency's name\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n        - description: Specifies whether the currency is available\n          in: query\n          name: avail\n          required: false\n          schema:\n            default: true\n            type: boolean\n        - description: Defines the symbol that is located before the currency\n          in: query\n          name: symbol_left\n          required: false\n          schema:\n            type: string\n        - description: Defines the symbol that is located after the currency\n          in: query\n          name: symbol_right\n          required: false\n          schema:\n            type: string\n        - description: Specifies currency's default meaning\n          in: query\n          name: default\n          required: false\n          schema:\n            default: false\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      currency_id:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - product\n  /product.currency.list.json:\n    get:\n      description: Get list of currencies\n      operationId: ProductCurrencyList\n      parameters:\n        - description: This parameter sets the number from which you want to get entities\n          in: query\n          name: start\n          required: false\n          schema:\n            default: 0\n            type: integer\n        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250\n          in: query\n          name: count\n          required: false\n          schema:\n            default: 10\n            type: integer\n        - description: Set this parameter in order to choose which entity fields you want to retrieve\n          in: query\n          name: params\n          required: false\n          schema:\n            default: name,iso3,default,avail\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all\n          in: query\n          name: exclude\n          required: false\n          schema:\n            type: string\n        - description: Specifies the set of default/not default currencies\n          in: query\n          name: default\n          required: false\n          schema:\n            type: boolean\n        - description: Specifies the set of available/not available currencies\n          in: query\n          name: avail\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      currency:\n                        items:\n                          $ref: \"#/components/schemas/Currency\"\n                        type: array\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - product\n  /product.delete.json:\n    delete:\n      description: Product delete\n      operationId: ProductDelete\n      parameters:\n        - description: Product id that will be removed\n          in: query\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      delete_items:\n                        type: integer\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - product\n  /product.fields.json:\n    get:\n      description: Retrieve all available fields for product item in store.\n      operationId: ProductFields\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - product\n  /product.find.json:\n    get:\n      description: Search product in store catalog. \"Apple\" is specified here by default.\n      operationId: ProductFind\n      parameters:\n        - description: Entity search that is specified by some value\n          in: query\n          name: find_value\n          required: true\n          schema:\n            type: string\n        - description: Entity search that is specified by the comma-separated unique fields\n          in: query\n          name: find_where\n          required: false\n          schema:\n            default: name\n            type: string\n        - description: Entity search that is specified by comma-separated parameters\n          in: query\n          name: find_params\n          required: false\n          schema:\n            default: whole_words\n            type: string\n        - description: Parameter's value specifies the entity that has to be found\n          in: query\n          name: find_what\n          required: false\n          schema:\n            default: product\n            type: string\n        - description: Search products specified by language id\n          in: query\n          name: lang_id\n          required: false\n          schema:\n            type: string\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      product:\n                        items:\n                          properties:\n                            description:\n                              type: string\n                            id:\n                              type: string\n                            name:\n                              type: string\n                            price:\n                              type: number\n                          type: object\n                        type: array\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - product\n  /product.image.add.json:\n    post:\n      description: Add image to product\n      operationId: ProductImageAdd\n      parameters:\n        - description: Defines product id where the image should be added\n          in: query\n          name: product_id\n          required: true\n          schema:\n            type: string\n        - description: Defines image's name\n          in: query\n          name: image_name\n          required: true\n          schema:\n            type: string\n        - description: Defines image's types that are specified by comma-separated list\n          in: query\n          name: type\n          required: true\n          schema:\n            enum:\n              - small\n              - base\n              - additional\n              - thumbnail\n            type: string\n        - description: Defines URL of the image that has to be added\n          in: query\n          name: url\n          required: false\n          schema:\n            type: string\n        - description: Defines alternative text that has to be attached to the picture\n          in: query\n          name: label\n          required: false\n          schema:\n            type: string\n        - description: Mime type of image http://en.wikipedia.org/wiki/Internet_media_type.\n          in: query\n          name: mime\n          required: false\n          schema:\n            type: string\n        - description: Defines image’s position in the list\n          in: query\n          name: position\n          required: false\n          schema:\n            default: 0\n            type: integer\n        - description: Content(body) encoded in base64 of image file\n          in: query\n          name: content\n          required: false\n          schema:\n            type: string\n        - description: Defines product's variants specified by variant id\n          in: query\n          name: product_variant_id\n          required: false\n          schema:\n            type: integer\n        - description: Defines product's variants ids\n          in: query\n          name: variant_ids\n          required: false\n          schema:\n            type: string\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: Add product image on specified language id\n          in: query\n          name: lang_id\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      id:\n                        type: string\n                      image_path:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - product\n  /product.image.delete.json:\n    delete:\n      description: Delete image\n      operationId: ProductImageDelete\n      parameters:\n        - description: Defines product id where the image should be deleted\n          in: query\n          name: product_id\n          required: true\n          schema:\n            type: string\n        - description: Entity id\n          in: query\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      deleted:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - product\n  /product.image.update.json:\n    put:\n      description: Update details of image\n      operationId: ProductImageUpdate\n      parameters:\n        - description: Defines product id where the image should be updated\n          in: query\n          name: product_id\n          required: true\n          schema:\n            type: string\n        - description: Defines image's name\n          in: query\n          name: image_name\n          required: false\n          schema:\n            type: string\n        - description: Defines image's types that are specified by comma-separated list\n          in: query\n          name: type\n          required: false\n          schema:\n            default: additional\n            type: string\n        - description: Defines alternative text that has to be attached to the picture\n          in: query\n          name: label\n          required: false\n          schema:\n            type: string\n        - description: Defines image’s position in the list\n          in: query\n          name: position\n          required: false\n          schema:\n            type: integer\n        - description: Defines image update specified by image id\n          in: query\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: Language id\n          in: query\n          name: lang_id\n          required: false\n          schema:\n            type: string\n        - description: Define is hide image\n          in: query\n          name: hidden\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      updated:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - product\n  /product.info.json:\n    get:\n      description: Get product info about product ID *** or specify other product ID.\n      operationId: ProductInfo\n      parameters:\n        - description: Retrieves product's info specified by product id\n          in: query\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to retrieve\n          in: query\n          name: params\n          required: false\n          schema:\n            default: id,name,description,price,categories_ids\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all\n          in: query\n          name: exclude\n          required: false\n          schema:\n            type: string\n        - description: Retrieves product info specified by store id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: Retrieves product info specified by language id\n          in: query\n          name: lang_id\n          required: false\n          schema:\n            type: string\n        - description: Currency Id\n          in: query\n          name: currency_id\n          required: false\n          schema:\n            type: string\n        - description: Report request id\n          in: query\n          name: report_request_id\n          required: false\n          schema:\n            type: string\n        - description: Disable report cache for current request\n          in: query\n          name: disable_report_cache\n          required: false\n          schema:\n            default: false\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    $ref: \"#/components/schemas/Product\"\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - product\n  /product.list.json:\n    get:\n      description: Get list of products from your store. Returns 10 products by default.\n      operationId: ProductList\n      parameters:\n        - description: Used to retrieve products via cursor-based pagination (it can't be used with any other filtering parameter)\n          in: query\n          name: page_cursor\n          required: false\n          schema:\n            type: string\n        - description: This parameter sets the number from which you want to get entities\n          in: query\n          name: start\n          required: false\n          schema:\n            default: 0\n            type: integer\n        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250\n          in: query\n          name: count\n          required: false\n          schema:\n            default: 10\n            type: integer\n        - description: Set this parameter in order to choose which entity fields you want to retrieve\n          in: query\n          name: params\n          required: false\n          schema:\n            default: id,name,description,price,categories_ids\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all\n          in: query\n          name: exclude\n          required: false\n          schema:\n            type: string\n        - description: Retrieves products specified by category id\n          in: query\n          name: category_id\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities from their creation date\n          in: query\n          name: created_from\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities to their creation date\n          in: query\n          name: created_to\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities from their modification date\n          in: query\n          name: modified_from\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities to their modification date\n          in: query\n          name: modified_to\n          required: false\n          schema:\n            type: string\n        - description: Specifies the set of visible/invisible products\n          in: query\n          name: avail_view\n          required: false\n          schema:\n            type: boolean\n        - description: Specifies the set of available/not available products for sale\n          in: query\n          name: avail_sale\n          required: false\n          schema:\n            type: boolean\n        - description: Retrieves products specified by store id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: Retrieves products specified by language id\n          in: query\n          name: lang_id\n          required: false\n          schema:\n            type: string\n        - description: Currency Id\n          in: query\n          name: currency_id\n          required: false\n          schema:\n            type: string\n        - description: Retrieves products specified by product ids\n          in: query\n          name: product_ids\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities starting from the specified id.\n          in: query\n          name: since_id\n          required: false\n          schema:\n            type: integer\n        - description: Report request id\n          in: query\n          name: report_request_id\n          required: false\n          schema:\n            type: string\n        - description: Disable report cache for current request\n          in: query\n          name: disable_report_cache\n          required: false\n          schema:\n            default: false\n            type: boolean\n        - description: Set field to sort by\n          in: query\n          name: sort_by\n          required: false\n          schema:\n            default: id\n            type: string\n        - description: Set sorting direction\n          in: query\n          name: sort_direction\n          required: false\n          schema:\n            default: asc\n            type: string\n        - description: Filter by product's sku\n          in: query\n          name: sku\n          required: false\n          schema:\n            type: string\n        - description: Disable cache for current request\n          in: query\n          name: disable_cache\n          required: false\n          schema:\n            default: false\n            type: boolean\n        - description: Retrieves brands specified by brand name\n          in: query\n          name: brand_name\n          required: false\n          schema:\n            type: string\n        - description: Defines product attributes\n          explode: false\n          in: query\n          name: product_attributes\n          required: false\n          schema:\n            items:\n              type: string\n            type: array\n          style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Model_Response_Product_List\"\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - product\n  /product.manufacturer.add.json:\n    post:\n      description: Add manufacturer to store and assign to product\n      operationId: ProductManufacturerAdd\n      parameters:\n        - description: Defines products specified by product id\n          in: query\n          name: product_id\n          required: true\n          schema:\n            type: string\n        - description: Defines product’s manufacturer's name\n          in: query\n          name: manufacturer\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      manufacturer_id:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - product\n  /product.option.add.json:\n    post:\n      description: Add product option from store.\n      operationId: ProductOptionAdd\n      parameters:\n        - description: Defines option's name\n          in: query\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: Defines option's type that has to be added\n          in: query\n          name: type\n          required: true\n          schema:\n            enum:\n              - option_type_select\n              - option_type_text\n              - option_type_radio\n              - option_type_checkbox\n              - option_type_textarea\n              - option_type_readonly\n              - option_type_multiselect\n              - option_type_multicheckbox\n              - option_type_file\n              - option_type_date\n              - option_type_datetime\n              - option_type_time\n            type: string\n        - description: Defines product id where the option should be added\n          in: query\n          name: product_id\n          required: false\n          schema:\n            type: string\n        - description: Defines default option value that has to be added\n          in: query\n          name: default_option_value\n          required: false\n          schema:\n            type: string\n        - description: Defines option values that has to be added\n          in: query\n          name: option_values\n          required: false\n          schema:\n            type: string\n        - description: Defines option's description\n          in: query\n          name: description\n          required: false\n          schema:\n            type: string\n        - description: Defines whether the option is available\n          in: query\n          name: avail\n          required: false\n          schema:\n            default: true\n            type: boolean\n        - description: Sort number in the list\n          in: query\n          name: sort_order\n          required: false\n          schema:\n            default: 0\n            type: integer\n        - description: Defines if the option is required\n          in: query\n          name: required\n          required: false\n          schema:\n            default: false\n            type: boolean\n        - description: Is cache clear required\n          in: query\n          name: clear_cache\n          required: false\n          schema:\n            default: true\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      option_id:\n                        type: string\n                      product_option_id:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - product\n  /product.option.assign.json:\n    post:\n      description: Assign option from product.\n      operationId: ProductOptionAssign\n      parameters:\n        - description: Defines product id where the option should be assigned\n          in: query\n          name: product_id\n          required: true\n          schema:\n            type: string\n        - description: Defines option id which has to be assigned\n          in: query\n          name: option_id\n          required: true\n          schema:\n            type: integer\n        - description: Defines if the option is required\n          in: query\n          name: required\n          required: false\n          schema:\n            default: false\n            type: boolean\n        - description: Sort number in the list\n          in: query\n          name: sort_order\n          required: false\n          schema:\n            default: 0\n            type: integer\n        - description: Defines option values that has to be assigned\n          in: query\n          name: option_values\n          required: false\n          schema:\n            type: string\n        - description: Is cache clear required\n          in: query\n          name: clear_cache\n          required: false\n          schema:\n            default: true\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      product_option_id:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - product\n  /product.option.list.json:\n    get:\n      description: Get list of options.\n      operationId: ProductOptionList\n      parameters:\n        - description: This parameter sets the number from which you want to get entities\n          in: query\n          name: start\n          required: false\n          schema:\n            default: 0\n            type: integer\n        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250\n          in: query\n          name: count\n          required: false\n          schema:\n            default: 10\n            type: integer\n        - description: Set this parameter in order to choose which entity fields you want to retrieve\n          in: query\n          name: params\n          required: false\n          schema:\n            default: id,name,description\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all\n          in: query\n          name: exclude\n          required: false\n          schema:\n            type: string\n        - description: Retrieves products' options specified by product id\n          in: query\n          name: product_id\n          required: false\n          schema:\n            type: string\n        - description: Language id\n          in: query\n          name: lang_id\n          required: false\n          schema:\n            type: string\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      option:\n                        items:\n                          $ref: \"#/components/schemas/Product_Option\"\n                        type: array\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - product\n  /product.option.value.add.json:\n    post:\n      description: Add product option item from option.\n      operationId: ProductOptionValueAdd\n      parameters:\n        - description: Defines product id where the option value should be added\n          in: query\n          name: product_id\n          required: true\n          schema:\n            type: string\n        - description: Defines option id where the value has to be added\n          in: query\n          name: option_id\n          required: true\n          schema:\n            type: integer\n        - description: Defines option value that has to be added\n          in: query\n          name: option_value\n          required: true\n          schema:\n            type: string\n        - description: Sort number in the list\n          in: query\n          name: sort_order\n          required: false\n          schema:\n            default: 0\n            type: integer\n        - description: Is cache clear required\n          in: query\n          name: clear_cache\n          required: false\n          schema:\n            default: true\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      option_value_id:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - product\n  /product.option.value.assign.json:\n    post:\n      description: Assign product option item from product.\n      operationId: ProductOptionValueAssign\n      parameters:\n        - description: Defines product's option id where the value has to be assigned\n          in: query\n          name: product_option_id\n          required: true\n          schema:\n            type: integer\n        - description: Defines value id that has to be assigned\n          in: query\n          name: option_value_id\n          required: true\n          schema:\n            type: integer\n        - description: Is cache clear required\n          in: query\n          name: clear_cache\n          required: false\n          schema:\n            default: true\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      product_option_value_id:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - product\n  /product.option.value.update.json:\n    put:\n      description: Update product option item from option.\n      operationId: ProductOptionValueUpdate\n      parameters:\n        - description: Defines product id where the option value should be updated\n          in: query\n          name: product_id\n          required: true\n          schema:\n            type: string\n        - description: Defines option id where the value has to be updated\n          in: query\n          name: option_id\n          required: true\n          schema:\n            type: integer\n        - description: Defines value id that has to be assigned\n          in: query\n          name: option_value_id\n          required: true\n          schema:\n            type: integer\n        - description: Defines option value that has to be added\n          in: query\n          name: option_value\n          required: true\n          schema:\n            type: string\n        - description: Defines new product option price\n          in: query\n          name: price\n          required: false\n          schema:\n            type: number\n        - description: Defines new products' options quantity\n          in: query\n          name: quantity\n          required: false\n          schema:\n            type: number\n        - description: Is cache clear required\n          in: query\n          name: clear_cache\n          required: false\n          schema:\n            default: true\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      updated_items:\n                        type: integer\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - product\n  /product.price.add.json:\n    post:\n      description: Add some prices to the product.\n      operationId: ProductPriceAdd\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ProductPriceAdd\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      status:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - product\n  /product.price.delete.json:\n    delete:\n      description: Delete some prices of the product\n      operationId: ProductPriceDelete\n      parameters:\n        - description: Defines the product where the price has to be deleted\n          in: query\n          name: product_id\n          required: true\n          schema:\n            type: string\n        - description: Defines product's group prices\n          in: query\n          name: group_prices\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      deleted:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - product\n  /product.price.update.json:\n    put:\n      description: Update some prices of the product.\n      operationId: ProductPriceUpdate\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ProductPriceUpdate\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      updated_items:\n                        type: integer\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - product\n  /product.review.list.json:\n    get:\n      description: Get reviews of a specific product.\n      operationId: ProductReviewList\n      parameters:\n        - description: This parameter sets the number from which you want to get entities\n          in: query\n          name: start\n          required: false\n          schema:\n            default: 0\n            type: integer\n        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250\n          in: query\n          name: count\n          required: false\n          schema:\n            default: 10\n            type: integer\n        - description: Product id\n          in: query\n          name: product_id\n          required: true\n          schema:\n            type: string\n        - description: Retrieves reviews specified by ids\n          in: query\n          name: ids\n          required: false\n          schema:\n            type: string\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: Defines status\n          in: query\n          name: status\n          required: false\n          schema:\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to retrieve\n          in: query\n          name: params\n          required: false\n          schema:\n            default: id,customer_id,email,message,status\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all\n          in: query\n          name: exclude\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      reviews:\n                        items:\n                          $ref: \"#/components/schemas/Product_Review\"\n                        type: array\n                      total_count:\n                        type: integer\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - product\n  /product.store.assign.json:\n    post:\n      description: Assign product to store\n      operationId: ProductStoreAssign\n      parameters:\n        - description: Defines id of the product which should be assigned to a store\n          in: query\n          name: product_id\n          required: true\n          schema:\n            type: string\n        - description: Defines id of the store product should be assigned to\n          in: query\n          name: store_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      updated_items:\n                        type: integer\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - product\n  /product.tax.add.json:\n    post:\n      description: Add tax class and tax rate to store and assign to product.\n      operationId: ProductTaxAdd\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ProductTaxAdd\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      tax_class_id:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - product\n  /product.update.json:\n    put:\n      description: Update price and quantity for a specific product\n      operationId: ProductUpdate\n      parameters:\n        - description: Defines product id that has to be updated\n          in: query\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: Defines product model that has to be updated\n          in: query\n          name: model\n          required: false\n          schema:\n            type: string\n        - description: Defines product's old price\n          in: query\n          name: old_price\n          required: false\n          schema:\n            type: number\n        - description: Defines new product's price\n          in: query\n          name: price\n          required: false\n          schema:\n            type: number\n        - description: Defines new product's special price\n          in: query\n          name: special_price\n          required: false\n          schema:\n            type: number\n        - description: Defines the date of special price creation\n          in: query\n          name: sprice_create\n          required: false\n          schema:\n            type: string\n        - description: Defines the term of special price offer duration\n          in: query\n          name: sprice_expire\n          required: false\n          schema:\n            type: string\n        - description: Defines new product's cost price\n          in: query\n          name: cost_price\n          required: false\n          schema:\n            type: number\n        - description: Defines new product's retail price\n          in: query\n          name: retail_price\n          required: false\n          schema:\n            type: number\n        - description: Defines new product's quantity\n          in: query\n          name: quantity\n          required: false\n          schema:\n            type: number\n        - description: Weight\n          in: query\n          name: weight\n          required: false\n          schema:\n            type: number\n        - description: Defines the incremental changes in product quantity\n          in: query\n          name: increase_quantity\n          required: false\n          schema:\n            type: number\n        - description: Defines the decrement changes in product quantity\n          in: query\n          name: reduce_quantity\n          required: false\n          schema:\n            type: number\n        - description: This parameter is used for selecting a warehouse where you need to set/modify a product quantity.\n          in: query\n          name: warehouse_id\n          required: false\n          schema:\n            type: string\n        - description: This parameter allows to reserve/unreserve product quantity.\n          in: query\n          name: reserve_quantity\n          required: false\n          schema:\n            type: number\n        - description: Defines inventory tracking for product\n          in: query\n          name: manage_stock\n          required: false\n          schema:\n            type: boolean\n        - description: Set backorder status\n          in: query\n          name: backorder_status\n          required: false\n          schema:\n            type: string\n        - description: Defines product's name that has to be updated\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n        - description: Defines new product's sku\n          in: query\n          name: sku\n          required: false\n          schema:\n            type: string\n        - description: Set visibility status\n          in: query\n          name: visible\n          required: false\n          schema:\n            type: string\n        - description: Defines product's manufacturer\n          in: query\n          name: manufacturer\n          required: false\n          schema:\n            type: string\n        - description: Defines product's manufacturer by manufacturer_id\n          in: query\n          name: manufacturer_id\n          required: false\n          schema:\n            type: string\n        - description: Defines product add that is specified by comma-separated categories id\n          in: query\n          name: categories_ids\n          required: false\n          schema:\n            type: string\n        - description: Defines new product's description\n          in: query\n          name: description\n          required: false\n          schema:\n            type: string\n        - description: Defines short description\n          in: query\n          name: short_description\n          required: false\n          schema:\n            type: string\n        - description: Defines unique meta title for each entity\n          in: query\n          name: meta_title\n          required: false\n          schema:\n            type: string\n        - description: Defines unique meta keywords for each entity\n          in: query\n          name: meta_keywords\n          required: false\n          schema:\n            type: string\n        - description: Defines unique meta description of a entity\n          in: query\n          name: meta_description\n          required: false\n          schema:\n            type: string\n        - description: Defines store id where the product should be found\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: Language id\n          in: query\n          name: lang_id\n          required: false\n          schema:\n            type: string\n        - description: Set stock status\n          in: query\n          name: in_stock\n          required: false\n          schema:\n            type: boolean\n        - description: Defines product's status\n          in: query\n          name: status\n          required: false\n          schema:\n            type: string\n        - description: Defines unique URL for SEO\n          in: query\n          name: seo_url\n          required: false\n          schema:\n            type: string\n        - description: Report request id\n          in: query\n          name: report_request_id\n          required: false\n          schema:\n            type: string\n        - description: Disable report cache for current request\n          in: query\n          name: disable_report_cache\n          required: false\n          schema:\n            default: false\n            type: boolean\n        - description: Is reindex required\n          in: query\n          name: reindex\n          required: false\n          schema:\n            default: true\n            type: boolean\n        - description: Product tags\n          in: query\n          name: tags\n          required: false\n          schema:\n            type: string\n        - description: Is cache clear required\n          in: query\n          name: clear_cache\n          required: false\n          schema:\n            default: true\n            type: boolean\n        - description: Global Trade Item Number. An GTIN is an identifier for trade items.\n          in: query\n          name: gtin\n          required: false\n          schema:\n            type: string\n        - description: Specifies whether a tax is charged\n          in: query\n          name: taxable\n          required: false\n          schema:\n            default: true\n            type: boolean\n        - description: A categorization for the product\n          in: query\n          name: product_class\n          required: false\n          schema:\n            type: string\n        - description: Defines product's height\n          in: query\n          name: height\n          required: false\n          schema:\n            type: number\n        - description: Defines product's length\n          in: query\n          name: length\n          required: false\n          schema:\n            type: number\n        - description: Defines product's width\n          in: query\n          name: width\n          required: false\n          schema:\n            type: number\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      updated_items:\n                        type: integer\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - product\n  /product.variant.add.json:\n    post:\n      description: Add variant to product.\n      operationId: ProductVariantAdd\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ProductVariantAdd\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      product_variant_id:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - product\n  /product.variant.count.json:\n    get:\n      description: Get count variants.\n      operationId: ProductVariantCount\n      parameters:\n        - description: Retrieve entities from their creation date\n          in: query\n          name: created_from\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities to their creation date\n          in: query\n          name: created_to\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities from their modification date\n          in: query\n          name: modified_from\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities to their modification date\n          in: query\n          name: modified_to\n          required: false\n          schema:\n            type: string\n        - description: Counts products’ variants specified by category id\n          in: query\n          name: category_id\n          required: false\n          schema:\n            type: string\n        - description: Retrieves products' variants specified by product id\n          in: query\n          name: product_id\n          required: false\n          schema:\n            type: string\n        - description: Retrieves variants specified by store id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      variants_count:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - product\n  /product.variant.delete.json:\n    delete:\n      description: Delete variant.\n      operationId: ProductVariantDelete\n      parameters:\n        - description: Defines variant removal, specified by variant id\n          in: query\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: Defines product's id where the variant has to be deleted\n          in: query\n          name: product_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      deleted:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - product\n  /product.variant.image.add.json:\n    post:\n      description: Add image to product\n      operationId: ProductVariantImageAdd\n      parameters:\n        - description: Defines product id where the variant image has to be added\n          in: query\n          name: product_id\n          required: true\n          schema:\n            type: string\n        - description: Defines product's variants specified by variant id\n          in: query\n          name: product_variant_id\n          required: true\n          schema:\n            type: integer\n        - description: Defines image's name\n          in: query\n          name: image_name\n          required: true\n          schema:\n            type: string\n        - description: Defines image's types that are specified by comma-separated list\n          in: query\n          name: type\n          required: true\n          schema:\n            default: base\n            enum:\n              - small\n              - base\n              - additional\n              - thumbnail\n            type: string\n        - description: Defines URL of the image that has to be added\n          in: query\n          name: url\n          required: false\n          schema:\n            type: string\n        - description: Content(body) encoded in base64 of image file\n          in: query\n          name: content\n          required: false\n          schema:\n            type: string\n        - description: Defines alternative text that has to be attached to the picture\n          in: query\n          name: label\n          required: false\n          schema:\n            type: string\n        - description: Mime type of image http://en.wikipedia.org/wiki/Internet_media_type.\n          in: query\n          name: mime\n          required: false\n          schema:\n            type: string\n        - description: Defines image’s position in the list\n          in: query\n          name: position\n          required: false\n          schema:\n            default: 0\n            type: integer\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      id:\n                        type: string\n                      image_path:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - product\n  /product.variant.info.json:\n    get:\n      description: Get variant info.\n      operationId: ProductVariantInfo\n      parameters:\n        - description: Set this parameter in order to choose which entity fields you want to retrieve\n          in: query\n          name: params\n          required: false\n          schema:\n            default: id,name,description,price\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all\n          in: query\n          name: exclude\n          required: false\n          schema:\n            type: string\n        - description: Retrieves variant's info specified by variant id\n          in: query\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: Retrieves variant info specified by store id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    $ref: \"#/components/schemas/Product\"\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - product\n  /product.variant.list.json:\n    get:\n      description: Get list variants.\n      operationId: ProductVariantList\n      parameters:\n        - description: This parameter sets the number from which you want to get entities\n          in: query\n          name: start\n          required: false\n          schema:\n            default: 0\n            type: integer\n        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250\n          in: query\n          name: count\n          required: false\n          schema:\n            default: 10\n            type: integer\n        - description: Set this parameter in order to choose which entity fields you want to retrieve\n          in: query\n          name: params\n          required: false\n          schema:\n            default: id,name,description,price\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all\n          in: query\n          name: exclude\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities from their creation date\n          in: query\n          name: created_from\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities to their creation date\n          in: query\n          name: created_to\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities from their modification date\n          in: query\n          name: modified_from\n          required: false\n          schema:\n            type: string\n        - description: Retrieve entities to their modification date\n          in: query\n          name: modified_to\n          required: false\n          schema:\n            type: string\n        - description: Retrieves products’ variants specified by category id\n          in: query\n          name: category_id\n          required: false\n          schema:\n            type: string\n        - description: Retrieves products' variants specified by product id\n          in: query\n          name: product_id\n          required: false\n          schema:\n            type: string\n        - description: Retrieves variants specified by store id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      variant:\n                        items:\n                          $ref: \"#/components/schemas/Product\"\n                        type: array\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - product\n  /product.variant.price.add.json:\n    post:\n      description: Add some prices to the product variant.\n      operationId: ProductVariantPriceAdd\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ProductVariantPriceAdd\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      status:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - product\n  /product.variant.price.delete.json:\n    delete:\n      description: Delete some prices of the product variant.\n      operationId: ProductVariantPriceDelete\n      parameters:\n        - description: Defines the variant where the price has to be deleted\n          in: query\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: Defines variants's group prices\n          in: query\n          name: group_prices\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      deleted:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - product\n  /product.variant.price.update.json:\n    put:\n      description: Update some prices of the product variant.\n      operationId: ProductVariantPriceUpdate\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ProductVariantPriceUpdate\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      updated_items:\n                        type: integer\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - product\n  /product.variant.update.json:\n    put:\n      description: Update variant.\n      operationId: ProductVariantUpdate\n      parameters:\n        - description: Defines store id where the variant should be found\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: Defines variant update specified by variant id\n          in: query\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: Defines product's id where the variant has to be updated\n          in: query\n          name: product_id\n          required: true\n          schema:\n            type: string\n        - description: This parameter is used for selecting a warehouse where you need to set/modify a product quantity.\n          in: query\n          name: warehouse_id\n          required: false\n          schema:\n            type: string\n        - description: This parameter allows to reserve/unreserve product variants quantity.\n          in: query\n          name: reserve_quantity\n          required: false\n          schema:\n            type: number\n        - description: Defines new products' variants quantity\n          in: query\n          name: quantity\n          required: false\n          schema:\n            type: number\n        - description: Defines the incremental changes in product quantity\n          in: query\n          name: increase_quantity\n          required: false\n          schema:\n            default: 0\n            type: number\n        - description: Defines the decrement changes in product quantity\n          in: query\n          name: reduce_quantity\n          required: false\n          schema:\n            default: 0\n            type: number\n        - description: Defines new product's variant price\n          in: query\n          name: price\n          required: false\n          schema:\n            type: number\n        - description: Defines new product's variant special price\n          in: query\n          name: special_price\n          required: false\n          schema:\n            type: number\n        - description: Defines new product's retail price\n          in: query\n          name: retail_price\n          required: false\n          schema:\n            type: number\n        - description: Defines product's old price\n          in: query\n          name: old_price\n          required: false\n          schema:\n            type: number\n        - description: Defines new product's cost price\n          in: query\n          name: cost_price\n          required: false\n          schema:\n            type: number\n        - description: Defines the date of special price creation\n          in: query\n          name: sprice_create\n          required: false\n          schema:\n            type: string\n        - description: Defines the term of special price offer duration\n          in: query\n          name: sprice_expire\n          required: false\n          schema:\n            type: string\n        - description: Defines inventory tracking for product variant\n          in: query\n          name: manage_stock\n          required: false\n          schema:\n            type: boolean\n        - description: Set stock status\n          in: query\n          name: in_stock\n          required: false\n          schema:\n            type: boolean\n        - description: Defines variant's name that has to be updated\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n        - description: Specifies variant's description\n          in: query\n          name: description\n          required: false\n          schema:\n            type: string\n        - description: Defines new product's variant sku\n          in: query\n          name: sku\n          required: false\n          schema:\n            type: string\n        - description: Defines unique meta title for each entity\n          in: query\n          name: meta_title\n          required: false\n          schema:\n            type: string\n        - description: Defines unique meta description of a entity\n          in: query\n          name: meta_description\n          required: false\n          schema:\n            type: string\n        - description: Defines unique meta keywords for each entity\n          in: query\n          name: meta_keywords\n          required: false\n          schema:\n            type: string\n        - description: Defines short description\n          in: query\n          name: short_description\n          required: false\n          schema:\n            type: string\n        - description: Set visibility status\n          in: query\n          name: visible\n          required: false\n          schema:\n            type: string\n        - description: Defines product variant's status\n          in: query\n          name: status\n          required: false\n          schema:\n            type: string\n        - description: Set backorder status\n          in: query\n          name: backorder_status\n          required: false\n          schema:\n            type: string\n        - description: Weight\n          in: query\n          name: weight\n          required: false\n          schema:\n            default: 0\n            type: number\n        - description: A barcode is a unique code composed of numbers used as a product identifier.\n          in: query\n          name: barcode\n          required: false\n          schema:\n            type: string\n        - description: Is reindex required\n          in: query\n          name: reindex\n          required: false\n          schema:\n            default: true\n            type: boolean\n        - description: Specifies whether a tax is charged\n          in: query\n          name: taxable\n          required: false\n          schema:\n            default: true\n            type: boolean\n        - description: Defines variant's options list\n          explode: false\n          in: query\n          name: options\n          required: false\n          schema:\n            items:\n              type: string\n            type: array\n          style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      updated_items:\n                        type: integer\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - product\n  /subscriber.list.json:\n    get:\n      description: Get subscribers list\n      operationId: SubscriberList\n      parameters:\n        - description: This parameter sets the number from which you want to get entities\n          in: query\n          name: start\n          required: false\n          schema:\n            default: 0\n            type: integer\n        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250\n          in: query\n          name: count\n          required: false\n          schema:\n            default: 10\n            type: integer\n        - description: Filter by subscription status\n          in: query\n          name: subscribed\n          required: false\n          schema:\n            default: true\n            type: boolean\n        - description: Store Id\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n        - description: Filter subscribers by email\n          in: query\n          name: email\n          required: false\n          schema:\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to retrieve\n          in: query\n          name: params\n          required: false\n          schema:\n            default: force_all\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all\n          in: query\n          name: exclude\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      subscribers:\n                        items:\n                          $ref: \"#/components/schemas/Subscriber\"\n                        type: array\n                      total_count:\n                        type: integer\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - subscriber\n  /tax.class.info.json:\n    get:\n      description: Get info about tax\n      operationId: TaxClassInfo\n      parameters:\n        - description: Retrieves taxes specified by class id\n          in: query\n          name: tax_class_id\n          required: true\n          schema:\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to retrieve\n          in: query\n          name: params\n          required: false\n          schema:\n            default: tax_class_id,name,avail\n            type: string\n        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all\n          in: query\n          name: exclude\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    $ref: \"#/components/schemas/TaxClass\"\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - tax\n  /webhook.count.json:\n    get:\n      description: Count registered webhooks on the store.\n      operationId: WebhookCount\n      parameters:\n        - description: The entity you want to filter webhooks by (e.g. order or product)\n          in: query\n          name: entity\n          required: false\n          schema:\n            type: string\n        - description: The action you want to filter webhooks by (e.g. order or product)\n          in: query\n          name: action\n          required: false\n          schema:\n            type: string\n        - description: The webhook status you want to filter webhooks by\n          in: query\n          name: active\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      webhook_count:\n                        type: integer\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - webhook\n  /webhook.create.json:\n    post:\n      description: Create webhook on the store and subscribe to it.\n      operationId: WebhookCreate\n      parameters:\n        - description: Specify the entity that you want to enable webhooks for (e.g product, order, customer, category)\n          in: query\n          name: entity\n          required: true\n          schema:\n            type: string\n        - description: Specify what action (event) will trigger the webhook (e.g add, delete, or update)\n          in: query\n          name: action\n          required: true\n          schema:\n            type: string\n        - description: Callback where the webhook should send the POST request when the event occurs\n          in: query\n          name: callback\n          required: true\n          schema:\n            type: string\n        - description: The name you give to the webhook\n          in: query\n          name: label\n          required: false\n          schema:\n            type: string\n        - description: Fields the webhook should send\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: id\n            type: string\n        - description: Webhook status\n          in: query\n          name: active\n          required: false\n          schema:\n            default: true\n            type: boolean\n        - description: Defines store id where the webhook should be assigned\n          in: query\n          name: store_id\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      id:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - webhook\n  /webhook.delete.json:\n    delete:\n      description: Delete registered webhook on the store.\n      operationId: WebhookDelete\n      parameters:\n        - description: Webhook id\n          in: query\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      deleted:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - webhook\n  /webhook.events.json:\n    get:\n      description: List all Webhooks that are available on this store.\n      operationId: WebhookEvents\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      events:\n                        items:\n                          properties:\n                            action:\n                              type: string\n                            entity:\n                              type: string\n                            webhook_name:\n                              type: string\n                          type: object\n                        type: array\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - webhook\n  /webhook.list.json:\n    get:\n      description: List registered webhook on the store.\n      operationId: WebhookList\n      parameters:\n        - description: Set this parameter in order to choose which entity fields you want to retrieve\n          in: query\n          name: params\n          required: false\n          schema:\n            default: id,entity,action,callback\n            type: string\n        - description: This parameter sets the number from which you want to get entities\n          in: query\n          name: start\n          required: false\n          schema:\n            default: 0\n            type: integer\n        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250\n          in: query\n          name: count\n          required: false\n          schema:\n            default: 10\n            type: integer\n        - description: The entity you want to filter webhooks by (e.g. order or product)\n          in: query\n          name: entity\n          required: false\n          schema:\n            type: string\n        - description: The action you want to filter webhooks by (e.g. add, update, or delete)\n          in: query\n          name: action\n          required: false\n          schema:\n            type: string\n        - description: The webhook status you want to filter webhooks by\n          in: query\n          name: active\n          required: false\n          schema:\n            type: boolean\n        - description: List of сomma-separated webhook ids\n          in: query\n          name: ids\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      webhook:\n                        items:\n                          $ref: \"#/components/schemas/Webhook\"\n                        type: array\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - webhook\n  /webhook.update.json:\n    put:\n      description: Update Webhooks parameters.\n      operationId: WebhookUpdate\n      parameters:\n        - description: Webhook id\n          in: query\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: Callback where the webhook should send the POST request when the event occurs\n          in: query\n          name: callback\n          required: false\n          schema:\n            type: string\n        - description: The name you give to the webhook\n          in: query\n          name: label\n          required: false\n          schema:\n            type: string\n        - description: Fields the webhook should send\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n        - description: Webhook status\n          in: query\n          name: active\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  result:\n                    properties:\n                      updated:\n                        type: string\n                    type: object\n                  return_code:\n                    type: integer\n                  return_message:\n                    type: string\n                type: object\n          description: successful operation\n      security:\n        - api_key: []\n          store_key: []\n      tags:\n        - webhook\ncomponents:\n  schemas:\n    A2CDateTime:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        format:\n          type: string\n        value:\n          type: string\n      type: object\n    AccountCartAdd:\n      properties:\n        3dcart_access_token:\n          description: 3DCart Token\n          type: string\n        3dcart_private_key:\n          description: 3DCart Private Key\n          type: string\n        3dcartapi_api_key:\n          description: 3DCart API Key\n          type: string\n        amazon_access_key_id:\n          description: Amazon Secret Key Id\n          type: string\n        amazon_access_token:\n          description: MWS Auth Token. Access token authorizing the app to access resources on behalf of a user\n          type: string\n        amazon_marketplaces_ids:\n          description: Amazon Marketplace IDs comma separated string\n          type: string\n        amazon_secret_key:\n          description: Amazon Secret Key\n          type: string\n        amazon_seller_id:\n          description: Amazon Seller ID (Merchant token)\n          type: string\n        amazon_sp_api_environment:\n          default: production\n          description: Amazon SP API environment\n          type: string\n        amazon_sp_aws_region:\n          description: Amazon AWS Region\n          enum:\n            - eu-west-1\n            - us-east-1\n            - us-west-2\n          type: string\n        amazon_sp_aws_role_arn:\n          description: Amazon AWS Role ARN\n          type: string\n        amazon_sp_aws_user_key_id:\n          description: Amazon AWS user access key ID\n          type: string\n        amazon_sp_aws_user_secret:\n          description: Amazon AWS user secret access key\n          type: string\n        amazon_sp_client_id:\n          description: Amazon SP API app client id\n          type: string\n        amazon_sp_client_secret:\n          description: Amazon SP API app client secret\n          type: string\n        amazon_sp_refresh_token:\n          description: Amazon SP API OAuth refresh token\n          type: string\n        aspdotnetstorefront_api_pass:\n          description: AspDotNetStorefront API Password\n          type: string\n        aspdotnetstorefront_api_user:\n          description: It's a AspDotNetStorefront account for which API is available\n          type: string\n        bigcommerceapi_access_token:\n          description: Access token authorizing the app to access resources on behalf of a user\n          type: string\n        bigcommerceapi_admin_account:\n          description: It's a BigCommerce account for which API is enabled\n          type: string\n        bigcommerceapi_api_key:\n          description: Bigcommerce API Key\n          type: string\n        bigcommerceapi_api_path:\n          description: BigCommerce API URL\n          type: string\n        bigcommerceapi_client_id:\n          description: Client ID of the requesting app\n          type: string\n        bigcommerceapi_context:\n          description: API Path section unique to the store\n          type: string\n        bridge_url:\n          description: This parameter allows to set up store with custom bridge url (also you must use store_root parameter if a bridge folder is not in the root folder of the store)\n          type: string\n        cart_id:\n          description: Store’s identifier which you can get from cart_list method\n          enum:\n            - 3DCart\n            - 3DCartApi\n            - AceShop\n            - AmazonSP\n            - Amazon\n            - AspDotNetStorefront\n            - BigcommerceApi\n            - Creloaded\n            - CommerceHQ\n            - Cscart\n            - Cubecart\n            - Demandware\n            - EBay\n            - Ecwid\n            - Etsy\n            - Gambio\n            - Interspire\n            - JooCart\n            - Magento1212\n            - MijoShop\n            - Neto\n            - Opencart14\n            - LightSpeed\n            - Oscmax2\n            - Oscommerce22ms2\n            - Oxid\n            - Pinnacle\n            - Prestashop\n            - SSPremium\n            - Shopify\n            - Squarespace\n            - Shopware\n            - ShopwareApi\n            - Tomatocart\n            - Ubercart\n            - Virtuemart\n            - Volusion\n            - WPecommerce\n            - Walmart\n            - WebAsyst\n            - Woocommerce\n            - Xcart\n            - Xtcommerce\n            - XtcommerceVeyton\n            - Zencart137\n            - Hybris\n          type: string\n        commercehq_api_key:\n          description: CommerceHQ api key\n          type: string\n        commercehq_api_password:\n          description: CommerceHQ api password\n          type: string\n        db_tables_prefix:\n          description: DB tables prefix\n          type: string\n        demandware_api_password:\n          description: Demandware api password\n          type: string\n        demandware_client_id:\n          description: Demandware client id\n          type: string\n        demandware_env_type:\n          default: production\n          description: Demandware environment\n          type: string\n        demandware_user_name:\n          description: Demandware user name\n          type: string\n        demandware_user_password:\n          description: Demandware user password\n          type: string\n        ebay_access_token:\n          description: Used to authenticate API requests.\n          type: string\n        ebay_client_id:\n          description: Application ID (AppID).\n          type: string\n        ebay_client_secret:\n          description: Shared Secret from eBay application\n          type: string\n        ebay_environment:\n          default: production\n          description: eBay environment\n          type: string\n        ebay_refresh_token:\n          description: Used to renew the access token.\n          type: string\n        ebay_runame:\n          description: The RuName value that eBay assigns to your application.\n          type: string\n        ebay_site_id:\n          default: 0\n          description: eBay global ID\n          type: integer\n        ecwid_acess_token:\n          description: Access token authorizing the app to access resources on behalf of a user\n          type: string\n        ecwid_store_id:\n          description: Store Id\n          type: string\n        etsy_access_token:\n          description: Access token authorizing the app to access resources on behalf of a user\n          type: string\n        etsy_keystring:\n          description: Etsy keystring\n          type: string\n        etsy_shared_secret:\n          description: Etsy shared secret\n          type: string\n        etsy_token_secret:\n          description: Secret token authorizing the app to access resources on behalf of a user\n          type: string\n        ftp_host:\n          description: FTP connection host\n          type: string\n        ftp_password:\n          description: FTP Password\n          type: string\n        ftp_port:\n          description: FTP Port\n          type: integer\n        ftp_store_dir:\n          description: FTP Store dir\n          type: string\n        ftp_user:\n          description: FTP User\n          type: string\n        hybris_client_id:\n          description: Omni Commerce Connector Client ID\n          type: string\n        hybris_client_secret:\n          description: Omni Commerce Connector Client Secret\n          type: string\n        hybris_password:\n          description: User password\n          type: string\n        hybris_username:\n          description: User Name\n          type: string\n        hybris_websites:\n          description: Websites to stores mapping data\n          items:\n            properties:\n              storeIds:\n                items:\n                  type: string\n                minItems: 1\n                type: array\n              uid:\n                type: string\n              url:\n                type: string\n            required:\n              - uid\n              - url\n              - storeIds\n            type: object\n          minItems: 1\n          type: array\n        lightspeed_api_key:\n          description: LightSpeed api key\n          type: string\n        lightspeed_api_secret:\n          description: LightSpeed api secret\n          type: string\n        neto_api_key:\n          description: Neto API Key\n          type: string\n        neto_api_username:\n          description: Neto User Name\n          type: string\n        shopify_access_token:\n          description: Access token authorizing the app to access resources on behalf of a user\n          type: string\n        shopify_api_key:\n          description: Shopify API Key\n          type: string\n        shopify_api_password:\n          description: Shopify API Password\n          type: string\n        shopify_shared_secret:\n          description: Shared secret\n          type: string\n        shopware_api_key:\n          description: Shopware api key\n          type: string\n        shopware_api_secret:\n          description: Shopware client secret access key\n          type: string\n        squarespace_api_key:\n          description: Squarespace API Key\n          type: string\n        store_key:\n          description: Set this parameter if bridge is already uploaded to store\n          type: string\n        store_root:\n          description: Absolute path to the store root directory (used with \"bridge_url\" parameter)\n          type: string\n        store_url:\n          description: A web address of a store that you would like to connect to API2Cart\n          type: string\n        validate_version:\n          default: false\n          description: Specify if api2cart should validate cart version\n          type: boolean\n        verify:\n          default: true\n          description: Enables or disables cart's verification\n          type: boolean\n        volusion_login:\n          description: It's a Volusion account for which API is enabled\n          type: string\n        volusion_password:\n          description: Volusion API Password\n          type: string\n        walmart_channel_type:\n          description: Walmart WM_CONSUMER.CHANNEL.TYPE header\n          type: string\n        walmart_client_id:\n          description: Walmart client ID\n          type: string\n        walmart_client_secret:\n          description: Walmart client secret\n          type: string\n        walmart_environment:\n          default: production\n          description: Walmart environment\n          type: string\n      required:\n        - cart_id\n        - store_url\n        - amazon_sp_client_id\n        - amazon_sp_client_secret\n        - amazon_sp_aws_user_key_id\n        - amazon_sp_aws_user_secret\n        - amazon_sp_aws_region\n        - amazon_sp_aws_role_arn\n        - amazon_sp_refresh_token\n      type: object\n    BaseCustomer:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        email:\n          type: string\n        first_name:\n          type: string\n        id:\n          type: string\n        last_name:\n          type: string\n        phone:\n          type: string\n      type: object\n    Basket:\n      properties:\n        additional_fields:\n          type: object\n        basket_products:\n          items:\n            $ref: \"#/components/schemas/Basket_Item\"\n          type: array\n        basket_url:\n          type: string\n        created_at:\n          $ref: \"#/components/schemas/A2CDateTime\"\n        currency:\n          $ref: \"#/components/schemas/Currency\"\n        custom_fields:\n          type: object\n        customer:\n          $ref: \"#/components/schemas/BaseCustomer\"\n        id:\n          type: string\n        modified_at:\n          $ref: \"#/components/schemas/A2CDateTime\"\n      type: object\n    Basket_Item:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        id:\n          type: string\n        name:\n          type: string\n        options:\n          items:\n            $ref: \"#/components/schemas/Basket_Item_Option\"\n          type: array\n        parent_id:\n          type: string\n        price:\n          type: number\n        product_id:\n          type: string\n        quantity:\n          type: number\n        sku:\n          type: string\n        tax:\n          type: number\n        variant_id:\n          type: string\n        weight:\n          type: number\n        weight_unit:\n          type: string\n      type: object\n    Basket_Item_Option:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        id:\n          type: string\n        name:\n          type: string\n        used_in_combination:\n          type: boolean\n        value:\n          type: string\n        value_id:\n          type: string\n      type: object\n    Basket_LiveShippingService:\n      properties:\n        additional_fields:\n          type: object\n        callback:\n          type: string\n        callback_err_cnt:\n          type: integer\n        custom_fields:\n          type: object\n        enabled_on_store:\n          type: boolean\n        id:\n          type: string\n        name:\n          type: string\n      type: object\n    Brand:\n      properties:\n        active:\n          type: boolean\n        additional_fields:\n          type: object\n        created_time:\n          type: string\n        custom_fields:\n          type: object\n        full_description:\n          type: string\n        id:\n          type: string\n        images:\n          items:\n            $ref: \"#/components/schemas/Image\"\n          type: array\n        meta_description:\n          type: string\n        meta_keywords:\n          type: string\n        meta_title:\n          type: string\n        modified_time:\n          type: string\n        name:\n          type: string\n        short_description:\n          type: string\n        stores_ids:\n          items:\n            type: string\n          type: array\n        url:\n          type: string\n      type: object\n    Carrier:\n      properties:\n        active:\n          type: boolean\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        id:\n          type: string\n        name:\n          type: string\n        shipping_methods:\n          items:\n            $ref: \"#/components/schemas/Order_ShippingMethod\"\n          type: array\n      type: object\n    Cart:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        db_prefix:\n          type: string\n        name:\n          type: string\n        shipping_zones:\n          items:\n            $ref: \"#/components/schemas/Cart_ShippingZone\"\n          type: array\n        stores_info:\n          items:\n            $ref: \"#/components/schemas/Cart_StoreInfo\"\n          type: array\n        url:\n          type: string\n        version:\n          type: string\n        warehouses:\n          items:\n            $ref: \"#/components/schemas/Cart_Warehouse\"\n          type: array\n      type: object\n    CartConfigUpdate:\n      properties:\n        custom_fields:\n          description: This parameter sets the list of params to the shopping cart.\n          type: object\n        db_tables_prefix:\n          description: This parameter is deprecated for this method. Please, use this parameter in method account.config.update\n          type: string\n        store_id:\n          description: Store Id\n          type: string\n      type: object\n    CartCouponAdd:\n      properties:\n        action_amount:\n          description: Defines the discount amount value.\n          type: number\n        action_apply_to:\n          description: Defines where discount should be applied\n          enum:\n            - order_total\n            - item_price\n            - shipping\n          type: string\n        action_condition_entity:\n          description: Defines entity for action condition.\n          type: string\n        action_condition_key:\n          description: Defines entity attribute code for action condition.\n          type: string\n        action_condition_operator:\n          description: Defines condition operator.\n          type: string\n        action_condition_value:\n          description: Defines condition attribute value/s. Can be comma separated string.\n          type: string\n        action_scope:\n          description: Specify how discount should be applied. If scope=matching_items, then discount will be applied to each of the items that match action conditions. Scope order means that discount will be applied once.\n          enum:\n            - order\n            - matching_items\n          type: string\n        action_type:\n          description: Coupon discount type\n          enum:\n            - percent\n            - fixed\n          type: string\n        code:\n          description: Coupon code\n          type: string\n        codes:\n          description: Entity codes\n          items:\n            type: string\n          type: array\n        date_end:\n          description: Defines when discount code will be expired.\n          type: string\n        date_start:\n          default: now\n          description: Defines when discount code will be available.\n          type: string\n        name:\n          description: Coupon name\n          type: string\n        store_id:\n          description: Store Id\n          type: string\n        usage_limit:\n          description: Usage limit for coupon.\n          type: integer\n        usage_limit_per_customer:\n          description: Usage limit per customer.\n          type: integer\n      required:\n        - code\n        - action_type\n        - action_apply_to\n        - action_scope\n        - action_amount\n      type: object\n    Cart_Channel:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        id:\n          type: string\n        is_enabled:\n          type: boolean\n        name:\n          type: string\n        platform:\n          type: string\n      type: object\n    Cart_MetaData:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        id:\n          type: string\n        key:\n          type: string\n        namespace:\n          type: string\n        value:\n          type: string\n      type: object\n    Cart_ShippingZone:\n      properties:\n        additional_fields:\n          type: object\n        code:\n          type: string\n        country:\n          type: string\n        country_iso2_codes:\n          items:\n            type: string\n          type: array\n        custom_fields:\n          type: object\n        id:\n          type: string\n        name:\n          type: string\n      type: object\n    Cart_StoreInfo:\n      properties:\n        active:\n          type: boolean\n        additional_fields:\n          type: object\n        carrier_info:\n          items:\n            $ref: \"#/components/schemas/Carrier\"\n          type: array\n        channels:\n          items:\n            $ref: \"#/components/schemas/Cart_Channel\"\n          type: array\n        country:\n          type: string\n        currency:\n          $ref: \"#/components/schemas/Currency\"\n        custom_fields:\n          type: object\n        default_warehouse_id:\n          type: string\n        dimension_unit:\n          type: string\n        language:\n          type: string\n        multi_store_url:\n          type: string\n        name:\n          type: string\n        prices_include_tax:\n          type: boolean\n        root_category_id:\n          type: string\n        store_currencies:\n          items:\n            $ref: \"#/components/schemas/Currency\"\n          type: array\n        store_id:\n          type: string\n        store_languages:\n          items:\n            $ref: \"#/components/schemas/Language\"\n          type: array\n        store_owner_info:\n          $ref: \"#/components/schemas/Info\"\n        timezone:\n          type: string\n        weight_unit:\n          type: string\n      type: object\n    Cart_Warehouse:\n      properties:\n        additional_fields:\n          type: object\n        address:\n          $ref: \"#/components/schemas/Customer_Address\"\n        avail:\n          type: boolean\n        carriers_ids:\n          items:\n            type: string\n          type: array\n        custom_fields:\n          type: object\n        description:\n          type: string\n        id:\n          type: string\n        name:\n          type: string\n        stores_ids:\n          items:\n            type: string\n          type: array\n      type: object\n    CatalogPriceRule:\n      properties:\n        actions:\n          items:\n            $ref: \"#/components/schemas/CatalogPriceRule_Action\"\n          type: array\n        additional_fields:\n          type: object\n        avail:\n          type: boolean\n        conditions:\n          items:\n            $ref: \"#/components/schemas/Coupon_Condition\"\n          type: array\n        created_time:\n          $ref: \"#/components/schemas/A2CDateTime\"\n        custom_fields:\n          type: object\n        date_end:\n          $ref: \"#/components/schemas/A2CDateTime\"\n        date_start:\n          $ref: \"#/components/schemas/A2CDateTime\"\n        description:\n          type: string\n        gid:\n          type: string\n        id:\n          type: string\n        name:\n          type: string\n        short_description:\n          type: string\n        type:\n          type: string\n        usage_count:\n          type: number\n        uses_per_order_limit:\n          type: integer\n      type: object\n    CatalogPriceRule_Action:\n      properties:\n        additional_fields:\n          type: object\n        apply_to:\n          type: string\n        conditions:\n          items:\n            $ref: \"#/components/schemas/Coupon_Condition\"\n          type: array\n        currency_code:\n          type: string\n        custom_fields:\n          type: object\n        quantity:\n          type: number\n        scope:\n          type: string\n        type:\n          type: string\n        value:\n          type: number\n      type: object\n    Category:\n      properties:\n        additional_fields:\n          type: object\n        avail:\n          type: boolean\n        created_at:\n          $ref: \"#/components/schemas/A2CDateTime\"\n        custom_fields:\n          type: object\n        description:\n          type: string\n        id:\n          type: string\n        images:\n          items:\n            $ref: \"#/components/schemas/Image\"\n          type: array\n        keywords:\n          type: string\n        meta_description:\n          type: string\n        meta_title:\n          type: string\n        modified_at:\n          $ref: \"#/components/schemas/A2CDateTime\"\n        name:\n          type: string\n        parent_id:\n          type: string\n        path:\n          type: string\n        seo_url:\n          type: string\n        short_description:\n          type: string\n        sort_order:\n          type: integer\n        stores_ids:\n          items:\n            type: string\n          type: array\n      type: object\n    Child:\n      properties:\n        additional_fields:\n          type: object\n        advanced_price:\n          items:\n            $ref: \"#/components/schemas/Product_AdvancedPrice\"\n          type: array\n        allow_backorders:\n          type: boolean\n        avail_for_sale:\n          type: boolean\n        combination:\n          items:\n            properties:\n              option_id:\n                type: string\n              option_value_id:\n                type: string\n            type: object\n          type: array\n        cost_price:\n          type: number\n        created_time:\n          $ref: \"#/components/schemas/A2CDateTime\"\n        custom_fields:\n          type: object\n        default_price:\n          type: number\n        default_qty_in_pack:\n          type: number\n        dimensions_unit:\n          type: string\n        ean:\n          type: string\n        full_description:\n          type: string\n        gtin:\n          type: string\n        height:\n          type: number\n        id:\n          type: string\n        images:\n          items:\n            $ref: \"#/components/schemas/Image\"\n          type: array\n        in_stock:\n          type: boolean\n        inventory:\n          items:\n            $ref: \"#/components/schemas/Product_Inventory\"\n          type: array\n        inventory_level:\n          type: number\n        is_qty_in_pack_fixed:\n          type: boolean\n        length:\n          type: number\n        list_price:\n          type: number\n        manage_stock:\n          type: boolean\n        min_quantity:\n          type: number\n        modified_time:\n          $ref: \"#/components/schemas/A2CDateTime\"\n        mpn:\n          type: string\n        name:\n          type: string\n        parent_id:\n          type: string\n        short_description:\n          type: string\n        sku:\n          type: string\n        sort_order:\n          type: integer\n        tax_class_id:\n          type: string\n        upc:\n          type: string\n        weight:\n          type: number\n        weight_unit:\n          type: string\n        wholesale_price:\n          type: number\n        width:\n          type: number\n      type: object\n    Country:\n      properties:\n        additional_fields:\n          type: object\n        code2:\n          type: string\n        code3:\n          type: string\n        custom_fields:\n          type: object\n        name:\n          type: string\n      type: object\n    Coupon:\n      properties:\n        actions:\n          items:\n            $ref: \"#/components/schemas/Coupon_Action\"\n          type: array\n        additional_fields:\n          type: object\n        avail:\n          type: boolean\n        code:\n          type: string\n        codes:\n          items:\n            $ref: \"#/components/schemas/Coupon_Code\"\n          type: array\n        conditions:\n          items:\n            $ref: \"#/components/schemas/Coupon_Condition\"\n          type: array\n        custom_fields:\n          type: object\n        date_end:\n          $ref: \"#/components/schemas/A2CDateTime\"\n        date_start:\n          $ref: \"#/components/schemas/A2CDateTime\"\n        description:\n          type: string\n        id:\n          type: string\n        logic_operator:\n          type: string\n        name:\n          type: string\n        priority:\n          type: integer\n        usage_history:\n          items:\n            $ref: \"#/components/schemas/Coupon_History\"\n          type: array\n        usage_limit:\n          type: integer\n        usage_limit_per_customer:\n          type: integer\n        used_times:\n          type: integer\n      type: object\n    Coupon_Action:\n      properties:\n        additional_fields:\n          type: object\n        amount:\n          type: number\n        apply_to:\n          type: string\n        conditions:\n          items:\n            $ref: \"#/components/schemas/Coupon_Condition\"\n          type: array\n        currency_code:\n          type: string\n        custom_fields:\n          type: object\n        discount_quantity_step:\n          type: integer\n        discounted_quantity:\n          type: number\n        include_tax:\n          type: boolean\n        logic_operator:\n          type: string\n        scope:\n          type: string\n        type:\n          type: string\n      type: object\n    Coupon_Code:\n      properties:\n        additional_fields:\n          type: object\n        code:\n          type: string\n        custom_fields:\n          type: object\n        id:\n          type: string\n        used_times:\n          type: integer\n      type: object\n    Coupon_Condition:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        entity:\n          type: string\n        id:\n          type: string\n        key:\n          type: string\n        logic_operator:\n          type: string\n        match_items:\n          type: string\n        operator:\n          type: string\n        sub-conditions:\n          items:\n            $ref: \"#/components/schemas/Coupon_Condition\"\n          type: array\n        value:\n          type: string\n      type: object\n    Coupon_History:\n      properties:\n        additional_fields:\n          type: object\n        amount:\n          type: number\n        custom_fields:\n          type: object\n        order_id:\n          type: string\n      type: object\n    Currency:\n      properties:\n        additional_fields:\n          type: object\n        avail:\n          type: boolean\n        custom_fields:\n          type: object\n        default:\n          type: boolean\n        id:\n          type: string\n        iso3:\n          type: string\n        name:\n          type: string\n        rate:\n          type: number\n        symbol_left:\n          type: string\n        symbol_right:\n          type: string\n      type: object\n    Customer:\n      properties:\n        additional_fields:\n          type: object\n        address_book:\n          items:\n            $ref: \"#/components/schemas/Customer_Address\"\n          type: array\n        birth_day:\n          $ref: \"#/components/schemas/A2CDateTime\"\n        company:\n          type: string\n        created_time:\n          $ref: \"#/components/schemas/A2CDateTime\"\n        custom_fields:\n          type: object\n        email:\n          type: string\n        fax:\n          type: string\n        first_name:\n          type: string\n        gender:\n          type: string\n        group:\n          items:\n            $ref: \"#/components/schemas/Customer_Group\"\n          type: array\n        id:\n          type: string\n        ip_address:\n          type: string\n        last_login:\n          $ref: \"#/components/schemas/A2CDateTime\"\n        last_name:\n          type: string\n        last_order_id:\n          type: string\n        login:\n          type: string\n        modified_time:\n          $ref: \"#/components/schemas/A2CDateTime\"\n        news_letter_subscription:\n          type: boolean\n        orders_count:\n          type: integer\n        phone:\n          type: string\n        status:\n          type: string\n        stores_ids:\n          items:\n            type: string\n          type: array\n        website:\n          type: string\n      type: object\n    CustomerAdd:\n      properties:\n        address:\n          items:\n            properties:\n              address_book_address1:\n                description: Specifies customer's first address in the address book\n                type: string\n              address_book_address2:\n                description: Specifies customer's second address in the address book\n                type: string\n              address_book_city:\n                description: Specifies customer's city in the address book\n                type: string\n              address_book_company:\n                description: Specifies customer's company name in the address book\n                type: string\n              address_book_country:\n                description: ISO code or name of country\n                type: string\n              address_book_default:\n                description: Defines whether the address is used by default\n                type: boolean\n              address_book_fax:\n                description: Specifies customer's fax in the address book\n                type: string\n              address_book_first_name:\n                description: Specifies customer's first name in the address book\n                type: string\n              address_book_gender:\n                description: Specifies customer's gender\n                type: string\n              address_book_last_name:\n                description: Specifies customer's last name in the address book\n                type: string\n              address_book_phone:\n                description: Specifies customer's phone number in the address book\n                type: string\n              address_book_postcode:\n                description: Specifies customer's postcode\n                type: string\n              address_book_region:\n                description: Specifies customer's region\n                type: string\n              address_book_state:\n                description: ISO code or name of state.\n                type: string\n              address_book_type:\n                description: Specifies customer's address type\n                type: string\n              address_book_website:\n                description: Specifies customer's website in the address book\n                type: string\n            type: object\n          type: array\n        birth_day:\n          description: Defines customer's birthday\n          type: string\n        company:\n          description: Defines customer's company\n          type: string\n        created_time:\n          description: Entity's date creation\n          type: string\n        email:\n          description: Defines customer's email\n          type: string\n        fax:\n          description: Defines customer's fax\n          type: string\n        first_name:\n          description: Defines customer's first name\n          type: string\n        gender:\n          description: Defines customer's gender\n          type: string\n        group:\n          description: Defines the group where the customer\n          type: string\n        last_login:\n          description: Defines customer's last login time\n          type: string\n        last_name:\n          description: Defines customer's last name\n          type: string\n        login:\n          description: Specifies customer's login name\n          type: string\n        modified_time:\n          description: Entity's date modification\n          type: string\n        news_letter_subscription:\n          default: false\n          description: Defines whether the newsletter subscription is available for the user\n          type: boolean\n        password:\n          description: Defines customer's unique password\n          type: string\n        phone:\n          description: Defines customer's phone number\n          type: string\n        status:\n          default: enabled\n          description: Defines customer's status\n          type: string\n        website:\n          description: Link to customer website\n          type: string\n      required:\n        - email\n        - first_name\n        - last_name\n      type: object\n    Customer_Address:\n      properties:\n        additional_fields:\n          type: object\n        address1:\n          type: string\n        address2:\n          type: string\n        city:\n          type: string\n        company:\n          type: string\n        country:\n          $ref: \"#/components/schemas/Country\"\n        custom_fields:\n          type: object\n        default:\n          type: boolean\n        fax:\n          type: string\n        first_name:\n          type: string\n        gender:\n          type: string\n        id:\n          type: string\n        last_name:\n          type: string\n        phone:\n          type: string\n        postcode:\n          type: string\n        region:\n          type: string\n        state:\n          $ref: \"#/components/schemas/State\"\n        type:\n          type: string\n        website:\n          type: string\n      type: object\n    Customer_Attribute:\n      properties:\n        additional_fields:\n          type: object\n        attribute_id:\n          type: string\n        code:\n          type: string\n        custom_fields:\n          type: object\n        name:\n          type: string\n        type:\n          type: string\n        values:\n          items:\n            $ref: \"#/components/schemas/Customer_Attribute_Value\"\n          type: array\n      type: object\n    Customer_Attribute_Value:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        id:\n          type: string\n        value:\n          type: string\n      type: object\n    Customer_Group:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        id:\n          type: string\n        name:\n          type: string\n      type: object\n    GiftCard:\n      properties:\n        additional_fields:\n          type: object\n        amount:\n          type: number\n        avail_to:\n          type: string\n        code:\n          type: string\n        created_at:\n          type: string\n        currency_code:\n          type: string\n        custom_fields:\n          type: object\n        free_product_ids:\n          type: string\n        id:\n          type: string\n        initial_amount:\n          type: number\n        message:\n          type: string\n        name:\n          type: string\n        owner_email:\n          type: string\n        owner_name:\n          type: string\n        recipient_email:\n          type: string\n        recipient_name:\n          type: string\n        status:\n          type: string\n        type:\n          type: string\n        usage_history:\n          items:\n            $ref: \"#/components/schemas/Coupon_History\"\n          type: array\n      type: object\n    Image:\n      properties:\n        additional_fields:\n          type: object\n        alt:\n          type: string\n        avail:\n          type: boolean\n        create_at:\n          $ref: \"#/components/schemas/A2CDateTime\"\n        custom_fields:\n          type: object\n        file_name:\n          type: string\n        http_path:\n          type: string\n        id:\n          type: string\n        mime-type:\n          type: string\n        modified_at:\n          $ref: \"#/components/schemas/A2CDateTime\"\n        size:\n          type: integer\n        sort_order:\n          type: integer\n        type:\n          type: string\n      type: object\n    Info:\n      properties:\n        additional_fields:\n          type: object\n        city:\n          type: string\n        country:\n          type: string\n        custom_fields:\n          type: object\n        email:\n          type: string\n        owner:\n          type: string\n        phone:\n          type: string\n        state:\n          type: string\n        state_code:\n          type: string\n        street_address:\n          type: string\n        street_address_line_2:\n          type: string\n        zip_code:\n          type: string\n      type: object\n    Language:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        id:\n          type: string\n        iso_code:\n          type: string\n        name:\n          type: string\n      type: object\n    Model_Response_Cart_Catalog_PriceRules_List:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        pagination:\n          $ref: \"#/components/schemas/Pagination\"\n        result:\n          $ref: \"#/components/schemas/Response_Cart_CatalogPriceRules_List_Result\"\n        return_code:\n          type: integer\n        return_message:\n          type: string\n      type: object\n    Model_Response_Cart_Coupon_List:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        pagination:\n          $ref: \"#/components/schemas/Pagination\"\n        result:\n          $ref: \"#/components/schemas/Response_Cart_Coupon_List_Result\"\n        return_code:\n          type: integer\n        return_message:\n          type: string\n      type: object\n    Model_Response_Cart_GiftCard_List:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        pagination:\n          $ref: \"#/components/schemas/Pagination\"\n        result:\n          $ref: \"#/components/schemas/Response_Cart_Giftcard_List_Result\"\n        return_code:\n          type: integer\n        return_message:\n          type: string\n      type: object\n    Model_Response_Cart_MetaData_List:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        pagination:\n          $ref: \"#/components/schemas/Pagination\"\n        result:\n          $ref: \"#/components/schemas/Response_Cart_MetaData_List_Result\"\n        return_code:\n          type: integer\n        return_message:\n          type: string\n      type: object\n    Model_Response_Cart_Script_List:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        pagination:\n          $ref: \"#/components/schemas/Pagination\"\n        result:\n          $ref: \"#/components/schemas/Response_Cart_Script_List_Result\"\n        return_code:\n          type: integer\n        return_message:\n          type: string\n      type: object\n    Model_Response_Category_List:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        pagination:\n          $ref: \"#/components/schemas/Pagination\"\n        result:\n          $ref: \"#/components/schemas/Response_Category_List_Result\"\n        return_code:\n          type: integer\n        return_message:\n          type: string\n      type: object\n    Model_Response_Customer_Attribute_List:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        pagination:\n          $ref: \"#/components/schemas/Pagination\"\n        result:\n          $ref: \"#/components/schemas/Response_Customer_Attribute_List_Result\"\n        return_code:\n          type: integer\n        return_message:\n          type: string\n      type: object\n    Model_Response_Customer_Group_List:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        pagination:\n          $ref: \"#/components/schemas/Pagination\"\n        result:\n          $ref: \"#/components/schemas/Response_Customer_Group_List_Result\"\n        return_code:\n          type: integer\n        return_message:\n          type: string\n      type: object\n    Model_Response_Customer_List:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        pagination:\n          $ref: \"#/components/schemas/Pagination\"\n        result:\n          $ref: \"#/components/schemas/Response_Customer_List_Result\"\n        return_code:\n          type: integer\n        return_message:\n          type: string\n      type: object\n    Model_Response_Order_Abandoned_List:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        pagination:\n          $ref: \"#/components/schemas/Pagination\"\n        result:\n          $ref: \"#/components/schemas/Response_Order_Abandoned_List_Result\"\n        return_code:\n          type: integer\n        return_message:\n          type: string\n      type: object\n    Model_Response_Order_List:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        pagination:\n          $ref: \"#/components/schemas/Pagination\"\n        result:\n          $ref: \"#/components/schemas/Response_Order_List_Result\"\n        return_code:\n          type: integer\n        return_message:\n          type: string\n      type: object\n    Model_Response_Order_Shipment_List:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        pagination:\n          $ref: \"#/components/schemas/Pagination\"\n        result:\n          $ref: \"#/components/schemas/Response_Order_Shipment_List_Result\"\n        return_code:\n          type: integer\n        return_message:\n          type: string\n      type: object\n    Model_Response_Product_Attribute_List:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        pagination:\n          $ref: \"#/components/schemas/Pagination\"\n        result:\n          $ref: \"#/components/schemas/Response_Product_Attribute_List_Result\"\n        return_code:\n          type: integer\n        return_message:\n          type: string\n      type: object\n    Model_Response_Product_ChildItem_List:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        pagination:\n          $ref: \"#/components/schemas/Pagination\"\n        result:\n          $ref: \"#/components/schemas/Response_Product_ChildItem_List_Result\"\n        return_code:\n          type: integer\n        return_message:\n          type: string\n      type: object\n    Model_Response_Product_List:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        pagination:\n          $ref: \"#/components/schemas/Pagination\"\n        result:\n          $ref: \"#/components/schemas/Response_Product_List_Result\"\n        return_code:\n          type: integer\n        return_message:\n          type: string\n      type: object\n    Order:\n      properties:\n        additional_fields:\n          type: object\n        basket_id:\n          type: string\n        billing_address:\n          $ref: \"#/components/schemas/Customer_Address\"\n        bundles:\n          items:\n            $ref: \"#/components/schemas/Order_Item\"\n          type: array\n        channel_id:\n          type: string\n        comment:\n          type: string\n        create_at:\n          $ref: \"#/components/schemas/A2CDateTime\"\n        currency:\n          $ref: \"#/components/schemas/Currency\"\n        custom_fields:\n          type: object\n        customer:\n          $ref: \"#/components/schemas/BaseCustomer\"\n        discounts:\n          items:\n            $ref: \"#/components/schemas/Order_Totals_NewDiscount\"\n          type: array\n        finished_time:\n          $ref: \"#/components/schemas/A2CDateTime\"\n        gift_message:\n          type: string\n        id:\n          type: string\n        modified_at:\n          $ref: \"#/components/schemas/A2CDateTime\"\n        order_details_url:\n          type: string\n        order_id:\n          type: string\n        order_products:\n          items:\n            $ref: \"#/components/schemas/Order_Item\"\n          type: array\n        payment_method:\n          $ref: \"#/components/schemas/Order_PaymentMethod\"\n        refunds:\n          items:\n            $ref: \"#/components/schemas/Order_Refund\"\n          type: array\n        shipping_address:\n          $ref: \"#/components/schemas/Customer_Address\"\n        shipping_method:\n          $ref: \"#/components/schemas/Order_ShippingMethod\"\n        shipping_methods:\n          items:\n            $ref: \"#/components/schemas/Order_ShippingMethod\"\n          type: array\n        status:\n          $ref: \"#/components/schemas/Order_Status\"\n        store_id:\n          type: string\n        total:\n          $ref: \"#/components/schemas/Order_Total\"\n        totals:\n          $ref: \"#/components/schemas/Order_Totals\"\n        warehouses_ids:\n          items:\n            type: string\n          type: array\n      type: object\n    OrderAbandoned:\n      properties:\n        additional_fields:\n          type: object\n        basket_id:\n          type: string\n        basket_url:\n          type: string\n        created_at:\n          $ref: \"#/components/schemas/A2CDateTime\"\n        currency:\n          $ref: \"#/components/schemas/Currency\"\n        custom_fields:\n          type: object\n        customer:\n          properties:\n            email:\n              type: string\n            first_name:\n              type: string\n            id:\n              type: string\n            last_name:\n              type: string\n        id:\n          type: string\n        modified_at:\n          $ref: \"#/components/schemas/A2CDateTime\"\n        order_products:\n          items:\n            $ref: \"#/components/schemas/Order_Item\"\n          type: array\n        totals:\n          $ref: \"#/components/schemas/Order_Totals\"\n      type: object\n    OrderAdd:\n      properties:\n        admin_comment:\n          description: Specifies admin's order comment\n          type: string\n        admin_private_comment:\n          description: Specifies private admin's order comment\n          type: string\n        bill_address_1:\n          description: Specifies first billing address\n          type: string\n        bill_address_2:\n          description: Specifies second billing address\n          type: string\n        bill_city:\n          description: Specifies billing city\n          type: string\n        bill_company:\n          description: Specifies billing company\n          type: string\n        bill_country:\n          description: Specifies billing country code\n          type: string\n        bill_fax:\n          description: Specifies billing fax\n          type: string\n        bill_first_name:\n          description: Specifies billing first name\n          type: string\n        bill_last_name:\n          description: Specifies billing last name\n          type: string\n        bill_phone:\n          description: Specifies billing phone\n          type: string\n        bill_postcode:\n          description: Specifies billing postcode\n          type: string\n        bill_state:\n          description: Specifies billing state code\n          type: string\n        channel_id:\n          description: Channel ID\n          type: string\n        clear_cache:\n          default: true\n          description: Is cache clear required\n          type: boolean\n        comment:\n          description: Specifies order comment\n          type: string\n        coupon_discount:\n          description: Specifies order's coupon discount\n          type: number\n        create_invoice:\n          default: false\n          description: Defines whether the invoice is created automatically along with the order\n          type: boolean\n        currency:\n          description: Currency code of order\n          type: string\n        customer_birthday:\n          description: Specifies customer’s birthday\n          type: string\n        customer_email:\n          description: Defines the customer specified by email for whom order has to be created\n          type: string\n        customer_fax:\n          description: Specifies customer’s fax\n          type: string\n        customer_first_name:\n          description: Specifies customer's first name\n          type: string\n        customer_last_name:\n          description: Specifies customer’s last name\n          type: string\n        customer_phone:\n          description: Specifies customer’s phone\n          type: string\n        date:\n          description: Specifies an order creation date in format Y-m-d H:i:s\n          type: string\n        date_finished:\n          description: Specifies order's  finished date\n          type: string\n        date_modified:\n          description: Specifies order's  modification date\n          type: string\n        discount:\n          description: Specifies order's discount\n          type: number\n        external_source:\n          description: Identifying the system used to generate the order\n          type: string\n        financial_status:\n          description: Create order with financial status\n          type: string\n        fulfillment_status:\n          description: Create order with fulfillment status\n          type: string\n        gift_certificate_discount:\n          description: Discounts for order with gift certificates\n          type: number\n        id:\n          description: Defines order's id\n          type: string\n        inventory_behaviour:\n          default: bypass\n          description: \"The behaviour to use when updating inventory.\u003chr\u003e\u003cdiv style=\\\"font-style:normal\\\"\u003eValues description:\u003cdiv style=\\\"margin-left: 2%; padding-top: 2%\\\"\u003e\u003cdiv style=\\\"font-size:85%\\\"\u003e\u003cb\u003ebypass\u003c/b\u003e = Do not claim inventory \u003c/br\u003e\u003c/br\u003e\u003cb\u003edecrement_ignoring_policy\u003c/b\u003e = Ignore the product's \u003c/br\u003e inventory policy and claim amounts\u003c/br\u003e\u003c/br\u003e\u003cb\u003edecrement_obeying_policy\u003c/b\u003e =  Obey the product's \u003c/br\u003e inventory policy.\u003c/br\u003e\u003c/br\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\"\n          type: string\n        note_attributes:\n          description: Defines note attributes\n          items:\n            properties:\n              name:\n                type: string\n              value:\n                type: string\n            type: object\n          type: array\n        order_id:\n          description: Defines the order id if it is supported by the cart\n          type: string\n        order_item:\n          items:\n            properties:\n              order_item_allow_refund_items_separately:\n                description: Indicates whether subitems of the grouped/bundle product can be refunded separately\n                type: boolean\n              order_item_allow_ship_items_separately:\n                description: Indicates whether subitems of the grouped/bundle product can be shipped separately\n                type: boolean\n              order_item_id:\n                description: Defines orders specified by order item id\n                type: string\n              order_item_model:\n                description: Defines orders specified by order item model\n                type: string\n              order_item_name:\n                description: Defines orders specified by order item name\n                type: string\n              order_item_option:\n                items:\n                  properties:\n                    order_item_option_name:\n                      description: Ordered Product Option Name. Where x is order item ID, y is order item option ID\n                      type: string\n                    order_item_option_price:\n                      description: Ordered product option price Where x is order item ID, y - order item option ID\n                      type: number\n                    order_item_option_value:\n                      description: Ordered product option value Where x is order item ID, y - order item option ID\n                      type: string\n                  type: object\n                type: array\n              order_item_parent:\n                description: Index of the parent grouped/bundle product\n                type: integer\n              order_item_parent_option_name:\n                description: Option name of the parent grouped/bundle product\n                type: string\n              order_item_price:\n                description: Defines orders specified by order item price\n                type: number\n              order_item_price_includes_tax:\n                default: false\n                description: Defines if item price includes tax\n                type: boolean\n              order_item_property:\n                items:\n                  properties:\n                    order_item_property_name:\n                      description: Ordered product property name. Where x is order item ID, y is order item property ID\n                      type: string\n                    order_item_property_value:\n                      description: Ordered product property value. Where x is order item ID, y - order item property ID\n                      type: string\n                  type: object\n                type: array\n              order_item_quantity:\n                description: Defines orders specified by order item quantity\n                type: integer\n              order_item_tax:\n                default: 0\n                description: Percentage of tax for product order\n                type: number\n              order_item_variant_id:\n                description: Ordered product variant. Where x is order item ID\n                type: string\n            required:\n              - order_item_id\n              - order_item_name\n              - order_item_price\n              - order_item_quantity\n            type: object\n          type: array\n        order_payment_method:\n          description: Defines order payment method.\u003cbr/\u003eSetting order_payment_method on Shopify will also change financial_status field value to 'paid'\n          type: string\n        order_shipping_method:\n          description: Defines order shipping method\n          type: string\n        order_status:\n          description: Defines order status.\n          type: string\n        send_admin_notifications:\n          default: false\n          description: Notify admin when new order was created.\n          type: boolean\n        send_notifications:\n          default: false\n          description: Send notifications to customer after order was created\n          type: boolean\n        shipp_address_1:\n          description: Specifies first shipping address\n          type: string\n        shipp_address_2:\n          description: Specifies second address line of a shipping street address\n          type: string\n        shipp_city:\n          description: Specifies shipping city\n          type: string\n        shipp_company:\n          description: Specifies shipping company\n          type: string\n        shipp_country:\n          description: Specifies shipping country code\n          type: string\n        shipp_fax:\n          description: Specifies shipping fax\n          type: string\n        shipp_first_name:\n          description: Specifies shipping first name\n          type: string\n        shipp_last_name:\n          description: Specifies shipping last name\n          type: string\n        shipp_phone:\n          description: Specifies shipping phone\n          type: string\n        shipp_postcode:\n          description: Specifies shipping postcode\n          type: string\n        shipp_state:\n          description: Specifies shipping state code\n          type: string\n        shipping_price:\n          default: 0\n          description: Specifies order's shipping price\n          type: number\n        shipping_tax:\n          description: Specifies order's shipping price tax\n          type: number\n        store_id:\n          description: Defines store id where the order should be assigned\n          type: string\n        subtotal_price:\n          description: Total price of all ordered products multiplied by their number, excluding tax, shipping price and discounts\n          type: number\n        tags:\n          description: Order tags\n          type: string\n        tax_price:\n          default: 0\n          description: The value of tax cost for order\n          type: number\n        total_paid:\n          description: Defines total paid amount for the order\n          type: number\n        total_price:\n          description: Defines order's total price\n          type: number\n        total_weight:\n          description: Defines the sum of all line item weights in grams for the order\n          type: integer\n        transaction_id:\n          description: Payment transaction id\n          type: string\n      required:\n        - order_status\n        - customer_email\n        - bill_first_name\n        - bill_last_name\n        - bill_address_1\n        - bill_city\n        - bill_postcode\n        - bill_state\n        - bill_country\n        - order_item\n      type: object\n    OrderRefundAdd:\n      properties:\n        date:\n          description: Specifies an order creation date in format Y-m-d H:i:s\n          type: string\n        fee_price:\n          description: Specifies refund's fee price\n          type: number\n        is_online:\n          default: false\n          description: Indicates whether refund type is online\n          type: boolean\n        item_restock:\n          default: false\n          description: Boolean, whether or not to add the line items back to the store inventory.\n          type: boolean\n        items:\n          description: Defines items in the order that will be refunded\n          items:\n            properties:\n              order_product_id:\n                type: string\n              price:\n                type: number\n              quantity:\n                type: integer\n            type: object\n          type: array\n        message:\n          description: Refund reason, or some else message which assigned to refund.\n          type: string\n        order_id:\n          description: Defines the order for which the refund will be created.\n          type: string\n        send_notifications:\n          default: false\n          description: Send notifications to customer after refund was created\n          type: boolean\n        shipping_price:\n          description: Defines refund shipping amount.\n          type: number\n        total_price:\n          description: Defines order refund amount.\n          type: number\n      type: object\n    OrderShipmentAdd:\n      properties:\n        adjust_stock:\n          default: false\n          description: This parameter is used for adjust stock.\n          type: boolean\n        enable_cache:\n          default: false\n          description: If the value is 'true' and order exist in our cache, we will use order.info from cache to prepare shipment items.\n          type: boolean\n        items:\n          description: Defines items in the order that will be shipped\n          items:\n            properties:\n              order_product_id:\n                type: string\n              quantity:\n                type: number\n            type: object\n          type: array\n        order_id:\n          description: Defines the order for which the shipment will be created\n          type: string\n        send_notifications:\n          default: false\n          description: Send notifications to customer after shipment was created\n          type: boolean\n        shipment_provider:\n          description: Defines company name that provide tracking of shipment\n          type: string\n        shipping_method:\n          description: Define shipping method\n          type: string\n        store_id:\n          description: Store Id\n          type: string\n        tracking_link:\n          description: Defines custom tracking link\n          type: string\n        tracking_numbers:\n          description: Defines shipment's tracking numbers that have to be added\u003c/br\u003e How set tracking numbers to appropriate carrier:\u003cul\u003e\u003cli\u003etracking_numbers[]=a2c.demo1,a2c.demo2 - set default carrier\u003c/li\u003e\u003cli\u003etracking_numbers[\u003cb\u003ecarrier_id\u003c/b\u003e]=a2c.demo - set appropriate carrier\u003c/li\u003e\u003c/ul\u003eTo get the list of carriers IDs that are available in your store, use the \u003ca href = \"http://docs.api2cart.com/cart-info\"\u003ecart.info\u003c/a \u003e method\n          items:\n            properties:\n              carrier_id:\n                type: string\n              tracking_number:\n                type: string\n            type: object\n          type: array\n        warehouse_id:\n          description: This parameter is used for selecting a warehouse where you need to set/modify a product quantity.\n          type: string\n      type: object\n    OrderShipmentTrackingAdd:\n      properties:\n        carrier_id:\n          description: Defines tracking carrier id\n          type: string\n        order_id:\n          description: Defines the order id\n          type: string\n        send_notifications:\n          default: false\n          description: Send notifications to customer after tracking was created\n          type: boolean\n        shipment_id:\n          description: Shipment id indicates the number of delivery\n          type: string\n        store_id:\n          description: Store Id\n          type: string\n        tracking_link:\n          description: Defines custom tracking link\n          type: string\n        tracking_number:\n          description: Defines tracking number\n          type: string\n        tracking_provider:\n          description: Defines name of the company which provides shipment tracking\n          type: string\n      required:\n        - shipment_id\n        - tracking_number\n      type: object\n    OrderShipmentUpdate:\n      properties:\n        order_id:\n          description: Defines the order that will be updated\n          type: string\n        replace:\n          default: true\n          description: Allows rewrite tracking numbers\n          type: boolean\n        shipment_id:\n          description: Shipment id indicates the number of delivery\n          type: string\n        store_id:\n          description: Store Id\n          type: string\n        tracking_numbers:\n          description: Defines shipment's tracking numbers that have to be added\u003c/br\u003e How set tracking numbers to appropriate carrier:\u003cul\u003e\u003cli\u003etracking_numbers[]=a2c.demo1,a2c.demo2 - set default carrier\u003c/li\u003e\u003cli\u003etracking_numbers[\u003cb\u003ecarrier_id\u003c/b\u003e]=a2c.demo - set appropriate carrier\u003c/li\u003e\u003c/ul\u003eTo get the list of carriers IDs that are available in your store, use the \u003ca href = \"http://docs.api2cart.com/cart-info\"\u003ecart.info\u003c/a \u003e method\n          items:\n            properties:\n              carrier_id:\n                type: string\n              tracking_number:\n                type: string\n            type: object\n          type: array\n      required:\n        - shipment_id\n      type: object\n    Order_Item:\n      properties:\n        additional_fields:\n          type: object\n        barcode:\n          type: string\n        custom_fields:\n          type: object\n        discount_amount:\n          type: number\n        model:\n          type: string\n        name:\n          type: string\n        options:\n          items:\n            $ref: \"#/components/schemas/Order_Item_Option\"\n          type: array\n        order_product_id:\n          type: string\n        parent_order_product_id:\n          type: string\n        price:\n          type: number\n        price_inc_tax:\n          type: number\n        product_id:\n          type: string\n        quantity:\n          type: number\n        tax_percent:\n          type: number\n        tax_value:\n          type: number\n        tax_value_after_discount:\n          type: number\n        total_price:\n          type: number\n        variant_id:\n          type: string\n        weight:\n          type: number\n        weight_unit:\n          type: string\n      type: object\n    Order_Item_Option:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        name:\n          type: string\n        option_id:\n          type: string\n        price:\n          type: number\n        product_option_value_id:\n          type: string\n        type:\n          type: string\n        value:\n          type: string\n        weight:\n          type: number\n      type: object\n    Order_PaymentMethod:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        name:\n          type: string\n      type: object\n    Order_Refund:\n      properties:\n        additional_fields:\n          type: object\n        comment:\n          type: string\n        custom_fields:\n          type: object\n        fee:\n          type: number\n        id:\n          type: string\n        items:\n          items:\n            $ref: \"#/components/schemas/Order_Status_Refund_Item\"\n          type: array\n        modified_time:\n          $ref: \"#/components/schemas/A2CDateTime\"\n        shipping:\n          type: number\n        tax:\n          type: number\n        total:\n          type: number\n      type: object\n    Order_ShippingMethod:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        name:\n          type: string\n      type: object\n    Order_Status:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        history:\n          items:\n            $ref: \"#/components/schemas/Order_Status_HistoryItem\"\n          type: array\n        id:\n          type: string\n        name:\n          type: string\n        refund_info:\n          $ref: \"#/components/schemas/Order_Status_Refund\"\n      type: object\n    Order_Status_HistoryItem:\n      properties:\n        additional_fields:\n          type: object\n        comment:\n          type: string\n        custom_fields:\n          type: object\n        id:\n          type: string\n        modified_time:\n          $ref: \"#/components/schemas/A2CDateTime\"\n        name:\n          type: string\n        notify:\n          type: boolean\n      type: object\n    Order_Status_Refund:\n      properties:\n        additional_fields:\n          type: object\n        comment:\n          type: string\n        custom_fields:\n          type: object\n        fee:\n          type: number\n        refunded_items:\n          items:\n            $ref: \"#/components/schemas/Order_Status_Refund_Item\"\n          type: array\n        shipping:\n          type: number\n        tax:\n          type: number\n        time:\n          $ref: \"#/components/schemas/A2CDateTime\"\n        total_refunded:\n          type: number\n      type: object\n    Order_Status_Refund_Item:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        order_product_id:\n          type: string\n        product_id:\n          type: string\n        qty:\n          type: number\n        refund:\n          type: number\n        variant_id:\n          type: string\n      type: object\n    Order_Total:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        shipping_ex_tax:\n          type: number\n        subtotal_ex_tax:\n          type: number\n        total:\n          type: number\n        total_discount:\n          type: number\n        total_paid:\n          type: number\n        total_tax:\n          type: number\n        wrapping_ex_tax:\n          type: number\n      type: object\n    Order_Totals:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        discount:\n          type: number\n        shipping:\n          type: number\n        subtotal:\n          type: number\n        tax:\n          type: number\n        total:\n          type: number\n      type: object\n    Order_Totals_NewDiscount:\n      properties:\n        additional_fields:\n          type: object\n        code:\n          type: string\n        custom_fields:\n          type: object\n        type:\n          type: string\n        value:\n          type: number\n      type: object\n    Pagination:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        next:\n          type: string\n        previous:\n          type: string\n      type: object\n    Plugin:\n      properties:\n        active:\n          type: boolean\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        name:\n          type: string\n      type: object\n    PluginList:\n      properties:\n        additional_fields:\n          type: object\n        all_plugins:\n          type: integer\n        custom_fields:\n          type: object\n        plugins:\n          items:\n            $ref: \"#/components/schemas/Plugin\"\n          type: array\n      type: object\n    Product:\n      properties:\n        additional_fields:\n          type: object\n        advanced_price:\n          items:\n            $ref: \"#/components/schemas/Product_AdvancedPrice\"\n          type: array\n        avail_sale:\n          type: boolean\n        avail_view:\n          type: boolean\n        backorders:\n          type: string\n        categories_ids:\n          items:\n            type: string\n          type: array\n        cost_price:\n          type: number\n        create_at:\n          $ref: \"#/components/schemas/A2CDateTime\"\n        custom_fields:\n          type: object\n        description:\n          type: string\n        dimensions_unit:\n          type: string\n        group_price:\n          items:\n            $ref: \"#/components/schemas/Product_GroupPrice\"\n          type: array\n        height:\n          type: number\n        id:\n          type: string\n        images:\n          items:\n            $ref: \"#/components/schemas/Image\"\n          type: array\n        inventory:\n          items:\n            $ref: \"#/components/schemas/Product_Inventory\"\n          type: array\n        is_downloadable:\n          type: boolean\n        is_stock_managed:\n          type: boolean\n        is_virtual:\n          type: boolean\n        length:\n          type: number\n        manage_stock:\n          type: string\n        meta_description:\n          type: string\n        meta_keywords:\n          type: string\n        meta_title:\n          type: string\n        modified_at:\n          $ref: \"#/components/schemas/A2CDateTime\"\n        name:\n          type: string\n        price:\n          type: number\n        product_options:\n          items:\n            $ref: \"#/components/schemas/Product_Option\"\n          type: array\n        quantity:\n          type: number\n        related_products_ids:\n          items:\n            type: string\n          type: array\n        seo_url:\n          type: string\n        short_description:\n          type: string\n        sort_order:\n          type: integer\n        special_price:\n          $ref: \"#/components/schemas/SpecialPrice\"\n        stores_ids:\n          items:\n            type: string\n          type: array\n        tax_class_id:\n          type: string\n        tier_price:\n          items:\n            $ref: \"#/components/schemas/Product_TierPrice\"\n          type: array\n        type:\n          type: string\n        u_brand:\n          type: string\n        u_brand_id:\n          type: string\n        u_model:\n          type: string\n        u_mpn:\n          type: string\n        u_sku:\n          type: string\n        u_upc:\n          type: string\n        url:\n          type: string\n        weight:\n          type: number\n        weight_unit:\n          type: string\n        width:\n          type: number\n      type: object\n    ProductAdd:\n      properties:\n        attribute_name:\n          description: Defines product’s attribute name separated with a comma in Magento\n          type: string\n        attribute_set_name:\n          default: Default\n          description: Defines product’s attribute set name in Magento\n          type: string\n        avail_from:\n          description: Allows to schedule a time in the future that the item becomes available. The value should be greater than the current date and time.\n          type: string\n        available_for_sale:\n          default: true\n          description: Specifies the set of visible/invisible products for sale\n          type: boolean\n        available_for_view:\n          default: true\n          description: Specifies the set of visible/invisible products for users\n          type: boolean\n        backorder_status:\n          description: Set backorder status\n          type: string\n        barcode:\n          description: A barcode is a unique code composed of numbers used as a product identifier.\n          type: string\n        best_offer:\n          description: 'The price at which Best Offers are automatically accepted.\u003chr\u003e\u003cdiv style=\"font-style:normal\"\u003eParam structure:\u003cdiv style=\"margin-left: 2%;\"\u003e\u003ccode style=\"padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;\"\u003ebest_offer[\u003cb\u003eminimum_offer_price\u003c/b\u003e] = decimal\u003c/br\u003ebest_offer[\u003cb\u003eauto_accept_price\u003c/b\u003e] = decimal\u003c/br\u003e\u003c/code\u003e\u003c/div\u003e\u003c/div\u003e'\n          items:\n            type: string\n          type: array\n        categories_ids:\n          description: Defines product add that is specified by comma-separated categories id\n          type: string\n        category_id:\n          description: Defines product add that is specified by category id\n          type: string\n        clear_cache:\n          default: true\n          description: Is cache clear required\n          type: boolean\n        condition:\n          description: The human-readable label for the condition (e.g., \"New\").\n          type: string\n        cost_price:\n          description: Defines new product's cost price\n          type: number\n        created_at:\n          description: Defines the date of entity creation\n          type: string\n        description:\n          description: Defines product's description that has to be added\n          type: string\n        downloadable:\n          default: false\n          description: Defines whether the product is downloadable\n          type: boolean\n        ean:\n          description: European Article Number. An EAN is a unique 8 or 13-digit identifier that many industries (such as book publishers) use to identify products.\n          type: string\n        group_prices:\n          description: Defines product's group prices\n          items:\n            properties:\n              group_id:\n                type: string\n              price:\n                type: number\n            type: object\n          type: array\n        gtin:\n          description: Global Trade Item Number. An GTIN is an identifier for trade items.\n          type: string\n        image_name:\n          description: Defines image's name\n          type: string\n        image_url:\n          description: Image Url\n          type: string\n        isbn:\n          description: International Standard Book Number. An ISBN is a unique identifier for books.\n          type: string\n        lang_id:\n          description: Language id\n          type: string\n        listing_duration:\n          description: Describes the number of days the seller wants the listing to be active. Look at cart.info method response for allowed values.\n          type: string\n        listing_type:\n          default: FixedPrice\n          description: Indicates the selling format of the eBay listing.\n          type: string\n        manufacturer:\n          description: Defines product's manufacturer\n          type: string\n        marketplace_item_properties:\n          default: false\n          description: String containing the JSON representation of the supplied data\n          type: string\n        meta_description:\n          description: Defines unique meta description of a entity\n          type: string\n        meta_keywords:\n          description: Defines unique meta keywords for each entity\n          type: string\n        meta_title:\n          description: Defines unique meta title for each entity\n          type: string\n        model:\n          description: Defines product's model that has to be added\n          type: string\n        mpn:\n          description: Manufacturer Part Number. A MPN is an identifier of a particular part design or material used.\n          type: string\n        name:\n          description: Defines product's name that has to be added\n          type: string\n        old_price:\n          description: Defines product's old price\n          type: number\n        ordered_count:\n          default: 0\n          description: Defines how many times the product was ordered\n          type: integer\n        package_details:\n          description: 'If the seller is subscribed to \"Business Policies\", use the seller_profiles instead of the shipping_details, payment_methods and return_accepted params.\u003chr\u003e\u003cdiv style=\"font-style:normal\"\u003eParam structure:\u003cdiv style=\"margin-left: 2%;\"\u003e\u003ccode style=\"padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;\"\u003epackage_details[\u003cb\u003emeasure_unit\u003c/b\u003e] = string\u003c/br\u003e Allowed measure_unit values: [English or Metric] \u003c/br\u003e Default: Metric\u003c/br\u003epackage_details[\u003cb\u003eweigh_unit\u003c/b\u003e] = string\u003c/br\u003e Allowed weigh_unit values: [kg, g, lbs, oz]\u003c/br\u003epackage_details[\u003cb\u003epackage_depth\u003c/b\u003e] = decimal\u003c/br\u003epackage_details[\u003cb\u003epackage_length\u003c/b\u003e] = decimal\u003c/br\u003epackage_details[\u003cb\u003epackage_width\u003c/b\u003e] = decimal\u003c/br\u003epackage_details[\u003cb\u003eweight_major\u003c/b\u003e] = decimal\u003c/br\u003epackage_details[\u003cb\u003eweight_minor\u003c/b\u003e] = decimal\u003c/br\u003epackage_details[\u003cb\u003eshipping_package\u003c/b\u003e] = string\u003c/br\u003e See cart.info method, param `eBay_shipping_package_details`\u003c/code\u003e\u003c/div\u003e\u003c/div\u003e'\n          items:\n            type: string\n          type: array\n        payment_methods:\n          description: 'Identifies the payment method (such as PayPal) that the seller will accept when the buyer pays for the item. Look at cart.info method response for allowed values.\u003chr\u003e\u003cdiv style=\"font-style:normal\"\u003eParam structure:\u003cdiv style=\"margin-left: 2%;\"\u003e\u003ccode style=\"padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;\"\u003epayment_methods[0] = string\u003c/br\u003epayment_methods[1] = string\u003c/br\u003e\u003c/code\u003e\u003c/div\u003e\u003c/div\u003e'\n          items:\n            type: string\n          type: array\n        paypal_email:\n          description: Valid PayPal email address for the PayPal account that the seller will use if they offer PayPal as a payment method for the listing.\n          type: string\n        price:\n          description: Defines product's price that has to be added\n          type: number\n        product_class:\n          description: A categorization for the product\n          type: string\n        quantity:\n          default: 0\n          description: Defines product's quantity that has to be added\n          type: number\n        return_accepted:\n          description: Indicates whether the seller allows the buyer to return the item.\n          type: boolean\n        sales_tax:\n          description: \"Percent of an item's price to be charged as the sales tax for the order. Look at cart.info method response for allowed values.\u003chr\u003e\u003cdiv style=\\\"font-style:normal\\\"\u003eParam structure:\u003cdiv style=\\\"margin-left: 2%;\\\"\u003e\u003ccode style=\\\"padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;\\\"\u003esales_tax[\u003cb\u003etax_percent\u003c/b\u003e] = decimal (##.###)\u003c/br\u003esales_tax[\u003cb\u003etax_state\u003c/b\u003e] = string\u003c/br\u003esales_tax[\u003cb\u003eshipping_inc_in_tax\u003c/b\u003e] = bool\u003c/br\u003e\u003c/code\u003e\u003c/div\u003e\u003c/div\u003e\"\n          items:\n            type: string\n          type: array\n        seller_profiles:\n          description: 'If the seller is subscribed to \"Business Policies\", use the seller_profiles instead of the shipping_details, payment_methods and return_accepted params.\u003chr\u003e\u003cdiv style=\"font-style:normal\"\u003eParam structure:\u003cdiv style=\"margin-left: 2%;\"\u003e\u003ccode style=\"padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;\"\u003eseller_profiles[\u003cb\u003eshipping_profile_id\u003c/b\u003e] = integer\u003c/br\u003eseller_profiles[\u003cb\u003epayment_profile_id\u003c/b\u003e] = integer\u003c/br\u003eseller_profiles[\u003cb\u003ereturn_profile_id\u003c/b\u003e] = integer\u003c/br\u003e\u003c/code\u003e\u003c/div\u003e\u003c/div\u003e'\n          properties:\n            payment_profile_id:\n              type: string\n            return_profile_id:\n              type: string\n            shipping_profile_id:\n              type: string\n          type: object\n        shipping_details:\n          description: 'The shipping details, including flat and calculated shipping costs and shipping insurance costs. Look at cart.info method response for allowed values.\u003chr\u003e\u003cdiv style=\"font-style:normal\"\u003eParam structure:\u003cdiv style=\"margin-left: 2%;\"\u003e\u003ccode style=\"padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;\"\u003eshipping_details[0][\u003cb\u003eshipping_type\u003c/b\u003e] = string \u003c/br\u003eshipping_details[0][\u003cb\u003eshipping_service\u003c/b\u003e] = string\u003c/br\u003eshipping_details[0][\u003cb\u003eshipping_cost\u003c/b\u003e] = decimal\u003c/br\u003eshipping_details[1][\u003cb\u003eshipping_type\u003c/b\u003e] = string \u003c/br\u003eshipping_details[1][\u003cb\u003eshipping_service\u003c/b\u003e] = string\u003c/br\u003eshipping_details[1][\u003cb\u003eshipping_cost\u003c/b\u003e] = decimal\u003c/br\u003e\u003c/code\u003e\u003c/div\u003e\u003c/div\u003e'\n          items:\n            properties:\n              shipping_cost:\n                type: number\n              shipping_service:\n                type: string\n              shipping_type:\n                type: string\n            type: object\n          type: array\n        shipping_template_id:\n          default: 0\n          description: The numeric ID of the shipping template associated with the products in Etsy.\n          type: integer\n        short_description:\n          description: Defines short description\n          type: string\n        sku:\n          description: Defines product's sku that has to be added\n          type: string\n        special_price:\n          description: Defines product's model that has to be added\n          type: number\n        specifics:\n          description: |-\n            An array of Item Specific Name/Value pairs used by the seller to provide descriptive details of an item in a structured manner.\n                    \u003chr\u003e\n                    \u003cdiv style=\"font-style:normal\"\u003eParam structure:\n                      \u003cdiv style=\"margin-left: 2%;\"\u003e\n                        \u003ccode style=\"padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;\"\u003e\n                          specifics[int][\u003cb\u003ename\u003c/b\u003e] = string\u003c/br\u003e\n                          specifics[int][\u003cb\u003evalue\u003c/b\u003e] = string\u003c/br\u003e\n                        \u003c/code\u003e\n                      \u003c/div\u003e\n                    \u003c/div\u003e\n          items:\n            type: string\n          type: array\n        sprice_create:\n          description: Defines the date of special price creation\n          type: string\n        sprice_expire:\n          description: Defines the term of special price offer duration\n          type: string\n        sprice_modified:\n          description: Defines the date of special price modification\n          type: string\n        status:\n          description: Defines product's status\n          type: string\n        stores_ids:\n          default: 0\n          description: Assign product to the stores that is specified by comma-separated stores' id\n          type: string\n        tags:\n          description: Product tags\n          type: string\n        tax_class_id:\n          description: Defines tax classes where entity has to be added\n          type: integer\n        taxable:\n          default: true\n          description: Specifies whether a tax is charged\n          type: boolean\n        tier_prices:\n          description: Defines product's tier prices\n          items:\n            properties:\n              price:\n                type: number\n              quantity:\n                type: number\n            type: object\n          type: array\n        type:\n          default: simple\n          description: Defines product's type\n          type: string\n        upc:\n          description: Universal Product Code. A UPC (UPC-A) is a commonly used identifer for many different products.\n          type: string\n        url:\n          description: Defines unique product's URL\n          type: string\n        viewed_count:\n          default: 0\n          description: Specifies the number of product's reviews\n          type: integer\n        visible:\n          description: Set visibility status\n          type: string\n        warehouse_id:\n          description: This parameter is used for selecting a warehouse where you need to set/modify a product quantity.\n          type: string\n        weight:\n          default: 0\n          description: Weight\n          type: number\n        weight_unit:\n          description: Weight Unit\n          type: string\n        wholesale_price:\n          description: Defines product's sale price\n          type: number\n      required:\n        - name\n        - model\n        - description\n        - price\n      type: object\n    ProductPriceAdd:\n      properties:\n        group_prices:\n          description: Defines product's group prices\n          items:\n            properties:\n              group_id:\n                type: string\n              price:\n                type: number\n            type: object\n          type: array\n        product_id:\n          description: Defines the product to which the price has to be added\n          type: string\n      type: object\n    ProductPriceUpdate:\n      properties:\n        group_prices:\n          description: Defines product's group prices\n          items:\n            properties:\n              group_id:\n                type: string\n              id:\n                type: integer\n              price:\n                type: number\n            type: object\n          type: array\n        product_id:\n          description: Defines the product where the price has to be updated\n          type: string\n      type: object\n    ProductTaxAdd:\n      properties:\n        name:\n          description: Defines tax class name where tax has to be added\n          type: string\n        product_id:\n          description: Defines products specified by product id\n          type: string\n        tax_rates:\n          description: Defines tax rates of specified tax classes\n          items:\n            properties:\n              name:\n                type: string\n              type:\n                type: string\n              value:\n                type: number\n            type: object\n          type: array\n      required:\n        - name\n        - tax_rates\n      type: object\n    ProductVariantAdd:\n      properties:\n        attributes:\n          description: Defines variant's attributes list\n          items:\n            properties:\n              attribute_name:\n                type: string\n              attribute_price:\n                type: number\n              attribute_value:\n                type: string\n            type: object\n          type: array\n        available_for_sale:\n          default: true\n          description: Specifies the set of visible/invisible product's variants for sale\n          type: boolean\n        available_for_view:\n          default: true\n          description: Specifies the set of visible/invisible product's variants for users\n          type: boolean\n        barcode:\n          description: A barcode is a unique code composed of numbers used as a product identifier.\n          type: string\n        clear_cache:\n          default: true\n          description: Is cache clear required\n          type: boolean\n        cost_price:\n          description: Defines new product's cost price\n          type: number\n        created_at:\n          description: Defines the date of entity creation\n          type: string\n        description:\n          description: Specifies variant's description\n          type: string\n        lang_id:\n          description: Language id\n          type: string\n        manufacturer:\n          description: Specifies the product variant's manufacturer\n          type: string\n        meta_description:\n          description: Defines unique meta description of a entity\n          type: string\n        meta_keywords:\n          description: Defines unique meta keywords for each entity\n          type: string\n        meta_title:\n          description: Defines unique meta title for each entity\n          type: string\n        model:\n          description: Specifies variant's model that has to be added\n          type: string\n        name:\n          description: Defines variant's name that has to be added\n          type: string\n        price:\n          description: Defines new product's variant price\n          type: number\n        product_id:\n          description: Defines product's id where the variant has to be added\n          type: string\n        quantity:\n          default: 0\n          description: Defines product variant's quantity that has to be added\n          type: number\n        short_description:\n          description: Defines short description\n          type: string\n        sku:\n          description: Defines variant's sku that has to be added\n          type: string\n        special_price:\n          description: Specifies variant's model that has to be added\n          type: number\n        sprice_create:\n          description: Defines the date of special price creation\n          type: string\n        sprice_expire:\n          description: Defines the term of special price offer duration\n          type: string\n        sprice_modified:\n          description: Defines the date of special price modification\n          type: string\n        store_id:\n          description: Add variants specified by store id\n          type: string\n        tax_class_id:\n          description: Defines tax classes where entity has to be added\n          type: integer\n        taxable:\n          default: true\n          description: Specifies whether a tax is charged\n          type: boolean\n        url:\n          description: Defines unique product variant's URL\n          type: string\n        warehouse_id:\n          description: This parameter is used for selecting a warehouse where you need to set/modify a product quantity.\n          type: string\n        weight:\n          default: 0\n          description: Weight\n          type: number\n        weight_unit:\n          description: Weight Unit\n          type: string\n      required:\n        - model\n      type: object\n    ProductVariantPriceAdd:\n      properties:\n        group_prices:\n          description: Defines variants's group prices\n          items:\n            properties:\n              group_id:\n                type: string\n              price:\n                type: number\n            type: object\n          type: array\n        id:\n          description: Defines the variant to which the price has to be added\n          type: string\n      type: object\n    ProductVariantPriceUpdate:\n      properties:\n        group_prices:\n          description: Defines variants's group prices\n          items:\n            properties:\n              group_id:\n                type: string\n              id:\n                type: integer\n              price:\n                type: number\n            type: object\n          type: array\n        id:\n          description: Defines the variant where the price has to be updated\n          type: string\n      type: object\n    Product_AdvancedPrice:\n      properties:\n        additional_fields:\n          type: object\n        avail:\n          type: boolean\n        custom_fields:\n          type: object\n        expire_time:\n          $ref: \"#/components/schemas/A2CDateTime\"\n        group_id:\n          type: string\n        id:\n          type: string\n        quantity_from:\n          type: number\n        start_time:\n          $ref: \"#/components/schemas/A2CDateTime\"\n        value:\n          type: number\n      type: object\n    Product_Attribute:\n      properties:\n        additional_fields:\n          type: object\n        attribute_group_id:\n          type: string\n        attribute_id:\n          type: string\n        code:\n          type: string\n        custom_fields:\n          type: object\n        lang_id:\n          type: integer\n        name:\n          type: string\n        position:\n          type: integer\n        product_id:\n          type: integer\n        required:\n          type: boolean\n        store_id:\n          type: integer\n        type:\n          type: string\n        value:\n          type: string\n        variant_id:\n          type: string\n        visible:\n          type: boolean\n      type: object\n    Product_GroupPrice:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        expire_time:\n          type: string\n        group_id:\n          type: string\n        id:\n          type: string\n        price:\n          type: number\n        quantity:\n          type: number\n        start_time:\n          type: string\n        store_id:\n          type: string\n      type: object\n    Product_Inventory:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        in_stock:\n          type: boolean\n        priority:\n          type: integer\n        quantity:\n          type: number\n        warehouse_id:\n          type: string\n      type: object\n    Product_Option:\n      properties:\n        additional_fields:\n          type: object\n        available:\n          type: boolean\n        custom_fields:\n          type: object\n        description:\n          type: string\n        id:\n          type: string\n        name:\n          type: string\n        option_items:\n          items:\n            $ref: \"#/components/schemas/Product_Option_Item\"\n          type: array\n        product_option_id:\n          type: string\n        required:\n          type: boolean\n        sort_order:\n          type: integer\n        type:\n          type: string\n        used_in_combination:\n          type: boolean\n      type: object\n    Product_Option_Item:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        id:\n          type: string\n        name:\n          type: string\n        price:\n          type: string\n        product_option_item_id:\n          type: string\n        quantity:\n          type: integer\n        sku:\n          type: string\n        sort_order:\n          type: integer\n        type_price:\n          type: string\n        weight:\n          type: string\n      type: object\n    Product_Review:\n      properties:\n        additional_fields:\n          type: object\n        created_time:\n          $ref: \"#/components/schemas/A2CDateTime\"\n        custom_fields:\n          type: object\n        customer_id:\n          type: string\n        email:\n          type: string\n        id:\n          type: string\n        message:\n          type: string\n        nick_name:\n          type: string\n        product_id:\n          type: string\n        rating:\n          type: number\n        ratings:\n          items:\n            $ref: \"#/components/schemas/Product_Review_Rating\"\n          type: array\n        status:\n          type: string\n        summary:\n          type: string\n      type: object\n    Product_Review_Rating:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        id:\n          type: string\n        name:\n          type: string\n        value:\n          type: integer\n      type: object\n    Product_TierPrice:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        price:\n          type: number\n        qty:\n          type: number\n      type: object\n    Response_Cart_CatalogPriceRules_List_Result:\n      properties:\n        additional_fields:\n          type: object\n        catalog_price_rules:\n          items:\n            $ref: \"#/components/schemas/CatalogPriceRule\"\n          type: array\n        catalog_price_rules_count:\n          type: integer\n        custom_fields:\n          type: object\n      type: object\n    Response_Cart_Coupon_List_Result:\n      properties:\n        additional_fields:\n          type: object\n        coupon:\n          items:\n            $ref: \"#/components/schemas/Coupon\"\n          type: array\n        coupon_count:\n          type: integer\n        custom_fields:\n          type: object\n      type: object\n    Response_Cart_Giftcard_List_Result:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        gift_card:\n          items:\n            $ref: \"#/components/schemas/GiftCard\"\n          type: array\n      type: object\n    Response_Cart_MetaData_List_Result:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        items:\n          items:\n            $ref: \"#/components/schemas/Cart_MetaData\"\n          type: array\n        total_count:\n          type: integer\n      type: object\n    Response_Cart_Script_List_Result:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        scripts:\n          items:\n            $ref: \"#/components/schemas/Script\"\n          type: array\n        total_count:\n          type: integer\n      type: object\n    Response_Category_List_Result:\n      properties:\n        additional_fields:\n          type: object\n        categories_count:\n          type: integer\n        category:\n          items:\n            $ref: \"#/components/schemas/Category\"\n          type: array\n        custom_fields:\n          type: object\n      type: object\n    Response_Customer_Attribute_List_Result:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        items:\n          items:\n            $ref: \"#/components/schemas/Customer_Attribute\"\n          type: array\n        total_count:\n          type: integer\n      type: object\n    Response_Customer_Group_List_Result:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        group:\n          items:\n            $ref: \"#/components/schemas/Customer_Group\"\n          type: array\n        group_count:\n          type: integer\n      type: object\n    Response_Customer_List_Result:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        customer:\n          items:\n            $ref: \"#/components/schemas/Customer\"\n          type: array\n        customers_count:\n          type: integer\n      type: object\n    Response_Order_Abandoned_List_Result:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        order:\n          items:\n            $ref: \"#/components/schemas/OrderAbandoned\"\n          type: array\n      type: object\n    Response_Order_List_Result:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        order:\n          items:\n            $ref: \"#/components/schemas/Order\"\n          type: array\n        orders_count:\n          type: integer\n      type: object\n    Response_Order_Shipment_List_Result:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        shipment:\n          items:\n            $ref: \"#/components/schemas/Shipment\"\n          type: array\n        shipment_count:\n          type: integer\n      type: object\n    Response_Product_Attribute_List_Result:\n      properties:\n        additional_fields:\n          type: object\n        attribute:\n          items:\n            $ref: \"#/components/schemas/Product_Attribute\"\n          type: array\n        custom_fields:\n          type: object\n      type: object\n    Response_Product_ChildItem_List_Result:\n      properties:\n        additional_fields:\n          type: object\n        children:\n          items:\n            $ref: \"#/components/schemas/Child\"\n          type: array\n        custom_fields:\n          type: object\n        total_count:\n          type: integer\n      type: object\n    Response_Product_List_Result:\n      properties:\n        additional_fields:\n          type: object\n        custom_fields:\n          type: object\n        product:\n          items:\n            $ref: \"#/components/schemas/Product\"\n          type: array\n        products_count:\n          type: integer\n      type: object\n    Script:\n      properties:\n        additional_fields:\n          type: object\n        created_time:\n          $ref: \"#/components/schemas/A2CDateTime\"\n        custom_fields:\n          type: object\n        description:\n          type: string\n        event:\n          type: string\n        html:\n          type: string\n        id:\n          type: string\n        load_method:\n          type: string\n        modified_time:\n          $ref: \"#/components/schemas/A2CDateTime\"\n        name:\n          type: string\n        scope:\n          type: string\n        src:\n          type: string\n      type: object\n    Shipment:\n      properties:\n        additional_fields:\n          type: object\n        created_at:\n          $ref: \"#/components/schemas/A2CDateTime\"\n        custom_fields:\n          type: object\n        id:\n          type: string\n        items:\n          items:\n            properties:\n              model:\n                type: string\n              name:\n                type: string\n              price:\n                type: number\n              product_id:\n                type: string\n              quantity:\n                type: number\n            type: object\n          type: array\n        order_id:\n          type: string\n        shipment_provider:\n          type: string\n        tracking_numbers:\n          items:\n            $ref: \"#/components/schemas/Shipment_TrackingNumber\"\n          type: array\n        warehouse_id:\n          type: string\n      type: object\n    Shipment_TrackingNumber:\n      properties:\n        additional_fields:\n          type: object\n        carrier_id:\n          type: string\n        custom_fields:\n          type: object\n        tracking_number:\n          type: string\n      type: object\n    SpecialPrice:\n      properties:\n        additional_fields:\n          type: object\n        avail:\n          type: boolean\n        created_at:\n          $ref: \"#/components/schemas/A2CDateTime\"\n        custom_fields:\n          type: object\n        expired_at:\n          $ref: \"#/components/schemas/A2CDateTime\"\n        modified_at:\n          $ref: \"#/components/schemas/A2CDateTime\"\n        value:\n          type: number\n      type: object\n    State:\n      properties:\n        additional_fields:\n          type: object\n        code:\n          type: string\n        custom_fields:\n          type: object\n        name:\n          type: string\n      type: object\n    StoreAttribute:\n      properties:\n        additional_fields:\n          type: object\n        code:\n          type: string\n        custom_fields:\n          type: object\n        default_values:\n          items:\n            type: string\n          type: array\n        id:\n          type: string\n        lang_id:\n          type: string\n        name:\n          type: string\n        position:\n          type: integer\n        required:\n          type: boolean\n        store_id:\n          type: string\n        system:\n          type: boolean\n        type:\n          type: string\n        values:\n          items:\n            type: string\n          type: array\n        visible:\n          type: boolean\n      type: object\n    StoreAttribute_Group:\n      properties:\n        additional_fields:\n          type: object\n        assigned_attribute_ids:\n          items:\n            type: string\n          type: array\n        attribute_set_id:\n          type: string\n        custom_fields:\n          type: object\n        id:\n          type: string\n        name:\n          type: string\n        position:\n          type: integer\n      type: object\n    Subscriber:\n      properties:\n        additional_fields:\n          type: object\n        created_time:\n          type: string\n        custom_fields:\n          type: object\n        customer_id:\n          type: string\n        email:\n          type: string\n        first_name:\n          type: string\n        id:\n          type: string\n        last_name:\n          type: string\n        modified_time:\n          type: string\n        subscribed:\n          type: boolean\n      type: object\n    TaxClass:\n      properties:\n        additional_fields:\n          type: object\n        avail:\n          type: boolean\n        custom_fields:\n          type: object\n        id:\n          type: string\n        name:\n          type: string\n        tax:\n          type: number\n        tax_rates:\n          items:\n            $ref: \"#/components/schemas/TaxClass_Rate\"\n          type: array\n        tax_type:\n          type: integer\n      type: object\n    TaxClass_Rate:\n      properties:\n        additional_fields:\n          type: object\n        address:\n          items:\n            type: string\n          type: array\n        cities:\n          items:\n            type: string\n          type: array\n        countries:\n          items:\n            type: string\n          type: array\n        custom_fields:\n          type: object\n        id:\n          type: string\n        name:\n          type: string\n        tax:\n          type: number\n        tax_based_on:\n          type: string\n        tax_type:\n          type: integer\n        zip_codes:\n          items:\n            type: string\n          type: array\n      type: object\n    Webhook:\n      properties:\n        action:\n          type: string\n        active:\n          type: boolean\n        additional_fields:\n          type: object\n        callback:\n          type: string\n        created_at:\n          type: string\n        custom_fields:\n          type: object\n        entity:\n          type: string\n        fields:\n          type: string\n        id:\n          type: integer\n        label:\n          type: string\n        store_id:\n          type: string\n        updated_at:\n          type: string\n      type: object\n  securitySchemes:\n    api_key:\n      in: query\n      name: api_key\n      type: apiKey\n    store_key:\n      in: query\n      name: store_key\n      type: apiKey\n"
		}
	},
	"Error": "parse: parse spec: paths: /product.add.json: post: operation \"ProductAdd\": requestBody: content: \"application/json\": parse schema: parse schema: reference \"#/components/schemas/ProductAdd\": parse schema: marketplace_item_properties: parse default: expected type \"string\", got \"bool\""
}