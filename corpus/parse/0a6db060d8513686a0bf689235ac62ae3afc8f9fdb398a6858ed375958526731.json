{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stichtingsem/technology-prototype"
		},
		"file": {
			"name": "entitlement.v1.yaml",
			"size": 0,
			"path": "reference/entitlement.v1.yaml",
			"byteSize": 12457,
			"content": "openapi: 3.0.0\ninfo:\n  title: Marketplace Entitlement API\n  version: '1.0'\n  description: |\n    This is an API provided by the Marketplace in the SEM ecosystem, and is designed to enable a marketplace to make information about products that have been selected or purchased by a school or individual to be then added automatically into the LMS of the school, as well as be used by the specific Learning Application that has been purchased to ensure that all setup and provisioning has been completed in advance of access.\n\n    It is envisaged that the service implementing this API, also implements the generic [Events](https://stichtingsem.stoplight.io/docs/sem-technology-prototype/reference/events.v1.yaml) and [Webhooks](https://stichtingsem.stoplight.io/docs/sem-technology-prototype/reference/webhooks.v1.yaml) API to enable subscription to changes vs polling.\n\n    Events generated by the Entitlement API are connected to state changes.\n\n     - `mp.entitlement.active` - First created and active\n     - `mp.entitlement.refunded` - Refunded\n     - `mp.entitlement.updated` - Modified in any other way \n  contact:\n    name: SEM\n    url: 'https://stichtingsem.org/'\nservers:\n  - url: 'https://example.stichtingsem.org/api'\n    description: entitlement\npaths:\n  '/entitlements/{id}':\n    parameters:\n      - schema:\n          type: string\n        name: id\n        in: path\n        required: true\n        description: Specific identifier of an entitlement.\n    get:\n      summary: Get a specific entitlement\n      tags:\n        - entitlements\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Entitlement'\n      operationId: get-entitlements-by-id\n      description: 'Retrieve the full specification for an entitlement from a marketplace, needs to confirm that the caller is able to access either based on their provider information (they can only see their own products) in the case of the provider scope.'\n      security:\n        - APIKey:\n            - mp.entitlements.school\n            - mp.entitlements.provider\n  /entitlements/provider:\n    parameters: []\n    get:\n      summary: Get all entitlements for a specific vendor (Learning Application Provider)\n      tags:\n        - entitlements\n        - provider\n      parameters:\n        - in: query\n          name: status\n          description: |\n            Filter by status\n          schema:\n            type: string\n            example: active\n        - in: query\n          name: start\n          description: 'Start point for pagination of results, defaults to 0,'\n          schema:\n            type: integer\n            format: int32\n          examples:\n            default:\n              value: 0\n              summary: The start point for pagination\n        - in: query\n          name: limit\n          description: 'Limit of number of results returned by page, defaults to 20 with max 100.'\n          schema:\n            type: integer\n            maximum: 100\n            format: int32\n          examples:\n            default:\n              value: 20\n              summary: The default value if none is provided\n            max:\n              value: 100\n              summary: The largest recommended page size\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Entitlements'\n      operationId: get-entitlements-provider-id\n      security:\n        - APIKey:\n            - mp.entitlements.provider\n      description: |-\n        Get all entitlements related to products from a specific provider of a learning application (or other product used by a school).  It is assumed that at the point of setup and provision of an API key, that the provider name is also stored against the API key by the marketplace, so that all calls with this key will be filtered to that specific provider in the response.\n\n        This API has pagination, using `start` and `limit`, with an optional `status` filter.\n  '/entitlements/school/{id}':\n    parameters:\n      - schema:\n          type: string\n        name: id\n        in: path\n        required: true\n        description: School identifier.\n    get:\n      summary: Get all entitlements for a specific school\n      tags:\n        - entitlements\n        - school\n      parameters:\n        - in: query\n          name: status\n          description: Filter by status\n          schema:\n            type: string\n            example: active\n        - in: query\n          name: start\n          description: 'Start point for pagination of results, defaults to 0,'\n          schema:\n            type: integer\n          examples:\n            default:\n              value: 0\n              summary: The start point for pagination\n        - in: query\n          name: limit\n          description: 'Limit of number of results returned by page, defaults to 20 with max 100.'\n          schema:\n            type: integer\n            maximum: 100\n          examples:\n            default:\n              value: 20\n              summary: The default value if none is provided\n            max:\n              value: 100\n              summary: The largest recommended page size\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Entitlements'\n      operationId: get-entitlements-school-id\n      security:\n        - APIKey:\n            - mp.entitlements.school\n      description: |-\n        Retrieve all entilements for a specific school, the school will have approved the LMS to have access to its Marketplace during the setup phase.\n\n        This API has pagination, using `start` and `limit`, with an optional `status` filter.\ncomponents:\n  schemas:\n    Entitlement:\n      title: Entitlement\n      type: object\n      description: 'The core object that expresses information about a product that a school or indivdiual has selected for use - typically via a LML, but not always.'\n      x-tags:\n        - entitlements\n      properties:\n        schemaVersion:\n          type: integer\n        start:\n          type: string\n          format: date\n          example: '2021-08-22'\n        end:\n          type: string\n          format: date\n        product:\n          $ref: '#/components/schemas/Product'\n        entitlee:\n          oneOf:\n            - $ref: '#/components/schemas/School'\n            - $ref: '#/components/schemas/Individual'\n        model:\n          $ref: '#/components/schemas/BusinessModel'\n        quantity:\n          type: integer\n          example: 100\n          format: int32\n          description: ''\n        id:\n          type: string\n          example: 24e39454-5360-4ba4-819f-03e59b8dd679\n        status:\n          type: string\n          description: 'The status of the entitlement '\n          enum:\n            - entitled\n            - cancelled\n          default: entitled\n          example: entitled\n        marketplace:\n          type: string\n          example: 'https://iddink.nl'\n          description: The marketplace that provided the entitlement.\n      required:\n        - start\n        - end\n        - product\n        - entitlee\n        - id\n        - status\n        - marketplace\n    Product:\n      title: Product\n      type: object\n      description: A product that can be accessed after being purchased or selected.\n      x-tags:\n        - entitlements\n      properties:\n        ean:\n          type: string\n        name:\n          type: string\n        defaultAccessUrl:\n          type: string\n          description: |\n            This is the default URL to access the product - there may be more detailed structure and access points exchanged later between LA and LMS.\n        provider:\n          type: string\n          description: 'id for a specific vendor, established (along with the vendor secret) at the point of setup.'\n          example: e8346234-6bda-4c07-ab2e-a687a94430b2\n      required:\n        - ean\n        - name\n        - provider\n    School:\n      title: School\n      type: object\n      properties:\n        id:\n          type: string\n          description: |\n            The ID for the school (RIO?)\n        name:\n          type: string\n          description: The name for the school\n        group:\n          type: array\n          items:\n            $ref: '#/components/schemas/Group'\n        quantity:\n          type: integer\n          example: 100\n          description: 'Quantity available to the school, used if no group selected.'\n      required:\n        - id\n        - name\n    Individual:\n      title: Individual\n      type: object\n      description: Information about an individual who has an entitlement to use a specific product that they have purchased or selected.\n      properties:\n        id:\n          type: string\n          description: |\n            A unique identifier for the purchaser.\n        display_name:\n          type: string\n          description: The name of the person purchasing.\n        email:\n          type: string\n          description: 'The email address of the person purchasing, used to notify the individual of fulfilment and provide access.'\n        eckid:\n          type: string\n          description: 'If needed, the ECK-ID of the individual.'\n      required:\n        - id\n        - display_name\n        - email\n      x-tags:\n        - entitlements\n    BusinessModel:\n      title: BusinessModel\n      type: object\n      description: 'The model under which the entitlement has been granted, possible business models per product can be exchanged with the Marketplace by the Learning Application provider via the Catalogue API.'\n      properties:\n        id:\n          type: string\n          description: Unique identifier of the business model recognised by both the marketplace and the learning application.\n          example: 24e39454-5360-4ba4-819f-03e59b8dd679\n        name:\n          type: string\n          description: |\n            A description of the business model so it can be displayed in the Marketplace or LMS if needed.\n          example: pre-pay\n        description:\n          type: string\n          description: A longer description of the business model.\n          example: 'Pre-Pay: This product must be paid for before it can be used.'\n      required:\n        - id\n        - name\n      x-tags:\n        - entitlements\n    Group:\n      title: Group\n      type: object\n      description: A sub-group within a school that the entitlement is applicable to - typically a subject and level. So every student in this group is entitled to the products in this entitlement\n      properties:\n        subjectCode:\n          type: string\n          description: 'Government standard subject code. bron: Ministerie van OCW, like https://zoek.officielebekendmakingen.nl/stcrt-2019-35044'\n        level:\n          type: string\n          description: 'Official Level, followed by courseyear. example ''havo-1, vwo-2, etc.'''\n        courseCode:\n          type: string\n          description: 'School code of the Level/couse/study. example ''Technasium'' This gives schools a way to name the course how they want it, while we still have a link with the official level'\n        courseYear:\n          type: integer\n          description: Learning year\n        quantity:\n          type: integer\n          example: 100\n          description: Quantity selected or purchased.\n        schoolSubjectName:\n          type: string\n          description: 'School description of this subject, may differ from standard.'\n      required:\n        - subjectCode\n        - level\n      x-tags:\n        - entitlements\n    Entitlements:\n      title: Entitlements\n      type: array\n      items:\n        $ref: '#/components/schemas/Entitlement'\n      description: This is a list of entitlements that can be made available or retrieve in bulk.\n      x-tags:\n        - entitlements\n  securitySchemes:\n    APIKey:\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: ''\n          refreshUrl: ''\n          scopes:\n            mp.entitlements.school: Can see all entitlements created for a specific school regardless of vendor (e.g. a LMS)\n            mp.entitlements.provider: Can see all entitlements created for products that you sell in the Marketplace (e.g. a LA)\ntags:\n  - name: entitlements\n  - name: provider\n  - name: school\n",
			"canonicalURL": "/github.com/stichtingsem/technology-prototype@3bf27b60f5566865821b0496df27c73dc3e3c5e2/-/blob/reference/entitlement.v1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stichtingsem/technology-prototype/blob/3bf27b60f5566865821b0496df27c73dc3e3c5e2/reference/entitlement.v1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/entitlements/provider\": get: operation \"get-entitlements-provider-id\": security: parse security scheme \"APIKey\": oauth2: flow \"implicit\": at 1:5075: \"authorizationUrl\" MUST be in the form of a URL: parse \"\": empty url"
}