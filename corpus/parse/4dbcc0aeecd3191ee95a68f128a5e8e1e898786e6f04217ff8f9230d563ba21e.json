{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/pugliathomas/ChicagoPUG"
		},
		"file": {
			"name": "evisort-api-openapi-v1 (2).json",
			"size": 0,
			"path": "evisort-api-openapi-v1 (2).json",
			"byteSize": 89589,
			"content": "{\n  \"openapi\": \"3.0.2\",\n  \"info\": {\n    \"title\": \"Evisort API\",\n    \"description\": \"OpenAPI specification for Evisort API for integration with 3rd party services\",\n    \"termsOfService\": \"https://evisort.com/api/terms\",\n    \"contact\": {\n      \"email\": \"support@evisort.com\"\n    },\n    \"version\": \"1.0.0\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"https://api.evisort.com/v1\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"authentication\",\n      \"description\": \"Generate Access Token (JWT)\"\n    },\n    {\n      \"name\": \"upload-documents\",\n      \"description\": \"Upload a new document\"\n    },\n    {\n      \"name\": \"list-documents\",\n      \"description\": \"List document records\"\n    },\n    {\n      \"name\": \"download-document\",\n      \"description\": \"Download document\"\n    },\n    {\n      \"name\": \"update-document\",\n      \"description\": \"Update fields in a document\"\n    },\n    {\n      \"name\": \"metadata\",\n      \"description\": \"List/Update fields and provisions\"\n    },\n    {\n      \"name\": \"users\",\n      \"description\": \"Bulk Export/Import users\"\n    }\n  ],\n  \"security\": [\n    {\n      \"bearerAuth\": []\n    }\n  ],\n  \"paths\": {\n    \"/auth/token\": {\n      \"post\": {\n        \"summary\": \"Generate a new token\",\n        \"tags\": [\n          \"authentication\"\n        ],\n        \"security\": [\n          {\n            \"apiKeyAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/AuthResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/ForbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/InternalError\"\n          }\n        }\n      }\n    },\n    \"/users/export\": {\n      \"get\": {\n        \"summary\": \"Export users spreadsheet for current client\",\n        \"tags\": [\n          \"users\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"only_headers\",\n            \"in\": \"query\",\n            \"description\": \"Boolean flag that determines whether to export the complete spreadsheet or only the headers. If not defined, it defaults to false.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": true\n            },\n            \"example\": true\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/UsersExportResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/InternalError\"\n          }\n        }\n      }\n    },\n    \"/users/import\": {\n      \"post\": {\n        \"summary\": \"Import users spreadsheet\",\n        \"tags\": [\n          \"users\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UsersImportRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"202\": {\n            \"$ref\": \"#/components/responses/UsersImportResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/BadRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/InternalError\"\n          }\n        }\n      },\n      \"get\": {\n        \"summary\": \"List Import users jobs\",\n        \"tags\": [\n          \"users\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/pageParam\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/pageSizeParam\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/UsersImportListResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/BadRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/InternalError\"\n          }\n        }\n      }\n    },\n    \"/users/import/{importId}\": {\n      \"get\": {\n        \"summary\": \"Import Process status\",\n        \"tags\": [\n          \"users\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"importId\",\n            \"in\": \"path\",\n            \"description\": \"String GUID that determines the id of the current Import summary and process. This identifier identifies each file.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\",\n              \"example\": \"95389c6e-bd09-4ff5-93bf-25d250ee2b5a\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/UsersImportStatusResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/BadRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/InternalError\"\n          }\n        }\n      }\n    },\n    \"/users/import/summary\": {\n      \"post\": {\n        \"summary\": \"Generate a summary of a users import operation\",\n        \"tags\": [\n          \"users\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UsersImportSummaryRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"202\": {\n            \"$ref\": \"#/components/responses/UsersImportSummaryResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/BadRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/InternalError\"\n          }\n        }\n      }\n    },\n    \"/users/import/{importId}/acknowledge\": {\n      \"post\": {\n        \"summary\": \"Request the acknowledge of a user import process\",\n        \"tags\": [\n          \"users\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"importId\",\n            \"in\": \"path\",\n            \"description\": \"String GUID that determines the id of the current Import summary and process. This identifier identifies each file.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\",\n              \"example\": \"95389c6e-bd09-4ff5-93bf-25d250ee2b5a\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/UsersImportAcknowledgeResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/BadRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/InternalError\"\n          }\n        }\n      }\n    },\n    \"/users/import/{importId}/cancel\": {\n      \"post\": {\n        \"summary\": \"Request the cancellation of a user import process\",\n        \"tags\": [\n          \"users\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"importId\",\n            \"in\": \"path\",\n            \"description\": \"String GUID that determines the id of the current Import summary and process. This identifier identifies each file.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\",\n              \"example\": \"95389c6e-bd09-4ff5-93bf-25d250ee2b5a\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"202\": {\n            \"$ref\": \"#/components/responses/UsersImportCancelResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/BadRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/InternalError\"\n          }\n        }\n      }\n    },\n    \"/users/import/{importId}/process-errors\": {\n      \"get\": {\n        \"summary\": \"Import Process Errors Results spreadsheets\",\n        \"tags\": [\n          \"users\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"importId\",\n            \"in\": \"path\",\n            \"description\": \"String GUID that determines the id of the current Import summary and process. This identifier identifies each file.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\",\n              \"example\": \"95389c6e-bd09-4ff5-93bf-25d250ee2b5a\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/UsersExportResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/BadRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/InternalError\"\n          }\n        }\n      }\n    },\n    \"/users/import/{importId}/summary-errors\": {\n      \"get\": {\n        \"summary\": \"Import Summary Errors Results spreadsheets\",\n        \"tags\": [\n          \"users\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"importId\",\n            \"in\": \"path\",\n            \"description\": \"String GUID that determines the id of the current Import summary and process. This identifier identifies each file.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\",\n              \"example\": \"95389c6e-bd09-4ff5-93bf-25d250ee2b5a\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/UsersExportResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/BadRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/InternalError\"\n          }\n        }\n      }\n    },\n    \"/fields\": {\n      \"get\": {\n        \"summary\": \"List all the fields\",\n        \"tags\": [\n          \"metadata\"\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"active\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            },\n            \"required\": false,\n            \"description\": \"Specify whether you want active or inactive fields. Leave out to specify both.\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/FieldListResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/ForbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/InternalError\"\n          }\n        }\n      }\n    },\n    \"/documents\": {\n      \"post\": {\n        \"summary\": \"Upload a new document\",\n        \"tags\": [\n          \"upload-documents\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UploadRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"202\": {\n            \"$ref\": \"#/components/responses/UploadRequestAccepted\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/BadRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/ForbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/InternalError\"\n          }\n        }\n      },\n      \"get\": {\n        \"summary\": \"List multiple document records\",\n        \"tags\": [\n          \"list-documents\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/pageParam\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/pageSizeParam\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"modifiedSince\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"date-time\"\n            },\n            \"required\": true,\n            \"description\": \"Filter by last modified date. Format:https://tools.ietf.org/html/rfc3339#section-5.6\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/DocumentsResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/ForbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/InternalError\"\n          }\n        }\n      }\n    },\n    \"/documents/{evisortId}\": {\n      \"get\": {\n        \"summary\": \"List a document record\",\n        \"tags\": [\n          \"list-documents\"\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"evisortId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"minimum\": 1\n            },\n            \"description\": \"The Evisort document ID\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/DocumentResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/ForbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/InternalError\"\n          }\n        }\n      },\n      \"patch\": {\n        \"summary\": \"Update or create fields in a document. (Field's name is case sensative)\",\n        \"tags\": [\n          \"update-document\"\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"evisortId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"The Evisort document ID\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateDocumentRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/components/responses/NoContentResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/ForbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/InternalError\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"delete-document\"\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"evisortId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"minimum\": 1\n            },\n            \"description\": \"The Evisort document ID\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/components/responses/NoContentResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/ForbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/InternalError\"\n          }\n        }\n      }\n    },\n    \"/documents/{evisortId}/content\": {\n      \"get\": {\n        \"summary\": \"Download a document\",\n        \"tags\": [\n          \"download-document\"\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"evisortId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"minimum\": 1\n            },\n            \"description\": \"The Evisort document ID\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"ocr\",\n            \"required\": false,\n            \"allowEmptyValue\": false,\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": false\n            },\n            \"description\": \"Flag to specify if OCR'd version is requested\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"type\",\n            \"required\": false,\n            \"allowEmptyValue\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"docx\",\n                \"pdf\"\n              ]\n            },\n            \"description\": \"Content type of the document to download, applicable only when ocr is designated 'true' in query. If missing, the format of the original document (pdf or docx) is returned.\\n\"\n          }\n        ],\n        \"responses\": {\n          \"302\": {\n            \"description\": \"Response redirecting to a pre-authenticated download URL for the document. To download the document, your app must follow the Location header in the response. Pre-authenticated URLs are only valid for a short period of time (a few minutes) and do not require an Authorization header to access.\\n\",\n            \"headers\": {\n              \"Location\": {\n                \"type\": \"string\",\n                \"description\": \"Pre-authenticated download URL with expiration\"\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/ForbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/InternalError\"\n          }\n        }\n      }\n    },\n    \"/documents/docid/{docId}\": {\n      \"get\": {\n        \"summary\": \"List a document record by docId\",\n        \"tags\": [\n          \"list-documents\"\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"docId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"minimum\": 1\n            },\n            \"description\": \"The user provided external document ID\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/DocumentResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/ForbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/InternalError\"\n          }\n        }\n      }\n    },\n    \"/provisions\": {\n      \"post\": {\n        \"summary\": \"Create a new provision\",\n        \"tags\": [\n          \"metadata\"\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ProvisionSchema\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"202\": {\n            \"description\": \"accepted\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"recordId\": {\n                      \"type\": \"string\",\n                      \"format\": \"uuid\",\n                      \"description\": \"record id of bulk tag\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/BadRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/ForbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/InternalError\"\n          }\n        }\n      },\n      \"get\": {\n        \"summary\": \"List all provisions\",\n        \"tags\": [\n          \"metadata\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/ProvisionsListResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/ForbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/InternalError\"\n          }\n        }\n      }\n    },\n    \"/provision-records/{recordId}\": {\n      \"get\": {\n        \"summary\": \"Get status of a provision record\",\n        \"tags\": [\n          \"metadata\"\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"recordId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"minimum\": 1,\n              \"format\": \"uuid\"\n            },\n            \"description\": \"The ID of the training record\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/ProvisionsStatusResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/ForbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/InternalError\"\n          }\n        }\n      }\n    },\n    \"/search\": {\n      \"parameters\": [\n        {\n          \"$ref\": \"#/components/parameters/pageParam\"\n        },\n        {\n          \"$ref\": \"#/components/parameters/pageSizeParam\"\n        }\n      ],\n      \"get\": {\n        \"summary\": \"Simple search for documents\",\n        \"description\": \"Used for searching for documents based on a single query.\",\n        \"tags\": [\n          \"search\"\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"type\",\n            \"required\": true,\n            \"description\": \"Determines the type of search to perform\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"simpletext\",\n                \"boolean\",\n                \"field\",\n                \"folder\",\n                \"provision\"\n              ]\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"terms\",\n            \"description\": \"The term or terms on which you're searching. If the type is \\\"simpletext\\\", this may be repeated.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"additional\",\n            \"description\": \"Needed by some queries for type \\\"field\\\" searches that require multiple arguments.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"category\",\n            \"description\": \"Required for type \\\"simpletext\\\" searches. Specifies where to look for the given text.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"filename\",\n                \"content\",\n                \"both\"\n              ]\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"folders\",\n            \"description\": \"Required for type \\\"folder\\\" searches instead of argument \\\"terms\\\". Is an array of full folder paths. Each folder is expected to start with \\\"Documents/\\\".\",\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"filter\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"containsany\",\n                \"containsall\",\n                \"containsexact\",\n                \"notcontainsany\",\n                \"notcontainsall\",\n                \"notcontainsexact\",\n                \"isblank\",\n                \"notisblank\",\n                \"equals\",\n                \"notequals\",\n                \"containstext\",\n                \"notcontainstext\",\n                \"eq\",\n                \"lt\",\n                \"lte\",\n                \"gt\",\n                \"gte\",\n                \"between\",\n                \"before\",\n                \"after\",\n                \"on\",\n                \"next\",\n                \"last\"\n              ]\n            },\n            \"description\": \"Specifies the exact filtering behavior. The valid options vary depending on the type of search and, for \\\"field\\\" searches, the underlying type of the field.:\\n  * _All Fields_\\n    * `isblank` - Field is empty\\n    * `notisblank` - Field is not empty\\n  * _Datetime Fields_\\n    * `before` - Field is before the given date\\n    * `after` - Field is after the given date\\n    * `on` - Field is on the given date\\n    * `between` - Field is between two given dates\\n    * `next` - Field is in the next X amount of time\\n    * `last` - Field is in the last X amount of time\\n  * _Number Fields_\\n    * `eq` - Field is equal to the given value\\n    * `lt` - Field is less than the given value\\n    * `lte` - Field is less than or equal to the given value\\n    * `gt` - Field is greater than the given value\\n    * `gte` - Field is greater than or equal to the given value\\n    * `between` - Field is between the two given values\\n  * _String Fields_\\n    * `containstext` - Field contains the given text\\n    * `notcontainstext` - Field does not contain the given text\\n  * _Single-select Fields_\\n    * `equals` - Field equals the given string\\n    * `notequals` - Field does not equal the given string\\n  * _Multi-select Fields_\\n    * `containsany` - Field contains any of the given terms\\n    * `containsall` - Field contains all of the given terms\\n    * `notcontainsany` - Field does not contain any of the given terms\\n  * _Boolean Fields_\\n    * `equals` - Field equals the given term. Must be either \\\"true\\\" or \\\"false\\\"\\n\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/FoundDocumentsResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/BadRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/ForbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/InternalError\"\n          }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Composite search for documents\",\n        \"description\": \"Used for searching for documents based on a queries that are nested and/or combined with \\\"and\\\" or \\\"or\\\".\",\n        \"tags\": [\n          \"search\"\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CompositeSearch\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/FoundDocumentsResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/BadRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/ForbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/InternalError\"\n          }\n        }\n      }\n    },\n    \"/contracts/drafts\": {\n      \"post\": {\n        \"tags\": [\n          \"drafts\"\n        ],\n        \"summary\": \"Create a contract draft from a template\",\n        \"operationId\": \"createDraft\",\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"values\": {\n                    \"type\": \"string\"\n                  },\n                  \"template\": {\n                    \"type\": \"string\",\n                    \"format\": \"binary\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"link\": {\n                      \"type\": \"string\",\n                      \"format\": \"uri\"\n                    },\n                    \"expirationDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid input\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"detail\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/contracts/workflows/{workflowId}/intake-form/\": {\n      \"get\": {\n        \"tags\": [\n          \"intake forms\"\n        ],\n        \"summary\": \"Get an intake form for a workflow\",\n        \"operationId\": \"getIntakeForm\",\n        \"parameters\": [\n          {\n            \"name\": \"workflowId\",\n            \"in\": \"path\",\n            \"description\": \"Get an intake form for given workflow\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Authentication response containing JWT access token\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/IntakeFormRes\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"failed to find workflow/intake-form\"\n          }\n        }\n      }\n    },\n    \"/contracts/workflows/available/\": {\n      \"get\": {\n        \"tags\": [\n          \"workflows\"\n        ],\n        \"summary\": \"Get all published workflows\",\n        \"description\": \"Get all published workflows\",\n        \"operationId\": \"getAllPublishedWorkflows\",\n        \"parameters\": [\n          {\n            \"name\": \"completed\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Workflow\"\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"failed to get published workflows\"\n          }\n        }\n      }\n    },\n    \"/contracts/persist/\": {\n      \"post\": {\n        \"tags\": [\n          \"persist\"\n        ],\n        \"summary\": \"Persist specific information needed for later interactions with the platform\",\n        \"operationId\": \"persist\",\n        \"requestBody\": {\n          \"description\": \"For Intake Form Integration, additional information [here](https://support.evisort.com/hc/en-us/articles/4406460806039-Using-Public-API-s-to-Integrate-with-Evisort-s-Contract-Workflow)\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": {\n                    \"type\": \"object\"\n                  },\n                  \"meta\": {\n                    \"type\": \"object\"\n                  }\n                },\n                \"required\": [\n                  \"data\",\n                  \"meta\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid input\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"detail\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"securitySchemes\": {\n      \"apiKeyAuth\": {\n        \"type\": \"apiKey\",\n        \"name\": \"EVISORT-API-KEY\",\n        \"in\": \"header\"\n      },\n      \"bearerAuth\": {\n        \"type\": \"http\",\n        \"scheme\": \"bearer\",\n        \"bearerFormat\": \"JWT\"\n      }\n    },\n    \"parameters\": {\n      \"pageParam\": {\n        \"in\": \"query\",\n        \"name\": \"page\",\n        \"schema\": {\n          \"type\": \"integer\",\n          \"minimum\": 1,\n          \"default\": 1,\n          \"description\": \"Specify the page number of paginated results to return\"\n        }\n      },\n      \"pageSizeParam\": {\n        \"in\": \"query\",\n        \"name\": \"pageSize\",\n        \"schema\": {\n          \"type\": \"integer\",\n          \"minimum\": 1,\n          \"maximum\": 200,\n          \"default\": 100\n        },\n        \"description\": \"Specify the number of results per page.\"\n      }\n    },\n    \"schemas\": {\n      \"BaseSearch\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"simpletext\",\n              \"boolean\",\n              \"folder\",\n              \"provision\",\n              \"field\",\n              \"operator\",\n              \"section\"\n            ]\n          }\n        },\n        \"required\": [\n          \"type\"\n        ]\n      },\n      \"CompositeSearch\": {\n        \"description\": \"Structure for organizing multiple search filters\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"query\": {\n            \"type\": \"array\",\n            \"description\": \"List of search filters. Every search filter must be separated by an OperatorSearch object. SectionSearch objects allow for nesting of filters.\",\n            \"items\": {\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SimpleTextSearch\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/BooleanSearch\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/FolderSearch\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/ProvisionSearch\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/DateFieldSearch\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/NumberFieldSearch\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/TextFieldSearch\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/SingleSelectFieldSearch\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/MultiSelectFieldSearch\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/AttachmentFieldSearch\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/BooleanFieldSearch\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/SectionSearch\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/OperatorSearch\"\n                }\n              ]\n            }\n          }\n        },\n        \"example\": {\n          \"query\": [\n            {\n              \"type\": \"field\",\n              \"name\": \"Counterparties\",\n              \"filter\": \"containsAny\",\n              \"terms\": [\n                \"Evisort, Inc.\",\n                \"Acme\"\n              ]\n            },\n            {\n              \"type\": \"operator\",\n              \"value\": \"and\"\n            },\n            {\n              \"type\": \"section\",\n              \"query\": [\n                {\n                  \"type\": \"folder\",\n                  \"folders\": [\n                    \"Documents/Vendor\",\n                    \"Documents/Agreements/Evisort\"\n                  ]\n                },\n                {\n                  \"type\": \"operator\",\n                  \"value\": \"or\"\n                },\n                {\n                  \"type\": \"boolean\",\n                  \"query\": \"Mutual /7 agreement\"\n                }\n              ]\n            }\n          ]\n        }\n      },\n      \"OperatorSearch\": {\n        \"description\": \"Used to combine other search filters. Cannot be used on its own.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/BaseSearch\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"value\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"and\",\n                  \"or\"\n                ]\n              }\n            },\n            \"required\": [\n              \"value\"\n            ]\n          }\n        ]\n      },\n      \"SectionSearch\": {\n        \"description\": \"Structure for organizing multiple search filters.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/BaseSearch\"\n          },\n          {\n            \"type\": \"object\",\n            \"description\": \"Structure for organizing multiple search filters\",\n            \"properties\": {\n              \"query\": {\n                \"type\": \"array\",\n                \"description\": \"List of search filters. Every search filter must be separated by an OperatorSearch object. SectionSearch objects allow for nesting of filters.\",\n                \"items\": {\n                  \"type\": \"object\",\n                  \"description\": \"Additional filters. Can be arbitrarily nested.\"\n                }\n              }\n            },\n            \"required\": [\n              \"query\"\n            ]\n          }\n        ]\n      },\n      \"SimpleTextSearch\": {\n        \"description\": \"Simple text searching.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/BaseSearch\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"category\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"filename\",\n                  \"content\",\n                  \"both\"\n                ],\n                \"description\": \"Category options: * `filename` - Search for text within the filename * `content` - Search for text within the file contents * `both` - Search for text within either\\n\"\n              },\n              \"filter\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"containsany\",\n                  \"containsall\",\n                  \"containsexact\",\n                  \"notcontainsany\",\n                  \"notcontainsall\",\n                  \"notcontainsexact\"\n                ],\n                \"description\": \"Filter options: * `containsany` - Looks for text that contains any of the given terms * `containsall` - Looks for text that contains all of the given terms * `containsexact` - Looks for text that contains the exact sequence of terms * `notcontainsany` - Looks for text that does not contain any of the given terms * `notcontainsall` - Looks for text that does not contain all of the given terms * `notcontainsexact` - Looks for text that does not contain the exact sequence of terms\\n\"\n              },\n              \"terms\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"required\": [\n              \"category\",\n              \"filter\",\n              \"terms\"\n            ]\n          }\n        ]\n      },\n      \"BooleanSearch\": {\n        \"description\": \"Search for documents that match custom boolean logic.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/BaseSearch\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"query\": {\n                \"type\": \"string\",\n                \"description\": \"The query to execute. See `https://support.evisort.com/hc/en-us/articles/360042657494-Chart-Boolean-Text-Search-Definitions-and-Examples` for more information.\",\n                \"example\": \"Confidentiality /7 mutual\"\n              }\n            },\n            \"required\": [\n              \"query\"\n            ]\n          }\n        ]\n      },\n      \"ProvisionSearch\": {\n        \"description\": \"Search for documents based on provisions.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/BaseSearch\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"provision\"\n                ]\n              },\n              \"name\": {\n                \"type\": \"string\",\n                \"description\": \"The provision name\"\n              },\n              \"filter\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"contains\",\n                  \"notcontains\"\n                ],\n                \"description\": \"Filter options: * `contains` - Matches if document contains the given provision * `notcontains` - Matches if document does not contain the given provision\\n\"\n              },\n              \"search_within\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"containsany\",\n                  \"containsall\",\n                  \"containsexact\",\n                  \"notcontainsany\",\n                  \"notcontainsall\",\n                  \"notcontainsexact\"\n                ],\n                \"description\": \"Optionally look within a provision for the presence or absence of the provided terms. This is only considered if the \\\"filter\\\" is set to \\\"contains\\\". Search Within options: * `containsany` - Looks for text within the given provision that contains any of the given terms * `containsall` - Looks for text within the given provision that contains all of the given terms * `containsexact` - Looks for text within the given provision that contains the exact sequence of terms * `notcontainsany` - Looks for text within the given provision that does not contain any of the given terms * `notcontainsall` - Looks for text within the given provision that does not contain all of the given terms * `notcontainsexact` - Looks for text within the given provision that does not contain the exact sequence of terms\\n\"\n              },\n              \"terms\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                },\n                \"description\": \"List of terms to for within a provision of with the given \\\"name\\\"\"\n              }\n            },\n            \"required\": [\n              \"name\",\n              \"filter\"\n            ]\n          }\n        ]\n      },\n      \"FolderSearch\": {\n        \"description\": \"Search for documents within a given set of folders.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/BaseSearch\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"Search for documents within a given set of folders.\"\n              },\n              \"folders\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                },\n                \"description\": \"List of folder paths to search on. Each folder needs to start with “Documents/”. Cannot include the root folder.\",\n                \"example\": [\n                  \"Documents/Vendor/\",\n                  \"Documents/Client/Liability/\"\n                ]\n              }\n            },\n            \"required\": [\n              \"folders\"\n            ]\n          }\n        ]\n      },\n      \"FieldSearch\": {\n        \"description\": \"Search for documents based on field information. The arguments needed depend on the underlying type for the field specified.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/BaseSearch\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"name\": {\n                \"type\": \"string\",\n                \"description\": \"The name of the field\"\n              }\n            },\n            \"required\": [\n              \"name\"\n            ]\n          }\n        ]\n      },\n      \"DateFieldSearch\": {\n        \"description\": \"Field search for datetime fields.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/FieldSearch\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"filter\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"isblank\",\n                  \"notisblank\",\n                  \"before\",\n                  \"after\",\n                  \"on\",\n                  \"between\",\n                  \"next\",\n                  \"last\"\n                ],\n                \"description\": \"Filter options:\\n  * `isblank` - Field is empty\\n  * `notisblank` - Field is not empty\\n  * `before` - Field is before the given date\\n  * `after` - Field is after the given date\\n  * `on` - Field is on the given date\\n  * `between` - Field is between two given dates\\n  * `next` - Field is in the next X amount of time\\n  * `last` - Field is in the last X amount of time\\n\"\n              },\n              \"terms\": {\n                \"description\": \"Required if filter is not \\\"isblank\\\" or \\\"notisblank\\\". If filter is \\\"before\\\", \\\"after\\\", \\\"on\\\", or \\\"between\\\", expects a date-parsable string. If filter is \\\"next\\\" or \\\"last\\\", expects a number.\",\n                \"oneOf\": [\n                  {\n                    \"type\": \"string\",\n                    \"format\": \"date\"\n                  },\n                  {\n                    \"type\": \"number\"\n                  }\n                ]\n              },\n              \"additional\": {\n                \"description\": \"Required if filter is \\\"between\\\", \\\"next\\\", or \\\"last\\\". If filter is \\\"between\\\", expects a date-parsable string. If filter is \\\"next\\\" or \\\"last\\\", expects a string of either \\\"day\\\", \\\"week\\\", \\\"month\\\", or \\\"year\\\".\",\n                \"oneOf\": [\n                  {\n                    \"type\": \"string\",\n                    \"format\": \"date\"\n                  },\n                  {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"day\",\n                      \"week\",\n                      \"month\",\n                      \"year\"\n                    ]\n                  }\n                ]\n              }\n            },\n            \"required\": [\n              \"filter\"\n            ]\n          }\n        ]\n      },\n      \"NumberFieldSearch\": {\n        \"description\": \"Field search for number fields\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/FieldSearch\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"filter\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"isblank\",\n                  \"notisblank\",\n                  \"eq\",\n                  \"lt\",\n                  \"lte\",\n                  \"gt\",\n                  \"gte\",\n                  \"between\"\n                ],\n                \"description\": \"Filter options:\\n  * `isblank` - Field is empty\\n  * `notisblank` - Field is not empty\\n  * `eq` - Field is equal to the given value\\n  * `lt` - Field is less than the given value\\n  * `lte` - Field is less than or equal to the given value\\n  * `gt` - Field is greater than the given value\\n  * `gte` - Field is greater than or equal to the given value\\n  * `between` - Field is between the two given values\\n\"\n              },\n              \"terms\": {\n                \"description\": \"Required if filter is not \\\"isblank\\\" or \\\"notisblank\\\".\",\n                \"type\": \"number\"\n              },\n              \"additional\": {\n                \"description\": \"Required if filter is \\\"between\\\"\",\n                \"type\": \"number\"\n              }\n            },\n            \"required\": [\n              \"filter\"\n            ]\n          }\n        ]\n      },\n      \"TextFieldSearch\": {\n        \"description\": \"Field search for string fields\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/FieldSearch\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"filter\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"isblank\",\n                  \"notisblank\",\n                  \"containstext\",\n                  \"notcontainstext\"\n                ],\n                \"description\": \"Filter options:\\n  * `isblank` - Field is empty\\n  * `notisblank` - Field is not empty\\n  * `containstext` - Field contains the given text\\n  * `notcontainstext` - Field does not contain the given text\\n\"\n              },\n              \"terms\": {\n                \"description\": \"Required if filter is not \\\"isblank\\\" or \\\"notisblank\\\".\",\n                \"type\": \"string\"\n              }\n            },\n            \"required\": [\n              \"filter\"\n            ]\n          }\n        ]\n      },\n      \"SingleSelectFieldSearch\": {\n        \"description\": \"Field search for single-select fields\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/FieldSearch\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"filter\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"isblank\",\n                  \"notisblank\",\n                  \"equals\",\n                  \"notequals\"\n                ],\n                \"description\": \"Filter options:\\n  * `isblank` - Field is empty\\n  * `notisblank` - Field is not empty\\n  * `equals` - Field equals the given string\\n  * `notequals` - Field does not equal the given string\\n\"\n              },\n              \"terms\": {\n                \"description\": \"Required if filter is not \\\"isblank\\\" or \\\"notisblank\\\"\",\n                \"type\": \"string\"\n              }\n            },\n            \"required\": [\n              \"filter\"\n            ]\n          }\n        ]\n      },\n      \"MultiSelectFieldSearch\": {\n        \"description\": \"Field search for multi-select fields\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/FieldSearch\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"filter\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"isblank\",\n                  \"notisblank\",\n                  \"containsany\",\n                  \"containsall\",\n                  \"notcontainsany\"\n                ],\n                \"description\": \"Filter options:\\n  * `isblank` - Field is empty\\n  * `notisblank` - Field is not empty\\n  * `containsany` - Field contains any of the given terms\\n  * `containsall` - Field contains all of the given terms\\n  * `notcontainsany` - Field does not contain any of the given terms\\n\"\n              },\n              \"terms\": {\n                \"description\": \"Required if filter is not \\\"isblank\\\" or \\\"notisblank\\\"\",\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"required\": [\n              \"filter\"\n            ]\n          }\n        ]\n      },\n      \"AttachmentFieldSearch\": {\n        \"description\": \"Field search for attachment fields\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/FieldSearch\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"filter\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"isblank\",\n                  \"notisblank\"\n                ],\n                \"description\": \"Filter options:\\n  * `isblank` - Does not have attachments\\n  * `notisblank` - Has attachments\\n\"\n              }\n            },\n            \"required\": [\n              \"filter\"\n            ]\n          }\n        ]\n      },\n      \"BooleanFieldSearch\": {\n        \"description\": \"Field search for boolean fields\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/FieldSearch\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"filter\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"isblank\",\n                  \"notisblank\",\n                  \"equals\"\n                ],\n                \"description\": \"Filter options:\\n  * `isblank` - Field is empty\\n  * `notisblank` - Field is not empty\\n  * `equals` - Field equals the given term. Must be either \\\"true\\\" or \\\"false\\\"\\n\"\n              },\n              \"terms\": {\n                \"description\": \"Required if filter is not \\\"isblank\\\" or \\\"notisblank\\\"\",\n                \"oneOf\": [\n                  {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"true\",\n                      \"false\"\n                    ]\n                  },\n                  {\n                    \"type\": \"boolean\"\n                  }\n                ]\n              }\n            },\n            \"required\": [\n              \"filter\"\n            ]\n          }\n        ]\n      },\n      \"UploadRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"docId\": {\n            \"type\": \"string\",\n            \"description\": \"External document ID\"\n          },\n          \"fields\": {\n            \"type\": \"string\",\n            \"description\": \"Stringified JSON, array of `Field` schema objects. Note that string values cannot exceed 5000 characters.\",\n            \"example\": \"[{\\\"name\\\": \\\"Custom Field\\\", \\\"values\\\": [{\\\"value\\\": \\\"First Metadata\\\"}]}, {\\\"name\\\": \\\"Counterparties\\\", \\\"values\\\": [{\\\"value\\\": \\\"Vendor Inc.\\\"}, {\\\"value\\\": \\\"Management Incorporated\\\"}]}]\"\n          },\n          \"file\": {\n            \"type\": \"string\",\n            \"description\": \"File object\",\n            \"format\": \"binary\"\n          },\n          \"uploadPath\": {\n            \"type\": \"string\",\n            \"description\": \"\\\"/\\\" separated path to the folder to contain the uploaded file. Will create the specified folder structure if it does not already exist.\",\n            \"example\": \"Finance/Agreements\"\n          }\n        },\n        \"required\": [\n          \"docId\",\n          \"file\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"UpdateDocumentRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"fields\": {\n            \"type\": \"array\",\n            \"description\": \"Array of `Field` schema objects. Note that string values cannot exceed 5000 characters.\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Field\"\n            },\n            \"example\": [\n              {\n                \"name\": \"Custom Field\",\n                \"values\": [\n                  {\n                    \"value\": \"First Metadata\"\n                  }\n                ]\n              },\n              {\n                \"name\": \"Counterparties\",\n                \"values\": [\n                  {\n                    \"value\": \"Vendor Inc.\"\n                  },\n                  {\n                    \"value\": \"Management Incorporate\"\n                  }\n                ]\n              }\n            ]\n          }\n        },\n        \"required\": [\n          \"fields\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"UsersExportFile\": {\n        \"type\": \"string\",\n        \"format\": \"binary\",\n        \"xml\": {\n          \"wrapped\": true\n        },\n        \"example\": \"User ID=1234 Email=user@evisort.com FirstName=User LastName=Evisort JobTitle=Dev AccessLevel=Admin Department= LastAccess=21/07/2011 10:30:00 WorkflowAdmin=No\"\n      },\n      \"UsersImportRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"import_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"description\": \"String GUID that determines the id of the current Import summary and process. This identifier identifies each file.\",\n            \"example\": \"14c89641-d187-4934-a5b6-2d9b2da0efc4\"\n          },\n          \"email_new_users\": {\n            \"type\": \"boolean\",\n            \"description\": \"Boolean flag that determines whether to send an email to new users or not (non existing users in the DB, but present in the spreadsheet). If not defined, it defaults to false.\",\n            \"example\": false\n          },\n          \"update_existing_users\": {\n            \"type\": \"boolean\",\n            \"description\": \"Boolean flag that determines whether to update existing users or not (already existing users in the DB). If not defined, it defaults to false.\",\n            \"example\": false\n          },\n          \"delete_missing_users\": {\n            \"type\": \"boolean\",\n            \"description\": \"Boolean flag that determines whether to delete missing users or not (users in the DB but not in the spreadsheet). If not defined, it defaults to false.\",\n            \"example\": false\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UsersImportResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"client_id\": {\n            \"type\": \"integer\",\n            \"description\": \"Number that determines the id of the current Client.\",\n            \"example\": 1\n          },\n          \"import_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"description\": \"String GUID that determines the id of the current Import summary and process. This identifier identifies each file.\",\n            \"example\": \"14c89641-d187-4934-a5b6-2d9b2da0efc4\"\n          },\n          \"task_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"description\": \"String GUID that determines the id of the celery task.\",\n            \"example\": \"14c89641-d187-4934-a5b6-2d9b2da0efc4\"\n          }\n        },\n        \"required\": [\n          \"client_id\",\n          \"import_id\",\n          \"task_id\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"UsersImportListResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"imports\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/UsersImportStatusResponse\"\n            }\n          },\n          \"count\": {\n            \"type\": \"integer\"\n          },\n          \"next\": {\n            \"type\": \"string\",\n            \"nullable\": true,\n            \"example\": \"\u003cBASE_URL\u003e/v1/users/import?page=3\u0026pageSize=10\"\n          },\n          \"previous\": {\n            \"type\": \"string\",\n            \"nullable\": true,\n            \"example\": \"\u003cBASE_URL\u003e/v1/users/import?page=1\u0026pageSize=10\"\n          }\n        }\n      },\n      \"UsersImportStatusResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"description\": \"Number that determines the id of the import process.\",\n            \"example\": 1\n          },\n          \"client_id\": {\n            \"type\": \"integer\",\n            \"description\": \"Number that determines the id of the current Client.\",\n            \"example\": 1\n          },\n          \"import_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"description\": \"String GUID that determines the id of the current Import summary and process. This identifier identifies each file.\",\n            \"example\": \"14c89641-d187-4934-a5b6-2d9b2da0efc4\"\n          },\n          \"user_id\": {\n            \"type\": \"integer\",\n            \"description\": \"Number that determines the id of the user that created the import process.\",\n            \"example\": 1\n          },\n          \"task_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"description\": \"String GUID that determines the id of the celery task.\",\n            \"example\": \"14c89641-d187-4934-a5b6-2d9b2da0efc4\"\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"Status of the import process.\",\n            \"enum\": [\n              \"new\",\n              \"running\",\n              \"cancelled\",\n              \"finished\",\n              \"failed\"\n            ],\n            \"example\": \"new\"\n          },\n          \"cancel_requested\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicates whether the import process has been requested to be cancelled.\"\n          },\n          \"acknowledged\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicates whether the import process has been requested to be acknowledged.\"\n          },\n          \"timestamps\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"start\": {\n                \"type\": \"string\",\n                \"format\": \"date-time\",\n                \"description\": \"Start timestamp of the import process.\"\n              },\n              \"end\": {\n                \"type\": \"string\",\n                \"format\": \"date-time\",\n                \"description\": \"End timestamp of the import process.\"\n              }\n            }\n          },\n          \"counters\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"total\": {\n                \"type\": \"integer\",\n                \"description\": \"Total count of user records to be processed.\",\n                \"example\": 1\n              },\n              \"processed\": {\n                \"type\": \"integer\",\n                \"description\": \"Actual count of processed records.\",\n                \"example\": 1\n              },\n              \"users_created\": {\n                \"type\": \"integer\",\n                \"description\": \"Actual count of created users.\",\n                \"example\": 1\n              },\n              \"users_updated\": {\n                \"type\": \"integer\",\n                \"description\": \"Actual count of updated users.\",\n                \"example\": 1\n              },\n              \"users_deleted\": {\n                \"type\": \"integer\",\n                \"description\": \"Actual count of deleted users.\",\n                \"example\": 1\n              },\n              \"errors\": {\n                \"type\": \"integer\",\n                \"description\": \"Actual count of user records with errors.\",\n                \"example\": 1\n              }\n            }\n          }\n        }\n      },\n      \"UsersImportSummaryRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"file\": {\n            \"type\": \"string\",\n            \"description\": \"Excel file with users list\",\n            \"format\": \"binary\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UsersImportSummaryResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"client_id\": {\n            \"type\": \"integer\",\n            \"description\": \"Number that determines the id of the current Client.\",\n            \"example\": 1\n          },\n          \"import_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"description\": \"String GUID that determines the id of the current Import summary and process. This identifier identifies each file.\",\n            \"example\": \"14c89641-d187-4934-a5b6-2d9b2da0efc4\"\n          },\n          \"results\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"total\": {\n                \"type\": \"integer\",\n                \"description\": \"Total count of user records to be processed.\",\n                \"example\": 1\n              },\n              \"new_users\": {\n                \"type\": \"integer\",\n                \"description\": \"Count of new users to be created.\",\n                \"example\": 1\n              },\n              \"existing\": {\n                \"type\": \"integer\",\n                \"description\": \"Count of existing users to be updated.\",\n                \"example\": 1\n              },\n              \"to_be_deleted\": {\n                \"type\": \"integer\",\n                \"description\": \"Count of users to be deleted.\",\n                \"example\": 1\n              },\n              \"errors\": {\n                \"type\": \"integer\",\n                \"description\": \"Count of user records with errors.\",\n                \"example\": 1\n              }\n            }\n          }\n        }\n      },\n      \"UsersImportAcknowledgeResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"client_id\": {\n            \"type\": \"integer\",\n            \"description\": \"Number that determines the id of the current Client.\",\n            \"example\": 1\n          },\n          \"import_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"description\": \"String GUID that determines the id of the current Import summary and process. This identifier identifies each file.\",\n            \"example\": \"14c89641-d187-4934-a5b6-2d9b2da0efc4\"\n          }\n        },\n        \"required\": [\n          \"client_id\",\n          \"import_id\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"UsersImportCancelResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"client_id\": {\n            \"type\": \"integer\",\n            \"description\": \"Number that determines the id of the current Client.\",\n            \"example\": 1\n          },\n          \"import_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"description\": \"String GUID that determines the id of the current Import summary and process. This identifier identifies each file.\",\n            \"example\": \"14c89641-d187-4934-a5b6-2d9b2da0efc4\"\n          }\n        },\n        \"required\": [\n          \"client_id\",\n          \"import_id\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"FieldList\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"count\": {\n            \"type\": \"integer\"\n          },\n          \"fields\": {\n            \"type\": \"array\",\n            \"nullable\": false,\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"label\": {\n                  \"type\": \"string\",\n                  \"description\": \"The display value for the field\"\n                },\n                \"name\": {\n                  \"type\": \"string\",\n                  \"description\": \"The internal name for the field\"\n                },\n                \"type\": {\n                  \"$ref\": \"#/components/schemas/TypeEnum\"\n                },\n                \"helpText\": {\n                  \"nullable\": true,\n                  \"type\": \"string\",\n                  \"description\": \"Optional display string for extra instructions relating to this field\"\n                },\n                \"active\": {\n                  \"type\": \"boolean\",\n                  \"description\": \"Indicates whether this field is currently visible\"\n                },\n                \"allowedValues\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"The available selectable values for the field. Used with \\\"single_select\\\" and sometimes \\\"multi_select\\\". An empty array means any value is accepted.\"\n                }\n              }\n            }\n          }\n        },\n        \"required\": [\n          \"count\",\n          \"fields\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"UploadRequestAccepted\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"status\": {\n            \"$ref\": \"#/components/schemas/Status\"\n          },\n          \"evisortId\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"status\",\n          \"evisortId\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"Documents\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"documents\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Document\"\n            }\n          },\n          \"count\": {\n            \"type\": \"integer\"\n          },\n          \"next\": {\n            \"type\": \"string\",\n            \"nullable\": true,\n            \"example\": \"\u003cBASE_URL\u003e/v1/documents/?modifiedSince=2020-01-01T12:00:00.50Z\u0026page=3\u0026pageSize=10\"\n          },\n          \"previous\": {\n            \"type\": \"string\",\n            \"nullable\": true,\n            \"example\": \"\u003cBASE_URL\u003e/v1/documents/?modifiedSince=2020-01-01T12:00:00.50Z\u0026page=1\u0026pageSize=10\"\n          }\n        },\n        \"required\": [\n          \"documents\"\n        ],\n        \"additionalProperties\": true\n      },\n      \"Document\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"docId\": {\n            \"type\": \"string\",\n            \"description\": \"Could be null for documents not uploaded via the API\",\n            \"nullable\": true\n          },\n          \"evisortId\": {\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"$ref\": \"#/components/schemas/Status\"\n          },\n          \"dateModified\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"fields\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Field\"\n            }\n          },\n          \"provisions\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Provision\"\n            }\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The filename of the document\"\n          },\n          \"path\": {\n            \"type\": \"string\",\n            \"description\": \"The path of the document\"\n          }\n        },\n        \"required\": [\n          \"docId\",\n          \"dateModified\",\n          \"fields\",\n          \"provisions\",\n          \"evisortId\",\n          \"status\",\n          \"name\",\n          \"path\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"FoundDocuments\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"documents\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/FoundDocument\"\n            }\n          },\n          \"count\": {\n            \"type\": \"integer\",\n            \"description\": \"The total number of unique documents found in the search. If this is larger than the page size, additional results can be found on other pages.\"\n          },\n          \"next\": {\n            \"type\": \"string\",\n            \"nullable\": true,\n            \"description\": \"The url for the next page of results.\"\n          },\n          \"previous\": {\n            \"type\": \"string\",\n            \"nullable\": true,\n            \"description\": \"The url for the previous page of results.\"\n          }\n        }\n      },\n      \"FoundDocument\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"status\": {\n            \"$ref\": \"#/components/schemas/Status\"\n          },\n          \"dateModified\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"fields\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Field\"\n            }\n          },\n          \"provisions\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Provision\"\n            }\n          },\n          \"fileDetails\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/FileDetails\"\n            },\n            \"description\": \"An array of all identical documents in the system that match the query. These documents share the same field, provision, and status metadata.\"\n          }\n        },\n        \"required\": [\n          \"fileDetails\",\n          \"fields\",\n          \"provisions\",\n          \"status\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"FileDetails\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"docId\": {\n            \"type\": \"string\",\n            \"description\": \"Could be null for documents not uploaded via the API\",\n            \"nullable\": true\n          },\n          \"evisortId\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The filename of the document\"\n          },\n          \"path\": {\n            \"type\": \"string\",\n            \"description\": \"The path of the document\"\n          }\n        },\n        \"required\": [\n          \"docId\",\n          \"evisortId\",\n          \"name\",\n          \"path\"\n        ]\n      },\n      \"ProvisionsList\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"count\": {\n            \"type\": \"integer\"\n          },\n          \"provisions\": {\n            \"description\": \"A list of provision types with any associated training text used to generate them\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"name\": {\n                  \"type\": \"string\"\n                },\n                \"provisionTags\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"ProvisionsStatus\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"status\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"DONE\",\n              \"DONE_WITH_FAILURES\",\n              \"IN_PROGRESS\"\n            ]\n          },\n          \"details\": {\n            \"description\": \"The aggregated status of the training request\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"FAILED\": {\n                \"type\": \"integer\"\n              },\n              \"SUCCESS\": {\n                \"type\": \"integer\"\n              },\n              \"QUEUED\": {\n                \"type\": \"integer\"\n              }\n            }\n          }\n        }\n      },\n      \"Status\": {\n        \"type\": \"string\",\n        \"enum\": [\n          \"IN_PROGRESS\",\n          \"READY\"\n        ]\n      },\n      \"Field\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"values\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/FieldValue\"\n            }\n          }\n        },\n        \"required\": [\n          \"name\",\n          \"values\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"FieldValue\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"value\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"value\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"ProvisionSchema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"content\": {\n            \"type\": \"string\",\n            \"minLength\": 10\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"bulkTag\": {\n            \"type\": \"boolean\",\n            \"default\": true\n          },\n          \"evisortId\": {\n            \"type\": \"integer\",\n            \"description\": \"document id\"\n          }\n        },\n        \"required\": [\n          \"content\",\n          \"name\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"Provision\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"content\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ProvisionContent\"\n            }\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"name\",\n          \"content\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"ProvisionContent\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"text\": {\n            \"type\": \"string\"\n          },\n          \"score\": {\n            \"type\": \"number\",\n            \"nullable\": true\n          }\n        },\n        \"required\": [\n          \"text\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"AuthValid\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"token\": {\n            \"type\": \"string\",\n            \"description\": \"JWT Access Token\",\n            \"example\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ\"\n          }\n        }\n      },\n      \"TypeEnum\": {\n        \"type\": \"string\",\n        \"enum\": [\n          \"string\",\n          \"number\",\n          \"boolean\",\n          \"datetime\",\n          \"multi_select\",\n          \"single_select\"\n        ],\n        \"description\": \"Type values:\\n  * `string` - String value, 5000 character limit\\n  * `number` - Number value, stored as a Float\\n  * `boolean` - Boolean value\\n  * `datetime` - Datetime value\\n  * `multi_select` - An array of String values\\n  * `single_select` - A single string from a list of options\\n\"\n      },\n      \"IntakeFormRes\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"workflowId\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"sections\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/IntakeFormSection\"\n            }\n          }\n        }\n      },\n      \"IntakeFormSection\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"position\": {\n            \"type\": \"integer\"\n          },\n          \"questions\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/IntakeFormQuestion\"\n            }\n          }\n        },\n        \"required\": [\n          \"name\",\n          \"position\"\n        ]\n      },\n      \"IntakeFormQuestion\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"position\": {\n            \"type\": \"integer\"\n          },\n          \"isRequired\": {\n            \"type\": \"boolean\"\n          },\n          \"field\": {\n            \"$ref\": \"#/components/schemas/IntakeFormField\"\n          }\n        },\n        \"required\": [\n          \"title\",\n          \"position\",\n          \"isRequired\",\n          \"field\"\n        ]\n      },\n      \"IntakeFormField\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"options\": {\n            \"type\": \"object\"\n          }\n        },\n        \"required\": [\n          \"type\"\n        ]\n      },\n      \"Workflow\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"conditions\": {\n            \"type\": \"object\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"fieldLinks\": {\n            \"type\": \"object\"\n          },\n          \"fieldMappings\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\"\n            }\n          },\n          \"implicitFields\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\"\n            }\n          },\n          \"isDraft\": {\n            \"type\": \"boolean\"\n          },\n          \"fields\": {\n            \"type\": \"object\"\n          },\n          \"settings\": {\n            \"type\": \"object\"\n          },\n          \"signers\": {\n            \"type\": \"object\"\n          },\n          \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\"\n          },\n          \"parentId\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\"\n          },\n          \"createdBy\": {\n            \"type\": \"integer\"\n          },\n          \"createdDate\": {\n            \"type\": \"string\"\n          },\n          \"hasCompanyPaper\": {\n            \"type\": \"boolean\"\n          },\n          \"hasCounterpartyPaper\": {\n            \"type\": \"boolean\"\n          },\n          \"modifiedDate\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"stages\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"finalize\": {\n                \"$ref\": \"#/components/schemas/Stage\"\n              },\n              \"review\": {\n                \"$ref\": \"#/components/schemas/Stage\"\n              },\n              \"sign\": {\n                \"$ref\": \"#/components/schemas/Stage\"\n              }\n            }\n          },\n          \"published\": {\n            \"type\": \"boolean\"\n          },\n          \"completed\": {\n            \"type\": \"boolean\"\n          },\n          \"versions\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/WorkflowVersion\"\n            }\n          }\n        }\n      },\n      \"Stage\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"coordinator\": {\n            \"type\": \"integer\"\n          },\n          \"phases\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\"\n            }\n          }\n        }\n      },\n      \"WorkflowVersion\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\"\n          },\n          \"activeTickets\": {\n            \"type\": \"integer\"\n          },\n          \"number\": {\n            \"type\": \"integer\"\n          },\n          \"totalTickets\": {\n            \"type\": \"integer\"\n          },\n          \"published\": {\n            \"type\": \"boolean\"\n          }\n        }\n      }\n    },\n    \"responses\": {\n      \"AuthResponse\": {\n        \"description\": \"Successful Authentication response containing JWT access token\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/AuthValid\"\n            }\n          }\n        }\n      },\n      \"FieldListResponse\": {\n        \"description\": \"FieldList object\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/FieldList\"\n            }\n          }\n        }\n      },\n      \"DocumentResponse\": {\n        \"description\": \"Document object\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Document\"\n            }\n          }\n        }\n      },\n      \"DocumentsResponse\": {\n        \"description\": \"Document object\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Documents\"\n            }\n          }\n        }\n      },\n      \"FoundDocumentsResponse\": {\n        \"description\": \"FoundDocument object\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/FoundDocuments\"\n            }\n          }\n        }\n      },\n      \"ProvisionsListResponse\": {\n        \"description\": \"Document object\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/ProvisionsList\"\n            }\n          }\n        }\n      },\n      \"ProvisionsStatusResponse\": {\n        \"description\": \"Provision Status object\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/ProvisionsStatus\"\n            }\n          }\n        }\n      },\n      \"UploadRequestAccepted\": {\n        \"description\": \"Request has been accepted\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/UploadRequestAccepted\"\n            }\n          }\n        }\n      },\n      \"NoContentResponse\": {\n        \"description\": \"No Content\"\n      },\n      \"UnauthorizedError\": {\n        \"description\": \"Access token is missing or invalid\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"error\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"BadRequestError\": {\n        \"description\": \"Invalid request parameters\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"error\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"NotFoundError\": {\n        \"description\": \"Requested resource not found\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"error\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"InternalError\": {\n        \"description\": \"Internal/Unexpected Error\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"error\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"ForbiddenError\": {\n        \"description\": \"Forbidden\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"error\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"UsersExportResponse\": {\n        \"description\": \"Users Export file\",\n        \"content\": {\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/UsersExportFile\"\n            }\n          }\n        }\n      },\n      \"UsersImportResponse\": {\n        \"description\": \"Request has been accepted\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/UsersImportResponse\"\n            }\n          }\n        }\n      },\n      \"UsersImportListResponse\": {\n        \"description\": \"List of a user import processes\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/UsersImportListResponse\"\n            }\n          }\n        }\n      },\n      \"UsersImportStatusResponse\": {\n        \"description\": \"Status of a user import process\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/UsersImportStatusResponse\"\n            }\n          }\n        }\n      },\n      \"UsersImportSummaryResponse\": {\n        \"description\": \"Summary of a user import process\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/UsersImportSummaryResponse\"\n            }\n          }\n        }\n      },\n      \"UsersImportAcknowledgeResponse\": {\n        \"description\": \"Request has been accepted\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/UsersImportAcknowledgeResponse\"\n            }\n          }\n        }\n      },\n      \"UsersImportCancelResponse\": {\n        \"description\": \"Request has been accepted\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/UsersImportCancelResponse\"\n            }\n          }\n        }\n      }\n    }\n  }\n}",
			"canonicalURL": "/github.com/pugliathomas/ChicagoPUG@1b6e3fefc7f26852b7d17048c0151595df5e4ed9/-/blob/evisort-api-openapi-v1%20%282%29.json",
			"externalURLs": [
				{
					"url": "https://github.com/pugliathomas/ChicagoPUG/blob/1b6e3fefc7f26852b7d17048c0151595df5e4ed9/evisort-api-openapi-v1 (2).json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/documents/{evisortId}/content\": get: responses: 302: headers: header \"Location\": at 667:27: parameter MUST contain either a schema property, or a content property"
}