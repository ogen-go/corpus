{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/EMResearch/EvoMaster"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "core-it/src/test/resources/APIs_guru/amazonaws.com/groundstation/2019-05-23/openapi.yaml",
			"byteSize": 106586,
			"content": "openapi: 3.0.0\ninfo:\n  version: '2019-05-23'\n  x-release: v4\n  title: AWS Ground Station\n  description: 'Welcome to the AWS Ground Station API Reference. AWS Ground Station is a fully managed service that enables you to control satellite communications, downlink and process satellite data, and scale your satellite operations efficiently and cost-effectively without having to build or manage your own ground station infrastructure.'\n  x-logo:\n    url: 'https://twitter.com/awscloud/profile_image?size=original'\n    backgroundColor: '#FFFFFF'\n  termsOfService: 'https://aws.amazon.com/service-terms/'\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: 'https://github.com/mermade/aws2openapi'\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: 'http://www.apache.org/licenses/'\n  x-providerName: amazonaws.com\n  x-serviceName: groundstation\n  x-aws-signingName: groundstation\n  x-origin:\n    - contentType: application/json\n      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/groundstation-2019-05-23.normal.json'\n      converter:\n        url: 'https://github.com/mermade/aws2openapi'\n        version: 1.0.0\n      x-apisguru-driver: external\n  x-apiClientRegistration:\n    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: 'https://docs.aws.amazon.com/groundstation/'\nservers:\n  - url: 'http://groundstation.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The AWS Ground Station multi-region endpoint\n  - url: 'https://groundstation.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The AWS Ground Station multi-region endpoint\n  - url: 'http://groundstation.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AWS Ground Station endpoint for China (Beijing) and China (Ningxia)\n  - url: 'https://groundstation.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AWS Ground Station endpoint for China (Beijing) and China (Ningxia)\nx-hasEquivalentPaths: true\npaths:\n  '/contact/{contactId}':\n    delete:\n      operationId: CancelContact\n      description: Cancels a contact with a specified contact ID.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContactIdResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: DependencyException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DependencyException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: contactId\n          in: path\n          required: true\n          description: UUID of a contact.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: DescribeContact\n      description: Describes an existing contact.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeContactResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: DependencyException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DependencyException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: contactId\n          in: path\n          required: true\n          description: UUID of a contact.\n          schema:\n            type: string\n  /config:\n    post:\n      operationId: CreateConfig\n      description: \u003cp\u003eCreates a \u003ccode\u003eConfig\u003c/code\u003e with the specified \u003ccode\u003econfigData\u003c/code\u003e parameters.\u003c/p\u003e \u003cp\u003eOnly one type of \u003ccode\u003econfigData\u003c/code\u003e can be specified.\u003c/p\u003e\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConfigIdResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: DependencyException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DependencyException'\n        '482':\n          description: ResourceLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceLimitExceededException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - configData\n                - name\n              properties:\n                configData:\n                  description: \u003cp\u003eObject containing the parameters of a \u003ccode\u003eConfig\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eSee the subtype definitions for what each type of \u003ccode\u003eConfig\u003c/code\u003e contains.\u003c/p\u003e\n                  type: object\n                  properties:\n                    antennaDownlinkConfig:\n                      allOf:\n                        - $ref: '#/components/schemas/AntennaDownlinkConfig'\n                        - description: Information about how AWS Ground Station should configure an antenna for downlink during a contact.\n                    antennaDownlinkDemodDecodeConfig:\n                      allOf:\n                        - $ref: '#/components/schemas/AntennaDownlinkDemodDecodeConfig'\n                        - description: Information about how AWS Ground Station should conﬁgure an antenna for downlink demod decode during a contact.\n                    antennaUplinkConfig:\n                      allOf:\n                        - $ref: '#/components/schemas/AntennaUplinkConfig'\n                        - description: Information about how AWS Ground Station should conﬁgure an antenna for uplink during a contact.\n                    dataflowEndpointConfig:\n                      allOf:\n                        - $ref: '#/components/schemas/DataflowEndpointConfig'\n                        - description: Information about the dataflow endpoint \u003ccode\u003eConfig\u003c/code\u003e.\n                    s3RecordingConfig:\n                      allOf:\n                        - $ref: '#/components/schemas/S3RecordingConfig'\n                        - description: Information about an S3 recording \u003ccode\u003eConfig\u003c/code\u003e.\n                    trackingConfig:\n                      allOf:\n                        - $ref: '#/components/schemas/TrackingConfig'\n                        - description: 'Object that determines whether tracking should be used during a contact executed with this \u003ccode\u003eConfig\u003c/code\u003e in the mission profile. '\n                    uplinkEchoConfig:\n                      allOf:\n                        - $ref: '#/components/schemas/UplinkEchoConfig'\n                        - description: '\u003cp\u003eInformation about an uplink echo \u003ccode\u003eConfig\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eParameters from the \u003ccode\u003eAntennaUplinkConfig\u003c/code\u003e, corresponding to the specified \u003ccode\u003eAntennaUplinkConfigArn\u003c/code\u003e, are used when this \u003ccode\u003eUplinkEchoConfig\u003c/code\u003e is used in a contact.\u003c/p\u003e'\n                name:\n                  description: Name of a \u003ccode\u003eConfig\u003c/code\u003e.\n                  type: string\n                  pattern: '^[ a-zA-Z0-9_:-]{1,256}$'\n                  minLength: 1\n                  maxLength: 256\n                tags:\n                  description: Tags assigned to a \u003ccode\u003eConfig\u003c/code\u003e.\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/String'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: ListConfigs\n      description: Returns a list of \u003ccode\u003eConfig\u003c/code\u003e objects.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListConfigsResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: DependencyException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DependencyException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: maxResults\n          in: query\n          required: false\n          description: Maximum number of \u003ccode\u003eConfigs\u003c/code\u003e returned.\n          schema:\n            type: integer\n        - name: nextToken\n          in: query\n          required: false\n          description: Next token returned in the request of a previous \u003ccode\u003eListConfigs\u003c/code\u003e call. Used to get the next page of results.\n          schema:\n            type: string\n  /dataflowEndpointGroup:\n    post:\n      operationId: CreateDataflowEndpointGroup\n      description: '\u003cp\u003eCreates a \u003ccode\u003eDataflowEndpoint\u003c/code\u003e group containing the specified list of \u003ccode\u003eDataflowEndpoint\u003c/code\u003e objects.\u003c/p\u003e \u003cp\u003eThe \u003ccode\u003ename\u003c/code\u003e field in each endpoint is used in your mission profile \u003ccode\u003eDataflowEndpointConfig\u003c/code\u003e to specify which endpoints to use during a contact.\u003c/p\u003e \u003cp\u003eWhen a contact uses multiple \u003ccode\u003eDataflowEndpointConfig\u003c/code\u003e objects, each \u003ccode\u003eConfig\u003c/code\u003e must match a \u003ccode\u003eDataflowEndpoint\u003c/code\u003e in the same group.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataflowEndpointGroupIdResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: DependencyException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DependencyException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - endpointDetails\n              properties:\n                endpointDetails:\n                  description: Endpoint details of each endpoint in the dataflow endpoint group.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/EndpointDetails'\n                tags:\n                  description: Tags of a dataflow endpoint group.\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/String'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: ListDataflowEndpointGroups\n      description: Returns a list of \u003ccode\u003eDataflowEndpoint\u003c/code\u003e groups.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListDataflowEndpointGroupsResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: DependencyException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DependencyException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: maxResults\n          in: query\n          required: false\n          description: Maximum number of dataflow endpoint groups returned.\n          schema:\n            type: integer\n        - name: nextToken\n          in: query\n          required: false\n          description: Next token returned in the request of a previous \u003ccode\u003eListDataflowEndpointGroups\u003c/code\u003e call. Used to get the next page of results.\n          schema:\n            type: string\n  /missionprofile:\n    post:\n      operationId: CreateMissionProfile\n      description: '\u003cp\u003eCreates a mission profile.\u003c/p\u003e \u003cp\u003e \u003ccode\u003edataflowEdges\u003c/code\u003e is a list of lists of strings. Each lower level list of strings has two elements: a \u003ci\u003efrom\u003c/i\u003e ARN and a \u003ci\u003eto\u003c/i\u003e ARN.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissionProfileIdResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: DependencyException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DependencyException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - dataflowEdges\n                - minimumViableContactDurationSeconds\n                - name\n                - trackingConfigArn\n              properties:\n                contactPostPassDurationSeconds:\n                  description: Amount of time after a contact ends that you’d like to receive a CloudWatch event indicating the pass has finished.\n                  type: integer\n                  minimum: 1\n                  maximum: 21600\n                contactPrePassDurationSeconds:\n                  description: Amount of time prior to contact start you’d like to receive a CloudWatch event indicating an upcoming pass.\n                  type: integer\n                  minimum: 1\n                  maximum: 21600\n                dataflowEdges:\n                  description: 'A list of lists of ARNs. Each list of ARNs is an edge, with a \u003ci\u003efrom\u003c/i\u003e \u003ccode\u003eConfig\u003c/code\u003e and a \u003ci\u003eto\u003c/i\u003e \u003ccode\u003eConfig\u003c/code\u003e.'\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/DataflowEdge'\n                minimumViableContactDurationSeconds:\n                  description: Smallest amount of time in seconds that you’d like to see for an available contact. AWS Ground Station will not present you with contacts shorter than this duration.\n                  type: integer\n                  minimum: 1\n                  maximum: 21600\n                name:\n                  description: Name of a mission profile.\n                  type: string\n                  pattern: '^[ a-zA-Z0-9_:-]{1,256}$'\n                  minLength: 1\n                  maxLength: 256\n                tags:\n                  description: Tags assigned to a mission profile.\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/String'\n                trackingConfigArn:\n                  description: ARN of a tracking \u003ccode\u003eConfig\u003c/code\u003e.\n                  type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: ListMissionProfiles\n      description: Returns a list of mission profiles.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListMissionProfilesResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: DependencyException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DependencyException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: maxResults\n          in: query\n          required: false\n          description: Maximum number of mission profiles returned.\n          schema:\n            type: integer\n        - name: nextToken\n          in: query\n          required: false\n          description: Next token returned in the request of a previous \u003ccode\u003eListMissionProfiles\u003c/code\u003e call. Used to get the next page of results.\n          schema:\n            type: string\n  '/config/{configType}/{configId}':\n    delete:\n      operationId: DeleteConfig\n      description: Deletes a \u003ccode\u003eConfig\u003c/code\u003e.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConfigIdResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: DependencyException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DependencyException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: configId\n          in: path\n          required: true\n          description: UUID of a \u003ccode\u003eConfig\u003c/code\u003e.\n          schema:\n            type: string\n        - name: configType\n          in: path\n          required: true\n          description: Type of a \u003ccode\u003eConfig\u003c/code\u003e.\n          schema:\n            type: string\n            enum:\n              - antenna-downlink\n              - antenna-downlink-demod-decode\n              - antenna-uplink\n              - dataflow-endpoint\n              - tracking\n              - uplink-echo\n              - s3-recording\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: GetConfig\n      description: \u003cp\u003eReturns \u003ccode\u003eConfig\u003c/code\u003e information.\u003c/p\u003e \u003cp\u003eOnly one \u003ccode\u003eConfig\u003c/code\u003e response can be returned.\u003c/p\u003e\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetConfigResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: DependencyException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DependencyException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: configId\n          in: path\n          required: true\n          description: UUID of a \u003ccode\u003eConfig\u003c/code\u003e.\n          schema:\n            type: string\n        - name: configType\n          in: path\n          required: true\n          description: Type of a \u003ccode\u003eConfig\u003c/code\u003e.\n          schema:\n            type: string\n            enum:\n              - antenna-downlink\n              - antenna-downlink-demod-decode\n              - antenna-uplink\n              - dataflow-endpoint\n              - tracking\n              - uplink-echo\n              - s3-recording\n    put:\n      operationId: UpdateConfig\n      description: \u003cp\u003eUpdates the \u003ccode\u003eConfig\u003c/code\u003e used when scheduling contacts.\u003c/p\u003e \u003cp\u003eUpdating a \u003ccode\u003eConfig\u003c/code\u003e will not update the execution parameters for existing future contacts scheduled with this \u003ccode\u003eConfig\u003c/code\u003e.\u003c/p\u003e\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConfigIdResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: DependencyException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DependencyException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: configId\n          in: path\n          required: true\n          description: UUID of a \u003ccode\u003eConfig\u003c/code\u003e.\n          schema:\n            type: string\n        - name: configType\n          in: path\n          required: true\n          description: Type of a \u003ccode\u003eConfig\u003c/code\u003e.\n          schema:\n            type: string\n            enum:\n              - antenna-downlink\n              - antenna-downlink-demod-decode\n              - antenna-uplink\n              - dataflow-endpoint\n              - tracking\n              - uplink-echo\n              - s3-recording\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - configData\n                - name\n              properties:\n                configData:\n                  description: \u003cp\u003eObject containing the parameters of a \u003ccode\u003eConfig\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eSee the subtype definitions for what each type of \u003ccode\u003eConfig\u003c/code\u003e contains.\u003c/p\u003e\n                  type: object\n                  properties:\n                    antennaDownlinkConfig:\n                      allOf:\n                        - $ref: '#/components/schemas/AntennaDownlinkConfig'\n                        - description: Information about how AWS Ground Station should configure an antenna for downlink during a contact.\n                    antennaDownlinkDemodDecodeConfig:\n                      allOf:\n                        - $ref: '#/components/schemas/AntennaDownlinkDemodDecodeConfig'\n                        - description: Information about how AWS Ground Station should conﬁgure an antenna for downlink demod decode during a contact.\n                    antennaUplinkConfig:\n                      allOf:\n                        - $ref: '#/components/schemas/AntennaUplinkConfig'\n                        - description: Information about how AWS Ground Station should conﬁgure an antenna for uplink during a contact.\n                    dataflowEndpointConfig:\n                      allOf:\n                        - $ref: '#/components/schemas/DataflowEndpointConfig'\n                        - description: Information about the dataflow endpoint \u003ccode\u003eConfig\u003c/code\u003e.\n                    s3RecordingConfig:\n                      allOf:\n                        - $ref: '#/components/schemas/S3RecordingConfig'\n                        - description: Information about an S3 recording \u003ccode\u003eConfig\u003c/code\u003e.\n                    trackingConfig:\n                      allOf:\n                        - $ref: '#/components/schemas/TrackingConfig'\n                        - description: 'Object that determines whether tracking should be used during a contact executed with this \u003ccode\u003eConfig\u003c/code\u003e in the mission profile. '\n                    uplinkEchoConfig:\n                      allOf:\n                        - $ref: '#/components/schemas/UplinkEchoConfig'\n                        - description: '\u003cp\u003eInformation about an uplink echo \u003ccode\u003eConfig\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eParameters from the \u003ccode\u003eAntennaUplinkConfig\u003c/code\u003e, corresponding to the specified \u003ccode\u003eAntennaUplinkConfigArn\u003c/code\u003e, are used when this \u003ccode\u003eUplinkEchoConfig\u003c/code\u003e is used in a contact.\u003c/p\u003e'\n                name:\n                  description: Name of a \u003ccode\u003eConfig\u003c/code\u003e.\n                  type: string\n                  pattern: '^[ a-zA-Z0-9_:-]{1,256}$'\n                  minLength: 1\n                  maxLength: 256\n  '/dataflowEndpointGroup/{dataflowEndpointGroupId}':\n    delete:\n      operationId: DeleteDataflowEndpointGroup\n      description: Deletes a dataflow endpoint group.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataflowEndpointGroupIdResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: DependencyException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DependencyException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: dataflowEndpointGroupId\n          in: path\n          required: true\n          description: UUID of a dataflow endpoint group.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: GetDataflowEndpointGroup\n      description: Returns the dataflow endpoint group.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetDataflowEndpointGroupResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: DependencyException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DependencyException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: dataflowEndpointGroupId\n          in: path\n          required: true\n          description: UUID of a dataflow endpoint group.\n          schema:\n            type: string\n  '/missionprofile/{missionProfileId}':\n    delete:\n      operationId: DeleteMissionProfile\n      description: Deletes a mission profile.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissionProfileIdResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: DependencyException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DependencyException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: missionProfileId\n          in: path\n          required: true\n          description: UUID of a mission profile.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: GetMissionProfile\n      description: Returns a mission profile.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetMissionProfileResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: DependencyException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DependencyException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: missionProfileId\n          in: path\n          required: true\n          description: UUID of a mission profile.\n          schema:\n            type: string\n    put:\n      operationId: UpdateMissionProfile\n      description: \u003cp\u003eUpdates a mission profile.\u003c/p\u003e \u003cp\u003eUpdating a mission profile will not update the execution parameters for existing future contacts.\u003c/p\u003e\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissionProfileIdResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: DependencyException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DependencyException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: missionProfileId\n          in: path\n          required: true\n          description: UUID of a mission profile.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                contactPostPassDurationSeconds:\n                  description: Amount of time after a contact ends that you’d like to receive a CloudWatch event indicating the pass has finished.\n                  type: integer\n                  minimum: 1\n                  maximum: 21600\n                contactPrePassDurationSeconds:\n                  description: Amount of time after a contact ends that you’d like to receive a CloudWatch event indicating the pass has finished.\n                  type: integer\n                  minimum: 1\n                  maximum: 21600\n                dataflowEdges:\n                  description: 'A list of lists of ARNs. Each list of ARNs is an edge, with a \u003ci\u003efrom\u003c/i\u003e \u003ccode\u003eConfig\u003c/code\u003e and a \u003ci\u003eto\u003c/i\u003e \u003ccode\u003eConfig\u003c/code\u003e.'\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/DataflowEdge'\n                minimumViableContactDurationSeconds:\n                  description: Smallest amount of time in seconds that you’d like to see for an available contact. AWS Ground Station will not present you with contacts shorter than this duration.\n                  type: integer\n                  minimum: 1\n                  maximum: 21600\n                name:\n                  description: Name of a mission profile.\n                  type: string\n                  pattern: '^[ a-zA-Z0-9_:-]{1,256}$'\n                  minLength: 1\n                  maxLength: 256\n                trackingConfigArn:\n                  description: ARN of a tracking \u003ccode\u003eConfig\u003c/code\u003e.\n                  type: string\n  /minute-usage:\n    post:\n      operationId: GetMinuteUsage\n      description: Returns the number of minutes used by account.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetMinuteUsageResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: DependencyException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DependencyException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - month\n                - year\n              properties:\n                month:\n                  description: 'The month being requested, with a value of 1-12.'\n                  type: integer\n                year:\n                  description: 'The year being requested, in the format of YYYY.'\n                  type: integer\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/satellite/{satelliteId}':\n    get:\n      operationId: GetSatellite\n      description: Returns a satellite.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetSatelliteResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: DependencyException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DependencyException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: satelliteId\n          in: path\n          required: true\n          description: UUID of a satellite.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /contacts:\n    post:\n      operationId: ListContacts\n      description: '\u003cp\u003eReturns a list of contacts.\u003c/p\u003e \u003cp\u003eIf \u003ccode\u003estatusList\u003c/code\u003e contains AVAILABLE, the request must include \u003ccode\u003egroundStation\u003c/code\u003e, \u003ccode\u003emissionprofileArn\u003c/code\u003e, and \u003ccode\u003esatelliteArn\u003c/code\u003e. \u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListContactsResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: DependencyException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DependencyException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - endTime\n                - startTime\n                - statusList\n              properties:\n                endTime:\n                  description: End time of a contact.\n                  type: string\n                  format: date-time\n                groundStation:\n                  description: Name of a ground station.\n                  type: string\n                maxResults:\n                  description: Maximum number of contacts returned.\n                  type: integer\n                missionProfileArn:\n                  description: ARN of a mission profile.\n                  type: string\n                nextToken:\n                  description: Next token returned in the request of a previous \u003ccode\u003eListContacts\u003c/code\u003e call. Used to get the next page of results.\n                  type: string\n                satelliteArn:\n                  description: ARN of a satellite.\n                  type: string\n                startTime:\n                  description: Start time of a contact.\n                  type: string\n                  format: date-time\n                statusList:\n                  description: Status of a contact reservation.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/ContactStatus'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /groundstation:\n    get:\n      operationId: ListGroundStations\n      description: 'Returns a list of ground stations. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListGroundStationsResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: DependencyException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DependencyException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: maxResults\n          in: query\n          required: false\n          description: Maximum number of ground stations returned.\n          schema:\n            type: integer\n        - name: nextToken\n          in: query\n          required: false\n          description: Next token that can be supplied in the next call to get the next page of ground stations.\n          schema:\n            type: string\n        - name: satelliteId\n          in: query\n          required: false\n          description: Satellite ID to retrieve on-boarded ground stations.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /satellite:\n    get:\n      operationId: ListSatellites\n      description: Returns a list of satellites.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListSatellitesResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: DependencyException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DependencyException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: maxResults\n          in: query\n          required: false\n          description: Maximum number of satellites returned.\n          schema:\n            type: integer\n        - name: nextToken\n          in: query\n          required: false\n          description: Next token that can be supplied in the next call to get the next page of satellites.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/tags/{resourceArn}':\n    get:\n      operationId: ListTagsForResource\n      description: Returns a list of tags for a specified resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListTagsForResourceResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: DependencyException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DependencyException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: ARN of a resource.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      operationId: TagResource\n      description: Assigns a tag to a resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagResourceResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: DependencyException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DependencyException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: ARN of a resource tag.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - tags\n              properties:\n                tags:\n                  description: Tags assigned to a resource.\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/String'\n  /contact:\n    post:\n      operationId: ReserveContact\n      description: Reserves a contact using specified parameters.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContactIdResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: DependencyException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DependencyException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - endTime\n                - groundStation\n                - missionProfileArn\n                - satelliteArn\n                - startTime\n              properties:\n                endTime:\n                  description: End time of a contact.\n                  type: string\n                  format: date-time\n                groundStation:\n                  description: Name of a ground station.\n                  type: string\n                missionProfileArn:\n                  description: ARN of a mission profile.\n                  type: string\n                satelliteArn:\n                  description: ARN of a satellite\n                  type: string\n                startTime:\n                  description: Start time of a contact.\n                  type: string\n                  format: date-time\n                tags:\n                  description: Tags assigned to a contact.\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/String'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/tags/{resourceArn}#tagKeys':\n    delete:\n      operationId: UntagResource\n      description: Deassigns a resource tag.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UntagResourceResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: DependencyException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DependencyException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: ARN of a resource.\n          schema:\n            type: string\n        - name: tagKeys\n          in: query\n          required: true\n          description: Keys of a resource tag.\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/String'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      schema:\n        type: string\n      required: false\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    ContactIdResponse:\n      type: object\n      properties:\n        contactId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: UUID of a contact.\n      description: \u003cp/\u003e\n    InvalidParameterException: {}\n    DependencyException: {}\n    ResourceNotFoundException: {}\n    ConfigIdResponse:\n      type: object\n      properties:\n        configArn:\n          allOf:\n            - $ref: '#/components/schemas/ConfigArn'\n            - description: ARN of a \u003ccode\u003eConfig\u003c/code\u003e.\n        configId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: UUID of a \u003ccode\u003eConfig\u003c/code\u003e.\n        configType:\n          allOf:\n            - $ref: '#/components/schemas/ConfigCapabilityType'\n            - description: Type of a \u003ccode\u003eConfig\u003c/code\u003e.\n      description: \u003cp/\u003e\n    AntennaDownlinkConfig:\n      type: object\n      required:\n        - spectrumConfig\n      properties:\n        spectrumConfig:\n          allOf:\n            - $ref: '#/components/schemas/SpectrumConfig'\n            - description: Object that describes a spectral \u003ccode\u003eConfig\u003c/code\u003e.\n      description: Information about how AWS Ground Station should configure an antenna for downlink during a contact.\n    AntennaDownlinkDemodDecodeConfig:\n      type: object\n      required:\n        - decodeConfig\n        - demodulationConfig\n        - spectrumConfig\n      properties:\n        decodeConfig:\n          allOf:\n            - $ref: '#/components/schemas/DecodeConfig'\n            - description: Information about the decode \u003ccode\u003eConfig\u003c/code\u003e.\n        demodulationConfig:\n          allOf:\n            - $ref: '#/components/schemas/DemodulationConfig'\n            - description: Information about the demodulation \u003ccode\u003eConfig\u003c/code\u003e.\n        spectrumConfig:\n          allOf:\n            - $ref: '#/components/schemas/SpectrumConfig'\n            - description: Information about the spectral \u003ccode\u003eConfig\u003c/code\u003e.\n      description: Information about how AWS Ground Station should conﬁgure an antenna for downlink demod decode during a contact.\n    AntennaUplinkConfig:\n      type: object\n      required:\n        - spectrumConfig\n        - targetEirp\n      properties:\n        spectrumConfig:\n          allOf:\n            - $ref: '#/components/schemas/UplinkSpectrumConfig'\n            - description: Information about the uplink spectral \u003ccode\u003eConfig\u003c/code\u003e.\n        targetEirp:\n          allOf:\n            - $ref: '#/components/schemas/Eirp'\n            - description: EIRP of the target.\n        transmitDisabled:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: Whether or not uplink transmit is disabled.\n      description: Information about the uplink \u003ccode\u003eConfig\u003c/code\u003e of an antenna.\n    DataflowEndpointConfig:\n      type: object\n      required:\n        - dataflowEndpointName\n      properties:\n        dataflowEndpointName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Name of a dataflow endpoint.\n        dataflowEndpointRegion:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Region of a dataflow endpoint.\n      description: Information about the dataflow endpoint \u003ccode\u003eConfig\u003c/code\u003e.\n    S3RecordingConfig:\n      type: object\n      required:\n        - bucketArn\n        - roleArn\n      properties:\n        bucketArn:\n          allOf:\n            - $ref: '#/components/schemas/BucketArn'\n            - description: ARN of the bucket to record to.\n        prefix:\n          allOf:\n            - $ref: '#/components/schemas/S3KeyPrefix'\n            - description: S3 Key prefix to prefice data files.\n        roleArn:\n          allOf:\n            - $ref: '#/components/schemas/RoleArn'\n            - description: ARN of the role Ground Station assumes to write data to the bucket.\n      description: Information about an S3 recording \u003ccode\u003eConfig\u003c/code\u003e.\n    TrackingConfig:\n      type: object\n      required:\n        - autotrack\n      properties:\n        autotrack:\n          allOf:\n            - $ref: '#/components/schemas/Criticality'\n            - description: Current setting for autotrack.\n      description: Object that determines whether tracking should be used during a contact executed with this \u003ccode\u003eConfig\u003c/code\u003e in the mission profile.\n    UplinkEchoConfig:\n      type: object\n      required:\n        - antennaUplinkConfigArn\n        - enabled\n      properties:\n        antennaUplinkConfigArn:\n          allOf:\n            - $ref: '#/components/schemas/ConfigArn'\n            - description: ARN of an uplink \u003ccode\u003eConfig\u003c/code\u003e.\n        enabled:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: Whether or not an uplink \u003ccode\u003eConfig\u003c/code\u003e is enabled.\n      description: '\u003cp\u003eInformation about an uplink echo \u003ccode\u003eConfig\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eParameters from the \u003ccode\u003eAntennaUplinkConfig\u003c/code\u003e, corresponding to the specified \u003ccode\u003eAntennaUplinkConfigArn\u003c/code\u003e, are used when this \u003ccode\u003eUplinkEchoConfig\u003c/code\u003e is used in a contact.\u003c/p\u003e'\n    String:\n      type: string\n    ResourceLimitExceededException: {}\n    DataflowEndpointGroupIdResponse:\n      type: object\n      properties:\n        dataflowEndpointGroupId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: UUID of a dataflow endpoint group.\n      description: \u003cp/\u003e\n    EndpointDetails:\n      type: object\n      properties:\n        endpoint:\n          allOf:\n            - $ref: '#/components/schemas/DataflowEndpoint'\n            - description: A dataflow endpoint.\n        securityDetails:\n          allOf:\n            - $ref: '#/components/schemas/SecurityDetails'\n            - description: Endpoint security details.\n      description: Information about the endpoint details.\n    MissionProfileIdResponse:\n      type: object\n      properties:\n        missionProfileId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: UUID of a mission profile.\n      description: \u003cp/\u003e\n    DataflowEdge:\n      type: array\n      items:\n        $ref: '#/components/schemas/ConfigArn'\n      minItems: 2\n      maxItems: 2\n    DescribeContactResponse:\n      type: object\n      properties:\n        contactId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: UUID of a contact.\n        contactStatus:\n          allOf:\n            - $ref: '#/components/schemas/ContactStatus'\n            - description: Status of a contact.\n        dataflowList:\n          allOf:\n            - $ref: '#/components/schemas/DataflowList'\n            - description: List describing source and destination details for each dataflow edge.\n        endTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: End time of a contact.\n        errorMessage:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Error message for a contact.\n        groundStation:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Ground station for a contact.\n        maximumElevation:\n          allOf:\n            - $ref: '#/components/schemas/Elevation'\n            - description: Maximum elevation angle of a contact.\n        missionProfileArn:\n          allOf:\n            - $ref: '#/components/schemas/MissionProfileArn'\n            - description: ARN of a mission profile.\n        postPassEndTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: Amount of time after a contact ends that you’d like to receive a CloudWatch event indicating the pass has finished.\n        prePassStartTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: Amount of time prior to contact start you’d like to receive a CloudWatch event indicating an upcoming pass.\n        region:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Region of a contact.\n        satelliteArn:\n          allOf:\n            - $ref: '#/components/schemas/satelliteArn'\n            - description: ARN of a satellite.\n        startTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: Start time of a contact.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagsMap'\n            - description: Tags assigned to a contact.\n      description: \u003cp/\u003e\n    GetConfigResponse:\n      type: object\n      required:\n        - configArn\n        - configData\n        - configId\n        - name\n      properties:\n        configArn:\n          allOf:\n            - $ref: '#/components/schemas/ConfigArn'\n            - description: 'ARN of a \u003ccode\u003eConfig\u003c/code\u003e '\n        configData:\n          allOf:\n            - $ref: '#/components/schemas/ConfigTypeData'\n            - description: Data elements in a \u003ccode\u003eConfig\u003c/code\u003e.\n        configId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: UUID of a \u003ccode\u003eConfig\u003c/code\u003e.\n        configType:\n          allOf:\n            - $ref: '#/components/schemas/ConfigCapabilityType'\n            - description: Type of a \u003ccode\u003eConfig\u003c/code\u003e.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Name of a \u003ccode\u003eConfig\u003c/code\u003e.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagsMap'\n            - description: Tags assigned to a \u003ccode\u003eConfig\u003c/code\u003e.\n      description: \u003cp/\u003e\n    GetDataflowEndpointGroupResponse:\n      type: object\n      properties:\n        dataflowEndpointGroupArn:\n          allOf:\n            - $ref: '#/components/schemas/DataflowEndpointGroupArn'\n            - description: ARN of a dataflow endpoint group.\n        dataflowEndpointGroupId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: UUID of a dataflow endpoint group.\n        endpointsDetails:\n          allOf:\n            - $ref: '#/components/schemas/EndpointDetailsList'\n            - description: Details of a dataflow endpoint.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagsMap'\n            - description: Tags assigned to a dataflow endpoint group.\n      description: \u003cp/\u003e\n    GetMinuteUsageResponse:\n      type: object\n      properties:\n        estimatedMinutesRemaining:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: 'Estimated number of minutes remaining for an account, specific to the month being requested.'\n        isReservedMinutesCustomer:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: 'Returns whether or not an account has signed up for the reserved minutes pricing plan, specific to the month being requested.'\n        totalReservedMinuteAllocation:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: 'Total number of reserved minutes allocated, specific to the month being requested.'\n        totalScheduledMinutes:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: 'Total scheduled minutes for an account, specific to the month being requested.'\n        upcomingMinutesScheduled:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: 'Upcoming minutes scheduled for an account, specific to the month being requested.'\n      description: \u003cp/\u003e\n    GetMissionProfileResponse:\n      type: object\n      properties:\n        contactPostPassDurationSeconds:\n          allOf:\n            - $ref: '#/components/schemas/DurationInSeconds'\n            - description: Amount of time after a contact ends that you’d like to receive a CloudWatch event indicating the pass has finished.\n        contactPrePassDurationSeconds:\n          allOf:\n            - $ref: '#/components/schemas/DurationInSeconds'\n            - description: Amount of time prior to contact start you’d like to receive a CloudWatch event indicating an upcoming pass.\n        dataflowEdges:\n          allOf:\n            - $ref: '#/components/schemas/DataflowEdgeList'\n            - description: 'A list of lists of ARNs. Each list of ARNs is an edge, with a \u003ci\u003efrom\u003c/i\u003e \u003ccode\u003eConfig\u003c/code\u003e and a \u003ci\u003eto\u003c/i\u003e \u003ccode\u003eConfig\u003c/code\u003e.'\n        minimumViableContactDurationSeconds:\n          allOf:\n            - $ref: '#/components/schemas/DurationInSeconds'\n            - description: Smallest amount of time in seconds that you’d like to see for an available contact. AWS Ground Station will not present you with contacts shorter than this duration.\n        missionProfileArn:\n          allOf:\n            - $ref: '#/components/schemas/MissionProfileArn'\n            - description: ARN of a mission profile.\n        missionProfileId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: UUID of a mission profile.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Name of a mission profile.\n        region:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Region of a mission profile.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagsMap'\n            - description: Tags assigned to a mission profile.\n        trackingConfigArn:\n          allOf:\n            - $ref: '#/components/schemas/ConfigArn'\n            - description: ARN of a tracking \u003ccode\u003eConfig\u003c/code\u003e.\n      description: \u003cp/\u003e\n    GetSatelliteResponse:\n      type: object\n      properties:\n        groundStations:\n          allOf:\n            - $ref: '#/components/schemas/GroundStationIdList'\n            - description: A list of ground stations to which the satellite is on-boarded.\n        noradSatelliteID:\n          allOf:\n            - $ref: '#/components/schemas/noradSatelliteID'\n            - description: NORAD satellite ID number.\n        satelliteArn:\n          allOf:\n            - $ref: '#/components/schemas/satelliteArn'\n            - description: ARN of a satellite.\n        satelliteId:\n          allOf:\n            - $ref: '#/components/schemas/Uuid'\n            - description: UUID of a satellite.\n      description: \u003cp/\u003e\n    ListConfigsResponse:\n      type: object\n      properties:\n        configList:\n          allOf:\n            - $ref: '#/components/schemas/ConfigList'\n            - description: List of \u003ccode\u003eConfig\u003c/code\u003e items.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Next token returned in the response of a previous \u003ccode\u003eListConfigs\u003c/code\u003e call. Used to get the next page of results.\n      description: \u003cp/\u003e\n    ListContactsResponse:\n      type: object\n      properties:\n        contactList:\n          allOf:\n            - $ref: '#/components/schemas/ContactList'\n            - description: List of contacts.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Next token returned in the response of a previous \u003ccode\u003eListContacts\u003c/code\u003e call. Used to get the next page of results.\n      description: \u003cp/\u003e\n    ContactStatus:\n      type: string\n      enum:\n        - AVAILABLE\n        - AWS_CANCELLED\n        - AWS_FAILED\n        - CANCELLED\n        - CANCELLING\n        - COMPLETED\n        - FAILED\n        - FAILED_TO_SCHEDULE\n        - PASS\n        - POSTPASS\n        - PREPASS\n        - SCHEDULED\n        - SCHEDULING\n    ListDataflowEndpointGroupsResponse:\n      type: object\n      properties:\n        dataflowEndpointGroupList:\n          allOf:\n            - $ref: '#/components/schemas/DataflowEndpointGroupList'\n            - description: A list of dataflow endpoint groups.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Next token returned in the response of a previous \u003ccode\u003eListDataflowEndpointGroups\u003c/code\u003e call. Used to get the next page of results.\n      description: \u003cp/\u003e\n    ListGroundStationsResponse:\n      type: object\n      properties:\n        groundStationList:\n          allOf:\n            - $ref: '#/components/schemas/GroundStationList'\n            - description: List of ground stations.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Next token that can be supplied in the next call to get the next page of ground stations.\n      description: \u003cp/\u003e\n    ListMissionProfilesResponse:\n      type: object\n      properties:\n        missionProfileList:\n          allOf:\n            - $ref: '#/components/schemas/MissionProfileList'\n            - description: List of mission profiles.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Next token returned in the response of a previous \u003ccode\u003eListMissionProfiles\u003c/code\u003e call. Used to get the next page of results.\n      description: \u003cp/\u003e\n    ListSatellitesResponse:\n      type: object\n      properties:\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Next token that can be supplied in the next call to get the next page of satellites.\n        satellites:\n          allOf:\n            - $ref: '#/components/schemas/SatelliteList'\n            - description: List of satellites.\n      description: \u003cp/\u003e\n    ListTagsForResourceResponse:\n      type: object\n      properties:\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagsMap'\n            - description: Tags assigned to a resource.\n      description: \u003cp/\u003e\n    TagResourceResponse:\n      type: object\n      properties: {}\n      description: \u003cp/\u003e\n    UntagResourceResponse:\n      type: object\n      properties: {}\n      description: \u003cp/\u003e\n    AngleUnits:\n      type: string\n      enum:\n        - DEGREE_ANGLE\n        - RADIAN\n    AntennaDemodDecodeDetails:\n      type: object\n      properties:\n        outputNode:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Name of an antenna demod decode output node used in a contact.\n      description: Details about an antenna demod decode \u003ccode\u003eConfig\u003c/code\u003e used in a contact.\n    SpectrumConfig:\n      type: object\n      required:\n        - bandwidth\n        - centerFrequency\n      properties:\n        bandwidth:\n          allOf:\n            - $ref: '#/components/schemas/FrequencyBandwidth'\n            - description: '\u003cp\u003eBandwidth of a spectral \u003ccode\u003eConfig\u003c/code\u003e. AWS Ground Station currently has the following bandwidth limitations:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eFor \u003ccode\u003eAntennaDownlinkDemodDecodeconfig\u003c/code\u003e, valid values are between 125 kHz to 650 MHz.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eFor \u003ccode\u003eAntennaDownlinkconfig\u003c/code\u003e valid values are between 10 kHz to 54 MHz.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eFor \u003ccode\u003eAntennaUplinkConfig\u003c/code\u003e, valid values are between 10 kHz to 54 MHz.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        centerFrequency:\n          allOf:\n            - $ref: '#/components/schemas/Frequency'\n            - description: Center frequency of a spectral \u003ccode\u003eConfig\u003c/code\u003e. Valid values are between 2200 to 2300 MHz and 7750 to 8400 MHz for downlink and 2025 to 2120 MHz for uplink.\n        polarization:\n          allOf:\n            - $ref: '#/components/schemas/Polarization'\n            - description: Polarization of a spectral \u003ccode\u003eConfig\u003c/code\u003e. Capturing both \u003ccode\u003e\"RIGHT_HAND\"\u003c/code\u003e and \u003ccode\u003e\"LEFT_HAND\"\u003c/code\u003e polarization requires two separate configs.\n      description: Object that describes a spectral \u003ccode\u003eConfig\u003c/code\u003e.\n    DecodeConfig:\n      type: object\n      required:\n        - unvalidatedJSON\n      properties:\n        unvalidatedJSON:\n          allOf:\n            - $ref: '#/components/schemas/JsonString'\n            - description: Unvalidated JSON of a decode \u003ccode\u003eConfig\u003c/code\u003e.\n      description: Information about the decode \u003ccode\u003eConfig\u003c/code\u003e.\n    DemodulationConfig:\n      type: object\n      required:\n        - unvalidatedJSON\n      properties:\n        unvalidatedJSON:\n          allOf:\n            - $ref: '#/components/schemas/JsonString'\n            - description: Unvalidated JSON of a demodulation \u003ccode\u003eConfig\u003c/code\u003e.\n      description: Information about the demodulation \u003ccode\u003eConfig\u003c/code\u003e.\n    UplinkSpectrumConfig:\n      type: object\n      required:\n        - centerFrequency\n      properties:\n        centerFrequency:\n          allOf:\n            - $ref: '#/components/schemas/Frequency'\n            - description: Center frequency of an uplink spectral \u003ccode\u003eConfig\u003c/code\u003e. Valid values are between 2025 to 2120 MHz.\n        polarization:\n          allOf:\n            - $ref: '#/components/schemas/Polarization'\n            - description: Polarization of an uplink spectral \u003ccode\u003eConfig\u003c/code\u003e. Capturing both \u003ccode\u003e\"RIGHT_HAND\"\u003c/code\u003e and \u003ccode\u003e\"LEFT_HAND\"\u003c/code\u003e polarization requires two separate configs.\n      description: Information about the uplink spectral \u003ccode\u003eConfig\u003c/code\u003e.\n    Eirp:\n      type: object\n      required:\n        - units\n        - value\n      properties:\n        units:\n          allOf:\n            - $ref: '#/components/schemas/EirpUnits'\n            - description: Units of an EIRP.\n        value:\n          allOf:\n            - $ref: '#/components/schemas/Double'\n            - description: Value of an EIRP. Valid values are between 20.0 to 50.0 dBW.\n      description: Object that represents EIRP.\n    Boolean:\n      type: boolean\n    BandwidthUnits:\n      type: string\n      enum:\n        - GHz\n        - MHz\n        - kHz\n    BucketArn:\n      type: string\n    CancelContactRequest:\n      type: object\n      title: CancelContactRequest\n      properties: {}\n      description: \u003cp/\u003e\n    ConfigArn:\n      type: string\n    ConfigCapabilityType:\n      type: string\n      enum:\n        - antenna-downlink\n        - antenna-downlink-demod-decode\n        - antenna-uplink\n        - dataflow-endpoint\n        - tracking\n        - uplink-echo\n        - s3-recording\n    S3RecordingDetails:\n      type: object\n      properties:\n        bucketArn:\n          allOf:\n            - $ref: '#/components/schemas/BucketArn'\n            - description: ARN of the bucket used.\n        keyTemplate:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Template of the S3 key used.\n      description: Details about an S3 recording \u003ccode\u003eConfig\u003c/code\u003e used in a contact.\n    ConfigDetails:\n      type: object\n      properties:\n        antennaDemodDecodeDetails:\n          allOf:\n            - $ref: '#/components/schemas/AntennaDemodDecodeDetails'\n            - description: Details for antenna demod decode \u003ccode\u003eConfig\u003c/code\u003e in a contact.\n        endpointDetails:\n          $ref: '#/components/schemas/EndpointDetails'\n        s3RecordingDetails:\n          allOf:\n            - $ref: '#/components/schemas/S3RecordingDetails'\n            - description: Details for an S3 recording \u003ccode\u003eConfig\u003c/code\u003e in a contact.\n      description: Details for certain \u003ccode\u003eConfig\u003c/code\u003e object types in a contact.\n    ConfigListItem:\n      type: object\n      properties:\n        configArn:\n          allOf:\n            - $ref: '#/components/schemas/ConfigArn'\n            - description: ARN of a \u003ccode\u003eConfig\u003c/code\u003e.\n        configId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: UUID of a \u003ccode\u003eConfig\u003c/code\u003e.\n        configType:\n          allOf:\n            - $ref: '#/components/schemas/ConfigCapabilityType'\n            - description: Type of a \u003ccode\u003eConfig\u003c/code\u003e.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Name of a \u003ccode\u003eConfig\u003c/code\u003e.\n      description: An item in a list of \u003ccode\u003eConfig\u003c/code\u003e objects.\n    ConfigList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ConfigListItem'\n    ConfigTypeData:\n      type: object\n      properties:\n        antennaDownlinkConfig:\n          allOf:\n            - $ref: '#/components/schemas/AntennaDownlinkConfig'\n            - description: Information about how AWS Ground Station should configure an antenna for downlink during a contact.\n        antennaDownlinkDemodDecodeConfig:\n          allOf:\n            - $ref: '#/components/schemas/AntennaDownlinkDemodDecodeConfig'\n            - description: Information about how AWS Ground Station should conﬁgure an antenna for downlink demod decode during a contact.\n        antennaUplinkConfig:\n          allOf:\n            - $ref: '#/components/schemas/AntennaUplinkConfig'\n            - description: Information about how AWS Ground Station should conﬁgure an antenna for uplink during a contact.\n        dataflowEndpointConfig:\n          allOf:\n            - $ref: '#/components/schemas/DataflowEndpointConfig'\n            - description: Information about the dataflow endpoint \u003ccode\u003eConfig\u003c/code\u003e.\n        s3RecordingConfig:\n          allOf:\n            - $ref: '#/components/schemas/S3RecordingConfig'\n            - description: Information about an S3 recording \u003ccode\u003eConfig\u003c/code\u003e.\n        trackingConfig:\n          allOf:\n            - $ref: '#/components/schemas/TrackingConfig'\n            - description: 'Object that determines whether tracking should be used during a contact executed with this \u003ccode\u003eConfig\u003c/code\u003e in the mission profile. '\n        uplinkEchoConfig:\n          allOf:\n            - $ref: '#/components/schemas/UplinkEchoConfig'\n            - description: '\u003cp\u003eInformation about an uplink echo \u003ccode\u003eConfig\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eParameters from the \u003ccode\u003eAntennaUplinkConfig\u003c/code\u003e, corresponding to the specified \u003ccode\u003eAntennaUplinkConfigArn\u003c/code\u003e, are used when this \u003ccode\u003eUplinkEchoConfig\u003c/code\u003e is used in a contact.\u003c/p\u003e'\n      description: \u003cp\u003eObject containing the parameters of a \u003ccode\u003eConfig\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eSee the subtype definitions for what each type of \u003ccode\u003eConfig\u003c/code\u003e contains.\u003c/p\u003e\n    Timestamp:\n      type: string\n      format: date-time\n    Elevation:\n      type: object\n      required:\n        - unit\n        - value\n      properties:\n        unit:\n          allOf:\n            - $ref: '#/components/schemas/AngleUnits'\n            - description: Elevation angle units.\n        value:\n          allOf:\n            - $ref: '#/components/schemas/Double'\n            - description: Elevation angle value.\n      description: Elevation angle of the satellite in the sky during a contact.\n    MissionProfileArn:\n      type: string\n    satelliteArn:\n      type: string\n    TagsMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/String'\n    ContactData:\n      type: object\n      properties:\n        contactId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: UUID of a contact.\n        contactStatus:\n          allOf:\n            - $ref: '#/components/schemas/ContactStatus'\n            - description: Status of a contact.\n        endTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: End time of a contact.\n        errorMessage:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Error message of a contact.\n        groundStation:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Name of a ground station.\n        maximumElevation:\n          allOf:\n            - $ref: '#/components/schemas/Elevation'\n            - description: Maximum elevation angle of a contact.\n        missionProfileArn:\n          allOf:\n            - $ref: '#/components/schemas/MissionProfileArn'\n            - description: ARN of a mission profile.\n        postPassEndTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: Amount of time after a contact ends that you’d like to receive a CloudWatch event indicating the pass has finished.\n        prePassStartTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: Amount of time prior to contact start you’d like to receive a CloudWatch event indicating an upcoming pass.\n        region:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Region of a contact.\n        satelliteArn:\n          allOf:\n            - $ref: '#/components/schemas/satelliteArn'\n            - description: ARN of a satellite.\n        startTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: Start time of a contact.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagsMap'\n            - description: Tags assigned to a contact.\n      description: Data describing a contact.\n    ContactList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ContactData'\n    SafeName:\n      type: string\n      pattern: '^[ a-zA-Z0-9_:-]{1,256}$'\n      minLength: 1\n      maxLength: 256\n    CreateConfigRequest:\n      type: object\n      required:\n        - configData\n        - name\n      title: CreateConfigRequest\n      properties:\n        configData:\n          allOf:\n            - $ref: '#/components/schemas/ConfigTypeData'\n            - description: Parameters of a \u003ccode\u003eConfig\u003c/code\u003e.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/SafeName'\n            - description: Name of a \u003ccode\u003eConfig\u003c/code\u003e.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagsMap'\n            - description: Tags assigned to a \u003ccode\u003eConfig\u003c/code\u003e.\n      description: \u003cp/\u003e\n    EndpointDetailsList:\n      type: array\n      items:\n        $ref: '#/components/schemas/EndpointDetails'\n    CreateDataflowEndpointGroupRequest:\n      type: object\n      required:\n        - endpointDetails\n      title: CreateDataflowEndpointGroupRequest\n      properties:\n        endpointDetails:\n          allOf:\n            - $ref: '#/components/schemas/EndpointDetailsList'\n            - description: Endpoint details of each endpoint in the dataflow endpoint group.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagsMap'\n            - description: Tags of a dataflow endpoint group.\n      description: \u003cp/\u003e\n    DurationInSeconds:\n      type: integer\n      minimum: 1\n      maximum: 21600\n    DataflowEdgeList:\n      type: array\n      items:\n        $ref: '#/components/schemas/DataflowEdge'\n    CreateMissionProfileRequest:\n      type: object\n      required:\n        - dataflowEdges\n        - minimumViableContactDurationSeconds\n        - name\n        - trackingConfigArn\n      title: CreateMissionProfileRequest\n      properties:\n        contactPostPassDurationSeconds:\n          allOf:\n            - $ref: '#/components/schemas/DurationInSeconds'\n            - description: Amount of time after a contact ends that you’d like to receive a CloudWatch event indicating the pass has finished.\n        contactPrePassDurationSeconds:\n          allOf:\n            - $ref: '#/components/schemas/DurationInSeconds'\n            - description: Amount of time prior to contact start you’d like to receive a CloudWatch event indicating an upcoming pass.\n        dataflowEdges:\n          allOf:\n            - $ref: '#/components/schemas/DataflowEdgeList'\n            - description: 'A list of lists of ARNs. Each list of ARNs is an edge, with a \u003ci\u003efrom\u003c/i\u003e \u003ccode\u003eConfig\u003c/code\u003e and a \u003ci\u003eto\u003c/i\u003e \u003ccode\u003eConfig\u003c/code\u003e.'\n        minimumViableContactDurationSeconds:\n          allOf:\n            - $ref: '#/components/schemas/DurationInSeconds'\n            - description: Smallest amount of time in seconds that you’d like to see for an available contact. AWS Ground Station will not present you with contacts shorter than this duration.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/SafeName'\n            - description: Name of a mission profile.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagsMap'\n            - description: Tags assigned to a mission profile.\n        trackingConfigArn:\n          allOf:\n            - $ref: '#/components/schemas/ConfigArn'\n            - description: ARN of a tracking \u003ccode\u003eConfig\u003c/code\u003e.\n      description: \u003cp/\u003e\n    Criticality:\n      type: string\n      enum:\n        - PREFERRED\n        - REMOVED\n        - REQUIRED\n    Destination:\n      type: object\n      properties:\n        configDetails:\n          allOf:\n            - $ref: '#/components/schemas/ConfigDetails'\n            - description: 'Additional details for a \u003ccode\u003eConfig\u003c/code\u003e, if type is dataflow endpoint or antenna demod decode.'\n        configId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: UUID of a \u003ccode\u003eConfig\u003c/code\u003e.\n        configType:\n          allOf:\n            - $ref: '#/components/schemas/ConfigCapabilityType'\n            - description: Type of a \u003ccode\u003eConfig\u003c/code\u003e.\n        dataflowDestinationRegion:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Region of a dataflow destination.\n      description: Dataflow details for the destination side.\n    Source:\n      type: object\n      properties:\n        configDetails:\n          allOf:\n            - $ref: '#/components/schemas/ConfigDetails'\n            - description: 'Additional details for a \u003ccode\u003eConfig\u003c/code\u003e, if type is dataflow endpoint or antenna demod decode.'\n        configId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: UUID of a \u003ccode\u003eConfig\u003c/code\u003e.\n        configType:\n          allOf:\n            - $ref: '#/components/schemas/ConfigCapabilityType'\n            - description: Type of a \u003ccode\u003eConfig\u003c/code\u003e.\n        dataflowSourceRegion:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Region of a dataflow source.\n      description: Dataflow details for the source side.\n    DataflowDetail:\n      type: object\n      properties:\n        destination:\n          $ref: '#/components/schemas/Destination'\n        errorMessage:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Error message for a dataflow.\n        source:\n          $ref: '#/components/schemas/Source'\n      description: Information about a dataflow edge used in a contact.\n    SocketAddress:\n      type: object\n      required:\n        - name\n        - port\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Name of a socket address.\n        port:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: Port of a socket address.\n      description: Information about the socket address.\n    DataflowEndpointMtuInteger:\n      type: integer\n      minimum: 1400\n      maximum: 1500\n    EndpointStatus:\n      type: string\n      enum:\n        - created\n        - creating\n        - deleted\n        - deleting\n        - failed\n    DataflowEndpoint:\n      type: object\n      properties:\n        address:\n          allOf:\n            - $ref: '#/components/schemas/SocketAddress'\n            - description: Socket address of a dataflow endpoint.\n        mtu:\n          allOf:\n            - $ref: '#/components/schemas/DataflowEndpointMtuInteger'\n            - description: Maximum transmission unit (MTU) size in bytes of a dataflow endpoint.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/SafeName'\n            - description: Name of a dataflow endpoint.\n        status:\n          allOf:\n            - $ref: '#/components/schemas/EndpointStatus'\n            - description: Status of a dataflow endpoint.\n      description: Information about a dataflow endpoint.\n    DataflowEndpointGroupArn:\n      type: string\n    DataflowEndpointListItem:\n      type: object\n      properties:\n        dataflowEndpointGroupArn:\n          allOf:\n            - $ref: '#/components/schemas/DataflowEndpointGroupArn'\n            - description: ARN of a dataflow endpoint group.\n        dataflowEndpointGroupId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: UUID of a dataflow endpoint group.\n      description: Item in a list of \u003ccode\u003eDataflowEndpoint\u003c/code\u003e groups.\n    DataflowEndpointGroupList:\n      type: array\n      items:\n        $ref: '#/components/schemas/DataflowEndpointListItem'\n    DataflowList:\n      type: array\n      items:\n        $ref: '#/components/schemas/DataflowDetail'\n    JsonString:\n      type: string\n      pattern: '^[{}\\[\\]:.,\"0-9A-z\\-_\\s]{2,8192}$'\n      minLength: 2\n      maxLength: 8192\n    DeleteConfigRequest:\n      type: object\n      title: DeleteConfigRequest\n      properties: {}\n      description: \u003cp/\u003e\n    DeleteDataflowEndpointGroupRequest:\n      type: object\n      title: DeleteDataflowEndpointGroupRequest\n      properties: {}\n      description: \u003cp/\u003e\n    DeleteMissionProfileRequest:\n      type: object\n      title: DeleteMissionProfileRequest\n      properties: {}\n      description: \u003cp/\u003e\n    DescribeContactRequest:\n      type: object\n      title: DescribeContactRequest\n      properties: {}\n      description: \u003cp/\u003e\n    Double:\n      type: number\n      format: double\n    EirpUnits:\n      type: string\n      enum:\n        - dBW\n    SecurityDetails:\n      type: object\n      required:\n        - roleArn\n        - securityGroupIds\n        - subnetIds\n      properties:\n        roleArn:\n          allOf:\n            - $ref: '#/components/schemas/RoleArn'\n            - description: 'ARN to a role needed for connecting streams to your instances. '\n        securityGroupIds:\n          allOf:\n            - $ref: '#/components/schemas/SecurityGroupIdList'\n            - description: The security groups to attach to the elastic network interfaces.\n        subnetIds:\n          allOf:\n            - $ref: '#/components/schemas/SubnetList'\n            - description: A list of subnets where AWS Ground Station places elastic network interfaces to send streams to your instances.\n      description: Information about endpoints.\n    FrequencyUnits:\n      type: string\n      enum:\n        - GHz\n        - MHz\n        - kHz\n    Frequency:\n      type: object\n      required:\n        - units\n        - value\n      properties:\n        units:\n          allOf:\n            - $ref: '#/components/schemas/FrequencyUnits'\n            - description: Frequency units.\n        value:\n          allOf:\n            - $ref: '#/components/schemas/Double'\n            - description: Frequency value. Valid values are between 2200 to 2300 MHz and 7750 to 8400 MHz for downlink and 2025 to 2120 MHz for uplink.\n      description: Object that describes the frequency.\n    FrequencyBandwidth:\n      type: object\n      required:\n        - units\n        - value\n      properties:\n        units:\n          allOf:\n            - $ref: '#/components/schemas/BandwidthUnits'\n            - description: Frequency bandwidth units.\n        value:\n          allOf:\n            - $ref: '#/components/schemas/Double'\n            - description: '\u003cp\u003eFrequency bandwidth value. AWS Ground Station currently has the following bandwidth limitations:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eFor \u003ccode\u003eAntennaDownlinkDemodDecodeconfig\u003c/code\u003e, valid values are between 125 kHz to 650 MHz.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eFor \u003ccode\u003eAntennaDownlinkconfig\u003c/code\u003e, valid values are between 10 kHz to 54 MHz.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eFor \u003ccode\u003eAntennaUplinkConfig\u003c/code\u003e, valid values are between 10 kHz to 54 MHz.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n      description: 'Object that describes the frequency bandwidth. '\n    GetConfigRequest:\n      type: object\n      title: GetConfigRequest\n      properties: {}\n      description: \u003cp/\u003e\n    GetDataflowEndpointGroupRequest:\n      type: object\n      title: GetDataflowEndpointGroupRequest\n      properties: {}\n      description: \u003cp/\u003e\n    Integer:\n      type: integer\n    GetMinuteUsageRequest:\n      type: object\n      required:\n        - month\n        - year\n      title: GetMinuteUsageRequest\n      properties:\n        month:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: 'The month being requested, with a value of 1-12.'\n        year:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: 'The year being requested, in the format of YYYY.'\n      description: \u003cp/\u003e\n    GetMissionProfileRequest:\n      type: object\n      title: GetMissionProfileRequest\n      properties: {}\n      description: \u003cp/\u003e\n    GetSatelliteRequest:\n      type: object\n      title: GetSatelliteRequest\n      properties: {}\n      description: \u003cp/\u003e\n    GroundStationIdList:\n      type: array\n      items:\n        $ref: '#/components/schemas/String'\n    noradSatelliteID:\n      type: integer\n      minimum: 1\n      maximum: 99999\n    Uuid:\n      type: string\n      pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'\n      minLength: 1\n      maxLength: 128\n    GroundStationData:\n      type: object\n      properties:\n        groundStationId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: UUID of a ground station.\n        groundStationName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Name of a ground station.\n        region:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Ground station Region.\n      description: Information about the ground station data.\n    GroundStationList:\n      type: array\n      items:\n        $ref: '#/components/schemas/GroundStationData'\n    ListConfigsRequest:\n      type: object\n      title: ListConfigsRequest\n      properties: {}\n      description: \u003cp/\u003e\n    StatusList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ContactStatus'\n    ListContactsRequest:\n      type: object\n      required:\n        - endTime\n        - startTime\n        - statusList\n      title: ListContactsRequest\n      properties:\n        endTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: End time of a contact.\n        groundStation:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Name of a ground station.\n        maxResults:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: Maximum number of contacts returned.\n        missionProfileArn:\n          allOf:\n            - $ref: '#/components/schemas/MissionProfileArn'\n            - description: ARN of a mission profile.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Next token returned in the request of a previous \u003ccode\u003eListContacts\u003c/code\u003e call. Used to get the next page of results.\n        satelliteArn:\n          allOf:\n            - $ref: '#/components/schemas/satelliteArn'\n            - description: ARN of a satellite.\n        startTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: Start time of a contact.\n        statusList:\n          allOf:\n            - $ref: '#/components/schemas/StatusList'\n            - description: Status of a contact reservation.\n      description: \u003cp/\u003e\n    ListDataflowEndpointGroupsRequest:\n      type: object\n      title: ListDataflowEndpointGroupsRequest\n      properties: {}\n      description: \u003cp/\u003e\n    ListGroundStationsRequest:\n      type: object\n      title: ListGroundStationsRequest\n      properties: {}\n      description: \u003cp/\u003e\n    ListMissionProfilesRequest:\n      type: object\n      title: ListMissionProfilesRequest\n      properties: {}\n      description: \u003cp/\u003e\n    MissionProfileList:\n      type: array\n      items:\n        $ref: '#/components/schemas/MissionProfileListItem'\n    ListSatellitesRequest:\n      type: object\n      title: ListSatellitesRequest\n      properties: {}\n      description: \u003cp/\u003e\n    SatelliteList:\n      type: array\n      items:\n        $ref: '#/components/schemas/SatelliteListItem'\n    ListTagsForResourceRequest:\n      type: object\n      title: ListTagsForResourceRequest\n      properties: {}\n      description: \u003cp/\u003e\n    MissionProfileListItem:\n      type: object\n      properties:\n        missionProfileArn:\n          allOf:\n            - $ref: '#/components/schemas/MissionProfileArn'\n            - description: ARN of a mission profile.\n        missionProfileId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: UUID of a mission profile.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Name of a mission profile.\n        region:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Region of a mission profile.\n      description: Item in a list of mission profiles.\n    Polarization:\n      type: string\n      enum:\n        - LEFT_HAND\n        - NONE\n        - RIGHT_HAND\n    ReserveContactRequest:\n      type: object\n      required:\n        - endTime\n        - groundStation\n        - missionProfileArn\n        - satelliteArn\n        - startTime\n      title: ReserveContactRequest\n      properties:\n        endTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: End time of a contact.\n        groundStation:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Name of a ground station.\n        missionProfileArn:\n          allOf:\n            - $ref: '#/components/schemas/MissionProfileArn'\n            - description: ARN of a mission profile.\n        satelliteArn:\n          allOf:\n            - $ref: '#/components/schemas/satelliteArn'\n            - description: ARN of a satellite\n        startTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: Start time of a contact.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagsMap'\n            - description: Tags assigned to a contact.\n      description: \u003cp/\u003e\n    RoleArn:\n      type: string\n    S3KeyPrefix:\n      type: string\n      pattern: '^([a-zA-Z0-9_\\-=/]|\\{satellite_id\\}|\\{config\\-name}|\\{s3\\-config-id}|\\{year\\}|\\{month\\}|\\{day\\}){1,900}$'\n      minLength: 1\n      maxLength: 900\n    SatelliteListItem:\n      type: object\n      properties:\n        groundStations:\n          allOf:\n            - $ref: '#/components/schemas/GroundStationIdList'\n            - description: A list of ground stations to which the satellite is on-boarded.\n        noradSatelliteID:\n          allOf:\n            - $ref: '#/components/schemas/noradSatelliteID'\n            - description: NORAD satellite ID number.\n        satelliteArn:\n          allOf:\n            - $ref: '#/components/schemas/satelliteArn'\n            - description: ARN of a satellite.\n        satelliteId:\n          allOf:\n            - $ref: '#/components/schemas/Uuid'\n            - description: UUID of a satellite.\n      description: Item in a list of satellites.\n    SecurityGroupIdList:\n      type: array\n      items:\n        $ref: '#/components/schemas/String'\n    SubnetList:\n      type: array\n      items:\n        $ref: '#/components/schemas/String'\n    TagKeys:\n      type: array\n      items:\n        $ref: '#/components/schemas/String'\n    TagResourceRequest:\n      type: object\n      required:\n        - tags\n      title: TagResourceRequest\n      properties:\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagsMap'\n            - description: Tags assigned to a resource.\n      description: \u003cp/\u003e\n    UntagResourceRequest:\n      type: object\n      title: UntagResourceRequest\n      properties: {}\n      description: \u003cp/\u003e\n    UpdateConfigRequest:\n      type: object\n      required:\n        - configData\n        - name\n      title: UpdateConfigRequest\n      properties:\n        configData:\n          allOf:\n            - $ref: '#/components/schemas/ConfigTypeData'\n            - description: Parameters of a \u003ccode\u003eConfig\u003c/code\u003e.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/SafeName'\n            - description: Name of a \u003ccode\u003eConfig\u003c/code\u003e.\n      description: \u003cp/\u003e\n    UpdateMissionProfileRequest:\n      type: object\n      title: UpdateMissionProfileRequest\n      properties:\n        contactPostPassDurationSeconds:\n          allOf:\n            - $ref: '#/components/schemas/DurationInSeconds'\n            - description: Amount of time after a contact ends that you’d like to receive a CloudWatch event indicating the pass has finished.\n        contactPrePassDurationSeconds:\n          allOf:\n            - $ref: '#/components/schemas/DurationInSeconds'\n            - description: Amount of time after a contact ends that you’d like to receive a CloudWatch event indicating the pass has finished.\n        dataflowEdges:\n          allOf:\n            - $ref: '#/components/schemas/DataflowEdgeList'\n            - description: 'A list of lists of ARNs. Each list of ARNs is an edge, with a \u003ci\u003efrom\u003c/i\u003e \u003ccode\u003eConfig\u003c/code\u003e and a \u003ci\u003eto\u003c/i\u003e \u003ccode\u003eConfig\u003c/code\u003e.'\n        minimumViableContactDurationSeconds:\n          allOf:\n            - $ref: '#/components/schemas/DurationInSeconds'\n            - description: Smallest amount of time in seconds that you’d like to see for an available contact. AWS Ground Station will not present you with contacts shorter than this duration.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/SafeName'\n            - description: Name of a mission profile.\n        trackingConfigArn:\n          allOf:\n            - $ref: '#/components/schemas/ConfigArn'\n            - description: ARN of a tracking \u003ccode\u003eConfig\u003c/code\u003e.\n      description: \u003cp/\u003e\nsecurity:\n  - hmac: []\n",
			"canonicalURL": "/github.com/EMResearch/EvoMaster@8378d4a862866198d1e37579c50f98e04429034a/-/blob/core-it/src/test/resources/APIs_guru/amazonaws.com/groundstation/2019-05-23/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/EMResearch/EvoMaster/blob/8378d4a862866198d1e37579c50f98e04429034a/core-it/src/test/resources/APIs_guru/amazonaws.com/groundstation/2019-05-23/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: at 1:86389: duplicate path: \"/tags/{resourceArn}#tagKeys\""
}