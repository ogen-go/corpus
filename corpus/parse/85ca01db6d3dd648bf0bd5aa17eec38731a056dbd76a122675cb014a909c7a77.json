{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/levigo/neverpile-eureka"
		},
		"file": {
			"name": "eureka-core-multiversioning.yaml",
			"size": 0,
			"path": "neverpile-eureka-core/src/main/resources/com/neverpile/eureka/eureka-core-multiversioning.yaml",
			"byteSize": 4440,
			"content": "openapi: 3.0.1\n\ninfo:\n  title: Neverpile eureka API\n  contact:\n    name: levigo solutions gmbh\n    url: https://levigo.de\n    email: solutions@levigo.de\n  version: 1.0.0\n\npaths:\n  /api/v1/documents/{documentID}/history/{versionTimestamp}:\n    get:\n      tags:\n      - Document\n      summary: Fetches a particular version of a document by ID\n      \n      parameters:\n      - name: documentID\n        in: path\n        description: The ID of the document to be fetched\n        required: true\n        schema:\n          type: string\n      - name: versionTimestamp\n        in: path\n        description: The timestamp of the version to be queried\n        schema:\n          type: string\n          format: date-time\n        required: true\n      - name: facets\n        in: query\n        description: The list of facets to be included in the response; return all\n          facets if empty\n        allowEmptyValue: false\n        style: form\n        explode: true\n        schema:\n          type: array\n          items:\n            type: string\n            \n      responses:\n        200:\n          description: Document found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Document'\n          headers: \n            X-NPE-Document-Version-Timestamp:\n              $ref: '#/components/headers/X-NPE-Document-Version-Timestamp'\n        400:\n          description: Invalid documentID supplied\n        404:\n          description: Document or version not found\n          \n  /api/v1/documents/{documentID}/history/{versionTimestamp}/content:\n    get:\n      tags:\n      - Content\n      summary: Queries a particular document version for content elements\n\n      parameters:\n      - name: documentID\n        in: path\n        description: ID of the document\n        required: true\n        schema:\n          type: string\n      - name: versionTimestamp\n        in: path\n        description: The timestamp of the version to be queried\n        schema:\n          type: string\n          format: date-time\n        required: true\n      - name: return\n        in: query\n        description: Specify what and how to return\n        allowEmptyValue: false\n        schema:\n          type: string\n          default: first\n          description: Enum values are\n            * `only` - return the only matching element, assuming there is exactly one match. Return an error `406` otherwise.\n            * `first`- return just the first matching element, assuming there is at least one match. Return `404` otherwise.\n            * `all`- all matching elements as a stream of type `multipart/mixed`.\n          enum:\n          - only\n          - first\n          - all\n      - name: role\n        in: query\n        description: Role(s) of the content elements to be fetched. Multiple roles\n          can be specified separated by comma\n        required: false\n        allowEmptyValue: false\n        style: form\n        explode: true\n        schema:\n          type: array\n          items:\n            type: string\n      responses:\n        200:\n          description: Content element found\n          content:\n            multipart/mixed:\n              schema:\n                description: \"Multiple content elements as a RFC 2046 multipart stream. Each part has the following headers\n                  (see headers section for details):\n                  * `Content-Disposition`\n                  * `Last-Modified`\n                  * `Content-Type`\n                  * `Content-Length`\n                  * `ETag`\n                  * `Digest`\n                  * `X-NPE-Document-Version-Timestamp`\"\n                type: string\n                format: byte\n            '*/*':\n              schema:\n                type: string\n                format: byte\n          headers: \n            X-NPE-Document-Version-Timestamp:\n              $ref: '#/components/headers/X-NPE-Document-Version-Timestamp'\n            Last-Modified:\n              $ref: '#/components/headers/Last-Modified'\n            Content-Length:\n              $ref: '#/components/headers/Content-Length'\n            ETag:\n              $ref: '#/components/headers/ETag'\n            Digest:\n              $ref: '#/components/headers/Digest'\n        404:\n          description: Document or content element not found\n        406:\n          description: The query could not be satisfied, e.g. there was more than one match\n            with return mode `only`.\n\n",
			"canonicalURL": "/github.com/levigo/neverpile-eureka@72e9e3e3f7ec10995802a3269d74345568569ed4/-/blob/neverpile-eureka-core/src/main/resources/com/neverpile/eureka/eureka-core-multiversioning.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/levigo/neverpile-eureka/blob/72e9e3e3f7ec10995802a3269d74345568569ed4/neverpile-eureka-core/src/main/resources/com/neverpile/eureka/eureka-core-multiversioning.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/api/v1/documents/{documentID}/history/{versionTimestamp}\": get: responses: 200: content: application/json: schema: at 1:853: parse schema: resolve \"#/components/schemas/Document\": find schema: resolve: can't find value for \"components/schemas/Document\""
}