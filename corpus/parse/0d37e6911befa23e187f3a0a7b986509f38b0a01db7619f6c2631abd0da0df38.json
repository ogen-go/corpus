{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/uastech/standards"
		},
		"file": {
			"name": "canonical.yaml",
			"size": 0,
			"path": "remoteid/canonical.yaml",
			"byteSize": 81953,
			"content": "openapi: 3.0.2\ninfo:\n  title: Standard Remote ID API Interfaces\n  version: 2.1.0\n  description: |-\n    Interface to Discovery and Synchronization Service and service providers used by participating clients to discover and inform other service providers.\n    [Github](https://github.com/uastech/standards/tree/astm_rid_api_2.1)\n\n    Although the ASTM Specification is version 1.1, the version of the API (this YAML) is 2.1\n\n    Unless otherwise specified, fields specified in a message but not declared\n    in the API must be ignored.\n\n    Whenever a object-type field may be omitted, it may also be set to null for\n    the same effect.\npaths:\n  /dss/identification_service_areas:\n    summary: Set of Identification Service Areas in the DSS.\n    description: ''\n    get:\n      tags:\n      - dss\n      operationId: searchIdentificationServiceAreas\n      parameters:\n      - name: area\n        description: The area in which to search for Identification Service Areas.  Some\n          Identification Service Areas near this area but wholly outside it may also\n          be returned.\n        schema:\n          $ref: '#/components/schemas/GeoPolygonString'\n        in: query\n        required: true\n      - name: earliest_time\n        description: If specified, indicates non-interest in any Identification Service\n          Areas that end before this time.  RFC 3339 format, per OpenAPI specification.\n          The time zone must be 'Z'.\n        schema:\n          format: date-time\n          type: string\n        in: query\n        required: true\n      - name: latest_time\n        description: If specified, indicates non-interest in any Identification Service\n          Areas that start after this time.  RFC 3339 format, per OpenAPI specification.\n          The time zone must be 'Z'.\n        schema:\n          format: date-time\n          type: string\n        in: query\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchIdentificationServiceAreasResponse'\n          description: Identification Service Areas were successfully retrieved.\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: One or more input parameters were missing or invalid.\n        401:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Bearer access token was not provided in Authorization header,\n            token could not be decoded, or token was invalid.\n        403:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The access token was decoded successfully but did not include\n            a scope appropriate to this endpoint.\n        413:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The requested area was too large.\n      security:\n      - Authority:\n        - rid.display_provider\n      summary: /dss/identification_service_areas\n      description: Retrieve all Identification Service Areas in the DAR for a given\n        area during the given time.  Note that some Identification Service Areas returned\n        may lie entirely outside the requested area.\n  /dss/identification_service_areas/{id}:\n    summary: An Identification Service Area in the DSS.\n    get:\n      tags:\n      - dss\n      operationId: getIdentificationServiceArea\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetIdentificationServiceAreaResponse'\n          description: Full information of the Identification Service Area was retrieved\n            successfully.\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: One or more input parameters were missing or invalid.\n        401:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Bearer access token was not provided in Authorization header,\n            token could not be decoded, or token was invalid.\n        403:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The access token was decoded successfully but did not include\n            a scope appropriate to this endpoint.\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The requested Entity could not be found.\n      security:\n      - Authority:\n        - rid.display_provider\n      summary: /dss/identification_service_areas/{id}\n      description: Retrieve full information of an Identification Service Area owned\n        by the client.\n    put:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateIdentificationServiceAreaParameters'\n        required: true\n      tags:\n      - dss\n      operationId: createIdentificationServiceArea\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutIdentificationServiceAreaResponse'\n          description: An existing Identification Service Area was created successfully\n            in the DSS.\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: |-\n            * One or more input parameters were missing or invalid.\n            * The request attempted to mutate the Identification Service Area in a disallowed way.\n        401:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Bearer access token was not provided in Authorization header,\n            token could not be decoded, or token was invalid.\n        403:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The access token was decoded successfully but did not include\n            a scope appropriate to this endpoint.\n        409:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: |-\n            * An Identification Service Area with the specified ID already exists and is owned by a different client.\n            * Despite repeated attempts, the DSS was unable to update the DAR because of other simultaneous changes.\n        413:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The area of the Identification Service Area is too large.\n      security:\n      - Authority:\n        - rid.service_provider\n      summary: /dss/identification_service_areas/{id}\n      description: |-\n        Create a new Identification Service Area.  This call will fail if an Identification Service Area with the same ID already exists.\n\n        The DSS assumes the USS has already added the appropriate retention period to operation end time in `time_end` field before storing it.\n    parameters:\n    - name: id\n      description: EntityUUID of the Identification Service Area.\n      schema:\n        $ref: '#/components/schemas/EntityUUID'\n      in: path\n      required: true\n  /dss/identification_service_areas/{id}/{version}:\n    summary: A specific version of an Identification Service Area in the DSS.\n    put:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateIdentificationServiceAreaParameters'\n        required: true\n      tags:\n      - dss\n      operationId: updateIdentificationServiceArea\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutIdentificationServiceAreaResponse'\n          description: An existing Identification Service Area was updated successfully\n            in the DSS.\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: |-\n            * One or more input parameters were missing or invalid.\n            * The request attempted to mutate the Identification Service Area in a disallowed way.\n        401:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Bearer access token was not provided in Authorization header,\n            token could not be decoded, or token was invalid.\n        403:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The access token was decoded successfully but did not include\n            a scope appropriate to this endpoint.\n        409:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: |-\n            * The specified Identification Service Area's current version does not match the provided version.\n            * Despite repeated attempts, the DSS was unable to update the DAR because of other simultaneous changes.\n        413:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The area of the Identification Service Area is too large.\n      security:\n      - Authority:\n        - rid.service_provider\n      summary: /dss/identification_service_areas/{id}/{version}\n      description: |-\n        Update an Identification Service Area.  The full content of the existing Identification Service Area will be replaced with the provided information as only the most recent version is retained.\n\n        The DSS assumes the USS has already added the appropriate retention period to operation end time in `time_end` field before storing it.  Updating `time_start` is not allowed if it is before the current time.\n    delete:\n      tags:\n      - dss\n      operationId: deleteIdentificationServiceArea\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteIdentificationServiceAreaResponse'\n          description: Identification Service Area was successfully deleted from DSS.\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: One or more input parameters were missing or invalid.\n        401:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Bearer access token was not provided in Authorization header,\n            token could not be decoded, or token was invalid.\n        403:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: |-\n            * The access token was decoded successfully but did not include a scope appropriate to this endpoint.\n            * The Identification Service Area does not belong to the client requesting deletion.\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Entity could not be deleted because it could not be found.\n        409:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: |-\n            * The specified Identification Service Area's current version does not match the provided version.\n            * Despite repeated attempts, the DSS was unable to update the DAR because of other simultaneous changes.\n      security:\n      - Authority:\n        - rid.service_provider\n      summary: /dss/identification_service_areas/{id}/{version}\n      description: Delete an Identification Service Area.  USSs should not delete\n        Identification Service Areas before the end of the last managed flight plus\n        the retention period.\n    parameters:\n    - name: id\n      description: EntityUUID of the Identification Service Area.\n      schema:\n        $ref: '#/components/schemas/EntityUUID'\n      in: path\n      required: true\n    - name: version\n      description: Version string used to reference an Identification Service Area\n        at a particular point in time. Any updates to an existing Identification Service\n        Area must contain the corresponding version to maintain idempotent updates.\n      schema:\n        type: string\n      in: path\n      required: true\n  /uss/flights:\n    summary: Basic operation details to meet remote ID requirements.\n    description: This endpoint may be polled by remote ID display providers to display\n      basic aircraft activity near a user in real time.\n    get:\n      tags:\n      - sp\n      operationId: searchFlights\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetFlightsResponse'\n          description: Flight information was successfully retrieved.\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: One or more input parameters were missing or invalid.\n        401:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Bearer access token was not provided in Authorization header,\n            token could not be decoded, or token was invalid.\n        403:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The access token was decoded successfully but did not include\n            a scope appropriate to this endpoint.\n        413:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The requested view rectangle was too large.\n      security:\n      - Authority:\n        - rid.display_provider\n      summary: /uss/flights\n      description: Retrieve basic flight information from a remote ID service provider\n        to meet remote ID requirements.  This endpoint will be polled by remote ID\n        display providers to display basic aircraft activity near a user in real time.  All\n        flights that have any recent positions (past [NetUasInAreaWindow] seconds)\n        inside the requested view and time frame must be returned.\n    parameters:\n    - name: view\n      description: 'The area of this view: lat1,lng1,lat2,lng2.  Size may not exceed\n        a diagonal length specified in the standard.  The view is the smallest box\n        bounded by the provided corner points.'\n      schema:\n        type: string\n        example: 29.97816,31.13296,29.98025,31.13535\n      in: query\n      required: true\n    - name: recent_positions_duration\n      description: |-\n        If specified as greater than zero, include at least the recent positions within the most recent specified duration in seconds.  Otherwise, do not include recent positions.\n\n        A display provider's first poll of this endpoint for a particular view will usually request all recent positions while follow-up polls for that same view will usually not need to request all recent positions.\n      schema:\n        type: number\n        format: float\n        minimum: 0\n        maximum: 60\n      example: 60\n      in: query\n  /uss/flights/{id}/details:\n    summary: A remote ID flight reported by a remote ID service provider.\n    get:\n      tags:\n      - sp\n      operationId: getFlightDetails\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetFlightDetailsResponse'\n          description: Flight details were successfully retrieved.\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: One or more input parameters were missing or invalid.\n        401:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Bearer access token was not provided in Authorization header,\n            token could not be decoded, or token was invalid.\n        403:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The access token was decoded successfully but did not include\n            a scope appropriate to this endpoint.\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The requested flight could not be found.\n      security:\n      - Authority:\n        - rid.display_provider\n      summary: /uss/flights/{id}/details\n      description: Retrieve details of a flight from a remote ID service provider\n        to meet remote ID requirements.\n    parameters:\n    - name: id\n      description: Remote ID flight ID for this flight; may be obtained in general\n        /flights query.\n      schema:\n        $ref: '#/components/schemas/RIDFlightID'\n      in: path\n      required: true\n  /dss/subscriptions:\n    summary: Subscriptions for airspace updates to a volume of interest.\n    get:\n      tags:\n      - dss\n      operationId: searchSubscriptions\n      parameters:\n      - name: area\n        description: The area in which to search for Subscriptions.  Some Subscriptions\n          near this area but wholly outside it may also be returned.\n        schema:\n          $ref: '#/components/schemas/GeoPolygonString'\n        in: query\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchSubscriptionsResponse'\n          description: Subscriptions were retrieved successfully.\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: One or more input parameters were missing or invalid.\n        401:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Bearer access token was not provided in Authorization header,\n            token could not be decoded, or token was invalid.\n        403:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The access token was decoded successfully but did not include\n            a scope appropriate to this endpoint.\n        413:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The requested area was too large.\n      security:\n      - Authority:\n        - rid.display_provider\n      summary: /dss/subscriptions\n      description: |-\n        Retrieve subscriptions intersecting an area of interest.  Subscription notifications are only triggered by (and contain full information of) changes to, creation of, or deletion of, Entities referenced by or stored in the DSS; they do not involve any data transfer (such as remote ID telemetry updates) apart from Entity information.\n\n        Only Subscriptions belonging to the caller are returned.  This endpoint would be used if a USS lost track of Subscriptions they had created and/or wanted to resolve an error indicating that they had too many existing Subscriptions in an area.\n  /dss/subscriptions/{id}:\n    summary: Subscription for airspace updates to a volume of interest.\n    get:\n      tags:\n      - dss\n      operationId: getSubscription\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetSubscriptionResponse'\n          description: Subscription information was retrieved successfully.\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: One or more input parameters were missing or invalid.\n        401:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Bearer access token was not provided in Authorization header,\n            token could not be decoded, or token was invalid.\n        403:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The access token was decoded successfully but did not include\n            a scope appropriate to this endpoint.\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: A Subscription with the specified ID was not found.\n      security:\n      - Authority:\n        - rid.display_provider\n      - Authority:\n        - rid.service_provider\n      summary: /dss/subscriptions/{id}\n      description: Verify the existence/valdity and state of a particular subscription.\n    put:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateSubscriptionParameters'\n        required: true\n      tags:\n      - dss\n      operationId: createSubscription\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutSubscriptionResponse'\n          description: A new Subscription was created successfully.\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: |-\n            * One or more input parameters were missing or invalid.\n            * The request attempted to mutate the Subscription in a disallowed way.\n        401:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Bearer access token was not provided in Authorization header,\n            token could not be decoded, or token was invalid.\n        403:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: |-\n            * The access token was decoded successfully but did not include a scope appropriate to this endpoint or the request.\n        409:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: |-\n            * A Subscription with the specified ID already exists and is owned by a different client.\n            * Despite repeated attempts, the DSS was unable to update the DAR because of other simultaneous changes.\n        429:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Client already has too many Subscriptions in the area where\n            a new Subscription was requested.  To correct this problem, the client\n            may query GET /subscriptions to see which Subscriptions are counting against\n            their limit.  This problem should not generally be encountered because\n            the Subscription limit should be above what any consumer that reasonably\n            aggregates their Subscriptions should request.  But, a Subscription limit\n            is necessary to bound performance requirements for DSS instances and would\n            likely be hit by, e.g., a large remote ID display provider that created\n            a Subscription for each of their display client users' views.\n      security:\n      - Authority:\n        - rid.display_provider\n      summary: /dss/subscriptions/{id}\n      description: |-\n        Create a subscription.  This call will fail if a Subscription with the same ID already exists.\n\n        Subscription notifications are only triggered by (and contain full information of) changes to, creation of, or deletion of, Entities referenced by or stored in the DSS; they do not involve any data transfer (such as remote ID telemetry updates) apart from Entity information.\n    parameters:\n    - name: id\n      description: SubscriptionUUID of the subscription of interest.\n      schema:\n        $ref: '#/components/schemas/SubscriptionUUID'\n      in: path\n      required: true\n  /dss/subscriptions/{id}/{version}:\n    summary: Specific version of a Subscription for airspace updates to a volume of\n      interest.\n    put:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateSubscriptionParameters'\n        required: true\n      tags:\n      - dss\n      operationId: updateSubscription\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutSubscriptionResponse'\n          description: An existing Subscription was updated successfully.\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: |-\n            * One or more input parameters were missing or invalid.\n            * The request attempted to mutate the Subscription in a disallowed way.\n        401:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Bearer access token was not provided in Authorization header,\n            token could not be decoded, or token was invalid.\n        403:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: |-\n            * The access token was decoded successfully but did not include a scope appropriate to this endpoint or the request.\n        409:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: |-\n            * The specified Subscriptions's current version does not match the provided version.\n            * Despite repeated attempts, the DSS was unable to update the DAR because of other simultaneous changes.\n        429:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Client already has too many Subscriptions in the area where\n            a new Subscription was requested.  To correct this problem, the client\n            may query GET /subscriptions to see which Subscriptions are counting against\n            their limit.  This problem should not generally be encountered because\n            the Subscription limit should be above what any consumer that reasonably\n            aggregates their Subscriptions should request.  But, a Subscription limit\n            is necessary to bound performance requirements for DSS instances and would\n            likely be hit by, e.g., a large remote ID display provider that created\n            a Subscription for each of their display client users' views.\n      security:\n      - Authority:\n        - rid.display_provider\n      summary: /dss/subscriptions/{id}/{version}\n      description: |-\n        Update a Subscription.  The full content of the existing Subscription will be replaced with the provided information as only the most recent version is retained.\n\n        Subscription notifications are only triggered by (and contain full information of) changes to, creation of, or deletion of, Entities referenced by or stored in the DSS; they do not involve any data transfer (such as remote ID telemetry updates) apart from Entity information.\n    delete:\n      tags:\n      - dss\n      operationId: deleteSubscription\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteSubscriptionResponse'\n          description: Subscription was deleted successfully.\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: One or more input parameters were missing or invalid.\n        401:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Bearer access token was not provided in Authorization header,\n            token could not be decoded, or token was invalid.\n        403:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: |-\n            * The access token was decoded successfully but did not include a scope appropriate to this endpoint.\n            * The Entity does not belong to the client requesting deletion.\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Subscription could not be deleted because it could not be found.\n        409:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: |-\n            * The specified Subscriptions's current version does not match the provided version.\n            * Despite repeated attempts, the DSS was unable to update the DAR because of other simultaneous changes.\n      security:\n      - Authority:\n        - rid.display_provider\n      summary: /dss/subscriptions/{id}/{version}\n      description: Delete a subscription.\n    parameters:\n    - name: id\n      description: SubscriptionUUID of the subscription of interest.\n      schema:\n        $ref: '#/components/schemas/SubscriptionUUID'\n      in: path\n      required: true\n    - name: version\n      description: Version string used to reference a Subscription at a particular\n        point in time. Any updates to an existing Subscription must contain the corresponding\n        version to maintain idempotent updates.\n      schema:\n        type: string\n      in: path\n      required: true\n  /uss/identification_service_areas/{id}:\n    get:\n      tags:\n      - sp\n      operationId: getIdentificationServiceAreaDetails\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetIdentificationServiceAreaDetailsResponse'\n          description: Details of the Identification Service Area were retrieved successfully.\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: One or more input parameters were missing or invalid.\n        401:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Bearer access token was not provided in Authorization header,\n            token could not be decoded, or token was invalid.\n        403:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The access token was decoded successfully but did not include\n            a scope appropriate to this endpoint.\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The requested Entity could not be found.\n      security:\n      - Authority:\n        - rid.display_provider\n      summary: /uss/identification_service_areas/{id}\n      description: Retrieve details of an Identification Service Area owned by the\n        client.\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutIdentificationServiceAreaNotificationParameters'\n        required: true\n      tags:\n      - dp\n      operationId: postIdentificationServiceArea\n      responses:\n        204:\n          description: Information for Identification Service Area was updated successfully.\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: |-\n            * One or more parameters were missing or invalid.\n            * The Identification Service Area information could not be parsed, or contains illegal data.\n        401:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Bearer access token was not provided in Authorization header,\n            token could not be decoded, or token was invalid.\n        403:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: |-\n            * The access token was decoded successfully but did not include a scope appropriate to this endpoint.\n            * The client identified in the access token is not the owner of this Entity according to the receiving client's records.\n        409:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The Entity version specified in this message is identical to\n            a previously-received notification and the Entity is different.\n      security:\n      - Authority:\n        - rid.service_provider\n      summary: /uss/identification_service_areas/{id}\n      description: 'Hosted by a remote ID display provider using Subscriptions: publish\n        new full information of an Identification Service Area to the host of this\n        endpoint (usually because of instructions from the DSS triggered by a subscription).'\n    parameters:\n    - name: id\n      description: EntityUUID of the Identification Service Area.\n      schema:\n        $ref: '#/components/schemas/EntityUUID'\n      in: path\n      required: true\ncomponents:\n  schemas:\n    Time:\n      required:\n      - value\n      - format\n      type: object\n      properties:\n        value:\n          type: string\n          description: \u003e-\n            RFC3339-formatted time/date string.  The time zone must be 'Z'.\n          format: date-time\n          example: '1985-04-12T23:20:50.52Z'\n        format:\n          type: string\n          enum:\n          - RFC3339\n    Radius:\n      required:\n      - value\n      - units\n      type: object\n      properties:\n        value:\n          format: float\n          description: \u003e-\n            Distance from the centerpoint of a circular area, along the WGS84\n            ellipsoid.\n          type: number\n          minimum: 0\n          exclusiveMinimum: true\n          example: 300.183\n        units:\n          type: string\n          description: \u003e-\n            FIXM-compatible units.  Only meters (\"M\") are acceptable for UTM.\n          enum:\n          - M\n    Circle:\n      description: A circular area on the surface of the earth.\n      type: object\n      properties:\n        center:\n          $ref: '#/components/schemas/LatLngPoint'\n        radius:\n          $ref: '#/components/schemas/Radius'\n    Volume3D:\n      description: \u003e-\n        A three-dimensional geographic volume consisting of a\n        vertically-extruded shape. Exactly one outline must be specified.\n      type: object\n      properties:\n        outline_circle:\n          anyOf:\n          - $ref: '#/components/schemas/Circle'\n          description: A circular geographic shape on the surface of the earth.\n        outline_polygon:\n          anyOf:\n          - $ref: '#/components/schemas/Polygon'\n          description: \u003e-\n            A polygonal geographic shape on the surface of the earth.\n        altitude_lower:\n          description: \u003e-\n            Minimum bounding altitude of this volume. Must be less than\n            altitude_upper, if specified.\n          anyOf:\n          - $ref: '#/components/schemas/Altitude'\n        altitude_upper:\n          description: \u003e-\n            Maximum bounding altitude of this volume. Must be greater than\n            altitude_lower, if specified.\n          anyOf:\n          - $ref: '#/components/schemas/Altitude'\n    Volume4D:\n      description: Contiguous block of geographic spacetime.\n      required:\n      - volume\n      type: object\n      properties:\n        volume:\n          $ref: '#/components/schemas/Volume3D'\n        time_start:\n          description: Beginning time of this volume. Must be before time_end.\n          anyOf:\n          - $ref: '#/components/schemas/Time'\n        time_end:\n          description: End time of this volume. Must be after time_start.\n          anyOf:\n          - $ref: '#/components/schemas/Time'\n    GetSubscriptionResponse:\n      description: Response to DSS request for the subscription with the given id.\n      required:\n      - subscription\n      type: object\n      properties:\n        subscription:\n          $ref: '#/components/schemas/Subscription'\n    SearchSubscriptionsResponse:\n      description: Response to DSS query for subscriptions in a particular area.\n      type: object\n      properties:\n        subscriptions:\n          description: Subscriptions that overlap the specified area.\n          type: array\n          items:\n            $ref: '#/components/schemas/Subscription'\n          default: []\n    GetFlightsResponse:\n      description: Response to remote ID provider query for flight information in\n        an area of interest.\n      required:\n      - timestamp\n      type: object\n      properties:\n        timestamp:\n          description: The remote ID service provider's timestamp for when this information\n            was current.\n          anyOf:\n          - $ref: '#/components/schemas/Time'\n        flights:\n          description: A list of all flights that have been within the requested area\n            within the remote ID retention period.  This includes flights that are\n            not currently within the requested area, but were within the requested\n            area within the remote ID retention period.  Aircraft that are not in\n            flight, and have not been in flight within the retention period, should\n            not be included in this list.\n          type: array\n          items:\n            $ref: '#/components/schemas/RIDFlight'\n          default: []\n        no_isas_present:\n          type: boolean\n          default: false\n          description: The requested view is entirely outside any remote ID service\n            provision areas (Identification Service Area volumes) this provider has.  A\n            display provider receiving this response should discontinue polling for\n            this endpoint for the view port requested until otherwise directed by\n            DSS interactions.\n    URL:\n      description: Valid http or https URL.\n      type: string\n    SubscriptionNotificationIndex:\n      format: int32\n      description: Tracks the notifications sent for a subscription so the subscriber\n        can detect missed notifications more easily.\n      type: integer\n    SubscriptionState:\n      description: State of Subscription which is causing a notification to be sent.\n      required:\n      - subscription_id\n      type: object\n      properties:\n        subscription_id:\n          $ref: '#/components/schemas/SubscriptionUUID'\n        notification_index:\n          anyOf:\n          - $ref: '#/components/schemas/SubscriptionNotificationIndex'\n          default: 0\n    UUIDv4:\n      description: UUID v4.\n      maxLength: 36\n      minLength: 36\n      type: string\n      example: 03e5572a-f733-49af-bc14-8a18bd53ee39\n    Version:\n      description: A version string used to reference an object at a particular point\n        in time. Any updates to an object must contain the corresponding version to\n        maintain idempotent updates.\n      type: string\n    EntityUUID:\n      anyOf:\n      - $ref: '#/components/schemas/UUIDv4'\n      description: Universally-unique identifier for an Entity communicated through\n        the DSS.  Formatted as UUIDv4.\n    SubscriptionUUID:\n      anyOf:\n      - $ref: '#/components/schemas/UUIDv4'\n      description: Universally-unique identifier for a Subscription communicated through\n        the DSS.  Formatted as UUIDv4.\n    RIDFlightID:\n      description: |-\n        ID, unique to a remote ID service provider, which identifies a particular flight for which the remote ID service provider is providing remote ID services.\n\n        The following characters are not allowed: \\0 \\t \\r \\n # % / : ? @ [ \\ ]\n      maxLength: 255\n      minLength: 1\n      type: string\n      example: uss1.JA6kHYCcByQ-6AfU\n    RIDAuthData:\n      description: Additional authentication data.\n      type: object\n      properties:\n        format:\n          description: |-\n            Format of additional authentication data.\n\n            0: None\n            1: UAS ID Signature\n            2: Operator ID Signature\n            3: Message Set Signature\n            4: Authentication Provided by Network Remote ID\n            5: Specific Method\n            6-9: Reserved for Spec\n            10-15: Available for Private Use\n          type: integer\n          default: 0\n          minimum: 0\n          exclusiveMinimum: false\n          maximum: 15\n          exclusiveMaximum: false\n        data:\n          description: Authentication data in form specified by `format`.\n          type: string\n          default: ''\n    GetFlightDetailsResponse:\n      description: Response to remote ID provider query for details about a specific\n        flight.\n      required:\n      - details\n      type: object\n      properties:\n        details:\n          $ref: '#/components/schemas/RIDFlightDetails'\n    HorizontalAccuracy:\n      description: |-\n        This is based on ADS-B NACp (plus the one extra increment).\n\n        `HAUnknown`: Unknown horizontal accuracy\n\n        `HA10NMPlus`: \u003e 10NM (18.52km)\n\n        `HA10NM`: \u003c 10NM (18.52km)\n\n        `HA4NM`: \u003c 4NM (7.408km)\n\n        `HA2NM`: \u003c 2NM (3.704km)\n\n        `HA1NM`: \u003c 1NM (1852m)\n\n        `HA05NM`: \u003c 0.5NM (926m)\n\n        `HA03NM`: \u003c 0.3NM (555.6m)\n\n        `HA01NM`: \u003c 0.1NM (185.2m)\n\n        `HA005NM`: \u003c 0.05NM (92.6m)\n\n        `HA30m`: \u003c 30m\n\n        `HA10m`: \u003c 10m\n\n        `HA3m`: \u003c 3m\n\n        `HA1m`: \u003c 1m\n      enum:\n      - HAUnknown\n      - HA10NMPlus\n      - HA10NM\n      - HA4NM\n      - HA2NM\n      - HA1NM\n      - HA05NM\n      - HA03NM\n      - HA01NM\n      - HA005NM\n      - HA30m\n      - HA10m\n      - HA3m\n      - HA1m\n      type: string\n      default: HAUnknown\n    VerticalAccuracy:\n      description: |-\n        This is based on ADS-B Geodetic Vertical Accuracy (GVA) (plus the three extra increments)\n\n        `VAUnknown`: Unknown vertical accuracy\n\n        `VA150mPlus`: \u003e 150m\n\n        `VA150m`: \u003c 150m\n\n        `VA45m`: \u003c 45m\n\n        `VA25m`: \u003c 25m\n\n        `VA10m`: \u003c 10m\n\n        `VA3m`: \u003c 3m\n\n        `VA1m`: \u003c 1m\n      enum:\n      - VAUnknown\n      - VA150mPlus\n      - VA150m\n      - VA45m\n      - VA25m\n      - VA10m\n      - VA3m\n      - VA1m\n      type: string\n      default: VAUnknown\n    ErrorResponse:\n      description: Data provided when an off-nominal condition was encountered.\n      type: object\n      properties:\n        message:\n          description: Human-readable message indicating what error occurred and/or\n            why.\n          type: string\n          default: ''\n    DeleteSubscriptionResponse:\n      description: Response for a successful request to delete an Subscription.\n      required:\n      - subscription\n      type: object\n      properties:\n        subscription:\n          anyOf:\n          - $ref: '#/components/schemas/Subscription'\n          description: The Subscription which was deleted.\n    SpeedAccuracy:\n      description: |-\n        Provides quality/containment on horizontal ground speed.\n\n        `SAUnknown`: Unknown speed accuracy\n\n        `SA10mpsPlus`: \u003e 10 m/s\n\n        `SA10mps`: \u003c 10 m/s\n\n        `SA3mps`: \u003c 3 m/s\n\n        `SA1mps`: \u003c 1 m/s\n\n        `SA03mps`: \u003c 0.3 m/s\n      enum:\n      - SAUnknown\n      - SA10mpsPlus\n      - SA10mps\n      - SA3mps\n      - SA1mps\n      - SA03mps\n      type: string\n      default: SAUnknown\n    RIDAircraftPosition:\n      description: Position of an aircraft as reported for remote ID purposes.\n      type: object\n      properties:\n        lat:\n          anyOf:\n          - $ref: '#/components/schemas/Latitude'\n        lng:\n          anyOf:\n          - $ref: '#/components/schemas/Longitude'\n        alt:\n          format: float\n          description: 'Geodetic altitude (NOT altitude above launch, altitude above\n            ground, or EGM96): aircraft distance above the WGS84 ellipsoid as measured\n            along a line that passes through the aircraft and is normal to the surface\n            of the WGS84 ellipsoid.  This value is provided in meters and must have\n            a minimum resolution of 1 meter.  Invalid, No Value or Unknown is -1000\n            m.'\n          type: number\n          example: 1321.2\n          default: -1000\n        accuracy_h:\n          anyOf:\n          - $ref: '#/components/schemas/HorizontalAccuracy'\n          description: Horizontal error that is likely to be present in this reported\n            position.  Required when `extrapolated` field is true and always in the\n            entry for the current state.\n        accuracy_v:\n          anyOf:\n          - $ref: '#/components/schemas/VerticalAccuracy'\n          description: Vertical error that is likely to be present in this reported\n            position.  Required when `extrapolated` field is true and always in the\n            entry for the current state.\n        extrapolated:\n          description: True if this position was generated primarily by computation\n            rather than primarily from a direct instrument measurement.  Assumed false\n            if not specified.\n          type: boolean\n          default: false\n        pressure_altitude:\n          format: float\n          description: The uncorrected altitude (based on reference standard 29.92\n            inHg, 1013.25 mb) provides a reference for algorithms that utilize \"altitude\n            deltas\" between aircraft.  This value is provided in meters and must have\n            a minimum resolution of 1 meter.  Invalid, No Value or Unknown is -1000\n            m.\n          type: number\n          default: -1000\n        height:\n          $ref: '#/components/schemas/RIDHeight'\n    GeoPolygonString:\n      description: |-\n        Plain-string representation of a geographic polygon consisting of at least three geographic\n        points describing a closed polygon on the earth.  Each point consists of latitude,longitude\n        in degrees.  Points are also comma-delimited, so this parameter will look like\n        `lat1,lng1,lat2,lng2,lat3,lng3,...`  Latitude values must fall in the range [-90, 90] and\n        longitude values must fall in the range [-180, 180].\n\n        All of the requirements and clarifications for Polygon apply to GeoPolygonString as well.\n      type: string\n    RIDHeight:\n      description: A relative altitude for the purposes of remote ID.\n      required:\n      - reference\n      type: object\n      properties:\n        distance:\n          format: float\n          description: Distance above reference datum.  This value is provided in\n            meters and must have a minimum resolution of 1 meter.  Invalid, No Value\n            or Unknown is -1000 m.\n          type: number\n          default: 0\n        reference:\n          description: The reference datum above which the height is reported.\n          enum:\n          - TakeoffLocation\n          - GroundLevel\n          type: string\n    Latitude:\n      format: double\n      description: Degrees of latitude north of the equator, with reference to the\n        WGS84 ellipsoid.  Invalid, No Value, or Unknown is 0 degrees (both Lat/Lon).\n      maximum: 90\n      exclusiveMaximum: false\n      minimum: -90\n      exclusiveMinimum: false\n      type: number\n      example: 34.123\n      default: 0\n    Longitude:\n      format: double\n      description: Degrees of longitude east of the Prime Meridian, with reference\n        to the WGS84 ellipsoid.  Invalid, No Value, or Unknown is 0 degrees (both\n        Lat/Lon).\n      maximum: 180\n      exclusiveMaximum: false\n      minimum: -180\n      exclusiveMinimum: false\n      type: number\n      example: -118.456\n      default: 0\n    LatLngPoint:\n      description: Point on the earth's surface.\n      required:\n      - lat\n      - lng\n      type: object\n      properties:\n        lng:\n          $ref: '#/components/schemas/Longitude'\n        lat:\n          $ref: '#/components/schemas/Latitude'\n    Altitude:\n      type: object\n      required:\n      - value\n      - reference\n      - units\n      properties:\n        value:\n          description: \u003e-\n            The numeric value of the altitude. Note that min and max values are\n            added as a sanity check. As use cases evolve and more options are\n            made available in terms of units of measure or reference systems,\n            these bounds may be re-evaluated. Invalid, No Value, or Unknown is\n            –1000 m.\n          type: number\n          format: double\n          minimum: -8000\n          exclusiveMinimum: false\n          maximum: 100000\n          exclusiveMaximum: false\n          example: 19.5\n        reference:\n          description: \u003e-\n            A code indicating the reference for a vertical distance. See AIXM\n            5.1 and FIXM 4.2.0. Currently, UTM only allows WGS84 with no\n            immediate plans to allow other options. FIXM and AIXM allow for\n            'SFC' which is equivalent to AGL.\n          type: string\n          enum:\n          - W84\n        units:\n          description: \u003e-\n            The reference quantities used to express the value of altitude. See\n            FIXM 4.2. Currently, UTM only allows meters with no immediate plans\n            to allow other options.\n          type: string\n          enum:\n          - M\n    RIDFlight:\n      description: Description of a remote ID flight.\n      required:\n      - id\n      - aircraft_type\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/RIDFlightID'\n        aircraft_type:\n          anyOf:\n          - $ref: '#/components/schemas/UAType'\n          description: Generic type of aircraft.\n        current_state:\n          anyOf:\n          - $ref: '#/components/schemas/RIDAircraftState'\n          description: |-\n            The most up-to-date state of the aircraft.  Required when the aircraft is\n            currently in the requested area unless no telemetry is expected during during\n            the flight and `volumes` is specified.\n\n            If current data is not being received from the UAS by the Service Provider,\n            the lack of change in this field is sufficient to indicate that current\n            data is not being received.\n\n            If the USS believes a flight is airborne and expects to receive telemetry\n            at some point during the flight but has not yet received telemetry, this\n            field should be populated with the USS's best estimate of the position\n            of the flight with appropriate accuracy indications.\n        operating_area:\n          description: |-\n            The area the aircraft is/are within.  Required, with 1 or more elements, if\n            `current_state` is not specified.  The fields `time_start` and `time_end` are\n            required.\n\n            If `current_state` is specified, this field should not be specified.\n            If `current_state` was available at any time during the flight, or is\n            expected to be available at any time during the flight, this field should\n            not be specified.\n          anyOf:\n          - $ref: '#/components/schemas/OperatingArea'\n        simulated:\n          description: If specified as true, this flight is not a physical aircraft;\n            it is just a simulation to test the system.\n          type: boolean\n          default: false\n        recent_positions:\n          description: |-\n            A short collection of recent aircraft movement, specified only when `recent_positions_duration` is greater than zero.  If `volumes` is not specified and `recent_positions_duration` is greater than zero, then this field is required.\n\n            Recent positions provided in this field must conform to requirements in the standard which generally prohibit including positions outside the requested area except transitionally when the aircraft enters or exits the requested area, and which prohibit including positions that not sufficiently recent.\n\n            Note that a UI should not draw a connective line between two consecutive position reports that both lie outside the requested area.\n          type: array\n          items:\n            $ref: '#/components/schemas/RIDRecentAircraftPosition'\n          default: []\n    OperatingArea:\n      description: Area of operation containing one or more aircraft participating in remote identification.\n      type: object\n      properties:\n        aircraft_count:\n          format: int32\n          description: Allows for operating a single UA, group, formation, or swarm. Quantity in Group.\n          minimum: 1\n          exclusiveMinimum: false\n          type: integer\n        volumes:\n          description: The area where a group or Intent-Based Network Participant operation is planned or taking place.\n          type: array\n          items:\n            $ref: '#/components/schemas/OperatingArea'\n          default: []\n    Polygon:\n      description: \u003e-\n        An enclosed area on the earth. The bounding edges of this polygon are\n        defined to be the shortest paths between connected vertices.  This\n        means, for instance, that the edge between two points both defined at a\n        particular latitude is not generally contained at that latitude. The\n        winding order must be interpreted as the order which produces the\n        smaller area. The path between two vertices is defined to be the\n        shortest possible path between those vertices. Edges may not cross.\n        Vertices may not be duplicated.  In particular, the final polygon vertex\n        must not be identical to the first vertex.\n      required:\n      - vertices\n      type: object\n      properties:\n        vertices:\n          minItems: 3\n          type: array\n          items:\n            $ref: '#/components/schemas/LatLngPoint'\n    PutIdentificationServiceAreaResponse:\n      description: Response to a request to create or update a reference to an Identification\n        Service Area in the DSS.\n      required:\n      - service_area\n      type: object\n      properties:\n        subscribers:\n          description: DSS subscribers that this client now has the obligation to\n            notify of the Identification Service Area changes just made.  This client\n            must call POST for each provided URL according to the `/uss/identification_service_areas/{id}`\n            path API.\n          type: array\n          items:\n            $ref: '#/components/schemas/SubscriberToNotify'\n          default: []\n        service_area:\n          anyOf:\n          - $ref: '#/components/schemas/IdentificationServiceArea'\n          description: Resulting service area stored in DSS.\n    SearchIdentificationServiceAreasResponse:\n      description: Response to DSS query for Identification Service Areas in an area\n        of interest.\n      type: object\n      properties:\n        service_areas:\n          description: Identification Service Areas in the area of interest.\n          type: array\n          items:\n            $ref: '#/components/schemas/IdentificationServiceArea'\n          default: []\n    PutIdentificationServiceAreaNotificationParameters:\n      description: Parameters of a message informing of new full information for an\n        Identification Service Area.  Pushed (by a client, not the DSS) directly to\n        clients with subscriptions when another client makes a change to airspace\n        within a cell with a subscription.\n      required:\n      - subscriptions\n      type: object\n      properties:\n        service_area:\n          anyOf:\n          - $ref: '#/components/schemas/IdentificationServiceArea'\n          description: |-\n            Identification Service Area that the notifying client changed or created.\n\n            If this field is populated, the Identification Service Area was created or updated.  If this field is not populated, the Identification Service Area was deleted.\n        subscriptions:\n          description: Subscription(s) prompting this notification.\n          type: array\n          minItems: 1\n          items:\n            $ref: '#/components/schemas/SubscriptionState'\n        extents:\n          anyOf:\n            - $ref: '#/components/schemas/Volume4D'\n          description: |-\n            The new or updated extents of the Identification Service Area.\n\n            Omitted if Identification Service Area was deleted.\n    SubscriberToNotify:\n      description: Subscriber to notify of a creation/change/deletion of a change\n        in the airspace.  This is provided by the DSS to a client changing the airspace,\n        and it is the responsibility of the client changing the airspace (they will\n        receive a set of these notification requests) to send a notification to each\n        specified `url`.\n      required:\n      - subscriptions\n      - url\n      type: object\n      properties:\n        subscriptions:\n          description: Subscription(s) prompting this notification.\n          type: array\n          minItems: 1\n          items:\n            $ref: '#/components/schemas/SubscriptionState'\n        url:\n          anyOf:\n          - $ref: '#/components/schemas/URL'\n          description: The endpoint that the client mutating the airspace should provide\n            the update to.  API depends on the DSS action taken that triggered this\n            notification request.\n    DeleteIdentificationServiceAreaResponse:\n      description: Response for a request to delete an Identification Service Area.\n      required:\n      - service_area\n      type: object\n      properties:\n        service_area:\n          anyOf:\n          - $ref: '#/components/schemas/IdentificationServiceArea'\n          description: Identification Service Area that was just deleted.\n        subscribers:\n          description: DSS subscribers that this client now has the obligation to\n            notify of the Identification Service Area just deleted.  This client must\n            call POST for each provided URL according to the `/uss/identification_service_areas`\n            path API.\n          type: array\n          items:\n            $ref: '#/components/schemas/SubscriberToNotify'\n          default: []\n    PutSubscriptionResponse:\n      description: Response for a request to create or update a subscription.\n      required:\n      - subscription\n      type: object\n      properties:\n        service_areas:\n          description: Identification Service Areas in or near the subscription area\n            at the time of creation/update, if `identification_service_area_url` callback\n            was specified.\n          type: array\n          items:\n            $ref: '#/components/schemas/IdentificationServiceArea'\n          default: []\n        subscription:\n          anyOf:\n          - $ref: '#/components/schemas/Subscription'\n          description: Result of the operation on the subscription.\n    RIDOperationalStatus:\n      description: |-\n        Operational Status indicates whether the associated UA is on the ground, airborne, or in an\n        emergency situation, or the Remote ID system has failed. The emergency status takes\n        precedence over the other status modes. This status can be used for filtering purposes.\n      enum:\n      - Undeclared\n      - Ground\n      - Airborne\n      - Emergency\n      - RemoteIDSystemFailure\n      type: string\n      default: Undeclared\n    SpecificSessionID:\n      description: |-\n        A unique 20 byte ID intended to identify a specific flight (session) while providing a\n        greater level of privacy to the operator. The first byte is the registered unique Specific Session ID\n        Type maintained by a registrar (see Annex A5), and the remaining 19 bytes is the Session ID per the\n        Specific Session ID Type specification.\n\n        Initial scheme registry entries include:\n\n        0 – reserved\n        1 – Internet Engineering Task Force (IETF) Drone Remote Identification Protocol (DRIP) entity ID\n        2 – IEEE 1609.2 HashedID8\n\n        Expressed as a hexadecimal string of the underlying data bytes.  A recipient should ignore any dashes in this value.  If fewer than 20 bytes are specified, the remaining bytes at the end are assumed to have value 0.\n      type: string\n      example: 02-a1b2c3d4e5f60708\n      default: ''\n    UASID:\n      description: Identification of the UAS performing this flight.  At least one\n        field of this object must be specified.\n      type: object\n      properties:\n        serial_number:\n          description: This is expressed in the CTA-2063-A Serial Number format.\n          type: string\n          example: INTCJ123-4567-890\n          default: ''\n        registration_id:\n          description: If a CAA provides a method of registering UAS, this number\n            is provided by the CAA or its authorized representative.  Format is\n            \u003cICAO Nationality MarkA\u003e.\u003cCAA Assigned ID\u003e, ASCII encoded, only\n            uppercase letters (A-Z), dot (.), and digits (0-9) are allowed.\n            Example is valid for the US.\n          type: string\n          example: N.123456\n          default: ''\n        utm_id:\n          description: A UTM-provided universally unique ID traceable to a\n            non-obfuscated ID that acts as a \"session id\" to protect exposure of\n            operationally sensitive information.\n          type: string\n          example: ae1fa066-6d68-4018-8274-af867966978e\n          default: ''\n        specific_session_id:\n          $ref: '#/components/schemas/SpecificSessionID'\n    OperatorLocation:\n      description: Location associated with the Remote Pilot\n      type: object\n      required:\n      - position\n      properties:\n        position:\n          anyOf:\n          - $ref: '#/components/schemas/LatLngPoint'\n          description: Position of the Remote Pilot.\n        altitude:\n          anyOf:\n          - $ref: '#/components/schemas/Altitude'\n          description: Provides the Operator Altitude based on WGS-84 height above ellipsoid (HAE)\n            (See Geodetic Altitude).  This value is provided in meters and must have a minimum\n            resolution of 1 m.\n        altitude_type:\n          description: Source of data for the altitude field.\n          type: string\n          enum:\n          - Takeoff\n          - Dynamic\n          - Fixed\n    UAClassificationEU:\n      type: object\n      properties:\n        category:\n          type: string\n          enum:\n          - EUCategoryUndefined\n          - Open\n          - Specific\n          - Certified\n          default: EUCategoryUndefined\n        class:\n          type: string\n          enum:\n          - EUClassUndefined\n          - Class0\n          - Class1\n          - Class2\n          - Class3\n          - Class4\n          - Class5\n          - Class6\n          default: EUClassUndefined\n    RIDFlightDetails:\n      description: Details about a flight reported by a remote ID service provider.  At\n        least one of the registration or serial fields must be filled if required\n        by CAA.\n      required:\n      - id\n      type: object\n      properties:\n        id:\n          description: ID for this flight, matching argument in request.\n          type: string\n          example: a3423b-213401-0023\n        eu_classification:\n          description: When this field is specified, the Classification Type is \"European\n            Union\".  If no other classification field is specified, the Classification Type\n            is \"Undeclared\".\n          anyOf:\n          - $ref: '#/components/schemas/UAClassificationEU'\n        uas_id:\n          $ref: '#/components/schemas/UASID'\n        operator_id:\n          description: This optional field provides a CAA-issued registration/license ID for the\n            remote pilot or operator. Format is \u003cICAO Nationality MarkA\u003e.\u003cCAA Assigned ID\u003e, ASCII\n            encoded, only uppercase letters (A-Z), dot (.), and digits (0-9) are allowed. Example\n            is valid for the US.\n          type: string\n          default: ''\n          example: N.OP123456\n        operator_location:\n          $ref: '#/components/schemas/OperatorLocation'\n        operation_description:\n          description: Free-text field that enables the operator to describe the purpose\n            of a flight, if so desired.\n          type: string\n          example: SafeFlightDrone company doing survey with DJI Inspire 2. See my\n            privacy policy www.example.com/privacy.\n          default: ''\n        auth_data:\n          $ref: '#/components/schemas/RIDAuthData'\n    RIDRecentAircraftPosition:\n      description: ''\n      required:\n      - time\n      - position\n      type: object\n      properties:\n        time:\n          description: Time at which this position applied.\n          anyOf:\n          - $ref: '#/components/schemas/Time'\n        position:\n          $ref: '#/components/schemas/RIDAircraftPosition'\n    GetIdentificationServiceAreaResponse:\n      description: Response to DSS request for the identification service area with\n        the given ID.\n      required:\n      - service_area\n      type: object\n      properties:\n        service_area:\n          $ref: '#/components/schemas/IdentificationServiceArea'\n    GetIdentificationServiceAreaDetailsResponse:\n      description: Response to request for the details of an identification service\n        area with the given ID.\n      required:\n      - extents\n      type: object\n      properties:\n        extents:\n          anyOf:\n          - $ref: '#/components/schemas/Volume4D'\n          description: The extents of the Identification Service Area.\n    CreateIdentificationServiceAreaParameters:\n      description: Parameters for a request to create an Identification Service Area\n        in the DSS.\n      required:\n      - extents\n      - uss_base_url\n      type: object\n      properties:\n        extents:\n          anyOf:\n          - $ref: '#/components/schemas/Volume4D'\n          description: |-\n            The bounding spacetime extents of this Identification Service Area.  End time must be specified.  If start time is not specified, it will be set to the current time.  Start times in the past should be rejected by the DSS, except that it may adjust very recent start times to the current time.\n\n            These extents should not reveal any sensitive information about the flight or flights within them.  This means, for instance, that extents should not tightly-wrap a flight path, nor should they generally be centered around the takeoff point of a single flight.\n        uss_base_url:\n          $ref: '#/components/schemas/FlightsUSSBaseURL'\n    UpdateIdentificationServiceAreaParameters:\n      description: Parameters for a request to update an Identification Service Area\n        in the DSS.\n      required:\n      - extents\n      - uss_base_url\n      type: object\n      properties:\n        extents:\n          anyOf:\n          - $ref: '#/components/schemas/Volume4D'\n          description: |-\n            The bounding spacetime extents of this Identification Service Area.  End time must be specified.  If start time is not specified, it will remain unchanged.  Start times in the past should be rejected by the DSS unless they are unchanged from the Identification Service Area's current start time.\n\n            These extents should not reveal any sensitive information about the flight or flights within them.  This means, for instance, that extents should not tightly-wrap a flight path, nor should they generally be centered around the takeoff point of a single flight.\n        uss_base_url:\n          $ref: '#/components/schemas/FlightsUSSBaseURL'\n    CreateSubscriptionParameters:\n      description: Parameters for a request to create a subscription in the DSS.\n      required:\n      - extents\n      - uss_base_url\n      type: object\n      properties:\n        extents:\n          anyOf:\n          - $ref: '#/components/schemas/Volume4D'\n          description: |-\n            The spacetime extents of the volume to subscribe to.\n\n            This subscription will automatically be deleted after its end time if it has not been refreshed by then.  If end time is not specified, the value will be chosen automatically by the DSS.\n\n            Note that some Entities triggering notifications may lie entirely outside the requested area.\n        uss_base_url:\n          $ref: '#/components/schemas/SubscriptionUSSBaseURL'\n    UpdateSubscriptionParameters:\n      description: Parameters for a request to update a subscription in the DSS.\n      required:\n      - extents\n      - uss_base_url\n      type: object\n      properties:\n        extents:\n          anyOf:\n          - $ref: '#/components/schemas/Volume4D'\n          description: |-\n            The spacetime extents of the volume to subscribe to.\n\n            This subscription will automatically be deleted after its end time if it has not been refreshed by then.  If end time is not specified, the value will be chosen automatically by the DSS.\n\n            Note that some Entities triggering notifications may lie entirely outside the requested area.\n        uss_base_url:\n          $ref: '#/components/schemas/SubscriptionUSSBaseURL'\n    Subscription:\n      description: Specification of a geographic area that a client is interested\n        in on an ongoing basis (e.g., \"planning area\").  Internal to the DSS.\n      required:\n      - id\n      - uss_base_url\n      - owner\n      - version\n      type: object\n      properties:\n        id:\n          anyOf:\n          - $ref: '#/components/schemas/SubscriptionUUID'\n          description: Unique identifier for this subscription.\n        uss_base_url:\n          $ref: '#/components/schemas/SubscriptionUSSBaseURL'\n        owner:\n          description: Assigned by the DSS based on creating client’s ID (via access\n            token).  Used for restricting mutation and deletion operations to owner.\n          type: string\n          example: myuss\n        notification_index:\n          anyOf:\n          - $ref: '#/components/schemas/SubscriptionNotificationIndex'\n          default: 0\n        time_end:\n          description: If set, this subscription will be automatically removed after\n            this time.\n          anyOf:\n          - $ref: '#/components/schemas/Time'\n        time_start:\n          description: If set, this Subscription will not generate any notifications\n            before this time.\n          anyOf:\n          - $ref: '#/components/schemas/Time'\n        version:\n          $ref: '#/components/schemas/Version'\n    IdentificationServiceArea:\n      description: An Identification Service Area (area in which remote ID services\n        are being provided).  The DSS reports only these declarations and clients\n        must exchange flight information peer-to-peer.\n      required:\n      - uss_base_url\n      - owner\n      - time_start\n      - time_end\n      - version\n      - id\n      type: object\n      properties:\n        uss_base_url:\n          $ref: '#/components/schemas/FlightsUSSBaseURL'\n        owner:\n          description: Assigned by the DSS based on creating client’s ID (via access\n            token).  Used for restricting mutation and deletion operations to owner.\n          type: string\n          example: myuss\n        time_start:\n          description: Beginning time of service.\n          anyOf:\n          - $ref: '#/components/schemas/Time'\n        time_end:\n          description: End time of service.\n          anyOf:\n          - $ref: '#/components/schemas/Time'\n        version:\n          $ref: '#/components/schemas/Version'\n        id:\n          anyOf:\n          - $ref: '#/components/schemas/EntityUUID'\n          description: Unique identifier for this Identification Service Area.\n    RIDAircraftState:\n      description: State of an aircraft for the purposes of remote ID.\n      required:\n      - timestamp\n      - timestamp_accuracy\n      - position\n      - speed_accuracy\n      type: object\n      properties:\n        timestamp:\n          description: Time at which this state was valid.  This may be the time coming\n            from the source, such as a GPS, or the time when the system computes the\n            values using an algorithm such as an Extended Kalman Filter (EKF).  Timestamp\n            must be expressed with a minimum resolution of 1/10th of a second.\n          anyOf:\n          - $ref: '#/components/schemas/Time'\n        timestamp_accuracy:\n          format: float\n          description: 'Declaration of timestamp accuracy, which is the largest difference\n            between Timestamp and true time of applicability for any of the following\n            fields: Latitude, Longitude, Geodetic Altitude, Pressure Altitude of Position,\n            Height. to determine time of applicability of the location data provided.  Expressed\n            in seconds, precise to 1/10ths of seconds. The accuracy reflects the 95%\n            uncertainty bound value for the timestamp.'\n          minimum: 0\n          exclusiveMinimum: false\n          type: number\n          default: 0\n        operational_status:\n          $ref: '#/components/schemas/RIDOperationalStatus'\n        position:\n          $ref: '#/components/schemas/RIDAircraftPosition'\n        track:\n          format: float\n          description: Direction of flight expressed as a \"True North-based\" ground\n            track angle.  This value is provided in clockwise degrees with a minimum\n            resolution of 1 degree.  If aircraft is not moving horizontally, use the\n            \"Unknown\" value.  A value of 361 indicates invalid, no value, or\n            unknown.\n          maximum: 361\n          exclusiveMaximum: false\n          minimum: 0\n          exclusiveMinimum: false\n          type: number\n          default: 361\n        speed:\n          format: float\n          description: Ground speed of flight in meters per second.  Invalid, No Value,\n            or Unknown is 255 m/s, if speed is \u003e254.25 m/s then report 254.25 m/s.\n          minimum: 0\n          exclusiveMinimum: false\n          type: number\n          example: 1.9\n          default: 255\n        speed_accuracy:\n          anyOf:\n          - $ref: '#/components/schemas/SpeedAccuracy'\n          description: Provides quality/containment on horizontal ground speed.\n        vertical_speed:\n          format: float\n          description: Speed up (vertically) WGS84-HAE, m/s.  Invalid, No Value, or\n            Unknown is 63 m/s, if speed is \u003e62 m/s then report 62 m/s.\n          type: number\n          example: 0.2\n          default: 63\n    UAType:\n      description: |-\n        The UA Type can help infer performance, speed, and duration of flights, for example, a\n        \"fixed wing\" can generally fly in a forward direction only (as compared to a multi-rotor).\n        This can also help differentiate aircraft types without sharing operationally sensitive\n        information like the make and model of a particular aircraft. Make and model are\n        anticipated to become available during the Registration ID lookup process. UAS Type is also\n        useful for correlating visual observation with data received. The types were formulated\n        based on unique flight characteristics.\n\n        `HybridLift` is a fixed wing aircraft that can take off vertically.  `Helicopter` includes multirotor.\n      enum:\n      - NotDeclared\n      - Aeroplane\n      - Helicopter\n      - Gyroplane\n      - HybridLift\n      - Ornithopter\n      - Glider\n      - Kite\n      - FreeBalloon\n      - CaptiveBalloon\n      - Airship\n      - FreeFallOrParachute\n      - Rocket\n      - TetheredPoweredAircraft\n      - GroundObstacle\n      - Other\n      type: string\n      default: NotDeclared\n    USSBaseURL:\n      description: |-\n        The base URL of a USS implementation of part or all of the remote ID USS-USS API. Per the USS-USS API, the full URL\n        of a particular resource can be constructed by appending, e.g., `/uss/{resource}/{id}` to this base URL.\n        Accordingly, this URL may not have a trailing '/' character.\n      type: string\n      example: https://example.com/rid\n    SubscriptionUSSBaseURL:\n      description: Base URL for the USS's implementation of the USS API, including\n        the POST identification_service_areas endpoint where notifications for this\n        Subscription will be received.\n      anyOf:\n      - $ref: '#/components/schemas/USSBaseURL'\n    FlightsUSSBaseURL:\n      description: Base URL for the USS's implementation of the USS API, including\n        the GET flights and GET flights/{id}/details endpoints where flight information\n        can be obtained.\n      anyOf:\n      - $ref: '#/components/schemas/USSBaseURL'\n  securitySchemes:\n    Authority:\n      flows:\n        clientCredentials:\n          tokenUrl: https://auth.example.com/oauth/token\n          scopes:\n            rid.display_provider: Client may query, read, or create subscriptions\n              for Identification Service Areas for remote ID.  A remote ID display\n              provider should be granted this scope upon request.\n            rid.service_provider: Client may create, edit, and delete Identification\n              Service Areas for remote ID.  A remote ID service provider should\n              be granted this scope upon request.\n      type: oauth2\n      description: \u003e-\n        Authorization from, or on behalf of, an authorization authority.  This\n        authority will issue access tokens that are JSON Web Tokens as defined\n        in RFC 7519, using the `RS256` algorithm for the signature, publish to\n        all providers the public key for verifying that signature, and implement\n        standard OAuth server discovery mechanisms as described in RFC 8414.\n\n        The following fields must be included in the JWT claim for access tokens\n        issued by this authority:\n\n        * `iss`, with the URL at which the token generation request was\n        received.\n\n        * `exp`, with a time no further than 1 hour in the future.\n\n        * `sub`, with unique ID of the client requesting the access token.\n\n        * `scope`, with a string composed of a space-separated list of strings\n        indicating the scopes granted, per RFC 6749.\n\n        * `jti`, according to RFC 7519.\n\n        Following the principle of least privilege, only one of the scopes\n        enumerated in this document should usually be granted in a single token\n        (though other scopes may accompany it).  The tokens granted by this\n        authority must protect against reuse of received tokens to impersonate\n        the sender to other recipients (via use of the `aud` claim or other\n        means).\n\n        When using the `aud` claim to protect against the reuse of received\n        tokens, and absent guidance on behalf of the competent authority to the\n        contrary, the JWT `aud` claim requested by the client must be included\n        in each access token and must contain the fully qualified domain name of\n        the URL the access token will be used to access.  For example, if a USS\n        were querying the endpoint at\n        https://dss.example.com:8888/rid/dss/identification_service_areas,\n        the access token included in the request should specify `\"aud\":\n        \"dss.example.com\"`.\n\n        Clients must provide these access tokens in an `Authorization` header in\n        the form `Bearer \u003ctoken\u003e` in accordance with RFC 6750.\nsecurity:\n- Authority:\n  - rid.display_provider\n  - rid.service_provider\ntags:\n- name: dss\n  description: Endpoints exposed by the DSS server.\n- name: sp\n  description: Endpoints exposed by remote ID service providers for peer-peer communication.\n- name: dp\n  description: Endpoints exposed by remote ID display providers for peer-peer communication.\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"PutIdentificationServiceAreaResponse\": parse schema: property \"subscribers\": parse schema: item: parse schema: resolve \"#/components/schemas/SubscriberToNotify\": parse schema: property \"subscriptions\": parse schema: item: parse schema: resolve \"#/components/schemas/SubscriptionState\": parse schema: property \"notification_index\": parse default: unexpected type: \"\""
}