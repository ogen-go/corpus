{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/dcsaorg/DCSA-OpenAPI"
		},
		"file": {
			"name": "ovs_v3.0.0.yaml",
			"size": 0,
			"path": "ovs/v3/ovs_v3.0.0.yaml",
			"byteSize": 28053,
			"content": "openapi: 3.0.3\r\ninfo:\r\n  version: 3.0.0\r\n  title: 'DCSA OpenAPI specification for Operational Vessel Schedules'\r\n  description: |\r\n    API specification issued by DCSA.org\r\n    \r\n    This API supports <b>OVS</b> (Operational Vessel Schedules)\r\n    \r\n    OVS is used for sharing Vessel schedules. The Interface Standards for OVS can be read [here](https://dcsa.org/wp-content/uploads/2020/07/DCSA-Interface-Standard-for-Operational-Vessel-Schedules-1.0-vF.pdf).\r\n\r\n    For explanation to specific values or objects please refer to the [Information Model v2022.1](https://dcsa.my.salesforce.com/sfc/p/#2o000000YvHJ/a/7T000000bnvo/id.kB9TVoeYABFV8NwRBQvgVkWXXK7DAuIelpCDw13M)\r\n\r\n    For a changelog please click [here](https://github.com/dcsaorg/DCSA-OpenAPI/blob/master/ovs/v3#v300). Please also [create a GitHub issue](https://github.com/dcsaorg/DCSA-OpenAPI/issues/new) if you have any questions/comments.\r\n\r\n  #    It is possible to use this API as a standalone API. In order to do so it is necessary to use the poll-endPoint\r\n#    - /v3/events\r\n\r\n#    in order to poll event information.\r\n\r\n#    It is recomended to implement the <a href='https://app.swaggerhub.com/apis/dcsaorg/OVS_EVENT_HUB'>DCSA Operational Vessel Schedules (OVS) Event Hub</a> in order to use the push model. Here events are pushed as they occur.\r\n    \r\n  license:\r\n    name: Apache 2.0\r\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\r\n  contact:\r\n    name: Digital Container Shipping Association (DCSA)\r\n    url: https://dcsa.org\r\n    email: info@dcsa.org\r\ntags:\r\n  - name: Operational Vessel Schedules\r\n    description: Operational Vessel Schedules operations\r\n  - name: Events\r\npaths:\r\n  /v3/service-schedules:\r\n    get:\r\n      parameters:\r\n        - in: query\r\n          name: carrierServiceCode\r\n          description: |\r\n            The carrier service code to filter by. The result will only return schedules including the service code\r\n          schema:\r\n            $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/carrierServiceCode'\r\n        - in: query\r\n          name: vesselIMONumber\r\n          description: |\r\n            The identifier of a vessel. The result will only return schedules including the vessel\r\n          schema:\r\n            $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/vesselIMONumber'\r\n        - in: query\r\n          name: voyageNumber\r\n          description: |\r\n            The identifier of a voyage - can be both import and export Voyage. The result will only return schedules including the voyageNumber (either as importVoyageNumber or exportVoyageNumber)\r\n          schema:\r\n            $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/carrierVoyageNumber'\r\n        - in: query\r\n          name: vesselOperatorCarrierSMDGCode\r\n          description: |\r\n            The identifier of a vessel operator using the SMDG code. The result will only return schedules operated by the SMDG Code.\r\n          schema:\r\n            $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/vesselOperatorCarrierSMDGCode'\r\n        # - in: query\r\n        #   name: vesselOperatorCarrierCode\r\n        #   description: |\r\n        #     The identifier of a vessel operator. The result will only return schedules operated by the CarrierCode. The type of the code can be specified in the `vesselOperatorCarrierCodeListProvider` queryParameter\r\n        #   schema:\r\n        #     $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/vesselOperatorCarrierCode'\r\n        # - in: query\r\n        #   name: vesselOperatorCarrierCodeListProvider\r\n        #   description: |\r\n        #     The identifier of a vessel operator list provider. The result will only return schedules including the vesselOperators specified by the list provider\r\n        #   schema:\r\n        #     $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/vesselOperatorCarrierCodeListProvider'\r\n        # - $ref: '#/components/parameters/dateInterval'\r\n        - in: query\r\n          name: UNLocationCode\r\n          description: |\r\n            The UN Location code specifying where the port is located.\r\n            \r\n            Specifying this filter will only return schedules related to this particular UN Location code.\r\n          example: NLRTM\r\n          schema:\r\n            $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/UNLocationCode'\r\n        - $ref: '#/components/parameters/startDate'\r\n        - $ref: '#/components/parameters/endDate'\r\n\r\n        # Chunk with pagination parameters needed to be included in all APIs\r\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/parameters/limit'\r\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/parameters/cursor'\r\n        # - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/parameters/sort'\r\n        - $ref: '#/components/parameters/Api-Version-Major'\r\n      tags:\r\n        - Operational Vessel Schedules\r\n      summary: Get a list of Schedules\r\n      description: |\r\n        Get a list of schedules. The number of schedules in the list can be narrowed down by providing filter parameters. Whenever a schedule is matched because of a filter parameter - **the entire service is included inside the schedule**.\r\n      responses:\r\n        '200':\r\n          description: Schedule successfully posted\r\n          headers:\r\n            API-Version:\r\n              $ref: '#/components/headers/API-Version'\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  allOf:\r\n                    - $ref: '#/components/schemas/serviceSchedule'\r\n        default:\r\n          description: Unexpected error\r\n          headers:\r\n            API-Version:\r\n              $ref: '#/components/headers/API-Version'\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/ERROR_DOMAIN/1.0.0#/components/schemas/error'\r\n  /v3/port-schedules:\r\n    get:\r\n      parameters:\r\n        - in: query\r\n          name: UNLocationCode\r\n          description: |\r\n            The UN Location code specifying where the port is located.\r\n            \r\n            Specifying this filter will only return port schedules related to this particular UN Location code.\r\n          example: NLRTM\r\n          schema:\r\n            $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/UNLocationCode'\r\n        - in: query\r\n          name: facilitySMDGCode\r\n          description: |\r\n            The SMDG facility code (without the UN Location Code) to further filter by.\r\n          example: RWG\r\n          schema:\r\n            $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/facilityCode'\r\n        # - in: query\r\n        #   name: facilityBICCode\r\n        #   description: |\r\n        #     The BIC facility code (without the UN Location Code) to further filter by.\r\n        #   example: DIVO\r\n        #   schema:\r\n        #     $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/facilityCode'\r\n        - in: query\r\n          name: voyageNumber\r\n          description: |\r\n            The identifier of a voyage - can be both import and export Voyage. The result will only return schedules including the voyageNumber (either as importVoyageNumber or exportVoyageNumber)\r\n          schema:\r\n            $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/carrierVoyageNumber'\r\n        # - $ref: '#/components/parameters/dateInterval'\r\n        - $ref: '#/components/parameters/startDate'\r\n        - $ref: '#/components/parameters/endDate'\r\n        # Chunk with pagination parameters needed to be included in all APIs\r\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/parameters/limit'\r\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/parameters/cursor'\r\n        # - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/parameters/sort'\r\n        - $ref: '#/components/parameters/Api-Version-Major'\r\n      tags:\r\n        - Operational Vessel Schedules\r\n      summary: Get a list of Ports Schedules\r\n      description: |\r\n        a schedule object\r\n      responses:\r\n        '200':\r\n          description: Schedule successfully posted\r\n          headers:\r\n            API-Version:\r\n              $ref: '#/components/headers/API-Version'\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  allOf:\r\n                    - $ref: '#/components/schemas/portSchedule'\r\n        default:\r\n          description: Unexpected error\r\n          headers:\r\n            API-Version:\r\n              $ref: '#/components/headers/API-Version'\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/ERROR_DOMAIN/1.0.0#/components/schemas/error'\r\n\r\n  /v3/events:\r\n    get:\r\n      tags:\r\n        - Events\r\n      summary: Get Transport events\r\n      description: |\r\n        Retrieves Transport events. The default sort order is by eventCreatedDateTime in descending order (DESC)\r\n        \r\n        <b>NB</b>&#58; It is possible to combine queryParameters. When combining queryParameters be aware that it is also possible to make combinations that are mutual contradicting.\r\n        \r\n        Example&#58; <i>operationsEventTypeCode=CMPL and transportEventTypeCode=ARRI</i>\r\n        \r\n        Since there is no event that can be an OperationsEvent <u>and</u> a TransportEvent at the same time <b>this will return an empty list<b>!\r\n      parameters:\r\n        # Chunk with Transport related event parameters\r\n        - $ref: '#/components/parameters/transportEventTypeCode'\r\n        \r\n        # Chunk for TransportCall (used both in Operation- and Transport-Events)\r\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.1.1#/components/parameters/transportCallID'\r\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.1.1#/components/parameters/vesselIMONumber'\r\n        # - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.1.1#/components/parameters/carrierVoyageNumber'\r\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.1.1#/components/parameters/exportVoyageNumber'\r\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.1.1#/components/parameters/carrierServiceCode'\r\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.1.1#/components/parameters/UNLocationCode'\r\n\r\n        # Chunk with base event parameters\r\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.1.1#/components/parameters/eventCreatedDateTime'\r\n\r\n        # Chunk with Global related event parameters\r\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/parameters/limit'\r\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/parameters/cursor'\r\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/parameters/sort'\r\n        - $ref: '#/components/parameters/Api-Version-Major'\r\n      responses:\r\n        '200':\r\n          description: Successful operation\r\n          headers:\r\n            API-Version:\r\n              $ref: '#/components/headers/API-Version'\r\n            Current-Page:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/headers/Current-Page'\r\n            Next-Page:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/headers/Next-Page'\r\n            Prev-Page:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/headers/Prev-Page'\r\n            Last-Page:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/headers/Last-Page'\r\n            First-Page:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/headers/First-Page'\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: '#/components/schemas/transportEvent'\r\n        default:\r\n          description: Unexpected error\r\n          headers:\r\n            API-Version:\r\n              $ref: '#/components/headers/API-Version'\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/ERROR_DOMAIN/1.0.0#/components/schemas/error'\r\n\r\n\r\ncomponents:\r\n  headers:\r\n    API-Version:\r\n      schema:\r\n        type: string\r\n        example: '2.0.0'\r\n      description: SemVer used to indicate the version of the contract (API version) returned.\r\n  parameters: \r\n\r\n    ##############\r\n    # Query params\r\n    ##############\r\n\r\n    Api-Version-Major:\r\n      in: header\r\n      name: API-Version\r\n      required: false\r\n      schema:\r\n        type: string\r\n        example: '3'\r\n      description: |\r\n        An API-Version header MAY be added to the request (optional); if added it MUST only contain MAJOR version. API-Version header MUST be aligned with the URI version.\r\n    # dateInterval:\r\n    #   in: query\r\n    #   name: dateInterval\r\n    #   description: |\r\n    #     Date interval with end-date included for which the schedules should be retrieved. If any date inside a schedule matches within the dateInterval - the entire service for that schedule will be included in the result.\r\n        \r\n    #     Current month if this parameter is not specified. (example: `2022-01-13/2022-01-12`)\r\n        \r\n    #     Supported formats:\r\n\r\n    #     - `start-date`/`end-date`\r\n    #     - `start-date`/`duration`\r\n    #     - `duration`/`end-date`\r\n        \r\n    #     The duration is in `Period` format: `ISO-8601`. The date format is also according to `ISO-8601`, i.e. the default Local Date Formatter\r\n    #   example: 2022-01-13/2022-02-12\r\n    #   schema:\r\n    #     type: string\r\n    endDate:\r\n      in: query\r\n      name: endDate\r\n      description: |\r\n        The end date of the period for which schedule information is requested. If any date inside a schedule matches a date prior to the `endDate` the schedule will be included in the result. The value is populated in `ISO 8601` Date format.\r\n      required: false\r\n      schema:\r\n        $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/startDate'\r\n    startDate:\r\n      in: query\r\n      name: startDate\r\n      description: |\r\n        The start date of the period for which schedule information is requested. If any date inside a schedule matches a date after the `startDate` the schedule will be included in the result. The value is populated in `ISO 8601` Date format.\r\n      required: false\r\n      schema:\r\n        $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/startDate'\r\n    # dateRange:  \r\n    #   in: query\r\n    #   name: dateRange\r\n    #   description: The time period for which schedule information is sent. The duration is populated in ISO 8601 Duration format.\r\n    #   required: false\r\n    #   schema:\r\n    #     $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/dateRange'\r\n    transportEventTypeCode:\r\n      in: query\r\n      name: transportEventTypeCode\r\n      explode: false\r\n      style: form\r\n      description: |\r\n        Identifier for type of Transport event to filter by\r\n        - ARRI (Arrived)\r\n        - DEPA (Departed)\r\n        - OMIT (Omit)\r\n        - BLNK (Blank)\r\n        - ADHO (Ad Hoc)\r\n        - PHOT (Phase Out)\r\n        - PHIN (Phase In)\r\n        - SLID (Sliding)\r\n\r\n        It is possible to select multiple values by comma (,) separating them. For multiple values the OR-operator is used. For example <i>transportEventTypeCode=ARRI,DEPA</i> matches <b>both</b> Arrived (ARRI) and Departed (DEPA) transport events.\r\n        \r\n        Default is all transportEventTypeCodes.\r\n        \r\n        This filter is only relevant when filtering on TransportEvents\r\n      example: ARRI,DEPA\r\n      schema:\r\n        default: ARRI,DEPA\r\n        type: array\r\n        items:\r\n          $ref: '#/components/schemas/transportEventTypeCode'\r\n  schemas:\r\n    transportEvent:\r\n      type: object\r\n      allOf:\r\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/2.0.0#/components/schemas/operationsTransportEvent'\r\n        - type: object\r\n          properties:\r\n            transportEventTypeCode:\r\n              $ref: '#/components/schemas/transportEventTypeCode'\r\n    serviceSchedule:\r\n      type: object\r\n      allOf:\r\n        - type: object\r\n          properties:\r\n            carrierServiceName:\r\n              $ref: '#/components/schemas/carrierServiceName'\r\n        - type: object\r\n          properties:\r\n            carrierServiceCode:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/carrierServiceCode'\r\n        - type: object\r\n          properties:\r\n            vesselIMONumber:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/vesselIMONumber'\r\n        - type: object\r\n          properties:\r\n            vesselName:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/vesselName'\r\n        - type: object\r\n          properties:\r\n            isDummyVessel:\r\n              $ref: '#/components/schemas/isDummyVessel'\r\n        - type: object\r\n          properties:\r\n            vesselOperatorCarrierSMDGCode:\r\n              allOf:\r\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/vesselOperatorCarrierSMDGCode'\r\n        # - type: object\r\n        #   properties:\r\n        #     vesselOperatorCarrierCodeListProvider:\r\n        #       allOf:\r\n        #         - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/vesselOperatorCarrierCodeListProvider'\r\n        - $ref: '#/components/schemas/portCalls'\r\n\r\n    portCalls:\r\n      type: object\r\n      properties:\r\n        portCalls:\r\n          type: array\r\n          items:\r\n            allOf:\r\n              - $ref: '#/components/schemas/portCall'\r\n    portCall:\r\n      type: object\r\n      description: |\r\n        A portCall in the schedule. The order of the list is the sequence of the list\r\n      allOf:\r\n        - type: object\r\n          properties:\r\n            portCallStatusCode:\r\n              type: string\r\n              description: |\r\n                The status of the port call.\r\n                \r\n                - OMIT (Omit)\r\n                - BLNK (Blank)\r\n                - ADHO (Ad Hoc)\r\n                - PHOT (Phase Out)\r\n                - PHIN (Phase In)\r\n                - SLID (Sliding)\r\n              enum:\r\n                - OMIN\r\n                - PHIN\r\n                - PHOT\r\n                - ADHO\r\n                - BLNK\r\n                - SLID\r\n              example: OMIT\r\n        - type: object\r\n          properties:\r\n            transportCallID:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/transportCallID'\r\n        - type: object\r\n          properties:\r\n            importVoyageNumber:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/importVoyageNumber'\r\n        - type: object\r\n          properties:\r\n            exportVoyageNumber:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/exportVoyageNumber'\r\n        - type: object\r\n          properties:\r\n            portTerminalLocation:\r\n              $ref: '#/components/schemas/location'\r\n        - type: object\r\n          properties:\r\n            delayReasonCode:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/delayReasonCode'\r\n        - type: object\r\n          properties:\r\n            changeRemark:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/2.0.0#/components/schemas/changeRemark'\r\n        - $ref: '#/components/schemas/timestamps'\r\n      required:\r\n        - transportCallID\r\n    timestamps:\r\n      type: object\r\n      properties:\r\n        timestamps:\r\n          type: array\r\n          items:\r\n            allOf:\r\n              - $ref: '#/components/schemas/timestamp'\r\n    timestamp:\r\n      type: object\r\n      description: |\r\n        A timestamp for a port\r\n      allOf:\r\n        - type: object\r\n          properties:\r\n            eventTypeCode:\r\n              allOf:\r\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/2.0.0#/components/schemas/transportEventTypeCode'\r\n        - type: object\r\n          properties:\r\n            eventClassifierCode:\r\n              allOf:\r\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/2.0.0#/components/schemas/eventClassifierCode'\r\n                - enum:\r\n                  - ACT\r\n                  - EST\r\n                  - PLN\r\n        - type: object\r\n          properties:\r\n            eventDateTime:\r\n              type: string\r\n              format: date-time\r\n              description: |\r\n                The actual time in the timstamp\r\n              example: '2025-01-14T09:21:00+01:00'\r\n    portSchedule:\r\n      type: object\r\n      allOf:\r\n        - type: object\r\n          properties:\r\n            portTerminalLocation:\r\n              $ref: '#/components/schemas/location'\r\n        - $ref: '#/components/schemas/vesselPortTerminalCalls'\r\n\r\n    vesselPortTerminalCalls:\r\n      type: object\r\n      properties:\r\n        vesselPortTerminalCalls:\r\n          type: array\r\n          items:\r\n            allOf:\r\n              - $ref: '#/components/schemas/vesselPortTerminalCall'\r\n    vesselPortTerminalCall:\r\n      type: object\r\n      description: |\r\n        A vessel visiting the port\r\n      allOf:\r\n        - type: object\r\n          properties:\r\n            transportCallID:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/transportCallID'\r\n        - type: object\r\n          properties:\r\n            vesselIMONumber:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/vesselIMONumber'\r\n        - type: object\r\n          properties:\r\n            vesselName:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/vesselName'\r\n        - type: object\r\n          properties:\r\n            isDummyVessel:\r\n              $ref: '#/components/schemas/isDummyVessel'\r\n        - type: object\r\n          properties:\r\n            vesselOperatorCarrierSMDGCode:\r\n              allOf:\r\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/vesselOperatorCarrierSMDGCode'\r\n        # - type: object\r\n        #   properties:\r\n        #     vesselOperatorCarrierCode:\r\n        #       allOf:\r\n        #         - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/vesselOperatorCarrierCode'\r\n        # - type: object\r\n        #   properties:\r\n        #     vesselOperatorCarrierCodeListProvider:\r\n        #       allOf:\r\n        #         - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/vesselOperatorCarrierCodeListProvider'\r\n        - type: object\r\n          properties:\r\n            carrierServiceCode:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/carrierServiceCode'\r\n        - type: object\r\n          properties:\r\n            carrierServiceName:\r\n              $ref: '#/components/schemas/carrierServiceName'\r\n        - type: object\r\n          properties:\r\n            importVoyageNumber:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/importVoyageNumber'\r\n        - type: object\r\n          properties:\r\n            exportVoyageNumber:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/exportVoyageNumber'\r\n        - type: object\r\n          properties:\r\n            delayReasonCode:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/delayReasonCode'\r\n        - type: object\r\n          properties:\r\n            changeRemark:\r\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/2.0.0#/components/schemas/changeRemark'\r\n        - type: object\r\n          properties:\r\n            portCallStatusCode:\r\n              type: string\r\n              description: |\r\n                The status of the port call.\r\n                \r\n                - OMIT (Omit)\r\n                - BLNK (Blank)\r\n                - ADHO (Ad Hoc)\r\n                - PHOT (Phase Out)\r\n                - PHIN (Phase In)\r\n                - SLID (Sliding)\r\n              enum:\r\n                - OMIN\r\n                - PHIN\r\n                - PHOT\r\n                - ADHO\r\n                - BLNK\r\n                - SLID\r\n              example: OMIT\r\n        - type: object\r\n          properties:\r\n            previousPortTerminal:\r\n              allOf:\r\n                - $ref: '#/components/schemas/location'\r\n                - example:\r\n                    UNLocationCode: GBLGP\r\n                    facilitySMDGCode: DPWLG\r\n        - type: object\r\n          properties:\r\n            nextPortTerminal:\r\n              allOf:\r\n                - $ref: '#/components/schemas/location'\r\n                - example:\r\n                    UNLocationCode: DEHAM\r\n                    facilitySMDGCode: RMH\r\n        - $ref: '#/components/schemas/timestamps'\r\n\r\n    location:\r\n      type: object\r\n      description: |\r\n        General purpose object to capture location-related data, the location can be specified in any of the following ways: `UN Location Code`, a `Facility` or an `Address`.\r\n      anyOf:\r\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/2.0.0#/components/schemas/unLocationLocation'\r\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/2.0.0#/components/schemas/facilitySMDGLocation'\r\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/2.0.0#/components/schemas/addressLocation'\r\n      example:\r\n        UNLocationCode: NLRTM\r\n        facilitySMDGCode: RWG\r\n    isDummyVessel:\r\n      type: boolean\r\n      description: |\r\n        Is this a dummy vessel. In case no vessel has been asigned yet - this property can be set to `true` indicating that the vesselIMONumber does not exist.\r\n    carrierServiceName:\r\n      type: string\r\n      description: |\r\n        The name of the service \r\n      example: Great Lion Service\r\n    transportEventTypeCode:\r\n      type: string\r\n      description: |\r\n        Identifier for type of Transport event\r\n        - ARRI (Arrived)\r\n        - DEPA (Departed)\r\n        - OMIT (Omit)\r\n        - BLNK (Blank)\r\n        - ADHO (Ad Hoc)\r\n        - PHOT (Phase Out)\r\n        - PHIN (Phase In)\r\n        - SLID (Sliding)\r\n        \r\n        More details can be found on <a href=\"https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/transporteventtypecodes.csv\">GitHub</a>\r\n      enum:\r\n        - ARRI\r\n        - DEPA\r\n        - OMIT\r\n        - BLNK\r\n        - ADHO\r\n        - PHOT\r\n        - PHIN\r\n        - SLID\r\n      example: ARRI",
			"canonicalURL": "/github.com/dcsaorg/DCSA-OpenAPI@18caeb803330d26b2c25aba119a677d79647af54/-/blob/ovs/v3/ovs_v3.0.0.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/dcsaorg/DCSA-OpenAPI/blob/18caeb803330d26b2c25aba119a677d79647af54/ovs/v3/ovs_v3.0.0.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: at 1:15: schemas: \"vesselPortTerminalCalls\": parse schema: property \"vesselPortTerminalCalls\": at 1:9929: parse schema: item: at 1:9938: parse schema: allOf: [0]: at 1:9948: parse schema: resolve \"#/components/schemas/vesselPortTerminalCall\": parse schema: allOf: [0]: at 1:7444: parse schema: property \"transportCallID\": at 1:7477: parse schema: resolve \"https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/transportCallID\": external \"https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0\": https: do: Get \"https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0\": host \"api.swaggerhub.com\" is not allowed"
}