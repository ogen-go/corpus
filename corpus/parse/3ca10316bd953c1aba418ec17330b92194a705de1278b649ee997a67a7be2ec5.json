{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/networknt/model-config"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "rest/openapi/light-alert/openapi.yaml",
			"byteSize": 4752,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: OpenAPI Alert Server\n  license:\n    name: MIT\nservers:\n  - url: 'https://alert.lightapi.net'\npaths:\n  /rules:\n    get:\n      summary: List all rules\n      operationId: listRules\n      tags:\n        - rules\n      parameters:\n        - name: limit\n          in: query\n          description: How many items to return at one time (max 100)\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: offset\n          in: query\n          description: Set offset to a particular record count\n          required: false\n          schema:\n            type: integer\n            format: int32\n      security:\n        - alert_auth:\n            - 'alert.r'\n      responses:\n        '200':\n          description: A paged array of rules\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Rule'\n              example:\n                - id: 1\n                  name: rule1\n                  type: threshold\n                  min_events: 5\n                  frequency: 1m\n                  timeframe: 2d\n                  search: search one\n                  alerter: post to Azure event hub\n                - id: 2\n                  name: rule2\n                  type: list\n                  min_events: 3\n                  frequency: 40s\n                  timeframe: 1d\n                  search: search two\n                  alerter: alert email\n    post:\n      summary: Create a rule\n      operationId: createRule\n      requestBody:\n        description: Rule to be added\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Rule'\n      tags:\n        - rules\n      security:\n        - petstore_auth:\n            - 'alert.r'\n            - 'alert.w'\n      responses:\n        '201':\n          description: Null response\n  '/rules/{ruleId}':\n    get:\n      summary: Info for a specific rule\n      operationId: getRuleById\n      tags:\n        - rules\n      parameters:\n        - name: ruleId\n          in: path\n          required: true\n          description: The id of the rule to retrieve\n          schema:\n            type: string\n      security:\n        - alert_auth:\n            - 'alert.r'\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Rule'\n              example:\n                - id: 1\n                  name: rule1\n                  type: threshold\n                  min_events: 5\n                  frequency: 1m\n                  timeframe: 2d\n                  search: search one\n                  alerter: post to Azure event hub\n    delete:\n      summary: Delete a specific pet\n      operationId: deleteRuleById\n      tags:\n        - rules\n      parameters:\n        - name: ruleId\n          in: path\n          required: true\n          description: The id of the rule to delete\n          schema:\n            type: string\n      security:\n        - alert_auth:\n            - 'alert.w'\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Rule'\n              examples:\n                response:\n                  value:\n                  - id: 1\n                    name: rule1\n                    type: threshold\n                    min_events: 5\n                    frequency: 1m\n                    timeframe: 2d\n                    search: search one\n                    alerter: post to Azure event hub\ncomponents:\n  securitySchemes:\n    alert_auth:\n      type: oauth2\n      description: This API uses OAuth 2.0 with the client credential grant flow.\n      flows:\n        clientCredentials:\n          tokenUrl: 'https://localhost:6882/token'\n          scopes:\n            'alert.r': read rules\n            'alert.w': write rules\n  schemas:\n    Rule:\n      required:\n        - id\n        - name\n        - type\n        - min_events\n        - disabled\n        - frequency\n        - timeframe\n        - search\n        - alerter\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n        type:\n          type: string\n        min_events:\n          type: integer\n          format: int32\n        disabled:\n          type: boolean\n        frequency:\n          type: string\n        timeframe: \n          type: string\n        search: \n          type: string\n        alerter:\n          type: string\n"
		}
	},
	"Error": "parse: parse spec: paths: /rules: post: operation \"createRule\": security: unknown security schema \"petstore_auth\""
}