{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/astarte-platform/astarte"
		},
		"file": {
			"name": "astarte_realm_management_api.yaml",
			"size": 0,
			"path": "apps/astarte_realm_management_api/priv/static/astarte_realm_management_api.yaml",
			"byteSize": 35205,
			"content": "openapi: 3.0.0\nservers:\n  - url: '{base_url}/v1'\n    variables:\n      base_url:\n        default: 'http://localhost:4000'\n        description: \u003e-\n          The base URL you're serving Astarte from. This should point to the\n          base path from which Realm Management API is served. In case you are\n          running a local installation, this is likely `http://localhost:4000`.\n          In case you have a standard Astarte installation, it is most likely\n          `https://\u003cyour host\u003e/realmmanagement`.\ninfo:\n  description: \u003e-\n    Astarte's Realm Management API is the main mechanism to configure a Realm.\n    It allows installing and managing Interfaces, Triggers and any configuration\n    of the Realm itself.\n  version: 1.1.0-dev\n  title: Astarte Realm Management API\n  contact:\n    email: info@ispirata.com\ntags:\n  - name: config\n    description: \u003e-\n      Realm Configuration Management. These APIs configure the global behavior\n      of the Realm and how it can be accessed.\n  - name: interface\n    description: \u003e-\n      Interface management. These APIs are used for installing, deleting (if\n      possible) and updating Interfaces in a Realm.\n    externalDocs:\n      description: User documentation\n      url: 'https://docs.astarte-platform.org/1.0/030-manage_interfaces.html'\n  - name: trigger\n    description: Trigger management\n    externalDocs:\n      description: User documentation\n      url: 'https://docs.astarte-platform.org/1.0/060-triggers.html'\npaths:\n  '/{realm_name}/config/auth':\n    parameters:\n      - $ref: '#/components/parameters/Realm'\n    get:\n      tags:\n        - config\n      summary: Get auth configuration\n      description: Get a JSON that describes the auth configuration of the realm\n      operationId: getAuthConfig\n      security:\n        - JWT: []\n      responses:\n        '200':\n          $ref: '#/components/responses/GetAuthConfig'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n    put:\n      tags:\n        - config\n      summary: Install a new auth configuration for the realm\n      description: \u003e-\n        Installs a auth configuration for the realm. The body must contain the\n        full auth configuration. Validation is performed, and an error is\n        returned if the configuration cannot be installed or validated.\n      operationId: putAuthConfig\n      security:\n        - JWT: []\n      responses:\n        '204':\n          description: Success\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '422':\n          $ref: '#/components/responses/ConfigValidationError'\n      requestBody:\n        $ref: '#/components/requestBodies/PutAuthConfig'\n  '/{realm_name}/interfaces':\n    parameters:\n      - $ref: '#/components/parameters/Realm'\n    get:\n      tags:\n        - interface\n      summary: Get interface list\n      description: Get a list of all installed interface names.\n      operationId: getInterfaceList\n      security:\n        - JWT: []\n      responses:\n        '200':\n          $ref: '#/components/responses/GetInterfaceList'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n    post:\n      tags:\n        - interface\n      summary: Install a new interface to the realm\n      description: \u003e-\n        Install a new interface, or a newer major version for a given interface.\n        Validation is performed, and an error is returned if interface cannot be\n        installed. The installation is performed asynchronously by default. You\n        can perform the call synchronously by setting the async_operation query\n        param to false.\n      operationId: installInterface\n      security:\n        - JWT: []\n      parameters:\n        - name: async_operation\n          in: query\n          description: Whether the operation should be carried out asynchronously.\n          required: false\n          schema:\n            type: boolean\n            default: true\n      responses:\n        '201':\n          $ref: '#/components/responses/InstallInterface'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '422':\n          $ref: '#/components/responses/InterfaceValidationError'\n      requestBody:\n        $ref: '#/components/requestBodies/InstallInterface'\n  '/{realm_name}/interfaces/{interface_name}':\n    parameters:\n      - $ref: '#/components/parameters/Realm'\n      - $ref: '#/components/parameters/InterfaceName'\n    get:\n      tags:\n        - interface\n      summary: Get interface major versions\n      description: 'An interface might have multiple major versions, list all of them.'\n      operationId: getInterfaceMajorVersions\n      security:\n        - JWT: []\n      responses:\n        '200':\n          $ref: '#/components/responses/GetInterfaceMajorVersions'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/InterfaceNotFound'\n  '/{realm_name}/interfaces/{interface_name}/{major_version}':\n    parameters:\n      - $ref: '#/components/parameters/Realm'\n      - $ref: '#/components/parameters/InterfaceName'\n      - $ref: '#/components/parameters/InterfaceMajor'\n      - name: realm_name\n        in: path\n        description: Target realm\n        required: true\n        schema:\n          type: string\n      - name: interface_name\n        in: path\n        description: Interface name\n        required: true\n        schema:\n          type: string\n      - name: major_version\n        in: path\n        description: Interface major version\n        required: true\n        schema:\n          type: integer\n    put:\n      tags:\n        - interface\n      summary: Updates an existing interface to a new minor release\n      description: \u003e-\n        Replace an existing interface with a certain major version with a new\n        one (that must have same major version and a higher minor version).\n        Server side validation is performed. Interface upgrade is performed\n        asynchronously by default. You can perform the call synchronously by\n        setting the async_operation query param to false. For more information\n        about what is allowed when updating an interface, see [the\n        doc](https://docs.astarte-platform.org/1.0/030-interface.html#versioning).\n        This operation cannot be reverted.\n      operationId: updateInterface\n      security:\n        - JWT: []\n      parameters:\n        - name: async_operation\n          in: query\n          description: Whether the operation should be carried out asynchronously.\n          required: false\n          schema:\n            type: boolean\n            default: true\n      responses:\n        '204':\n          description: Success\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/InterfaceNotFound'\n        '409':\n          $ref: '#/components/responses/UpdateConflict'\n        '422':\n          $ref: '#/components/responses/InterfaceValidationError'\n      requestBody:\n        $ref: '#/components/requestBodies/UpdateInterface'\n    get:\n      tags:\n        - interface\n      summary: Get an interface\n      description: \u003e-\n        Show a previously installed interface. Previous minor versions for a\n        given major version are not retrieved, only the most recent interface\n        for each interface major is returned.\n      operationId: getInterface\n      security:\n        - JWT: []\n      responses:\n        '200':\n          $ref: '#/components/responses/GetInterface'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/InterfaceNotFound'\n    delete:\n      tags:\n        - interface\n      summary: Delete a draft interface\n      description: \u003e-\n        Delete an interface draft (a draft is an interface with major version\n        0). An interface with a major version different than 0 should be\n        manually deleted. Interface deletion is performed asynchronously by\n        default. You can perform the call synchronously by setting the\n        async_operation query param to false.\n      operationId: deleteInterface\n      security:\n        - JWT: []\n      parameters:\n        - name: async_operation\n          in: query\n          description: Whether the operation should be carried out asynchronously.\n          required: false\n          schema:\n            type: boolean\n            default: true\n      responses:\n        '204':\n          description: Success\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/InterfaceNotFound'\n  '/{realm_name}/triggers':\n    parameters:\n      - $ref: '#/components/parameters/Realm'\n    get:\n      tags:\n        - trigger\n      summary: Get trigger list\n      description: \u003e-\n        Get a list of all installed triggers. The trigger name for each\n        installed trigger is reported.\n      operationId: getTriggerList\n      security:\n        - JWT: []\n      responses:\n        '200':\n          $ref: '#/components/responses/GetTriggerList'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n    post:\n      tags:\n        - trigger\n      summary: Install trigger configuration\n      description: \u003e-\n        Install a new trigger using provided configuration. Trigger validation\n        is performed before installation, if trigger configuration is not valid\n        or a trigger with the same name already exists an error is reported. New\n        trigger events might not be immediately processed.\n      operationId: installTrigger\n      security:\n        - JWT: []\n      responses:\n        '201':\n          $ref: '#/components/responses/InstallTrigger'\n        '400':\n          description: Bad request\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '422':\n          $ref: '#/components/responses/TriggerValidationError'\n      requestBody:\n        $ref: '#/components/requestBodies/InstallTrigger'\n  '/{realm_name}/triggers/{trigger_name}':\n    parameters:\n      - $ref: '#/components/parameters/Realm'\n      - $ref: '#/components/parameters/TriggerName'\n    get:\n      tags:\n        - trigger\n      summary: Get trigger configuration\n      description: Retrieve installed trigger configuration.\n      operationId: getTrigger\n      security:\n        - JWT: []\n      responses:\n        '200':\n          $ref: '#/components/responses/GetTrigger'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          description: Internal Server Error.\n    delete:\n      tags:\n        - trigger\n      summary: Delete trigger\n      description: \u003e-\n        Deletes an existing trigger with a given `trigger_name`. Please note\n        that triggers which have been already queued might still be delivered\n        for a short time even after trigger deletion.\n      operationId: deleteTrigger\n      security:\n        - JWT: []\n      responses:\n        '204':\n          description: Success\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          description: Internal Server Error.\ncomponents:\n  responses:\n    ConfigValidationError:\n      description: The provided configuration is not valid.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ValidationError'\n          example:\n            errors:\n              jwt_public_key_pem:\n                - is not a valid PEM public key\n    Forbidden:\n      description: \u003e-\n        Authorization failed for the resource. This could also result from\n        unexisting resources.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GenericError'\n          example:\n            errors:\n              detail: Forbidden\n    GetAuthConfig:\n      description: Success\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - data\n            properties:\n              data:\n                $ref: '#/components/schemas/AuthConfig'\n    GetInterface:\n      description: Success\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - data\n            properties:\n              data:\n                $ref: '#/components/schemas/Interface'\n    GetInterfaceList:\n      description: Success\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - data\n            properties:\n              data:\n                type: array\n                items:\n                  type: string\n            example:\n              data:\n                - com.example.InterfaceFoo\n                - com.example.InterfaceBar\n    GetInterfaceMajorVersions:\n      description: Success\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - data\n            properties:\n              data:\n                type: array\n                items:\n                  type: integer\n            example:\n              data:\n                - 1\n                - 2\n                - 10\n    GetTrigger:\n      description: Success\n      content:\n        application/json:\n          schema:\n            type: string\n            required:\n              - data\n            properties:\n              data:\n                $ref: '#/components/schemas/TriggerConfig'\n            example:\n              data:\n                name: my_device_connected\n                action:\n                  http_post_url: 'http://example.com/my_post_url'\n                simple_triggers:\n                  - type: device_trigger\n                    'on': device_connected\n                    device_id: glO6LullTKmwxebForU-eg\n    GetTriggerList:\n      description: Success\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - data\n            properties:\n              data:\n                type: array\n                items:\n                  type: string\n            example:\n              data:\n                - new_data_on_test_interface\n                - connected_device\n                - value_above_threshold_alarm\n    InstallInterface:\n      description: Interface installation succesfully started\n      headers:\n        Location:\n          description: URL of the installed interface\n          schema:\n            type: string\n    InstallTrigger:\n      description: Success\n      headers:\n        Location:\n          description: URL of the installed trigger\n          schema:\n            type: string\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - data\n            properties:\n              data:\n                $ref: '#/components/schemas/TriggerConfig'\n    InterfaceNotFound:\n      description: Requested interface was not found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GenericError'\n          example:\n            errors:\n              detail: Interface not found\n    InterfaceValidationError:\n      description: The provided interface is not valid.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ValidationError'\n          example:\n            errors:\n              mappings:\n                type:\n                  - is invalid\n    TriggerValidationError:\n      description: The provided trigger configuration is not valid.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ValidationError'\n          example:\n            errors:\n              simple_triggers:\n                - device_id:\n                    - is not a valid device_id\n    NotFound:\n      description: Resource not found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GenericError'\n          example:\n            errors:\n              detail: Not found\n    Unauthorized:\n      description: Authorization information is missing or invalid.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GenericError'\n          example:\n            errors:\n              detail: Unauthorized\n    UpdateConflict:\n      description: \u003e-\n        The updated interface is valid, but there's a conflict with the existing\n        one\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GenericError'\n          example:\n            errors:\n              detail: Interface minor version was not increased\n    InternalServerError:\n      description: Internal Server Error.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GenericError'\n  securitySchemes:\n    JWT:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: \u003e\n        To access APIs a valid JWT token must be passed in all requests in the\n        `Authorization` header. This token should be signed with the private key\n        associated with the realm the request refers to.\n\n\n        The following syntax must be used in the `Authorization` header :\n          `Bearer xxxxxx.yyyyyyy.zzzzzz`\n  requestBodies:\n    InstallTrigger:\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - data\n            properties:\n              data:\n                $ref: '#/components/schemas/TriggerConfig'\n    InstallInterface:\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - data\n            properties:\n              data:\n                $ref: '#/components/schemas/Interface'\n      description: A JSON object representing an Astarte Interface.\n      required: true\n    PutAuthConfig:\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - data\n            properties:\n              data:\n                $ref: '#/components/schemas/AuthConfig'\n      description: AuthConfig object with the new configuration\n      required: true\n    UpdateInterface:\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - data\n            properties:\n              data:\n                $ref: '#/components/schemas/Interface'\n          example:\n            data:\n              interface_name: org.astarteplatform.Values\n              version_major: 0\n              version_minor: 2\n              type: datastream\n              ownership: device\n              mappings:\n                - endpoint: /realValue\n                  type: double\n                  explicit_timestamp: true\n                - endpoint: /anotherValue\n                  type: string\n      description: A JSON object representing the updated Astarte Interface.\n      required: true\n  parameters:\n    Realm:\n      name: realm_name\n      in: path\n      description: Target realm\n      required: true\n      schema:\n        type: string\n    InterfaceName:\n      name: interface_name\n      in: path\n      description: Interface name\n      required: true\n      schema:\n        type: string\n    InterfaceMajor:\n      name: major_version\n      in: path\n      description: Interface major version\n      required: true\n      schema:\n        type: integer\n    TriggerName:\n      name: trigger_name\n      in: path\n      description: Trigger name\n      required: true\n      schema:\n        type: string\n  schemas:\n    AuthConfig:\n      type: object\n      properties:\n        jwt_public_key_pem:\n          type: string\n          example: |\n            -----BEGIN PUBLIC KEY-----\n            MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsj7/Ci5Nx+ApLNW7+DyE\n            eTzQ68KEJT/gPW73Kpa2uyvxDwY669z/rP4hMj16wv4Ku3bI6C1ZIqT5SVuF8pDo\n            1Y1SF0GRIeslupm9KV1aFqIu1/srLz18LQHucQYUSa99PStFUJY2V83wneaeAArY\n            4VKDuQYtRZOd2VeD5Cbn602ksLLWCQc9HfL3VUHXTw6DuthnMMJARcVem8RAMScm\n            htGi6YRPFzvHtkb1WQCNGjw5gAmHX5/37ouwbBdnXOa9deiFv+1UIdcCVwMTyP/4\n            f9jgaxW4oQV85enS/OJrrC9jU11agRc4bDv1h4s2t+ETWb4llTVk3HMIHbC3EvKJ\n            VwIDAQAB\n            -----END PUBLIC KEY-----\n    Interface:\n      type: object\n      properties:\n        interface_name:\n          type: string\n          pattern: \u003e-\n            ^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])$\n          minLength: 1\n          maxLength: 128\n          description: \u003e-\n            The name of the interface. This has to be an unique, alphanumeric\n            reverse internet domain name, shorther than 128 characters.\n        version_major:\n          type: integer\n          description: \u003e-\n            A Major version qualifier for this interface. Interfaces with the\n            same id and different version_major number are deemed incompatible.\n            It is then acceptable to redefine any property of the interface when\n            changing the major version number.\n        version_minor:\n          type: integer\n          description: \u003e-\n            A Minor version qualifier for this interface. Interfaces with the\n            same id and major version number and different version_minor number\n            are deemed compatible between each other. When changing the minor\n            number, it is then only possible to insert further mappings. Any\n            other modification might lead to incompatibilities and undefined\n            behavior.\n        type:\n          type: string\n          enum:\n            - datastream\n            - properties\n          description: \u003e-\n            Identifies the type of this Interface. Currently two types are\n            supported: datastream and properties. datastream should be used when\n            dealing with streams of non-persistent data, where a single path\n            receives updates and there's no concept of state. properties,\n            instead, are meant to be an actual state and as such they have only\n            a change history, and are retained.\n        ownership:\n          type: string\n          enum:\n            - device\n            - server\n          description: \u003e-\n            Identifies the ownership of the interface. Interfaces are meant to\n            be unidirectional, and this property defines who's sending or\n            receiving data. device means the device/gateway is sending data to\n            Astarte, server means the device/gateway is receiving data from\n            Astarte. Bidirectional mode is not supported, you should instantiate\n            another interface for that.\n        aggregation:\n          type: string\n          enum:\n            - individual\n            - object\n          default: individual\n          description: \u003e-\n            Identifies the aggregation of the mappings of the interface.\n            Individual means every mapping changes state or streams data\n            independently, whereas an object aggregation treats the interface as\n            an object, making all the mappings changes interdependent. Choosing\n            the right aggregation might drastically improve performances.\n        description:\n          type: string\n          description: An optional description of the interface.\n        doc:\n          type: string\n          description: \u003e-\n            A string containing documentation that will be injected in the\n            generated client code.\n        mappings:\n          type: array\n          description: \u003e-\n            Mappings define the endpoint of the interface, where actual data is\n            stored/streamed. They are defined as relative URLs (e.g. /my/path)\n            and can be parametrized (e.g.: /%{myparam}/path). A valid interface\n            must have no mappings clash, which means that every mapping must\n            resolve to a unique path or collection of paths (including\n            parametrization). Every mapping acquires type, quality and\n            aggregation of the interface.\n          items:\n            $ref: '#/components/schemas/Mapping'\n          minItems: 1\n          maxItems: 1024\n          uniqueItems: true\n      required:\n        - interface_name\n        - version_minor\n        - version_major\n        - type\n        - ownership\n        - mappings\n      example:\n        interface_name: org.astarteplatform.Values\n        version_major: 0\n        version_minor: 1\n        type: datastream\n        ownership: device\n        mappings:\n          - endpoint: /realValue\n            type: double\n            explicit_timestamp: true\n    Mapping:\n      type: object\n      description: \u003e-\n        Identifies a mapping for an interface. A mapping must consist at least\n        of an endpoint and a type.\n      properties:\n        endpoint:\n          type: string\n          pattern: '^(/(%{([a-zA-Z][a-zA-Z0-9]*)}|[a-zA-Z][a-zA-Z0-9]*)){1,64}$'\n          minLength: 2\n          maxLength: 256\n          description: \u003e-\n            The template of the path. This is a UNIX-like path (e.g. /my/path)\n            and can be parametrized. Parameters are in the %{name} form, and can\n            be used to create interfaces which represent dictionaries of\n            mappings. When the interface aggregation is object, an object is\n            composed by all the mappings for one specific parameter combination.\n            /timestamp is a reserved path for timestamps, so every mapping on a\n            datastream must not have any endpoint that ends with /timestamp.\n        type:\n          type: string\n          enum:\n            - double\n            - integer\n            - boolean\n            - longinteger\n            - string\n            - binaryblob\n            - datetime\n            - doublearray\n            - integerarray\n            - booleanarray\n            - longintegerarray\n            - stringarray\n            - binaryblobarray\n            - datetimearray\n          description: Defines the type of the mapping.\n        reliability:\n          type: string\n          enum:\n            - unreliable\n            - guaranteed\n            - unique\n          default: unreliable\n          description: \u003e-\n            Useful only with datastream. Defines whether the sent data should be\n            considered delivered when the transport successfully sends the data\n            (unreliable), when we know that the data has been received at least\n            once (guaranteed) or when we know that the data has been received\n            exactly once (unique). unreliable by default. When using reliable\n            data, consider you might incur in additional resource usage on both\n            the transport and the device's end.\n        retention:\n          type: string\n          enum:\n            - discard\n            - volatile\n            - stored\n          default: discard\n          description: \u003e-\n            Useful only with datastream. Defines whether the sent data should be\n            discarded if the transport is temporarily uncapable of delivering it\n            (discard) or should be kept in a cache in memory (volatile) or on\n            disk (stored), and guaranteed to be delivered in the timeframe\n            defined by the expiry. discard by default.\n        expiry:\n          type: integer\n          default: 0\n          description: \u003e-\n            Useful when retention is stored. Defines after how many seconds a\n            specific data entry should be kept before giving up and erasing it\n            from the persistent cache. A value \u003c= 0 means the persistent cache\n            never expires, and is the default.\n        allow_unset:\n          type: boolean\n          default: false\n          description: \u003e-\n            Used only with properties. Used with producers, it generates a\n            method to unset the property. Used with consumers, it generates code\n            to call an unset method when an empty payload is received.\n        explicit_timestamp:\n          type: boolean\n          default: false\n          description: \u003e-\n            Allow to set a custom timestamp, otherwise a timestamp is added when\n            the message is received. If true explicit timestamp will also be\n            used for sorting. This feature is only supported on datastreams.\n        description:\n          type: string\n          description: An optional description of the mapping.\n        doc:\n          type: string\n          description: \u003e-\n            A string containing documentation that will be injected in the\n            generated client code.\n      required:\n        - endpoint\n        - type\n    TriggerConfig:\n      type: object\n      properties:\n        name:\n          description: Name of the trigger\n          type: string\n        action:\n          oneOf:\n            - $ref: '#/components/schemas/HTTPPostAction'\n        simple_triggers:\n          description: \u003e-\n            Simple triggers that will trigger the action. For now only a single\n            simple trigger is supported.\n          type: array\n          minLength: 1\n          maxLength: 1\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/DataSimpleTrigger'\n              - $ref: '#/components/schemas/DeviceSimpleTrigger'\n      required:\n        - name\n        - action\n        - simple_triggers\n      example:\n        name: value_above_threshold_alarm\n        action:\n          http_post_url: 'http://example.com/my_post_url'\n        simple_triggers:\n          - type: data_trigger\n            'on': incoming_data\n            interface_name: org.astarteplatform.Values\n            interface_major: 0\n            match_path: /realValue\n            value_match_operator: '\u003e'\n            known_value: 0.6\n    HTTPPostAction:\n      type: object\n      description: \u003e-\n        An object describing an HTTP post action that will be executed by the\n        trigger\n      properties:\n        http_post_url:\n          description: The target URL for the POST\n          type: string\n        ignore_ssl_errors:\n          description: If true, ignore SSL errors when performing the HTTP request.\n          default: false\n          type: boolean\n        template_type:\n          description: \u003e-\n            The type of template used for the POST request, if any. If not\n            specified, the payload of the POST will be a JSON object\n            representing the event.\n          type: string\n          enum:\n            - mustache\n        template:\n          description: \u003e-\n            If a template_type is specified, this should contain the template to\n            be applied.\n          type: string\n          example: 'Just received {{value}} from {{device_id}}'\n      required:\n        - http_post_url\n    DataSimpleTrigger:\n      type: object\n      description: An object describing a simple trigger reacting to published data.\n      properties:\n        type:\n          description: 'The type of the simple trigger, must be data_trigger.'\n          type: string\n          enum:\n            - data_trigger\n        device_id:\n          description: The device id the trigger will be restricted to.\n          type: string\n        group_name:\n          description: The group name the trigger will be restricted to.\n          type: string\n        interface_name:\n          description: The name of the target interface or * to match all interfaces.\n          type: string\n        interface_major:\n          description: \u003e-\n            The major version of the target interface. Ignored if interface_name\n            is *.\n          type: integer\n        match_path:\n          description: \u003e-\n            The target endpoint path for the trigger or /* to match all the\n            endpoints of the target interface.\n          type: string\n        'on':\n          description: The type of data event the trigger will react to\n          type: string\n          enum:\n            - incoming_data\n            - value_change\n            - value_change_applied\n            - path_created\n            - path_removed\n            - value_stored\n        known_value:\n          description: \u003e-\n            Used with value_match_operator to determine whether to activate the\n            trigger or not. The known value is used in the right hand side of\n            the comparison, e.g. if known_value is 0.6 and value_match_operator\n            is \u003e, the trigger will be activated only if the published value is \u003e\n            0.6. The type of this value must be the same of the published value.\n            Ignored if value_match_operator is *.\n        value_match_operator:\n          description: \u003e-\n            A comparison operator used with known_value or * to match\n            everything. See also known_value.\n          type: string\n          enum:\n            - '*'\n            - ==\n            - '!='\n            - '\u003e'\n            - '\u003e='\n            - \u003c\n            - \u003c=\n            - contains\n            - not_contains\n      required:\n        - type\n        - interface_name\n        - match_path\n        - 'on'\n        - value_match_operator\n    DeviceSimpleTrigger:\n      type: object\n      description: An object describing a simple trigger reacting to device state changes.\n      properties:\n        type:\n          description: 'The type of the simple trigger, must be device_trigger.'\n          type: string\n          enum:\n            - device_trigger\n        'on':\n          description: The type of device event the trigger will react to.\n          type: string\n          enum:\n            - device_connected\n            - device_disconnected\n            - device_empty_cache_received\n            - device_error\n        device_id:\n          description: The device id the trigger will be restricted to.\n          type: string\n        group_name:\n          description: The group name the trigger will be restricted to.\n          type: string\n      required:\n        - type\n        - 'on'\n    GenericError:\n      type: object\n      required:\n        - errors\n      properties:\n        errors:\n          type: object\n          properties:\n            detail:\n              type: string\n    ValidationError:\n      type: object\n      required:\n        - errors\n      properties:\n        errors:\n          type: object\n",
			"canonicalURL": "/github.com/astarte-platform/astarte@2ca7defba4e3b5386cc4a25cc7424d83ba25f014/-/blob/apps/astarte_realm_management_api/priv/static/astarte_realm_management_api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/astarte-platform/astarte/blob/2ca7defba4e3b5386cc4a25cc7424d83ba25f014/apps/astarte_realm_management_api/priv/static/astarte_realm_management_api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/{realm_name}/interfaces/{interface_name}/{major_version}\": parameters: at 1:22560: duplicate parameter: \"realm_name\" in \"path\""
}