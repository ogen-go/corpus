{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/JetBrains/package-search-api-models"
		},
		"file": {
			"name": "swagger-v2.3.1.yaml",
			"size": 0,
			"path": "swagger/swagger-v2.3.1.yaml",
			"byteSize": 53922,
			"content": "openapi: 3.0.0\ninfo:\n  title: JetBrains Package Search API v2\n  version: 2.3.1\n  description: \u003e-\n    JetBrains Package Search API v2.\u003cbr /\u003e\n    All responses are in UTF-8.\u003cbr /\u003e\n    Note that V1 content types, and legacy /idea/* endpoints, **are deprecated** and will be eventually shut down. Please migrate to the equivalent\n    V2 content types and endpoints as soon as possible.\n  termsOfService: 'https://plugins.jetbrains.com/legal/terms-of-use'\n  contact:\n    email: support@jetbrains.com\ntags:\n  - name: package\n    description: Package resource.\n  - name: repository\n    description: Repository resource.\n  - name: idea\n    description: IntelliJ IDEA-specific resource.\n  - name: statistic\n    description: Package statistics.\npaths:\n  '/repositories':\n    get:\n      tags:\n        - repository\n      summary: List indexed public repositories.\n      description: \u003e-\n        Returns a list of the public repositories indexed by default by Package Search.\u003cbr /\u003e\n        This endpoint *requires* a valid V2 content type in the request Accept header, or a `*/*` wildcard, or that the Accept header is\n        missing.\u003cbr /\u003e\n        The responses are identical for all acceptable content types, and wildcards.\n      operationId: getPublicRepositoriesList\n      responses:\n        '200':\n          description: Successful operation.\n          headers:\n            X-Request-Id:\n              description: RequestId used for metrics \u0026 diagnostics\n              schema:\n                type: string\n          content:\n            application/vnd.jetbrains.packagesearch.minimal.v2+json:\n              schema:\n                $ref: '#/components/schemas/RepositoriesList'\n            application/vnd.jetbrains.packagesearch.standard.v2+json:\n              schema:\n                $ref: '#/components/schemas/RepositoriesList'\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/RepositoriesList'\n        '406':\n          description: No acceptable content types provided in the request Accept header.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/package/{id}':\n    get:\n      tags:\n        - package\n      summary: Find package by Maven coordinates.\n      description: \u003e-\n        Returns a single package with the given `groupId:artifactId` coordinates, if any.\u003cbr /\u003e\n        This endpoint *requires* a valid V1 or V2 content type in the request Accept header, or `application/json`, or a `*/*` wildcard, or that\n        the Accept header is missing.\u003cbr /\u003e\n        For `*/*` the response is in the standard V2 format, for `application/json` or missing Accept header it's in the minimal V1 format.\n      operationId: getPackageById\n      parameters:\n        - name: id\n          in: path\n          description: \u003e-\n            GroupId and ArtifactId of the package. E.g., `org.jetbrains:package-search`.\n          required: true\n          schema:\n            type: string\n            pattern: '^([\\w.\\-]+):([\\w.\\-]+)$'\n      responses:\n        '200':\n          description: Successful operation.\n          headers:\n            X-Request-Id:\n              description: RequestId used for metrics \u0026 diagnostics\n              schema:\n                type: string\n          content:\n            application/vnd.jetbrains.packagesearch.minimal.v2+json:\n              schema:\n                $ref: '#/components/schemas/MinimalV2PackageWithRepos'\n            application/vnd.jetbrains.packagesearch.standard.v2+json:\n              schema:\n                $ref: '#/components/schemas/StandardV2PackageWithRepos'\n            application/json+org.jetbrains.packagesearch.minimal:\n              schema:\n                $ref: '#/components/schemas/MinimalV1Package'\n            application/json+org.jetbrains.packagesearch.standard:\n              schema:\n                $ref: '#/components/schemas/StandardV1Package'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MinimalV1Package'\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/StandardV2PackageWithRepos'\n        '400':\n          description: Missing or invalid ID, should be in `groupId:artifactId` format.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: No package found with the given coordinates.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '406':\n          description: No acceptable content types provided in the request Accept header.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: Something went wrong.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/package/{id}/readme':\n    get:\n      tags:\n        - package\n      summary: Get readme by Maven coordinates.\n      description: \u003e-\n        Returns a valid HTML readme with the given `groupId:artifactId` coordinates, if any.\u003cbr /\u003e\n        This endpoint *requires* a valid `text/html` content type in the request Accept header.\n      operationId: getPackageReadmeById\n      parameters:\n        - name: id\n          in: path\n          description: \u003e-\n            GroupId and ArtifactId of the package. E.g., `org.jetbrains:package-search`.\n          required: true\n          schema:\n            type: string\n            pattern: '^([\\w.\\-]+):([\\w.\\-]+)$'\n      responses:\n        '200':\n          description: Successful operation.\n          headers:\n            X-Request-Id:\n              description: RequestId used for metrics \u0026 diagnostics\n              schema:\n                type: string\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/PackageReadme'\n        '400':\n          description: Missing or invalid ID, should be in `groupId:artifactId` format.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: No package found with the given coordinates.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '406':\n          description: No acceptable content types provided in the request Accept header.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: Something went wrong.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/package#range':\n    get:\n      tags:\n        - package\n      summary: Find a range of packages by their Maven coordinates.\n      description: \u003e-\n        Returns a collection of packages that match the provided Maven coordinates (a comma-separated list of `groupId:artifactId`).\u003cbr /\u003e\n        The result will contain _at most_ the same number of items as the number of IDs provided in the request, but may contain less, if any of\n        the IDs have no matches.\u003cbr /\u003e\n        Note that if none of the provided IDs match you will get an HTTP 200 response with an empty array of packages.\u003cbr /\u003e\n        This endpoint *requires* a valid V1 or V2 content type in the request Accept header, or `application/json`, or a `*/*` wildcard, or that\n        the Accept header is missing.\u003cbr /\u003e\n        For `*/*` the response is in the standard V2 format, for `application/json` or missing Accept header it's in the minimal V1 format.\n      operationId: getPackagesByRange\n      parameters:\n        - name: range\n          in: query\n          description: \u003e-\n            Range of package coordinates; max. 25 items in a `groupId:artifactId` format, comma-separated.\u003cbr /\u003e\n            E.g., `com.jetbrains:my-package,com.jetbrains:another-package`.\n          required: true\n          schema:\n            type: array\n            items:\n              type: string\n              pattern: '^([\\w.\\-]+):([\\w.\\-]+)$'\n      responses:\n        '200':\n          description: Successful operation.\n          headers:\n            X-Request-Id:\n              description: RequestId used for metrics \u0026 diagnostics\n              schema:\n                type: string\n          content:\n            application/vnd.jetbrains.packagesearch.minimal.v2+json:\n              schema:\n                $ref: '#/components/schemas/MinimalV2PackagesWithRepos'\n            application/vnd.jetbrains.packagesearch.standard.v2+json:\n              schema:\n                $ref: '#/components/schemas/StandardV2PackagesWithRepos'\n            application/json+org.jetbrains.packagesearch.minimal:\n              schema:\n                $ref: '#/components/schemas/MinimalV1Package'\n            application/json+org.jetbrains.packagesearch.standard:\n              schema:\n                $ref: '#/components/schemas/StandardV1Package'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MinimalV1Package'\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/StandardV2PackageWithRepos'\n        '400':\n          description: Either no non-blank IDs were passed, or more than 25 IDs non-blank IDs were passed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '406':\n          description: No acceptable content types provided in the request Accept header.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: Something went wrong.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/package#search':\n    get:\n      tags:\n        - package\n      summary: Search for packages by query (fulltext search).\n      description: \u003e-\n        Returns a collection of packages matching the provided query in any of their fields.\u003cbr /\u003e\n        If the query only contains Maven coordinates (`groupId:artifactId`), the results will prioritise exact matches of the coordinates.\u003cbr /\u003e\n        This endpoint *requires* a valid V1 or V2 content type in the request Accept header, or `application/json`, or a `*/*` wildcard, or that\n        the Accept header is missing.\u003cbr /\u003e\n        For `*/*` the response is in the standard V2 format, for `application/json` Accept header it's in the minimal V1 format. If the accept\n        header is missing or empty, the legacy format will be used (a wrapped minimal v1 format, expected by IJ's built-in editor suggestions\n        for dependencies in build scripts)\n      operationId: searchPackages\n      parameters:\n        - name: query\n          in: query\n          description: Search query, Must not be absent or blank.\n          required: true\n          schema:\n            type: string\n        - name: onlyStable\n          in: query\n          description: When true, only packages containing stable versions will be returned. Default value `false`.\n          required: false\n          schema:\n            type: boolean\n        - name: includeMPPChild\n          in: query\n          description: When true, mpp child artifacts (platfrom specific) will be included in search results. Default value `false`.\n          required: false\n          schema:\n            type: boolean\n        - name: onlyMpp\n          in: query\n          description: When true, only multi-platform packages will be included in search results. Default value `false`.\n          required: false\n          schema:\n            type: boolean\n        - name: mustSupport\n          in: query\n          description: Comma-separated list of the supported platforms/targets.\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful operation.\n          headers:\n            X-Request-Id:\n              description: RequestId used for metrics \u0026 diagnostics\n              schema:\n                type: string\n          content:\n            application/vnd.jetbrains.packagesearch.minimal.v2+json:\n              schema:\n                $ref: '#/components/schemas/MinimalV2PackagesWithRepos'\n            application/vnd.jetbrains.packagesearch.standard.v2+json:\n              schema:\n                $ref: '#/components/schemas/StandardV2PackagesWithRepos'\n            application/json+org.jetbrains.packagesearch.minimal:\n              schema:\n                $ref: '#/components/schemas/MinimalV1Package'\n            application/json+org.jetbrains.packagesearch.standard:\n              schema:\n                $ref: '#/components/schemas/StandardV1Package'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MinimalV1Package'\n            '':\n              schema:\n                $ref: '#/components/schemas/LegacyV1Packages'\n            application/vnd.jetbrains.packagesearch.legacy+json:\n              schema:\n                $ref: '#/components/schemas/LegacyV1Packages'\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/StandardV2PackageWithRepos'\n        '400':\n          description: The query parameter must not be blank.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '406':\n          description: No acceptable content types provided in the request Accept header.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: Something went wrong.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/package#hash':\n    get:\n      tags:\n        - package\n      summary: Find a package by hash.\n      description: \u003e-\n        Returns a matching package, by looking for the provided hash in all packages' versions.\u003cbr /\u003e\n        \u003cbr /\u003e\n        **⚠️ Don't specify both `md5` and `sha1` at the same time, the behaviour is not defined and can result in an error or unexpected\n        behaviour.**\u003cbr /\u003e\n        This endpoint *requires* a valid V1 or V2 content type in the request Accept header, or `application/json`, or a `*/*` wildcard, or that\n        the Accept header is missing.\u003cbr /\u003e\n        For `*/*` the response is in the standard V2 format, for `application/json` or missing Accept header it's in the minimal V1 format.\n      operationId: getPackagesByHash\n      parameters:\n        - name: sha1\n          in: query\n          description: SHA-1 hash of the package to find.\n          required: false\n          schema:\n            type: string\n            pattern: \"^[0-9a-fA-F]{40}$\"\n        - name: md5\n          in: query\n          description: MD5 hash of the package to find.\n          required: false\n          schema:\n            type: string\n            pattern: \"^[0-9a-fA-F]{32}$\"\n      responses:\n        '200':\n          description: Successful operation.\n          headers:\n            X-Request-Id:\n              description: RequestId used for metrics \u0026 diagnostics\n              schema:\n                type: string\n          content:\n            application/vnd.jetbrains.packagesearch.minimal.v2+json:\n              schema:\n                $ref: '#/components/schemas/MinimalV2PackageWithRepos'\n            application/vnd.jetbrains.packagesearch.standard.v2+json:\n              schema:\n                $ref: '#/components/schemas/StandardV2PackageWithRepos'\n            application/json+org.jetbrains.packagesearch.minimal:\n              schema:\n                $ref: '#/components/schemas/MinimalV1Package'\n            application/json+org.jetbrains.packagesearch.standard:\n              schema:\n                $ref: '#/components/schemas/StandardV1Package'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MinimalV1Package'\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/StandardV2PackageWithRepos'\n        '400':\n          description: The provided hash is empty or doesn't look like it's a valid hash.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: No package found with the given hash.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '406':\n          description: No acceptable content types provided in the request Accept header.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: Something went wrong.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/package#suggest':\n    get:\n      tags:\n        - package\n      summary: Get suggested packages.\n      description: \u003e-\n        Returns a collection of suggested packages. At least one of `groupId` and `artifactId` is required to be non-blank.\u003cbr /\u003e\n        This endpoint *requires* a valid minimal V1 or either V2 content type in the request Accept header, or `application/json`, or a `*/*`\n        wildcard, or that the Accept header is missing. The standard V1 format is **NOT** supported for this endpoint.\u003cbr /\u003e\n        For `*/*` the response is in the standard V2 format, for `application/json`Accept header it's in the minimal V1 format. If the accept\n        header is missing or empty, the legacy format will be used (a wrapped minimal v1 format, expected by IJ's built-in editor suggestions\n        for dependencies in build scripts)\n      operationId: suggestPackages\n      parameters:\n        - name: artifactId\n          in: query\n          description: ArtifactId to use for suggestions.\n          required: false\n          schema:\n            type: string\n        - name: groupId\n          in: query\n          description: GroupId to use for suggestions.\n          required: false\n          schema:\n            type: string\n        - name: onlyMpp\n          in: query\n          description: When true, only multi-platform packages will be included in search results. Default value `false`.\n          required: false\n          schema:\n            type: boolean\n        - name: mustSupport\n          in: query\n          description: Comma-separated list of the supported platforms/targets.\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful operation.\n          headers:\n            X-Request-Id:\n              description: RequestId used for metrics \u0026 diagnostics\n              schema:\n                type: string\n          content:\n            application/vnd.jetbrains.packagesearch.minimal.v2+json:\n              schema:\n                $ref: '#/components/schemas/MinimalV2PackagesWithRepos'\n            application/vnd.jetbrains.packagesearch.standard.v2+json:\n              schema:\n                $ref: '#/components/schemas/StandardV2PackagesWithRepos'\n            application/json+org.jetbrains.packagesearch.minimal:\n              schema:\n                $ref: '#/components/schemas/MinimalV1Package'\n            application/json+org.jetbrains.packagesearch.standard:\n              schema:\n                $ref: '#/components/schemas/StandardV1Package'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MinimalV1Package'\n            '':\n              schema:\n                $ref: '#/components/schemas/LegacyV1Packages'\n            application/vnd.jetbrains.packagesearch.legacy+json:\n              schema:\n                $ref: '#/components/schemas/LegacyV1Packages'\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/StandardV2PackageWithRepos'\n        '400':\n          description: At least one of `groupId` and `artifactId` is required to be non-blank.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '406':\n          description: No acceptable content types provided in the request Accept header.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: Something went wrong.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/search/idea/fulltext':\n    get:\n      tags:\n        - idea\n      summary: (DEPRECATED) Full text search (for IDEA).\n      deprecated: true\n      description: \u003e-\n        **DEPRECATED.** Please use `/package#search` (with minimal V1 response type) instead for a drop-in replacement. This endpoint is slated for\n        deletion in v3.0.\u003cbr /\u003e\n        \u003cbr /\u003e\n        Returns a collection of packages matching the query.\n      operationId: ideaSearch\n      parameters:\n        - name: query\n          in: query\n          description: Query to search for.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful operation.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/MinimalV2Package'\n        '400':\n          description: The query parameter Must not be absent.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: Something went wrong.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/search/idea/suggest':\n    get:\n      tags:\n        - idea\n      summary: (DEPRECATED) Full text search (for IDEA).\n      deprecated: true\n      description: \u003e-\n        **DEPRECATED.** Please use `/package#suggest` (with minimal V1 response type) instead for a drop-in replacement. This endpoint is slated for\n        deletion in v3.0.\u003cbr /\u003e\n        \u003cbr /\u003e\n        Returns a collection of packages suggestions; either `artifactId` or `groupId` are required (they can be both blank).\n      operationId: ideaSuggest\n      parameters:\n        - name: groupId\n          in: query\n          description: GroupId to use for suggestions.\n          required: false\n          schema:\n            type: string\n        - name: artifactId\n          in: query\n          description: ArtifactId to use for suggestions.\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful operation.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/MinimalV2Package'\n        '400':\n          description: 'At least one of groupId and artifactId is required.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: Something went wrong.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/statistics':\n    get:\n      tags:\n        - statistic\n      summary: Aggregate statistics for packages\n      description: Returns two sections of package statistics, one for global, one for repositories.\n      operationId: getPackageStatistic\n      responses:\n        '200':\n          description: Successful operation.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatisticResponse'\nservers:\n  - url: 'https://package-search.services.jetbrains.com/api'\ncomponents:\n  schemas:\n    StandardV2PackagesWithRepos:\n      type: object\n      description: A list of packages and a list of info about the repositories they are available in.\n      properties:\n        packages:\n          type: array\n          description: List of all the matching packages. Must not be absent.\n          items:\n            $ref: '#/components/schemas/StandardV2Package'\n        repositories:\n          type: array\n          description: \u003e-\n            List of non-default repositories (i.e., all private and custom repos beyond the ones supported by Package Search's own public instance).\n            All known public repos are only referenced by ID in the packages. Currently supported public repositories are:\n             * Maven Central (`maven_central`). Must not be absent.\n          items:\n            $ref: '#/components/schemas/V2Repository'\n      required:\n        - packages\n        - repositories\n    StandardV2PackageWithRepos:\n      type: object\n      description: A package and the list of info about the repositories it is available in.\n      properties:\n        package:\n          $ref: '#/components/schemas/StandardV2Package'\n        repositories:\n          type: array\n          description: \u003e-\n            List of non-default repositories (i.e., all private and custom repos beyond the ones supported by Package Search's own public instance).\n            All known public repos are only referenced by ID in the packages. Currently supported public repositories are:\n             * Maven Central (`maven_central`). Must not be absent.\n          items:\n            $ref: '#/components/schemas/V2Repository'\n      required:\n        - package\n        - repositories\n    V2Repository:\n      type: object\n      description: Info about a repository where any number of packages may be available.\n      properties:\n        id:\n          type: string\n          description: The ID of the repository, either a known ID or a custom one.\n        url:\n          type: string\n          format: uri\n          description: \u003e-\n            The URL of the repository, if it is not a known one. This must be a valid URL. If this field is missing, the `id` field must\n            be a valid known repository ID, such as Maven Central; this field is expected to be absent in that case.\n        type:\n          description: The type of repository. The only currently supported value is `maven`. If this field is missing, its default value is `maven`.\n        alternate_urls:\n          type: array\n          items:\n            format: uri\n            type: string\n          description: Possible alternate URLs for the repository.\n        friendly_name:\n          type: string\n          description: The friendly name of the repository, as shown to users.\n        user_facing_url:\n          type: string\n          format: uri\n          description: \u003e-\n            A user-facing URL for the repository, if any, that can be opened in a browser. Must be pointing to some sort of web UI that users\n            can utilize to browse the repository and/or search it, or the institutional page for the repository, if any.\n        package_count:\n          type: number\n          description: Number of packages indexed for the repository. Never negative.\n        artifact_count:\n          type: number\n          description: Number of artefacts indexed for the repository. Never negative.\n        named_links:\n          type: object\n          nullable: true\n          properties:\n            browseable_url_template:\n              type: string\n              description: \u003e-\n                Template (containing placeholders `{groupIdPath}`, `{groupId}`, `{artifactId}`, `{version}`) which can be used to determine browsable url for specific package in specific repository.\n        last_checked:\n          type: integer\n          format: int64\n          nullable: true\n      required:\n        - id\n        - url\n        - type\n        - friendly_name\n    StandardV2Package:\n      type: object\n      description: A package, as identified by its unique coordinates (e.g., groupId and artifactId for Maven repositories).\n      properties:\n        group_id:\n          type: string\n          description: The groupId. Must not be absent.\n        artifact_id:\n          type: string\n          description: The artifactId. Must not be absent.\n        name:\n          type: string\n          description: The human-readable name for the package.\n        description:\n          type: string\n          description: A description for the package.\n        url:\n          type: string\n          format: uri\n          description: A URL at which the user can find more information about the package.\n        licenses:\n          $ref: '#/components/schemas/StandardV2Licenses'\n        scm:\n          $ref: '#/components/schemas/StandardV2Scm'\n        mpp:\n          $ref: '#/components/schemas/StandardV2Mpp'\n        platforms:\n          type: array\n          description: The list of supported platforms. Must not be absent.\n          items:\n            $ref: '#/components/schemas/StandardV2Platform'\n        authors:\n          type: array\n          description: The list of library authors.\n          items:\n            $ref: '#/components/schemas/StandardV2Author'\n        latest_version:\n          $ref: '#/components/schemas/StandardV2Version'\n        versions:\n          type: array\n          description: The list of library versions. Must not be absent.\n          items:\n            $ref: '#/components/schemas/StandardV2Version'\n        dependency_rating:\n          type: number\n          description: The ranking value for the package. Must not be absent.\n          format: float\n          default: 0\n        github:\n          $ref: '#/components/schemas/StandardV2GitHub'\n        stackoverflow:\n          $ref: '#/components/schemas/StandardV2StackOverflowTags'\n      required:\n        - group_id\n        - artifact_id\n        - versions\n        - name\n        - latest_version\n        - dependency_rating\n    StandardV2Mpp:\n      type: object\n      description: If the package is coming from a Kotlin/Multiplatform project, this contains information about the module type.\n      properties:\n        module_type:\n          description: \u003e-\n            The type of Kotlin/Multiplatform module that generated this package. Supported values are: `root`, and `child`.\n          type: string\n    StandardV2Platform:\n      type: object\n      description: A platform supported by the package.\n      properties:\n        type:\n          type: string\n          description: \u003e-\n            A target platform ID. Supported types are: `jvm`, `js`, `native`, and `android`. Must not be absent\n        targets:\n          type: array\n          description: A set of supported targets for this platform type.\n          items:\n            description: \u003e-\n              The name of a target, which is generally a sub-specialization of the platform type. The supported targets depend on\n              the platform type, and on the tooling — e.g., what is supported by the version of Kotlin/Multiplatform that was used to generate\n              the artifact.\n\n              When the type is `native`, it will generally be a target platform and ABI. For example, `ios_arm64` and `cygwin_x86`.\n              When the type is `js`, it can be something like `node` or `browser`.\n              When the type is `jvm`, it can be something like `jvm8`.\n\n              Please refer to Kotlin Multiplatform documentation for further details.\n            type: string\n      required:\n        - type\n    StandardV2Scm:\n      type: object\n      description: Info about source control for the package, if available.\n      properties:\n        url:\n          type: string\n          format: uri\n          description: A URL to the source code repository (e.g., the GitHub project page, or a Git repository).\n      required:\n        - url\n    StandardV2Licenses:\n      type: object\n      description: \u003e-\n        Licensing information for the package. If the package sources are hosted on GitHub, the main license matches the one GitHub classifies the\n        repository as having. If not, and there are multiple licenses, the main license is picked with no particular criteria from the set of licenses\n        and the others are available in `other_licenses`.\n      properties:\n        main_license:\n          $ref: '#/components/schemas/StandardV2LinkedFile'\n        other_licenses:\n          type: array\n          description: If the package has multiple licences, these will be the \"secondary\" ones, in no particular order.\n          items:\n            $ref: '#/components/schemas/StandardV2LinkedFile'\n      required:\n        - main_license\n    StandardV2Author:\n      type: object\n      description: A package author.\n      properties:\n        name:\n          type: string\n          description: The name of the author.\n        org:\n          type: string\n          description: The name of the organisation that the author works for.\n        org_url:\n          type: string\n          format: uri\n          description: The URL of the website of the organisation that the author works for.\n    StandardV2Version:\n      type: object\n      description: A package version.\n      properties:\n        version:\n          type: string\n          description: The (human-readable) name of the package version. Must not be absent.\n        last_changed:\n          type: integer\n          format: int64\n          default: 0\n          description: \u003e-\n            The epoch-based release (or update) timestamp for this version. In case of disagreements across repositories, this will\n            be set to the latest value in the set. Must not be absent.\n        stable:\n          type: boolean\n          description: \u003e-\n            A hint as to whether this version should be considered stable. Note that this is based on heuristics and may not be accurate\n            in 100% of the cases. Also note the value for a version may change in the future as these heuristics can be changed without notice.\n            Must not be absent.\n        repository_ids:\n          type: array\n          description: \u003e-\n            The IDs of the repositories that this version is available in. These must match a Repository entry in the `repositories` set\n            at the root level of the response, or be a known repository ID. Must not be absent.\n          items:\n            type: string\n            description: Repository IDs, must match one of the items in the `repositories` field in the same response, or be a known repository ID.\n        artifacts:\n          type: array\n          description: The set of artifacts available for this version. Must not be absent.\n          items:\n            $ref: '#/components/schemas/StandardV2Artifact'\n      required:\n        - version\n        - last_changed\n        - stable\n        - repository_ids\n        - artifacts\n    StandardV2Artifact:\n      type: object\n      description: An artifact.\n      properties:\n        sha256:\n          type: string\n          description: The SHA-256 for this artifact.\n        sha1:\n          type: string\n          description: The SHA-1 for this artifact.\n        md5:\n          type: string\n          description: The MD5 for this artifact.\n        packaging:\n          type: string\n          description: The packaging of this artifact. When missing, in a Maven repository, can be assumed to be `jar`.\n        classifier:\n          type: string\n          description: The classifier of this artifact. When missing, this artifact is considered the \"main\" one for the version.\n    StandardV2GitHub:\n      type: object\n      description: Information about this package derived from its GitHub repository.\n      properties:\n        description:\n          type: string\n          description: A description for the package's source repository. May differ from the package's description.\n        is_fork:\n          type: boolean\n          description: Whether the package's source repository is a fork of another repository. When missing this can be assumed to be `false`.\n        stars:\n          type: integer\n          format: int32\n          default: 0\n          description: The number of stars the package's source repository has on GitHub. When missing this can be assumed to be zero.\n        watchers:\n          type: integer\n          format: int32\n          default: 0\n          description: \u003e-\n            The number of watchers (people following it) the package's source repository has on GitHub. When missing this can be assumed to be zero.\n        forks:\n          type: integer\n          format: int32\n          default: 0\n          description: The number of times the package's source repository has been forked on GitHub. When missing this can be assumed to be zero.\n        subscribers:\n          type: integer\n          format: int32\n          default: 0\n          description: The number of subscribers to changes to the package's source repository on GitHub. When missing this can be assumed to be zero.\n        network:\n          type: integer\n          format: int32\n          default: 0'\n          description: The size of the network around the package's source repository on GitHub. When missing this can be assumed to be zero.\n        community_profile:\n          $ref: '#/components/schemas/StandardV2GitHubCommunityProfile'\n        last_checked:\n          type: integer\n          format: int64\n          default: 0\n          description: The epoch-based timestamp when this information was last changed. Must not be absent.\n      required:\n        - last_checked\n    StandardV2GitHubCommunityProfile:\n      type: object\n      description: Info from the package's repository GitHub community profile.\n      properties:\n        files:\n          $ref: '#/components/schemas/StandardV2GitHubCommunityProfileFiles'\n        documentation:\n          type: string\n          format: uri\n          description: The URL for human-browsable documentation for this package.\n        description:\n          type: string\n          description: The repository description, if any.\n        health_percentage:\n          type: integer\n          format: int32\n          description: A number between 0 and 100 indicating the \"health\" rating assigned by GitHub to the package's repository. Must not be absent.\n      required:\n        - health_percentage\n        - files\n    StandardV2GitHubCommunityProfileFiles:\n      type: object\n      description: A set of known files available in the package's repository.\n      properties:\n        license:\n          $ref: '#/components/schemas/StandardV2LinkedFile'\n        readme:\n          $ref: '#/components/schemas/StandardV2LinkedFile'\n        code_of_conduct:\n          $ref: '#/components/schemas/StandardV2LinkedFile'\n    StandardV2LinkedFile:\n      type: object\n      description: A file as referenced elsewhere, accessible online.\n      properties:\n        name:\n          description: Human-readable name for the file.\n          type: string\n        url:\n          description: Raw file URL. Must not be absent.\n          type: string\n          format: uri\n        html_url:\n          description: If it exists, the URL for an HTML rendition of the file contents (may be the same as `url`).\n          type: string\n          format: uri\n        spdx_id:\n          description: If the file represents a known license, this will be the corresponding SPDX ID.\n          type: string\n        key:\n          description: If the file represents a license or a Code Of Conduct, this will be the file's key.\n          type: string\n      required:\n        - url\n    StandardV2StackOverflowTags:\n      type: object\n      description: A list of StackOverflow tags associated with the package.\n      properties:\n        tags:\n          type: array\n          items:\n            $ref: '#/components/schemas/StandardV2StackOverflowTag'\n      required:\n        - tags\n    StandardV2StackOverflowTag:\n      type: object\n      description: A StackOverflow tag.\n      properties:\n        tag:\n          type: string\n          description: The tag name itself. This is the tag's unique ID.\n        count:\n          type: integer\n          format: int32\n          description: The number of questions on StackOverflow for the tag.\n      required:\n        - tag\n        - count\n    MinimalV2PackagesWithRepos:\n      type: object\n      description: A list of packages and a list of info about the repositories they are available in.\n      properties:\n        packages:\n          type: array\n          description: List of all the matching packages. Must not be absent.\n          items:\n            $ref: '#/components/schemas/MinimalV2Package'\n        repositories:\n          type: array\n          description: \u003e-\n            List of non-default repositories (i.e., all private and custom repos beyond the ones supported by Package Search's own public instance).\n            All known public repos are only referenced by ID in the packages. Currently supported public repositories are:\n             * Maven Central (`maven_central`). Must not be absent.\n          items:\n            $ref: '#/components/schemas/V2Repository'\n      required:\n        - packages\n        - repositories\n    MinimalV2PackageWithRepos:\n      type: object\n      description: A package and the list of info about the repositories it is available in.\n      properties:\n        package:\n          $ref: '#/components/schemas/MinimalV2Package'\n        repositories:\n          type: array\n          description: \u003e-\n            List of non-default repositories (i.e., all private and custom repos beyond the ones supported by Package Search's own public instance).\n            All known public repos are only referenced by ID in the packages. Currently supported public repositories are:\n             * Maven Central (`maven_central`). Must not be absent.\n          items:\n            $ref: '#/components/schemas/V2Repository'\n      required:\n        - package\n        - repositories\n    MinimalV2Package:\n      type: object\n      description: A package, as identified by its unique coordinates (e.g., groupId and artifactId for Maven repositories).\n      properties:\n        groupId:\n          type: string\n          description: The groupId. Must not be absent.\n        artifactId:\n          type: string\n          description: The artifactId. Must not be absent.\n        versions:\n          type: array\n          description: The list of library versions. Must not be absent.\n          items:\n            $ref: '#/components/schemas/MinimalV2Version'\n      required:\n        - groupId\n        - artifactId\n        - versions\n    MinimalV2Version:\n      type: object\n      description: A package version.\n      properties:\n        version:\n          type: string\n          description: The (human-readable) name of the package version. Must not be absent.\n        repositoryIds:\n          type: array\n          description: \u003e-\n            The IDs of the repositories that this version is available in. These must match a Repository entry in the `repositories` set\n            at the root level of the response, or be a known repository ID. Must not be absent.\n          items:\n            type: string\n            description: Repository IDs, must match one of the items in the `repositories` field in the same response, or be a known repository ID.\n      required:\n        - version\n        - repositoryIds\n    StandardV1Package:\n      type: object\n      deprecated: true\n      properties:\n        groupId:\n          type: string\n        artifactId:\n          type: string\n        packaging:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        url:\n          type: string\n          format: uri\n        scm:\n          $ref: '#/components/schemas/StandardV1Scm'\n        mpp:\n          $ref: '#/components/schemas/StandardV1MPPData'\n        platforms:\n          type: array\n          items:\n            $ref: '#/components/schemas/StandardV1Platform'\n        authors:\n          type: array\n          items:\n            $ref: '#/components/schemas/StandardV1Author'\n        latestVersion:\n          $ref: '#/components/schemas/StandardV1Version'\n        versions:\n          type: array\n          items:\n            $ref: '#/components/schemas/StandardV1Version'\n        dependencyRating:\n          type: number\n          format: float\n          default: 0\n        github:\n          $ref: '#/components/schemas/StandardV1GitHub'\n        stackoverflow:\n          $ref: '#/components/schemas/StandardV1StackOverflowTags'\n      required:\n        - groupId\n        - artifactId\n        - versions\n        - name\n        - latestVersion\n        - dependencyRating\n    StandardV1MPPData:\n      type: object\n      deprecated: true\n      properties:\n        module_type:\n          type: string\n    StandardV1Platform:\n      type: object\n      deprecated: true\n      properties:\n        type:\n          type: string\n        targets:\n          type: array\n          items:\n            type: string\n    StandardV1Scm:\n      type: object\n      deprecated: true\n      properties:\n        url:\n          type: string\n          format: uri\n        connection:\n          type: string\n        developerConnection:\n          type: string\n    StandardV1Author:\n      type: object\n      deprecated: true\n      properties:\n        name:\n          type: string\n        org:\n          type: string\n        orgUrl:\n          type: string\n          format: uri\n    StandardV1Version:\n      type: object\n      deprecated: true\n      properties:\n        version:\n          type: string\n        sha1:\n          type: string\n        md5:\n          type: string\n        stable:\n          type: boolean\n        packaging:\n          type: string\n        updated:\n          type: integer\n          format: int64\n          default: 0\n      required:\n        - version\n    StandardV1GitHub:\n      type: object\n      deprecated: true\n      properties:\n        description:\n          type: string\n        url:\n          type: string\n        isFork:\n          type: boolean\n        stars:\n          type: integer\n          format: int64\n          default: 0\n        watches:\n          type: integer\n          format: int64\n          default: 0\n        forks:\n          type: integer\n          format: int64\n          default: 0\n        subscribers:\n          type: integer\n          format: int64\n          default: 0\n        network:\n          type: integer\n          format: int64\n          default: 0'\n        community_profile:\n          $ref: '#/components/schemas/StandardV1GitHubCommunityProfile'\n        updated:\n          type: integer\n          format: int64\n          default: 0\n      required:\n        - url\n    StandardV1GitHubCommunityProfile:\n      type: object\n      deprecated: true\n      properties:\n        description:\n          type: string\n        files:\n          $ref: '#/components/schemas/StandardV1GitHubCommunityProfileFiles'\n        documentation:\n          type: string\n          format: uri\n        health_percentage:\n          type: integer\n          format: int32\n    StandardV1GitHubCommunityProfileFiles:\n      type: object\n      deprecated: true\n      properties:\n        license:\n          $ref: '#/components/schemas/StandardV1GitHubCommunityProfileFile'\n        readme:\n          $ref: '#/components/schemas/StandardV1GitHubCommunityProfileFile'\n        code_of_conduct:\n          $ref: '#/components/schemas/StandardV1GitHubCommunityProfileFile'\n    StandardV1GitHubCommunityProfileFile:\n      type: object\n      deprecated: true\n      properties:\n        name:\n          type: string\n        url:\n          type: string\n          format: uri\n        html_url:\n          type: string\n          format: uri\n        spdx_id:\n          type: string\n    StandardV1StackOverflowTags:\n      type: object\n      deprecated: true\n      properties:\n        tags:\n          type: array\n          items:\n            $ref: '#/components/schemas/StandardV1StackOverflowTag'\n    StandardV1StackOverflowTag:\n      type: object\n      deprecated: true\n      properties:\n        tag:\n          type: string\n        count:\n          type: integer\n          format: int32\n      required:\n        - tag\n        - count\n    MinimalV1Package:\n      type: object\n      deprecated: true\n      properties:\n        groupId:\n          type: string\n        artifactId:\n          type: string\n        versions:\n          type: array\n          items:\n            $ref: '#/components/schemas/MinimalV1Version'\n      required:\n        - groupId\n        - artifactId\n        - versions\n    MinimalV1Version:\n      type: object\n      deprecated: true\n      properties:\n        version:\n          type: string\n      required:\n        - version\n    LegacyV1Packages:\n      type: object\n      deprecated: true\n      properties:\n        items:\n          type: array\n          items:\n            $ref: '#/components/schemas/MinimalV1Package'\n      required:\n        - items\n    RepositoriesList:\n      type: object\n      description: A list of all the currently indexed repositories (aka \"known repositories\").\n      properties:\n        repositories:\n          type: array\n          description: The list of all known repositories that are currently indexed.\n          items:\n            $ref: '#/components/schemas/V2Repository'\n      required:\n        - repositories\n    PackageReadme:\n      type: string\n      description: HTML response example for package readme\n      example: '\u003cdiv id=\"readme\" class=\"md\" data-path=\"README.md\"\u003e...\u003c/div\u003e'\n    StatisticResponse:\n      type: object\n      description: Root object of statistic responses\n      properties:\n        global:\n          $ref: '#/components/schemas/StatisticEntry'\n        repositories:\n          type: object\n          additionalProperties:\n            type: object\n            properties:\n              repository:\n                type: string\n              statistic:\n                $ref: '#/components/schemas/StatisticEntry'\n      required:\n        - global\n        - repositories\n    StatisticEntry:\n      type: object\n      description: Entity of statistic result\n      properties:\n        unique_groups:\n          type: integer\n        unique_artifacts:\n          type: integer\n        unique_versions:\n          type: integer\n        pom_license_stats:\n          type: array\n          items:\n            $ref: '#/components/schemas/POMLicenseStats'\n        scm_stats:\n          $ref: '#/components/schemas/SCMStats'\n        code_hosting_platform:\n          $ref: '#/components/schemas/CodeHostingPlatform'\n        packaging_stats:\n          type: object\n          additionalProperties:\n            type: object\n            properties:\n              packaging:\n                type: string\n              count:\n                type: integer\n        github_stats:\n          $ref: '#/components/schemas/GithubStats'\n        package_stats:\n          $ref: '#/components/schemas/PackageStats'\n        versions_stats:\n          $ref: '#/components/schemas/VersionsStats'\n    POMLicenseStats:\n      type: object\n      description: Statistics of POM license stats.\n      properties:\n        license:\n          type: string\n        count:\n          type: integer\n      required:\n        - name\n        - amount\n    SCMStats:\n      type: object\n      description: Statistics of SCM stats.\n      properties:\n        git:\n          type: integer\n        svn:\n          type: integer\n        others:\n          type: integer\n      required:\n        - git\n        - svn\n        - others\n    CodeHostingPlatform:\n      type: object\n      description: Statistics of code hosting platform stats.\n      properties:\n        github:\n          type: integer\n        gitlab:\n          type: integer\n        bitbucket:\n          type: integer\n        others:\n          type: integer\n      required:\n        - github\n        - gitlab\n        - bitbucket\n        - others\n    GithubStats:\n      type: object\n      description: Statistics of Github stats.\n      properties:\n        has_readme:\n          type: integer\n        has_license:\n          type: integer\n        license_stats:\n          type: object\n          additionalProperties:\n            type: object\n            properties:\n              license:\n                type: string\n              count:\n                type: integer\n    PackageStats:\n      type: object\n      description: Statistics of package stats.\n      properties:\n        has_pom_license:\n          type: integer\n        has_authors:\n          type: integer\n        has_stackoverflow:\n          type: integer\n        has_github_info:\n          type: integer\n      required:\n        - has_pom_license\n        - has_authors\n        - has_stackoverflow\n        - has_github_info\n    VersionsStats:\n      type: object\n      description: Statistics of Version stats.\n      properties:\n        is_kotlin_multiplatform:\n          type: integer\n        has_classifier:\n          type: integer\n      required:\n        - is_kotlin_multiplatform\n        - has_classifier\n    ErrorResponse:\n      type: object\n      description: Information about an error occurred while processing a request.\n      properties:\n        error:\n          type: object\n          description: The error properties.\n          properties:\n            message:\n              type: string\n              description: The error message.\n          required:\n            - message\n      required:\n        - error\n",
			"canonicalURL": "/github.com/JetBrains/package-search-api-models@4383552d19b40110f3dc01dd7329c5c977821387/-/blob/swagger/swagger-v2.3.1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/JetBrains/package-search-api-models/blob/4383552d19b40110f3dc01dd7329c5c977821387/swagger/swagger-v2.3.1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"StandardV2PackageWithRepos\": resolve \"#/components/schemas/StandardV2PackageWithRepos\": property \"package\": $ref: resolve \"#/components/schemas/StandardV2Package\": property \"github\": $ref: resolve \"#/components/schemas/StandardV2GitHub\": property \"network\": at swagger/swagger-v2.3.1.yaml:937:20: parse default: expected type \"integer\", got \"string\""
}