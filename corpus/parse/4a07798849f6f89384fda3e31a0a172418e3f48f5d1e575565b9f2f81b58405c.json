{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/reeli/ts-codegen"
		},
		"file": {
			"name": "openapi1.json",
			"size": 0,
			"path": "packages/ts-codegen-core/examples/openapi1.json",
			"byteSize": 64874,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"description\": \"Api Documentation\",\n    \"version\": \"1.0\",\n    \"title\": \"Api Documentation\",\n    \"termsOfService\": \"urn:tos\",\n    \"contact\": {},\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"http://www.apache.org/licenses/LICENSE-2.0\"\n    }\n  },\n  \"tags\": [\n    {\n      \"name\": \"attachment-controller\",\n      \"description\": \"Test Controller\"\n    },\n    {\n      \"name\": \"attachment-controller-2\",\n      \"description\": \"Test Controller 2\"\n    }\n  ],\n  \"paths\": {\n    \"/\": {\n      \"post\": {\n        \"tags\": [\"mock-controller\"],\n        \"summary\": \"uploadAttachment\",\n        \"operationId\": \"uploadAttachmentUsingPOST\",\n        \"parameters\": [\n          {\n            \"name\": \"Authorities\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"a_officer\"\n            }\n          },\n          {\n            \"name\": \"User-Id\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"abc123456789\"\n            }\n          },\n          {\n            \"name\": \"User-Name\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"John Hopkins\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"attachment\": {\n                    \"description\": \"attachment\",\n                    \"type\": \"string\",\n                    \"format\": \"binary\"\n                  }\n                },\n                \"required\": [\"attachment\"]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Created\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AttachmentBO\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"deprecated\": false\n      }\n    },\n    \"/{id}\": {\n      \"get\": {\n        \"tags\": [\"attachment-controller\"],\n        \"summary\": \"download\",\n        \"operationId\": \"downloadUsingGET\",\n        \"parameters\": [\n          {\n            \"name\": \"Authorities\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"a_officer\"\n            }\n          },\n          {\n            \"name\": \"User-Id\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"abc123456789\"\n            }\n          },\n          {\n            \"name\": \"User-Name\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"John Hopkins\"\n            }\n          },\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Resource\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"deprecated\": false\n      },\n      \"delete\": {\n        \"tags\": [\"attachment-controller\"],\n        \"summary\": \"delete attachment by id\",\n        \"operationId\": \"deleteAttachmentUsingDELETE\",\n        \"parameters\": [\n          {\n            \"name\": \"Authorities\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"a_officer\"\n            }\n          },\n          {\n            \"name\": \"User-Id\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"abc123456789\"\n            }\n          },\n          {\n            \"name\": \"User-Name\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"John Hopkins\"\n            }\n          },\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"204\": {\n            \"description\": \"No Content\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Can not find attachment with specific id: {id}\"\n          }\n        },\n        \"deprecated\": false\n      }\n    },\n    \"/book/{id}\": {\n      \"get\": {\n        \"tags\": [\"book-controller\"],\n        \"summary\": \"get book by id\",\n        \"operationId\": \"findBookByIdUsingGET\",\n        \"parameters\": [\n          {\n            \"name\": \"Authorities\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"a_officer\"\n            }\n          },\n          {\n            \"name\": \"User-Id\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"abc123456789\"\n            }\n          },\n          {\n            \"name\": \"User-Name\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"John Hopkins\"\n            }\n          },\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"request param for find book\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookDetailVo\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"deprecated\": false\n      },\n      \"put\": {\n        \"tags\": [\"book-controller\"],\n        \"summary\": \"update book by given id\",\n        \"operationId\": \"updateBookByIdUsingPUT\",\n        \"parameters\": [\n          {\n            \"name\": \"Authorities\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"a_officer\"\n            }\n          },\n          {\n            \"name\": \"User-Id\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"abc123456789\"\n            }\n          },\n          {\n            \"name\": \"User-Name\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"John Hopkins\"\n            }\n          },\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"given book id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateBookRequest\"\n              }\n            }\n          },\n          \"description\": \"update request body\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"201\": {\n            \"description\": \"Created\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"deprecated\": false\n      }\n    },\n    \"/schedules\": {\n      \"get\": {\n        \"tags\": [\"schedule-controller\"],\n        \"summary\": \"getScheduleDetailsByDate\",\n        \"operationId\": \"getScheduleDetailsByDateUsingGET\",\n        \"parameters\": [\n          {\n            \"name\": \"Authorities\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"a_officer\"\n            }\n          },\n          {\n            \"name\": \"User-Id\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"abc123456789\"\n            }\n          },\n          {\n            \"name\": \"User-Name\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"John Hopkins\"\n            }\n          },\n          {\n            \"name\": \"scheduleDate\",\n            \"in\": \"query\",\n            \"description\": \"scheduleDate\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"roleId\",\n            \"in\": \"query\",\n            \"description\": \"roleId\",\n            \"required\": false,\n            \"allowEmptyValue\": false,\n            \"example\": \"111111111\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ScheduleVO\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"deprecated\": false\n      }\n    },\n    \"/documents/{documentId}/doc\": {\n      \"get\": {\n        \"tags\": [\"documents-controller\"],\n        \"summary\": \"getDocument\",\n        \"operationId\": \"getDocumentByIdUsingGET\",\n        \"parameters\": [\n          {\n            \"name\": \"Authorities\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"a_officer\"\n            }\n          },\n          {\n            \"name\": \"User-Id\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"abc123456789\"\n            }\n          },\n          {\n            \"name\": \"User-Name\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"John Hopkins\"\n            }\n          },\n          {\n            \"name\": \"from\",\n            \"in\": \"query\",\n            \"description\": \"from\",\n            \"required\": false,\n            \"schema\": {\n              \"allOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/CarTypeEnum\"\n                },\n                {\n                  \"x-go-field-name\": \"AccountIdentityType\",\n                  \"x-tag-name\": \"accountIdentityType\"\n                }\n              ]\n            }\n          },\n          {\n            \"name\": \"documentId\",\n            \"in\": \"path\",\n            \"description\": \"documentId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"206\": {\n            \"description\": \"partial content\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DocumentVO\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"deprecated\": false\n      }\n    },\n    \"/health-check/{flight_no}\": {\n      \"head\": {\n        \"operationId\": \"getHealthCheckUsingHEAD\",\n        \"description\": \"show flight exist or not.\",\n        \"parameters\": [\n          {\n            \"name\": \"flight_no\",\n            \"in\": \"path\",\n            \"description\": \"Flight_no\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"flight exist\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DocumentVO\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DocumentVO\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"flight does not exist\"\n          }\n        }\n      }\n    },\n    \"/users\": {\n      \"get\": {\n        \"summary\": \"Gets a list of users.\",\n        \"operationId\": \"getUserListByUsingGET\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/offsetParam\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/limitParam\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/teams\": {\n      \"get\": {\n        \"summary\": \"Gets a list of teams.\",\n        \"operationId\": \"getTeamListByUsingGET\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/offsetParam\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/limitParam\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/items\": {\n      \"x-swagger-router-controller\": \"ItemController\",\n      \"get\": {\n        \"summary\": \"Returns a list of items\",\n        \"operationId\": \"getItems\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/page\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/sort\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"headers\": {\n              \"Pagination-Count\": {\n                \"description\": \"Total number of items\",\n                \"schema\": {\n                  \"type\": \"integer\"\n                }\n              },\n              \"Pagination-Page\": {\n                \"description\": \"Current page number\",\n                \"schema\": {\n                  \"type\": \"integer\"\n                }\n              },\n              \"Pagination-Limit\": {\n                \"description\": \"Number of returned items\",\n                \"schema\": {\n                  \"type\": \"integer\"\n                }\n              }\n            },\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Items\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400BadRequest\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/403Forbidden\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404NotFound\"\n          },\n          \"429\": {\n            \"$ref\": \"#/components/responses/429TooManyRequests\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500InternalServerError\"\n          },\n          \"503\": {\n            \"$ref\": \"#/components/responses/503ServiceUnavailable\"\n          }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Creates a new item\",\n        \"operationId\": \"createItem\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Item\"\n              }\n            }\n          },\n          \"description\": \"An item\"\n        },\n        \"responses\": {\n          \"201\": {\n            \"$ref\": \"#/components/responses/SuccessMessage\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400BadRequest\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/403Forbidden\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404NotFound\"\n          },\n          \"409\": {\n            \"$ref\": \"#/components/responses/409Conflict\"\n          },\n          \"429\": {\n            \"$ref\": \"#/components/responses/429TooManyRequests\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500InternalServerError\"\n          },\n          \"503\": {\n            \"$ref\": \"#/components/responses/503ServiceUnavailable\"\n          }\n        }\n      }\n    },\n    \"/pet\": {\n      \"post\": {\n        \"tags\": [\"pet\"],\n        \"summary\": \"Add a new pet to the store\",\n        \"description\": \"\",\n        \"operationId\": \"addPet\",\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/Pet\"\n        },\n        \"responses\": {\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        },\n        \"security\": []\n      },\n      \"put\": {\n        \"tags\": [\"pet\"],\n        \"summary\": \"Update an existing pet\",\n        \"description\": \"\",\n        \"operationId\": \"updatePet\",\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/Pet\"\n        },\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          },\n          \"405\": {\n            \"description\": \"Validation exception\"\n          }\n        },\n        \"security\": []\n      }\n    },\n    \"/pet/findByStatus\": {\n      \"get\": {\n        \"tags\": [\"pet\"],\n        \"summary\": \"Finds Pets by status\",\n        \"description\": \"Multiple status values can be provided with comma separated strings\",\n        \"operationId\": \"findPetsByStatus\",\n        \"parameters\": [\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Status values that need to be considered for filter\",\n            \"required\": true,\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\",\n                \"enum\": [\"available\", \"pending\", \"sold\"],\n                \"default\": \"available\"\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid status value\"\n          }\n        },\n        \"security\": []\n      }\n    },\n    \"/pet/findByTags\": {\n      \"get\": {\n        \"tags\": [\"pet\"],\n        \"summary\": \"Finds Pets by tags\",\n        \"description\": \"Test deprecated request\",\n        \"operationId\": \"findPetsByTags\",\n        \"parameters\": [\n          {\n            \"name\": \"tags\",\n            \"in\": \"query\",\n            \"description\": \"Tags to filter by\",\n            \"required\": true,\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid tag value\"\n          }\n        },\n        \"security\": [],\n        \"deprecated\": true\n      }\n    },\n    \"/pet/{petId}\": {\n      \"get\": {\n        \"tags\": [\"pet\"],\n        \"summary\": \"Find pet by ID\",\n        \"description\": \"Returns a pet when ID \u003c 10.  ID \u003e 10 or nonintegers will simulate API error conditions\",\n        \"operationId\": \"getPetById\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet that needs to be fetched\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          }\n        },\n        \"security\": []\n      },\n      \"post\": {\n        \"tags\": [\"pet\"],\n        \"summary\": \"Updates a pet in the store with form data\",\n        \"description\": \"\",\n        \"operationId\": \"updatePetWithForm\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet that needs to be updated\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"description\": \"Updated name of the pet\",\n                    \"type\": \"string\"\n                  },\n                  \"status\": {\n                    \"description\": \"Updated status of the pet\",\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        },\n        \"security\": []\n      },\n      \"delete\": {\n        \"tags\": [\"pet\"],\n        \"summary\": \"Deletes a pet\",\n        \"description\": \"\",\n        \"operationId\": \"deletePet\",\n        \"parameters\": [\n          {\n            \"name\": \"api_key\",\n            \"in\": \"header\",\n            \"description\": \"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"Pet id to delete\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid pet value\"\n          }\n        },\n        \"security\": []\n      }\n    },\n    \"/pet/{petId}/uploadImage\": {\n      \"post\": {\n        \"tags\": [\"pet\"],\n        \"summary\": \"uploads an image\",\n        \"description\": \"\",\n        \"operationId\": \"uploadFile\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet to update\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"additionalMetadata\": {\n                    \"description\": \"Additional data to pass to server\",\n                    \"type\": \"string\"\n                  },\n                  \"file\": {\n                    \"description\": \"file to upload\",\n                    \"type\": \"string\",\n                    \"format\": \"binary\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ApiResponse\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ApiResponse\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": []\n      }\n    },\n    \"/store/inventory\": {\n      \"get\": {\n        \"tags\": [\"store\"],\n        \"summary\": \"Returns pet inventories by status\",\n        \"description\": \"Returns a map of status codes to quantities\",\n        \"operationId\": \"getInventory\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"integer\",\n                    \"format\": \"int32\"\n                  }\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"integer\",\n                    \"format\": \"int32\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": []\n      }\n    },\n    \"/store/order\": {\n      \"post\": {\n        \"tags\": [\"store\"],\n        \"summary\": \"Place an order for a pet\",\n        \"description\": \"\",\n        \"operationId\": \"placeOrder\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            }\n          },\n          \"description\": \"order placed for purchasing the pet\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid Order\"\n          }\n        }\n      }\n    },\n    \"/store/order/{orderId}\": {\n      \"get\": {\n        \"tags\": [\"store\"],\n        \"summary\": \"Find purchase order by ID\",\n        \"description\": \"For valid response try integer IDs with value \u003c= 5 or \u003e 10. Other values will generated exceptions\",\n        \"operationId\": \"getOrderById\",\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet that needs to be fetched\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\",\n              \"minimum\": 1,\n              \"maximum\": 10\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\"store\"],\n        \"summary\": \"Delete purchase order by ID\",\n        \"description\": \"For valid response try integer IDs with value \u003c 1000. Anything above 1000 or nonintegers will generate API errors\",\n        \"operationId\": \"deleteOrder\",\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"description\": \"ID of the order that needs to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\",\n              \"minimum\": 1\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        }\n      }\n    },\n    \"/user\": {\n      \"post\": {\n        \"tags\": [\"user\"],\n        \"summary\": \"Create user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"createUser\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          },\n          \"description\": \"Created user object\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/user/createWithArray\": {\n      \"post\": {\n        \"tags\": [\"user\"],\n        \"summary\": \"Creates list of users with given input array\",\n        \"description\": \"\",\n        \"operationId\": \"createUsersWithArrayInput\",\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/UserArray\"\n        },\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/user/createWithList\": {\n      \"post\": {\n        \"tags\": [\"user\"],\n        \"summary\": \"Creates list of users with given input array\",\n        \"description\": \"\",\n        \"operationId\": \"createUsersWithListInput\",\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/UserArray\"\n        },\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/user/login\": {\n      \"get\": {\n        \"tags\": [\"user\"],\n        \"summary\": \"Logs user into the system\",\n        \"description\": \"\",\n        \"operationId\": \"loginUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"query\",\n            \"description\": \"The user name for login\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"password\",\n            \"in\": \"query\",\n            \"description\": \"The password for login in clear text\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"headers\": {\n              \"X-Rate-Limit\": {\n                \"description\": \"calls per hour allowed by the user\",\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              },\n              \"X-Expires-After\": {\n                \"description\": \"date in UTC when token expires\",\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"format\": \"date-time\"\n                }\n              }\n            },\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username/password supplied\"\n          }\n        }\n      }\n    },\n    \"/user/logout\": {\n      \"get\": {\n        \"tags\": [\"user\"],\n        \"summary\": \"Logs out current logged in user session\",\n        \"description\": \"\",\n        \"operationId\": \"logoutUser\",\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/user/{username}\": {\n      \"get\": {\n        \"tags\": [\"user\"],\n        \"summary\": \"Get user by user name\",\n        \"description\": \"\",\n        \"operationId\": \"getUserByName\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"The name that needs to be fetched. Use user1 for testing. \",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                },\n                \"examples\": {\n                  \"response\": {\n                    \"value\": {\n                      \"id\": 1,\n                      \"username\": \"johnp\",\n                      \"firstName\": \"John\",\n                      \"lastName\": \"Public\",\n                      \"email\": \"johnp@swagger.io\",\n                      \"password\": \"-secret-\",\n                      \"phone\": \"0123456789\",\n                      \"userStatus\": 0\n                    }\n                  }\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\"user\"],\n        \"summary\": \"Updated user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"updateUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"name that need to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          },\n          \"description\": \"Updated user object\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid user supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\"user\"],\n        \"summary\": \"Delete user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"deleteUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"The name that needs to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        }\n      }\n    },\n    \"/agency-response\": {\n      \"get\": {\n        \"tags\": [\"controller\"],\n        \"summary\": \"getAgencyResponse\",\n        \"operationId\": \"getAgencyResponseUsingGET\",\n        \"parameters\": [\n          {\n            \"name\": \"Authorities\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"a_officer\"\n            }\n          },\n          {\n            \"name\": \"User-Id\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"123\"\n            }\n          },\n          {\n            \"name\": \"User-Name\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"John\"\n            }\n          },\n          {\n            \"name\": \"responseDate\",\n            \"in\": \"query\",\n            \"description\": \"responseDate\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"date\"\n            }\n          },\n          {\n            \"name\": \"addressType\",\n            \"in\": \"query\",\n            \"description\": \"addressType\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"AAA\", \"BBB\"]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Resource\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"deprecated\": false\n      }\n    },\n    \"/agency-responses\": {\n      \"get\": {\n        \"tags\": [\"controller\"],\n        \"summary\": \"getAgencyResponseList\",\n        \"operationId\": \"getAgencyResponseListUsingGET\",\n        \"parameters\": [\n          {\n            \"name\": \"Authorities\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"a_officer\"\n            }\n          },\n          {\n            \"name\": \"User-Id\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"123\"\n            }\n          },\n          {\n            \"name\": \"User-Name\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"John\"\n            }\n          },\n          {\n            \"name\": \"addressType\",\n            \"in\": \"query\",\n            \"description\": \"addressType\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"AAA\", \"BBB\"]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Resource\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"deprecated\": false\n      }\n    }\n  },\n  \"servers\": [\n    {\n      \"url\": \"https://{username}.gigantic-server.com:{port}/{basePath}\",\n      \"variables\": {\n        \"username\": {\n          \"default\": \"demo\",\n          \"description\": \"this value is assigned by the service provider, in this example `gigantic-server.com`\"\n        },\n        \"port\": {\n          \"enum\": [\"8443\", \"443\"],\n          \"default\": \"8443\"\n        },\n        \"basePath\": {\n          \"default\": \"api/v2\"\n        }\n      }\n    }\n  ],\n  \"components\": {\n    \"parameters\": {\n      \"offsetParam\": {\n        \"in\": \"query\",\n        \"name\": \"offset\",\n        \"required\": false,\n        \"description\": \"The number of items to skip before starting to collect the result set.\",\n        \"schema\": {\n          \"type\": \"integer\",\n          \"minimum\": 0\n        }\n      },\n      \"limitParam\": {\n        \"in\": \"query\",\n        \"name\": \"limit\",\n        \"required\": false,\n        \"description\": \"The numbers of items to return.\",\n        \"schema\": {\n          \"type\": \"integer\",\n          \"minimum\": 1,\n          \"maximum\": 50,\n          \"default\": 20\n        }\n      },\n      \"id\": {\n        \"name\": \"id\",\n        \"in\": \"path\",\n        \"required\": true,\n        \"description\": \"Item id\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"page\": {\n        \"name\": \"page\",\n        \"in\": \"query\",\n        \"description\": \"Current page number\",\n        \"required\": false,\n        \"schema\": {\n          \"type\": \"integer\",\n          \"format\": \"int32\",\n          \"minimum\": 1,\n          \"default\": 1\n        }\n      },\n      \"limit\": {\n        \"name\": \"limit\",\n        \"in\": \"query\",\n        \"description\": \"Limits the number of returned items\",\n        \"required\": false,\n        \"schema\": {\n          \"type\": \"integer\",\n          \"format\": \"int32\",\n          \"minimum\": 10,\n          \"maximum\": 100,\n          \"multipleOf\": 10,\n          \"default\": 10\n        }\n      },\n      \"sort\": {\n        \"name\": \"sort\",\n        \"in\": \"query\",\n        \"required\": false,\n        \"description\": \"Sorting order of items\",\n        \"style\": \"pipeDelimited\",\n        \"schema\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\",\n            \"pattern\": \"([+-]\\\\w*){1}(\\\\|[+-]\\\\w*){0,5}\",\n            \"default\": \"+name\"\n          },\n          \"minItems\": 1,\n          \"maxItems\": 6,\n          \"uniqueItems\": true\n        }\n      }\n    },\n    \"responses\": {\n      \"SuccessMessage\": {\n        \"description\": \"Success\",\n        \"content\": {\n          \"*/*\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Message\"\n            }\n          }\n        }\n      },\n      \"400BadRequest\": {\n        \"description\": \"The request was invalid or cannot be otherwise served.\",\n        \"content\": {\n          \"*/*\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/ValidationError\"\n            }\n          }\n        }\n      },\n      \"401Unauthorized\": {\n        \"description\": \"Authentication credentials were missing or incorrect.\",\n        \"content\": {\n          \"*/*\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Message\"\n            }\n          }\n        }\n      },\n      \"403Forbidden\": {\n        \"description\": \"The request is understood, but it has been refused or access is not allowed.\",\n        \"content\": {\n          \"*/*\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Message\"\n            }\n          }\n        }\n      },\n      \"404NotFound\": {\n        \"description\": \"The URI requested is invalid or the resource requested does not exists.\",\n        \"content\": {\n          \"*/*\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Message\"\n            }\n          }\n        }\n      },\n      \"409Conflict\": {\n        \"description\": \"Any message which should help the user to resolve the conflict.\",\n        \"content\": {\n          \"*/*\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Message\"\n            }\n          }\n        }\n      },\n      \"429TooManyRequests\": {\n        \"description\": \"The request cannot be served due to the application’s rate limit having been exhausted for the resource.\",\n        \"content\": {\n          \"*/*\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Message\"\n            }\n          }\n        }\n      },\n      \"500InternalServerError\": {\n        \"description\": \"Something is broken.\",\n        \"content\": {\n          \"*/*\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Message\"\n            }\n          }\n        }\n      },\n      \"503ServiceUnavailable\": {\n        \"description\": \"The server is up, but overloaded with requests. Try again later.\",\n        \"content\": {\n          \"*/*\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Message\"\n            }\n          }\n        }\n      }\n    },\n    \"requestBodies\": {\n      \"UserArray\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        },\n        \"description\": \"List of user object\",\n        \"required\": true\n      },\n      \"Pet\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Pet\"\n            }\n          },\n          \"application/xml\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Pet\"\n            }\n          }\n        },\n        \"description\": \"Pet object that needs to be added to the store\",\n        \"required\": true\n      }\n    },\n    \"schemas\": {\n      \"BookDetailVo\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"authorName\": {\n            \"type\": \"string\",\n            \"example\": \"Tony\"\n          },\n          \"createdDate\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 19920010\n          },\n          \"fileName\": {\n            \"type\": \"string\",\n            \"example\": \"aaa\"\n          },\n          \"id\": {\n            \"type\": \"string\",\n            \"example\": \"001\"\n          },\n          \"mimeType\": {\n            \"type\": \"string\",\n            \"example\": \".png\"\n          },\n          \"path\": {\n            \"type\": \"string\",\n            \"example\": \"/home\"\n          },\n          \"attachment\": {\n            \"$ref\": \"#/components/schemas/ScheduleVO\"\n          }\n        },\n        \"title\": \"BookDetailVo\"\n      },\n      \"ScheduleVO\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"team\": {\n            \"type\": \"string\"\n          },\n          \"contentType\": {\n            \"description\": \"Should generate type instead of enum, when enum value is number like.\",\n            \"type\": \"string\",\n            \"enum\": [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\"]\n          },\n          \"reason\": {\n            \"description\": \"Should generate type instead of enum, when enum value is number like.\",\n            \"type\": \"string\",\n            \"enum\": [\"1\", \"3\", \"4\", \"5\", \"6\"]\n          },\n          \"schedules\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/BookVO\"\n              }\n            }\n          },\n          \"shiftId\": {\n            \"type\": \"string\"\n          }\n        },\n        \"title\": \"ScheduleVO\"\n      },\n      \"BookVO\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"price\": {\n            \"type\": \"string\"\n          },\n          \"address\": {\n            \"type\": \"string\"\n          }\n        },\n        \"title\": \"BookVO\"\n      },\n      \"InputStream\": {\n        \"type\": \"object\",\n        \"title\": \"InputStream\"\n      },\n      \"Resource\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"file\": {\n            \"$ref\": \"#/components/schemas/File\"\n          },\n          \"filename\": {\n            \"type\": \"string\"\n          },\n          \"inputStream\": {\n            \"$ref\": \"#/components/schemas/InputStream\"\n          },\n          \"open\": {\n            \"type\": \"boolean\"\n          },\n          \"readable\": {\n            \"type\": \"boolean\"\n          },\n          \"uri\": {\n            \"$ref\": \"#/components/schemas/URI\"\n          },\n          \"url\": {\n            \"$ref\": \"#/components/schemas/URL\"\n          }\n        },\n        \"title\": \"Resource\"\n      },\n      \"URI\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"absolute\": {\n            \"type\": \"boolean\"\n          },\n          \"authority\": {\n            \"type\": \"string\"\n          },\n          \"fragment\": {\n            \"type\": \"string\"\n          },\n          \"host\": {\n            \"type\": \"string\"\n          },\n          \"opaque\": {\n            \"type\": \"boolean\"\n          },\n          \"path\": {\n            \"type\": \"string\"\n          },\n          \"port\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"query\": {\n            \"type\": \"string\"\n          },\n          \"rawAuthority\": {\n            \"type\": \"string\"\n          },\n          \"rawFragment\": {\n            \"type\": \"string\"\n          },\n          \"rawPath\": {\n            \"type\": \"string\"\n          },\n          \"rawQuery\": {\n            \"type\": \"string\"\n          },\n          \"rawSchemeSpecificPart\": {\n            \"type\": \"string\"\n          },\n          \"rawUserInfo\": {\n            \"type\": \"string\"\n          },\n          \"scheme\": {\n            \"type\": \"string\"\n          },\n          \"schemeSpecificPart\": {\n            \"type\": \"string\"\n          },\n          \"userInfo\": {\n            \"type\": \"string\"\n          }\n        },\n        \"title\": \"URI\"\n      },\n      \"URL\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"authority\": {\n            \"type\": \"string\"\n          },\n          \"content\": {\n            \"type\": \"object\"\n          },\n          \"defaultPort\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"deserializedFields\": {\n            \"$ref\": \"#/components/schemas/URLStreamHandler\"\n          },\n          \"file\": {\n            \"type\": \"string\"\n          },\n          \"host\": {\n            \"type\": \"string\"\n          },\n          \"path\": {\n            \"type\": \"string\"\n          },\n          \"port\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"protocol\": {\n            \"type\": \"string\"\n          },\n          \"query\": {\n            \"type\": \"string\"\n          },\n          \"ref\": {\n            \"type\": \"string\"\n          },\n          \"serializedHashCode\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"userInfo\": {\n            \"type\": \"string\"\n          }\n        },\n        \"title\": \"URL\"\n      },\n      \"URLStreamHandler\": {\n        \"type\": \"object\",\n        \"title\": \"URLStreamHandler\"\n      },\n      \"UpdateBookRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"birthCountry\": {\n            \"type\": \"string\",\n            \"example\": \"CN\"\n          },\n          \"citizenship\": {\n            \"type\": \"string\",\n            \"example\": \"A\"\n          },\n          \"roleId\": {\n            \"type\": \"string\"\n          },\n          \"dateOfBirth\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": \"1992-10-10T00:00:00.000Z\"\n          },\n          \"employmentStatus\": {\n            \"type\": \"string\",\n            \"example\": \"EMP001\"\n          },\n          \"ethnicity\": {\n            \"type\": \"string\",\n            \"example\": \"CN\"\n          },\n          \"gender\": {\n            \"type\": \"string\",\n            \"example\": \"F\"\n          },\n          \"idNumber\": {\n            \"type\": \"string\",\n            \"example\": \"S6362682T\"\n          },\n          \"idType\": {\n            \"type\": \"string\",\n            \"example\": \"FD\"\n          },\n          \"spokenLanguage\": {\n            \"type\": \"array\",\n            \"example\": [\"AH\", \"AK\"],\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"title\": \"UpdateBookRequest\"\n      },\n      \"DocumentVO\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"attachment\": {\n            \"$ref\": \"#/components/schemas/BookDetailVo\"\n          },\n          \"authorName\": {\n            \"type\": \"string\"\n          },\n          \"createdDate\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"note\": {\n            \"type\": \"string\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          }\n        },\n        \"title\": \"DocumentVO\"\n      },\n      \"AttachmentBO\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"authorName\": {\n            \"type\": \"string\"\n          },\n          \"createdDate\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"fileName\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"mimeType\": {\n            \"type\": \"string\"\n          },\n          \"path\": {\n            \"type\": \"string\"\n          }\n        },\n        \"title\": \"AttachmentBO\"\n      },\n      \"File\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"absolute\": {\n            \"type\": \"boolean\"\n          },\n          \"absoluteFile\": {\n            \"$ref\": \"#/components/schemas/File\"\n          },\n          \"absolutePath\": {\n            \"type\": \"string\"\n          },\n          \"canonicalFile\": {\n            \"$ref\": \"#/components/schemas/File\"\n          },\n          \"canonicalPath\": {\n            \"type\": \"string\"\n          },\n          \"directory\": {\n            \"type\": \"boolean\"\n          },\n          \"executable\": {\n            \"type\": \"boolean\"\n          },\n          \"file\": {\n            \"type\": \"boolean\"\n          },\n          \"freeSpace\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"hidden\": {\n            \"type\": \"boolean\"\n          },\n          \"lastModified\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"parent\": {\n            \"type\": \"string\"\n          },\n          \"parentFile\": {\n            \"$ref\": \"#/components/schemas/File\"\n          },\n          \"path\": {\n            \"type\": \"string\"\n          },\n          \"readable\": {\n            \"type\": \"boolean\"\n          },\n          \"totalSpace\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"usableSpace\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"writable\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"title\": \"File\"\n      },\n      \"BookingResponse\": {\n        \"type\": \"object\",\n        \"required\": [\"data\"],\n        \"properties\": {\n          \"data\": {\n            \"$ref\": \"#/components/schemas/DocumentVO\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorInfo\"\n            }\n          }\n        },\n        \"title\": \"BookingResponse\"\n      },\n      \"ErrorInfo\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"errorMessage\": {\n            \"type\": \"string\"\n          }\n        },\n        \"title\": \"ErrorInfo\"\n      },\n      \"Item\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"readOnly\": true\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"price\": {\n            \"type\": \"string\"\n          },\n          \"color\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Items\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"$ref\": \"#/components/schemas/Item\"\n        }\n      },\n      \"Message\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Error\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          },\n          \"field\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Errors\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"$ref\": \"#/components/schemas/Error\"\n        }\n      },\n      \"ValidationError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\"\n          },\n          \"errors\": {\n            \"$ref\": \"#/components/schemas/Errors\"\n          }\n        }\n      },\n      \"User\": {\n        \"description\": \"Without type=object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"username\": {\n            \"type\": \"string\"\n          },\n          \"firstName\": {\n            \"type\": \"string\"\n          },\n          \"lastName\": {\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"type\": \"string\"\n          },\n          \"phone\": {\n            \"type\": \"string\"\n          },\n          \"userStatus\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\",\n            \"description\": \"User Status\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"User\"\n        }\n      },\n      \"Category\": {\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"Category\"\n        }\n      },\n      \"Pet\": {\n        \"required\": [\"name\", \"photoUrls\"],\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"category\": {\n            \"$ref\": \"#/components/schemas/Category\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"doggie\"\n          },\n          \"photoUrls\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"name\": \"photoUrl\",\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"name\": \"tag\",\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Tag\"\n            }\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"pet status in the store\",\n            \"enum\": [\"available\", \"pending\", \"sold\"]\n          }\n        },\n        \"xml\": {\n          \"name\": \"Pet\"\n        }\n      },\n      \"Tag\": {\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"Tag\"\n        }\n      },\n      \"Order\": {\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"petId\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"quantity\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"shipDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"Order Status\",\n            \"enum\": [\"placed\", \"approved\", \"delivered\"]\n          },\n          \"complete\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"Order\"\n        }\n      },\n      \"ApiResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Dictionary\": {\n        \"type\": \"object\",\n        \"required\": [\"name\", \"photoUrls\"],\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"category\": {\n            \"$ref\": \"#/components/schemas/Category\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"doggie\"\n          },\n          \"photoUrls\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"name\": \"photoUrl\",\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"name\": \"tag\",\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Tag\"\n            }\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"pet status in the store\",\n            \"enum\": [\"available\", \"pending\", \"sold\"]\n          },\n          \"dictionary\": {\n            \"type\": \"object\",\n            \"description\": \"Object only contains additional properties\",\n            \"additionalProperties\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"code\": {\n                  \"type\": \"integer\"\n                },\n                \"text\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"dictionary1\": {\n            \"type\": \"object\",\n            \"description\": \"Object contains both properties and additional properties\",\n            \"required\": [\"name\", \"age\"],\n            \"properties\": {\n              \"name\": {\n                \"type\": \"string\"\n              },\n              \"age\": {\n                \"type\": \"number\"\n              }\n            },\n            \"additionalProperties\": {\n              \"oneOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"number\"\n                }\n              ]\n            }\n          },\n          \"dictionary2\": {\n            \"type\": \"object\",\n            \"description\": \"Additional properties is not an object\",\n            \"required\": [\"name\", \"age\"],\n            \"properties\": {\n              \"name\": {\n                \"type\": \"string\"\n              },\n              \"age\": {\n                \"type\": \"string\"\n              }\n            },\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            }\n          },\n          \"dictionary3\": {\n            \"type\": \"object\",\n            \"description\": \"Additional properties is a boolean\",\n            \"properties\": {\n              \"name\": {\n                \"type\": \"string\"\n              },\n              \"age\": {\n                \"type\": \"number\"\n              }\n            },\n            \"additionalProperties\": true\n          },\n          \"dictionary4\": {\n            \"type\": \"object\",\n            \"description\": \"Additional properties is a boolean and without properties\",\n            \"additionalProperties\": true\n          }\n        },\n        \"xml\": {\n          \"name\": \"Pet\"\n        }\n      },\n      \"CarTypeEnum\": {\n        \"type\": \"string\",\n        \"enum\": [\"BMW\", \"Audi\", \"BYD\"]\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/reeli/ts-codegen@835601f2b8bee8db70aabcb3aafdaef977e5d7f2/-/blob/packages/ts-codegen-core/examples/openapi1.json",
			"externalURLs": [
				{
					"url": "https://github.com/reeli/ts-codegen/blob/835601f2b8bee8db70aabcb3aafdaef977e5d7f2/packages/ts-codegen-core/examples/openapi1.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/documents/{documentId}/doc\": get: operation \"getDocumentByIdUsingGET\": parameters: parse parameter \"from\": at 482:11: invalid schema:style:explode combination: (\"\":\"form\":true)"
}