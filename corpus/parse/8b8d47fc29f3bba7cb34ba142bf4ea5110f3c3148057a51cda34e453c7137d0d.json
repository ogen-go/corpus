{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/alibaba/SREWorks"
		},
		"file": {
			"name": "docs.json",
			"size": 0,
			"path": "saas/aiops/api/anomalydetection/docs.json",
			"byteSize": 5528,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"version\": \"20220228111909_6E4D91\",\n    \"title\": \"AnomalyDetection\",\n    \"description\": \"To get a client SDK, copy all content from \u003ca href=\\\"/docs.json\\\"\u003edocs\u003c/a\u003e and paste into \u003ca href=\\\"https://editor.swagger.io\\\"\u003eeditor.swagger.io\u003c/a\u003e then click the tab \u003cstrong\u003eGenerate Client\u003c/strong\u003e and choose the language.\"\n  },\n  \"tags\": [\n    {\n      \"name\": \"infra\"\n    },\n    {\n      \"name\": \"app\"\n    }\n  ],\n  \"paths\": {\n    \"/healthz\": {\n      \"get\": {\n        \"tags\": [\n          \"infra\"\n        ],\n        \"description\": \"Health check endpoint. Expecting an empty response with status code 200 when the service is in health state\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"success\"\n          }\n        }\n      }\n    },\n    \"/metadata\": {\n      \"get\": {\n        \"tags\": [\n          \"infra\"\n        ],\n        \"description\": \"BentoService metadata endpoint. Returns the service's`bentoml.yml` in JSON format.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"success\"\n          }\n        }\n      }\n    },\n    \"/metrics\": {\n      \"get\": {\n        \"tags\": [\n          \"infra\"\n        ],\n        \"description\": \"Prometheus metrics endpoint\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"success\"\n          }\n        }\n      }\n    },\n    \"/feedback\": {\n      \"post\": {\n        \"tags\": [\n          \"infra\"\n        ],\n        \"description\": \"Provide feedback to prediction results from BentoService. Expecting feedback request payload in JSON format and requires `request_id` field, which can be obtained from any BentoService prediction response's header. Only last key will be considered if keys are repeated.\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"request_id\"\n                ],\n                \"properties\": {\n                  \"request_id\": {\n                    \"type\": \"uuid\"\n                  }\n                }\n              },\n              \"example\": {\n                \"request_id\": \"cf420b0f-15fa-013d-a37b-12345678c321\",\n                \"example_feedback\": \"key-value pair can be anything\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"success\"\n          }\n        }\n      }\n    },\n    \"/analyse\": {\n      \"post\": {\n        \"tags\": [\n          \"app\"\n        ],\n        \"description\": \"\\n        An inference API named `analyse` with Dataframe input adapter, which codifies\\n        how HTTP requests or CSV files are converted to a pandas Dataframe object as the\\n        inference API function iwnput\\n        \",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\"\n              },\n              \"example\": null\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"success\"\n          }\n        }\n      }\n    },\n    \"/analyze\": {\n      \"post\": {\n        \"tags\": [\n          \"app\"\n        ],\n        \"description\": \"\\n        An inference API named `predict` with Dataframe input adapter, which codifies\\n        how HTTP requests or CSV files are converted to a pandas Dataframe object as the\\n        inference API function input\\n        \",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\"\n              },\n              \"example\": null\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"success\"\n          }\n        }\n      }\n    },\n    \"/doc\": {\n      \"post\": {\n        \"tags\": [\n          \"app\"\n        ],\n        \"description\": \"\\n        get README.md\\n        \",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\"\n              },\n              \"example\": null\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"success\"\n          }\n        }\n      }\n    },\n    \"/predict\": {\n      \"post\": {\n        \"tags\": [\n          \"app\"\n        ],\n        \"description\": \"\\n        An inference API named `predict` with Dataframe input adapter, which codifies\\n        how HTTP requests or CSV files are converted to a pandas Dataframe object as the\\n        inference API function input\\n        \",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"file\": {\n                    \"type\": \"string\",\n                    \"format\": \"binary\"\n                  }\n                }\n              }\n            },\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\"\n              },\n              \"example\": null\n            },\n            \"text/csv\": {\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"binary\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"success\"\n          }\n        }\n      }\n    }\n  }\n}",
			"canonicalURL": "/github.com/alibaba/SREWorks@7c92b0e3c0a8a974a09cc2f7646f25d46119d211/-/blob/saas/aiops/api/anomalydetection/docs.json",
			"externalURLs": [
				{
					"url": "https://github.com/alibaba/SREWorks/blob/7c92b0e3c0a8a974a09cc2f7646f25d46119d211/saas/aiops/api/anomalydetection/docs.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/feedback\": at 56:18: post: at 57:15: requestBody: at 62:24: at 64:22: parse content: application/json: at 65:33: schema: at 66:25: parse schema: property \"request_id\": at 72:33: parse schema: unexpected schema type: \"uuid\""
}