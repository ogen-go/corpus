{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/opendevs-org/express-boilerplate-generator"
		},
		"file": {
			"name": "swagger.json",
			"size": 0,
			"path": "lib/templates/express-server-boilerplate/src/swagger.json",
			"byteSize": 6347,
			"content": "{\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n        \"version\": \"1.0.0\",\n        \"title\": \"Product API\",\n        \"description\": \"an *auth-less* [express](https://expressjs.com/) server boilerplate to kickstart your backend development.\",\n        \"contact\": {\n            \"name\": \"opendevs\",\n            \"url\": \"https://opendevs.in\",\n            \"email\": \"open.devs.github@gmail.com\"\n        },\n        \"license\": {\n            \"name\": \"MIT\",\n            \"url\": \"https://github.com/open-devs/express-server-boilerplate/blob/main/LICENSE\"\n        }\n    },\n    \"servers\": [\n        {\n            \"url\": \"/api/\",\n            \"description\": \"localhost\"\n        }\n    ],\n    \"tags\": [\n        {\n            \"name\": \"Products\",\n            \"description\": \"API for products in the local mongo database\"\n        }\n    ],\n    \"paths\": {\n        \"/product\": {\n            \"get\": {\n                \"tags\": [\n                    \"Products\"\n                ],\n                \"summary\": \"Get all products from mongo database\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\"\n                    },\n                    \"500\": {\n                        \"description\": \"Internal Server Error\"\n                    }\n                }\n            },\n            \"post\": {\n                \"tags\": [\n                    \"Products\"\n                ],\n                \"summary\": \"Create a new product in mongo database\",\n                \"requestBody\": {\n                    \"description\": \"Product Object\",\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/definitions/Product\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"CREATED\"\n                    },\n                    \"400\": {\n                        \"description\": \"Failed. Bad post data.\"\n                    },\n                    \"500\": {\n                        \"description\": \"Failed. Server Error.\"\n                    }\n                }\n            }\n        },\n        \"/product/{_id}\": {\n            \"parameters\": [\n                {\n                    \"name\": \"_id\",\n                    \"in\": \"path\",\n                    \"required\": true,\n                    \"description\": \"ID of the product that we want to match\",\n                    \"schema\": {\n                        \"$ref\": \"#/definitions/ID\"\n                    }\n                }\n            ],\n            \"get\": {\n                \"tags\": [\n                    \"Products\"\n                ],\n                \"summary\": \"Get product with given ID\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"_id\",\n                        \"required\": true,\n                        \"description\": \"Product with id\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/ID\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\"\n                    },\n                    \"404\": {\n                        \"description\": \"Failed. Product not found.\"\n                    },\n                    \"500\": {\n                        \"description\": \"Failed. Server Error.\"\n                    }\n                }\n            },\n            \"put\": {\n                \"summary\": \"Update product with given ID\",\n                \"tags\": [\n                    \"Products\"\n                ],\n                \"requestBody\": {\n                    \"description\": \"Product Object\",\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/definitions/Product\"\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"_id\",\n                        \"required\": true,\n                        \"description\": \"Product with new values of properties\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/ID\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\"\n                    },\n                    \"400\": {\n                        \"description\": \"Failed. Bad post data.\"\n                    },\n                    \"404\": {\n                        \"description\": \"Failed. Product not found.\"\n                    }\n                }\n            },\n            \"delete\": {\n                \"summary\": \"Delete product with given ID\",\n                \"tags\": [\n                    \"Products\"\n                ],\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"_id\",\n                        \"required\": true,\n                        \"description\": \"Delete product with id\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/ID\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\"\n                    },\n                    \"404\": {\n                        \"description\": \"Failed. Product not found.\"\n                    }\n                }\n            }\n        }\n    },\n    \"definitions\": {\n        \"ID\": {\n            \"properties\": {\n                \"_id\": {\n                    \"type\": \"string(Object ID)\"\n                }\n            }\n        },\n        \"Product\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"category\": {\n                    \"type\": \"string\"\n                },\n                \"unit\": {\n                    \"type\": \"number\"\n                }\n            }\n        }\n    }\n}",
			"canonicalURL": "/github.com/opendevs-org/express-boilerplate-generator@ba3cced6aa894f235f6ce5bb4c91c44bd26151da/-/blob/lib/templates/express-server-boilerplate/src/swagger.json",
			"externalURLs": [
				{
					"url": "https://github.com/opendevs-org/express-boilerplate-generator/blob/ba3cced6aa894f235f6ce5bb4c91c44bd26151da/lib/templates/express-server-boilerplate/src/swagger.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/product/{_id}\": parameters: parse parameter \"_id\": parse schema: $ref: resolve \"#/definitions/ID\": property \"_id\": at lib/templates/express-server-boilerplate/src/swagger.json:184:29: type: unexpected schema type: \"string(Object ID)\""
}