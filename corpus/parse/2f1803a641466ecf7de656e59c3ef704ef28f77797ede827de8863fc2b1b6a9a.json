{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bcgov/jag-file-submission"
		},
		"file": {
			"name": "jag-efiling-api.yaml",
			"size": 0,
			"path": "src/backend/efiling-api/jag-efiling-api.yaml",
			"byteSize": 46476,
			"content": "openapi: 3.0.0\ninfo:\n  version: 0.7.0\n  title: jag-efiling-api\n  description: Efiling api\nservers:\n  - url: \"http://localhost:8080\"\ntags:\n  - name: clientEndpoints\n    description: Endpoints that are exposed to external client\n  - name: submission\n    description: Submission Api\n  - name: courts\n    description: Courts\n  - name: filingPackages\n    description: File Packages\nsecurity:\n  - bearerAuth: []\npaths:\n  \"/submission/documents\":\n    post:\n      summary: Initial documents upload\n      operationId: UploadSubmissionDocuments\n      tags:\n        - submission\n        - clientEndpoints\n      parameters:\n        - $ref: \"#/components/parameters/xTransactionId\"\n        - $ref: \"#/components/parameters/xUserId\"\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                files:\n                  type: array\n                  items:\n                    type: string\n                    format: binary\n      responses:\n        \"200\":\n          description: File successfully received\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UploadSubmissionDocumentsResponse\"\n  \"/submission/{submissionId}\":\n    parameters:\n      - $ref: \"#/components/parameters/submissionId\"\n      - $ref: \"#/components/parameters/xTransactionId\"\n    delete:\n      summary: Delete a submission by id\n      operationId: DeleteSubmission\n      tags:\n        - submission\n      responses:\n        \"200\":\n          description: submission deleted\n  \"/submission/{submissionId}/documents\":\n    post:\n      summary: Additional documents upload\n      operationId: UploadAdditionalSubmissionDocuments\n      tags:\n        - submission\n      parameters:\n        - $ref: \"#/components/parameters/submissionId\"\n        - $ref: \"#/components/parameters/xTransactionId\"\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                files:\n                  type: array\n                  items:\n                    type: string\n                    format: binary\n      responses:\n        \"200\":\n          description: File successfully received\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UploadSubmissionDocumentsResponse\"\n        \"404\":\n          description: Submission not found\n  \"/submission/{submissionId}/rushDocuments\":\n    post:\n      summary: Rush documents upload\n      operationId: UploadRushDocuments\n      tags:\n        - submission\n      parameters:\n        - $ref: \"#/components/parameters/submissionId\"\n        - $ref: \"#/components/parameters/xTransactionId\"\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                files:\n                  type: array\n                  items:\n                    type: string\n                    format: binary\n      responses:\n        \"200\":\n          description: File successfully received\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UploadSubmissionDocumentsResponse\"\n        \"404\":\n          description: Submission not found\n  \"/submission/{submissionId}/update-documents\":\n    post:\n      summary: Additional documents properties\n      operationId: UpdateDocumentProperties\n      tags:\n        - submission\n      parameters:\n        - $ref: \"#/components/parameters/submissionId\"\n        - $ref: \"#/components/parameters/xTransactionId\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateDocumentRequest\"\n      responses:\n        \"200\":\n          description: Document properties updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateDocumentResponse\"\n        \"404\":\n          description: Submission not found\n  \"/submission/{submissionId}/config\":\n    parameters:\n      - $ref: \"#/components/parameters/submissionId\"\n      - $ref: \"#/components/parameters/xTransactionId\"\n    get:\n      summary: Get configuration for a given submission\n      operationId: GetSubmissionConfig\n      tags:\n        - submission\n      responses:\n        \"200\":\n          description: Config found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetSubmissionConfigResponse\"\n        \"404\":\n          description: Config not found\n  \"/submission/{submissionId}/generateUrl\":\n    post:\n      summary: Generates a secure URL for e-filing submission\n      operationId: GenerateUrl\n      tags:\n        - submission\n        - clientEndpoints\n      parameters:\n        - $ref: \"#/components/parameters/xTransactionId\"\n        - $ref: \"#/components/parameters/xUserId\"\n        - $ref: \"#/components/parameters/submissionId\"\n      requestBody:\n        description: requested parameters to generate a url\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GenerateUrlRequest\"\n      responses:\n        \"200\":\n          description: File successfully received\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GenerateUrlResponse\"\n        \"403\":\n          description: Request does not meet the required criteria\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EfilingError\"\n  \"/submission/{submissionId}/submit\":\n    post:\n      summary: Create service for payment processing\n      operationId: submit\n      tags:\n        - submission\n      parameters:\n        - $ref: \"#/components/parameters/xTransactionId\"\n        - $ref: \"#/components/parameters/submissionId\"\n      requestBody:\n        description: filing submit parameters\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SubmitRequest\"\n      responses:\n        \"201\":\n          description: Service created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SubmitResponse\"\n        \"403\":\n          description: Request does not meet the required criteria\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EfilingError\"\n  \"/submission/{submissionId}/filing-package\":\n    get:\n      summary: Get filing package information\n      operationId: GetSubmissionFilingPackage\n      tags:\n        - submission\n      parameters:\n        - $ref: \"#/components/parameters/xTransactionId\"\n        - $ref: \"#/components/parameters/submissionId\"\n      responses:\n        \"200\":\n          description: Filing Package Information found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SubmissionFilingPackage\"\n        \"404\":\n          description: Filing Package Information not found\n  \"/submission/{submissionId}/document/{filename}\":\n    get:\n      summary: Get document by name\n      operationId: GetSubmissionDocument\n      tags:\n        - submission\n      parameters:\n        - $ref: \"#/components/parameters/xTransactionId\"\n        - $ref: \"#/components/parameters/submissionId\"\n        - name: filename\n          in: path\n          description: A document name\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Filing Package Information found\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        \"404\":\n          description: Document not found\n  \"/submission/{submissionId}/rushProcessing\":\n    post:\n      summary: add rush processing to package\n      operationId: PostRushProcessing\n      tags:\n        - submission\n      parameters:\n        - $ref: \"#/components/parameters/xTransactionId\"\n        - $ref: \"#/components/parameters/submissionId\"\n      requestBody:\n        description: filing submit parameters\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Rush\"\n      responses:\n        \"201\":\n          description: Rush created\n        \"404\":\n          description: Submission not found\n  \"/csoAccount\":\n    post:\n      summary: Create a CSO account\n      operationId: CreateAccount\n      description: In order to create an account, an item with type BCeID is required in the accounts field.\n      tags:\n        - account\n      parameters:\n        - $ref: \"#/components/parameters/xTransactionId\"\n      requestBody:\n        description: cso account details\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateCsoAccountRequest\"\n      responses:\n        \"201\":\n          description: Account Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CsoAccount\"\n    get:\n      summary: Get user CSO account\n      operationId: GetCsoAccount\n      description: Get a user cso account.\n      tags:\n        - account\n      parameters:\n        - $ref: \"#/components/parameters/xTransactionId\"\n      responses:\n        \"200\":\n          description: A CSO Account\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CsoAccount\"\n        \"404\":\n          description: Cso Account not found\n    put:\n      summary: Update CSO account internal client number\n      operationId: updateCsoAccount\n      tags:\n        - account\n      parameters:\n        - $ref: \"#/components/parameters/xTransactionId\"\n      requestBody:\n        description: update client details parameters\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CsoAccountUpdateRequest\"\n      responses:\n        \"200\":\n          description: Client updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CsoAccount\"\n        \"403\":\n          description: Request does not meet the required criteria\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EfilingError\"\n  \"/bceidAccount\":\n    get:\n      summary: Get a BCeID account\n      operationId: GetBceidAccount\n      description: Retrieve BCeID user account information\n      tags:\n        - account\n      parameters:\n        - $ref: \"#/components/parameters/xTransactionId\"\n      responses:\n        \"200\":\n          description: Account Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BceidAccount\"\n        \"404\":\n          description: Account not found\n  \"/documents/types\":\n    get:\n      summary: Get document types\n      operationId: GetDocumentTypes\n      description: A list of document types\n      tags:\n        - lookup\n        - clientEndpoints\n      parameters:\n        - name: courtLevel\n          in: query\n          description: court level\n          required: true\n          schema:\n            $ref: \"#/components/schemas/CourtLevel\"\n        - name: courtClassification\n          in: query\n          description: court classification\n          required: true\n          schema:\n            $ref: \"#/components/schemas/CourtClassification\"\n      responses:\n        \"200\":\n          description: List of document types\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DocumentTypes\"\n  \"/countries\":\n    get:\n      summary: Get countries\n      operationId: GetCountries\n      description: A list of countries\n      tags:\n        - lookup\n      responses:\n        \"200\":\n          description: List of countries\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/CountryCode\"\n  \"/courts\":\n    get:\n      summary: Get court locations\n      operationId: GetCourtLocations\n      description: get court information by court name\n      tags:\n        - courts\n      parameters:\n        - name: courtLevel\n          in: query\n          description: court type filter\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Information of a court\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CourtLocations\"\n  \"/payment/generate-update-card\":\n    post:\n      summary: Update card on bambora\n      operationId: UpdateCreditCard\n      description: For expired credit card get url to update\n      tags:\n        - payment\n      parameters:\n        - $ref: \"#/components/parameters/xTransactionId\"\n      requestBody:\n        description: card update params\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GenerateCardUrlRequest\"\n      responses:\n        \"200\":\n          description: Card url generated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GenerateCardUrlResponse\"\n  \"/filingpackages\":\n    get:\n      summary: Get filing packages\n      operationId: GetFilingPackages\n      description: get filing packages from cso\n      tags:\n        - filingPackages\n      parameters:\n        - name: parentApplication\n          in: query\n          description: parent application\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: All filing package details\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/FilingPackage\"\n  \"/filingpackages/{packageIdentifier}\":\n    get:\n      summary: Get filing package\n      operationId: GetFilingPackage\n      description: get filing package details from cso\n      tags:\n        - filingPackages\n      parameters:\n        - $ref: \"#/components/parameters/packageIdentifier\"\n      responses:\n        \"200\":\n          description: All filing package details\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FilingPackage\"\n  \"/filingpackages/{packageIdentifier}/actionRequiredDetails\":\n    get:\n      summary: Get details for documents that require action\n      operationId: GetActionRequiredDetails\n      description: get action required details from cso\n      tags:\n        - filingPackages\n        - clientEndpoints\n      parameters:\n        - $ref: \"#/components/parameters/packageIdentifier\"\n      responses:\n        \"200\":\n          description: All filing package details\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ActionRequiredDetails\"\n        \"404\":\n          description: Package not found\n        \"403\":\n          description: Request does not meet the required criteria\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EfilingError\"\n  \"/filingpackages/{packageIdentifier}/submissionSheet\":\n    get:\n      summary: Get submission sheet for package\n      operationId: GetSubmissionSheet\n      description: get submission sheet file from cso\n      tags:\n        - filingPackages\n      parameters:\n        - $ref: \"#/components/parameters/packageIdentifier\"\n      responses:\n        \"200\":\n          description: File was returned\n          content:\n            application/pdf:\n              schema:\n                type: string\n                format: binary\n        \"404\":\n          description: file not found\n  \"/filingpackages/{packageIdentifier}/paymentReceipt\":\n    get:\n      summary: Get submission payment receipt\n      operationId: GetPaymentReceipt\n      description: get payment receipt file from cso\n      tags:\n        - filingPackages\n      parameters:\n        - $ref: \"#/components/parameters/packageIdentifier\"\n      responses:\n        \"200\":\n          description: File was returned\n          content:\n            application/pdf:\n              schema:\n                type: string\n                format: binary\n        \"404\":\n          description: file not found\n  \"/filingpackages/{packageIdentifier}/registryNotice\":\n    get:\n      summary: Get submission registry notice\n      operationId: GetRegistryNotice\n      description: get registry notice file from cso\n      tags:\n        - filingPackages\n      parameters:\n        - $ref: \"#/components/parameters/packageIdentifier\"\n      responses:\n        \"200\":\n          description: File was returned\n          content:\n            application/pdf:\n              schema:\n                type: string\n                format: binary\n        \"404\":\n          description: file not found\n  \"/filingpackages/{packageIdentifier}/document/{documentIdentifier}\":\n    get:\n      summary: Get submitted document\n      operationId: GetSubmittedDocument\n      description: get submitted document\n      tags:\n        - filingPackages\n      parameters:\n        - $ref: \"#/components/parameters/packageIdentifier\"\n        - name: documentIdentifier\n          in: path\n          description: document identifier\n          required: true\n          schema:\n            type: number\n            format: int\n      responses:\n        \"200\":\n          description: File was returned\n          content:\n            application/pdf:\n              schema:\n                type: string\n                format: binary\n        \"404\":\n          description: file not found\n    delete:\n      summary: delete(withdraw) submitted document\n      operationId: DeleteSubmittedDocument\n      description: Delete submitted document\n      tags:\n        - filingPackages\n      parameters:\n        - $ref: \"#/components/parameters/packageIdentifier\"\n        - name: documentIdentifier\n          in: path\n          description: document identifier\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Document was deleted\n  \"/filingpackages/{packageIdentifier}/rushDocument/{fileName}\":\n    get:\n      summary: Get rush document\n      operationId: GetRushDocument\n      description: get rush document\n      tags:\n        - filingPackages\n      parameters:\n        - $ref: \"#/components/parameters/packageIdentifier\"\n        - name: fileName\n          in: path\n          description: document file name\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: File was returned\n          content:\n            application/pdf:\n              schema:\n                type: string\n                format: binary\n        \"404\":\n          description: file not found\n  \"/filingpackages/{packageIdentifier}/parentDetails\":\n    get:\n      summary: Get rush document\n      operationId: GetParentDetails\n      description: get parent app details for package\n      tags:\n        - filingPackages\n      parameters:\n        - $ref: \"#/components/parameters/packageIdentifier\"\n      responses:\n        \"200\":\n          description: parent app details\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ParentAppDetails\"\n        \"404\":\n          description: Package not found\ncomponents:\n  securitySchemes:\n    bearerAuth: # arbitrary name for the security scheme\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n  parameters:\n    xTransactionId:\n      name: X-Transaction-Id\n      in: header\n      schema:\n        type: string\n        format: uuid\n      required: true\n      description: A unique Transaction Id generated by FilingHub clients\n    xUserId:\n      name: X-User-Id\n      in: header\n      schema:\n        type: string\n        format: string\n      required: true\n      description: A unique BCeID universal id passed to initial calls\n    submissionId:\n      name: submissionId\n      in: path\n      description: A submission id\n      required: true\n      schema:\n        type: string\n        format: uuid\n    packageIdentifier:\n      name: packageIdentifier\n      in: path\n      description: package identifier\n      required: true\n      schema:\n        type: number\n  schemas:\n    BceidAccount:\n      type: object\n      description: BCeID account details\n      properties:\n        firstName:\n          type: string\n        lastName:\n          type: string\n        middleName:\n          type: string\n    CourtClassification:\n      type: string\n      enum: [B, C, D, E, F, H, L, M, N, O, P, S, V]\n      description: \u003e\n        court classification:\n          * `B` - Bankruptcy\n          * `C` - Small Claims\n          * `D` - Divorce\n          * `E` - Family Law Proceedings\n          * `F` - Family\n          * `H` - Foreclosure\n          * `L` - Enforcement/Legislated Statute\n          * `M` - Motor Vehicle Accidents\n          * `N` - Adoption\n          * `O` - Appeal Civil\n          * `P` - Probate\n          * `S` - Supreme Civil (General)\n          * `V` - Caveat\n    CourtLevel:\n      type: string\n      enum: [A, P, S]\n      description: \u003e\n        court level:\n          * `A` - Appeal\n          * `P` - Provincial\n          * `S` - Supreme\n    InitialDocument:\n      type: object\n      description: Submission Metadata used to describe the submission that will be e-filled\n      required:\n        - type\n        - name\n        - isAmendment\n        - isSupremeCourtScheduling\n        - data\n        - md5\n      properties:\n        name:\n          type: string\n          description: the name of the document\n        type:\n          type: string\n          description: cso document type\n        isAmendment:\n          type: boolean\n          description: is the document an amendment to another\n        isSupremeCourtScheduling:\n          type: boolean\n          description: supreme court scheduling required\n        data:\n          type: object\n          description: store additional details\n        md5:\n          type: string\n          description: Computed hash value of the document content, it is used as a checksum to validate the document integrity.\n        actionDocument:\n          $ref: \"#/components/schemas/ActionDocument\"\n    Document:\n      required:\n        - identifier\n        - description\n        - status\n        - paymentProcessed\n        - filingDate\n      type: object\n      description: A Efiling Document\n      properties:\n        identifier:\n          type: string\n          description: document identifier\n        filingDate:\n          type: string\n          description: date of document filing\n        description:\n          type: string\n          description: document description\n        paymentProcessed:\n          type: boolean\n          description: Has the payment been processed\n        rushRequired:\n          type: boolean\n          description: Does the document require rush\n        documentProperties:\n          $ref: \"#/components/schemas/DocumentProperties\"\n        status:\n          $ref: \"#/components/schemas/Status\"\n    DocumentProperties:\n      required:\n        - name\n        - type\n      description: common document properties.\n      properties:\n        name:\n          type: string\n          description: the name of the document\n        type:\n          type: string\n          description: Court Service Online document type\n        isAmendment:\n          type: boolean\n          description: is the document an amendment to another\n        isSupremeCourtScheduling:\n          type: boolean\n          description: supreme court scheduling required\n    SubmissionDocument:\n      required:\n        - description\n        - statutoryFeeAmount\n      type: object\n      description: A Efiling Document\n      allOf:\n        - $ref: \"#/components/schemas/InitialDocument\"\n      properties:\n        documentProperties:\n          $ref: \"#/components/schemas/DocumentProperties\"\n        description:\n          type: string\n          description: the description of the document\n        statutoryFeeAmount:\n          type: number\n          description: statutory fee amount\n        mimeType:\n          type: string\n          description: File mime type\n        status:\n          $ref: \"#/components/schemas/Status\"\n        paymentProcessed:\n          type: boolean\n          description: Has the payment been processed\n        rushRequired:\n          type: boolean\n          description: Does the document require rush\n    EfilingError:\n      required:\n        - error\n        - message\n      properties:\n        error:\n          type: string\n        message:\n          type: string\n        details:\n          type: array\n          items:\n            type: string\n    GenerateUrlRequest:\n      description: details about the required transaction\n      required:\n        - clientApplication\n        - filingPackage\n        - navigationUrls\n      properties:\n        clientAppName:\n          type: string\n          description: Name of the application to be displayed\n        filingPackage:\n          $ref: \"#/components/schemas/InitialPackage\"\n        navigationUrls:\n          $ref: \"#/components/schemas/NavigationUrls\"\n    GenerateUrlResponse:\n      description: A temporary url for uploading submission\n      properties:\n        expiryDate:\n          type: integer\n          format: int64\n        efilingUrl:\n          type: string\n    GetSubmissionConfigResponse:\n      type: object\n      required:\n        - navigation\n        - clientAppName\n        - csoBaseUrl\n      properties:\n        navigationUrls:\n          $ref: \"#/components/schemas/NavigationUrls\"\n        clientAppName:\n          type: string\n          description: the client app name\n        csoBaseUrl:\n          type: string\n          description: the CSO base Url\n    NavigationUrls:\n      required:\n        - success\n        - error\n        - cancel\n      properties:\n        success:\n          type: string\n          description: where user should be redirected on success\n        error:\n          type: string\n          description: where user should be redirected on error\n        cancel:\n          type: string\n          description: where user should be redirected on cancel\n    InitialPackage:\n      type: object\n      description: A filing package can contain one or multiple documents that have or are being submitted electronically for new or existing court file.\n      required:\n        - documents\n        - court\n      properties:\n        packageIdentifier:\n          type: number\n          description: Identifer of package that is being modified\n        court:\n          $ref: \"#/components/schemas/CourtBase\"\n        documents:\n          type: array\n          items:\n            $ref: \"#/components/schemas/InitialDocument\"\n        parties:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Individual\"\n        organizationParties:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Organization\"\n    FilingPackage:\n      type: object\n      description: A filing package can contain one or multiple documents that have or are being submitted electronically for new or existing court file.\n      required:\n        - packageNumber\n        - documents\n        - submittedBy\n        - submittedDate\n        - links\n        - court\n        - hasRegistryNotice\n      properties:\n        packageNumber:\n          type: number\n          description: Submitted package number\n        status:\n          type: string\n          description: Calculated status of package\n        filingComments:\n          type: string\n          description: Filing comments\n        submittedBy:\n          $ref: \"#/components/schemas/Account\"\n        submittedDate:\n          type: string\n          description: Submitted date\n        court:\n          $ref: \"#/components/schemas/Court\"\n        documents:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Document\"\n        parties:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Individual\"\n        organizationParties:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Organization\"\n        payments:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Payment\"\n        links:\n          type: object\n          properties:\n            packageHistoryUrl:\n              type: string\n              description: a link to view all submitted package\n        hasRegistryNotice:\n          type: boolean\n          description: this filing package has a registry notice\n        rush:\n          $ref: \"#/components/schemas/Rush\"\n    SubmissionFilingPackage:\n      type: object\n      description: Submitted\n      required:\n        - submissionFeeAmount\n        - documents\n      properties:\n        submissionFeeAmount:\n          type: number\n          description: Package submission fee.\n        packageNumber:\n          type: number\n          description: Submitted package number\n        filingComments:\n          type: string\n          description: Filing comments\n        submittedBy:\n          $ref: \"#/components/schemas/Account\"\n        submittedDate:\n          type: string\n          description: Submitted date\n        court:\n          $ref: \"#/components/schemas/Court\"\n        documents:\n          type: array\n          items:\n            $ref: \"#/components/schemas/SubmissionDocument\"\n        parties:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Individual\"\n        organizationParties:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Organization\"\n        payments:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Payment\"\n        rush:\n          $ref: \"#/components/schemas/Rush\"\n    CourtBase:\n      type: object\n      description: \"Court related information\"\n      required:\n        - location\n        - level\n        - courtClass\n        - division\n      properties:\n        location:\n          type: string\n          description: the court location\n        level:\n          type: string\n          description: the court level\n        courtClass:\n          type: string\n          description: the court class\n        division:\n          type: string\n          description: the court division\n        fileNumber:\n          type: string\n          description: the file number if case already exists\n        participatingClass:\n          type: string\n    Court:\n      type: object\n      description: \"Court related information\"\n      allOf:\n        - $ref: \"#/components/schemas/CourtBase\"\n      required:\n        - locationDescription\n      properties:\n        agencyId:\n          type: number\n          description: the agancy identifier\n        locationDescription:\n          type: string\n          description: the court location description\n        levelDescription:\n          type: string\n          description: the court location description\n        classDescription:\n          type: string\n          description: the court location description\n    Rush:\n      type: object\n      required:\n        - rushType\n        - firstName\n        - lastName\n      properties:\n        rushType:\n          type: string\n          description: \u003e\n            rush type code\n               * `rule` - Application is made under rule 8-5 (1) SCR\n               * `court` - The court directed that the order be processeed on an urgent basis\n               * `pro` - This is based on a document type\n               * `other` - Other\n          enum:\n            [\n                rule,\n                court,\n                pro,\n                other\n            ]\n        firstName:\n          type: string\n          description: first name of rush party\n        lastName:\n          type: string\n          description: last name of rush party\n        organization:\n          type: string\n          description: organization\n        phoneNumber:\n          type: string\n          description: phone number\n        email:\n          type: string\n          description: email address\n        courtDate:\n          type: string\n          description: court directed date\n        country:\n          type: string\n          description: country\n        countryCode:\n          type: string\n          description: code value for country\n        reason:\n          type: string\n          description: clear and detailed reason\n        status:\n          type: string\n          description: current status of the rush request\n        statusReason:\n          type: string\n          description: current registry reason text\n        supportingDocuments:\n          type: array\n          items:\n            $ref: \"#/components/schemas/RushDocument\"\n    RushDocument:\n      type: object\n      properties:\n        fileName:\n          type: string\n          description: file name of document\n        identifier:\n          type: string\n          description: guid of file\n    CsoAccount:\n      type: object\n      description: a CsoAccount\n      required:\n        - clientId\n        - accountId\n        - internalClientNumber\n        - fileRolePresent\n      properties:\n        clientId:\n          type: string\n          description: the user cso clientId\n        accountId:\n          type: string\n          description: the user cso accountId\n        internalClientNumber:\n          type: string\n          description: the user cso internal client number\n        fileRolePresent:\n          type: boolean\n          description: if the user as file role\n    DocumentType:\n      type: object\n      required:\n        - type\n        - description\n      properties:\n        type:\n          type: string\n          description: code value\n        description:\n          type: string\n          description: human readable value\n    DocumentTypes:\n      type: array\n      items:\n        $ref: \"#/components/schemas/DocumentType\"\n    UploadSubmissionDocumentsResponse:\n      description: represents upload document response\n      type: object\n      required:\n        - submissionId\n      properties:\n        submissionId:\n          type: string\n          format: uuid\n          description: a unique identifier for the submission\n        received:\n          type: number\n          description: the number of document received\n    Party:\n      description: party related to filing package\n      required:\n        - roleType\n      properties:\n        roleType:\n          type: string\n          description: \u003e\n            role type code\n               * `ABC` - Aboriginal Community\n               * `ADJ` - Adjudicator\n               * `ADP` - Adoptee\n               * `APL` - Appellant\n               * `APP` - Applicant\n               * `ANT` - Aunt\n               * `AUT` - Authority\n               * `BKP` - Bankrupt\n               * `BKS` - Bankrupts (Spouse)\n               * `CAV` - Caveator\n               * `CHD` - Child\n               * `COF` - Child on File\n               * `CIT` - Citator\n               * `CLA` - Claimant\n               * `CLA1` - Claimant 1\n               * `CLA2` - Claimant 2\n               * `CLI` - Client\n               * `CI` - Court Issued\n               * `CRD` - Creditor\n               * `DBT` - Debtor\n               * `DEC` - Deceased\n               * `DEF` - Defendant\n               * `DEO` - Defendant by Counterclaim\n               * `DIS` - Disputant\n               * `FTH` - Father\n               * `FNA` - First Nation\n               * `GRF` - Grandfather\n               * `GRM` - Grandmother\n               * `GUA` - Guardian\n               * `HSB` - Husband - Divorce\n               * `INB` - Indian Band\n               * `INC` - Indigenous Community\n               * `ITV` - Intervener\n               * `MOT` - Mother\n               * `NIS` - Nisga'a Lisims Government\n               * `OPAR` - Other Party\n               * `PAR` - Party\n               * `PAR1` - Party 1\n               * `PA1` - Party 1 Joint Divorce Form127A\n               * `PAR2` - Party 2\n               * `PA2` - Party 2 Joint Divorce Form127A\n               * `PAR3` - Party 3\n               * `PAR4` - Party 4\n               * `PAR5` - Party 5\n               * `PET` - Petitioner\n               * `PLA` - Plaintiff\n               * `RES` - Respondent\n               * `REO` - Respondent by way of Counterclaim\n               * `SOL` - Solicitor\n               * `SP1` - Spouse 1- Divorce\n               * `SP2` - Spouse 2 - Divorce\n               * `SFH` - Step-Father\n               * `SMH` - Step-Mother\n               * `TST` - Testator\n               * `TSX` - Testatrix\n               * `THR` - Third Party\n               * `TFN` - Treaty First Nation\n               * `TRU` - Trustee\n               * `UNC` - Uncle\n               * `WIF` - Wife - Divorce\n               * `WIT` - Witness\n          enum:\n            [\n                ABC,\n                ADJ,\n                ADP,\n                APL,\n                APP,\n                ANT,\n                AUT,\n                BKP,\n                BKS,\n                CAV,\n                CHD,\n                COF,\n                CIT,\n                CLA,\n                CLA1,\n                CLA2,\n                CLI,\n                CI,\n                CRD,\n                DBT,\n                DEC,\n                DEF,\n                DEO,\n                DIS,\n                FTH,\n                FNA,\n                GRF,\n                GRM,\n                GUA,\n                HSB,\n                INB,\n                INC,\n                ITV,\n                MOT,\n                NIS,\n                OPAR,\n                PAR,\n                PAR1,\n                PA1,\n                PAR2,\n                PA2,\n                PAR3,\n                PAR4,\n                PAR5,\n                PET,\n                PLA,\n                RES,\n                REO,\n                SOL,\n                SP1,\n                SP2,\n                SFH,\n                SMH,\n                TST,\n                TSX,\n                THR,\n                TFN,\n                TRU,\n                UNC,\n                WIF,\n                WIT,\n            ]\n        roleDescription:\n          type: string\n          description: description of role\n        partyDescription:\n          type: string\n          description: description of party\n    Individual:\n      description: Individual party type\n      allOf:\n        - $ref: \"#/components/schemas/Party\"\n      required:\n        - firstName\n        - lastName\n      properties:\n        firstName:\n          type: string\n          description: first name\n        middleName:\n          type: string\n          description: middle name\n        lastName:\n          type: string\n          description: last name\n    Organization:\n      description: Organization party type\n      allOf:\n        - $ref: \"#/components/schemas/Party\"\n      required:\n        - name\n      properties:\n        name:\n          type: string\n          description: organization name\n    CreateCsoAccountRequest:\n      description: represents a request to create a user\n      required:\n        - firstName\n        - lastName\n        - middleName\n        - email\n      properties:\n        firstName:\n          type: string\n          description: the user first name\n        lastName:\n          type: string\n          description: the user last name\n        middleName:\n          type: string\n          description: the user middle name\n        email:\n          type: string\n          description: the user email address\n    UpdateDocumentRequest:\n      description: request body for update documents\n      type: object\n      properties:\n        documents:\n          type: array\n          items:\n            $ref: \"#/components/schemas/DocumentProperties\"\n    UpdateDocumentResponse:\n      description: response body for update documents\n      type: object\n      properties:\n        documents:\n          type: array\n          items:\n            $ref: \"#/components/schemas/SubmissionDocument\"\n    SubmitRequest:\n      description: create service request\n      type: object\n    SubmitResponse:\n      description: result of submit filing package\n      type: object\n      required:\n        - packageRef\n      properties:\n        packageRef:\n          type: string\n          description: base64 encoded package reference url\n    GenerateCardUrlRequest:\n      description: create service request\n      type: object\n      required:\n        - internalClientNumber\n        - redirectUrl\n      properties:\n        internalClientNumber:\n          type: string\n          description: client id for request to bambora\n        redirectUrl:\n          type: string\n          description: url bambora return from\n    GenerateCardUrlResponse:\n      description: result generate url\n      type: object\n      required:\n        - bamboraUrl\n      properties:\n        bamboraUrl:\n          type: string\n          description: redirect url\n    CsoAccountUpdateRequest:\n      description: update client details\n      type: object\n      required:\n        - internalClientNumber\n      properties:\n        internalClientNumber:\n          type: string\n          description: internal client number for request to bambora\n    CourtLocation:\n      type: object\n      description: \"Court related information\"\n      required:\n        - id\n        - name\n        - code\n        - identifierCode\n        - isSupremeCourt\n        - address\n      properties:\n        id:\n          type: number\n          description: the court id\n        identifierCode:\n          type: string\n          description: the court id code\n        name:\n          type: string\n          description: the court name\n        code:\n          type: string\n          description: the court code\n        isSupremeCourt:\n          type: boolean\n          description: the court supreme\n        address:\n          $ref: \"#/components/schemas/Address\"\n    CourtLocations:\n      description: resposne body for courtlocations\n      type: object\n      properties:\n        courts:\n          type: array\n          items:\n            $ref: \"#/components/schemas/CourtLocation\"\n    Address:\n      description: address object\n      type: object\n      required:\n        - addressLine1\n        - cityName\n        - provinceName\n        - countryName\n      properties:\n        addressLine1:\n          type: string\n          description: the court address line one\n        addressLine2:\n          type: string\n          description: the court address line two\n        addressLine3:\n          type: string\n          description: the court address line three\n        postalCode:\n          type: string\n          description: the court postal code\n        cityName:\n          description: the court city name\n          type: string\n        provinceName:\n          type: string\n          description: the court province name\n        countryName:\n          description: the address country name\n          type: string\n    Payment:\n      description: payment object\n      type: object\n      properties:\n        feeExempt:\n          type: boolean\n          description: Is the fee exempt\n        paymentCategory:\n          type: number\n          description: Category for fee\n        paymentDescription:\n          type: string\n          description: a description of the payment\n        processedAmount:\n          type: number\n          description: Amount\n        submittedAmount:\n          type: number\n          description: Amount\n        serviceIdentifier:\n          type: number\n          description: Id of payment\n        transactionDate:\n          type: string\n          description: date time of transaction\n    Status:\n      description: document status\n      type: object\n      properties:\n        description:\n          type: string\n          description: description of status\n        code:\n          type: string\n          description: status identifier\n        changeDate:\n          type: string\n          description: date changed\n    Account:\n      description: account object\n      type: object\n      properties:\n        firstName:\n          type: string\n          description: first name\n        lastName:\n          type: string\n          description: last name\n    CountryCode:\n      description: Country Code Table Entry\n      type: object\n      properties:\n        code:\n          type: string\n          description: code value\n        description:\n          type: string\n          description: country name\n    ActionRequiredDetails:\n      description: Action required details\n      type: object\n      properties:\n        clientId:\n          type: number\n          description: user identifier\n        packageIdentifier:\n          type: number\n          description: package identifier\n        documents:\n          type: array\n          description: any document that requires action\n          items:\n            $ref: \"#/components/schemas/ActionDocument\"\n    ActionDocument:\n      description: Document that requires action\n      type: object\n      properties:\n        id:\n          type: number\n          description: document identifier\n        status:\n          type: string\n          description:  \u003e\n            document status:\n              * `SUB` - Submitted\n              * `RSUB` - Resubmitted\n              * `REF` - Referred\n              * `REJ` - Reject\n              * `CCOR` - Courtesy Correction\n          enum:\n            [\n                SUB,\n                RSUB,\n                REF,\n                REJ,\n                CCOR\n            ]\n        type:\n          type: string\n          description: document type\n    ParentAppDetails:\n      description: Action required details\n      type: object\n      properties:\n        returnUrl:\n          type: string\n          description: the url that users will return to\n        rejectedDocumentFeature:\n          type: boolean\n          description: the feature is enabled or disabled for this parent\n",
			"canonicalURL": "/github.com/bcgov/jag-file-submission@781e949544240cfc8d1c837971ee9e0e9b10526a/-/blob/src/backend/efiling-api/jag-efiling-api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/bcgov/jag-file-submission/blob/781e949544240cfc8d1c837971ee9e0e9b10526a/src/backend/efiling-api/jag-efiling-api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"CourtClassification\": resolve \"#/components/schemas/CourtClassification\": at src/backend/efiling-api/jag-efiling-api.yaml:714:13: parse enum values: parse value \"false\": expected type \"string\", got \"bool\""
}