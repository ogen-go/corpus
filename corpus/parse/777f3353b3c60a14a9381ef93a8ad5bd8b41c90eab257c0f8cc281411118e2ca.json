{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/teamdigitale/api-openapi-samples"
		},
		"file": {
			"name": "normattiva.yaml",
			"size": 0,
			"path": "external-apis/normattiva.yaml",
			"byteSize": 6841,
			"content": "#\n# Questo e' un progetto d'esempio in formato OpenAPI 3.0 API Starter Kit.\n#\n# Stai per sviluppare un API? Segui attentamente questo template e\n#   potrai integrarla facilmente in Developers Italia.\n#\n# Se usi componenti in modo ricorrente, yaml\n#   permette di definirle e riusarle.\n#   Puoi metterle nell'oggetto x-commons e rimuoverlo\n#   prima di pubblicarle.\nx-commons:\n  ratelimit-headers: &ratelimit-headers\n    X-RateLimit-Limit:\n      $ref: '#/components/headers/X-RateLimit-Limit'\n    X-RateLimit-Remaining:\n      $ref: '#/components/headers/X-RateLimit-Remaining'\n    X-RateLimit-Reset:\n      $ref: '#/components/headers/X-RateLimit-Reset'\n  common-responses: &common-responses\n    '400':\n      $ref: '#/components/responses/400BadRequest'\n    '429':\n      $ref: '#/components/responses/429TooManyRequests'\n    '503':\n      $ref: '#/components/responses/503ServiceUnavailable'\n    default:\n      $ref: '#/components/responses/default'\n\nopenapi: 3.0.0\ninfo:\n  version: \"1.0.0\"\n  title: |-\n    Normattiva.\n  x-summary: >-\n    Cerca e scarica le norme italiane.\n  description: |\n    #### Documentazione\n\n    Questa API permette di cercare e scaricare le norme\n    italiane in formato Akoma Ntoso.\n\n  # I termini del servizio contengono un riferimento\n  #   a tutte le indicazioni e le note legali per l'utilizzo\n  #   del servizio, inclusi gli eventuali riferimenti utili al GDPR.\n  termsOfService: 'http://www.normattiva.it/'\n  # Chi posso contattare per informazioni sul servizio e sul suo stato?\n  contact:\n    email: robipolli@gmail.com\n    name: Roberto Polli\n    url: https://twitter.com/ioggstream\n  # L'audience delle API. Attualmente e' definito solamente\n  #   la tipologia `public`.\n  x-audience:\n    - public\n  # Ogni API deve avere un UUID, invariante nel tempo e\n  #   rispetto al `title`.\n  x-api-id: 00000000-0000-0000-0000-000000000000\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\n\n  # Per dare indicazioni sul ciclo di vita dell'API\n  # si puo' usare un parametro come:\n  x-lifecycle:\n    published: 1970-01-01\n    deprecated: 2050-01-01\n    retired: 2050-06-01\n    maturity: published\n\n# Una lista di `tag` utili a raggruppare le varie operazioni\n#   eseguite dalle API. Ogni `tag` puo' referenziare un link\n#   alla sua descrizione.\ntags:\n  - name: public\n    description: Retrieve informations\n    externalDocs:\n      url: http://docs.my-api.com/pet-operations.htm\n# Uno o piu' server di erogazione.\n#   Puo' essere utile indicare gli indirizzi di collaudo,\n#   sviluppo e test.\n#   Di seguito mostriamo come indicare se il server\n#   e' una sandbox o meno con dei tag custom.\nservers:\n  - description: Development server\n    url: https://www.normattiva.it\n    \n#\n# Qui vanno tutti i path.\n#\npaths:\n  /do/atto/caricaAKN:\n    get:\n      operationId: get_caricaAKN\n      description: Mostra una legge in formato Akoma Ntoso\n      parameters:\n        - name: dataGU\n          in: query\n          required: true\n          schema:\n            type: string\n            pattern: '[0-9]{8}'\n            example: \"20200914\"\n        - name: codiceRedaz\n          in: query\n          required: true\n          schema:\n            type: string\n            pattern: '[A-Z0-9]{8}'\n            example: =20G00139\n        - name: dataVigenza\n          required: true\n          in: query\n          schema:\n            type: string\n            pattern: '[0-9]{8}'\n            example: '20200914'\n      responses:\n        \"200\":\n          description: \"Ritorna una norma in Akoma Ntoso\"\n          content:\n            application/xml: {}\n\n  /do/atto/suggester/{q}:\n    get:\n      parameters:\n        - name: q\n          in: path\n          required: true\n          schema:\n            type: string\n            maxLength: 48\n      summary: Autocompleta le ricerche\n      description: |\n        Autocompleta le ricerche.\n      operationId: get_suggester\n      tags:\n        - public\n      responses:\n        <<: *common-responses\n        '200':\n          description: |\n            Le parole chiave ritorante.\n          # Questi header di throttling sono obbligatori e definiti\n          #   nel Nuovo modello di interoperabilità.\n          headers:\n            <<: *ratelimit-headers\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Suggestions'\n  /status:\n    get:\n      summary: Ritorna lo stato dell'applicazione.\n      description: |\n        Ritorna lo stato dell'applicazione. A scopo\n        di test, su base randomica puo' ritornare\n        un errore.\n      operationId: get_status\n      tags:\n        - public\n      responses:\n        <<: *common-responses\n        '200':\n          description: |\n            Il server ha ritornato lo status. In caso di problemi\n            ritorna sempre un problem+json.\n          # Questi header di throttling sono obbligatori e definiti\n          #   nel Nuovo modello di interoperabilità.\n          headers:\n            <<: *ratelimit-headers\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n\ncomponents:\n\n  headers:\n    X-RateLimit-Limit:\n      $ref: 'https://teamdigitale.github.io/openapi/0.0.7/definitions.yaml#/headers/X-RateLimit-Limit'\n    X-RateLimit-Remaining:\n      $ref: 'https://teamdigitale.github.io/openapi/0.0.7/definitions.yaml#/headers/X-RateLimit-Remaining'\n    X-RateLimit-Reset:\n      $ref: 'https://teamdigitale.github.io/openapi/0.0.7/definitions.yaml#/headers/X-RateLimit-Reset'\n    Retry-After:\n      $ref: 'https://teamdigitale.github.io/openapi/0.0.7/definitions.yaml#/headers/Retry-After'\n\n  responses:\n    # Predefined error codes for this API\n    400BadRequest:\n      $ref: 'https://teamdigitale.github.io/openapi/0.0.7/definitions.yaml#/responses/400BadRequest'\n    404NotFound:\n      $ref: 'https://teamdigitale.github.io/openapi/0.0.7/definitions.yaml#/responses/404NotFound'\n    429TooManyRequests:\n      $ref: 'https://teamdigitale.github.io/openapi/0.0.7/definitions.yaml#/responses/429TooManyRequests'\n    503ServiceUnavailable:\n      $ref: 'https://teamdigitale.github.io/openapi/0.0.7/definitions.yaml#/responses/503ServiceUnavailable'\n    default:\n      $ref: 'https://teamdigitale.github.io/openapi/0.0.7/definitions.yaml#/responses/default'\n\n  schemas:\n    Problem:\n      $ref: 'https://teamdigitale.github.io/openapi/0.0.7/definitions.yaml#/schemas/Problem'\n    Suggestions:\n      type: array\n      maxItems: 20\n      minItems: 0\n      items:\n        type: object\n        additionalProperties: false\n        properties:\n          label:\n            type: string\n            description: An html-formatted string\n          value:\n            type: string\n            description: an ascii string with the search keyword\n            maxLength: 100\n",
			"canonicalURL": "/github.com/teamdigitale/api-openapi-samples@e4aa25ab76f46b78fcf93268cddbbd44c4df1711/-/blob/external-apis/normattiva.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/teamdigitale/api-openapi-samples/blob/e4aa25ab76f46b78fcf93268cddbbd44c4df1711/external-apis/normattiva.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: at 1:15: schemas: \"Problem\": parse schema: resolve \"https://teamdigitale.github.io/openapi/0.0.7/definitions.yaml#/schemas/Problem\": external \"https://teamdigitale.github.io/openapi/0.0.7/definitions.yaml\": https: do: Get \"https://teamdigitale.github.io/openapi/0.0.7/definitions.yaml\": host \"teamdigitale.github.io\" is not allowed"
}