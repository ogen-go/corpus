{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/MatthewCYLau/react-serverless-aws-terraform"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "deploy/api/openapi.yaml",
			"byteSize": 16512,
			"content": "openapi: \"3.0.1\"\ninfo:\n  title: \"ReactServerless\"\n  version: \"2020-08-20T12:57:36Z\"\npaths:\n  /todos/{todoId}:\n    get:\n      parameters:\n        - name: \"todoId\"\n          in: \"path\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: \"200 response\"\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: \"string\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      security:\n        - sigv4: []\n      x-amazon-apigateway-integration:\n        uri: \"${lambda_uri_get_todo_by_id}\"\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Origin: \"'*'\"\n        passthroughBehavior: \"when_no_match\"\n        httpMethod: \"POST\"\n        contentHandling: \"CONVERT_TO_TEXT\"\n        type: \"aws_proxy\"\n    put:\n      parameters:\n        - name: \"todoId\"\n          in: \"path\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: \"200 response\"\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: \"string\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      security:\n        - sigv4: []\n      x-amazon-apigateway-integration:\n        uri: \"${lambda_uri_update_todo_by_id}\"\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Origin: \"'*'\"\n        passthroughBehavior: \"when_no_match\"\n        httpMethod: \"POST\"\n        contentHandling: \"CONVERT_TO_TEXT\"\n        type: \"aws_proxy\"\n    delete:\n      parameters:\n        - name: \"todoId\"\n          in: \"path\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: \"200 response\"\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: \"string\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      security:\n        - sigv4: []\n      x-amazon-apigateway-integration:\n        type: \"aws_proxy\"\n        uri: \"${lambda_uri_delete_todo_by_id}\"\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Origin: \"'*'\"\n        passthroughBehavior: \"when_no_match\"\n        httpMethod: \"POST\"\n        contentHandling: \"CONVERT_TO_TEXT\"\n    options:\n      responses:\n        200:\n          description: \"200 response\"\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Methods:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Headers:\n              schema:\n                type: \"string\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      x-amazon-apigateway-integration:\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Methods: \"'DELETE,GET,PUT,OPTIONS'\"\n              method.response.header.Access-Control-Allow-Headers: \"'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'\"\n              method.response.header.Access-Control-Allow-Origin: \"'*'\"\n        requestTemplates:\n          application/json: '{\"statusCode\": 200}'\n        passthroughBehavior: \"when_no_match\"\n        type: \"mock\"\n  /comments/{commentId}:\n    delete:\n      parameters:\n        - name: \"commentId\"\n          in: \"path\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: \"200 response\"\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: \"string\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      security:\n        - sigv4: []\n      x-amazon-apigateway-integration:\n        type: \"aws_proxy\"\n        uri: \"${lambda_uri_delete_comment_by_id}\"\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Origin: \"'*'\"\n        passthroughBehavior: \"when_no_match\"\n        httpMethod: \"POST\"\n        contentHandling: \"CONVERT_TO_TEXT\"\n    options:\n      responses:\n        200:\n          description: \"200 response\"\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Methods:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Headers:\n              schema:\n                type: \"string\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      x-amazon-apigateway-integration:\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Methods: \"'DELETE,OPTIONS'\"\n              method.response.header.Access-Control-Allow-Headers: \"'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'\"\n              method.response.header.Access-Control-Allow-Origin: \"'*'\"\n        requestTemplates:\n          application/json: '{\"statusCode\": 200}'\n        passthroughBehavior: \"when_no_match\"\n        type: \"mock\"\n  /comments:\n    get:\n      responses:\n        200:\n          description: \"200 response\"\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: \"string\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      security:\n        - sigv4: []\n      x-amazon-apigateway-integration:\n        uri: \"${lambda_uri_get_comments}\"\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Origin: \"'*'\"\n        passthroughBehavior: \"when_no_match\"\n        httpMethod: \"POST\"\n        contentHandling: \"CONVERT_TO_TEXT\"\n        type: \"aws_proxy\"\n    post:\n      responses:\n        200:\n          description: \"200 response\"\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: \"string\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      security:\n        - sigv4: []\n      x-amazon-apigateway-integration:\n        uri: \"${lambda_uri_create_comment}\"\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Origin: \"'*'\"\n        passthroughBehavior: \"when_no_match\"\n        httpMethod: \"POST\"\n        contentHandling: \"CONVERT_TO_TEXT\"\n        type: \"aws_proxy\"\n    options:\n      responses:\n        200:\n          description: \"200 response\"\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Methods:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Headers:\n              schema:\n                type: \"string\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      x-amazon-apigateway-integration:\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Methods: \"'GET,OPTIONS,POST'\"\n              method.response.header.Access-Control-Allow-Headers: \"'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'\"\n              method.response.header.Access-Control-Allow-Origin: \"'*'\"\n        requestTemplates:\n          application/json: '{\"statusCode\": 200}'\n        passthroughBehavior: \"when_no_match\"\n        type: \"mock\"\n  /likes/{likeId}:\n    delete:\n      parameters:\n        - name: \"likeId\"\n          in: \"path\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: \"200 response\"\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: \"string\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      security:\n        - sigv4: []\n      x-amazon-apigateway-integration:\n        type: \"aws_proxy\"\n        uri: \"${lambda_uri_delete_like_by_id}\"\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Origin: \"'*'\"\n        passthroughBehavior: \"when_no_match\"\n        httpMethod: \"POST\"\n        contentHandling: \"CONVERT_TO_TEXT\"\n    options:\n      responses:\n        200:\n          description: \"200 response\"\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Methods:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Headers:\n              schema:\n                type: \"string\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      x-amazon-apigateway-integration:\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Methods: \"'DELETE,OPTIONS'\"\n              method.response.header.Access-Control-Allow-Headers: \"'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'\"\n              method.response.header.Access-Control-Allow-Origin: \"'*'\"\n        requestTemplates:\n          application/json: '{\"statusCode\": 200}'\n        passthroughBehavior: \"when_no_match\"\n        type: \"mock\"\n  /likes:\n    get:\n      responses:\n        200:\n          description: \"200 response\"\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: \"string\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      security:\n        - sigv4: []\n      x-amazon-apigateway-integration:\n        uri: \"${lambda_uri_get_likes}\"\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Origin: \"'*'\"\n        passthroughBehavior: \"when_no_match\"\n        httpMethod: \"POST\"\n        contentHandling: \"CONVERT_TO_TEXT\"\n        type: \"aws_proxy\"\n    post:\n      responses:\n        200:\n          description: \"200 response\"\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: \"string\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      security:\n        - sigv4: []\n      x-amazon-apigateway-integration:\n        uri: \"${lambda_uri_create_like}\"\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Origin: \"'*'\"\n        passthroughBehavior: \"when_no_match\"\n        httpMethod: \"POST\"\n        contentHandling: \"CONVERT_TO_TEXT\"\n        type: \"aws_proxy\"\n    options:\n      responses:\n        200:\n          description: \"200 response\"\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Methods:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Headers:\n              schema:\n                type: \"string\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      x-amazon-apigateway-integration:\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Methods: \"'GET,OPTIONS,POST'\"\n              method.response.header.Access-Control-Allow-Headers: \"'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'\"\n              method.response.header.Access-Control-Allow-Origin: \"'*'\"\n        requestTemplates:\n          application/json: '{\"statusCode\": 200}'\n        passthroughBehavior: \"when_no_match\"\n        type: \"mock\"\n  /todos:\n    get:\n      responses:\n        200:\n          description: \"200 response\"\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: \"string\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      security:\n        - sigv4: []\n      x-amazon-apigateway-integration:\n        uri: \"${lambda_uri_get_todos}\"\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Origin: \"'*'\"\n        passthroughBehavior: \"when_no_match\"\n        httpMethod: \"POST\"\n        contentHandling: \"CONVERT_TO_TEXT\"\n        type: \"aws_proxy\"\n    post:\n      responses:\n        200:\n          description: \"200 response\"\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: \"string\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      security:\n        - sigv4: []\n      x-amazon-apigateway-integration:\n        uri: \"${lambda_uri_create_todo}\"\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Origin: \"'*'\"\n        passthroughBehavior: \"when_no_match\"\n        httpMethod: \"POST\"\n        contentHandling: \"CONVERT_TO_TEXT\"\n        type: \"aws_proxy\"\n    options:\n      responses:\n        200:\n          description: \"200 response\"\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Methods:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Headers:\n              schema:\n                type: \"string\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      x-amazon-apigateway-integration:\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Methods: \"'GET,OPTIONS,POST'\"\n              method.response.header.Access-Control-Allow-Headers: \"'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'\"\n              method.response.header.Access-Control-Allow-Origin: \"'*'\"\n        requestTemplates:\n          application/json: '{\"statusCode\": 200}'\n        passthroughBehavior: \"when_no_match\"\n        type: \"mock\"\n  /enquque:\n    post:\n      responses:\n        \"200\":\n          description: \"200 response\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      x-amazon-apigateway-integration:\n        credentials: \"${apig_sqs_send_msg_role}\"\n        uri: \"${apig_invocation_uri}\"\n        httpMethod: \"POST\"\n        responses:\n          default:\n            statusCode: \"200\"\n        requestParameters:\n          integration.request.header.Content-Type: \"'application/x-www-form-urlencoded'\"\n        requestTemplates:\n          application/json: \"Action=SendMessage\u0026MessageBody=$input.body\"\n        passthroughBehavior: \"never\"\n        type: \"aws\"\ncomponents:\n  schemas:\n    Empty:\n      title: \"Empty Schema\"\n      type: \"object\"\n  securitySchemes:\n    sigv4:\n      type: \"apiKey\"\n      name: \"Authorization\"\n      in: \"header\"\n      x-amazon-apigateway-authtype: \"awsSigv4\"\n",
			"canonicalURL": "/github.com/MatthewCYLau/react-serverless-aws-terraform@471f71084cea622100ab03bc1a3d81a68f5d594a/-/blob/deploy/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/MatthewCYLau/react-serverless-aws-terraform/blob/471f71084cea622100ab03bc1a3d81a68f5d594a/deploy/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /comments/{commentId}: options: parse path \"/comments/{commentId}\": path parameter not specified: \"commentId\""
}