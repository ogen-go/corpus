{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/gabriellopes00/Morpheus"
		},
		"file": {
			"name": "api.json",
			"size": 0,
			"path": ".swagger/api.json",
			"byteSize": 15273,
			"content": "{\n  \"openapi\": \"3.0.0\",\n\n  \"info\": {\n    \"version\": \"1.0.0\",\n    \"title\": \"Morpheus Eventos\",\n    \"description\": \"A ticketing platform for all kinds of events.\",\n    \"termsOfService\": \"http://mrpheus.herokuapp.com/terms-of-service\",\n    \"contact\": {\n      \"name\": \"API Support\",\n      \"url\": \"http://mrpheus.herokuapp.com/support\",\n      \"email\": \"support@mrpheus.com\"\n    },\n    \"license\": {\n      \"name\": \"GPL-3.0\",\n      \"url\": \"https://github.com/gabriellopes00/Morpheus/blob/main/LICENSE\"\n    }\n  },\n\n  \"servers\": [\n    {\n      \"url\": \"http://localhost\",\n      \"description\": \"Development server running on localhost\"\n    },\n    {\n      \"url\": \"https://mrpheus.herokuapp.com\",\n      \"description\": \"Production server hosted at heroku\"\n    }\n  ],\n\n  \"tags\": [\n    {\n      \"name\": \"Account\",\n      \"description\": \"Refers to users' accounts in the platform.\"\n    },\n    {\n      \"name\": \"Events\",\n      \"description\": \"Refers to events that will be handled in the platform.\"\n    }\n  ],\n\n  \"paths\": {\n    \"/accounts\": {\n      \"post\": {\n        \"tags\": [\"Accounts\"],\n        \"summary\": \"Create Account Route\",\n        \"description\": \"This route allows the cliente to create a new account in the API. It returns the created account data and also authenticate the one.\",\n        \"requestBody\": {\n          \"required\": true,\n          \"description\": \"Accounts' creation route must receive accounts' credentials to register them in the API.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateAccountParams\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Account successfully created and authenticated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CreateAccountResult\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                },\n                \"example\": {\n                  \"message\": \"Invalid parameters\",\n                  \"code\": \"400\",\n                  \"error\": \"Bad Request\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Invalid Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                },\n                \"example\": {\n                  \"message\": \"Email already in use\",\n                  \"code\": \"409\",\n                  \"error\": \"Conflicted Request\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/accounts/{id}\": {\n      \"get\": {\n        \"tags\": [\"Accounts\"],\n        \"description\": \"This routes fetches the account data by a given id, passed in the request path parameter.\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/uuid\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Account returned successfully \",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Account\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Account Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                },\n                \"example\": {\n                  \"message\": \"Account unauthorized\",\n                  \"code\": \"401\",\n                  \"error\": \"Unauthorized\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Access Forbidden\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                },\n                \"example\": {\n                  \"message\": \"Account access forbidden\",\n                  \"code\": \"403\",\n                  \"error\": \"Forbidden\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                },\n                \"example\": {\n                  \"message\": \"Account not found\",\n                  \"code\": \"404\",\n                  \"error\": \"NotFound\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"description\": \"Get the profile of the token's owner\",\n        \"operationId\": \"getUserProfile\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/jwtToken\"\n            },\n            \"required\": true\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The user information\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserProfileResponse\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Not Found!\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                },\n                \"example\": {\n                  \"message\": \"User not found\",\n                  \"code\": \"404\",\n                  \"error\": \"Not Found\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/accounts/{id}/avatar/upload\": {\n      \"get\": {\n        \"description\": \"Get the list of forecast ordered by the most ranked\",\n        \"operationId\": \"getForecast\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/orderBy\"\n            }\n          },\n          {\n            \"name\": \"orderField\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/orderField\"\n            }\n          },\n          {\n            \"name\": \"x-access-token\",\n            \"in\": \"header\",\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/jwtToken\"\n            },\n            \"required\": true\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The list of forecast has been returned\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TimeForecast\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/accounts/auth\": {\n      \"get\": {\n        \"description\": \"Get the list of forecast ordered by the most ranked\",\n        \"parameters\": [\n          {\n            \"name\": \"orderBy\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/orderBy\"\n            }\n          },\n          {\n            \"name\": \"orderField\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/orderField\"\n            }\n          },\n          {\n            \"name\": \"x-access-token\",\n            \"in\": \"header\",\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/jwtToken\"\n            },\n            \"required\": true\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The list of forecast has been returned\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TimeForecast\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/accounts/auth/refresh\": {\n      \"get\": {\n        \"description\": \"Get the list of forecast ordered by the most ranked\",\n        \"parameters\": [\n          {\n            \"name\": \"orderBy\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/orderBy\"\n            }\n          },\n          {\n            \"name\": \"orderField\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/orderField\"\n            }\n          },\n          {\n            \"name\": \"x-access-token\",\n            \"in\": \"header\",\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/jwtToken\"\n            },\n            \"required\": true\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The list of forecast has been returned\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TimeForecast\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n\n  \"components\": {\n    \"schemas\": {\n      \"CreateAccountParams\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": { \"type\": \"string\", \"example\": \"John Doe\", \"maxLength\": 255, \"minLength\": 4 },\n          \"email\": {\n            \"type\": \"string\",\n            \"format\": \"email\",\n            \"example\": \"johndoe@gmail.com\",\n            \"maxLength\": 256\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"format\": \"password\",\n            \"example\": \"_secret_userpass1234\",\n            \"maxLength\": 255,\n            \"minLength\": 4\n          },\n          \"avatar_url\": {\n            \"type\": \"string\",\n            \"format\": \"url\",\n            \"example\": \"https://johndoe-img.png\"\n          },\n          \"phone_number\": {\n            \"type\": \"string\",\n            \"example\": \"(11) 98988-1893\",\n            \"pattern\": \"^\\\\(\\\\d{2,}\\\\) \\\\d{5,}\\\\-\\\\d{4}$\"\n          },\n          \"document\": {\n            \"type\": \"string\",\n            \"example\": \"467.391.245-80\",\n            \"pattern\": \"^([0-9]{2}[\\\\.]?[0-9]{3}[\\\\.]?[0-9]{3}[/]?[0-9]{4}[-]?[0-9]{2})|([0-9]{3}[\\\\.]?[0-9]{3}[\\\\.]?[0-9]{3}[-]?[0-9]{2})$\"\n          },\n          \"gender\": {\n            \"type\": \"string\",\n            \"example\": \"male\",\n            \"enum\": [\"male\", \"female\", \"unspecified\"]\n          },\n          \"birth_date\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"example\": \"2022-04-30T14:12:31.797Z\"\n          }\n        },\n        \"required\": [\n          \"name\",\n          \"email\",\n          \"password\",\n          \"avatar_url\",\n          \"phone_number\",\n          \"document\",\n          \"gender\",\n          \"birth_date\"\n        ]\n      },\n      \"CreateAccountResult\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"account\": {\n            \"$ref\": \"#/components/schemas/Account\"\n          },\n          \"access_token\": {\n            \"$ref\": \"#/components/schemas/jwt_token\"\n          },\n          \"refresh_token\": {\n            \"$ref\": \"#/components/schemas/jwt_token\"\n          }\n        },\n        \"required\": [\"account\", \"access_token\", \"refresh_token\"]\n      },\n\n      \"Account\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"$ref\": \"#/components/schemas/uuid\"\n          },\n          \"name\": { \"type\": \"string\", \"example\": \"John Doe\", \"maxLength\": 255, \"minLength\": 4 },\n          \"email\": {\n            \"$ref\": \"#/components/schemas/email\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"format\": \"password\",\n            \"example\": \"_secret_userpass1234\",\n            \"maxLength\": 255,\n            \"minLength\": 4\n          },\n          \"avatar_url\": {\n            \"type\": \"string\",\n            \"format\": \"url\",\n            \"example\": \"https://johndoe-img.png\"\n          },\n          \"phone_number\": {\n            \"type\": \"string\",\n            \"example\": \"(11) 98988-1893\",\n            \"pattern\": \"^\\\\(\\\\d{2,}\\\\) \\\\d{5,}\\\\-\\\\d{4}$\"\n          },\n          \"document\": {\n            \"type\": \"string\",\n            \"example\": \"467.391.245-80\",\n            \"pattern\": \"^([0-9]{2}[\\\\.]?[0-9]{3}[\\\\.]?[0-9]{3}[/]?[0-9]{4}[-]?[0-9]{2})|([0-9]{3}[\\\\.]?[0-9]{3}[\\\\.]?[0-9]{3}[-]?[0-9]{2})$\"\n          },\n          \"gender\": {\n            \"type\": \"string\",\n            \"example\": \"male\",\n            \"enum\": [\"male\", \"female\", \"unspecified\"]\n          },\n          \"birth_date\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"example\": \"2005-04-30T14:12:31.797Z\"\n          },\n          \"created_at\": {\n            \"$ref\": \"#/components/schemas/created_at\"\n          },\n          \"updated_at\": {\n            \"$ref\": \"#/components/schemas/updated_at\"\n          }\n        }\n      },\n\n      \"jwt_token\": {\n        \"type\": \"string\",\n        \"format\": \"jwt\",\n        \"example\": \"eyJhbGciOiJIUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICI0ZTRlN2ZkNC1kMzE4LTQyZTctYjdjMC1mZWQ3ZmQ0OWE5ZjUifQ.eyJleHAiOjE2NDk3ODk3MTcsImlhdCI6MTY0OTc4NzkxNywianRpIjoiNmUyZjI3YjYtODgwMC00NGRkLWExODEtZTgwYmMwODYyZGIwIiwiaXNzIjoiaHR0cDovL2tleWNsb2Fjazo4MDgwL2F1dGgvcmVhbG1zL21vcnBoZXVzIiwiYXVkIjoiaHR0cDovL2tleWNsb2Fjazo4MDgwL2F1dGgvcmVhbG1zL21vcnBoZXVzIiwic3ViIjoiZjIxODIwMWUtMTNjMi00YjFmLTlkOGYtYTFhZTg4ODRhNjQwIiwidHlwIjoiUmVmcmVzaCIsImF6cCI6ImFjY291bnRzX3NlcnZpY2UiLCJzZXNzaW9uX3N0YXRlIjoiZWNiNWUzNDktOTllOS00ZGIwLTg2YmEtZWU4YjZhYTMyOTg5Iiwic2NvcGUiOiJwcm9maWxlIGVtYWlsIiwic2lkIjoiZWNiNWUzNDktOTllOS00ZGIwLTg2YmEtZWU4YjZhYTMyOTg5In0.BhzmWUP7kY_azB01VDL8ygPBWcrlya2lAHBtIABLA8Y\"\n      },\n      \"uuid\": {\n        \"type\": \"string\",\n        \"format\": \"uuid\",\n        \"example\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\"\n      },\n      \"email\": {\n        \"type\": \"string\",\n        \"format\": \"email\",\n        \"example\": \"johndoe@gmail.com\",\n        \"maxLength\": 256\n      },\n      \"created_at\": {\n        \"type\": \"string\",\n        \"format\": \"date-time\",\n        \"example\": \"2022-04-30T14:12:31.797Z\"\n      },\n      \"updated_at\": {\n        \"type\": \"string\",\n        \"format\": \"date-time\",\n        \"example\": \"2022-04-30T14:12:31.797Z\"\n      },\n\n      \"UserAuth\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": {\n            \"$ref\": \"#/components/schemas/email\"\n          },\n          \"password\": {\n            \"$ref\": \"#/components/schemas/password\"\n          }\n        }\n      },\n\n      \"Error\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\"\n          },\n          \"code\": {\n            \"type\": \"number\"\n          },\n          \"error\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"documentation\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/gabriellopes00/Morpheus@eead5f791e045e52b460c204f00a2ecd016c51de/-/blob/.swagger/api.json",
			"externalURLs": [
				{
					"url": "https://github.com/gabriellopes00/Morpheus/blob/eead5f791e045e52b460c204f00a2ecd016c51de/.swagger/api.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: at 349:17: schemas: \"UserAuth\": parse schema: property \"password\": at 505:23: parse schema: resolve \"#/components/schemas/password\": find schema: resolve: can't find value for \"components/schemas/password\""
}