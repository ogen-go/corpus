{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "gitlab.com/commonground/huishoudboekje/app-new"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "services/huishoudboekje_service/docs/openapi.yaml",
			"byteSize": 8236,
			"content": "openapi: 3.0.0\ninfo:\n  version: 0.1.0\n  title: Huishoudboekje Service\n  description: API voor het beheren van data van het Huishoudboekje\n  \npaths:\n  /organisaties:\n    get:\n      description: Geeft organisaties binnen het Huishoudboekje\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Bad Request\n    post:\n      description: Voegt nieuwe organisatie toe aan het Huishoudboekje\n      responses:\n        '201':\n          description: Created\n        '400':\n          description: Bad Request\n \n  /organisaties/{organisatie_id}:\n    get:\n      description: Geeft specifieke organisatie uit het Huishoudboekje\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n    post:\n      description: Update organisatie in het Huishoudboekje\n      responses:\n        '202':\n          description: Accepted\n        '400':\n          description: Bad Request        \n        '404':\n          description: Not Found\n    delete:\n      description: Delete organisatie in het Huishoudboekje\n      responses:\n        '202':\n          description: Accepted\n        '400':\n          description: Bad Request        \n        '404':\n          description: Not Found\n\n  # Gebruiker views\n  /gebruikers:\n    get:\n      description: Geeft alle gebruikers van het Huishoudboekje \n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Gebruiker'\n        '5XX':\n          description: Unexpected error.\n    post:\n      description: Voeg nieuw gebruiker toe aan het Huishoudboekje\n      parameters:\n        - name: telefoonnummer\n          required: true\n          in: query\n          schema:\n            type: string\n            example: +31612345678\n        - name: email\n          required: true\n          in: query\n          schema:\n            type: string\n            example: henk.poortvliet@sloothuizen.nl\n        - name: geboortedatum\n          required: true\n          in: query\n          schema:\n            type: string\n            format: date\n            example: \"1980-05-24\"\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Gebruiker'\n        '400':\n          description: Bad Request\n        '5XX':\n          description: Unexpected error.\n\n  # Gebruiker detail views\n  /gebruikers/{gebruiker_id}:\n    parameters:\n      - name: gebruiker_id\n        in: path\n        required: true\n        description: Gebruiker id\n        schema:\n          type : integer\n          example: 42\n    get:\n      description: Geeft specifieke gebruiker uit het Huishoudboekje\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Gebruiker'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '5XX':\n          description: Unexpected error.\n    patch:\n      description: Update gebruiker gegevens in het Huishoudboekje\n      parameters:\n        - name: telefoonnummer\n          required: false\n          in: query\n          schema:\n            type: string\n            example: +31612345678\n        - name: email\n          required: false\n          in: query\n          schema:\n            type: string\n            example: henk.poortvliet@sloothuizen.nl\n        - name: geboortedatum\n          required: false\n          in: query\n          schema:\n            type: string\n            format: date\n            example: \"1980-05-24\"\n      responses:\n        '200': \n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Gebruiker'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '5XX':\n          description: Unexpected error.\n    delete:\n      description: Verwijder gebruiker uit het Huishoudboekje\n      parameters:\n        - name: gebruiker_id\n          in: path\n          required: true\n          description: Gebruiker id\n          schema:\n            type : integer\n            example: 42\n      responses:\n        '204':\n          description: No Content\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '5XX':\n          description: Unexpected error.\n\n  # Burger views\n  /gebruikers/{gebruiker_id}/burger:\n    parameters:\n      - name: gebruiker_id\n        in: path\n        required: true\n        description: Gebruiker id\n        schema:\n          type : integer\n          example: 42\n    get:\n      description: Geeft burger voor specifieke gebruiker in het Huishoudboekje\n      responses:\n        '200':\n          description: OK\n          headers:\n            ETag:\n              schema:\n                type: string\n              description: Entity tag\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Burger'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '5XX':\n          description: Unexpected error.\n    post:\n      description: Maak of update burger gegevens voor specifieke gebruiker in het Huishoudboekje\n      parameters:\n        - name: voornamen\n          in: query\n          schema:\n            type: string\n            example: \"Henk\"\n        - name: voorletters\n          in: query\n          schema:\n            type: string\n            example: \"H.\"        \n        - name: achternaam\n          in: query\n          schema:\n            type: string\n            example: \"Poortman\"\n        - name: straatnaam\n          in: query\n          schema:\n            type: string\n            example: \"Schoolstraat\"\n        - name: huisnummer\n          in: query\n          schema:\n            type: string\n            example: \"1a\"\n        - name: postcode\n          in: query\n          schema:\n            type: string\n            example: \"1234AB\"\n        - name: woonplaatsnaam\n          in: query\n          schema:\n            type: string\n            example: \"Sloothuizen\"\n      responses:\n        '200': \n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Burger'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '5XX':\n          description: Unexpected error.          \n    delete:\n      description: Verwijder burger van specifieke gebruiker in het Huishoudboekje\n      parameters:\n        - name: gebruiker_id\n          in: path\n          required: true\n          description: Gebruiker id\n          schema:\n            type : integer\n            example: 42\n      responses:\n        '204':\n          description: No Content\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '5XX':\n          description: Unexpected error.\n\ncomponents:\n  schemas:\n    Gebruiker:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 23\n        telefoonnummer:\n          type: string\n          example: \"+31612345678\"\n        email:\n          type: string\n          example: henk.poortvliet@sloothuizen.nl\n        geboortedatum:\n          type: string\n          format: date\n          example: \"1980-05-24\"\n    Burger:\n      type: object\n      properties:\n        voornamen:\n          type: string\n          example: \"Henk\"\n        voorletters:\n          type: string\n          example: \"H.\"        \n        achternaam:\n          type: string\n          example: \"Poortman\"\n        straatnaam:\n          type: string\n          example: \"Schoolstraat\"\n        huisnummer:\n          type: string\n          example: \"1a\"\n        postcode:\n          type: string\n          example: \"1234AB\"\n        woonplaatsnaam:\n          type: string\n          example: \"Sloothuizen\""
		}
	},
	"Error": "parse: parse spec: paths: /organisaties/{organisatie_id}: get: operation \"\": parse path: path parameter not specified: \"organisatie_id\""
}