{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ioggstream/python-course"
		},
		"file": {
			"name": "ex-08-pagination-ok.yaml",
			"size": 0,
			"path": "connexion-101/notebooks/oas3/ex-08-pagination-ok.yaml",
			"byteSize": 6684,
			"content": "openapi: 3.0.0\ninfo:\n  title: foo\n  version: \"0.1\"\n\n# One or more server\n#   You can add production, staging and test environments.\n#   We are using the custom `x-sandbox` to identify\n#   sandbox instances\nservers:\n  - description: Development server\n    url: https://localhost:8443/datetime/v1\n  - description: Test server\n    url: https://api.example.com/datetime/v1\n    x-sandbox: true\n    # The following custom parameter can be used\n    # to declare how to check the API.\n    x-healthCheck:\n      url: https://api.example.com/datetime/v1/status\n      interval: 300\n      timeout: 15\n\nx-commons:\n  throttling-headers: \u0026throttling-headers\n    X-RateLimit-Limit:\n      $ref: 'https://teamdigitale.github.io/openapi/0.0.5/definitions.yaml#/headers/X-RateLimit-Limit'\n    X-RateLimit-Remaining:\n      $ref: 'https://teamdigitale.github.io/openapi/0.0.5/definitions.yaml#/headers/X-RateLimit-Remaining'\n    X-RateLimit-Reset:\n      $ref: 'https://teamdigitale.github.io/openapi/0.0.5/definitions.yaml#/headers/X-RateLimit-Reset'\n\n  common-responses: \u0026common-responses\n    '429':\n      $ref: \"#/components/responses/429TooManyRequests\"\n    '503':\n      $ref: \"#/components/responses/503ServiceUnavailable\"\n\n#\n# Complete the /status path\n#\npaths:\n  /status:\n    get:\n      summary: Ritorna lo stato dell'applicazione.\n      description: |\n        Ritorna lo stato dell'applicazione. A scopo\n        di test, su base randomica puo' ritornare\n        un errore.\n      operationId: api.get_status\n      responses:\n        \u003c\u003c: *common-responses\n        '200':\n          description: |\n            Il server ha ritornato lo status. In caso di problemi\n            ritorna sempre un problem+json.\n          content:\n            application/problem+json:\n              schema:\n                $ref: \"#/components/schemas/Problem\"\n              example:\n                title: OK\n                status: 200\n                detail: The app is running smoothly.\n  /echo:  # TODO implement this\n    get:\n      security:\n      - myBasicAuth: []\n      parameters:\n      - $ref: '#/components/parameters/tz'\n      summary: Return the current timestamp in RFC3339\n      description: |\n        Return the current timestamp, in the specified\n        timezone. If the timezone does not\n        exist returns 400 Bad Request, specifying that\n        the given timezone is not in our database.\n      operationId: api.get_echo\n      responses:\n        \u003c\u003c: *common-responses\n        '200':\n          description: |\n            The current timestamp.\n          headers:\n            \u003c\u003c: *throttling-headers\n          content:\n            application/problem+json:\n              schema:\n                $ref: \"#/components/schemas/Datetime\"\n              example:\n                datetime: 20010507T00:00:10Z\n        '400':\n           $ref: '#/components/responses/400BadRequest'\n  /timezones:  # TODO implement this\n    get:\n      parameters:\n      - $ref: \"https://teamdigitale.github.io/openapi/0.0.5/definitions.yaml#/parameters/limit\"\n      - $ref: \"https://teamdigitale.github.io/openapi/0.0.5/definitions.yaml#/parameters/offset\"\n      summary: Return the supported timezones\n      description: |\n        Return a paginated list of supported\n        timezones. If offset is too high, an empty\n        list of entries is returned.\n      operationId: api.get_timezones\n      responses:\n        \u003c\u003c: *common-responses\n        '200':\n          description: |\n            A list of timezones between offset and limit.\n          headers:\n            \u003c\u003c: *throttling-headers\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Timezones\"\n              example:\n                entries: [ \"Europe/Rome\", \"Asia/Calcutta\", \"UTC\" ]\n                limit: 3\n                offset: 10\n                count: 3\n  /timezones/{continent}:  # TODO implement this\n    get:\n      parameters:\n      - $ref: \"https://teamdigitale.github.io/openapi/0.0.5/definitions.yaml#/parameters/limit\"\n      - $ref: \"https://teamdigitale.github.io/openapi/0.0.5/definitions.yaml#/parameters/offset\"\n      - $ref: \"#/components/parameters/continent_path\"\n      summary: Return the supported timezones\n      description: |\n        Return a paginated list of supported\n        timezones. 404 if limit and offset are\n        out of bound.\n      operationId: api.get_timezones_by_continent\n      responses:\n        \u003c\u003c: *common-responses\n        '200':\n          description: |\n            A list of timezones between offset and limit.\n          headers:\n            \u003c\u003c: *throttling-headers\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Timezones\"\n              example:\n                entries: [ \"Europe/Amsterdam\", \"Europe/Andorra\", \"Europe/Astrakhan\" ]\n                limit: 3\n                offset: 0\n                count: 3\n        '404':\n           $ref: '#/components/responses/404NotFound'\n\n\ncomponents:\n  securitySchemes:\n    myBasicAuth:\n     type: http\n     scheme: basic\n     x-basicInfoFunc: security.my_auth\n\n  parameters:\n    continent_path:\n      name: continent\n      in: path\n      required: true\n      schema:\n        type: string\n    tz:\n      name: tz\n      in: query\n      schema:\n        $ref: '#/components/schemas/Timezone'\n\n  responses:\n    400BadRequest:\n      $ref: \"https://teamdigitale.github.io/openapi/0.0.5/definitions.yaml#/responses/400BadRequest\"\n    404NotFound:\n      $ref: \"https://teamdigitale.github.io/openapi/0.0.5/definitions.yaml#/responses/404NotFound\"\n    429TooManyRequests:\n      $ref: \"https://teamdigitale.github.io/openapi/0.0.5/definitions.yaml#/responses/429TooManyRequests\"\n    503ServiceUnavailable:\n      $ref: \"https://teamdigitale.github.io/openapi/0.0.5/definitions.yaml#/responses/503ServiceUnavailable\"\n\n  schemas:\n    Timezones:\n      required:\n      - limit\n      - count\n      - offset\n      - entries\n      properties:\n        limit:\n          type: number\n          format: int32\n        count:\n          type: number\n          format: int32\n        offset:\n          type: number\n          format: int32\n        entries:\n          type: array\n          items:\n            $ref: '#/components/schemas/Timezone'\n    Timezone:\n      description: |\n        A timezone in the form of continent/city\n        or \"UTC\".\n      type: string\n      example: Europe/Rome\n    Datetime:\n      required:\n      - timestamp\n      properties:\n        timestamp:\n          type: string\n          format: datetime\n          example: 2019-01-01T00:00:00Z\n    Problem:\n      $ref: 'https://teamdigitale.github.io/openapi/0.0.5/definitions.yaml#/schemas/Problem'\n"
		}
	},
	"Error": "parse: parse spec: paths: /timezones/{continent}: get: operation \"api.get_timezones_by_continent\": parameters: parse parameter \"\": resolve \"https://teamdigitale.github.io/openapi/0.0.5/definitions.yaml#/parameters/limit\" reference: invalid parameter reference: \"https://teamdigitale.github.io/openapi/0.0.5/definitions.yaml#/parameters/limit\""
}