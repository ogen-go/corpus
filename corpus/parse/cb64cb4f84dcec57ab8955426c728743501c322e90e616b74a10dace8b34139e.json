{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/micronaut-projects/micronaut-guides"
		},
		"file": {
			"name": "library-definition.yaml",
			"size": 0,
			"path": "guides/micronaut-openapi-generator-server/java/src/main/resources/library-definition.yaml",
			"byteSize": 2006,
			"content": "#tag::info[]\nopenapi: 3.0.0 # \u003c1\u003e\ninfo: # \u003c2\u003e\n  description: This is a library API\n  version: 1.0.0\n  title: Library\n  license:\n    name: Apache-2.0\n    url: \"https://www.apache.org/licenses/LICENSE-2.0.html\"\ntags: # \u003c3\u003e\n  - name: books\n    description: Search for books and add new ones\n#end::info[]\n#tag::paths[]\npaths:\n#end::paths[]\n#tag::search[]\n  /search:\n    get: # \u003c1\u003e\n      tags: \n        - books # \u003c2\u003e\n      summary: Search for a book\n      operationId: search # \u003c3\u003e\n      parameters: # \u003c4\u003e\n        - name: book-name\n          in: query\n          schema: \n            type: string\n            minLength: 3 # \u003c5\u003e\n        - name: author-name\n          in: query\n          schema: \n            type: string\n      responses: # \u003c6\u003e\n        \"200\": # \u003c7\u003e\n          description: Success\n          content:\n            \"applicaton/json\":\n              schema:\n                type: array, \n                items: \n                  $ref: \"#/components/schemas/BookInfo\"\n        \"400\": # \u003c8\u003e\n          description: Bad Request\n#end::search[]\n#tag::add[]\n  /add:\n    post: # \u003c1\u003e\n      tags: [books]\n      summary: Add a new book\n      operationId: addBook\n      requestBody: # \u003c2\u003e\n        required: true\n        content:\n          \"application/json\": \n            schema: \n              $ref: \"#/components/schemas/BookInfo\" # \u003c3\u003e\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Bad Request\n#end::add[]\n#tag::components[]\ncomponents:\n  schemas:\n    BookInfo:\n      title: Book Info # \u003c1\u003e\n      description: Object containg all the info about a book\n      type: object\n      properties: # \u003c2\u003e\n        name: {type: string}\n        availability: {$ref: \"#/components/schemas/BookAvailability\"} # \u003c3\u003e\n        author: {type: string, minLength: 3}\n        ISBN: {type: string, pattern: \"[0-9]{13}\"}\n      required: [\"name\", \"availability\"]\n    BookAvailability: # \u003c4\u003e\n      type: string\n      enum: [\"available\", \"not available\", \"reserved\"]\n#end::components[]",
			"canonicalURL": "/github.com/micronaut-projects/micronaut-guides@14569189b04d7761c9db05f13a3b23f41ed32edb/-/blob/guides/micronaut-openapi-generator-server/java/src/main/resources/library-definition.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/micronaut-projects/micronaut-guides/blob/14569189b04d7761c9db05f13a3b23f41ed32edb/guides/micronaut-openapi-generator-server/java/src/main/resources/library-definition.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/search\": get: operation \"search\": responses: 200: content: applicaton/json: schema: parse schema: at 1:1240: unexpected schema type: \"array,\""
}