{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/banzaicloud/pipeline"
		},
		"file": {
			"name": "pipeline.yaml",
			"size": 0,
			"path": "apis/pipeline/pipeline.yaml",
			"byteSize": 309025,
			"content": "openapi: 3.0.0\ninfo:\n    description: |\n      Pipeline is a feature rich application platform,\n      built for containers on top of Kubernetes to automate the DevOps experience,\n      continuous application development and the lifecycle of deployments.\n    version: \"latest\"\n    title: Pipeline API\n    contact:\n        email: info@banzaicloud.com\n    license:\n        name: Apache 2.0\n        url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\nservers:\n    -\n        url: http://localhost:9090\ntags:\n    -\n        name: clusters\n        description: Clusters related functions\n    -\n        name: deployments\n        description: Deployment related functions for a cluster\n    -\n        name: auth\n        description: Auth related functions\n    -\n        name: secrets\n        description: Secrets related functions\n    -\n        name: organizations\n        description: Organizations related functions\n    -\n        name: common\n        description: Common API functions\n    -\n        name: users\n        description: Users related functions\n    -\n        name: info\n        description: Cloud config related functions\n    -\n        name: storage\n        description: Storage related functions\n    -\n        name: projects\n        description: Google projects related operations\n    -\n        name: ark\n        description: ARK service related functions\n    -\n        name: ark-buckets\n        description: \"ARK: buckets related functions\"\n    -\n        name: ark-backups\n        description: \"ARK: backups related functions\"\n    -\n        name: ark-schedules\n        description: \"ARK: schedules related functions\"\n    -\n        name: ark-restores\n        description: \"ARK: restores related functions\"\n\npaths:\n    /api/version:\n        get:\n            description: Return Pipeline build and deployment info\n            tags:\n                - common\n            responses:\n                200:\n                    description: Version info\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/VersionResponse'\n\n    /api/v1/orgs/{orgId}/clusters:\n        parameters:\n            - $ref: '#/components/parameters/orgId'\n\n        post:\n            security:\n                - bearerAuth: []\n            tags:\n                - clusters\n            summary: Create cluster\n            description: Create a new K8S cluster in the cloud\n            operationId: CreateCluster\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            ## oneOf not properly supported by generator\n                            #oneOf:\n                            #    - $ref: '#/components/schemas/CreateClusterRequest'\n                            #    - $ref: '#/components/schemas/CreateClusterRequestV2'\n                        examples:\n                            AKS:\n                                value:\n                                    name: \"azcluster-pipelineuser-123\"\n                                    location: \"westeurope\"\n                                    cloud: \"azure\"\n                                    instanceType: \"Standard_D2_v2\"\n                                    properties:\n                                        aks:\n                                            $ref: '#/components/schemas/CreateAKSProperties'\n\n                            GKE:\n                                value:\n                                    name: \"gkecluster-pipelineuser-123\"\n                                    location: \"us-central1-a\"\n                                    cloud: \"google\"\n                                    instanceType: \"n1-standard-1\"\n                                    properties:\n                                        gke:\n                                            $ref: '#/components/schemas/CreateGKEProperties'\n            responses:\n                201:\n                    description: Cluster is already being created\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/CreateClusterResponse_201'\n                202:\n                    description: Cluster created successfully\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/CreateClusterResponse_202'\n                default:\n                    $ref: '#/components/responses/Error'\n\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - clusters\n            summary: List clusters\n            operationId: ListClusters\n            description: Listing all the K8S clusters from the cloud\n            responses:\n                200:\n                    description: All cluster listed\n                    content:\n                        application/json:\n                            schema:\n                                type: array\n                                items:\n                                    $ref: '#/components/schemas/GetClusterStatusResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/clusters/{id}:\n        parameters:\n            - $ref: '#/components/parameters/orgId'\n            - $ref: '#/components/parameters/clusterId'\n\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - clusters\n            summary: Get cluster status\n            description: Getting cluster status\n            operationId: GetCluster\n            responses:\n                200:\n                    description: Getting cluster succeeded\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/GetClusterStatusResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n        put:\n            security:\n                - bearerAuth: []\n            tags:\n                - clusters\n            summary: Update cluster\n            description: Updating an existing K8S cluster\n            operationId: UpdateClusterDeprecated\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            ## oneOf not properly supported by generator\n                            #oneOf:\n                            #    - $ref: '#/components/schemas/UpdateClusterRequestDeprecated'\n                            #    - $ref: '#/components/schemas/UpdateClusterRequestV2'\n            responses:\n                202:\n                    description: Cluster update accepted\n                default:\n                    $ref: '#/components/responses/Error'\n\n        delete:\n            security:\n                - bearerAuth: []\n            tags:\n                - clusters\n            summary: Delete cluster\n            description: Deleting a K8S cluster\n            operationId: DeleteCluster\n            parameters:\n                -\n                    name: force\n                    in: query\n                    description: Ignore errors during deletion\n                    schema:\n                        type: boolean\n                        default: false\n            responses:\n                202:\n                    description: Cluster delete in progress\n                204:\n                    description: Cluster deleted\n                default:\n                    $ref: '#/components/responses/Error'\n\n        head:\n            security:\n                - bearerAuth: []\n            tags:\n                - clusters\n            summary: Get cluster status\n            operationId: GetClusterStatus\n            description: Getting the K8S cluster status\n            responses:\n                200:\n                    description: Cluster exists\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/clusters/{id}/pods:\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - clusters\n            summary: Get pod details\n            description: Getting pod details\n            operationId: GetPodDetails\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n                - $ref: '#/components/parameters/clusterId'\n            responses:\n                200:\n                    description: Getting cluster succeeded\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/PodDetailsResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/clusters/{id}/posthooks:\n        put:\n            security:\n                - bearerAuth: []\n            tags:\n                - clusters\n            summary: Run posthook functions\n            operationId: ClusterPostHooks\n            description: Run posthook functions\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n                - $ref: '#/components/parameters/clusterId'\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/ReRunPostHook'\n            responses:\n                200:\n                    description: \"Posthooks started\"\n\n    /api/v1/orgs/{orgId}/clusters/{id}/config:\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - clusters\n            summary: Get a cluster config\n            operationId: GetClusterConfig\n            description: Getting a K8S cluster config file\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n                - $ref: '#/components/parameters/clusterId'\n            responses:\n                200:\n                    description: \"Getting config file succeeded\"\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ClusterConfig'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/clusters/{id}/oidcconfig:\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - clusters\n            summary: Get a cluster config with OIDC login\n            operationId: GetOIDCClusterConfig\n            description: Getting a K8S cluster config file with OIDC credentials\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n                - $ref: '#/components/parameters/clusterId'\n            responses:\n                200:\n                    description: \"Getting config file succeeded\"\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ClusterConfig'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/clusters/{id}/endpoints:\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - clusters\n            summary: List service public endpoints\n            operationId: ListClusterEndpoints\n            description: List service public endpoints\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n                - $ref: '#/components/parameters/clusterId'\n                -\n                    name: releaseName\n                    in: query\n                    required: false\n                    description: Selected deployment release name\n                    schema:\n                        type: string\n            responses:\n                200:\n                    description: \"Endpoints listed\"\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ListEndpointsResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/clusters/{id}/nodes:\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - clusters\n            summary: List cluster nodes\n            operationId: ListNodes\n            description: List cluster nodes\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n                - $ref: '#/components/parameters/clusterId'\n            responses:\n                200:\n                    description: \"Nodes listed\"\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ListNodesResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/clusters/{id}/secrets:\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - clusters\n            summary: List secrets which belongs to cluster\n            operationId: ListClusterSecrets\n            description: List secrets which belongs to cluster\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n                - $ref: '#/components/parameters/clusterId'\n                -\n                    name: releaseName\n                    in: query\n                    required: false\n                    description: Selected deployment release name\n                    schema:\n                        type: string\n            responses:\n                200:\n                    description: \"Secrets listed\"\n                    content:\n                        application/json:\n                            schema:\n                                type: array\n                                items:\n                                    $ref: '#/components/schemas/SecretItem'\n                default:\n                    $ref: '#/components/responses/Error'\n\n        post:\n            security:\n                - bearerAuth: []\n            tags:\n                - clusters\n            summary: Install secrets into cluster\n            operationId: InstallSecrets\n            description: Install secrets into cluster\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n                - $ref: '#/components/parameters/clusterId'\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/InstallSecretsRequest'\n            responses:\n                200:\n                    description: \"Secrets are installed into cluster\"\n                    content:\n                        application/json:\n                            schema:\n                                type: array\n                                items:\n                                    $ref: '#/components/schemas/InstallSecretResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/clusters/{id}/secrets/{secretName}:\n        parameters:\n            - $ref: '#/components/parameters/orgId'\n            - $ref: '#/components/parameters/clusterId'\n            -\n                name: secretName\n                in: path\n                required: true\n                description: Secret name as it will be seen in the cluster\n                schema:\n                    type: string\n\n        post:\n            security:\n                - bearerAuth: []\n            tags:\n                - clusters\n            summary: Install a particular secret into a cluster with optional remapping\n            operationId: InstallSecret\n            description: Install a particular secret into a cluster\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/InstallSecretRequest'\n            responses:\n                200:\n                    description: \"secret is installed into the cluster\"\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/InstallSecretResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n        patch:\n            security:\n                - bearerAuth: []\n            tags:\n                - clusters\n            summary: Merge a particular secret with an existing one with optional remapping\n            operationId: MergeSecret\n            description: Merge a particular secret with an existing one\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/InstallSecretRequest'\n            responses:\n                200:\n                    description: \"secret is installed into the cluster\"\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/InstallSecretResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/clusters/{id}/bootstrap:\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - clusters\n            summary: Get cluster bootstrap info\n            description: Get cluster bootstrap info\n            operationId: GetClusterBootstrap\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n                - $ref: '#/components/parameters/clusterId'\n            responses:\n                200:\n                    description: Getting bootstrap succeeded\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/GetClusterBootstrapResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/clusters/{id}/scanlog:\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - scanlog\n            operationId: ListScans\n            summary: List scans\n            description: List scans\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n                - $ref: '#/components/parameters/clusterId'\n            responses:\n                200:\n                    description: Scan listing\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/ScanLogList\"\n\n    /api/v1/orgs/{orgId}/clusters/{id}/scanlog/{releaseName}:\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - scanlog\n            operationId: ListScansByRelease\n            summary: List scans by release\n            description: List scans by release\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n                - $ref: '#/components/parameters/clusterId'\n                -\n                    name: releaseName\n                    in: path\n                    required: true\n                    description: release name identification\n                    schema:\n                        type: string\n            responses:\n                200:\n                    description: Scan listing\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/ScanLogList\"\n\n    /api/v1/orgs/{orgId}/helm/repos:\n        parameters:\n            -   $ref: '#/components/parameters/orgId'\n\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - helm\n            summary: List repositories\n            operationId: HelmListRepos\n            description: Listing Helm repositories in the cluster\n            responses:\n                200:\n                    description: \"Repositories listed\"\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/HelmReposListResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n        post:\n            security:\n                - bearerAuth: []\n            tags:\n                - helm\n            summary: Add Repo\n            operationId: HelmReposAdd\n            description: Add new Helm repository\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/HelmReposAddRequest'\n            responses:\n                200:\n                    description: \"resource successfully added.\"\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/HelmRepoListItem'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/helm/repos/{repoName}:\n        parameters:\n            - $ref: '#/components/parameters/orgId'\n            -\n                name: repoName\n                in: path\n                required: true\n                description: Helm repo name\n                schema:\n                    type: string\n\n        delete:\n            security:\n                - bearerAuth: []\n            tags:\n                - helm\n            summary: Delete Repo\n            operationId: HelmReposDelete\n            description: Delete  Helm repository\n            responses:\n                200:\n                    description: \"resource deleted successfully\"\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/HelmReposDeleteResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n        put:\n            security:\n                - bearerAuth: []\n            tags:\n                - helm\n            summary: Modify Repo\n            operationId: HelmReposModify\n            description: Modify Helm repository\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/HelmReposModifyRequest'\n            responses:\n                200:\n                    description: \"resource modified successfully\"\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/HelmReposUpdateResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/helm/repos/{repoName}/update:\n        put:\n            security:\n                - bearerAuth: []\n            tags:\n                - helm\n            summary: Update Repo\n            operationId: HelmReposUpdate\n            description: Modify Helm repository\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n                -\n                    name: repoName\n                    in: path\n                    required: true\n                    description: Helm repo name\n                    schema:\n                        type: string\n            responses:\n                200:\n                    description: \"resource modified successfully\"\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/HelmReposUpdateResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/helm/charts:\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - helm\n            summary: Chart List\n            operationId: HelmChartList\n            description: Get available Helm chart's list\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n                -\n                    name: name\n                    in: query\n                    required: false\n                    description: Chart Name\n                    schema:\n                        type: string\n                -\n                    name: repo\n                    in: query\n                    required: false\n                    description: Repo Name\n                    schema:\n                        type: string\n                -\n                    name: version\n                    in: query\n                    required: false\n                    description: Chart version (latest)\n                    schema:\n                        type: string\n            responses:\n                200:\n                    description: \"\"\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/HelmChartsListResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/helm/chart/{repoName}/{chartName}:\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - helm\n            summary: Chart details\n            operationId: HelmChartDetails\n            description: Get helm chart details\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n                -\n                    name: repoName\n                    in: path\n                    required: true\n                    description: Chart repository name\n                    schema:\n                        type: string\n                -\n                    name: chartName\n                    in: path\n                    required: true\n                    description: Chart Name\n                    schema:\n                        type: string\n                -\n                    name: version\n                    in: query\n                    required: false\n                    description: Chart version\n                    schema:\n                        type: string\n\n            responses:\n                200:\n                    description: \"\"\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/HelmChartDetailsResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/helm/cluster-charts:\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - helm\n            summary: Current Chart List of Managed Clusters\n            operationId: HelmCurrentClusterChartList\n            description: Get the list of Helm charts currently used for managed clusters\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n            responses:\n                200:\n                    description: \"\"\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/HelmClusterChartsListResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/clusters/{id}/deployments:\n        parameters:\n            - $ref: '#/components/parameters/orgId'\n            - $ref: '#/components/parameters/clusterId'\n\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - deployments\n            summary: List deployments\n            operationId: ListDeployments\n            description: Listing Helm deployments\n            parameters:\n                -\n                    name: tag\n                    in: query\n                    description: Deployment tag to filter for\n                    schema:\n                        type: string\n            responses:\n                200:\n                    description: \"Deployments listed\"\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ListDeploymentsResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n        post:\n            security:\n                - bearerAuth: []\n            tags:\n                - deployments\n            summary: Create a Helm deployment\n            operationId: CreateDeployment\n            description: Creating a Helm deployment\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/CreateUpdateDeploymentRequest'\n            responses:\n                201:\n                    description: \"Deployment created successfully\"\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/CreateUpdateDeploymentResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n        head:\n            security:\n                - bearerAuth: []\n            tags:\n                - deployments\n            summary: Get tiller status\n            operationId: GetTillerStatus\n            description: Checking if tiller ready to accept deployments\n            responses:\n                200:\n                    description: \"Tiller is available\"\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/clusters/{id}/whitelists:\n        parameters:\n            - $ref: '#/components/parameters/orgId'\n            - $ref: '#/components/parameters/clusterId'\n\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - whitelist\n            summary: List Whitelisted deployments\n            operationId: ListWhitelists\n            description: List Whitelisted deployments\n            responses:\n                200:\n                    description: \"List Whitelists\"\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ReleaseWhiteList'\n        post:\n            security:\n                - bearerAuth: []\n            tags:\n                - whitelist\n            summary: Create Whitelisted deployment\n            operationId: CreateWhitelists\n            description: Create Whitelisted deployment\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/ReleaseWhiteListItem'\n            responses:\n                200:\n                    description: \"Whitelist created\"\n\n    /api/v1/orgs/{orgId}/clusters/{id}/whitelists/{name}:\n        delete:\n            security:\n                - bearerAuth: []\n            tags:\n                - whitelist\n            summary: Delete Whitelisted deployment\n            operationId: DeleteWhitelist\n            description: Delete Whitelisted deployment\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n                - $ref: '#/components/parameters/clusterId'\n                -\n                    name: name\n                    in: path\n                    required: true\n                    description: Selected whitelist identification\n                    schema:\n                        type: string\n            responses:\n                200:\n                    description: \"Whitelist deleted\"\n\n    /api/v1/orgs/{orgId}/clusters/{id}/deployments/{name}:\n        parameters:\n            - $ref: '#/components/parameters/orgId'\n            - $ref: '#/components/parameters/clusterId'\n            -\n                name: name\n                in: path\n                required: true\n                description: Deployment name\n                schema:\n                    type: string\n\n        delete:\n            security:\n                - bearerAuth: []\n            tags:\n                - deployments\n            summary: Delete deployment\n            operationId: DeleteDeployment\n            description: Deleting a Helm deployment\n            responses:\n                200:\n                    description: \"Deployment deleted successfully\"\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/DeleteDeploymentResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n        put:\n            security:\n                - bearerAuth: []\n            tags:\n                - deployments\n            summary: Update deployment\n            operationId: UpdateDeployment\n            description: Updating a Helm deployment\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/CreateUpdateDeploymentRequest'\n            responses:\n                201:\n                    description: \"Deployment updated successfully\"\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/CreateUpdateDeploymentResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n        head:\n            security:\n                - bearerAuth: []\n            tags:\n                - deployments\n            summary: Check deployment status\n            operationId: HelmDeploymentStatus\n            description: Checking the status of a deployment through the Helm client API\n            responses:\n                200:\n                    description: \"Deployment status is OK\"\n                400:\n                    description: \"Error during checking deployment status\"\n                401:\n                    description: \"Unauthorized\"\n                404:\n                    description: \"Deployment not found\"\n\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - deployments\n            summary: Get deployment details\n            operationId: GetDeployment\n            description: Retrieves the details of a deployment\n            parameters:\n                -\n                    name: tag\n                    in: query\n                    required: false\n                    description: Deployment tag\n                    schema:\n                        type: string\n            responses:\n                200:\n                    description: \"Deployment details\"\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/GetDeploymentResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/clusters/{id}/deployments/{name}/resources:\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - deployments\n            summary: Get deployment K8s resources\n            operationId: GetDeploymentResource\n            description: Retrieves the K8s resources of a deployment\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n                - $ref: '#/components/parameters/clusterId'\n                -\n                    name: name\n                    in: path\n                    required: true\n                    description: Deployment name\n                    schema:\n                        type: string\n                -\n                    name: resourceTypes\n                    in: query\n                    required: false\n                    description: K8s resource type\n                    schema:\n                        type: string\n            responses:\n                200:\n                    description: \"Deployment resources\"\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/GetDeploymentResourcesResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/clusters/{id}/deployments/{name}/images:\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - deployments\n            summary: Get deployment K8s images\n            operationId: GetDeploymentImages\n            description: Retrieves the K8s images of a deployment\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n                - $ref: '#/components/parameters/clusterId'\n                -\n                    name: name\n                    in: path\n                    required: true\n                    description: Deployment name\n                    schema:\n                        type: string\n            responses:\n                200:\n                    description: \"Deployment images\"\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/DeploymentImageList'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/tokens:\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - auth\n            summary: List all API tokens\n            operationId: ListTokens\n            description: List all API tokens\n            responses:\n                200:\n                    description: Tokens listed successfully\n                    content:\n                        application/json:\n                            schema:\n                                type: array\n                                items:\n                                    $ref: '#/components/schemas/TokenListResponseItem'\n                default:\n                    $ref: '#/components/responses/Error'\n\n        post:\n            security:\n                - bearerAuth: []\n            tags:\n                - auth\n            summary: Create token\n            operationId: CreateToken\n            description: Create token\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/TokenCreateRequest'\n            responses:\n                200:\n                    description: Token created successfully\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/TokenCreateResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/tokens/{tokenId}:\n        delete:\n            security:\n                - bearerAuth: []\n            tags:\n                - auth\n            summary: Delete an API token\n            operationId: DeleteToken\n            description: Delete an API token\n            parameters:\n                -\n                    name: tokenId\n                    in: path\n                    required: true\n                    description: Token identification\n                    schema:\n                        type: string\n                        example: a4358708-c525-4c78-89c2-c1cbe0f3f76c\n            responses:\n                204:\n                    description: Token deleted successfully\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/secrets:\n        parameters:\n            - $ref: '#/components/parameters/orgId'\n\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - secrets\n            summary: List secrets\n            operationId: GetSecrets\n            description: Listing secrets\n            parameters:\n                -\n                    name: type\n                    in: query\n                    required: false\n                    description: Secret's type to filter with\n                    schema:\n                        type: string\n                        enum: [amazon, azure, google, kubernetes, generic, tls, ssh]\n                -\n                    name: tags\n                    in: query\n                    required: false\n                    description: The selected tag to filter with\n                    schema:\n                        type: array\n                        items:\n                            type: string\n                        example: [ \"release:pipeline-monitoring\" ]\n                -\n                    name: values\n                    in: query\n                    required: false\n                    description: Marks if to present secret values or just the keys\n                    schema:\n                        type: boolean\n            responses:\n                200:\n                    description: Secrets listed\n                    content:\n                        application/json:\n                            schema:\n                                type: array\n                                items:\n                                    $ref: '#/components/schemas/SecretItem'\n                default:\n                    $ref: '#/components/responses/Error'\n\n        post:\n            security:\n                - bearerAuth: []\n            tags:\n                - secrets\n            summary: Add secrets\n            operationId: AddSecrets\n            description: Adding secrets\n            parameters:\n                -\n                    name: validate\n                    in: query\n                    required: false\n                    description: validation is skipped or not\n                    schema:\n                        type: boolean\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/CreateSecretRequest'\n            responses:\n                201:\n                    description: Secret saved successfully\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/CreateSecretResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/secret-types:\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - secrets\n            summary: List secret types\n            operationId: ListSecretTypes\n            description: List secret types definitions\n            responses:\n                200:\n                    description: Success\n                    content:\n                        application/json:\n                            schema:\n                                type: object\n                                example:\n                                    tls:\n                                        fields:\n                                            -\n                                                name: hosts\n                                                required: true\n                                            -\n                                                name: validity\n                                                required: false\n                                additionalProperties:\n                                    $ref: '#/components/schemas/SecretTypeResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/secret-types/{type}:\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - secrets\n            summary: Get a specific secret type\n            operationId: GetSecretType\n            description: Get a specific secret type and describe it's fields\n            parameters:\n                -\n                    name: type\n                    in: path\n                    required: true\n                    description:  Secret type\n                    schema:\n                        type: string\n            responses:\n                200:\n                    description: Success\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/SecretTypeResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/secrets/{secretId}:\n        parameters:\n            - $ref: '#/components/parameters/orgId'\n            -\n                name: secretId\n                in: path\n                required: true\n                description: Secret identification\n                schema:\n                    type: string\n\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - secrets\n            summary: Get secret\n            operationId: GetSecret\n            description: Get secret\n            responses:\n                200:\n                    description: Secret returned successfully\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/SecretItem'\n                default:\n                    $ref: '#/components/responses/Error'\n        put:\n            security:\n                - bearerAuth: []\n            tags:\n                - secrets\n            summary: Update secrets\n            operationId: UpdateSecrets\n            description: Update secrets\n            parameters:\n                -\n                    name: validate\n                    in: query\n                    required: false\n                    description: validation is skipped or not\n                    schema:\n                        type: boolean\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/CreateSecretRequest'\n            responses:\n                200:\n                    description: Secret updated successfully\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/CreateSecretResponse'\n                409:\n                    description: Conflict\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/CommonError'\n                            examples:\n                                SecretAlreadyExists:\n                                    value:\n                                        code: 409\n                                        message: \"Secret with this name already exists\"\n                                        error: \"check-and-set parameter did not match the current version\"\n                default:\n                    $ref: '#/components/responses/Error'\n\n        delete:\n            security:\n                - bearerAuth: []\n            tags:\n                - secrets\n            summary: Delete secrets\n            operationId: DeleteSecrets\n            description: Deleting secrets\n            responses:\n                204:\n                    description: Secret deleted successfully\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/secrets/{secretId}/validate:\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - secrets\n            summary: Validate secret\n            operationId: ValidateSecret\n            description: Validate secret\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n                -\n                    name: secretId\n                    in: path\n                    required: true\n                    description: Secret identification\n                    schema:\n                        type: string\n            responses:\n                200:\n                    description: Valid secret\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/secrets/{secretId}/tags:\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - secrets\n            summary: Get the tags of a secret\n            operationId: GetSecretTags\n            description: Get the tags of a secret\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n                -\n                    name: secretId\n                    in: path\n                    required: true\n                    description: Secret identification\n                    schema:\n                        type: string\n            responses:\n                200:\n                    description: Secret tags returned successfully\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/SecretTags'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/secrets/{secretId}/tags/{tag}:\n        parameters:\n            - $ref: '#/components/parameters/orgId'\n            -\n                name: secretId\n                in: path\n                required: true\n                description: Secret identification\n                schema:\n                    type: string\n            -\n                name: tag\n                in: path\n                required: true\n                description: Tag\n                schema:\n                    type: string\n\n        put:\n            security:\n                - bearerAuth: []\n            tags:\n                - secrets\n            summary: Add a tag to a secret\n            operationId: AddSecretTag\n            description: Add a tag to a secret\n            responses:\n                200:\n                    description: Secret tags returned successfully\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/SecretTags'\n                default:\n                    $ref: '#/components/responses/Error'\n\n        delete:\n            security:\n                - bearerAuth: []\n            tags:\n                - secrets\n            summary: Delete a tag from a secret\n            operationId: DeleteSecretTag\n            description: Delete a tag from a secret\n            responses:\n                204:\n                    description: Secret tag deleted successfully\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}:\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - organizations\n            summary: Get organization\n            operationId: GetOrg\n            description: Getting organization\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n            responses:\n                200:\n                    description: \"Organization getting successfully\"\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/OrganizationListItemResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs:\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - organizations\n            summary: List organizations\n            operationId: ListOrgs\n            description: Listing organizations\n            responses:\n                200:\n                    description: \"Organizations listed successfully\"\n                    content:\n                        application/json:\n                            schema:\n                                type: array\n                                items:\n                                    $ref: '#/components/schemas/OrganizationListItemResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n        put:\n            security:\n                - bearerAuth: []\n            tags:\n                - organizations\n            summary: Synchronize organizations\n            operationId: SyncOrgs\n            responses:\n                200:\n                    description: \"Organizations synchronized successfully\"\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api:\n        get:\n            tags:\n                - common\n            summary: List Pipeline API endpoints\n            operationId: ListEndpoints\n            description: Listing Pipeline API endpoint\n            responses:\n                200:\n                    description: \"Endpoints listed\"\n                    content:\n                        application/json:\n                            schema:\n                                type: array\n                                items:\n                                    type: string\n                                example: [\n                                    \"/api/v1/orgs\",\n                                    \"/api/v1/orgs/:orgId\",\n                                ]\n\n    /api/v1/orgs/{orgId}/users:\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - users\n            summary: List users\n            operationId: ListUsers\n            description: Listing users\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n            responses:\n                200:\n                    description: \"Users listed\"\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ListUserResponse'\n\n    /api/v1/orgs/{orgId}/users/{userId}:\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - users\n            summary: Get user\n            operationId: GetUsers\n            description: Getting user\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n                -\n                    name: userId\n                    in: path\n                    required: true\n                    description: User identification\n                    schema:\n                        type: integer\n            responses:\n                200:\n                    description: \"Getting user succeeded\"\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/User'\n\n    /api/v1/me:\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - users\n            summary: Get current user\n            operationId: GetCurrentUser\n            description: Get current user\n            responses:\n                200:\n                    description: \"Getting current user succeeded\"\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/User'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/capabilities:\n        get:\n            tags:\n                - pipeline\n            summary: Lists configured Pipeline capabilities\n            operationId: ListCapabilities\n            description: Retrieve Pipeline capabilities\n            responses:\n                200:\n                    description: \"capabilities successfully returned\"\n                    content:\n                        application/json:\n                            schema:\n                                type: object\n                                additionalProperties:\n                                    type: object\n                                example: {\n                                    \"features\": {\n                                        \"monitoring\": {\n                                            \"enabled\": true\n                                        },\n                                        \"securityScan\": {\n                                            \"enabled\": true,\n                                            \"managed\": true\n                                        },\n                                        \"vault\": {\n                                            \"enabled\": true,\n                                            \"managed\": false\n                                        }\n                                    }\n                                }\n\n    /api/v1/orgs/{orgId}/azure/resourcegroups:\n        parameters:\n            - $ref: '#/components/parameters/orgId'\n\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - info\n            summary: Get all resource groups\n            operationId: GetResourceGroups\n            description: Get all resource groups\n            parameters:\n                -\n                    name: secretId\n                    in: header\n                    required: true\n                    description: Secret identifier\n                    schema:\n                        type: string\n            responses:\n                200:\n                    description: \"Azure resource groups listed\"\n                    content:\n                        application/json:\n                            schema:\n                                type: array\n                                items:\n                                    type: string\n                                example: [\n                                    \"resourceGroup1\",\n                                    \"resourceGroup2\",\n                                ]\n                default:\n                    $ref: '#/components/responses/Error'\n\n        post:\n            security:\n                - bearerAuth: []\n            tags:\n                - info\n            summary: Create resource groups\n            operationId: CreateResourceGroup\n            description: Create resource groups\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/CreateResourceGroup'\n            responses:\n                201:\n                    description: \"Azure resource group created\"\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ResourceGroupCreated'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/buckets:\n        parameters:\n            - $ref: '#/components/parameters/orgId'\n\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - storage\n            summary: List object storage buckets\n            operationId: ListObjectStoreBuckets\n            description: List object store buckets accessible by the credentials referenced by the given secret. If no credentials provided all managed buckets are returned for all cloud types.\n            parameters:\n                -\n                    name: secretId\n                    in: header\n                    required: false\n                    description: Secret identification. If not provided only the managed buckets (those created via pipeline) are listed\n                    schema:\n                        type: string\n                -\n                    name: cloudType\n                    in: query\n                    schema:\n                        type: string\n                        enum: [amazon, google, azure]\n                    required: false\n                    description: Identifies the cloud provider - mandatory if secretId header is provided\n                -\n                    name: include\n                    in: query\n                    schema:\n                        type: string\n                        enum: [secret]\n                    required: false\n                    description: Signals whether the secret name is to be returned\n            responses:\n                200:\n                    description: \"Storage buckets listed\"\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ListStorageBucketsResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n        post:\n            security:\n                - bearerAuth: []\n            tags:\n                - storage\n            summary: Creates a new object store bucket with the given params\n            operationId: CreateObjectStoreBucket\n            description: Creates a new object store bucket on the Cloud provider referenced by the given secret. The credentials for creating the bucket is taken from the provided secret.\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/CreateObjectStoreBucketRequest'\n            responses:\n                202:\n                    description: \"Storage bucket creation request accepted\"\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/CreateObjectStoreBucketResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/buckets/{name}:\n        parameters:\n            - $ref: '#/components/parameters/orgId'\n            -\n                name: name\n                in: path\n                required: true\n                description: Bucket identification\n                schema:\n                    type: string\n\n        delete:\n            security:\n                - bearerAuth: []\n            tags:\n                - storage\n            summary: Deletes the object store bucket with the given name\n            operationId: DeleteObjectStoreBucket\n            description: Deletes the object store bucket identified by the given name. The credentials for deleting the bucket is taken from the provided secret.\n            parameters:\n                -\n                    name: secretId\n                    in: header\n                    required: true\n                    description: Secret identification\n                    schema:\n                        type: string\n                -\n                    name: cloudType\n                    in: query\n                    description: Identifies the cloud provider\n                    schema:\n                        type: string\n                        enum: [amazon, google, azure]\n                    required: true\n                -\n                    name: force\n                    in: query\n                    description: Is the operation forced\n                    schema:\n                        type: boolean\n                    required: false\n                -\n                    name: resourceGroup\n                    in: query\n                    description: Azure resource group the storage account that holds the bucket (storage container) to be deleted\n                    schema:\n                        type: string\n                -\n                    name: storageAccount\n                    in: query\n                    description: Azure storage account to delete the bucket (storage container) from\n                    schema:\n                        type: string\n                -\n                    name: location\n                    in: query\n                    description: The region to delete the bucket from. Required on Amazon cloud provider.\n                    schema:\n                        type: string\n            responses:\n                200:\n                    description: \"Storage bucket deleted successfully\"\n                default:\n                    $ref: '#/components/responses/Error'\n\n        head:\n            security:\n                - bearerAuth: []\n            tags:\n                - storage\n            summary: Get object store bucket status\n            operationId: GetObjectStoreBucketStatus\n            description: Retrieves the status of the object store bucket given its name\n            parameters:\n                -\n                    name: secretId\n                    in: header\n                    description: Secret identification\n                    schema:\n                        type: string\n                -\n                    name: secretName\n                    in: header\n                    description: Secret identification by name\n                    schema:\n                        type: string\n                -\n                    name: cloudType\n                    in: query\n                    description: Identifies the cloud provider\n                    schema:\n                        type: string\n                        enum: [amazon, google, azure]\n                    required: true\n                -\n                    name: resourceGroup\n                    in: query\n                    description: Azure resource group to lookup the bucket(storage container) under. Required only on Azure cloud provider.\n                    schema:\n                        type: string\n                -\n                    name: storageAccount\n                    in: query\n                    description: Azure storage account to lookup the bucket(storage container) under. Required only on Azure cloud provider.\n                    schema:\n                        type: string\n                -\n                    name: location\n                    in: query\n                    description: The region to lookup the bucket under. Required on Amazon provider.\n                    schema:\n                        type: string\n            responses:\n                200:\n                    description: \"Object store buckets exists\"\n                default:\n                    $ref: '#/components/responses/Error'\n\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - storage\n            summary: Get object store bucket details\n            operationId: GetBucket\n            description: Retrieves the details of the object store bucket given its name\n            parameters:\n                -\n                    name: secretId\n                    in: header\n                    description: Secret identification\n                    schema:\n                        type: string\n                -\n                    name: secretName\n                    in: header\n                    description: Secret identification by name\n                    schema:\n                        type: string\n                -\n                    name: cloudType\n                    in: query\n                    description: Identifies the cloud provider\n                    schema:\n                        type: string\n                        enum: [amazon, google, azure]\n                    required: true\n                -\n                    name: resourceGroup\n                    in: query\n                    description: Azure resource group to lookup the bucket(storage container) under. Required only on Azure cloud provider.\n                    schema:\n                        type: string\n                -\n                    name: storageAccount\n                    in: query\n                    description: Azure storage account to lookup the bucket(storage container) under. Required only on Azure cloud provider.\n                    schema:\n                        type: string\n                -\n                    name: location\n                    in: query\n                    description: The region to lookup the bucket under. Required on Amazon cloud provider.\n                    schema:\n                        type: string\n            responses:\n                200:\n                    description: Object store bucket details\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/BucketInfo'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/networks:\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - network\n            summary: List VPC networks\n            operationId: ListVPCNetworks\n            description: List VPC networks accessible by the organization.\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n                -\n                    name: secretId\n                    description: Secret identification\n                    in: header\n                    required: true\n                    schema:\n                        type: string\n                -\n                    name: cloudType\n                    description: Identifies the cloud provider\n                    in: query\n                    required: true\n                    schema:\n                        type: string\n                        enum: [amazon, google, azure]\n                -\n                    name: region\n                    description: Identifies the region of the VPC network (required when cloudType != azure)\n                    in: query\n                    required: false\n                    schema:\n                        type: string\n                -\n                    name: resourceGroup\n                    description: Identifies the resource group of the Azure virtual network (required when cloudType == azure)\n                    in: query\n                    required: false\n                    schema:\n                        type: string\n            responses:\n                200:\n                    description: List of VPC networks\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ListVPCNetworksResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/networks/{networkId}/subnets:\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - network\n            summary: List VPC subnetworks\n            operationId: ListVPCSubnets\n            description: List subnetworks of the given VPC network\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n                -\n                    name: networkId\n                    description: VPC network identification\n                    in: path\n                    required: true\n                    schema:\n                        type: string\n                -\n                    name: secretId\n                    description: Secret identification\n                    in: header\n                    required: true\n                    schema:\n                        type: string\n                -\n                    name: cloudType\n                    description: Identifies the cloud provider\n                    in: query\n                    required: true\n                    schema:\n                        type: string\n                        enum: [amazon, google, azure]\n                -\n                    name: region\n                    description: Identifies the region of the VPC network (required when cloudType != azure)\n                    in: query\n                    required: false\n                    schema:\n                        type: string\n                -\n                    name: resourceGroup\n                    description: Identifies the resource group of the Azure virtual network (required when cloudType == azure)\n                    in: query\n                    required: false\n                    schema:\n                        type: string\n            responses:\n                200:\n                    description: List of VPC network subnets\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ListVPCSubnetsResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/networks/{networkId}/routeTables:\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - network\n            summary: List VPC route tables\n            operationId: ListRouteTables\n            description: List route tables of the given VPC network\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n                -\n                    name: networkId\n                    description: VPC network identification\n                    in: path\n                    required: true\n                    schema:\n                        type: string\n                -\n                    name: secretId\n                    description: Secret identification\n                    in: header\n                    required: true\n                    schema:\n                        type: string\n                -\n                    name: cloudType\n                    description: Identifies the cloud provider\n                    in: query\n                    required: true\n                    schema:\n                        type: string\n                        enum: [amazon, google, azure]\n                -\n                    name: region\n                    description: Identifies the region of the VPC network (required when cloudType != azure)\n                    in: query\n                    required: false\n                    schema:\n                        type: string\n                -\n                    name: resourceGroup\n                    description: Identifies the resource group of the Azure virtual network (required when cloudType == azure)\n                    in: query\n                    required: false\n                    schema:\n                        type: string\n            responses:\n                200:\n                    description: List of VPC network route tables\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ListRouteTablesResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/clusters/{id}/images:\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - images\n            summary: List Images used in cluster\n            operationId: ListImages\n            description: List Images used in cluster\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n                - $ref: '#/components/parameters/clusterId'\n            responses:\n                200:\n                    description: \"List Images\"\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ClusterImageList'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/clusters/{id}/images/{imageDigest}/deployments:\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - images\n            summary: List Deployments by Image\n            operationId: ListDeploymentsByImage\n            description: List Deployments by Image\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n                - $ref: '#/components/parameters/clusterId'\n                -\n                    name: imageDigest\n                    in: path\n                    required: true\n                    description: Image digest\n                    schema:\n                        type: string\n            responses:\n                200:\n                    description: \"List Images\"\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ListDeploymentsResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/clusters/{id}/pke/leader:\n        parameters:\n            - $ref: '#/components/parameters/orgId'\n            - $ref: '#/components/parameters/clusterId'\n\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - clusters\n            summary: Query cluster leader\n            operationId: GetLeaderElection\n            responses:\n                200:\n                    description: Success\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/GetLeaderElectionResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n        post:\n            security:\n                - bearerAuth: []\n            tags:\n                - clusters\n            summary: Apply as new cluster leader\n            operationId: PostLeaderElection\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/PostLeaderElectionRequest'\n            responses:\n                201:\n                    description: Application successful\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/PostLeaderElectionResponse'\n                409:\n                    description: Leader already elected\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/PostLeaderElectionResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n        delete:\n            security:\n                - bearerAuth: []\n            tags:\n                - clusters\n            summary: Delete cluster leader\n            operationId: DeleteLeaderElection\n            responses:\n                200:\n                    description: Leader deletion successful\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/clusters/{id}/pke/ready:\n        parameters:\n            - $ref: '#/components/parameters/orgId'\n            - $ref: '#/components/parameters/clusterId'\n\n        get:\n            summary: Query reported node readiness information\n            operationId: GetReadyPKENode\n            security:\n                - bearerAuth: []\n            tags:\n                - clusters\n            responses:\n                200:\n                    description: Readiness information\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/PKEClusterReadinessResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n        post:\n            security:\n                - bearerAuth: []\n            tags:\n                - clusters\n            summary: Report to Pipeline that a new node is ready (to be called by PKE installer)\n            operationId: PostReadyPKENode\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/PostReadyPKENodeRequest'\n            responses:\n                200:\n                    description: \"Success\"\n                    content:\n                        application/json:\n                            schema:\n                                type: object\n                                example: {}\n                default:\n                    $ref: '#/components/responses/Error'\n\n\n    /api/v1/orgs/{orgId}/clusters/{id}/pke/status:\n        parameters:\n            - $ref: '#/components/parameters/orgId'\n            - $ref: '#/components/parameters/clusterId'\n\n        post:\n            security:\n                - bearerAuth: []\n            tags:\n                - clusters\n            summary: Report to Pipeline the progress of the bootstrapping of a new node (to be called by PKE installer)\n            operationId: ReportPKENodeStatus\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/ReportPKENodeStatusRequest'\n            responses:\n                202:\n                    description: \"Success\"\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ReportPKENodeStatusResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/clusters/{id}/pke/commands:\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - clusters\n            summary: List bootstrap commands for namespaces\n            description: Get the commands to use for bootstrapping nodes of a PKE cluster in each nodepool\n            operationId: GetPKECommands\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n                - $ref: '#/components/parameters/clusterId'\n            responses:\n                200:\n                    description: \"Map of nodepool names to commands to use\"\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/GetPKECommandsResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/clusters/{id}/namespaces:\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - clusters\n            summary: Lists namespaces for a cluster\n            description: Lists namespaces for a cluster\n            operationId: ListNamespaces\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n                - $ref: '#/components/parameters/clusterId'\n            responses:\n                200:\n                    description: Namespaces listed\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/NamespaceListResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/clusters/{id}/namespaces/{namespace}:\n        delete:\n            security:\n                - bearerAuth: []\n            tags:\n                - clusters\n            summary: Delete namespace from a cluster\n            description: Delete namespace from a cluster\n            operationId: DeleteNamespace\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n                - $ref: '#/components/parameters/clusterId'\n                -\n                    name: namespace\n                    in: path\n                    description: Kubernetes namespace\n                    required: true\n                    schema:\n                        type: string\n            responses:\n                202:\n                    description: Namespace deletion started\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/cloud/google/projects:\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - google\n            summary: Retrieves projects visible for the user identified by the secret id\n            operationId: ListProjects\n            description: Retrieves projects visible by the user represented by the secretId header from the google cloud\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n                -\n                    name: secretId\n                    in: query\n                    required: true\n                    description: Secret identification.\n                    schema:\n                        type: string\n            responses:\n                200:\n                    description: \"List of projects visible for the user\"\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/GoogleProjects'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/clusters/{id}/backupservice/enable:\n        post:\n            security:\n                - bearerAuth: []\n            tags:\n                - ark\n            summary: Enable ARK service\n            description: Enable ARK service\n            operationId: EnableARK\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n                - $ref: '#/components/parameters/clusterId'\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/EnableARKRequest'\n            responses:\n                200:\n                    description: ARK service deployed successfully\n                    content: { application/json: { schema: { $ref: '#/components/schemas/EnableARKResponse' } } }\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/clusters/{id}/backupservice/disable:\n        post:\n            security:\n                - bearerAuth: []\n            tags:\n                - ark\n            summary: Disable ARK service\n            description: Disable ARK service\n            operationId: DisableARK\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n                - $ref: '#/components/parameters/clusterId'\n            responses:\n                200:\n                    description: ARK service removed successfully\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/DisableARKResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/clusters/{id}/backupservice/status:\n        parameters:\n            - $ref: '#/components/parameters/orgId'\n            - $ref: '#/components/parameters/clusterId'\n\n        head:\n            security:\n                - bearerAuth: []\n            tags:\n                - ark\n            summary: Check ARK service status\n            description: Check ARK service status\n            operationId: CheckARKStatus\n            responses:\n                200:\n                    description: ARK service running\n                default:\n                    $ref: '#/components/responses/Error'\n\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - ark\n            summary: Check ARK service status\n            description: Check ARK service status\n            operationId: CheckARKStatusGET\n            responses:\n                200:\n                    description: ARK service running\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/BackupServiceStatusResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/backupbuckets:\n        parameters:\n            - $ref: '#/components/parameters/orgId'\n\n        post:\n            security:\n                - bearerAuth: []\n            tags:\n                - ark-buckets\n            summary: Create backup bucket\n            description: Create backup bucket\n            operationId: CreateBackupBucket\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/CreateBackupBucketRequest'\n            responses:\n                200:\n                    description: Backup bucket added successfully\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/CreateBackupBucketResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - ark-buckets\n            summary: List backup buckets\n            description: List backup buckets\n            operationId: ListBackupBuckets\n            responses:\n                200:\n                    description: All buckets listed\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ListBackupBucketsResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/backupbuckets/{bucketId}:\n        parameters:\n            - $ref: '#/components/parameters/orgId'\n            - { name: bucketId, in: path, required: true, description: ID of the bucket, schema: { type: integer } }\n\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - ark-buckets\n            summary: Get backup bucket by ID\n            description: Get backup bucket by ID\n            operationId: GetBackupBucket\n            responses:\n                200:\n                    description: Getting backup succeeded\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/GetBackupBucketResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n        delete:\n            security:\n                - bearerAuth: []\n            tags:\n                - ark-buckets\n            summary: Delete backup bucket by ID\n            description: Delete backup bucket by ID\n            operationId: DeleteBackupBucket\n            responses:\n                200:\n                    description: Deleting backup succeeded\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/DeleteBackupBucketResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/backupbuckets/sync:\n        put:\n            security:\n                - bearerAuth: []\n            tags:\n                - ark-buckets\n            summary: Sync backup buckets\n            description: Sync backup buckets\n            operationId: SyncBackupBucket\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n            responses:\n                200:\n                    description: Backup buckets synced successfully\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/backups:\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - ark-backups\n            summary: List ARK backups of an Organization\n            description: List ARK backups of an Organization\n            operationId: ListARKBackupsForOrganization\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n            responses:\n                200:\n                    description: All backups listed\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ListBackupsResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/backups/sync:\n        put:\n            security:\n                - bearerAuth: []\n            tags:\n                - ark-backups\n            summary: Sync ARK backups of an Organization\n            description: Sync ARK backups of an Organization\n            operationId: SyncOrgBackups\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n            responses:\n                200:\n                    description: Backups synced successfully\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/clusters/{id}/update:\n        parameters:\n            - $ref: '#/components/parameters/orgId'\n            - $ref: '#/components/parameters/clusterId'\n\n        put:\n            security:\n                - bearerAuth: []\n            tags:\n                - clusters\n            summary: Update an existing cluster\n            description: |\n                Update the settings of an existing cluster.\n                Changing some settings (like Kubernetes version) might trigger a rolling update.\n            operationId: UpdateCluster\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/UpdateClusterRequest'\n            responses:\n                202:\n                    description: Accepted\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/clusters/{id}/backups:\n        parameters:\n            - $ref: '#/components/parameters/orgId'\n            - $ref: '#/components/parameters/clusterId'\n\n        post:\n            security:\n                - bearerAuth: []\n            tags:\n                - ark-backups\n            summary: Create ARK backup\n            description: Create ARK backup of a cluster\n            operationId: CreateARKBackupOfACluster\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/CreateBackupRequest'\n            responses:\n                200:\n                    description: Backup created successfully\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/CreateBackupResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - ark-backups\n            summary: List ARK backups of a cluster\n            description: List ARK backups of a cluster\n            operationId: ListARKBackupsOfACluster\n            responses:\n                200:\n                    description: All backups listed\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ListBackupsResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/clusters/{id}/backups/sync:\n        put:\n            security:\n                - bearerAuth: []\n            tags:\n                - ark-backups\n            summary: Sync ARK backups of a cluster\n            description: Sync ARK backups of a cluster\n            operationId: SyncARKBackupsOfACluster\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n                - $ref: '#/components/parameters/clusterId'\n            responses:\n                200:\n                    description: Backups synced successfully\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/clusters/{id}/backups/{backupId}:\n        parameters:\n            - $ref: '#/components/parameters/orgId'\n            - $ref: '#/components/parameters/clusterId'\n            - { name: backupId, in: path, required: true, description: ID of the backup, schema: { type: integer } }\n\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - ark-backups\n            summary: Get ARK backup\n            description: Get ARK backup\n            operationId: GetARKBackup\n            responses:\n                200:\n                    description: Getting backup succeeded\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/GetBackupResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n        delete:\n            security:\n                - bearerAuth: []\n            tags:\n                - ark-backups\n            summary: Delete ARK backup\n            description: Delete ARK backup\n            operationId: DeleteARKBackup\n            responses:\n                200:\n                    description: Backup removed successfully\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/DeleteBackupResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/clusters/{id}/backups/{backupId}/logs:\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - ark-backups\n            summary: Get ARK backup logs\n            description: Get ARK backup logs\n            operationId: GetARKBackupLogs\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n                - $ref: '#/components/parameters/clusterId'\n                - { name: backupId, in: path, required: true, description: ID of the backup, schema: { type: integer } }\n            responses:\n                200:\n                    description: Getting backup logs succeeded\n                    content:\n                        text/plain:\n                            schema:\n                                type: string\n                                example: >\n                                    time=\"2018-09-10T00:23:33Z\" level=info msg=\"Not including resource\" groupResource=events logSource=\"pkg/restore/restore.go:124\"\n\n                                    time=\"2018-09-10T00:23:33Z\" level=info msg=\"Not including resource\" groupResource=nodes logSource=\"pkg/restore/restore.go:124\"\n\n                                    time=\"2018-09-10T00:23:33Z\" level=info msg=\"Not including resource\"\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/clusters/{id}/backups/{backupId}/download:\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - ark-backups\n            summary: Download ARK backup contents\n            description: Download ARK backup contents\n            operationId: DownloadARKBackupContents\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n                - $ref: '#/components/parameters/clusterId'\n                - { name: backupId, in: path, required: true, description: ID of the backup, schema: { type: integer } }\n            responses:\n                200:\n                    description: Getting backup contents succeeded\n                    content:\n                        application/x-gzip:\n                            schema:\n                                type: string\n                                format: file\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/clusters/{id}/schedules:\n        parameters:\n            - $ref: '#/components/parameters/orgId'\n            - $ref: '#/components/parameters/clusterId'\n\n        post:\n            security:\n                - bearerAuth: []\n            tags:\n                - ark-schedules\n            summary: Create ARK schedule\n            description: Create ARK schedule\n            operationId: CreateARKSchedule\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/CreateScheduleRequest'\n            responses:\n                200:\n                    description: Schedule created successfully\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/CreateScheduleResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - ark-schedules\n            summary: List ARK schedules\n            description: List ARK schedules\n            operationId: ListARKSchedules\n            responses:\n                200:\n                    description: Schedules listed successfully\n                    content: { application/json: { schema: { $ref: '#/components/schemas/ListSchedulesResponse' } } }\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/clusters/{id}/schedules/{scheduleName}:\n        parameters:\n            - $ref: '#/components/parameters/orgId'\n            - $ref: '#/components/parameters/clusterId'\n            - { name: scheduleName, in: path, required: true, description: Name of the schedule, schema: { type: string } }\n\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - ark-schedules\n            summary: Get ARK schedule\n            description: Get ARK schedule\n            operationId: GetARKSchedule\n            responses:\n                200:\n                    description: Schedule retrieved succeeded\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ScheduleResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n        delete:\n            security:\n                - bearerAuth: []\n            tags:\n                - ark-schedules\n            summary: Delete ARK schedule\n            description: Delete ARK schedule\n            operationId: DeleteARKSchedule\n            responses:\n                200:\n                    description: Schedule delete succeeded\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/DeleteScheduleResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/clusters/{id}/restores:\n        parameters:\n            -   $ref: '#/components/parameters/orgId'\n            -   $ref: '#/components/parameters/clusterId'\n\n        post:\n            security:\n                - bearerAuth: []\n            tags:\n                - ark-restores\n            summary: Create ARK restore\n            description: Create ARK restore\n            operationId: CreateARKRestore\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/CreateRestoreRequest'\n            responses:\n                200:\n                    description: Restore created successfully\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/CreateRestoreResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - ark-restores\n            summary: List ARK restores\n            description: List ARK restores\n            operationId: ListARKRestores\n            responses:\n                200:\n                    description: Restores listed successfully\n                    content: { application/json: { schema: { $ref: '#/components/schemas/ListRestoresResponse' } } }\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/clusters/{id}/restores/sync:\n        put:\n            security:\n                - bearerAuth: []\n            tags:\n                - ark-restores\n            summary: Sync ARK restores of a cluster\n            description: Sync ARK restores of a cluster\n            operationId: SyncARKRestoresOfACluster\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n                - $ref: '#/components/parameters/clusterId'\n            responses:\n                200:\n                    description: Restores synced successfully\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/clusters/{id}/restores/{restoreId}:\n        parameters:\n            - $ref: '#/components/parameters/orgId'\n            - $ref: '#/components/parameters/clusterId'\n            - { name: restoreId, in: path, required: true, description: ID of the restore, schema: { type: integer } }\n\n        get:\n            security:\n                - bearerAuth: []\n            tags: [ ark-restores ]\n            summary: Get ARK restore\n            description: Get ARK restore\n            operationId: GetARKRestore\n            responses:\n                200:\n                    description: Restore retrieved successfully\n                    content: { application/json: { schema: { $ref: '#/components/schemas/GetRestoreResponse' } } }\n                default:\n                    $ref: '#/components/responses/Error'\n\n        delete:\n            security:\n                - bearerAuth: []\n            tags: [ ark-restores ]\n            summary: Delete ARK restore\n            description: Delete ARK restore\n            operationId: DeleteARKRestore\n            responses:\n                200:\n                    description: Restore deleted successfully\n                    content: { application/json: { schema: { $ref: '#/components/schemas/DeleteRestoreResponse' } } }\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/clusters/{id}/restores/{restoreId}/results:\n        get:\n            security:\n                - bearerAuth: []\n            tags: [ ark-restores ]\n            summary: Get ARK restore results\n            description: Get ARK restore results\n            operationId: GetARKRestoreResuts\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n                - $ref: '#/components/parameters/clusterId'\n                - { name: restoreId, in: path, required: true, description: ID of the restore, schema: { type: integer } }\n            responses:\n                200:\n                    description: Restore retrieved successfully\n                    content: { application/json: { schema: { $ref: '#/components/schemas/GetRestoreResultsResponse' } } }\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgid}/clustergroups:\n        parameters:\n            - $ref: '#/components/parameters/orgId'\n\n        get:\n            security:\n                - bearerAuth: []\n            summary: List Cluster Groups of an Organization\n            tags:\n                - clustergroups\n            description: retrieve list of cluster groups of an organization\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: \"#/components/schemas/api.ClusterGroup\"\n                                type: array\n                default:\n                    $ref: '#/components/responses/Error'\n\n        post:\n            security:\n                -   bearerAuth: []\n            summary: Create Cluster Group\n            tags:\n                - clustergroups\n            description: create a group of clusters, joining clusters together with a name\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/api.CreateRequest\"\n                description: Create Cluster Group Request\n                required: true\n            responses:\n                201:\n                    description: Created\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/api.CreateResponse\"\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgid}/clustergroups/{clusterGroupId}:\n        parameters:\n            - $ref: '#/components/parameters/orgId'\n            - description: Cluster Group ID\n              in: path\n              name: clusterGroupId\n              required: true\n              schema:\n                  type: integer\n\n        delete:\n            security:\n                - bearerAuth: []\n            summary: Delete Cluster Group\n            tags:\n                - clustergroups\n            description: delete a cluster group, disable all enabled features, delete related deployments\n            responses:\n                200:\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                type: string\n                default:\n                    $ref: '#/components/responses/Error'\n\n        get:\n            security:\n                -   bearerAuth: []\n            summary: Get Cluster Group\n            tags:\n                - clustergroups\n            description: retrieve info about a cluster group, members, status of member clusters, features\n            responses:\n                200:\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/api.ClusterGroup\"\n                default:\n                    $ref: '#/components/responses/Error'\n\n        put:\n            security:\n                -   bearerAuth: []\n            summary: Update Cluster Group\n            tags:\n                - clustergroups\n            description: update name & member clusters for a cluster group\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/api.UpdateRequest\"\n                description: Update Cluster Group Request\n                required: true\n            responses:\n                202:\n                    description: Accepted\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/api.UpdateResponse\"\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgid}/clustergroups/{clusterGroupId}/deployments:\n        parameters:\n            - $ref: '#/components/parameters/orgId'\n            - description: Cluster Group ID\n              in: path\n              name: clusterGroupId\n              required: true\n              schema:\n                  type: integer\n\n        get:\n            security:\n                - bearerAuth: []\n            summary: Get All Deployments of a Cluster Group\n            tags:\n                - clustergroup deployments\n            description: retrieve all deployments from a cluster group\n            responses:\n                200:\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: \"#/components/schemas/deployment.ListDeploymentResponse\"\n                                type: array\n                default:\n                    $ref: '#/components/responses/Error'\n\n        post:\n            security:\n                - bearerAuth: []\n            summary: Create Cluster Group Deployment\n            tags:\n                - clustergroup deployments\n            description: creates a new cluster group deployment, installs or upgrades deployment on each member cluster accordingly\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/deployment.ClusterGroupDeployment\"\n                description: Deployment Create Request\n                required: true\n            responses:\n                201:\n                    description: Multi-cluster deployment has been created successfully. All install / upgrade operations on all targeted clusters returned with no errors.\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/deployment.CreateUpdateDeploymentResponse\"\n                207:\n                    $ref: \"#/components/responses/PartialFailure\"\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgid}/clustergroups/{clusterGroupId}/deployments/{deploymentName}:\n        parameters:\n            - $ref: '#/components/parameters/orgId'\n            - description: Cluster Group ID\n              in: path\n              name: clusterGroupId\n              required: true\n              schema:\n                type: integer\n            - description: release name of a cluster group deployment\n              in: path\n              name: deploymentName\n              required: true\n              schema:\n                type: string\n\n        delete:\n            security:\n                - bearerAuth: []\n            summary: Delete Cluster Group Deployment\n            tags:\n                - clustergroup deployments\n            description: deletes a cluster group deployment, also deleting deployments from member clusters\n            parameters:\n                - description: if true cluster group deployment gets deleted even if some deployments can not be deleted from each target cluster\n                  in: query\n                  name: force\n                  schema:\n                      type: boolean\n            responses:\n                202:\n                    description: Multi-cluster deployment has been deleted successfully. All delete\n                        operations on all targeted clusters returned with no errors.\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/deployment.TargetClusterStatus\"\n                207:\n                    $ref: \"#/components/responses/PartialFailure\"\n                default:\n                    $ref: '#/components/responses/Error'\n\n        get:\n            security:\n                -   bearerAuth: []\n            summary: Get Cluster Group Deployment\n            tags:\n                - clustergroup deployments\n            description: retrieve info about a cluster group deployment and it's status on each member cluster\n            responses:\n                200:\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/deployment.DeploymentInfo\"\n                default:\n                    $ref: '#/components/responses/Error'\n\n        put:\n            security:\n                -   bearerAuth: []\n            summary: Update Cluster Group Deployment\n            tags:\n                - clustergroup deployments\n            description: updates a cluster group deployment, installs or upgrades deployment on each member cluster accordingly\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/deployment.ClusterGroupDeployment\"\n                description: Deployment Update Request\n                required: true\n            responses:\n                202:\n                    description: Multi-cluster deployment has been updated successfully. All upgrade / install operations on all targeted clusters returned with no errors.\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/deployment.CreateUpdateDeploymentResponse\"\n                207:\n                    $ref: \"#/components/responses/PartialFailure\"\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgid}/clustergroups/{clusterGroupId}/deployments/{deploymentName}/sync:\n        put:\n            security:\n                - bearerAuth: []\n            summary: Synchronize Cluster Group Deployment\n            tags:\n                - clustergroup deployments\n            description: install / upgrade deployment to target clusters where deployment is not found or has wrong\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n                - description: Cluster Group ID\n                  in: path\n                  name: clusterGroupId\n                  required: true\n                  schema:\n                      type: integer\n                - description: release name of a cluster group deployment\n                  in: path\n                  name: deploymentName\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                202:\n                    description: Multi-cluster deployment has been synced successfully. All upgrade / install operations on all targeted clusters returned with no errors.\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/deployment.TargetClusterStatus\"\n                207:\n                    $ref: \"#/components/responses/PartialFailure\"\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgid}/clustergroups/{clusterGroupId}/features:\n        get:\n            security:\n                -   bearerAuth: []\n            summary: Get All Features of Cluster Group\n            tags:\n                - clustergroup features\n            description: retrieve info about a cluster group feature and it's status on each member cluster\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n                - description: Cluster Group ID\n                  in: path\n                  name: clusterGroupId\n                  required: true\n                  schema:\n                      type: integer\n            responses:\n                200:\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: \"#/components/schemas/api.FeatureResponse\"\n                                type: array\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgid}/clustergroups/{clusterGroupId}/features/{featureName}:\n        parameters:\n            - $ref: '#/components/parameters/orgId'\n            - description: Cluster Group ID\n              in: path\n              name: clusterGroupId\n              required: true\n              schema:\n                  type: integer\n            - description: Name of the feature\n              in: path\n              name: featureName\n              required: true\n              schema:\n                  type: string\n\n        delete:\n            security:\n                -   bearerAuth: []\n            summary: Disable Feature of Cluster Group\n            tags:\n                - clustergroup features\n            description: disable feature on all members of a cluster group\n            responses:\n                200:\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                type: string\n                default:\n                    $ref: '#/components/responses/Error'\n\n        get:\n            security:\n                -   bearerAuth: []\n            summary: Get Feature of Cluster Group\n            tags:\n                - clustergroup features\n            description: retrieve info about a cluster group feature and it's status on each member cluster\n            responses:\n                200:\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/api.FeatureResponse\"\n                default:\n                    $ref: '#/components/responses/Error'\n\n        post:\n            security:\n                -   bearerAuth: []\n            summary: Enable Feature of Cluster Group\n            tags:\n                - clustergroup features\n            description: enable feature on all members of a cluster group\n            requestBody:\n                $ref: \"#/components/requestBodies/api.FeatureRequest\"\n            responses:\n                202:\n                    description: Accepted\n                    content:\n                        application/json:\n                            schema:\n                                type: string\n                default:\n                    $ref: '#/components/responses/Error'\n\n        put:\n            security:\n                -   bearerAuth: []\n            summary: Update Feature of Cluster Group\n            tags:\n                - clustergroup features\n            description: update properties of a feature\n            requestBody:\n                $ref: \"#/components/requestBodies/api.FeatureRequest\"\n            responses:\n                200:\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                type: string\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/clusters/{id}/services:\n        get:\n            operationId: ListIntegratedServices\n            summary: List enabled integrated services of a cluster\n            tags:\n                - integrated services\n            security:\n                - bearerAuth: []\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n                - $ref: '#/components/parameters/clusterId'\n            responses:\n                200:\n                    description: Success\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/IntegratedServiceList\"\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/clusters/{id}/services/{serviceName}:\n        parameters:\n            - $ref: '#/components/parameters/orgId'\n            - $ref: '#/components/parameters/clusterId'\n            -\n                name: serviceName\n                in: path\n                description: service name\n                required: true\n                schema:\n                    type: string\n\n        get:\n            operationId: IntegratedServiceDetails\n            summary: Get details of an integrated service\n            tags:\n                - integrated services\n            security:\n                - bearerAuth: []\n            responses:\n                200:\n                    description: Success\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/IntegratedServiceDetails\"\n                default:\n                    $ref: '#/components/responses/Error'\n\n        post:\n            operationId: ActivateIntegratedService\n            summary: Activate an integrated service\n            tags:\n                - integrated services\n            security:\n                - bearerAuth: []\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/ActivateIntegratedServiceRequest\"\n            responses:\n                202:\n                    description: Accepted\n                default:\n                    $ref: '#/components/responses/Error'\n\n        delete:\n            operationId: DeactivateIntegratedService\n            summary: Deactivate an integrated service\n            tags:\n                - integrated services\n            security:\n                - bearerAuth: []\n            responses:\n                204:\n                    description: No Content\n                default:\n                    $ref: '#/components/responses/Error'\n\n        put:\n            operationId: UpdateIntegratedService\n            summary: Update an integrated service\n            tags:\n                - integrated services\n            security:\n                - bearerAuth: []\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/UpdateIntegratedServiceRequest\"\n            responses:\n                202:\n                    description: Accepted\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/clusters/{id}/nodepools:\n        parameters:\n            - $ref: '#/components/parameters/orgId'\n            - $ref: '#/components/parameters/clusterId'\n\n        post:\n            operationId: CreateNodePool\n            summary: Create new node pool\n            description: Add new node pool to a cluster\n            security:\n                 - bearerAuth: []\n            tags:\n                - clusters\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/CreateNodePoolRequest'\n            responses:\n                202:\n                    description: Node pool creation in progress\n                default:\n                    $ref: '#/components/responses/Error'\n\n        get:\n            operationId: ListNodePools\n            summary: List node pools\n            security:\n                - bearerAuth: []\n            tags:\n                - clusters\n            responses:\n                200:\n                    description: Node pool list\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ListNodePoolsResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/clusters/{id}/nodepools/{name}:\n        parameters:\n            - $ref: '#/components/parameters/orgId'\n            - $ref: '#/components/parameters/clusterId'\n            -\n                name: name\n                in: path\n                description: Node pool name\n                required: true\n                schema:\n                    type: string\n\n        delete:\n            operationId: DeleteNodePool\n            summary: Delete a node pool\n            description: Delete a node pool from a cluster.\n            security:\n                - bearerAuth: []\n            tags:\n                - clusters\n            responses:\n                202:\n                    description: Node pool delete in progress\n                204:\n                    description: Node pool deleted\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/clusters/{id}/nodepools/{name}/update:\n        post:\n            operationId: UpdateNodePool\n            summary: Update an existing node pool\n            security:\n                - bearerAuth: []\n            tags:\n                - clusters\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n                - $ref: '#/components/parameters/clusterId'\n                -\n                    name: name\n                    in: path\n                    description: Node pool name\n                    required: true\n                    schema:\n                        type: string\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/UpdateNodePoolRequest'\n            responses:\n                202:\n                    description: Node pool update in progress\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/UpdateNodePoolResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/clusters/{id}/nodepools/{name}/cancel-update/{processId}:\n        post:\n            operationId: CancelNodePoolUpdate\n            summary: Cancel a running node pool update process\n            security:\n                - bearerAuth: []\n            tags:\n                - clusters\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n                - $ref: '#/components/parameters/clusterId'\n                -\n                    name: name\n                    in: path\n                    description: Node pool name\n                    required: true\n                    schema:\n                        type: string\n                -\n                    name: processId\n                    in: path\n                    description: Node pool update process ID\n                    required: true\n                    schema:\n                        type: string\n            responses:\n                202:\n                    description: Node pool update is cancelled\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/clusters/{id}/nodepool-labels:\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - clusters\n            summary: List cluster nodepool labels\n            operationId: ListNodepoolLabels\n            description: List cluster nodepool labels\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n                - $ref: '#/components/parameters/clusterId'\n            responses:\n                200:\n                    description: \"Nodepool labels listed\"\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ListNodepoolLabelsResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/processes:\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - processes\n            summary: List processes in Pipeline\n            operationId: ListProcesses\n            description: List processes in Pipeline\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n                -\n                    name: type\n                    in: query\n                    description: Type of processes to query\n                    schema:\n                        type: string\n                        enum: [cluster-upgrade]\n                -\n                    name: resourceId\n                    in: query\n                    description: The id of the resource to list processes for\n                    schema:\n                        type: string\n                -\n                    name: parentId\n                    in: query\n                    description: The id of the parent process\n                    schema:\n                        type: string\n                -\n                    name: status\n                    in: query\n                    description: The status of processes to query\n                    schema:\n                        $ref: '#/components/schemas/ProcessStatus'\n            responses:\n                200:\n                    description: \"Processes listed\"\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ListProcessesResponse'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/processes/{id}:\n        get:\n            security:\n                - bearerAuth: []\n            tags:\n                - processes\n            summary: Get a process in Pipeline\n            operationId: GetProcess\n            description: Get a process in Pipeline\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n                -\n                    name: id\n                    in: path\n                    description: Process id\n                    required: true\n                    schema:\n                        type: string\n            responses:\n                200:\n                    description: \"The process\"\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Process'\n                default:\n                    $ref: '#/components/responses/Error'\n\n    /api/v1/orgs/{orgId}/processes/{id}/cancel:\n        post:\n            security:\n                - bearerAuth: []\n            tags:\n                - processes\n            summary: Cancel a process in Pipeline\n            operationId: CancelProcess\n            description: Cancel a process in Pipeline\n            parameters:\n                - $ref: '#/components/parameters/orgId'\n                -\n                    name: id\n                    in: path\n                    description: Process id\n                    required: true\n                    schema:\n                        type: string\n            responses:\n                202:\n                    description: \"The process is being canceled\"\n                default:\n                    $ref: '#/components/responses/Error'\n\ncomponents:\n    securitySchemes:\n        bearerAuth:\n            type: http\n            scheme: bearer\n            bearerFormat: JWT\n\n    parameters:\n        orgId:\n            name: orgId\n            in: path\n            required: true\n            description: Organization identifier\n            schema:\n                type: integer\n        clusterId:\n            name: id\n            in: path\n            description: Cluster identifier\n            required: true\n            schema:\n                type: integer\n\n    requestBodies:\n        api.FeatureRequest:\n            content:\n                application/json:\n                    schema:\n                        $ref: \"#/components/schemas/api.FeatureRequest\"\n            description: Feature properties\n            required: true\n\n    responses:\n        PartialFailure:\n            description: Partial failure\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/CommonError'\n                    examples:\n                        PartialFailure:\n                            value:\n                                code: 207\n                                message: \"Partial failure\"\n                                error: \"there was as least one failure on one of the target clusters\"\n\n        Error:\n            description: Internal server error\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/CommonError'\n                    examples:\n                        BadRequest:\n                            value:\n                                code: 400\n                                message: Invalid request\n                                error: Failed to parse request.\n                        Unauthorized:\n                            value:\n                                code: 401\n                                message: Unauthorized\n                                error: Unauthorized\n                        OrganizationNotFound:\n                            value:\n                                code: 404\n                                message: Organization not found\n                                error: Organization not found\n                        SecretAlreadyExists:\n                            value:\n                                code: 409\n                                message: Secret already exists\n                                error: Secret already exists\n                        InternalServerError:\n                            value:\n                                code: 500\n                                message: Something went wrong\n                                error: Something went wrong\n                application/problem+json:\n                    schema:\n                        $ref: '#/components/schemas/Error'\n                    examples:\n                        BadRequest:\n                            value:\n                                type: about:blank\n                                title: Invalid request\n                                status: 400\n                                detail: Failed to parse request.\n                                instance: \"\"\n                                code: 400\n                                message: Failed to parse request.\n                                error: Invalid request\n                        Unauthorized:\n                            value:\n                                type: about:blank\n                                title: Unauthorized\n                                status: 401\n                                detail: You are unauthorized to access this resource.\n                                instance: \"\"\n                                code: 401\n                                message: You are unauthorized to access this resource.\n                                error: Unauthorized\n                        AccessDenied:\n                            value:\n                                type: about:blank\n                                title: Access denied\n                                status: 403\n                                detail: You are unauthorized to perform this action access this resource.\n                                instance: \"\"\n                                code: 403\n                                message: You are unauthorized to perform this action access this resource.\n                                error: Access denied\n                        OrganizationNotFound:\n                            value:\n                                type: about:blank\n                                title: Organization not found\n                                status: 404\n                                detail: Organization not found\n                                instance: \"\"\n                                code: 404\n                                message: Organization not found\n                                error: Organization not found\n                        SecretAlreadyExists:\n                            value:\n                                type: about:blank\n                                title: Secret already exists\n                                status: 409\n                                detail: Secret already exists\n                                instance: \"\"\n                                code: 409\n                                message: Secret already exists\n                                error: Secret already exists\n                        InternalServerError:\n                            value:\n                                type: about:blank\n                                title: Internal server error\n                                status: 500\n                                detail: Something went wrong\n                                instance: \"\"\n                                code: 500\n                                message: Something went wrong\n                                error: Internal server error\n\n    schemas:\n        Error:\n            description: Generic error object.\n            type: object\n            properties:\n                type:\n                    description: A URI reference [RFC3986] that identifies the problem type.\n                    type: string\n                    format: uri\n                    example: about:blank\n                title:\n                    description: A short, human-readable summary of the problem type.\n                    type: string\n                    example: Not found\n                status:\n                    description: The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n                    type: integer\n                    example: 404\n                detail:\n                    description: A human-readable explanation specific to this occurrence of the problem.\n                    type: string\n                    example: The requested resource cannot be found\n                instance:\n                    description: A URI reference that identifies the specific occurrence of the problem.\n                    type: string\n                    format: uri\n                    example: /path/to/resource\n\n                # Deprecated fields\n                code:\n                    description: \"HTTP status code. Deprecated: use status instead.\"\n                    type: integer\n                    deprecated: true\n                message:\n                    description: \"Error message. Deprecated: use detail instead.\"\n                    type: string\n                    deprecated: true\n                error:\n                    description: \"Error message. Deprecated: use title instead.\"\n                    type: string\n                    deprecated: true\n\n        CommonError:\n            description: \"Generic error object. Deprecated: use Error schema instead.\"\n            type: object\n            deprecated: true\n            properties:\n                code:\n                    description: HTTP status code\n                    type: integer\n                message:\n                    description: Error message\n                    type: string\n                error:\n                    description: Error message\n                    type: string\n\n        VersionResponse:\n            description: Pipeline build and deployment info\n            type: object\n            properties:\n                \"version\":\n                    type: string\n                \"commit_hash\":\n                    type: string\n                \"build_date\":\n                    type: string\n                \"go_version\":\n                    type: string\n                \"os\":\n                    type: string\n                \"arch\":\n                    type: string\n                \"compiler\":\n                    type: string\n                \"instance_uuid\":\n                    type: string\n\n        RequestedResources:\n            type: object\n            properties:\n                sumCpu:\n                    type: integer\n                    example: 8\n                    description: Total CPU requested for the cluster\n                sumMem:\n                    type: integer\n                    example: 32\n                    description: Total memory requested for the cluster (GB)\n                filters:\n                    type: array\n                    items:\n                        type: string\n                sameSize:\n                    type: boolean\n                    example: true\n                    description: If true, recommended instance types will have a similar size\n                onDemandPct:\n                    type: integer\n                    example: 10\n                    description: Percentage of regular (on-demand) nodes in the recommended cluster\n                minNodes:\n                    type: integer\n                    example: 1\n                    description: Minimum number of nodes in the recommended cluster\n                maxNodes:\n                    type: integer\n                    example: 3\n                    description: Maximum number of nodes in the recommended cluster\n\n        CreateClusterRequest:\n            type: object\n            required:\n                - name\n                - location\n                - cloud\n                - properties\n            properties:\n                name:\n                    type: string\n                    example: \"gkecluster-pipelineuser-123\"\n                location:\n                    type: string\n                    example: \"us-central1-a\"\n                cloud:\n                    type: string\n                    example: \"google\"\n                secretId:\n                    type: string\n                    example: \"62bc3c75-91fb-4670-bad4-24b401a9deac\"\n                secretIds:\n                    type: array\n                    items:\n                        type: string\n                    example: [\"62bc3c75-91fb-4670-bad4-24b401a9deac\", \"4378ae32-2355-12ed-b984-1234567804ed\"]\n                secretName:\n                    type: string\n                    example: \"my-aws-secret\"\n                postHooks:\n                    type: object\n                    # additionalProperties:\n                        # oneOf:\n                        #     -\n                        #         $ref: '#/components/schemas/BasePostHook'\n                    example:\n                        InstallIngressController:\n                properties:\n                    type: object\n                    # additionalProperties:\n                    # oneOf:\n                    #     -\n                    #         $ref: '#/components/schemas/CreateAKSProperties'\n                    #     -\n                    #         $ref: '#/components/schemas/CreateGKEProperties'\n                    #     -\n                    #         $ref: '#/components/schemas/CreateEKSProperties'\n                    #     -\n                    #         $ref: '#/components/schemas/CreatePKEProperties'\n                    example:\n                        gke:\n                            master:\n                                version: \"1.8.7-gke.1\"\n                            nodePools:\n                                pool1:\n                                    count: 1\n                                    instanceType: \"n1-standard-2\"\n                            nodeVersion: \"1.8.7-gke.1\"\n\n        CreateClusterRequestBase:\n            type: object\n            required:\n                - name\n                - type\n            properties:\n                name:\n                    type: string\n                    example: \"my-azure-cluster-123\"\n                secretId:\n                    type: string\n                    example: \"62bc3c75-91fb-4670-bad4-24b401a9deac\"\n                secretName:\n                    type: string\n                    example: \"my-aws-secret\"\n                sshSecretId:\n                    type: string\n                    example: \"62bc3c75-91fb-4670-bad4-24b401a9deac\"\n                type:\n                    type: string\n\n        CreatePKEClusterKubernetes:\n            type: object\n            required:\n                - version\n            properties:\n                version:\n                    type: string\n                    example: \"v1.12.2\"\n                rbac:\n                    type: boolean\n                    example: true\n                oidc:\n                    type: object\n                    properties:\n                        enabled:\n                            type: boolean\n                            example: true\n                cri:\n                    type: object\n                    properties:\n                        runtime:\n                            type: string\n                        runtimeConfig:\n                            type: object\n                network:\n                    $ref: '#/components/schemas/CreatePKEClusterKubernetesNetwork'\n\n        CreatePKEClusterKubernetesNetwork:\n            type: object\n            properties:\n                serviceCIDR:\n                    type: string\n                    example: \"10.32.0.0/24\"\n                podCIDR:\n                    type: string\n                    example: \"10.200.0.0/16\"\n                provider:\n                    type: string\n                    enum:\n                        - weave\n                        - calico\n                        - cilium\n                providerConfig:\n                    type: object\n\n\n        CreatePKEClusterRequestBase:\n            allOf:\n                - $ref: '#/components/schemas/CreateClusterRequestBase'\n                - type: object\n                  required:\n                        - kubernetes\n                  properties:\n                        kubernetes:\n                            $ref: '#/components/schemas/CreatePKEClusterKubernetes'\n                        proxy:\n                            $ref: '#/components/schemas/PKEClusterHTTPProxy'\n\n        PKEClusterHTTPProxy:\n            type: object\n            properties:\n                http:\n                    $ref: '#/components/schemas/PKEClusterHTTPProxyOptions'\n                https:\n                    $ref: '#/components/schemas/PKEClusterHTTPProxyOptions'\n                exceptions:\n                    type: array\n                    items:\n                        type: string\n                        example: \".example.org\"\n\n        PKEClusterHTTPProxyOptions:\n            type: object\n            required:\n                - host\n            properties:\n                host:\n                    description: \"host of the proxy\"\n                    type: string\n                    example: \"proxy.example.org\"\n                port:\n                    description: \"port the proxy is available on\"\n                    type: integer\n                    minimum: 0\n                    maximum: 65535\n                    example: 12345\n                secretId:\n                    description: \"ID of the secret containing the username and password for the proxy\"\n                    type: string\n                scheme:\n                    description: \"Scheme of the proxy\"\n                    type: string\n\n        CreatePKEOnAzureClusterRequest:\n            allOf:\n                - $ref: '#/components/schemas/CreatePKEClusterRequestBase'\n                - type: object\n                  required:\n                        - resourceGroup\n                  properties:\n                        location:\n                            type: string\n                            description: \"Non-existent resources will be created in this location. Existing resources that must have the same location as the cluster will be validated against this.\"\n                            example: \"westeurope\"\n                        resourceGroup:\n                            type: string\n                            description: \"Required resources will be created in this resource group.\"\n                            example: \"my-resource-group-1\"\n                        network:\n                            $ref: '#/components/schemas/PKEOnAzureClusterNetwork'\n                        accessPoints:\n                            type: array\n                            items:\n                                type: string\n                                enum: [private, public]\n                            description: List of access points (i.e. load balancers, floating IPs) to be created for the cluster. Access points are implemented using cloud provider specific resources.\n                        apiServerAccessPoints:\n                            type: array\n                            items:\n                                type: string\n                                enum: [private, public]\n                            description: List of access point references for the API server; currently, public and private are the only valid values\n                        nodepools:\n                            type: array\n                            items:\n                                $ref: '#/components/schemas/PKEOnAzureNodePool'\n\n        PKEOnAzureClusterNetwork:\n            type: object\n            properties:\n                name:\n                    type: string\n                    example: \"my-azure-virtual-network\"\n                cidr:\n                    type: string\n                    description: \"When referencing an already existing virtual network this field does not need to be specified.\"\n                    example: \"10.0.0.0/16\"\n\n        PKEOnAzureNodePool:\n            type: object\n            required:\n                - name\n                - roles\n                - instanceType\n            properties:\n                name:\n                    type: string\n                roles:\n                    type: array\n                    items:\n                        type: string\n                        enum:\n                            - master\n                            - system\n                            - worker\n                labels:\n                    type: object\n                    additionalProperties:\n                        type: string\n                subnet:\n                    type: object\n                    properties:\n                        name:\n                            type: string\n                            example: \"my-azure-subnet\"\n                        cidr:\n                            type: string\n                            description: \"When referencing an already existing subnetwork this field does not need to be specified.\"\n                            example: \"10.0.0.0/24\"\n                zones:\n                    type: array\n                    items:\n                        type: string\n                        enum:\n                            - \"1\"\n                            - \"2\"\n                            - \"3\"\n                    example: [\"1\", \"3\"]\n                autoscaling:\n                    type: boolean\n                minCount:\n                    type: integer\n                    minimum: 1\n                maxCount:\n                    type: integer\n                    minimum: 1\n                count:\n                    type: integer\n                    minimum: 1\n                instanceType:\n                    type: string\n                    example: \"Standard_B2ms\"\n\n                    #######\n\n        CreatePKEOnVsphereClusterRequest:\n            allOf:\n                - $ref: '#/components/schemas/CreatePKEClusterRequestBase'\n                - type: object\n                  required:\n                        - resourceGroup\n                  properties:\n                        storageSecretId:\n                            type: string\n                            example: \"62bc3c75-91fb-4670-bad4-24b401a9deac\"\n                            description: \"Secret ID used to setup VSphere storage classes. Overrides the default settings in main cluster secret.\"\n                        storageSecretName:\n                            type: string\n                            example: \"my-vsphere-storage-secret\"\n                            description: \"Secret name used to setup VSphere storage classes. Overrides default value from the main cluster secret.\"\n                        folder:\n                            type: string\n                            description: \"Folder to create nodes in. Overrides default value from the main cluster secret.\"\n                            example:\n                               - simple:\n                                     value: \"my-folder\"\n                                     summary: \"The name of the folder anywhere in the hierarchy when it's unambiguous.\"\n                               - absolute:\n                                     value: \"/Datacenter/vm/my-folder\"\n                                     summary: \"Absolute path to the folder. Most vSphere installations use paths prefixed with /Datacenter/vm/.\"\n                        datastore:\n                            type: string\n                            description: \"Name of datastore or datastore cluster to place VM disks on. Overrides default value from the main cluster secret.\"\n                            example: Datastore-cluster\n                        resourcePool:\n                            type: string\n                            description: \"Virtual machines will be created in this resource pool. Overrides default value from the main cluster secret.\"\n                            example: \"my-resource-pool\"\n                        nodepools:\n                            type: array\n                            items:\n                                $ref: '#/components/schemas/PKEOnVsphereNodePool'\n                        loadBalancerIPRange:\n                            type: string\n                            example: \"192.168.23.150-192.168.23.180\"\n                            description: \"IPv4 range to allocate addresses for LoadBalancer Services (MetalLB)\"\n\n        PKEOnVsphereNodePool:\n            type: object\n            required:\n                - name\n                - roles\n                - vcpu\n                - ram\n            properties:\n                name:\n                    type: string\n                roles:\n                    type: array\n                    items:\n                        type: string\n                        enum:\n                            - master\n                            - system\n                            - worker\n                labels:\n                    type: object\n                    additionalProperties:\n                        type: string\n                size:\n                    type: integer\n                    minimum: 1\n                vcpu:\n                    type: integer\n                    example: 2\n                    description: Number of VCPUs to attach to each node.\n                ram:\n                    type: integer\n                    example: 2048\n                    description: MiBs of RAM to attach to each node.\n                template:\n                    type: string\n                    description: \"Name of VM template available on vSphere to clone as the base of nodes. Overrides default value from the main cluster secret.\"\n                    example:\n                        - simple:\n                              value: \"centos-7-pke-201910021808\"\n                              summary: \"Name of template to use when it's unambiguous.\"\n                        - absolute:\n                              value: \"/Datacenter/vm/centos-7-pke-201910021808\"\n                adminUsername:\n                    type: string\n                    description: \"Name of admin user to deploy the generated SSH public key for. No key will be deployed if omitted.\"\n                    example: root\n\n        CreateClusterRequestV2:\n            allOf:\n                # Note: in OpenAPI generator 4.3.1 single reference\n                # allOf/anyOf/oneOf schemas are generating empty Golang model\n                # types. The workaround is to add a second reference which does\n                # not modify the actual structure of the resulting type by using\n                # duplicate fields or even duplicate schemas.\n                #\n                # Issue:\n                # https://github.com/OpenAPITools/openapi-generator/issues/2164\n                #\n                # Pull request:\n                # https://github.com/OpenAPITools/openapi-generator/pull/2897\n                - $ref: '#/components/schemas/CreateClusterRequestBase'\n                - $ref: '#/components/schemas/CreateClusterRequestBase'\n            # oneOf:\n            #     - $ref: '#/components/schemas/CreatePKEOnAzureClusterRequest'\n            #     - $ref: '#/components/schemas/CreatePKEOnVsphereClusterRequest'\n            # discriminator:\n            #     propertyName: type\n            #     mapping:\n            #         'pke-on-azure': '#/components/schemas/CreatePKEOnAzureClusterRequest'\n            #         'pke-on-vsphere': '#/components/schemas/CreatePKEOnVsphereClusterRequest'\n\n        CreateNodePoolRequest:\n            oneOf:\n                - $ref: '#/components/schemas/NodePool'\n                - $ref: '#/components/schemas/NodePools'\n\n        NodePool:\n            oneOf:\n                # Note: in OpenAPI generator 4.3.1 single reference\n                # allOf/anyOf/oneOf schemas are generating empty Golang model\n                # types. The workaround is to add a second reference which does\n                # not modify the actual structure of the resulting type by using\n                # duplicate fields or even duplicate schemas.\n                #\n                # Issue:\n                # https://github.com/OpenAPITools/openapi-generator/issues/2164\n                #\n                # Pull request:\n                # https://github.com/OpenAPITools/openapi-generator/pull/2897\n                - $ref: '#/components/schemas/EksNodePool'\n                - $ref: '#/components/schemas/EksNodePool'\n\n        NodePools:\n            description: An associative collection of node pool objects keyed by their name.\n            properties:\n                nodePools:\n                    type: object\n                    additionalProperties:\n                        $ref: '#/components/schemas/NodePool'\n            type: object\n\n        GenericNodePool:\n            description: Generic node pool object for all cluster distributions.\n            type: object\n            required:\n                - name\n                - size\n            properties:\n                name:\n                    description: Node pool name.\n                    type: string\n                size:\n                    description: Node pool size.\n                    type: integer\n                labels:\n                    description: Node pool labels.\n                    type: object\n                    additionalProperties:\n                        type: string\n                    example:\n                        example.io/label1: value1\n\n        NodePoolAutoScaling:\n            description: Node pool auto scaling settings.\n            type: object\n            required:\n                - minSize\n                - maxSize\n            properties:\n                enabled:\n                    description: Enable node pool autoscaling.\n                    type: boolean\n                minSize:\n                    description: Minimum node pool size.\n                    type: integer\n                    minimum: 0\n                    example: 1\n                maxSize:\n                    description: Maximum node pool size.\n                    type: integer\n                    example: 5\n\n        EKSAuthConfig:\n            type: object\n            properties:\n                mapRoles:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/EKSAuthConfigRoles'\n                mapUsers:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/EKSAuthConfigUsers'\n                mapAccounts:\n                    type: array\n                    items:\n                        type: string\n\n        EKSAuthConfigUsers:\n            type: object\n            properties:\n                groups:\n                    type: array\n                    items:\n                        type: string\n                username:\n                    type: string\n                userarn:\n                    type: string\n\n        EKSAuthConfigRoles:\n            type: object\n            properties:\n                groups:\n                    type: array\n                    items:\n                        type: string\n                username:\n                    type: string\n                rolearn:\n                    type: string\n\n        EKSEncryptionConfig:\n            description: EKS encryption configuration object describing an encryption provider and the corresponding resources to encrypt. More information can be found at https://docs.aws.amazon.com/eks/latest/APIReference/API_EncryptionConfig.html.\n            example: |\n                {\n                    \"provider\": {\n                        \"keyARN\": \"arn:aws:kms:<REGION>:000000000000:key/00000000-0000-0000-0000-000000000000\"\n                    },\n                    \"resources\": [\n                        \"secrets\"\n                    ]\n                }\n            properties:\n                provider:\n                    $ref: '#/components/schemas/EKSEncryptionConfigProvider'\n                resources:\n                    description: Resource kinds to encrypt with the corresponding encryption provider.\n                    example: |\n                        [\n                            \"secrets\"\n                        ]\n                    items:\n                        description: Resource kind to encrypt.\n                        example: secrets\n                        type: string\n                    type: array\n            type: object\n\n        EKSEncryptionConfigProvider:\n            description: EKS encryption provider.\n            example: |\n                {\n                    \"keyARN\": \"arn:aws:kms:<REGION>:000000000000:key/00000000-0000-0000-0000-000000000000\"\n                }\n            properties:\n                keyARN:\n                    description: A customer master key to use for encryption. More information can be found at https://docs.aws.amazon.com/kms/latest/developerguide/create-keys.html.\n                    example: arn:aws:kms:<REGION>:000000000000:key/00000000-0000-0000-0000-000000000000\n                    type: string\n            type: object\n\n        # Note: slightly different type from `EKSNodePool`, example differences:\n        #\n        # - `size (integer)` >-< `count (integer)`,\n        #\n        # - `autoscaling (NodePoolAutoscaling) >-<`autoscaling (bool)`\n        EksNodePool:\n            description: Node pool object for an EKS cluster.\n            type: object\n            allOf:\n                - $ref: '#/components/schemas/GenericNodePool'\n                -\n                    type: object\n                    required:\n                        - instanceType\n                    properties:\n                        autoscaling:\n                            $ref: '#/components/schemas/NodePoolAutoScaling'\n                        volumeEncryption:\n                            $ref: '#/components/schemas/EKSNodePoolVolumeEncryption'\n                        volumeSize:\n                            description: Size of the EBS volume in GiBs of the nodes in the pool.\n                            type: integer\n                            example: 50\n                        volumeType:\n                            description: Type of the EBS volume of the nodes in the pool (default gp3).\n                            type: string\n                            example: gp3\n                        instanceType:\n                            description: Machine instance type.\n                            type: string\n                            example: m4.xlarge\n                        image:\n                            description: Instance AMI.\n                            type: string\n                            example: ami-06d1667f\n                        spotPrice:\n                            description: The upper limit price for the requested spot instance. If this field is left empty or 0 passed in on-demand instances used instead of spot instances.\n                            type: string\n                            example: \"0.2\"\n                        subnetId:\n                            type: string\n                            example: \"subnet-xxxxxxxxxxxxxx\"\n                        securityGroups:\n                            description: List of additional custom security groups for all nodes in the pool.\n                            type: array\n                            items:\n                                type: string\n                            example: [\"sg-00000xxxx0000xxx1\", \"sg-00000xxxx0000xxx2\"]\n                        useInstanceStore:\n                            description: Setup available instance stores (NVMe disks) to use for Kubelet root if available. As a result emptyDir volumes will be provisioned on local instance storage disks. You can check out available instance storages here https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#instance-store-volumes.\n                            type: boolean\n\n        EKSNodePoolVolumeEncryption:\n            description: Encryption details of the node volumes in an EKS node pool.\n            example: |\n                {\n                    \"enabled\": true,\n                    \"encryptionKeyARN\": \"arn:aws:kms:<REGION>:000000000000:key/00000000-0000-0000-0000-000000000000\"\n                }\n            nullable: true\n            properties:\n                enabled:\n                    description: Indicator of encrypted node pool node volumes.\n                    example: true\n                    type: boolean\n                encryptionKeyARN:\n                    description: KMS key ARN to use for node volume encryption.\n                    example: arn:aws:kms:<REGION>:000000000000:key/00000000-0000-0000-0000-000000000000\n                    type: string\n            required:\n                - enabled # Note: to avoid `omitempty` in generation.\n            type: object\n\n        UpdateNodePoolRequest:\n            oneOf:\n                - $ref: '#/components/schemas/EksUpdateNodePoolRequest'\n                - $ref: '#/components/schemas/PkeAwsUpdateNodePoolRequest'\n\n        UpdateNodePoolResponse:\n            type: object\n            properties:\n                processId:\n                    description: Node pool update process ID.\n                    type: string\n\n        ListNodePoolsResponse:\n            type: array\n            items:\n                $ref: '#/components/schemas/NodePoolSummary'\n\n\n        ReportPKENodeStatusResponse:\n            type: object\n            properties:\n                processId:\n                    description: ID of the registered process\n                    type: string\n\n        NodePoolSummary:\n            allOf:\n                - $ref: '#/components/schemas/NodePool'\n                - $ref: '#/components/schemas/NodePoolStatusInformation'\n            description: A summary of information about the node pool.\n            type: object\n\n        NodePoolStatusInformation:\n            description: Current status and its reason of the node pool.\n            properties:\n                status:\n                    description: Current status of the node pool.\n                    example: ERROR\n                    type: string\n                statusMessage:\n                    description: Details and reasoning about the status value.\n                    example: \"Creating node pool failed: the specified volume size is invalid.\"\n                    type: string\n            type: object\n\n        BaseUpdateNodePoolRequest:\n            description: Base node pool update request object for all cluster distributions.\n            type: object\n            required:\n                - size\n            properties:\n                size:\n                    description: Node pool size.\n                    type: integer\n                labels:\n                    description: Node pool labels.\n                    type: object\n                    additionalProperties:\n                        type: string\n                    example:\n                        example.io/label1: value1\n\n        EksUpdateNodePoolRequest:\n            description: Node pool update request object for an EKS cluster.\n            type: object\n            allOf:\n                - $ref: '#/components/schemas/BaseUpdateNodePoolRequest'\n                -\n                    type: object\n                    properties:\n                        autoscaling:\n                            $ref: '#/components/schemas/NodePoolAutoScaling'\n                        volumeEncryption:\n                            $ref: '#/components/schemas/EKSNodePoolVolumeEncryption'\n                        volumeSize:\n                            description: Size of the EBS volume in GiBs of the nodes in the pool.\n                            type: integer\n                            example: 50\n                        volumeType:\n                            description: Type of the EBS volume of the nodes in the pool (default gp3).\n                            type: string\n                            example: gp3\n                        instanceType:\n                            description: The instance type to use for your node pool.\n                            type: string\n                            example: m4.xlarge\n                        image:\n                            description: The instance AMI to use for your node pool.\n                            type: string\n                            example: ami-06d1667f\n                        version:\n                            description: The Kubernetes version to use for your node pool.\n                            type: string\n                            example: \"1.18.6\"\n                        spotPrice:\n                            description: The upper limit price for the requested spot instance. If this field is empty or 0 on-demand instances are used instead of spot instances.\n                            type: string\n                            example: \"0.2\"\n                        securityGroups:\n                            description: List of additional custom security groups for all nodes in the pool.\n                            type: array\n                            nullable: true\n                            items:\n                                type: string\n                            example: [\"sg-00000xxxx0000xxx1\", \"sg-00000xxxx0000xxx2\"]\n                        useInstanceStore:\n                            nullable: true\n                            description: Setup available instance stores (NVMe disks) to use for Kubelet root if available. As a result emptyDir volumes will be provisioned on local instance storage disks. You can check out available instance storages here https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#instance-store-volumes.\n                            type: boolean\n                        options:\n                            $ref: '#/components/schemas/BaseUpdateNodePoolOptions'\n\n        PkeAwsUpdateNodePoolRequest:\n            description: Node pool update request object for an PKE AWS cluster.\n            type: object\n            allOf:\n                - $ref: '#/components/schemas/BaseUpdateNodePoolRequest'\n                -\n                    type: object\n                    properties:\n                        autoscaling:\n                            $ref: '#/components/schemas/NodePoolAutoScaling'\n                        volumeSize:\n                            description: Size of the EBS volume in GiBs of the nodes in the pool.\n                            type: integer\n                            example: 50\n                        instanceType:\n                            description: The instance type to use for your node pool.\n                            type: string\n                            example: m4.xlarge\n                        image:\n                            description: The instance AMI to use for your node pool.\n                            type: string\n                            example: ami-06d1667f\n                        spotPrice:\n                            description: The upper limit price for the requested spot instance. If this field is empty or 0 on-demand instances are used instead of spot instances.\n                            type: string\n                            example: \"0.2\"\n                        options:\n                            $ref: '#/components/schemas/BaseUpdateNodePoolOptions'\n\n        BaseUpdateNodePoolOptions:\n            description: Base node pool update options object for all cluster distributions.\n            type: object\n            properties:\n                maxSurge:\n                    description: Maximum number of extra nodes that can be created during the update.\n                    type: integer\n                    default: 0\n                maxBatchSize:\n                    description: Maximum number of nodes that can be updated simultaneously.\n                    type: integer\n                    default: 2\n                maxUnavailable:\n                    description: Maximum number of nodes that can be unavailable during the update.\n                    type: integer\n                    default: 0\n                drain:\n                    $ref: '#/components/schemas/UpdateNodePoolDrainOptions'\n\n        UpdateNodePoolDrainOptions:\n            description: Drain options for old nodes.\n            type: object\n            properties:\n                timeout:\n                    description: How long should drain wait for pod eviction (in seconds)\n                    type: integer\n                    default: 0\n                failOnError:\n                    description: Whether the process should fail if draining fails/times out.\n                    type: boolean\n                    default: false\n                podSelector:\n                    description: Only evict those pods that matches this selector.\n                    type: string\n                    default: \"\"\n\n        EKSNodePool:\n            type: object\n            required:\n                - instanceType\n                - spotPrice\n                - minCount\n                - maxCount\n            properties:\n                instanceType:\n                    type: string\n                    example: \"m4.xlarge\"\n                spotPrice:\n                    type: string\n                    example: \"0.2\"\n                autoscaling:\n                    type: boolean\n                    example: true\n                count:\n                    type: integer\n                    example: 1\n                minCount:\n                    type: integer\n                    example: 1\n                maxCount:\n                    type: integer\n                    example: 2\n                labels:\n                    type: object\n                    additionalProperties:\n                        type: string\n                        example:\n                            example.io/label1: value1\n                volumeEncryption:\n                    $ref: '#/components/schemas/EKSNodePoolVolumeEncryption'\n                volumeSize:\n                    description: Size of the EBS volume in GiBs of the nodes in the pool.\n                    example: 50\n                    type: integer\n                image:\n                    type: string\n                    example: \"ami-06d1667f\"\n                subnet:\n                    $ref: '#/components/schemas/EKSSubnet'\n                securityGroups:\n                    description: List of additional custom security groups for all nodes in the pool.\n                    type: array\n                    items:\n                        type: string\n                    example: [\"sg-00000xxxx0000xxx1\", \"sg-00000xxxx0000xxx2\"]\n                useInstanceStore:\n                    description: Setup available instance stores (NVMe disks) to use for Kubelet root if available. As a result emptyDir volumes will be provisioned on local instance storage disks. You can check out available instance storages here https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#instance-store-volumes.\n                    type: boolean\n\n\n        CreateEKSProperties:\n            type: object\n            required:\n                - eks\n            properties:\n                eks:\n                    type: object\n                    required:\n                        - nodePools\n                    properties:\n                        authConfig:\n                            $ref: '#/components/schemas/EKSAuthConfig'\n                        version:\n                            type: string\n                            example: \"1.10\"\n                        encryptionConfig:\n                            description: List of encryption config objects to define the encryption providers and their corresponding resources to encrypt. More information can be found at https://docs.aws.amazon.com/eks/latest/userguide/create-cluster.html and https://docs.aws.amazon.com/eks/latest/APIReference/API_CreateCluster.html.\n                            example: |\n                                [\n                                    {\n                                        \"provider\": {\n                                            \"keyARN\": \"arn:aws:kms:<REGION>:000000000000:key/00000000-0000-0000-0000-000000000000\"\n                                        },\n                                        \"resources\": [\n                                            \"secrets\"\n                                        ]\n                                    }\n                                ]\n                            items:\n                                $ref: '#/components/schemas/EKSEncryptionConfig'\n                            type: array\n                        logTypes:\n                            type: array\n                            items:\n                                type: string\n                            example: [\"api\", \"scheduler\"]\n                        nodePools:\n                            type: object\n                            additionalProperties:\n                                $ref: '#/components/schemas/EKSNodePool'\n                        vpc:\n                            $ref: '#/components/schemas/EKSVpc'\n                        routeTableId:\n                            type: string\n                            description: Id of the RouteTable of the VPC to be used by subnets. This is used only when subnets are created into existing VPC.\n                        subnets:\n                            type: array\n                            items:\n                                $ref: '#/components/schemas/EKSSubnet'\n                            minItems: 2\n                            description: Subnets for EKS master and worker nodes. All worker nodes will be launched in the same subnet (the first subnet in the list - which may not coincide with first subnet in the cluster create request payload as the deserialization may change the order) unless a subnet is specified for the workers that belong to a node pool at node pool level.\n                        iam:\n                            $ref: '#/components/schemas/EKSIam'\n                        apiServerAccessPoints:\n                            type: array\n                            items:\n                              type: string\n                              enum: [private, public]\n                            default: [\"public\"]\n                            description: List of access point types for the API server; public and private are the only valid values\n                        tags:\n                            type: object\n                            additionalProperties:\n                                type: string\n                                example:\n                                    customTagKey: customTagValue\n                            description: User defined tags to be added to created AWS resources. Empty keys and values are not permitted.\n\n\n        CreateAKSProperties:\n            type: object\n            required:\n                - aks\n            properties:\n                aks:\n                    type: object\n                    required:\n                        - kubernetesVersion\n                        - resourceGroup\n                        - nodePools\n                    properties:\n                        resourceGroup:\n                            type: string\n                            example: \"myRg\"\n                        kubernetesVersion:\n                            type: string\n                            example: \"1.8.2\"\n                        nodePools:\n                            type: object\n                            additionalProperties:\n                                $ref: '#/components/schemas/NodePoolsAzure'\n                        vnetSubnetID:\n                            type: string\n                            example: \"/subscriptions/12345678-1234-5678-1234-123456789abc/resourceGroups/your-resource-group-name/providers/Microsoft.Network/virtualNetworks/your-vnet-name/subnets/your-vnet-subnet-name\"\n\n        NodePoolsAzure:\n            type: object\n            required:\n                - count\n                - instanceType\n            properties:\n                autoscaling:\n                    type: boolean\n                    example: true\n                count:\n                    type: integer\n                    example: 1\n                minCount:\n                    type: integer\n                    example: 1\n                maxCount:\n                    type: integer\n                    example: 2\n                instanceType:\n                    type: string\n                    example: \"Standard_B2ms\"\n                labels:\n                    type: object\n                    additionalProperties:\n                        type: string\n                        example:\n                            example.io/label1: value1\n\n        CreateGKEProperties:\n            type: object\n            required:\n                - gke\n            properties:\n                gke:\n                    type: object\n                    required:\n                        - nodePools\n                    properties:\n                        projectId:\n                            type: string\n                        master:\n                            type: object\n                            properties:\n                                version:\n                                    type: string\n                                    example: \"1.10\"\n                        nodeVersion:\n                            type: string\n                            example: \"1.10\"\n                        vpc:\n                            type: string\n                            description: Name of the GCP Network (VPC) to deploy the cluster to. If omitted than the \"default\" VPC is used.\n                            example: \"corp-vpc\"\n                        subnet:\n                            type: string\n                            description: Name of the GCP Subnet to deploy the cluster to. If \"default\" VPC is used this field can be omitted. The subnet must be in the same region as the location of the cluster.\n                        nodePools:\n                            type: object\n                            additionalProperties:\n                                $ref: '#/components/schemas/NodePoolsGoogle'\n\n        NodePoolsGoogle:\n            type: object\n            required:\n                - count\n                - instanceType\n            properties:\n                autoscaling:\n                    type: boolean\n                    example: true\n                preemptible:\n                    type: boolean\n                    example: true\n                count:\n                    type: integer\n                    example: 1\n                minCount:\n                    type: integer\n                    example: 1\n                maxCount:\n                    type: integer\n                    example: 2\n                instanceType:\n                    type: string\n                    example: \"n1-standard-2\"\n                labels:\n                    additionalProperties:\n                        $ref: '#/components/schemas/LabelsGoogle'\n\n        LabelsGoogle:\n            type: string\n            example: \"labelValue\"\n\n        CreatePKEProperties:\n            type: object\n            required:\n                - network\n                - nodePools\n                - kubernetes\n                - cri\n            properties:\n                network:\n                    type: object\n                    required:\n                        - apiServerAddress\n                        - serviceCIDR\n                        - podCIDR\n                        - provider\n                    properties:\n                        apiServerAddress:\n                            type: string\n                            example: \"10.240.0.204\"\n                        serviceCIDR:\n                            type: string\n                            example: \"10.32.0.0/24\"\n                        podCIDR:\n                            type: string\n                            example: 10.200.0.0/16\"\n                        provider:\n                            type: string\n                            example: \"weave\"\n                nodePools:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/NodePoolsPKE'\n                kubernetes:\n                    type: object\n                    required:\n                        - version\n                        - rbac\n                    properties:\n                        version:\n                            type: string\n                            example:  \"v1.12.2\"\n                        rbac:\n                            type: object\n                            required:\n                                - enabled\n                            properties:\n                                enabled:\n                                    type: boolean\n                                    example: true\n                cri:\n                    type: object\n                    required:\n                        - runtime\n                    properties:\n                        runtime:\n                            type: string\n                            example: \"containerd\"\n\n        NodePoolsPKE:\n            type: object\n            required:\n                - name\n                - roles\n                - provider\n                - providerConfig\n                - autoscaling\n            properties:\n                name:\n                    type: string\n                    example: \"distrMaster\"\n                roles:\n                    type: array\n                    items:\n                        type: string\n                    example: [\"master\", \"pipeline-system\"]\n                labels:\n                    type: object\n                    description: user provided custom node labels to be placed onto the nodes of the node pool\n                    additionalProperties:\n                        type: string\n                        example:\n                            example.io/label1: value1\n                autoscaling:\n                    type: boolean\n                    description: Enables/disables autoscaling of this node pool through Kubernetes cluster autoscaler.\n                provider:\n                    type: string\n                    example: \"amazon\"\n                providerConfig:\n                    type: object\n                    # oneOf:\n                    #     -\n                    #         $ref: '#/components/schemas/AmazonProviderConfig'\n                hosts:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/PKEHosts'\n\n        AmazonProviderConfig:\n            type: object\n            required:\n                - autoScalingGroup\n            properties:\n                autoScalingGroup:\n                    $ref: '#/components/schemas/AmazonAutoScalingGroup'\n\n        PKEHosts:\n            type: object\n            required:\n                - name\n                - privateIP\n                - roles\n            properties:\n                name:\n                    type: string\n                    example: \"ip-10-240-0-204.eu-central-1.compute.internal\"\n                privateIP:\n                    type: string\n                    example: \"10.240.0.204\"\n                roles:\n                    type: array\n                    items:\n                        type: string\n                    example: [\"master\", \"pipeline-system\"]\n\n        AmazonAutoScalingGroup:\n            type: object\n            required:\n                - name\n                - image\n                - zones\n                - instanceType\n                - launchConfigurationName\n                - vpcID\n                - securityGroupID\n                - subnets\n                - tags\n                - spotPrice\n                - size\n            properties:\n                name:\n                    type: string\n                    example: \"distrMaster\"\n                image:\n                    type: string\n                    example: \"ami-dd3c0f36\"\n                volumeSize:\n                    type: integer\n                    description: Size of root EBS volume to attach to the nodes in GiBs. Zero means that the size is determined automatically.\n                zones:\n                    type: array\n                    items:\n                        type: string\n                    example: [\"eu-central-1b\"]\n                instanceType:\n                    type: string\n                    example: \"t2.medium\"\n                launchConfigurationName:\n                    type: string\n                    example: \"distrMaster\"\n                launchTemplate:\n                    $ref: '#/components/schemas/AmazonLaunchTemplate'\n                vpcID:\n                    type: string\n                    example: \"vpc-0deb755857f5ef79d\"\n                securityGroupID:\n                    type: string\n                    example: \"sg-0b3ddd7bef209c1d0\"\n                subnets:\n                    type: array\n                    items:\n                        type: string\n                    example: [\"subnet-0d16a21e9655486af\"]\n                tags:\n                    type: object\n                    additionalProperties: true\n                spotPrice:\n                    type: string\n                    example: \"0.2\"\n                size:\n                    type: object\n                    required:\n                        - min\n                        - max\n                    properties:\n                        min:\n                            type: integer\n                            example: 1\n                        max:\n                            type: integer\n                            example: 1\n\n        AmazonLaunchTemplate:\n            type: object\n\n        CreateClusterResponse_201:\n            type: object\n            properties:\n                status_code:\n                    type: integer\n                    example: 201\n                message:\n                    type: string\n                    example: \"cluster already exists with this name\"\n\n        CreateClusterResponse_202:\n            type: object\n            properties:\n                name:\n                    type: string\n                    example: \"gkecluster-pipelineuser-123\"\n                id:\n                    type: integer\n                    example: 1\n\n        ClusterConfig:\n            type: object\n            properties:\n                status:\n                    type: integer\n                    example: 200\n                data:\n                    type: string\n                    example: \"apiVersion: v1\\nclusters....\"\n\n        UpdateClusterRequestV2:\n            oneOf:\n                - $ref: '#/components/schemas/UpdatePKEOnAzureClusterRequest'\n                - $ref: '#/components/schemas/UpdatePKEOnVsphereClusterRequest'\n\n        UpdatePKEOnAzureClusterRequest:\n            type: object\n            properties:\n                nodepools:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/PKEOnAzureNodePool'\n\n        UpdatePKEOnVsphereClusterRequest:\n            type: object\n            properties:\n                nodepools:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/PKEOnVsphereNodePool'\n\n        UpdateClusterRequestDeprecated:\n            type: object\n            required:\n                - cloud\n                - properties\n            properties:\n                cloud:\n                    type: string\n                    example: google\n                properties:\n                    type: object\n                    # additionalProperties:\n                        # oneOf:\n                        #     -\n                        #         $ref: '#/components/schemas/UpdateAzureProperties'\n                        #     -\n                        #         $ref: '#/components/schemas/UpdateGoogleProperties'\n                        #     -\n                        #         $ref: '#/components/schemas/UpdateEksProperties'\n                    example:\n                        google:\n                            master:\n                                version: \"1.10\"\n                            nodePools:\n                                pool1:\n                                    count: 2\n                                    instanceType: \"n1-standard-2\"\n\n        UpdateEksProperties:\n            type: object\n            required:\n                - eks\n            properties:\n                eks:\n                    type: object\n                    properties:\n                        nodePools:\n                            type: object\n                            additionalProperties:\n                                $ref: '#/components/schemas/EKSNodePool'\n                    required:\n                        - nodePools\n\n        UpdateAzureProperties:\n            type: object\n            required:\n                - azure\n            properties:\n                azure:\n                    type: object\n                    properties:\n                        nodePools:\n                            type: object\n                            additionalProperties:\n                                $ref: '#/components/schemas/UpdateNodePoolsAzure'\n\n        UpdateNodePoolsAzure:\n            type: object\n            required:\n                - count\n            properties:\n                autoscaling:\n                    type: boolean\n                    example: true\n                count:\n                    type: integer\n                    example: 1\n                minCount:\n                    type: integer\n                    example: 1\n                maxCount:\n                    type: integer\n                    example: 2\n                instanceType:\n                    type: string\n                    example: \"Standard_B2ms\"\n                labels:\n                    type: object\n                    additionalProperties:\n                        type: string\n                        example:\n                            example.io/label1: value1\n                vnetSubnetID:\n                    type: string\n                    example: \"/subscriptions/12345678-1234-5678-1234-123456789abc/resourceGroups/your-resource-group-name/providers/Microsoft.Network/virtualNetworks/your-vnet-name/subnets/your-vnet-subnet-name\"\n\n        UpdateGoogleProperties:\n            type: object\n            properties:\n                master:\n                    type: object\n                    properties:\n                        version:\n                            type: string\n                nodeVersion:\n                    type: string\n                    example: \"1.9\"\n                nodePools:\n                    type: object\n                    additionalProperties:\n                        $ref: '#/components/schemas/UpdateNodePoolsGoogle'\n\n        UpdateNodePoolsGoogle:\n            type: object\n            required:\n                - count\n            properties:\n                autoscaling:\n                    type: boolean\n                    example: true\n                count:\n                    type: integer\n                    example: 2\n                minCount:\n                    type: integer\n                    example: 1\n                maxCount:\n                    type: integer\n                    example: 2\n                instanceType:\n                    type: string\n                    example: \"n1-standard-2\"\n\n        UpdatePKEProperties:\n            type: object\n            required:\n                - pke\n            properties:\n                pke:\n                    type: object\n                    required:\n                        - nodePools\n                    properties:\n                        nodePools:\n                            type: object\n                            additionalProperties:\n                                $ref: '#/components/schemas/UpdateNodePoolsPKE'\n\n        UpdateNodePoolsPKE:\n            type: object\n            properties:\n                instanceType:\n                    type: string\n                    example: c4.large\n                    description: Instance type for the nodes in the node pool. This field is ignored when existing node pool is updated as instance type can not be changed.\n                spotPrice:\n                    type: string\n                    example: \"0.2\"\n                    description: The spot price for a node in the node pool. Provide \"\" or \"0\" for on-demand nodes.\n                autoscaling:\n                    type: boolean\n                    description: Whether to enable Kubernetes cluster autoscaler for this node pool.\n                minCount:\n                    type: integer\n                    example: 1\n                    description: If cluster autoscaler is enabled for this node pool it sets the minimum node count the cluster autoscaler can downscale the node pool to.\n                maxCount:\n                    type: integer\n                    example: 2\n                    description: If cluster autoscaler is enabled for this node pool it sets the maximum node count the cluster autoscaler can upscale the node pool to.\n                count:\n                    type: integer\n                    example: 1\n                    description: If cluster autoscaler is not enabled this specifies the desired node count in the node pool. If cluster autoscaler is enabled this specifies the initial node count in the node pool.\n                subnets:\n                    type: array\n                    items:\n                        type: string\n                    example: [\"subnet-0d16a21e9655486af\"]\n                    description: The subnet to create the node pool into. If this field is omitted than the subnet from the cluster level network configuration is used.\n                labels:\n                    type: object\n                    description: user provided custom node labels to be placed onto the nodes of the node pool\n                    additionalProperties:\n                        type: string\n                        example:\n                            example.io/label1: value1\n\n        ListEndpointsResponse:\n            type: object\n            properties:\n                endpoints:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/EndpointItem'\n\n\n        EndpointItem:\n            type: object\n            properties:\n                name:\n                    type: string\n                    example: \"pipeline-traefik\"\n                host:\n                    type: string\n                    example: \"11.11.11.111\"\n                urls:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/URLItem'\n                    example:\n\n\n        URLItem:\n            type: object\n            properties:\n                servicename:\n                    type: string\n                    example: \"serviceName\"\n                url:\n                    type: string\n                    example: \"url\"\n\n\n        ListNodesResponse:\n            type: object\n            properties:\n                metadata:\n                    type: object\n                    properties:\n                        selfLink:\n                            type: string\n                            example: \"/api/v1/nodes\"\n                        resourceVersion:\n                            type: string\n                            example: \"30123\"\n\n                items:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/NodeItem'\n\n        NodeItem:\n            type: object\n            properties:\n                metadata:\n                    type: object\n                    properties:\n                        name:\n                            type: string\n                            example: \"gke-gkecluster-feri-706-pool1-496eccb3-l25k\"\n                        selfLink:\n                            type: string\n                            example: \"/api/v1/nodes/gke-gkecluster-feri-706-pool1-496eccb3-l25k\"\n                        uid:\n                            type: string\n                            example: \"f214d7fb-41ae-11e8-a4ea-42010a8001da\"\n                        resourceVersion:\n                            type: string\n                            example: \"30119\"\n                        creationTimestamp:\n                            type: string\n                            example: \"2018-04-16T19:47:07Z\"\n                        labels:\n                            type: object\n                            additionalProperties:\n                                type: string\n                                example:\n                                    beta.kubernetes.io/arch: \"amd64\"\n                        annotations:\n                            type: object\n                            additionalProperties:\n                                type: string\n                                example:\n                                    node.alpha.kubernetes.io/ttl: \"0\"\n                spec:\n                    type: object\n                    properties:\n                        podCIDR:\n                            type: string\n                            example: \"10.48.0.0/24\"\n                        externalID:\n                            type: string\n                            example: \"5935724476937880453\"\n                        providerID:\n                            type: string\n                            example: \"gce://banzaitest/us-central1-a/gke-gkecluster-706-pool1-496eccb3-l25k\"\n                status:\n                    type: object\n                    properties:\n                        capacity:\n                            type: object\n                            properties:\n                                cpu:\n                                    type: string\n                                    example: \"2\"\n                                memory:\n                                    type: string\n                                    example: \"7664776Ki\"\n                                pods:\n                                    type: string\n                                    example: \"110\"\n                        allocatable:\n                            type: object\n                            properties:\n                                cpu:\n                                    type: string\n                                    example: \"1930m\"\n                                memory:\n                                    type: string\n                                    example: \"5784712Ki\"\n                                pods:\n                                    type: string\n                                    example: \"110\"\n                        conditions:\n                            type: array\n                            items:\n                                type: object\n                                properties:\n                                    type:\n                                        type: string\n                                        example: \"KernelDeadlock\"\n                                    status:\n                                        type: string\n                                        example: \"False\"\n                                    lastHeartbeatTime:\n                                        type: string\n                                        example: \"2018-04-17T09:02:45Z\"\n                                    lastTransitionTime:\n                                        type: string\n                                        example: \"2018-04-16T19:46:26Z\"\n                                    reason:\n                                        type: string\n                                        example: \"KernelHasNoDeadlock\"\n                                    message:\n                                        type: string\n                                        example: \"kernel has no deadlock\"\n                        addresses:\n                            type: array\n                            items:\n                                type: object\n                                properties:\n                                    type:\n                                        type: string\n                                        example: \"InternalIP\"\n                                    address:\n                                        type: string\n                                        example: \"10.128.0.2\"\n\n                        daemonEndpoints:\n                            type: object\n                            properties:\n                                kubeletEndpoint:\n                                    properties:\n                                        Port:\n                                            type: integer\n                                            example: 10250\n                        nodeInfo:\n                            type: object\n                            properties:\n                                machineID:\n                                    type: string\n                                    example: \"10d8adda771410ca912a387cf7e5cb06\"\n                                systemUUID:\n                                    type: string\n                                    example: \"10D8ADDA-7714-10CA-912A-387CF7E5CB06\"\n                                bootID:\n                                    type: string\n                                    example: \"decb64ff-e662-410a-b862-04cb490b4772\"\n                                kernelVersion:\n                                    type: string\n                                    example: \"4.4.111+\"\n                                osImage:\n                                    type: string\n                                    example: \"Container-Optimized OS from Google\"\n                                containerRuntimeVersion:\n                                    type: string\n                                    example: \"docker://17.3.2\"\n                                kubeletVersion:\n                                    type: string\n                                    example: \"v1.10\"\n                                kubeProxyVersion:\n                                    type: string\n                                    example: \"v1.10\"\n                                operatingSystem:\n                                    type: string\n                                    example: \"linux\"\n                                architecture:\n                                    type: string\n                                    example: \"amd64\"\n                        images:\n                            type: array\n                            items:\n                                type: object\n                                properties:\n                                    name:\n                                        type: array\n                                        items:\n                                            type: string\n                                        example: [\"asia.gcr.io/google_containers/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe8b65e\", \"eu.gcr.io/google_containers/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe\"]\n                                    sizeBytes:\n                                        format: int64\n                                        type: integer\n                                        example: 286572743\n\n        ListDeploymentsResponse:\n            type: array\n            items:\n                $ref: '#/components/schemas/ListDeploymentsResponseItem'\n\n        ListDeploymentsResponseItem:\n            type: object\n            properties:\n                releaseName:\n                    type: string\n                    example: \"pipeline\"\n                chart:\n                    type: string\n                    example: \"pipeline-cluster-ingress-0.0.1\"\n                chartName:\n                    type: string\n                    example: \"pipeline-cluster-ingress\"\n                chartVersion:\n                    type: string\n                    example: \"0.0.1\"\n                version:\n                    type: integer\n                    example: 1\n                updatedAt:\n                    type: string\n                    example: \"2018-07-03T14:23:19+02:00\"\n                status:\n                    type: string\n                    example: \"DEPLOYED\"\n                namespace:\n                    type: string\n                    example: \"default\"\n                createdAt:\n                    type: string\n                    example: \"2018-07-03T14:23:19+02:00\"\n                supported:\n                    type: boolean\n                    example: true\n\n        CreateUpdateDeploymentRequest:\n            type: object\n            required:\n                - name\n            properties:\n                name:\n                    type: string\n                    example: \"banzaicloud-stable/pipeline\"\n                version:\n                    type: string\n                    example: \"0.1.0\"\n                    description: \"Version of the deployment. If not specified, the latest version is used.\"\n                package:\n                    type: string\n                    format: byte\n                    description: \"The chart content packaged by `helm package`. If specified chart version is ignored.\"\n                    example: \"U3dhZ2dlciByb2Nrcw==\"\n                namespace:\n                    type: string\n                    example: \"default\"\n                releaseName:\n                    type: string\n                    example: \"singed-bee\"\n                dryRun:\n                    type: boolean\n                    example: false\n                wait:\n                    type: boolean\n                    description: \"if set, will wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment are in a ready state before marking the release as successful\"\n                    example: false\n                timeout:\n                    type: integer\n                    description: \"time in seconds to wait for any individual Kubernetes operation (default 300)\"\n                    example: 500\n                    format: int64\n                odPcts:\n                    type: object\n                    description: \"Map of resources in the template where replicas should have a minimum on-demand percentage. Format: <kind.resourceName: min-percentage>\"\n                    example: { \"deployment.my-deployment\": 40 }\n                reuseValues:\n                    type: boolean\n                    example: \"true\"\n                values:\n                    type: object\n                    description: current values of the deployment\n                    example: { \"ingress\": { \"enabled\": \"true\" } }\n\n\n        CreateUpdateDeploymentResponse:\n            type: object\n            properties:\n                releaseName:\n                    type: string\n                    example: \"vigilant-mandrill\"\n                notes:\n                    type: string\n                    format: base64\n                    description: deployment notes in base64 encoded format\n\n        DeleteDeploymentResponse:\n            type: object\n            properties:\n                status:\n                    type: integer\n                    example: 200\n                message:\n                    type: string\n                    example: \"Deployment deleted!\"\n                name:\n                    type: string\n                    example: \"vigilant-mandrill\"\n\n        GetDeploymentResourcesResponse:\n            type: array\n            items:\n                type: object\n                properties:\n                    name:\n                        example: bumptious-dragon-zeppelin\n                        type: string\n                    kind:\n                        example: Deployment\n                        type: string\n\n        GetDeploymentResponse:\n            type: object\n            properties:\n                releaseName:\n                    type: string\n                    example: \"vigilant-mandrill\"\n                chart:\n                    type: string\n                    example: \"mysql-0.7.0\"\n                chartName:\n                    type: string\n                    example: \"mysql\"\n                chartVersion:\n                    type: string\n                    example: \"0.7.0\"\n                namespace:\n                    type: string\n                    example: \"default\"\n                version:\n                    type: integer\n                    example: 1\n                updatedAt:\n                    type: string\n                    example: \"2018-07-03T14:23:19+02:00\"\n                status:\n                    type: string\n                    example: \"DEPLOYED\"\n                createdAt:\n                    type: string\n                    example: \"2018-07-03T14:23:19+02:00\"\n                notes:\n                    type: string\n                    format: base64\n                    description: deployment notes in base64 encoded format\n                values:\n                    type: object\n                    description: current values of the deployment\n                    example: { \"metrics\": { \"enabled\": \"true\" } }\n\n        HelmReposListResponse:\n            type: array\n            items:\n                $ref: '#/components/schemas/HelmRepoListItem'\n\n        HelmRepoListItem:\n            type: object\n            properties:\n                name:\n                    type: string\n                    example: \"stable\"\n                cache:\n                    type: string\n                    example: \"statestore/<cluster_name>/helm/repository/cache/stable-index.yaml\"\n                url:\n                    type: string\n                    example: \"https://charts.helm.sh/stable\"\n                certFile:\n                    type: string\n                    example: \"\"\n                keyFile:\n                    type: string\n                    example: \"\"\n                caFile:\n                    type: string\n                    example: \"\"\n                passwordSecretRef:\n                    type: string\n                tlsSecretRef:\n                    type: string\n\n        HelmReposModifyRequest:\n            type: object\n            properties:\n                name:\n                    type: string\n                url:\n                    type: string\n                certFile:\n                    type: string\n                keyFile:\n                    type: string\n                caFile:\n                    type: string\n                passwordSecretRef:\n                    type: string\n                tlsSecretRef:\n                    type: string\n\n            example:\n                url: \"https://charts.helm.sh/stable\"\n\n        HelmReposAddRequest:\n            type: object\n            required:\n                - name\n                - url\n            properties:\n                name:\n                    type: string\n                url:\n                    type: string\n                certFile:\n                    type: string\n                keyFile:\n                    type: string\n                caFile:\n                    type: string\n                passwordSecretRef:\n                    type: string\n                tlsSecretRef:\n                    type: string\n            example:\n                name: \"stable\"\n                url: \"https://charts.helm.sh/stable\"\n\n        HelmReposDeleteResponse:\n            type: object\n            properties:\n                status:\n                    type: integer\n                    example: 200\n                message:\n                    type: string\n                    example: \"resource deleted successfully\"\n                name:\n                    type: string\n                    example: \"stable\"\n\n        HelmReposUpdateResponse:\n            type: object\n            properties:\n                status:\n                    type: integer\n                    example: 200\n                message:\n                    type: string\n                    example: \"resource modified successfully\"\n                name:\n                    type: string\n                    example: \"stable\"\n\n        HelmChartsListResponse:\n            type: array\n            items:\n                type: object\n                properties:\n                    name:\n                        type: string\n                        example: \"stable\"\n                    charts:\n                        type: array\n                        items:\n                            type: array\n\n                            items:\n                                type: object\n                                properties:\n                                    name:\n                                        type: string\n                                        example: \"nginx-ingress\"\n                                    home:\n                                        type: string\n                                        example: \"https://github.com/kubernetes/ingress-nginx\"\n                                    sources:\n                                        type: array\n                                        items:\n                                            type: string\n                                        example: [\"https://github.com/kubernetes/ingress-nginx\"]\n                                    version:\n                                        type: string\n                                        example: \"0.13.1\"\n                                    description:\n                                        type: string\n                                        example: \"An nginx Ingress controller that uses ConfigMap to store the nginx configuration.\"\n                                    keywords:\n                                        type: array\n                                        items:\n                                            type: string\n                                        example: [\"ingress, nginx\"]\n                                    maintainers:\n                                        type: array\n                                        items:\n                                            type: object\n                                            properties:\n                                                name:\n                                                    type: string\n                                                    example: \"jackzampolin\"\n                                                email:\n                                                    type: string\n                                                    example: \"jack.zampolin@gmail.com\"\n                                    engine:\n                                        type: string\n                                        example: \"gotpl\"\n\n                                    icon:\n                                        type: string\n                                        example: \"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c5/Nginx_logo.svg/500px-Nginx_logo.svg.png\"\n                                    appVersion:\n                                        type: string\n                                        example: \"0.12.0\"\n                                    apiVersion:\n                                        type: string\n                                        example: \"v1\"\n                                    deprecated:\n                                        type: boolean\n                                        example: false\n                                    urls:\n                                        type: array\n                                        items:\n                                            type: string\n                                        example: [\"https://charts.helm.sh/stable/nginx-ingress-0.13.1.tgz\"]\n                                    created:\n                                        type: string\n                                        example: \"2018-04-11T18:11:24.761440762Z\"\n                                    digest:\n                                        type: string\n                                        example: \"cf66d1666019b3e1647ba4dbc06a66ee7db1184629ae3669e11a9f72208eb7aa\"\n\n        HelmChartDetailsResponse:\n            properties:\n                name:\n                    type: string\n                    example: \"vault\"\n                repo:\n                    type: string\n                    example: \"banzaicloud-stable\"\n                versions:\n                    type: array\n                    items:\n                        type: object\n                        properties:\n                            chart:\n                                type: object\n                                properties:\n                                    name:\n                                        type: string\n                                        example: \"nginx-ingress\"\n                                    home:\n                                        type: string\n                                        example: \"https://github.com/kubernetes/ingress-nginx\"\n                                    sources:\n                                        type: array\n                                        items:\n                                            type: string\n                                        example: [\"https://github.com/kubernetes/ingress-nginx\"]\n                                    version:\n                                        type: string\n                                        example: \"0.13.1\"\n                                    description:\n                                        type: string\n                                        example: \"An nginx Ingress controller that uses ConfigMap to store the nginx configuration.\"\n                                    keywords:\n                                        type: array\n                                        items:\n                                            type: string\n                                        example: [\"ingress, nginx\"]\n                                    maintainers:\n                                        type: array\n                                        items:\n                                            type: object\n                                            properties:\n                                                name:\n                                                    type: string\n                                                    example: \"jackzampolin\"\n                                                email:\n                                                    type: string\n                                                    example: \"jack.zampolin@gmail.com\"\n                                    engine:\n                                        type: string\n                                        example: \"gotpl\"\n\n                                    icon:\n                                        type: string\n                                        example: \"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c5/Nginx_logo.svg/500px-Nginx_logo.svg.png\"\n                                    appVersion:\n                                        type: string\n                                        example: \"0.12.0\"\n                                    apiVersion:\n                                        type: string\n                                        example: \"v1\"\n                                    deprecated:\n                                        type: boolean\n                                        example: false\n                                    urls:\n                                        type: array\n                                        items:\n                                            type: string\n                                        example: [\"https://charts.helm.sh/stable/nginx-ingress-0.13.1.tgz\"]\n                                    created:\n                                        type: string\n                                        example: \"2018-04-11T18:11:24.761440762Z\"\n                                    digest:\n                                        type: string\n                                        example: \"cf66d1666019b3e1647ba4dbc06a66ee7db1184629ae3669e11a9f72208eb7aa\"\n                            values:\n                                type: string\n                                example: \"IyMgbmdpbngtbGVnbyBzcGlucyB1cCBhIHNjYWxhYmxlIGluZ3Jlc3MgcHJvdmlkZXIgdGhhdCBjYW4gYWxzbyBwcm92aXNpb24gU1NMIGNlcnRzCiMjIFNlZSBodHRwczovL2dpdGh1Yi5jb20vamV0c3RhY2sva3ViZS1sZWdvL3RyZWUvbWFzdGVyL2V4YW1wbGVzL25naW54IGZvciBtb3JlIGluZm9ybWF0aW9uIG9uIGltcGxlbWVudGF0aW9uCgojIyBOZ2lueCBjb25maWd1cmF0aW9uCiMjIHJlZjogaHR0cHM6Ly9naXRodWIuY29tL2t1YmVybmV0ZXMvY29udHJpYi90cmVlL21hc3Rlci9pbmdyZXNzL2NvbnRyb2xsZXJzL25naW54I2F1dG9tYXRlZC1jZXJ0aWZpY2F0ZS1tYW5hZ2VtZW50LXdpdGgta3ViZS1sZWdvCiMjCm5naW54OgogIHJlcGxpY2FDb3VudDogMQogIGltYWdlOgogICAgcmVwb3NpdG9yeTogazhzLmdjci5pby9uZ2lueC1pbmdyZXNzLWNvbnRyb2xsZXIKICAgIHRhZzogIjAuOC4zIgogICAgcHVsbFBvbGljeTogSWZOb3RQcmVzZW50CiAgc2VydmljZToKICAgIHR5cGU6IExvYWRCYWxhbmNlcgogIG1vbml0b3Jpbmc6IGZhbHNlCiAgcmVzb3VyY2VzOgogICAgbGltaXRzOgogICAgICBjcHU6IDEKICAgICAgbWVtb3J5OiAyR2kKICAgIHJlcXVlc3RzOgogICAgICBjcHU6IDEKICAgICAgbWVtb3J5OiAxMjhNaQogIGNvbmZpZ21hcDoKICAgIHByb3h5X2Nvbm5lY3RfdGltZW91dDogIjMwIgogICAgcHJveHlfcmVhZF90aW1lb3V0OiAiNjAwIgogICAgcHJveHlfc2VuZF9pbWVvdXQ6ICI2MDAiCiAgICBoc3RzX2luY2x1ZGVfc3ViZG9tYWluczogImZhbHNlIgogICAgYm9keV9zaXplOiAiNjRtIgogICAgc2VydmVyX25hbWVfaGFzaF9idWNrZXRfc2l6ZTogIjI1NiIKICAgICMgVE9ETzogZmlndXJlIG91dCBob3cgdG8gZXhwb3NlIGB7bmdpbnhfYWRkcn06ODA4MC9uZ2lueF9zdGF0dXNgLCBvbiBleGlzdGluZyBzZXJ2aWNlIG9yIGNyZWF0ZSBuZXcgb25lPwogICAgZW5hYmxlX3Z0c19zdGF0dXM6ICJmYWxzZSIKCiMjIERlZmF1bHQgQmFja2VuZCBjb25maWd1cmF0aW9uCiMjIFRvIHJ1biBhIGRpZmZlcmVudCA0MDQgcGFnZSBmb3IgdGhlIG1hbmFnZWQgZG9tYWlucyBwbGVhc2Ugc2VlIHRoZSBkb2N1bWVudGF0aW9uIGJlbG93CiMjIHJlZjogaHR0cHM6Ly9naXRodWIuY29tL2t1YmVybmV0ZXMvY29udHJpYi90cmVlL21hc3Rlci80MDQtc2VydmVyCiMjCmRlZmF1bHQ6CiAgcmVwbGljYUNvdW50OiAxCiAgaW1hZ2U6CiAgICByZXBvc2l0b3J5OiBrOHMuZ2NyLmlvL2RlZmF1bHRiYWNrZW5kCiAgICB0YWc6ICIxLjAiCiAgICBwdWxsUG9saWN5OiBJZk5vdFByZXNlbnQKICByZXNvdXJjZXM6CiAgICBsaW1pdHM6CiAgICAgIGNwdTogMQogICAgICBtZW1vcnk6IDJHaQogICAgcmVxdWVzdHM6CiAgICAgIGNwdTogMQogICAgICBtZW1vcnk6IDEyOE1pCgojIyBrdWJlLWxlZ28gY29uZmlndXJhdGlvbgojIyByZWY6IGh0dHBzOi8vZ2l0aHViLmNvbS9qZXRzdGFjay9rdWJlLWxlZ28KIyMKbGVnbzoKICBlbmFibGVkOiBmYWxzZQogIHJlcGxpY2FDb3VudDogMQogIGltYWdlOgogICAgcmVwb3NpdG9yeTogamV0c3RhY2sva3ViZS1sZWdvCiAgICB0YWc6ICIwLjEuMyIKICAgIHB1bGxQb2xpY3k6IElmTm90UHJlc2VudAogIGNvbmZpZ21hcDoKICAgIGVtYWlsOiAibXlAZW1haWwudGxkIgogICAgIyBQcm9kdWN0aW9uIExldCdzIEVuY3J5cHQgc2VydmVyCiAgICAjIHVybDogImh0dHBzOi8vYWNtZS12MDEuYXBpLmxldHNlbmNyeXB0Lm9yZy9kaXJlY3RvcnkiCiAgICAjIFRlc3QgTGV0J3MgRW5jcnlwdCBzZXJ2ZXIKICAgIHVybDogImh0dHBzOi8vYWNtZS1zdGFnaW5nLmFwaS5sZXRzZW5jcnlwdC5vcmcvZGlyZWN0b3J5ICIKICByZXNvdXJjZXM6CiAgICBsaW1pdHM6CiAgICAgIGNwdTogMQogICAgICBtZW1vcnk6IDJHaQogICAgcmVxdWVzdHM6CiAgICAgIGNwdTogMQogICAgICBtZW1vcnk6IDEyOE1pCg==\"\n                            readme:\n                                type: string\n                                example: \"IyBuZ2lueC1sZWdvCgoqKlRoaXMgY2hhcnQgaGFzIGJlZW4gZGVwcmVjYXRlZCBhcyBvZiB2ZXJzaW9uIDAuMi4xIGFuZCB3aWxsIG5vdCBiZSB1cGRhdGVkLiBQbGVhc2UgdXNlIHRoZSBuZ2lueC1pbmdyZXNzIGFuZCAob3B0aW9uYWwpIGt1YmUtbGVnbyBjaGFydHMgaW5zdGVhZC4qKgoKW25naW54LWxlZ29dKGh0dHBzOi8vZ2l0aHViLmNvbS9qZXRzdGFjay9rdWJlLWxlZ28vdHJlZS9tYXN0ZXIvZXhhbXBsZXMvbmdpbngpIGlzIGEgY2hhcnQgZm9yIGFuIFtgbmdpbnhgIGluZ3Jlc3NdKGh0dHBzOi8vZ2l0aHViLmNvbS9rdWJlcm5ldGVzL2NvbnRyaWIvdHJlZS9tYXN0ZXIvaW5ncmVzcy9jb250cm9sbGVycy9uZ2lueCkgd2l0aCBvcHRpb25hbCBzdXBwb3J0IGZvciBhdXRvbWF0aWNhbGx5IGdlbmVyYXRpbmcgYFNTTGAgY2VydCBmb3IgdGhlIG1hbmFnZWQgcm91dGVzLgoKVG8gdXNlIHRoaXMgaW5ncmVzcyBjb250b2xsZXIgYWRkIHRoZSBmb2xsb3dpbmcgYW5ub3RhdGlvbnMgdG8gdGhlIGBpbmdyZXNzYCByZXNvdXJjZXMgeW91IHdvdWxkIGxpa2UgdG8gcm91dGUgdGhyb3VnaCBpdDoKCmBgYHlhbWwKYXBpVmVyc2lvbjogZXh0ZW5zaW9ucy92MWJldGExCmtpbmQ6IEluZ3Jlc3MKbWV0YWRhdGE6CiAgbmFtZXNwYWNlOiBmb28KICBhbm5vdGF0aW9uczoKICAgICMgQWRkIHRvIHJvdXRlIHRocm91Z2ggdGhlIG5naW54IHNlcnZpY2UKICAgIGt1YmVybmV0ZXMuaW8vaW5ncmVzcy5jbGFzczogbmdpbngKICAgICMgQWRkIHRvIGdlbmVyYXRlIGNlcnRpZmljYXRlcyBmb3IgdGhpcyBpbmdyZXNzCiAgICBrdWJlcm5ldGVzLmlvL3Rscy1hY21lOiAidHJ1ZSIKc3BlYzoKICB0bHM6CiAgICAjIFdpdGggdGhpcyBjb25maWd1cmF0aW9uIGt1YmUtbGVnbyB3aWxsIGdlbmVyYXRlIGEgc2VjcmV0IGluIG5hbWVzcGFjZSBmb28gY2FsbGVkIGBleGFtcGxlLXRsc2AKICAgICMgZm9yIHRoZSBVUkwgYHd3dy5leGFtcGxlLmNvbWAKICAgIC0gaG9zdHM6CiAgICAgIC0gInd3dy5leGFtcGxlLmNvbSIKICAgICAgc2VjcmV0TmFtZTogZXhhbXBsZS10bHMKYGBgCgojIyBUTDtEUjsKCmBgYGJhc2gKJCBoZWxtIGluc3RhbGwgc3RhYmxlL2t1YmUtbGVnbwpgYGAKCiMjIEludHJvZHVjdGlvbgoKVGhpcyBjaGFydCBib290c3RyYXBzIGFuIG5naW54LWxlZ28gZGVwbG95bWVudCBvbiBhIFtLdWJlcm5ldGVzXShodHRwOi8va3ViZXJuZXRlcy5pbykgY2x1c3RlciB1c2luZyB0aGUgW0hlbG1dKGh0dHBzOi8vaGVsbS5zaCkgcGFja2FnZSBtYW5hZ2VyLgoKIyMgUHJlcmVxdWlzaXRlcwoKLSBLdWJlcm5ldGVzIDEuNCsgd2l0aCBCZXRhIEFQSXMgZW5hYmxlZAoKIyMgSW5zdGFsbGluZyB0aGUgQ2hhcnQKClRvIGluc3RhbGwgdGhlIGNoYXJ0IHdpdGggdGhlIHJlbGVhc2UgbmFtZSBgbXktcmVsZWFzZWA6CgpgYGBiYXNoCiQgaGVsbSBpbnN0YWxsIC0tbmFtZSBteS1yZWxlYXNlIHN0YWJsZS9uZ2lueC1sZWdvCmBgYAoKVGhlIGNvbW1hbmQgZGVwbG95cyBuZ2lueC1sZWdvIG9uIHRoZSBLdWJlcm5ldGVzIGNsdXN0ZXIgaW4gdGhlIGRlZmF1bHQgY29uZmlndXJhdGlvbi4gVGhlIFtjb25maWd1cmF0aW9uXSgjY29uZmlndXJhdGlvbikgc2VjdGlvbiBsaXN0cyB0aGUgcGFyYW1ldGVycyB0aGF0IGNhbiBiZSBjb25maWd1cmVkIGR1cmluZyBpbnN0YWxsYXRpb24uCgo+ICoqVGlwKio6IExpc3QgYWxsIHJlbGVhc2VzIHVzaW5nIGBoZWxtIGxpc3RgCgojIyBVbmluc3RhbGxpbmcgdGhlIENoYXJ0CgpUbyB1bmluc3RhbGwvZGVsZXRlIHRoZSBgbXktcmVsZWFzZWAgZGVwbG95bWVudDoKCmBgYGJhc2gKJCBoZWxtIGRlbGV0ZSBteS1yZWxlYXNlCmBgYAoKVGhlIGNvbW1hbmQgcmVtb3ZlcyBhbGwgdGhlIEt1YmVybmV0ZXMgY29tcG9uZW50cyBhc3NvY2lhdGVkIHdpdGggdGhlIGNoYXJ0IGFuZCBkZWxldGVzIHRoZSByZWxlYXNlLgoKIyMgQ29uZmlndXJhdGlvbgoKU2VlIGB2YWx1ZXMueWFtbGAgZm9yIGNvbmZpZ3VyYXRpb24gbm90ZXMuIFNwZWNpZnkgZWFjaCBwYXJhbWV0ZXIgdXNpbmcgdGhlIGAtLXNldCBrZXk9dmFsdWVbLGtleT12YWx1ZV1gIGFyZ3VtZW50IHRvIGBoZWxtIGluc3RhbGxgLiBGb3IgZXhhbXBsZSwKCmBgYGJhc2gKJCBoZWxtIGluc3RhbGwgLS1uYW1lIG15LXJlbGVhc2UgXAogIC0tc2V0IGxlZ28uZW5hYmxlZD1mYWxzZSBcCiAgICBzdGFibGUvbmdpbngtbGVnbwpgYGAKCkluc3RhbGxzIHRoZSBjaGFydCB3aXRob3V0IGt1YmUtbGVnbyBhbmQgdGhlIGFiaWxpdHkgdG8gZ2VuZXJhdGUgY2VydHMuCgpBbHRlcm5hdGl2ZWx5LCBhIFlBTUwgZmlsZSB0aGF0IHNwZWNpZmllcyB0aGUgdmFsdWVzIGZvciB0aGUgcGFyYW1ldGVycyBjYW4gYmUgcHJvdmlkZWQgd2hpbGUgaW5zdGFsbGluZyB0aGUgY2hhcnQuIEZvciBleGFtcGxlLAoKYGBgYmFzaAokIGhlbG0gaW5zdGFsbCAtLW5hbWUgbXktcmVsZWFzZSAtZiB2YWx1ZXMueWFtbCBzdGFibGUvbmdpbngtbGVnbwpgYGAKCj4gKipUaXAqKjogWW91IGNhbiB1c2UgdGhlIGRlZmF1bHQgW3ZhbHVlcy55YW1sXSh2YWx1ZXMueWFtbCkK\"\n\n        HelmClusterChartsListResponse:\n            type: array\n            items:\n                $ref: '#/components/schemas/HelmChartDetailsResponse'\n\n        InstallSecretsRequest:\n            type: object\n            required:\n                - namespace\n            properties:\n                namespace:\n                    type: string\n                    example: \"default\"\n                query:\n                    type: object\n                    properties:\n                        type:\n                            type: string\n                            example: \"amazon\"\n                        ids:\n                            type: array\n                            items:\n                                type: string\n                            example: [\"02ba59be9de457d3f04a02add7238489cf927511c6cd2a8a2aede19eac2a299b\"]\n                        tags:\n                            type: array\n                            items:\n                                type: string\n                            example: [\"repo:pipeline\"]\n\n        InstallSecretRequest:\n            type: object\n            required:\n                - namespace\n            properties:\n                sourceSecretName:\n                    type: string\n                    example: my-secret\n                namespace:\n                    type: string\n                    example: \"default\"\n                spec:\n                    type: object\n                    additionalProperties:\n                        $ref: '#/components/schemas/InstallSecretRequestSpecItem'\n\n        InstallSecretRequestSpecItem:\n            type: object\n            properties:\n                source:\n                    type: string\n                sourceMap:\n                    type: object\n                    additionalProperties:\n                        type: string\n                value:\n                    type: string\n\n        InstallSecretResponse:\n            type: object\n            required:\n                - name\n            properties:\n                name:\n                    type: string\n                    example: \"my-aws-secret\"\n\n        TokenCreateRequest:\n            type: object\n            properties:\n                name:\n                    type: string\n                    example: my API token\n                virtualUser:\n                    type: string\n                    example: banzaicloud/pipeline\n                expiresAt:\n                    type: string\n                    nullable: true\n                    format: date-time\n                    example: \"2018-03-09T13:24:49+01:00\"\n\n        TokenCreateResponse:\n            type: object\n            required:\n                - id\n                - token\n                - name\n            properties:\n                id:\n                    type: string\n                    example: f24c74d7-53f3-4d78-b3d4-f23f89e81bec\n                token:\n                    type: string\n                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJodHRwczovL3BpcGVsaW5lLmJhbnphaWNsb3VkLmNvbSIsImp0aSI6ImYyNGM3NGQ3LTUzZjMtNGQ3OC1iM2Q0LWYyM2Y4OWU4MWJlYyIsImlhdCI6MTUyNzg0NTQ1OCwiaXNzIjoiaHR0cHM6Ly9iYW56YWljbG91ZC5jb20vIiwic3ViIjoiMSIsInNjb3BlIjoiYXBpOmludm9rZSIsInR5cGUiOiJ1c2VyIiwidGV4dCI6ImJvbmlmYWlkbyJ9.DMQcM0De3A_R1JOPDGqharh9NIjz-uBFeJgiq5JSej0\n                name:\n                    type: string\n                    example: my API token\n\n        TokenListResponseItem:\n            type: object\n            required:\n                - id\n                - createdAt\n                - name\n            properties:\n                id:\n                    type: string\n                    example: f24c74d7-53f3-4d78-b3d4-f23f89e81bec\n                createdAt:\n                    type: string\n                    example: \"2018-06-01T11:26:40.044297036+02:00\"\n                name:\n                    type: string\n                    example: my API token\n\n        SecretItem:\n            type: object\n            properties:\n                id:\n                    type: string\n                    example: \"6fa2288c361becce3e30ba4c41be7d8ba01e3580566f7acc76a7f99994474c46\"\n                name:\n                    type: string\n                    example: \"my-google-secret\"\n                type:\n                    type: string\n                    example: \"google\"\n                updatedAt:\n                    type: string\n                    format: date-time\n                    example: \"2018-03-09T13:24:49+01:00\"\n                updatedBy:\n                    type: string\n                    example: banzaiuser\n                tags:\n                    type: array\n                    items:\n                        type: string\n                    example: [ \"tag1\", \"tag2\" ]\n                values:\n                    type: object\n                    example:\n                        type: \"<hidden>\"\n                        project_id: \"<hidden>\"\n                        private_key_id: \"<hidden>\"\n                        private_key: \"<hidden>\"\n                        client_email: \"<hidden>\"\n                        client_id: \"<hidden>\"\n                        auth_uri: \"<hidden>\"\n                        token_uri: \"<hidden>\"\n                        auth_provider_x509_cert_url: \"<hidden>\"\n                        client_x509_cert_url: \"<hidden>\"\n\n        SecretTags:\n            type: array\n            items:\n                type: string\n            example: [ \"scope:tag1\", \"scope:tag2\" ]\n\n        CreateSecretResponse:\n            type: object\n            required:\n                - id\n                - name\n                - type\n            properties:\n                name:\n                    type: string\n                    example: \"My-google-secret\"\n                type:\n                    type: string\n                    example: \"google\"\n                id:\n                    type: string\n                    example: \"62bc3c75-91fb-4670-bad4-24b401a9deac\"\n                error:\n                    type: string\n                    example: \"Validation failed\"\n                updatedAt:\n                    type: string\n                    format: date-time\n                    example: \"2018-07-01T08:27:23.2636996Z\"\n                updatedBy:\n                    type: string\n                    example: \"username\"\n                version:\n                    type: integer\n                    example: 1\n                tags:\n                    type: array\n                    items:\n                        type: string\n                    example: [ \"repo:pipeline\", \"tag2\" ]\n\n        CreateSecretRequest:\n            type: object\n            required:\n                - name\n                - type\n                - values\n            properties:\n                name:\n                    type: string\n                    example: \"My google secret\"\n                type:\n                    type: string\n                    example: \"google\"\n                tags:\n                    type: array\n                    items:\n                        type: string\n                    example: [ \"repo:pipeline\", \"tag2\" ]\n                values:\n                    # additionalProperties:\n                        # oneOf:\n                        #     -\n                        #         $ref: '#/components/schemas/SecretKeyValueAmazon'\n                        #     -\n                        #         $ref: '#/components/schemas/SecretKeyValueAzure'\n                        #     -\n                        #         $ref: '#/components/schemas/SecretKeyValueGoogle'\n                        #     -\n                        #         $ref: '#/components/schemas/SecretKeyValueKubernetes'\n                        #     -\n                        #         $ref: '#/components/schemas/SecretKeyValueGeneric'\n                        #     -\n                        #         $ref: '#/components/schemas/SecretKeyValueTLS'\n                    example:\n                        type: string\n                        project_id: string\n                        private_key_id: string\n                        private_key: string\n                        client_email: string\n                        client_id: string\n                        auth_uri: string\n                        token_uri: string\n                        auth_provider_x509_cert_url: string\n                        client_x509_cert_url: string\n                    type: object\n\n        SecretKeyValueAmazon:\n            type: object\n            required:\n                - AWS_ACCESS_KEY_ID\n                - AWS_SECRET_ACCESS_KEY\n            properties:\n                AWS_ACCESS_KEY_ID:\n                    type: string\n                AWS_SECRET_ACCESS_KEY:\n                    type: string\n\n        SecretKeyValueAzure:\n            type: object\n            required:\n                - AZURE_CLIENT_ID\n                - AZURE_CLIENT_SECRET\n                - AZURE_TENANT_ID\n                - AZURE_SUBSCRIPTION_ID\n            properties:\n                AZURE_CLIENT_ID:\n                    type: string\n                AZURE_CLIENT_SECRET:\n                    type: string\n                AZURE_TENANT_ID:\n                    type: string\n                AZURE_SUBSCRIPTION_ID:\n                    type: string\n\n        SecretKeyValueGoogle:\n            type: object\n            required:\n                - type\n                - project_id\n                - private_key_id\n                - private_key\n                - client_email\n                - client_id\n                - auth_uri\n                - token_uri\n                - auth_provider_x509_cert_url\n                - client_x509_cert_url\n            properties:\n                type:\n                    type: string\n                project_id:\n                    type: string\n                private_key_id:\n                    type: string\n                private_key:\n                    type: string\n                client_email:\n                    type: string\n                client_id:\n                    type: string\n                auth_uri:\n                    type: string\n                token_uri:\n                    type: string\n                auth_provider_x509_cert_url:\n                    type: string\n                client_x509_cert_url:\n                    type: string\n\n        SecretKeyValueTLS:\n            type: object\n            required:\n                - hosts\n            properties:\n                hosts:\n                    type: string\n                validity:\n                    type: string\n                caCert:\n                    type: string\n                caKey:\n                    type: string\n                serverCert:\n                    type: string\n                serverKey:\n                    type: string\n                clientCert:\n                    type: string\n                clientKey:\n                    type: string\n\n        SecretKeyValueKubernetes:\n            type: object\n            properties:\n                K8Sconfig:\n                    type: string\n\n        SecretKeyValueGeneric:\n            type: object\n            properties:\n                any:\n                    type: string\n\n        OrganizationListItemResponse:\n            type: object\n            properties:\n                id:\n                    type: integer\n                    example: 1\n                createdAt:\n                    type: string\n                    example: \"2018-03-09T13:24:49+01:00\"\n                updatedAt:\n                    type: string\n                    example: \"2018-03-09T13:24:49+01:00\"\n                name:\n                    type: string\n                    example: \"me@example.com\"\n                normalizedName:\n                    type: string\n                    example: \"me-example-com\"\n\n        User:\n            type: object\n            properties:\n                id:\n                    type: integer\n                    example: 1\n                createdAt:\n                    type: string\n                    example: \"2018-03-09T13:24:49+01:00\"\n                updatedAt:\n                    type: string\n                    example: \"2018-03-09T13:24:49+01:00\"\n                name:\n                    type: string\n                    example: \"myName\"\n                email:\n                    type: string\n                    example: \"my@email.com\"\n                login:\n                    type: string\n                    example: \"username\"\n                image:\n                    type: string\n                    example: \"githubImageUrl.com/imageId/3\"\n                organizations:\n                    type: object\n                    example: null\n\n        SecretTypeResponse:\n            type: object\n            properties:\n                fields:\n                    type: array\n                    items:\n                        type: object\n                        properties:\n                            name:\n                                type: string\n                            required:\n                                type: boolean\n                            isSafeToDisplay:\n                                type: boolean\n                            description:\n                                type: string\n\n        ListUserResponse:\n            type: array\n            items:\n                $ref: '#/components/schemas/User'\n\n        GetClusterStatusResponse:\n            type: object\n            properties:\n                status:\n                    type: string\n                    example: \"RUNNING\"\n                statusMessage:\n                    type: string\n                    example: \"Cluster is running\"\n                name:\n                    type: string\n                    example: \"myClusterName\"\n                cloud:\n                    type: string\n                    example: \"google\"\n                distribution:\n                    type: string\n                    example: \"gke\"\n                version:\n                    type: string\n                    example: \"1.12.6-gke.10\"\n                spot:\n                    type: boolean\n                    example: false\n                location:\n                    type: string\n                    example: \"us-central1-a\"\n                id:\n                    type: integer\n                    example: 1\n                logging:\n                    type: boolean\n                    example: false\n                monitoring:\n                    type: boolean\n                    example: false\n                securityscan:\n                    type: boolean\n                    example: false\n                createdAt:\n                    type: string\n                    example: \"2018-07-03T14:23:19+02:00\"\n                startedAt:\n                    type: string\n                    example: \"2018-07-03T14:23:29+02:00\"\n                creatorName:\n                    type: string\n                    example: \"userName\"\n                creatorId:\n                    type: integer\n                    example: 1\n                region:\n                    type: string\n                    example: \"us-central1\"\n                oidc:\n                    $ref: '#/components/schemas/OIDCConfig'\n                nodePools:\n                    type: object\n                    additionalProperties:\n                        $ref: '#/components/schemas/NodePoolStatus'\n                totalSummary:\n                    $ref: '#/components/schemas/ResourceSummary'\n\n        NodePoolStatus:\n            oneOf:\n                -\n                    $ref: '#/components/schemas/NodePoolStatusAmazon'\n                -\n                    $ref: '#/components/schemas/NodePoolStatusAzure'\n                -\n                    $ref: '#/components/schemas/NodePoolStatusGoogle'\n                -\n                    $ref: '#/components/schemas/NodePoolStatusVSphere'\n            example:\n                count: 1\n                instanceType: \"n1-standard-1\"\n\n        NodePoolStatusAmazon:\n            type: object\n            properties:\n                instanceType:\n                    type: string\n                    example: \"m4.xlarge\"\n                spotPrice:\n                    type: string\n                    example: \"0.2\"\n                autoscaling:\n                    type: boolean\n                    example: true\n                count:\n                    type: integer\n                    example: 1\n                minCount:\n                    type: integer\n                    example: 1\n                maxCount:\n                    type: integer\n                    example: 2\n                image:\n                    type: string\n                    example: \"ami-4d485ca7\"\n                labels:\n                    type: object\n                    additionalProperties:\n                        type: string\n                        example:\n                            example.io/label1: value1\n                resourceSummary:\n                    type: object\n                    additionalProperties:\n                        $ref: '#/components/schemas/ResourceSummary'\n\n        NodePoolStatusAzure:\n            type: object\n            properties:\n                autoscaling:\n                    type: boolean\n                    example: true\n                count:\n                    type: integer\n                    example: 1\n                minCount:\n                    type: integer\n                    example: 1\n                maxCount:\n                    type: integer\n                    example: 2\n                instanceType:\n                    type: string\n                    example: \"Standard_D4_v2\"\n                resourceSummary:\n                    type: object\n                    additionalProperties:\n                        $ref: '#/components/schemas/ResourceSummary'\n\n        NodePoolStatusGoogle:\n            type: object\n            properties:\n                autoscaling:\n                    type: boolean\n                    example: true\n                count:\n                    type: integer\n                    example: 1\n                minCount:\n                    type: integer\n                    example: 1\n                maxCount:\n                    type: integer\n                    example: 2\n                instanceType:\n                    type: string\n                    example: \"n1-standard-1\"\n                resourceSummary:\n                    type: object\n                    additionalProperties:\n                        $ref: '#/components/schemas/ResourceSummary'\n\n        NodePoolStatusVSphere:\n            type: object\n            properties:\n                count:\n                    type: integer\n                    example: 1\n                ram:\n                    type: integer\n                    example: 4096\n                vcpu:\n                    type: integer\n                    example: 2\n                template:\n                    type: string\n                    example: \"centos-7-pke-202001171452\"\n                resourceSummary:\n                    type: object\n                    additionalProperties:\n                        $ref: '#/components/schemas/ResourceSummary'\n\n\n        CreateObjectStoreBucketRequest:\n            type: object\n            required:\n                - name\n                - properties\n            properties:\n                secretId:\n                    type: string\n                secretName:\n                    type: string\n                    example: \"my-aws-secret\"\n                name:\n                    type: string\n                    example: \"mybucket\"\n                properties:\n                    $ref: '#/components/schemas/CreateObjectStoreBucketProperties'\n\n        CreateObjectStoreBucketProperties:\n            type: object\n            properties:\n                amazon:\n                    $ref: '#/components/schemas/CreateAmazonObjectStoreBucketProperties'\n                azure:\n                    $ref: '#/components/schemas/CreateAzureObjectStoreBucketProperties'\n                google:\n                    $ref: '#/components/schemas/CreateGoogleObjectStoreBucketProperties'\n\n        CreateAmazonObjectStoreBucketProperties:\n            type: object\n            nullable: true\n            required:\n                - location\n            properties:\n                location:\n                    type: string\n                    example: \"eu-west-1\"\n\n        CreateGoogleObjectStoreBucketProperties:\n            type: object\n            nullable: true\n            required:\n                - location\n            properties:\n                location:\n                    type: string\n                    example: \"europe\"\n\n        CreateAzureObjectStoreBucketProperties:\n            type: object\n            nullable: true\n            required:\n                - storageAccount\n                - resourceGroup\n                - location\n            properties:\n                storageAccount:\n                    type: string\n                    example: \"mystorageaccount\"\n                location:\n                    type: string\n                    example: \"westeurope\"\n                resourceGroup:\n                    type: string\n\n        CreateObjectStoreBucketResponse:\n            type: object\n            required:\n                - name\n                - cloud\n            properties:\n                name:\n                    type: string\n                    example: \"mybucket\"\n                cloud:\n                    type: string\n                    enum: [amazon, azure, google]\n                    example: amazon\n\n        BucketInfo:\n            type: object\n            required:\n                - name\n                - managed\n                - cloud\n                - location\n                - status\n            properties:\n                name:\n                    description: \"the name of the object storage / bucket\"\n                    type: string\n                    example: \"mybucket\"\n                managed:\n                    description: \"true if the bucket has been created via pipeline\"\n                    type: boolean\n                    example: true\n                cloud:\n                    description: \"cloud provider of the bucket\"\n                    type: string\n                    example: \"amazon\"\n                location:\n                    description: \"location of the bucket\"\n                    type: string\n                    example: \"eu-west-1\"\n                notes:\n                    description: \"notes for the bucket\"\n                    type: string\n                    example: \"There's no secret with this ID\"\n                secret:\n                    type: object\n                    required:\n                        - id\n                    properties:\n                        id:\n                            type: string\n                            example: \"cc051aeaf686444e2f125d0e79eb051aaaf4fb73384f7b0f8c89e84a0502dca1\"\n                        name:\n                            type: string\n                            example: \"mysecretname\"\n                        accessId:\n                            description: \"the secret identifier of the azure access information\"\n                            type: string\n                            example: \"cc051aeaf686444e2f125d0e79eb051aaaf4fb73384f7b0f8c89e84a0502dcef\"\n                        accessName:\n                            description: \"the secret name of the azure access information\"\n                            type: string\n                            example: \"myaccesssecretname\"\n                aks:\n                    $ref: '#/components/schemas/AzureBlobStorageProps'\n                status:\n                    description: the status of the bucket\n                    type: string\n                    enum: [CREATING, AVAILABLE, ERROR_CREATE, DELETING, ERROR_DELETE]\n                statusMessage:\n                    description: the reason for the error status\n                    type: string\n\n        ListStorageBucketsResponse:\n            type: array\n            items:\n                $ref: '#/components/schemas/BucketInfo'\n\n        SubnetInfo:\n            type: object\n            required:\n                - cidrs\n                - id\n            properties:\n                cidrs:\n                    description: \"The IPv4 CIDR blocks assigned to the subnet\"\n                    type: array\n                    items:\n                        type: string\n                        example: \"10.0.1.0/24\"\n                id:\n                    description: \"Identifier of the subnetwork\"\n                    type: string\n                    example: \"subnet-9d4a7b6c\"\n                location:\n                    description: \"The location of the subnetwork.\"\n                    type: string\n                    example: \"us-central1-a\"\n                name:\n                    description: \"Name of the subnetwork\"\n                    type: string\n                    example: \"MySubnet\"\n\n        ListVPCSubnetsResponse:\n            type: array\n            items:\n                $ref: '#/components/schemas/SubnetInfo'\n\n        RouteTableInfo:\n            type: object\n            required:\n                - id\n            properties:\n                id:\n                    description: \"Identifier of the route table\"\n                    type: string\n                    example: \"rtb-12345678\"\n                name:\n                    description: \"Name of the route table\"\n                    type: string\n                    example: \"My little route table\"\n\n        ListRouteTablesResponse:\n            type: array\n            items:\n                $ref: '#/components/schemas/RouteTableInfo'\n\n        VPCNetworkInfo:\n            type: object\n            required:\n                - cidrs\n                - id\n            properties:\n                cidrs:\n                    description: \"The IPv4 CIDR blocks assigned to the VPC network\"\n                    type: array\n                    items:\n                        type: string\n                        example: \"10.50.0.0/16\"\n                id:\n                    description: \"Identifier of the VPC network\"\n                    type: string\n                    example: \"vpc-a01106c2\"\n                name:\n                    description: \"Name of the VPC network\"\n                    type: string\n                    example: \"MyVPC\"\n\n        ListVPCNetworksResponse:\n            type: array\n            items:\n                $ref: '#/components/schemas/VPCNetworkInfo'\n\n        AzureBlobStorageProps:\n            type: object\n            required:\n                - resourceGroup\n                - storageAccount\n            properties:\n                resourceGroup:\n                    type: string\n                storageAccount:\n                    type: string\n\n        PodDetailsResponse:\n            type: array\n            items:\n                $ref: '#/components/schemas/PodItem'\n\n        PodItem:\n            type: object\n            properties:\n                name:\n                    type: string\n                    example: \"pipeline-traefik-7c47dc7bd7-twzpl\"\n                namespace:\n                    type: string\n                    example: \"default\"\n                createdAt:\n                    type: string\n                    example: \"2018-08-01T09:04:33+02:00\"\n                labels:\n                    type: object\n                    properties:\n                        app:\n                            type: string\n                            example: \"pipeline-traefik\"\n                        chart:\n                            type: string\n                            example: \"traefik-1.14.2\"\n                        release:\n                            type: string\n                            example: \"pipeline\"\n                restartPolicy:\n                    type: string\n                    example: \"Always\"\n                conditions:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/PodCondition'\n                resourceSummary:\n                    $ref: '#/components/schemas/ResourceSummary'\n\n        PodCondition:\n            type: object\n            properties:\n                type:\n                    type: string\n                    example: \"Initialized\"\n                status:\n                    type: string\n                    example: \"True\"\n                lastProbeTime:\n                    type: string\n                    example: null\n                lastTransitionTime:\n                    type: string\n                    example: \"2018-08-01T07:04:37Z\"\n\n        OIDCConfig:\n            type: object\n            properties:\n                enabled:\n                    type: boolean\n                idpUrl:\n                    type: string\n                clientId:\n                    type: string\n                clientSecret:\n                    type: string\n\n        ResourceSummary:\n            type: object\n            properties:\n                cpu:\n                    $ref: '#/components/schemas/Resource'\n                memory:\n                    $ref: '#/components/schemas/Resource'\n                status:\n                    type: string\n\n        Resource:\n            type: object\n            properties:\n                capacity:\n                    type: string\n                    example: \"4\"\n                allocatable:\n                    type: string\n                    example: \"4\"\n                limit:\n                    type: string\n                    example: \"100m\"\n                request:\n                    type: string\n                    example: \"380m\"\n\n        BasePostHook:\n            type: object\n            properties:\n                PostHookFunctionName:\n                    type: object\n\n        PostHooks:\n            oneOf:\n                # Note: in OpenAPI generator 4.3.1 single reference\n                # allOf/anyOf/oneOf schemas are generating empty Golang model\n                # types. The workaround is to add a second reference which does\n                # not modify the actual structure of the resulting type by using\n                # duplicate fields or even duplicate schemas.\n                #\n                # Issue:\n                # https://github.com/OpenAPITools/openapi-generator/issues/2164\n                #\n                # Pull request:\n                # https://github.com/OpenAPITools/openapi-generator/pull/2897\n                - $ref: '#/components/schemas/BasePostHook'\n                - $ref: '#/components/schemas/BasePostHook'\n\n        ReRunPostHook:\n            type: object\n            example:\n                InstallIngressController:\n\n        CreateResourceGroup:\n            type: object\n            required:\n                - name\n                - location\n                - secretId\n            properties:\n                name:\n                    type: string\n                    example: \"newResourceGroupName\"\n                location:\n                    type: string\n                    example: \"westeurope\"\n                secretId:\n                    type: string\n                    example: \"62bc3c75-91fb-4670-bad4-24b401a9deac\"\n\n        ResourceGroupCreated:\n            type: object\n            properties:\n                name:\n                    type: string\n                    example: \"NewResourceGroupName\"\n\n        ScanLogList:\n            type: array\n            items:\n                $ref: \"#/components/schemas/ScanLogItem\"\n\n        ScanLogItem:\n            type: object\n            properties:\n                releaseName:\n                    type: string\n                    example: 'flying-monkey'\n                resource:\n                    type: string\n                    example: 'banzaicloud'\n                image:\n                    type: array\n                    items:\n                        $ref: \"#/components/schemas/ScanLogItemImage\"\n                result:\n                    example: ['nginx:latest policy check failed', 'busybox:latest policy check success']\n                    type: array\n                    items:\n                        type: string\n                action:\n                    example: 'allow'\n                    type: string\n                    enum: [allow, reject]\n\n        ScanLogItemImage:\n            type: object\n            properties:\n                imageName:\n                    type: string\n                    example: 'docker.io/redis'\n                imageTag:\n                    type: string\n                    example: 'latest'\n                imageDigest:\n                    type: string\n                    example: 'sha256:93ce9120377effb33fc8ab25cc5fb6ab736982aa4524adb89324c031e47b33ac'\n                lastUpdated:\n                    type: string\n                    example: '2018-11-11T14:35:38Z'\n\n        ReleaseWhiteList:\n            type: array\n            items:\n                $ref: \"#/components/schemas/ReleaseWhiteListItem\"\n\n        ReleaseWhiteListItem:\n            type: object\n            required:\n                - name\n                - owner\n            properties:\n                name:\n                    type: string\n                    example: 'flying-monkey-wl'\n                owner:\n                    type: string\n                    example: 'banzaicloud'\n                reason:\n                    example: 'test release'\n                    type: string\n\n        DeploymentImageList:\n            type: array\n            items:\n                $ref: \"#/components/schemas/ClusterImage\"\n\n        ClusterImageList:\n            type: array\n            items:\n                $ref: \"#/components/schemas/ClusterImage\"\n\n        ClusterImage:\n            type: object\n            properties:\n                imageName:\n                    type: string\n                    example: 'docker.io/alpine'\n                imageTag:\n                    type: string\n                    example: 'latest'\n                imageDigest:\n                    type: string\n\n        GoogleProjects:\n            description: List of Google Cloud projects.\n            type: object\n            properties:\n                projects:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/GoogleProject'\n\n        GoogleProject:\n            description: Details of a Google Cloud project.\n            type: object\n            properties:\n                name:\n                    type: string\n                projectId:\n                    type: string\n                projectNumber:\n                    type: string\n                lifecycleState:\n                    type: string\n\n        EKSVpc:\n            type: object\n            properties:\n                vpcId:\n                    type: string\n                    description: The identifier of existing VPC to be used for creating the EKS cluster. If not provided a new VPC is created for the cluster.\n                cidr:\n                    type: string\n                    default: 192.168.0.0/16\n                    description: The CIDR range for the VPC in case new VPC is created.\n\n        EKSSubnet:\n            type: object\n            properties:\n                subnetId:\n                    type: string\n                    description: Id of existing subnet to use for creating the EKS cluster. If not provided new subnet will be created.\n                cidr:\n                    type: string\n                    description: The CIDR range for the subnet in case new Subnet is created.\n                availabilityZone:\n                    type: string\n                    description: The AZ to create the subnet into.\n\n        EKSIam:\n            type: object\n            properties:\n                clusterRoleId:\n                    type: string\n                    description: The identifier of existing IAM role to be used for creating the EKS cluster. If not provided a new IAM role is created for the cluster (requires IAM Write Access).\n                nodeInstanceRoleId:\n                    type: string\n                    description: The identifier of existing IAM role to be used for creating the EKS nodes. If not provided a new IAM role is created for the nodes (requires IAM Write Access).\n                defaultUser:\n                    type: boolean\n                    default: false\n                    description: Marks if the userid associated with the clusters AWS secret has to be used in kubeconfig (bypasses IAM user creation).\n\n        GetClusterBootstrapResponse:\n            type: object\n            properties:\n                token:\n                    type: string\n                    example: \"r6pyrk.6n1wv3twavjcnevr\"\n                discoveryTokenCaCertHash:\n                    type: string\n                masterAddress:\n                    type: string\n                    example: \"8.9.10.11:443\"\n\n        GetPKECommandsResponse:\n            type: object\n            properties:\n              additionalProperties:\n                type: string\n                example: \"pke-installer install --pipeline-url=\\\"http://127.0.0.1:9090\\\" --pipeline-token=XXX --pipeline-org-id=3 --pipeline-cluster-id=19 --node-pool=\\\"distrMaster\\\" --role=master\"\n        PostReadyPKENodeRequest:\n            type: object\n            properties:\n              config:\n                type: string\n                example: c3ppYQo=\n                description: kubeconfig in base64 or empty if not a master\n              name:\n                type: string\n                example: my-node\n                description: name of node\n              nodePool:\n                type: string\n                example: master\n                description: name of nodepool\n              ip:\n                type: string\n                example: 127.0.0.1\n                description: ip address of node (where the other nodes can reach it)\n              master:\n                type: boolean\n                description: if this node is a master node\n                example: true\n              worker:\n                type: boolean\n                description: if this node is a worker node\n                example: false\n\n        ReportPKENodeStatusRequest:\n            type: object\n            properties:\n              name:\n                type: string\n                example: my-node\n                description: name of node\n              nodePool:\n                type: string\n                example: master\n                description: name of nodepool\n              ip:\n                type: string\n                example: 127.0.0.1\n                description: ip address of node (where the other nodes can reach it)\n              message:\n                type: string\n                example: installing docker daemon\n                description: detailed description about the current bootstrapping status (including the cause of the failure)\n              phase:\n                type: string\n                description: the current phase of the bootstrap process\n                example: pre-flight\n              final:\n                type: boolean\n                description: if this is the final status report, that describes the conclusion of the whole process\n              status:\n                $ref: '#/components/schemas/ProcessStatus'\n              timestamp:\n                type: string\n                nullable: true\n                format: date-time\n                description: exact time of event\n              processId:\n                description: ID of the process registered earlier (register new process if empty)\n                type: string\n\n        PKEClusterReadinessResponse:\n            type: object\n            properties:\n                master:\n                    type: object\n                    properties:\n                        ready:\n                            type: boolean\n                            description: true when the node has been reported to be ready\n                            example: true\n\n        PostLeaderElectionRequest:\n            type: object\n            required:\n                - hostname\n            properties:\n                hostname:\n                    type: string\n                    example: node-0.my.cloud.com\n                ip:\n                    type: string\n                    example: 10.20.30.40\n\n        UpdateClusterRequest:\n            oneOf:\n                # Note: in OpenAPI generator 4.3.1 single reference\n                # allOf/anyOf/oneOf schemas are generating empty Golang model\n                # types. The workaround is to add a second reference which does\n                # not modify the actual structure of the resulting type by using\n                # duplicate fields or even duplicate schemas.\n                #\n                # Issue:\n                # https://github.com/OpenAPITools/openapi-generator/issues/2164\n                #\n                # Pull request:\n                # https://github.com/OpenAPITools/openapi-generator/pull/2897\n                - $ref: '#/components/schemas/EksUpdateClusterRequest'\n                - $ref: '#/components/schemas/EksUpdateClusterRequest'\n\n        EksUpdateClusterRequest:\n            type: object\n            properties:\n                version:\n                    type: string\n                    example: \"1.17\"\n\n        PostLeaderElectionResponse:\n            type: object\n            required:\n                - hostname\n            properties:\n                hostname:\n                    type: string\n                    example: node-0.my.cloud.com\n                ip:\n                    type: string\n                    example: 10.20.30.40\n\n        GetRestoreResponse:\n            \"$ref\": \"#/components/schemas/RestoreResponse\"\n        GetRestoreResultsResponse:\n            \"$ref\": \"#/components/schemas/RestoreResultsResponse\"\n        ListRestoresResponse:\n            type: array\n            items:\n                \"$ref\": \"#/components/schemas/RestoreResponse\"\n\n        ListSchedulesResponse:\n            type: array\n            items:\n                \"$ref\": \"#/components/schemas/ScheduleResponse\"\n\n        ListBackupsResponse:\n            type: array\n            items:\n                \"$ref\": \"#/components/schemas/BackupResponse\"\n        GetBackupResponse:\n            \"$ref\": \"#/components/schemas/BackupResponse\"\n\n        CreateBackupBucketResponse:\n            \"$ref\": \"#/components/schemas/BackupBucketResponse\"\n        BackupServiceStatusResponse:\n            \"$ref\": \"#/components/schemas/BackupServiceResponse\"\n        ListBackupBucketsResponse:\n            type: array\n            items:\n                \"$ref\": \"#/components/schemas/BackupBucketResponse\"\n        GetBackupBucketResponse:\n            \"$ref\": \"#/components/schemas/DeployedBackupBucketResponse\"\n\n        RestoreResultARK:\n            type: array\n            items:\n                type: string\n            example: []\n        RestoreResultCluster:\n            type: array\n            items:\n                type: string\n            example: []\n        RestoreResultNamespaces:\n            type: object\n            additionalProperties:\n                type: array\n                items:\n                    type: string\n                    example: []\n        RestoreResultNamespacesWarnings:\n            type: object\n            additionalProperties:\n                type: array\n                items:\n                    type: string\n                    description: \"warnings during restoration process\"\n                    example: { \"default\": [\n                                        \"not restored: services \\\"kubernetes\\\" already exists and is different from backed up version.\",\n                                        \"not restored: services \\\"pipeline-traefik-metrics-prometheus\\\" already exists and is different from backed up version.\",\n                                        \"not restored: services \\\"pipeline-traefik\\\" already exists and is different from backed up version.\"\n                                ]\n                    }\n        RestoreResultErrors:\n            type: object\n            properties:\n                ark:\n                    \"$ref\": \"#/components/schemas/RestoreResultARK\"\n                cluster:\n                    \"$ref\": \"#/components/schemas/RestoreResultCluster\"\n                namespaces:\n                    \"$ref\": \"#/components/schemas/RestoreResultNamespaces\"\n        RestoreResultWarnings:\n            type: object\n            properties:\n                ark:\n                    \"$ref\": \"#/components/schemas/RestoreResultARK\"\n                cluster:\n                    \"$ref\": \"#/components/schemas/RestoreResultCluster\"\n                namespaces:\n                    \"$ref\": \"#/components/schemas/RestoreResultNamespacesWarnings\"\n        RestoreResultsResponse:\n            type: object\n            properties:\n                errors:\n                    \"$ref\": \"#/components/schemas/RestoreResultErrors\"\n                warnings:\n                    \"$ref\": \"#/components/schemas/RestoreResultWarnings\"\n        RestoreResponse:\n            type: object\n            properties:\n                id:\n                    type: integer\n                    example: 1\n                uid:\n                    type: string\n                    example: \"494ec414-b6cb-11e8-9916-42010aa400f6\"\n                name:\n                    type: string\n                    example: \"full-backup-schedule-20180912223445\"\n                backupName:\n                    type: string\n                    example: \"full-backup-schedule\"\n                options:\n                    \"$ref\": \"#/components/schemas/BackupOptions\"\n                status:\n                    type: string\n                    example: \"InProgress\"\n                warnings:\n                    type: integer\n                    example: 3\n                errors:\n                    type: integer\n                    example: 0\n        CreateRestoreRequest:\n            type: object\n            properties:\n                backupName:\n                    type: string\n                    example: \"full-backup\"\n                options:\n                    \"$ref\": \"#/components/schemas/BackupOptions\"\n            required:\n            - backupName\n        CreateRestoreResponse:\n            type: object\n            properties:\n                restore:\n                    \"$ref\": \"#/components/schemas/RestoreResponse\"\n                status:\n                    type: integer\n                    example: 200\n        DeleteRestoreResponse:\n            type: object\n            properties:\n                id:\n                    type: integer\n                    example: 1\n                status:\n                    type: integer\n                    example: 200\n        CreateScheduleRequest:\n            type: object\n            properties:\n                name:\n                    type: string\n                    example: \"full-backup-schedule\"\n                schedule:\n                    type: string\n                    example: \"0 */6 * * *\"\n                ttl:\n                    type: string\n                    example: \"720h0m0s\"\n                labels:\n                    \"$ref\": \"#/components/schemas/Labels\"\n                options:\n                    \"$ref\": \"#/components/schemas/BackupOptions\"\n            required:\n                - name\n                - schedule\n                - ttl\n        DeleteScheduleResponse:\n            type: object\n            properties:\n                name:\n                    type: string\n                    example: \"full-backup-schedule\"\n                status:\n                    type: integer\n                    example: 200\n        CreateScheduleResponse:\n            type: object\n            properties:\n                name:\n                    type: string\n                    example: \"full-backup-schedule\"\n                status:\n                    type: integer\n                    example: 200\n        ScheduleResponse:\n            type: object\n            properties:\n                uid:\n                    type: string\n                    example: \"432d4d27-b48f-11e8-9916-42010aa400f6\"\n                name:\n                    type: string\n                    example: \"full-backup-schedule\"\n                schedule:\n                    type: string\n                    example: \"0 */6 * * *\"\n                ttl:\n                    type: string\n                    example: \"720h0m0s\"\n                labels:\n                    \"$ref\": \"#/components/schemas/Labels\"\n                options:\n                    \"$ref\": \"#/components/schemas/BackupOptions\"\n                status:\n                    type: string\n                    example: \"Enabled\"\n                lastBackup:\n                    type: string\n                    example: \"2018-09-13T11:59:11+02:00\"\n        CreateBackupRequest:\n            type: object\n            properties:\n                name:\n                    type: string\n                    example: full-backup\n                ttl:\n                    type: string\n                    example: \"30m\"\n                labels:\n                    \"$ref\": \"#/components/schemas/Labels\"\n                options:\n                    \"$ref\": \"#/components/schemas/BackupOptions\"\n            required:\n            - name\n            - ttl\n        CreateBackupResponse:\n            type: object\n            properties:\n                id:\n                    type: integer\n                    example: 1\n                status:\n                    type: integer\n                    example: 200\n        DeleteBackupResponse:\n            type: object\n            properties:\n                id:\n                    type: integer\n                    example: 1\n                status:\n                    type: integer\n                    example: 200\n        BackupResponse:\n            type: object\n            properties:\n                id:\n                    type: integer\n                    example: 1\n                uid:\n                    type: string\n                    example: \"432d4d27-b48f-11e8-9916-42010aa400f6\"\n                name:\n                    type: string\n                    example: \"full-backup\"\n                ttl:\n                    type: string\n                    example: \"720h0m0s\"\n                labels:\n                    \"$ref\": \"#/components/schemas/Labels\"\n                options:\n                    \"$ref\": \"#/components/schemas/BackupOptions\"\n                cloud:\n                    type: string\n                    example: \"google\"\n                distribution:\n                    type: string\n                    example: \"gke\"\n                status:\n                    type: string\n                    example: \"Completed\"\n                startAt:\n                    type: string\n                    example: \"2018-09-10T02:20:03+02:00\"\n                expireAt:\n                    type: string\n                    example: \"2018-10-10T02:20:03+02:00\"\n                clusterId:\n                    type: integer\n                    example: 1\n        CreateBackupBucketRequest:\n            type: object\n            properties:\n                cloud:\n                    type: string\n                    example: \"google\"\n                bucketName:\n                    type: string\n                    example: \"ark-backup-bucket-123\"\n                secretId:\n                    type: string\n                    example: \"61b9707ca463cad79188bb0ddfa1345e41fc01b651feddf06eea58a25c56d717\"\n                prefix:\n                    type: string\n                    example: \"my-backup-prefix\"\n                    description: \"Optional, if not provided will be set to the name of the cluster\"\n                location:\n                    type: string\n                    example: \"us-east\"\n                storageAccount:\n                    type: string\n                    example: \"my-storage-account\"\n                    description: \"required only in case of Azure\"\n                resourceGroup:\n                    type: string\n                    example: \"my-resource-group\"\n                    description: \"required only case of Azure\"\n            required:\n            - cloud\n            - bucketName\n            - secretId\n        BackupBucketResponse:\n            type: object\n            properties:\n                id:\n                    type: integer\n                    example: 5\n                name:\n                    type: string\n                    example: \"ark-backup-bucket-123\"\n                cloud:\n                    type: string\n                    example: \"google\"\n                secretId:\n                    type: string\n                    example: \"61b9707ca463cad79188bb0ddfa1345e41fc01b651feddf06eea58a25c56d717\"\n                status:\n                    type: string\n                    example: \"available\"\n                inUse:\n                    type: boolean\n                    example: false\n        DeployedBackupBucketResponse:\n            type: object\n            properties:\n                id:\n                    type: integer\n                    example: 5\n                name:\n                    type: string\n                    example: \"ark-backup-bucket-123\"\n                cloud:\n                    type: string\n                    example: \"google\"\n                secretId:\n                    type: string\n                    example: \"61b9707ca463cad79188bb0ddfa1345e41fc01b651feddf06eea58a25c56d717\"\n                status:\n                    type: string\n                    example: \"deployed\"\n                inUse:\n                    type: boolean\n                    example: false\n                deploymentId:\n                    type: integer\n                    example: 1\n                clusterId:\n                    type: integer\n                    example: 1\n                clusterCloud:\n                    type: string\n                    example: google\n                clusterDistribution:\n                    type: string\n                    example: gke\n        DeleteBackupBucketResponse:\n            type: object\n            properties:\n                id:\n                    type: integer\n                    example: 1\n                status:\n                    type: integer\n                    example: 200\n        DisableARKResponse:\n            type: object\n            properties:\n                status:\n                    type: integer\n                    example: 200\n        EnableARKResponse:\n            type: object\n            properties:\n                status:\n                    type: integer\n                    example: 200\n        EnableARKRequest:\n            type: object\n            required:\n                - cloud\n                - bucketName\n                - secretId\n                - schedule\n                - ttl\n            properties:\n                cloud:\n                    type: string\n                    example: \"google\"\n                bucketName:\n                    type: string\n                    example: \"ark-backup-bucket-123\"\n                schedule:\n                    type: string\n                    example: \"0 */6 * * *\"\n                ttl:\n                    type: string\n                    example: \"1h\"\n                secretId:\n                    type: string\n                    example: \"62bc3c75-91fb-4670-bad4-24b401a9deac\"\n                location:\n                    type: string\n                    example: \"us-east\"\n                useClusterSecret:\n                    type: boolean\n                    example: false\n                    description: \"relevant only in case of Amazon clusters. By default set to false in which case you must add snapshot permissions to your node instance role. Should you set to true Pipeline will deploy your cluster secret to the cluster.\"\n                serviceAccountRoleARN:\n                    type: string\n                    example: \"arn:aws:iam::AWS_ACCOUNT_ID:role/IAM_ROLE_NAME\"\n                    description: \"relevant only in case of Amazon clusters. This a third option to give permissions for volume snapshots to Velero, besides the default NodeInstance role or cluster secret deployment.\"\n                useProviderSecret:\n                    type: boolean\n                    example: false\n                    description: \"relevant only in case of Amazon clusters. This a fourth option to give permissions for volume snapshots to Velero. Should you set to true Pipeline will configure your provider secret (specified in secretId) for volume snapshot.\"\n                storageAccount:\n                    type: string\n                    example: \"my-storage-account\"\n                    description: \"required only case of Azure\"\n                resourceGroup:\n                    type: string\n                    example: \"my-resource-group\"\n                    description: \"required only case of Azure\"\n                labels:\n                    \"$ref\": \"#/components/schemas/Labels\"\n                options:\n                    \"$ref\": \"#/components/schemas/BackupOptions\"\n        Labels:\n            title: Labels\n            example:\n                backup-type: full\n            type: object\n            properties:\n                backup-type:\n                    example: full\n                    type: string\n        BackupOptions:\n            title: Backup Options\n            example:\n                includedNamespaces: [\"*\"]\n                includedResources: [\"*\"]\n                excludedNamespaces: []\n                excludedResources: []\n                snapshotVolumes: true\n                includeClusterResources: true\n            type: object\n            properties:\n                includedNamespaces:\n                    example: [\"*\"]\n                    type: array\n                    items:\n                        type: string\n                includedResources:\n                    example: [\"*\"]\n                    type: array\n                    items:\n                        type: string\n                excludedNamespaces:\n                    example: []\n                    type: array\n                    items:\n                        type: string\n                excludedResources:\n                    example: []\n                    type: array\n                    items:\n                        type: string\n                snapshotVolumes:\n                    example: true\n                    type: boolean\n                includeClusterResources:\n                    example: true\n                    type: boolean\n\n        GetLeaderElectionResponse:\n            type: object\n            required:\n                - hostname\n            properties:\n                hostname:\n                    type: string\n                    example: node-0.my.cloud.com\n                ip:\n                    type: string\n                    example: 10.20.30.40\n        api.ClusterGroup:\n            properties:\n                enabledFeatures:\n                    items:\n                        type: string\n                    type: array\n                id:\n                    example: 10\n                    type: integer\n                members:\n                    items:\n                        $ref: \"#/components/schemas/api.Member\"\n                    type: array\n                name:\n                    type: string\n                organizationId:\n                    type: integer\n                uid:\n                    type: string\n            type: object\n        api.CreateRequest:\n            properties:\n                members:\n                    items:\n                        type: integer\n                    type: array\n                name:\n                    example: cluster_group_name\n                    type: string\n            type: object\n        api.CreateResponse:\n            properties:\n                id:\n                    type: integer\n                name:\n                    example: cluster_group_name\n                    type: string\n            type: object\n        api.FeatureRequest:\n            type: object\n        api.FeatureResponse:\n            properties:\n                clusterGroup:\n                    $ref: \"#/components/schemas/api.ClusterGroup\"\n                enabled:\n                    type: boolean\n                lastReconcileError:\n                    type: string\n                name:\n                    type: string\n                properties:\n                    $ref: \"#/components/schemas/api.FeatureRequest\"\n                reconcileState:\n                    type: string\n                status:\n                    type: object\n            type: object\n        api.Member:\n            properties:\n                cloud:\n                    example: google\n                    type: string\n                distribution:\n                    example: gke\n                    type: string\n                id:\n                    example: 1001\n                    type: integer\n                name:\n                    example: clusterName\n                    type: string\n                status:\n                    type: string\n            type: object\n        api.UpdateRequest:\n            properties:\n                members:\n                    items:\n                        type: integer\n                    type: array\n                name:\n                    example: cluster_group_name\n                    type: string\n            type: object\n        api.UpdateResponse:\n            properties:\n                id:\n                    type: integer\n                name:\n                    example: cluster_group_name\n                    type: string\n            type: object\n\n        deployment.ClusterGroupDeployment:\n            properties:\n                atomic:\n                    type: boolean\n                dryrun:\n                    type: boolean\n                name:\n                    type: string\n                namespace:\n                    type: string\n                package:\n                    items:\n                        type: integer\n                    type: array\n                releaseName:\n                    type: string\n                reuseValues:\n                    type: boolean\n                rollingMode:\n                    type: boolean\n                valueOverrides:\n                    type: object\n                values:\n                    type: object\n                version:\n                    type: string\n            required:\n                - name\n            type: object\n        deployment.CreateUpdateDeploymentResponse:\n            properties:\n                releaseName:\n                    type: string\n                targetClusters:\n                    items:\n                        $ref: \"#/components/schemas/deployment.TargetClusterStatus\"\n                    type: array\n            type: object\n        deployment.DeploymentInfo:\n            properties:\n                chart:\n                    type: string\n                chartName:\n                    type: string\n                chartVersion:\n                    type: string\n                createdAt:\n                    type: string\n                description:\n                    type: string\n                namespace:\n                    type: string\n                releaseName:\n                    type: string\n                targetClusters:\n                    items:\n                        $ref: \"#/components/schemas/deployment.TargetClusterStatus\"\n                    type: array\n                updatedAt:\n                    type: string\n                valueOverrides:\n                    type: object\n                values:\n                    type: object\n                version:\n                    type: integer\n            type: object\n        deployment.ListDeploymentResponse:\n            properties:\n                chart:\n                    type: string\n                chartName:\n                    type: string\n                chartVersion:\n                    type: string\n                createdAt:\n                    type: string\n                namespace:\n                    type: string\n                releaseName:\n                    type: string\n                updatedAt:\n                    type: string\n                version:\n                    type: integer\n            type: object\n        deployment.TargetClusterStatus:\n            properties:\n                cloud:\n                    type: string\n                clusterId:\n                    type: integer\n                clusterName:\n                    type: string\n                distribution:\n                    type: string\n                error:\n                    type: string\n                stale:\n                    type: boolean\n                status:\n                    type: string\n                version:\n                    type: string\n            type: object\n        BackupServiceResponse:\n            type: object\n            properties:\n                enabled:\n                    type: boolean\n\n        IntegratedServiceList:\n            type: object\n            additionalProperties:\n                $ref: \"#/components/schemas/IntegratedServiceDetails\"\n\n        ActivateIntegratedServiceRequest:\n            type: object\n            required:\n                - spec\n            properties:\n                spec:\n                    $ref: \"#/components/schemas/IntegratedServiceSpec\"\n\n        IntegratedServiceDetails:\n            type: object\n            required:\n                - status\n            properties:\n                output:\n                    type: object\n                spec:\n                    $ref: \"#/components/schemas/IntegratedServiceSpec\"\n                status:\n                    type: string\n                    enum: [inactive, pending, active, error]\n\n        UpdateIntegratedServiceRequest:\n            type: object\n            required:\n                - spec\n            properties:\n                spec:\n                    $ref: \"#/components/schemas/IntegratedServiceSpec\"\n\n        IntegratedServiceSpec:\n            type: object\n\n        ListNodepoolLabelsResponse:\n            type: object\n            additionalProperties:\n                type: array\n                items:\n                    $ref: '#/components/schemas/NodepoolLabels'\n\n        NodepoolLabels:\n            type: object\n            properties:\n                name:\n                    type: string\n                value:\n                    type: string\n                reserved:\n                    type: boolean\n\n        NamespaceListResponse:\n            type: object\n            properties:\n                namespaces:\n                    $ref: \"#/components/schemas/NamespaceList\"\n\n        NamespaceList:\n            type: array\n            items:\n                $ref: \"#/components/schemas/NamespaceItem\"\n\n        NamespaceItem:\n            type: object\n            properties:\n                name:\n                    type: string\n\n        ListProcessesResponse:\n            type: array\n            items:\n                $ref: '#/components/schemas/Process'\n\n        Process:\n            type: object\n            properties:\n                id:\n                    type: string\n                parentId:\n                    type: string\n                orgId:\n                    type: integer\n                type:\n                    type: string\n                log:\n                    type: string\n                resourceId:\n                    type: string\n                resourceType:\n                    type: string\n                status:\n                    $ref: '#/components/schemas/ProcessStatus'\n                startedAt:\n                    type: string\n                    format: date-time\n                finishedAt:\n                    type: string\n                    nullable: true\n                    format: date-time\n                events:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/ProcessEvent'\n\n        ProcessEvent:\n            type: object\n            properties:\n                id:\n                    type: integer\n                processId:\n                    type: string\n                type:\n                    type: string\n                log:\n                    type: string\n                status:\n                    $ref: '#/components/schemas/ProcessStatus'\n                timestamp:\n                    type: string\n                    format: date-time\n\n        ProcessStatus:\n            title: ProcessStatus\n            enum: [running, failed, finished, canceled]\n",
			"canonicalURL": "/github.com/banzaicloud/pipeline@6a777c4b3d15a8a5d45b8320b4e5e64a106b2623/-/blob/apis/pipeline/pipeline.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/banzaicloud/pipeline/blob/6a777c4b3d15a8a5d45b8320b4e5e64a106b2623/apis/pipeline/pipeline.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/api/v1/orgs/{orgid}/clustergroups\": at 1:167165: get: at 1:167172: parse path \"/api/v1/orgs/{orgid}/clustergroups\": path parameter not specified: \"orgid\""
}