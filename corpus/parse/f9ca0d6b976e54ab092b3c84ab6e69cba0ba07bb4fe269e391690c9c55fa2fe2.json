{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/nowakprojects/CodersCamp2020.Project.FullStack-Node-React.TableSoccerTournaments"
		},
		"file": {
			"name": "rest-api-docs.yaml",
			"size": 0,
			"path": "backend/src/rest-api-docs.yaml",
			"byteSize": 23907,
			"content": "openapi: 3.0.1\ninfo:\n  title: Table Soccer Tournaments REST API\n  description: REST API for supporting organizators of table soccer tournaments\n  version: 0.1.0\nservers:\n  - url: /rest-api\n    description: REST API v1\ntags:\n  - name: Tournament Registrations\n    description: Open/Closing registrations for tournament\n  - name: Players profiles\n    description: Save and get players profiles\n  - name: Doubles Tournament\n    description: Get / Start tournaments, Get doubles tournament teams \u0026 matches\n  - name: Tournament Tables\n    description: Assign and get list of tournament tables\n  - name: Match\n    description: Start/End match\n  - name: Tournament Details\n    description: Add and fetch tournament details\n  - name: Tournament Tree\n    description: Fetch tournament tree\n  - name: Specification\n    description: The Open API specification\npaths:\n  /matches/{matchId}/result:\n    post:\n      tags:\n        - Match\n      description: End match\n      parameters:\n        - name: matchId\n          in: path\n          description: Match Id (\"tournamentId_matchNumber\")\n          required: true\n          schema:\n            type: string\n            example: 2480fc2c-bbd7-427c-9439-02f76583aef5_1\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#components/schemas/PostEndMatchRequestBody'\n      responses:\n        200:\n          description: Match successfully ended\n  /matches/{matchId}:\n    get:\n      tags:\n        - Match\n      description: Fetch match with given id\n      parameters:\n        - name: matchId\n          in: path\n          description: Match Id (\"tournamentId_matchNumber\")\n          required: true\n          schema:\n            type: string\n            example: 2480fc2c-bbd7-427c-9439-02f76583aef5_1\n      responses:\n        200:\n          description: Match with given id\n          content:\n            application/json:\n              schema:\n                $ref: '#components/schemas/MatchDto'\n  /matches:\n    post:\n      tags:\n        - Match\n      description: Start match\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#components/schemas/PostStartMatchRequestBody'\n      responses:\n        200:\n          description: Match successfully started\n  /tournament-registrations:\n    get:\n      tags:\n        - Tournament Registrations\n      description: Fetch list of all torunament registrations\n      responses:\n        200:\n          description: All existing tournament registrations\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TournamentRegistrationsListDto'\n    post:\n      tags:\n        - Tournament Registrations\n      description: Open new tournament registrations\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostTournamentRegistrationsRequestBody'\n      responses:\n        201:\n          description: Tournament registrations successfully opened\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostTournamentRegistrationsResponseBody'\n  /tournament-registrations/{tournamentId}:\n    get:\n      tags:\n        - Tournament Registrations\n      description: Fetch list of all torunament registrations\n      parameters:\n        - name: tournamentId\n          in: path\n          description: Tournament ID\n          required: true\n          schema:\n            type: string\n            format: uuid\n            example: 2480fc2c-bbd7-427c-9439-02f76583aef5\n      responses:\n        200:\n          description: Tournament Registrations with for requested tournament\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TournamentRegistrationsDto'\n  /tournament-registrations/{tournamentId}/close:\n    post:\n      tags:\n        - Tournament Registrations\n      description: Close tournament registrations\n      parameters:\n        - name: tournamentId\n          in: path\n          description: Tournament ID\n          required: true\n          schema:\n            type: string\n            format: uuid\n            example: 2480fc2c-bbd7-427c-9439-02f76583aef5\n      responses:\n        200:\n          description: Tournament registrations was successfully closed\n  /tournament-registrations/{tournamentId}/players:\n    post:\n      tags:\n        - Tournament Registrations\n      description: Register player for participation in the tournament\n      parameters:\n        - name: tournamentId\n          in: path\n          description: Tournament ID\n          required: true\n          schema:\n            type: string\n            format: uuid\n            example: 2480fc2c-bbd7-427c-9439-02f76583aef5\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostRegisterPlayerForTournamentRequestBody'\n      responses:\n        200:\n          description: Player successfully registered for the tournament\n  /players-profiles:\n    post:\n      tags:\n        - Players profiles\n      description: Create new player profile\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostPlayerProfileRequestBody'\n      responses:\n        200:\n          description: Player profile successfully created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostPlayerProfileResponseBody'\n    get:\n      tags:\n        - Players profiles\n      description: Fetch list of all players profiles\n      responses:\n        200:\n          description: All existing players profiles\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlayerProfilesListDto'\n  /players-profiles/{playerdId}:\n    get:\n      tags:\n        - Players profiles\n      description: Get player profile under given Player ID\n      parameters:\n        - name: playerdId\n          in: path\n          description: Player ID\n          required: true\n          schema:\n            type: string\n            format: uuid\n            example: 2480fc2c-bbd7-427c-9439-02f76583aef5\n      responses:\n        200:\n          description: Player profile for requested player ID\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlayerProfileDto'\n  /doubles-tournaments/{tournamentId}/teams:\n    get:\n      tags:\n        - Doubles Tournament\n      description: Fetch list of all torunament teams\n      parameters:\n        - name: tournamentId\n          in: path\n          description: Tournament ID\n          required: true\n          schema:\n            type: string\n            format: uuid\n            example: 2480fc2c-bbd7-427c-9439-02f76583aef5\n      responses:\n        200:\n          description: Tournament teams for requested tournament\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TournamentTeamDto'\n  /doubles-tournaments/{tournamentId}/matches:\n    get:\n      tags:\n        - Doubles Tournament\n      description: Fetch list of matches in queue\n      parameters:\n        - name: tournamentId\n          in: path\n          description: Tournament ID\n          required: true\n          schema:\n            type: string\n            format: uuid\n            example: 2480fc2c-bbd7-427c-9439-02f76583aef5\n      responses:\n        200:\n          description: Matches queue for requested tournament\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MatchesQueueDto'\n  /doubles-tournaments/{tournamentId}/places:\n    get:\n      tags:\n        - Doubles Tournament\n      description: Fetch places which are already known.\n      parameters:\n        - name: tournamentId\n          in: path\n          description: Tournament ID\n          required: true\n          schema:\n            type: string\n            format: uuid\n            example: 2480fc2c-bbd7-427c-9439-02f76583aef5\n      responses:\n        200:\n          description: Tournament places\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TournamentPlaceListDto'\n  /doubles-tournaments:\n    get:\n      tags:\n        - Doubles Tournament\n      description: Fetch list of double tournaments\n      responses:\n        200:\n          description: List of double tournaments\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleTournamentListDto'\n  /doubles-tournaments/{tournamentId}:\n    get:\n      tags:\n        - Doubles Tournament\n      description: Fetch single doubles tournament\n      responses:\n        200:\n          description: Doubles tournament\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleTournamentDto'\n  /doubles-tournaments/{tournamentId}/start:\n    post:\n      tags:\n        - Doubles Tournament\n      description: Start tournament\n      parameters:\n        - name: tournamentId\n          in: path\n          description: Tournament Id\n          required: true\n          schema:\n            type: string\n            format: uuid\n            example: 2480fc2c-bbd7-427c-9439-02f76583aef5\n      responses:\n        202:\n          description: Tournament was started\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleTournamentDto'\n  /tournaments/{tournamentId}/tables:\n    post:\n      tags:\n        - Tournament Tables\n      description: Assign tables to the tournament\n      parameters:\n        - name: tournamentId\n          in: path\n          description: Tournament ID\n          required: true\n          schema:\n            type: string\n            format: uuid\n            example: 2480fc2c-bbd7-427c-9439-02f76583aef5\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostAssignTournamentTablesRequestBody'\n      responses:\n        200:\n          description: Tables successfully assigned to the tournament\n    get:\n      tags:\n        - Tournament Tables\n      description: Fetch list of all tournament tables\n      parameters:\n        - name: tournamentId\n          in: path\n          description: Tournament ID\n          required: true\n          schema:\n            type: string\n            format: uuid\n            example: 2480fc2c-bbd7-427c-9439-02f76583aef5\n      responses:\n        200:\n          description: Tournament tables for requested tournament\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TournamentTablesDto'\n  /tournament-details:\n    get:\n      tags:\n        - Tournament Details\n      description: Fetch all tournaments details\n      responses:\n        200:\n          description: All existing tournaments details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TournamentDetailsListDto'\n    post:\n      tags:\n        - Tournament Details\n      description: Add tournament details\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostTournamentDetailsRequestBody'\n      responses:\n        201:\n          description: Tournament details successfully added\n  /doubles-tournaments/{tournamentId}/tree:\n    get:\n      tags:\n        - Tournament Tree\n      description: Fetch tournament tree for given tournament ID\n      parameters:\n        - name: tournamentId\n          in: path\n          description: Tournament ID\n          required: true\n          schema:\n            type: string\n            format: uuid\n            example: 2480fc2c-bbd7-427c-9439-02f76583aef5\n      responses:\n        200:\n          description: Tournament Tree\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TournamentTreeDto'\ncomponents:\n  schemas:\n    TournamentTeamDto:\n      type: object\n      properties:\n        items:\n          description: List of tournament teams\n          type: array\n          items:\n            type: object\n            properties:\n              teamId:\n                description: Identifier of the team\n                type: string\n                format: uuid\n                example: 094469cf-6fcc-4947-a5c0-be1e94f54855\n              firstTeamPlayer:\n                description: First team player\n                type: string\n                format: uuid\n                example: b8c4c924-a9a5-4296-a319-ebdfbadec6ba\n              secondTeamPlayer:\n                description: Second team player\n                type: string\n                format: uuid\n                example: 3c09dc91-d82c-4226-9801-4430d3aa48ce\n    DoubleTournamentDto:\n      type: object\n      properties:\n        tournamentId:\n          description: Identifier of the tournament\n          type: string\n          format: uuid\n          example: 2480fc2c-bbd7-427c-9439-02f76583aef5\n        tournamentTeams:\n          description: tournament teams\n          type: array\n          items:\n            $ref: '#/components/schemas/TournamentTeamDto'\n          uniqueItems: true\n        status:\n          description: status of the tournament\n          type: string\n          enum:\n            - NOT_STARTED\n            - STARTED\n            - ENDED\n          example: STARTED\n    DoubleTournamentListDto:\n      type: array\n      items:\n        $ref: '#/components/schemas/DoubleTournamentDto'\n      uniqueItems: true\n    QueuedMatchDto:\n      type: object\n      properties:\n        matchNumber:\n          description: Match number\n          type: number\n          example: 1\n        team1Id:\n          description: First team id\n          type: string\n          format: uuid\n          example: b8c4c924-a9a5-4296-a319-ebdfbadec6ba\n        team2Id:\n          description: Second team id\n          type: string\n          format: uuid\n          example: b8c4c924-a9a5-4296-a319-ebdfbadec6ba\n        started:\n          description: Match status\n          type: string\n          enum:\n            - ENQUEUED\n            - STARTED\n            - ENDED\n        tableNumber:\n          description: Table number\n          type: number\n          example: 1\n    MatchesQueueDto:\n      type: object\n      properties:\n        tournamentId:\n          description: Identifier of the tournament\n          type: string\n          format: uuid\n          example: 2480fc2c-bbd7-427c-9439-02f76583aef5\n        queue:\n          description: Matches queue\n          type: array\n          items:\n            $ref: '#/components/schemas/QueuedMatchDto'\n          uniqueItems: true\n    TournamentRegistrationsListDto:\n      type: array\n      items:\n        $ref: '#/components/schemas/TournamentRegistrationsDto'\n      uniqueItems: true\n    TournamentRegistrationsDto:\n      type: object\n      properties:\n        tournamentId:\n          description: Identifier of the tournament\n          type: string\n          format: uuid\n          example: 2480fc2c-bbd7-427c-9439-02f76583aef5\n        status:\n          description: status of the tournament registrations\n          type: string\n          enum:\n            - OPENED\n            - CLOSED\n          example: OPENED\n        registeredPlayersIds:\n          description: ids of players which registered for the tournament\n          type: array\n          items:\n            type: string\n          uniqueItems: true\n    PostRegisterPlayerForTournamentRequestBody:\n      type: object\n      properties:\n        playerId:\n          description: Identifier of the player\n          type: string\n          format: uuid\n          example: 2480fc2c-bbd7-427c-9439-02f76583aef5\n      required:\n        - playerId\n    PostTournamentRegistrationsResponseBody:\n      type: object\n      properties:\n        tournamentId:\n          description: Identifier of the tournament for which registrations where opened\n          type: string\n          format: uuid\n          example: 2480fc2c-bbd7-427c-9439-02f76583aef5\n      required:\n        - tournamentId\n    PostTournamentRegistrationsRequestBody:\n      type: object\n      properties:\n        tournamentId:\n          description: Identifier of the tournament for which registrations should be opened\n          type: string\n          format: uuid\n          example: 2480fc2c-bbd7-427c-9439-02f76583aef5\n      required:\n        - tournamentId\n    PostPlayerProfileRequestBody:\n      type: object\n      properties:\n        playerId:\n          description: Identifier of the player profile which should be created\n          type: string\n          format: uuid\n          example: 2480fc2c-bbd7-427c-9439-02f76583aef5\n        firstName:\n          type: string\n        lastName:\n          type: string\n        phoneNumber:\n          type: string\n        emailAddress:\n          type: string\n    PostPlayerProfileResponseBody:\n      type: object\n      properties:\n        playerId:\n          description: Identifier of the player profile which should be created\n          type: string\n          format: uuid\n          example: 2480fc2c-bbd7-427c-9439-02f76583aef5\n        firstName:\n          type: string\n        lastName:\n          type: string\n        phoneNumber:\n          type: string\n        emailAddress:\n          type: string\n    PostStartMatchRequestBody:\n      type: object\n      properties:\n        matchId:\n          description: Identifier of the match that is supposed to start (\"tournamentId_matchNumber\")\n          type: string\n          example: 2480fc2c-bbd7-427c-9439-02f76583aef5_1\n        firstMatchSideId:\n          description: Identifier of the match first team\n          type: string\n          format: uuid\n          example: 3510fc2c-bbd7-427c-9439-02f76583aef5\n        secondMatchSideId:\n          description: Identifier of the match second team\n          type: string\n          format: uuid\n          example: 8321fc2c-bbd7-427c-9439-02f76583aef7\n      required:\n        - tournamentId\n        - firstMatchSideId\n        - secondMatchSideId\n    PostEndMatchRequestBody:\n      type: object\n      properties:\n        winnerId:\n          description: Identifier of the winner team\n          type: string\n          format: uuid\n          example: 3510fc2c-bbd7-427c-9439-02f76583aef5\n    MatchDto:\n      type: object\n      properties:\n        matchId:\n          description: Identifier of the match (\"tournamentId_matchNumber\")\n          type: string\n          example: 2480fc2c-bbd7-427c-9439-02f76583aef5_1\n        firstMatchSideId:\n          description: Identifier of the match first team\n          type: string\n          format: uuid\n          example: 3510fc2c-bbd7-427c-9439-02f76583aef5\n        secondMatchSideId:\n          description: Identifier of the match second team\n          type: string\n          format: uuid\n          example: 8321fc2c-bbd7-427c-9439-02f76583aef7\n        winnerId:\n          description: Identifier of the winner team, returned only when match was ended\n          type: string\n          format: uuid\n          example: 3510fc2c-bbd7-427c-9439-02f76583aef5\n    PostAssignTournamentTablesRequestBody:\n      type: object\n      properties:\n        tables:\n          description: List of tournament tables\n          type: array\n          items:\n            type: object\n            properties:\n              tableNumber:\n                description: Number of the table (1-200)\n                type: integer\n                minimum: 1\n                maximum: 200\n                example: 1\n              tableName:\n                description: Name of the table\n                type: string\n              isFree:\n                description: Is table available for next match\n                type: boolean\n          uniqueItems: true\n    TournamentTablesDto:\n      type: object\n      properties:\n        tables:\n          description: List of tournament tables\n          type: array\n          items:\n            type: object\n            properties:\n              tableNumber:\n                description: Number of the table (1-200)\n                type: integer\n                example: 1\n              tableName:\n                description: Name of the table\n                type: string\n              isFree:\n                description: Is table available for next match\n                type: boolean\n          uniqueItems: true\n    PlayerProfileDto:\n      type: object\n      properties:\n        playerId:\n          description: Identifier of the player profile which should be created\n          type: string\n          format: uuid\n          example: 2480fc2c-bbd7-427c-9439-02f76583aef5\n        firstName:\n          type: string\n          example: Jan\n        lastName:\n          type: string\n          example: Kowalski\n        phoneNumber:\n          type: string\n          example: 123456789\n        emailAddress:\n          type: string\n          example: email@address.com\n    PlayerProfilesListDto:\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            $ref: '#/components/schemas/PlayerProfileDto'\n          uniqueItems: true\n    PostTournamentDetailsRequestBody:\n      type: object\n      properties:\n        tournamentId:\n          description: Identifier of the tournament for which details should be added\n          type: string\n          format: uuid\n          example: 2480fc2c-bbd7-427c-9439-02f76583aef5\n        tournamentName:\n          description: Name of the tournament\n          type: string\n          example: WrocLove Tournament\n      required:\n        - tournamentId\n        - tournamentName\n    TournamentDetailsListDto:\n      type: array\n      items:\n        $ref: '#/components/schemas/TournamentDetailsDto'\n      uniqueItems: true\n    TournamentDetailsDto:\n      type: object\n      properties:\n        tournamentId:\n          description: Identifier of the tournament\n          type: string\n          format: uuid\n          example: 2480fc2c-bbd7-427c-9439-02f76583aef5\n        tournamentName:\n          description: Name of the tournament\n          type: string\n          example: WrocLove Tournament\n    TournamentTreeDto:\n      type: object\n      properties:\n        tournamentId:\n          description: Identifier of the tournament\n          type: string\n          format: uuid\n          example: 2480fc2c-bbd7-427c-9439-02f76583aef5\n        tournamentTeams:\n          description: tournament teams\n          type: array\n          items:\n            properties:\n              tournamentTeamId:\n                type: string\n          uniqueItems: true\n        tournamentTreeArray:\n          description: Tournament tree as an array\n          type: array\n          items:\n            properties:\n              fightingTeamsGroupId:\n                type: string\n              firstTeam:\n                type: string\n              secondTeam:\n                type: string\n              fightingTeamsGroupLevel:\n                type: number\n              nextMatchId:\n                type: string\n              matchNumberInSequence:\n                type: number\n              isMatchFinished:\n                type: boolean\n    TournamentPlaceListDto:\n      type: array\n      items:\n        $ref: '#/components/schemas/TournamentPlaceDto'\n      uniqueItems: true\n    TournamentPlaceDto:\n      type: object\n      properties:\n        teamId:\n          description: Identifier of the team\n          type: string\n          format: uuid\n          example: 2480fc2c-bbd7-427c-9439-02f76583aef5\n        placeNumber:\n          description: Place number\n          type: number\n          example: 1\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /matches/{matchId}: get: responses: 200: content: application/json: schema: parse schema: resolve \"#components/schemas/MatchDto\": find schema: resolve \"#components/schemas/MatchDto\": invalid pointer \"components/schemas/MatchDto\": pointer must start with '/'"
}