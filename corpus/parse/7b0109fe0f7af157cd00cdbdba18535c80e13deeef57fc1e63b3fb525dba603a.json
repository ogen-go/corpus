{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/eclipse-dataspaceconnector/DataSpaceConnector"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "resources/openapi/openapi.yaml",
			"byteSize": 22133,
			"content": "openapi: 3.0.1\ninfo:\n  title: EDC REST API\n  description: All files merged by open api merger\n  license:\n    name: Apache License v2.0\n    url: http://apache.org/v2\n  version: 1.0.0-SNAPSHOT\nservers:\n- url: /\npaths:\n  /catalog:\n    post:\n      operationId: getCatalog\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FederatedCatalogCacheQuery'\n      responses:\n        default:\n          description: default response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ContractOffer'\n  /policies:\n    get:\n      operationId: getAllPolicies\n      parameters:\n      - name: offset\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: integer\n          format: int32\n      - name: limit\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: integer\n          format: int32\n      - name: filter\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      - name: sort\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          enum:\n          - ASC\n          - DESC\n      - name: sortField\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PolicyDefinitionDto'\n    post:\n      operationId: createPolicy\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PolicyDefinitionDto'\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  /policies/{id}:\n    get:\n      operationId: getPolicy\n      parameters:\n      - name: id\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PolicyDefinitionDto'\n    delete:\n      operationId: deletePolicy\n      parameters:\n      - name: id\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  /check/health:\n    get:\n      operationId: checkHealth\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  /check/liveness:\n    get:\n      operationId: getLiveness\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  /check/readiness:\n    get:\n      operationId: getReadiness\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  /check/startup:\n    get:\n      operationId: getStartup\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  /contractnegotiations/{id}/cancel:\n    post:\n      operationId: cancelNegotiation\n      parameters:\n      - name: id\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  /contractnegotiations/{id}/decline:\n    post:\n      operationId: declineNegotiation\n      parameters:\n      - name: id\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  /contractnegotiations/{id}:\n    get:\n      operationId: getNegotiation\n      parameters:\n      - name: id\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContractNegotiationDto'\n  /contractnegotiations/{id}/state:\n    get:\n      operationId: getNegotiationState\n      parameters:\n      - name: id\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json:\n              schema:\n                type: string\n  /contractnegotiations:\n    get:\n      operationId: getNegotiations\n      parameters:\n      - name: offset\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: integer\n          format: int32\n      - name: limit\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: integer\n          format: int32\n      - name: filter\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      - name: sort\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          enum:\n          - ASC\n          - DESC\n      - name: sortField\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ContractNegotiationDto'\n  /transferprocess/{id}/cancel:\n    post:\n      operationId: createContractDefinition\n      parameters:\n      - name: id\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  /transferprocess/{id}/deprovision:\n    post:\n      operationId: deleteContractDefinition\n      parameters:\n      - name: id\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  /transferprocess:\n    get:\n      operationId: getAllContractDefinitions\n      parameters:\n      - name: offset\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: integer\n          format: int32\n      - name: limit\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: integer\n          format: int32\n      - name: filter\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      - name: sort\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          enum:\n          - ASC\n          - DESC\n      - name: sortField\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/TransferProcessDto'\n  /transferprocess/{id}:\n    get:\n      operationId: getTransferProcess\n      parameters:\n      - name: id\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransferProcessDto'\n  /transferprocess/{id}/state:\n    get:\n      operationId: getTransferProcessState\n      parameters:\n      - name: id\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransferProcessDto'\n  /contractdefinitions:\n    get:\n      operationId: getAllContractDefinitions\n      parameters:\n      - name: offset\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: integer\n          format: int32\n      - name: limit\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: integer\n          format: int32\n      - name: filter\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      - name: sort\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          enum:\n          - ASC\n          - DESC\n      - name: sortField\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ContractDefinitionDto'\n    post:\n      operationId: createContractDefinition\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ContractDefinitionDto'\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  /contractdefinitions/{id}:\n    get:\n      operationId: getContractDefinition\n      parameters:\n      - name: id\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContractDefinitionDto'\n    delete:\n      operationId: deleteContractDefinition\n      parameters:\n      - name: id\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  /identity-hub/query-commits:\n    post:\n      operationId: queryCommits\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json:\n              schema:\n                type: string\n  /identity-hub/query-objects:\n    post:\n      operationId: queryObjects\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json:\n              schema:\n                type: string\n  /identity-hub/collections:\n    post:\n      operationId: write\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json:\n              schema:\n                type: string\n  /identity-hub/collections-commit:\n    post:\n      operationId: writeCommit\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              additionalProperties:\n                type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  /control/catalog:\n    get:\n      operationId: getDescription\n      parameters:\n      - name: provider\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  /control/transfer:\n    post:\n      operationId: addTransfer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DataRequest'\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  /control/agreement/{id}:\n    get:\n      operationId: getAgreementById\n      parameters:\n      - name: id\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  /control/negotiation/{id}:\n    get:\n      operationId: getNegotiationById\n      parameters:\n      - name: id\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  /control/negotiation/{id}/state:\n    get:\n      operationId: getNegotiationStateById\n      parameters:\n      - name: id\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  /control/negotiation:\n    post:\n      operationId: initiateNegotiation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ContractOfferRequest'\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\ncomponents:\n  schemas:\n    Action:\n      type: object\n      properties:\n        type:\n          type: string\n        includedIn:\n          type: string\n        constraint:\n          $ref: '#/components/schemas/Constraint'\n    Asset:\n      type: object\n      properties:\n        properties:\n          type: object\n          additionalProperties:\n            type: object\n    Constraint:\n      required:\n      - edctype\n      type: object\n      properties:\n        edctype:\n          type: string\n      discriminator:\n        propertyName: edctype\n    ContractDefinitionDto:\n      type: object\n      properties:\n        accessPolicyId:\n          type: string\n        contractPolicyId:\n          type: string\n        criteria:\n          type: array\n          items:\n            $ref: '#/components/schemas/Criterion'\n        id:\n          type: string\n    ContractNegotiationDto:\n      type: object\n      properties:\n        contractAgreementId:\n          type: string\n        counterPartyAddress:\n          type: string\n        errorDetail:\n          type: string\n        id:\n          type: string\n        protocol:\n          type: string\n        state:\n          type: string\n        type:\n          type: string\n          enum:\n          - CONSUMER\n          - PROVIDER\n    ContractOffer:\n      type: object\n      properties:\n        id:\n          type: string\n        policy:\n          $ref: '#/components/schemas/Policy'\n        asset:\n          $ref: '#/components/schemas/Asset'\n        provider:\n          type: string\n          format: uri\n        consumer:\n          type: string\n          format: uri\n        offerStart:\n          type: string\n          format: date-time\n        offerEnd:\n          type: string\n          format: date-time\n        contractStart:\n          type: string\n          format: date-time\n        contractEnd:\n          type: string\n          format: date-time\n    ContractOfferRequest:\n      type: object\n      properties:\n        type:\n          type: string\n          enum:\n          - INITIAL\n          - COUNTER_OFFER\n        protocol:\n          type: string\n        connectorId:\n          type: string\n        connectorAddress:\n          type: string\n        correlationId:\n          type: string\n        contractOffer:\n          $ref: '#/components/schemas/ContractOffer'\n    Criterion:\n      type: object\n      properties:\n        left:\n          type: object\n        op:\n          type: string\n        right:\n          type: object\n    DataAddress:\n      type: object\n      properties:\n        properties:\n          type: object\n          additionalProperties:\n            type: string\n    DataRequest:\n      type: object\n      properties:\n        id:\n          type: string\n        processId:\n          type: string\n        connectorAddress:\n          type: string\n        protocol:\n          type: string\n        connectorId:\n          type: string\n        assetId:\n          type: string\n        contractId:\n          type: string\n        dataDestination:\n          $ref: '#/components/schemas/DataAddress'\n        managedResources:\n          type: boolean\n        properties:\n          type: object\n          additionalProperties:\n            type: string\n        transferType:\n          $ref: '#/components/schemas/TransferType'\n        sync:\n          type: boolean\n        destinationType:\n          type: string\n    DataRequestDto:\n      type: object\n      properties:\n        assetId:\n          type: string\n        contractId:\n          type: string\n        connectorId:\n          type: string\n    Duty:\n      type: object\n      properties:\n        uid:\n          type: string\n        target:\n          type: string\n        action:\n          $ref: '#/components/schemas/Action'\n        assignee:\n          type: string\n        assigner:\n          type: string\n        constraints:\n          type: array\n          items:\n            $ref: '#/components/schemas/Constraint'\n        parentPermission:\n          $ref: '#/components/schemas/Permission'\n        consequence:\n          $ref: '#/components/schemas/Duty'\n    FederatedCatalogCacheQuery:\n      type: object\n      properties:\n        criteria:\n          type: array\n          items:\n            $ref: '#/components/schemas/Criterion'\n    Permission:\n      type: object\n      properties:\n        uid:\n          type: string\n        target:\n          type: string\n        action:\n          $ref: '#/components/schemas/Action'\n        assignee:\n          type: string\n        assigner:\n          type: string\n        constraints:\n          type: array\n          items:\n            $ref: '#/components/schemas/Constraint'\n        duties:\n          type: array\n          items:\n            $ref: '#/components/schemas/Duty'\n    Policy:\n      type: object\n      properties:\n        uid:\n          type: string\n        permissions:\n          type: array\n          items:\n            $ref: '#/components/schemas/Permission'\n        prohibitions:\n          type: array\n          items:\n            $ref: '#/components/schemas/Prohibition'\n        obligations:\n          type: array\n          items:\n            $ref: '#/components/schemas/Duty'\n        extensibleProperties:\n          type: object\n          additionalProperties:\n            type: object\n        inheritsFrom:\n          type: string\n        assigner:\n          type: string\n        assignee:\n          type: string\n        target:\n          type: string\n        '@type':\n          type: string\n          enum:\n          - SET\n          - OFFER\n          - CONTRACT\n    PolicyDefinitionDto:\n      type: object\n      properties:\n        uid:\n          type: string\n        permissions:\n          type: array\n          items:\n            $ref: '#/components/schemas/Permission'\n        prohibitions:\n          type: array\n          items:\n            $ref: '#/components/schemas/Prohibition'\n        obligations:\n          type: array\n          items:\n            $ref: '#/components/schemas/Duty'\n        extensibleProperties:\n          type: object\n          additionalProperties:\n            type: object\n        inheritsFrom:\n          type: string\n        '@type':\n          type: string\n          enum:\n          - SET\n          - OFFER\n          - CONTRACT\n    Prohibition:\n      type: object\n      properties:\n        uid:\n          type: string\n        target:\n          type: string\n        action:\n          $ref: '#/components/schemas/Action'\n        assignee:\n          type: string\n        assigner:\n          type: string\n        constraints:\n          type: array\n          items:\n            $ref: '#/components/schemas/Constraint'\n    TransferProcessDto:\n      type: object\n      properties:\n        id:\n          type: string\n        type:\n          type: string\n        state:\n          type: string\n        errorDetail:\n          type: string\n        dataRequest:\n          $ref: '#/components/schemas/DataRequestDto'\n    TransferType:\n      type: object\n      properties:\n        contentType:\n          type: string\n        isFinite:\n          type: boolean\n"
		}
	},
	"Error": "parse: parse spec: paths: /contractdefinitions: get: duplicate operationId: \"getAllContractDefinitions\""
}