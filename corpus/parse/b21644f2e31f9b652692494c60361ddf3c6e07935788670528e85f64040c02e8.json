{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/rapi-doc/RapiDoc"
		},
		"file": {
			"name": "events.yaml",
			"size": 0,
			"path": "docs/specs/events.yaml",
			"byteSize": 4593,
			"content": "openapi: 3.1.0\ninfo:\n  title: Event Handling\n  version: \"1.0\"\n  description: |\n    \n    ### The code demonstrate how some events can be used. Listed below are some common use cases\n\n    - `before-render` - Good place to twaek the OpenAPI spec if needed. In this example the Title above is dynamically created \n    - `before-try` - Good place to twaek the AJAX request sucha as adding a request header or abort the request\n    - `after-try` - Good place to inspect the response received\n\n    #### To test it out go ahead and click TRY below, you will notice all `POST` requests are aborted and `GET` are success <br/><br/>\n\n\n    ```markup\n    <!doctype html>\n\n    <html>\n      <body>\n        <rapi-doc id = \"thedoc\" spec-url = \"...\"> </rapi-doc>\n      \n        <script>\n          document.addEventListener('DOMContentLoaded', (event) => {\n            let docEl = document.getElementById(\"thedoc\");\n\n            // Add various event listeners\n\n            // 1. before-render (Dynamically changes the Title of this Spec)\n            docEl.addEventListener('before-render', (e) => {\n              e.detail.spec.info.title = \"EVENTS - This text is updated during `before-render` event\";\n            });\n\n            // 2. before-try (Aborts all post calls)\n            docEl.addEventListener('before-try', (e) => {\n              if (e.detail.request.method === 'POST') {\n                e.detail.controller.abort();\n              }\n            });\n\n            // 3. after-try\n            docEl.addEventListener('after-try', (e) => {\n              alert(\"Hello from 'after-try' event \");\n            });\n\n            // 4. request-aborted\n            docEl.addEventListener('request-aborted', (e) => {\n              calert(\"POST Requests are aborted in 'before-try' event \");\n            });\n\n          })\n        </script>\n      </body> \n\n    </html>\n    ```\nservers:\n  - url: https://reqres.in/api/\npaths:\n  /users?delay=2:\n    get:\n      description: List of users (paginated)\n      parameters:\n        - name: page\n          in: query\n          schema:\n            type: integer\n            examples: \n              - 1\n              - 2\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                description: Description of **User** object\n                properties:\n                  page:\n                    description: Current Page number\n                    type: integer\n                  per_page:\n                    description: Number of records per page\n                    type: integer\n                  total:\n                    description: Total number of records\n                    type: integer\n                  total_pages:\n                    type: integer\n                  data:\n                    type: array\n                    description: List of users\n                    items:\n                      $ref: '#/components/schemas/user'\n                  support:\n                    $ref: '#/components/schemas/support'\n    post:\n      description: Create a user\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/userInput\"\n      responses:\n        201:\n          description: User creation response\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/userInput'\n                  - $ref: '#/components/schemas/createUserResponse'\n\ncomponents:\n  schemas:\n    user:\n      type: object\n      properties:\n        id:\n          description: User ID\n          type: integer\n        email:\n          description: User Email\n          type: string\n        first_name:\n          description: First Name\n          type: string\n        last_name:\n          description: Last Name\n          type: string\n        avatar:\n          description: Avatar URL\n          type: string\n    support:\n      type: object\n      properties:\n        url:\n          description: Support URL\n          type: string\n        text:\n          description: Support URL - Description\n          type: string\n    userInput:\n      type: object\n      description: user object with `name` and `job` properties\n      properties:\n        name:\n          description: User Name\n          type: string\n        job:\n          description: Job\n          type: string\n    createUserResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n        createdAt:\n          type: string\n",
			"canonicalURL": "/github.com/rapi-doc/RapiDoc@f1eea3a35ccddac47afdb027e2c42afddb087ef2/-/blob/docs/specs/events.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/rapi-doc/RapiDoc/blob/f1eea3a35ccddac47afdb027e2c42afddb087ef2/docs/specs/events.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/users?delay=2\": at 1:2739: get: at 1:2746: parse path \"/users?delay=2\": path MUST NOT contain a query string"
}