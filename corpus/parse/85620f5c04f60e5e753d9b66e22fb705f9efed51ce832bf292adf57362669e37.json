{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Ryan-Sin/swagger-nestjs-codegen"
		},
		"file": {
			"name": "example.yaml",
			"size": 0,
			"path": "example/example.yaml",
			"byteSize": 10297,
			"content": "openapi: \"3.0.1\"\n\ninfo:\n  title: Swagger Nest.js Codegen Yaml Test File\n\n  contact:\n    email: ryan937@washswat.com\n\n  version: 1.0.0\n\nservers:\n  - description: \"Local Server Test\"\n    url: http://localhost:3000\n\npaths:\n  /health-check:\n    get:\n      tags:\n        - HealthCheck\n      summary: Health check server....\n      description: Health check API for that server\n\n      #board @Controller Method Name\n      operationId: healthCheck\n\n      responses:\n        \"200\":\n          description: Health Check Return Information\n\n          # x-codgen-request-body-name ResponseDTO Class Name\n          x-codegen-request-body-name: HealthCheckResponse\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/HealthCheck\"\n\n  /board/list:\n    get:\n      tags:\n        - \"Board\"\n\n      summary: Bulletin Full Lookup\n      description: Bulletin Full Lookup API\n\n      #board @Controller Method Name\n      operationId: \"updateBoardlistAll\"\n\n      #Set client request parameters\n      #If you use the $ref reference method\n      parameters:\n        - $ref: \"#/components/parameters/x-access-token\"\n\n      responses:\n        \"200\":\n          description: \"success info\"\n\n          # x-codgen-request-body-name ResponseDTO Class Name\n          x-codegen-request-body-name: \"BoardListResponse\"\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - \"data\"\n                # x-codegen-request-body-name Class Properties\n                properties:\n                  data:\n                    type: \"array\"\n                    items:\n                      $ref: \"#/components/schemas/Board\"\n\n  /board/list?id={id}\u0026name={name}:\n    get:\n      tags:\n        - \"Board\"\n\n      summary: \"Full view of a particular bulletin\"\n      description: \"Specific bulletin board data full lookup API\"\n\n      #board @Controller Method Name\n      operationId: \"updateBoardlist\"\n\n      #Set client request parameters\n      #If you use the $ref reference method\n      parameters:\n        - $ref: \"#/components/parameters/x-access-token\"\n        - in: query\n          name: id\n          required: true\n          description: \"board unique key\"\n          schema:\n            type: number\n\n        - in: query\n          name: name\n          description: \"board name\"\n          schema:\n            type: string\n\n      responses:\n        \"200\":\n          description: \"success info\"\n\n          # x-codgen-request-body-name ResponseDTO Class Name\n          x-codegen-request-body-name: \"BoardListResponse\"\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - \"data\"\n                # x-codegen-request-body-name Class Properties\n                properties:\n                  data:\n                    type: \"array\"\n                    items:\n                      $ref: \"#/components/schemas/Board\"\n\n  /board/create:\n    post:\n      tags:\n        - \"Board\"\n      summary: \"create board\"\n      description: \"create board API\"\n\n      #board @Controller Method Name\n      operationId: createBoard\n\n      parameters:\n        - $ref: \"#/components/parameters/x-access-token\"\n\n      requestBody:\n        #Request DTO Class Name\n        #If $ref is referenced immediately, the BoardCreate schema property referenced to the BoardCreateRequest class name is applied.\n        x-codegen-request-body-name: \"BoardCreateRequest\"\n        content:\n          application/json:\n            schema:\n              type: object\n              $ref: \"#/components/schemas/BoardCreate\"\n\n      responses:\n        \"200\":\n          description: \"success info\"\n\n          # x-codegen-request-body-name ResponseDTO Class Name\n          x-codegen-request-body-name: \"CreateBoardResponse\"\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - \"data\"\n                # x-codegen-request-body-name Class Properties\n                properties:\n                  data:\n                    description: \"borad unique key\"\n                    type: number\n                    example: 1\n  /board/update:\n    put:\n      tags:\n        - \"Board\"\n      summary: \"update board\"\n      description: \"update board API\"\n\n      #board @Controller Method Name\n      operationId: \"updateBoard\"\n\n      parameters:\n        - in: header\n          name: \"x-access-token\"\n          schema:\n            type: string\n          required: true\n          description: \"Access-Token\"\n\n      requestBody:\n        description: \"create board dto\"\n        #x-codegen-request-body-name Request DTO Class Name\n        x-codegen-request-body-name: \"UpdateBoardRequest\"\n        #If $ref is not referenced, the UpdateBoardRequest class is created based on the information declared in properties.\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - \"id\"\n                - \"name\"\n                - \"comment\"\n              properties:\n                id:\n                  description: \"borad unique key\"\n                  type: number\n                  example: 1\n                name:\n                  description: \"board name\"\n                  type: string\n                  example: \"ryan test board name\"\n                comment:\n                  description: \"board comment\"\n                  type: object\n                  $ref: \"#/components/schemas/Comment\"\n\n      responses:\n        \"200\":\n          description: \"success info\"\n\n          # x-codegen-request-body-name ResponseDTO Class Name\n          x-codegen-request-body-name: \"UpdateBoardResponse\"\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - \"data\"\n                # x-codegen-request-body-name Class Properties\n                properties:\n                  data:\n                    description: \"board unique key\"\n                    type: number\n                    example: 1\n\n  /board/delete/{id}/{test}:\n    delete:\n      tags:\n        - \"Board\"\n\n      summary: \"delete board\"\n      description: \"delete board API\"\n\n      #board @Controller Method Name\n      operationId: \"deleteBoard\"\n\n      parameters:\n        - in: path\n          name: id\n          required: true\n          description: \"board unique key\"\n          schema:\n            type: number\n        - in: path\n          name: test\n          required: true\n          description: \"test data\"\n          schema:\n            type: number\n\n      responses:\n        \"200\":\n          description: \"Success Info\"\n\n          # x-codegen-request-body-name ResponseDTO Class Name\n          x-codegen-request-body-name: \"DeleteResponse\"\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - \"success\"\n                # x-codegen-request-body-name Class Properties\n                properties:\n                  success:\n                    type: boolean\n                    example: true\n\ncomponents:\n  schemas:\n    HealthCheck:\n      type: object\n      required:\n        - \"code\"\n        - \"success\"\n      properties:\n        code:\n          description: \"success code\"\n          type: number\n          example: 200\n        success:\n          description: \"success type\"\n          type: boolean\n          example: true\n\n    #  In the properties attribute, a single object reference with a different data model reference method should be set to the object type\n    Board:\n      type: object\n      required:\n        - \"id\"\n        - \"name\"\n        - \"eCommant\"\n      properties:\n        id:\n          description: \"board unique key\"\n          type: number\n          example: 1\n        name:\n          description: \"board name\"\n          type: string\n          example: \"Board Name\"\n        eCommant:\n          description: \"comment object\"\n          type: object\n          $ref: \"#/components/schemas/Comment\"\n\n    # If it is an array type referring to another Data Model in properties properties\n    # Array type must be set to array and items must be declared\n    Board2:\n      type: object\n      required:\n        - \"id\"\n        - \"name\"\n        - \"eCommant\"\n      properties:\n        id:\n          description: \"board unique key\"\n          type: number\n          example: 1\n        name:\n          description: \"board name\"\n          type: string\n          example: \"Board Name\"\n        eCommant:\n          description: \"comment object\"\n          type: array\n          items:\n            $ref: \"#/components/schemas/Comment\"\n\n    Comment:\n      type: object\n      required:\n        - \"id\"\n        - \"content\"\n      properties:\n        id:\n          description: \"board unique key\"\n          type: number\n          example: 1\n        content:\n          description: \"comment content\"\n          type: string\n          example: \"Hello, nice to meet you\"\n\n    BoardCreate:\n      description: \"create board\"\n      type: object\n      required:\n        - \"id\"\n        - \"name\"\n        - \"oneCommant\"\n        - \"multiCommant\"\n      properties:\n        id:\n          description: \"board unique key\"\n          type: number\n          example: 1\n        name:\n          description: \"board name\"\n          type: string\n          example: \"Board Name\"\n\n        # In the properties attribute, a single object reference with a different data model reference method should be set to the object type\n        oneCommant:\n          description: \"one comment\"\n          type: object\n          $ref: \"#/components/schemas/Comment\"\n\n        # If it is an array type referring to another Data Model in properties properties\n        # Array type must be set to array and items must be declared\n        multiCommant:\n          description: \"multi commant\"\n          type: array\n          items:\n            $ref: \"#/components/schemas/Comment\"\n\n  #name If the value is not used as a variable name, use key as a variable name\n  parameters:\n    x-access-token:\n      in: header\n      name: \"x-access-token\"\n      schema:\n        type: string\n      description: Access-Token\n      required: true\n",
			"canonicalURL": "/github.com/Ryan-Sin/swagger-nestjs-codegen@151cfedfe67f6e1d8974aa1263e912f12d9722ba/-/blob/example/example.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Ryan-Sin/swagger-nestjs-codegen/blob/151cfedfe67f6e1d8974aa1263e912f12d9722ba/example/example.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/board/list?id={id}\u0026name={name}\": get: operation \"updateBoardlist\": at example/example.yaml:74:7: parse path \"/board/list?id={id}\u0026name={name}\": path MUST NOT contain a query string"
}