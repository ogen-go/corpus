{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/capensis/canopsis"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "community/go-engines-community/lib/api/docs/swagger.yaml",
			"byteSize": 215379,
			"content": "openapi: 3.0.1\ninfo:\n  title: Canopsis Community API\n  description: This is a Canopsis Community API.\n  version: 4.0.0\n  license:\n    name: GNU AGPLv3\n    url: https://www.gnu.org/licenses/agpl-3.0.html\nservers:\n  - url: /api/v4\npaths:\n  /account/me:\n    get:\n      tags:\n        - account\n      summary: Get account\n      description: Get account\n      operationId: account-get\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/account.User'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n  /active-broadcast-message:\n    get:\n      tags:\n        - broadcast-messages\n      summary: Get all active broadcast-message\n      description: Get all active broadcast-message\n      operationId: broadcast-messages-get-active\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'schemas_swagger.yaml#/definitions/broadcastmessage.BroadcastMessage'\n      security:\n        - { }\n  /alarm-counters:\n    get:\n      tags:\n        - alarms\n      summary: Count alarms\n      description: Get counts of alarms\n      operationId: alarms-get-counts\n      parameters:\n        - name: active_columns[]\n          in: query\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - name: category\n          in: query\n          schema:\n            type: string\n        - name: correlation\n          in: query\n          schema:\n            type: boolean\n        - name: exclude_instruction_types\n          in: query\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              type: integer\n        - name: exclude_instructions\n          in: query\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - name: filter\n          in: query\n          schema:\n            type: string\n        - name: include_instruction_types\n          in: query\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              type: integer\n        - name: include_instructions\n          in: query\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - name: manual\n          in: query\n          schema:\n            type: boolean\n        - name: opened\n          in: query\n          schema:\n            type: boolean\n        - $ref: '#/components/parameters/search'\n        - name: time_field\n          in: query\n          schema:\n            type: string\n        - name: tstart\n          in: query\n          schema:\n            type: integer\n        - name: tstop\n          in: query\n          schema:\n            type: integer\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/alarm.Count'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n  /alarm-export:\n    post:\n      tags:\n        - alarms\n      summary: Start export alarms\n      description: Start export alarms\n      operationId: alarms-export-start\n      requestBody:\n        description: request\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/alarm.ExportRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/alarm.ExportResponse'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n  /alarm-export/{id}:\n    get:\n      tags:\n        - alarms\n      summary: Get status of export alarms\n      description: Get status of export alarms\n      operationId: alarms-export-get\n      parameters:\n        - name: id\n          in: path\n          description: export task id\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/alarm.ExportResponse'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n  /alarm-export/{id}/download:\n    get:\n      tags:\n        - alarms\n      summary: Get result of export alarms\n      description: Get result of export alarms\n      operationId: alarms-export-download\n      parameters:\n        - name: id\n          in: path\n          description: export task id\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            text/csv:\n              schema:\n                type: string\n                format: binary\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n  /alarms:\n    get:\n      tags:\n        - alarms\n      summary: Find all alarms\n      description: Get paginated list of alarms. Use parameters \"multi_sort[]=field_1,asc\u0026multi_sort[]=field_2,desc\u0026multi_sort[]=field_3,asc\"\n        to sort list by multiple fields. \"sort_key\", \"sort_dir\" are left for compatibility\n        with older ways of sorting\n      operationId: alarms-find-all\n      parameters:\n        - name: active_columns[]\n          in: query\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - name: category\n          in: query\n          schema:\n            type: string\n        - name: correlation\n          in: query\n          schema:\n            type: boolean\n        - name: exclude_instruction_types\n          in: query\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              type: integer\n        - name: exclude_instructions\n          in: query\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - name: filter\n          in: query\n          schema:\n            type: string\n        - name: include_instruction_types\n          in: query\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              type: integer\n        - name: include_instructions\n          in: query\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - $ref: '#/components/parameters/limit'\n        - name: manual\n          in: query\n          schema:\n            type: boolean\n        - name: multi_sort[]\n          in: query\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - name: opened\n          in: query\n          schema:\n            type: boolean\n        - $ref: '#/components/parameters/page'\n        - name: paginate\n          in: query\n          schema:\n            type: boolean\n        - $ref: '#/components/parameters/search'\n        - name: sort_dir\n          in: query\n          schema:\n            type: string\n        - name: sort_key\n          in: query\n          schema:\n            type: string\n        - name: time_field\n          in: query\n          schema:\n            type: string\n        - name: tstart\n          in: query\n          schema:\n            type: integer\n        - name: tstop\n          in: query\n          schema:\n            type: integer\n        - name: with_consequences\n          in: query\n          schema:\n            type: boolean\n        - name: with_instructions\n          in: query\n          schema:\n            type: boolean\n        - name: with_steps\n          in: query\n          schema:\n            type: boolean\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: 'schemas_swagger.yaml#/definitions/common.PaginatedListResponse'\n                  - type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: 'schemas_swagger.yaml#/definitions/alarm.Alarm'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n  /app-info:\n    get:\n      tags:\n        - internal\n      summary: Get application information\n      description: Get application information\n      operationId: internal-get-app-info\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/appinfo.AppInfoResponse'\n  /associativetable:\n    get:\n      tags:\n        - associativetables\n      summary: Get associativetable by name\n      description: Get associativetable by name\n      operationId: associativetables-get-by-name\n      parameters:\n        - name: name\n          in: query\n          description: associativetable name\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/associativetable.AssociativeTable'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    post:\n      tags:\n        - associativetables\n      summary: Create/update associativetable\n      description: Create/update associativetable\n      operationId: associativetables-update\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/associativetable.AssociativeTable'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/associativetable.AssociativeTable'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    delete:\n      tags:\n        - associativetables\n      summary: Delete associativetable by name\n      description: Delete associativetable by name\n      operationId: associativetables-delete-by-name\n      parameters:\n        - name: name\n          in: query\n          description: associativetable name\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: OK\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n  /broadcast-message:\n    get:\n      tags:\n        - broadcast-messages\n      summary: Find all broadcast-message\n      description: Get paginated list of broadcast-message\n      operationId: broadcast-messages-find-all\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/search'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: 'schemas_swagger.yaml#/definitions/common.PaginatedListResponse'\n                  - type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: 'schemas_swagger.yaml#/definitions/broadcastmessage.BroadcastMessage'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    post:\n      tags:\n        - broadcast-messages\n      summary: Create broadcast-message\n      description: Create broadcast-message\n      operationId: broadcast-messages-create\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/broadcastmessage.BroadcastMessage'\n        required: true\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/broadcastmessage.BroadcastMessage'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n  /broadcast-message/{id}:\n    get:\n      tags:\n        - broadcast-messages\n      summary: Get broadcast-message by id\n      description: Get broadcast-message by id\n      operationId: broadcast-messages-get-by-id\n      parameters:\n        - name: id\n          in: path\n          description: broadcast-message id\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/broadcastmessage.BroadcastMessage'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    put:\n      tags:\n        - broadcast-messages\n      summary: Update broadcast-message by id\n      description: Update broadcast-message by id\n      operationId: broadcast-messages-update-by-id\n      parameters:\n        - name: id\n          in: path\n          description: broadcast-message id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/broadcastmessage.Payload'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/broadcastmessage.BroadcastMessage'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    delete:\n      tags:\n        - broadcast-messages\n      summary: Delete broadcast-message by id\n      description: Delete broadcast-message by id\n      operationId: broadcast-messages-delete-by-id\n      parameters:\n        - name: id\n          in: path\n          description: broadcast-message id\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: OK\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n  /bulk/entityservices:\n    put:\n      tags:\n        - entityservices\n      summary: Bulk update entityservices\n      description: Bulk update entityservices\n      operationId: entityservices-bulk-update\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: 'schemas_swagger.yaml#/definitions/entityservice.BulkUpdateRequestItem'\n            examples:\n              update:\n                summary: Update\n                description: Update services.\n                value: [\n                  {\n                    \"_id\": \"27e7f6ae-2ba0-4c7d-be4b-3e55e9c6e101\",\n                    \"name\": \"Group 1\",\n                    \"output_template\": \"All: {{.All}}\n                      Alarms: {{.Alarms}}\n                      Acknowledged: {{.Acknowledged}}\n                      NotAcknowledged: {{.NotAcknowledged}}\n                      StateCritical: {{.State.Critical}}\n                      StateMajor: {{.State.Major}}\n                      StateMinor: {{.State.Minor}}\n                      StateInfo: {{.State.Info}}\n                      Maintenance: {{index .PbehaviorCounters \\\"default_maintenance\\\"}}\n                      Pause: {{index .PbehaviorCounters \\\"default_pause\\\"}}\n                      Inactive: {{index .PbehaviorCounters \\\"default_inactive\\\"}}\",\n                    \"category\": \"d73a4b2a-1927-49d5-bdc3-ae1559ebc7e7\",\n                    \"impact_level\": 2,\n                    \"enabled\": true,\n                    \"entity_patterns\": [\n                      {\n                        \"type\": \"resource\",\n                        \"infos\": {\n                          \"group\": {\n                            \"value\": \"g1\"\n                          }\n                        }\n                      }\n                    ],\n                    \"sli_avail_state\": 1,\n                    \"infos\": [\n                      {\n                        \"name\": \"group\",\n                        \"description\": \"Group id\",\n                        \"value\": \"g1\"\n                      }\n                    ]\n                  }\n                ]\n        required: true\n      responses:\n        207:\n          description: Multi-Status\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: array\n                  items:\n                    $ref: 'schemas_swagger.yaml#/definitions/entityservice.BulkUpdateResponseItem'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n    post:\n      tags:\n        - entityservices\n      summary: Bulk create entityservices\n      description: Bulk create entityservices\n      operationId: entityservices-bulk-create\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: 'schemas_swagger.yaml#/definitions/entityservice.CreateRequest'\n            examples:\n              create:\n                summary: Create\n                description: Create services.\n                value: [\n                  {\n                    \"name\": \"Group 1\",\n                    \"output_template\": \"All: {{.All}}\n                      Alarms: {{.Alarms}}\n                      Acknowledged: {{.Acknowledged}}\n                      NotAcknowledged: {{.NotAcknowledged}}\n                      StateCritical: {{.State.Critical}}\n                      StateMajor: {{.State.Major}}\n                      StateMinor: {{.State.Minor}}\n                      StateInfo: {{.State.Info}}\n                      Maintenance: {{index .PbehaviorCounters \\\"default_maintenance\\\"}}\n                      Pause: {{index .PbehaviorCounters \\\"default_pause\\\"}}\n                      Inactive: {{index .PbehaviorCounters \\\"default_inactive\\\"}}\",\n                    \"category\": \"d73a4b2a-1927-49d5-bdc3-ae1559ebc7e7\",\n                    \"impact_level\": 2,\n                    \"enabled\": true,\n                    \"entity_patterns\": [\n                      {\n                        \"type\": \"resource\",\n                        \"infos\": {\n                          \"group\": {\n                            \"value\": \"g1\"\n                          }\n                        }\n                      }\n                    ],\n                    \"sli_avail_state\": 1,\n                    \"infos\": [\n                      {\n                        \"name\": \"group\",\n                        \"description\": \"Group id\",\n                        \"value\": \"g1\"\n                      }\n                    ]\n                  }\n                ]\n        required: true\n      responses:\n        207:\n          description: Multi-Status\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: array\n                  items:\n                    $ref: 'schemas_swagger.yaml#/definitions/entityservice.BulkCreateResponseItem'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n    delete:\n      tags:\n        - entityservices\n      summary: Bulk delete entityservices\n      description: Bulk delete entityservices\n      operationId: entityservices-bulk-delete\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: 'schemas_swagger.yaml#/definitions/entityservice.BulkDeleteRequestItem'\n            examples:\n              delete:\n                summary: Delete\n                description: Delete services.\n                value: [\n                  {\n                    \"_id\": \"27e7f6ae-2ba0-4c7d-be4b-3e55e9c6e101\"\n                  }\n                ]\n        required: true\n      responses:\n        207:\n          description: Multi-Status\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: array\n                  items:\n                    $ref: 'schemas_swagger.yaml#/definitions/entityservice.BulkDeleteResponseItem'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n  /bulk/eventfilters:\n    put:\n      tags:\n        - eventfilters\n      summary: Bulk update eventfilters\n      description: Bulk update eventfilters\n      operationId: eventfilters-bulk-update\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: 'schemas_swagger.yaml#/definitions/eventfilter.BulkUpdateRequestItem'\n        required: true\n      responses:\n        207:\n          description: Multi-Status\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: array\n                  items:\n                    $ref: 'schemas_swagger.yaml#/definitions/eventfilter.BulkUpdateResponseItem'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n    post:\n      tags:\n        - eventfilters\n      summary: Bulk create eventfilters\n      description: Bulk create eventfilters\n      operationId: eventfilters-bulk-create\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: 'schemas_swagger.yaml#/definitions/eventfilter.EventFilter'\n        required: true\n      responses:\n        207:\n          description: Multi-Status\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: array\n                  items:\n                    $ref: 'schemas_swagger.yaml#/definitions/eventfilter.BulkCreateResponseItem'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n    delete:\n      tags:\n        - eventfilters\n      summary: Bulk delete eventfilters\n      description: Bulk delete eventfilters\n      operationId: eventfilters-bulk-delete\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: 'schemas_swagger.yaml#/definitions/eventfilter.BulkDeleteRequestItem'\n        required: true\n      responses:\n        207:\n          description: Multi-Status\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: array\n                  items:\n                    $ref: 'schemas_swagger.yaml#/definitions/eventfilter.BulkDeleteResponseItem'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n  /bulk/idle-rules:\n    put:\n      tags:\n        - idlerules\n      summary: Bulk update idlerules\n      description: Bulk update idlerules\n      operationId: idlerules-bulk-update\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: 'schemas_swagger.yaml#/definitions/idlerule.BulkUpdateRequestItem'\n        required: true\n      responses:\n        207:\n          description: Multi-Status\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: array\n                  items:\n                    $ref: 'schemas_swagger.yaml#/definitions/idlerule.BulkUpdateResponseItem'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n    post:\n      tags:\n        - idlerules\n      summary: Bulk create idlerules\n      description: Bulk create idlerules\n      operationId: idlerules-bulk-create\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: 'schemas_swagger.yaml#/definitions/idlerule.CreateRequest'\n        required: true\n      responses:\n        207:\n          description: Multi-Status\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: array\n                  items:\n                    $ref: 'schemas_swagger.yaml#/definitions/idlerule.BulkCreateResponseItem'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n    delete:\n      tags:\n        - idlerules\n      summary: Bulk delete idlerules\n      description: Bulk delete idlerules\n      operationId: idlerules-bulk-delete\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: 'schemas_swagger.yaml#/definitions/idlerule.BulkDeleteRequestItem'\n        required: true\n      responses:\n        207:\n          description: Multi-Status\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: array\n                  items:\n                    $ref: 'schemas_swagger.yaml#/definitions/idlerule.BulkDeleteResponseItem'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n  /bulk/pbehaviors:\n    put:\n      tags:\n        - pbehaviors\n      summary: Bulk update pbehaviors\n      description: Bulk update pbehaviors\n      operationId: pbehaviors-bulk-update\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: 'schemas_swagger.yaml#/definitions/pbehavior.BulkUpdateRequestItem'\n            examples:\n              update:\n                summary: Update\n                description: Update pbehaviors\n                value: [\n                  {\n                    \"_id\": \"27e7f6ae-2ba0-4c7d-be4b-3e55e9c6e101\",\n                    \"name\": \"Active period\",\n                    \"enabled\": true,\n                    \"tstart\": 1650855600,\n                    \"tstop\": 1650891600,\n                    \"rrule\": \"FREQ=DAILY\",\n                    \"type\": \"default_active\",\n                    \"reason\": \"default_reason\",\n                    \"filter\": {\n                      \"$and\": [\n                        {\n                          \"name\": \"cps_resource\"\n                        }\n                      ]\n                    },\n                    \"exdates\": [\n                      {\n                        \"begin\": 1651460400,\n                        \"end\": 1651496400,\n                        \"type\": \"default_maintenance\"\n                      }\n                    ],\n                    \"exceptions\": [ \"27e7f6ae-2ba0-4c7d-be4b-3e55e9c6e101\" ]\n                  }\n                ]\n        required: true\n      responses:\n        207:\n          description: Multi-Status\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: array\n                  items:\n                    $ref: 'schemas_swagger.yaml#/definitions/pbehavior.BulkUpdateResponseItem'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n    post:\n      tags:\n        - pbehaviors\n      summary: Bulk create pbehaviors\n      description: Bulk create pbehaviors\n      operationId: pbehaviors-bulk-create\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: 'schemas_swagger.yaml#/definitions/pbehavior.CreateRequest'\n            examples:\n              create:\n                summary: Create\n                description: Create pbehaviors\n                value: [\n                  {\n                    \"name\": \"Active period\",\n                    \"enabled\": true,\n                    \"tstart\": 1650855600,\n                    \"tstop\": 1650891600,\n                    \"rrule\": \"FREQ=DAILY\",\n                    \"type\": \"default_active\",\n                    \"reason\": \"default_reason\",\n                    \"filter\": {\n                      \"$and\": [\n                        {\n                          \"name\": \"cps_resource\"\n                        }\n                      ]\n                    },\n                    \"exdates\": [\n                      {\n                        \"begin\": 1651460400,\n                        \"end\": 1651496400,\n                        \"type\": \"default_maintenance\"\n                      }\n                    ],\n                    \"exceptions\": [ \"27e7f6ae-2ba0-4c7d-be4b-3e55e9c6e101\" ]\n                  }\n                ]\n        required: true\n      responses:\n        207:\n          description: Multi-Status\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: array\n                  items:\n                    $ref: 'schemas_swagger.yaml#/definitions/pbehavior.BulkCreateResponseItem'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n    delete:\n      tags:\n        - pbehaviors\n      summary: Bulk delete pbehaviors\n      description: Bulk delete pbehaviors\n      operationId: pbehaviors-bulk-delete\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: 'schemas_swagger.yaml#/definitions/pbehavior.BulkDeleteRequestItem'\n            examples:\n              delete:\n                summary: Delete\n                description: Delete pbehaviors\n                value: [\n                  {\n                    \"_id\": \"27e7f6ae-2ba0-4c7d-be4b-3e55e9c6e101\"\n                  }\n                ]\n        required: true\n      responses:\n        207:\n          description: Multi-Status\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: array\n                  items:\n                    $ref: 'schemas_swagger.yaml#/definitions/pbehavior.BulkDeleteResponseItem'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n  /bulk/scenarios:\n    put:\n      tags:\n        - scenarios\n      summary: Bulk update scenarios\n      description: Bulk update scenarios\n      operationId: scenarios-bulk-update\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: 'schemas_swagger.yaml#/definitions/scenario.BulkUpdateRequestItem'\n            examples:\n              update:\n                summary: Update\n                description: Update scenarios.\n                value: [\n                  {\n                    \"_id\": \"27e7f6ae-2ba0-4c7d-be4b-3e55e9c6e101\",\n                    \"name\": \"Scenario with acknowledge action\",\n                    \"comment\": \"The scenario acknowledges an alarm on create\",\n                    \"enabled\": true,\n                    \"priority\": 10,\n                    \"triggers\": [ \"create\" ],\n                    \"actions\": [\n                      {\n                        \"type\": \"ack\",\n                        \"parameters\": {\n                          \"output\": \"The alarm is acknowledged by scenario\"\n                        },\n                        \"alarm_patterns\": [\n                          {\n                            \"v\": {\n                              \"state\": {\n                                \"val\": 3\n                              }\n                            }\n                          }\n                        ],\n                        \"entity_patterns\": [\n                          {\n                            \"type\": \"resource\",\n                            \"infos\": {\n                              \"group\": {\n                                \"value\": \"g1\"\n                              }\n                            }\n                          }\n                        ],\n                        \"drop_scenario_if_not_matched\": false,\n                        \"emit_trigger\": false\n                      }\n                    ]\n                  }\n                ]\n        required: true\n      responses:\n        207:\n          description: Multi-Status\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: array\n                  items:\n                    $ref: 'schemas_swagger.yaml#/definitions/scenario.BulkUpdateResponseItem'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n    post:\n      tags:\n        - scenarios\n      summary: Bulk create scenarios\n      description: Bulk create scenarios\n      operationId: scenarios-bulk-create\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: 'schemas_swagger.yaml#/definitions/scenario.CreateRequest'\n            examples:\n              create:\n                summary: Create\n                description: Create scenarios.\n                value: [\n                  {\n                    \"name\": \"Scenario with acknowledge action\",\n                    \"comment\": \"The scenario acknowledges an alarm on create\",\n                    \"enabled\": true,\n                    \"priority\": 10,\n                    \"triggers\": [ \"create\" ],\n                    \"actions\": [\n                      {\n                        \"type\": \"ack\",\n                        \"parameters\": {\n                          \"output\": \"The alarm is acknowledged by scenario\"\n                        },\n                        \"alarm_patterns\": [\n                          {\n                            \"v\": {\n                              \"state\": {\n                                \"val\": 3\n                              }\n                            }\n                          }\n                        ],\n                        \"entity_patterns\": [\n                          {\n                            \"type\": \"resource\",\n                            \"infos\": {\n                              \"group\": {\n                                \"value\": \"g1\"\n                              }\n                            }\n                          }\n                        ],\n                        \"drop_scenario_if_not_matched\": false,\n                        \"emit_trigger\": false\n                      }\n                    ]\n                  }\n                ]\n        required: true\n      responses:\n        207:\n          description: Multi-Status\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: array\n                  items:\n                    $ref: 'schemas_swagger.yaml#/definitions/scenario.BulkCreateResponseItem'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n    delete:\n      tags:\n        - scenarios\n      summary: Bulk delete scenarios\n      description: Bulk delete scenarios\n      operationId: scenarios-bulk-delete\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: 'schemas_swagger.yaml#/definitions/scenario.BulkDeleteRequestItem'\n            examples:\n              delete:\n                summary: Delete\n                description: Delete scenarios.\n                value: [\n                  {\n                    \"_id\": \"27e7f6ae-2ba0-4c7d-be4b-3e55e9c6e101\"\n                  }\n                ]\n        required: true\n      responses:\n        207:\n          description: Multi-Status\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: array\n                  items:\n                    $ref: 'schemas_swagger.yaml#/definitions/scenario.BulkDeleteResponseItem'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n  /bulk/users:\n    put:\n      tags:\n        - users\n      summary: Bulk update users\n      description: Bulk update users\n      operationId: users-bulk-update\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: 'schemas_swagger.yaml#/definitions/user.BulkUpdateRequestItem'\n        required: true\n      responses:\n        207:\n          description: Multi-Status\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: array\n                  items:\n                    $ref: 'schemas_swagger.yaml#/definitions/user.BulkUpdateResponseItem'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n    post:\n      tags:\n        - users\n      summary: Bulk create users\n      description: Bulk create users\n      operationId: users-bulk-create\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: 'schemas_swagger.yaml#/definitions/user.Request'\n        required: true\n      responses:\n        207:\n          description: Multi-Status\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: array\n                  items:\n                    $ref: 'schemas_swagger.yaml#/definitions/user.BulkCreateResponseItem'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n    delete:\n      tags:\n        - users\n      summary: Bulk delete users\n      description: Bulk delete users\n      operationId: users-bulk-delete\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: 'schemas_swagger.yaml#/definitions/user.BulkDeleteRequestItem'\n        required: true\n      responses:\n        207:\n          description: Multi-Status\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: array\n                  items:\n                    $ref: 'schemas_swagger.yaml#/definitions/user.BulkDeleteResponseItem'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n  /contextgraph/import:\n    put:\n      tags:\n        - contextgraph-import\n      summary: Create import task\n      description: Create import task\n      operationId: contextgraph-import-create-import\n      parameters:\n        - name: source\n          in: query\n          description: source\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/contextgraph.ImportRequest'\n            examples:\n              basic:\n                summary: Basic\n                description: Import basic entities\n                value: {\n                  \"json\": {\n                    \"cis\": [\n                      {\n                        \"_id\": \"cps_component\",\n                        \"name\": \"cps_component\",\n                        \"type\": \"component\",\n                        \"impact_level\": 1,\n                        \"category\": \"d73a4b2a-1927-49d5-bdc3-ae1559ebc7e7\",\n                        \"infos\": {\n                          \"group\": {\n                            \"description\": \"Group id\",\n                            \"value\": \"g1\"\n                          }\n                        },\n                        \"action\": \"set\",\n                        \"enabled\": true\n                      },\n                      {\n                        \"_id\": \"cps_resource_1/cps_component\",\n                        \"name\": \"cps_resource_1\",\n                        \"type\": \"resource\",\n                        \"impact_level\": 1,\n                        \"category\": \"d73a4b2a-1927-49d5-bdc3-ae1559ebc7e7\",\n                        \"infos\": {\n                          \"group\": {\n                            \"description\": \"Group id\",\n                            \"value\": \"g1\"\n                          }\n                        },\n                        \"action\": \"create\",\n                        \"enabled\": true\n                      },\n                      {\n                        \"_id\": \"cps_resource_2/cps_component\",\n                        \"name\": \"cps_resource_2\",\n                        \"type\": \"resource\",\n                        \"impact_level\": 1,\n                        \"category\": \"d73a4b2a-1927-49d5-bdc3-ae1559ebc7e7\",\n                        \"infos\": {\n                          \"group\": {\n                            \"description\": \"Group id\",\n                            \"value\": \"g1\"\n                          }\n                        },\n                        \"action\": \"update\",\n                        \"enabled\": true\n                      },\n                      {\n                        \"_id\": \"cps_resource_3/cps_component\",\n                        \"action\": \"delete\"\n                      },\n                      {\n                        \"_id\": \"cps_resource_4/cps_component\",\n                        \"action\": \"enable\"\n                      },\n                      {\n                        \"_id\": \"cps_resource_5/cps_component\",\n                        \"action\": \"disable\"\n                      }\n                    ],\n                    \"links\": [\n                      {\n                        \"from\": [ \"cps_resource_1/cps_component\", \"cps_resource_2/cps_component\" ],\n                        \"to\": \"cps_component\",\n                        \"action\": \"create\"\n                      },\n                      {\n                        \"from\": [ \"cps_component\" ],\n                        \"to\": \"cps_connector/cps_connector_name\",\n                        \"action\": \"create\"\n                      },\n                      {\n                        \"from\": [ \"cps_connector/cps_connector_name\" ],\n                        \"to\": \"cps_resource_1/cps_component\",\n                        \"action\": \"create\"\n                      },\n                      {\n                        \"from\": [ \"cps_connector/cps_connector_name\" ],\n                        \"to\": \"cps_resource_2/cps_component\",\n                        \"action\": \"create\"\n                      },\n                      {\n                        \"from\": [ \"cps_resource_3/cps_component\" ],\n                        \"to\": \"cps_component\",\n                        \"action\": \"delete\"\n                      },\n                      {\n                        \"from\": [ \"cps_connector/cps_connector_name\" ],\n                        \"to\": \"cps_resource_3/cps_component\",\n                        \"action\": \"delete\"\n                      }\n                    ]\n                  }\n                }\n              service:\n                summary: Service\n                description: Import services\n                value: {\n                  \"json\": {\n                    \"cis\": [\n                      {\n                        \"_id\": \"27e7f6ae-2ba0-4c7d-be4b-3e55e9c6e101\",\n                        \"name\": \"Group 1\",\n                        \"output_template\": \"All: {{.All}}\n                          Alarms: {{.Alarms}}\n                          Acknowledged: {{.Acknowledged}}\n                          NotAcknowledged: {{.NotAcknowledged}}\n                          StateCritical: {{.State.Critical}}\n                          StateMajor: {{.State.Major}}\n                          StateMinor: {{.State.Minor}}\n                          StateInfo: {{.State.Info}}\n                          Maintenance: {{index .PbehaviorCounters \\\"default_maintenance\\\"}}\n                          Pause: {{index .PbehaviorCounters \\\"default_pause\\\"}}\n                          Inactive: {{index .PbehaviorCounters \\\"default_inactive\\\"}}\",\n                        \"entity_patterns\": [\n                          {\n                            \"type\": \"resource\",\n                            \"infos\": {\n                              \"group\": {\n                                \"value\": \"g1\"\n                              }\n                            }\n                          }\n                        ],\n                        \"type\": \"service\",\n                        \"impact_level\": 2,\n                        \"category\": \"d73a4b2a-1927-49d5-bdc3-ae1559ebc7e7\",\n                        \"infos\": {\n                          \"group\": {\n                            \"description\": \"Group id\",\n                            \"value\": \"g1\"\n                          }\n                        },\n                        \"action\": \"set\",\n                        \"enabled\": true\n                      },\n                      {\n                        \"_id\": \"60836aca-6ba5-487b-8773-66b86ca1b422\",\n                        \"name\": \"Group 2\",\n                        \"output_template\": \"All: {{.All}}\n                          Alarms: {{.Alarms}}\n                          Acknowledged: {{.Acknowledged}}\n                          NotAcknowledged: {{.NotAcknowledged}}\n                          StateCritical: {{.State.Critical}}\n                          StateMajor: {{.State.Major}}\n                          StateMinor: {{.State.Minor}}\n                          StateInfo: {{.State.Info}}\n                          Maintenance: {{index .PbehaviorCounters \\\"default_maintenance\\\"}}\n                          Pause: {{index .PbehaviorCounters \\\"default_pause\\\"}}\n                          Inactive: {{index .PbehaviorCounters \\\"default_inactive\\\"}}\",\n                        \"entity_patterns\": [\n                          {\n                            \"type\": \"resource\",\n                            \"infos\": {\n                              \"group\": {\n                                \"value\": \"g2\"\n                              }\n                            }\n                          }\n                        ],\n                        \"type\": \"service\",\n                        \"impact_level\": 2,\n                        \"category\": \"d73a4b2a-1927-49d5-bdc3-ae1559ebc7e7\",\n                        \"infos\": {\n                          \"group\": {\n                            \"description\": \"Group id\",\n                            \"value\": \"g1\"\n                          }\n                        },\n                        \"action\": \"create\",\n                        \"enabled\": true\n                      },\n                      {\n                        \"_id\": \"4fb64340-dd69-4775-8334-b7cbd1dc1156\",\n                        \"name\": \"Group 3\",\n                        \"output_template\": \"All: {{.All}}\n                          Alarms: {{.Alarms}}\n                          Acknowledged: {{.Acknowledged}}\n                          NotAcknowledged: {{.NotAcknowledged}}\n                          StateCritical: {{.State.Critical}}\n                          StateMajor: {{.State.Major}}\n                          StateMinor: {{.State.Minor}}\n                          StateInfo: {{.State.Info}}\n                          Maintenance: {{index .PbehaviorCounters \\\"default_maintenance\\\"}}\n                          Pause: {{index .PbehaviorCounters \\\"default_pause\\\"}}\n                          Inactive: {{index .PbehaviorCounters \\\"default_inactive\\\"}}\",\n                        \"entity_patterns\": [\n                          {\n                            \"type\": \"resource\",\n                            \"infos\": {\n                              \"group\": {\n                                \"value\": \"g3\"\n                              }\n                            }\n                          }\n                        ],\n                        \"type\": \"service\",\n                        \"impact_level\": 2,\n                        \"category\": \"d73a4b2a-1927-49d5-bdc3-ae1559ebc7e7\",\n                        \"infos\": {\n                          \"group\": {\n                            \"description\": \"Group id\",\n                            \"value\": \"g3\"\n                          }\n                        },\n                        \"action\": \"update\",\n                        \"enabled\": true\n                      },\n                      {\n                        \"_id\": \"185bff86-4e9c-4923-a373-69d3116c713b\",\n                        \"action\": \"delete\"\n                      },\n                      {\n                        \"_id\": \"9b49ff9d-f65a-4508-9ddc-298d7dc2e191\",\n                        \"action\": \"enable\"\n                      },\n                      {\n                        \"_id\": \"41b3b72b-2801-4512-ace4-4c0d644189c3\",\n                        \"action\": \"disable\"\n                      }\n                    ],\n                    \"links\": [ ]\n                  }\n                }\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/contextgraph.ImportResponse'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n  /contextgraph/import/status/{id}:\n    get:\n      tags:\n        - contextgraph-import\n      summary: Get import status by id\n      description: Get import status by id\n      operationId: contextgraph-import-get-status-by-id\n      parameters:\n        - name: id\n          in: path\n          description: import id\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/contextgraph.ImportJob'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n  /data-storage:\n    get:\n      tags:\n        - datastorage\n      summary: Get conf\n      description: Get conf\n      operationId: datastorage-get\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/datastorage.DataStorage'\n    put:\n      tags:\n        - datastorage\n      summary: Update conf\n      description: Update conf\n      operationId: datastorage-update\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/datastorage.Config'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/datastorage.DataStorage'\n  /entities:\n    get:\n      tags:\n        - entities\n      summary: Find entities\n      description: Get paginated list of entities\n      operationId: entities-find-all\n      parameters:\n        - name: active_columns[]\n          in: query\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - name: category\n          in: query\n          schema:\n            type: string\n        - name: filter\n          in: query\n          schema:\n            type: string\n        - $ref: '#/components/parameters/limit'\n        - name: no_events\n          in: query\n          schema:\n            type: boolean\n        - $ref: '#/components/parameters/page'\n        - name: paginate\n          in: query\n          schema:\n            type: boolean\n        - $ref: '#/components/parameters/search'\n        - $ref: '#/components/parameters/sort'\n        - name: sort_by\n          in: query\n          schema:\n            type: string\n        - name: with_flags\n          in: query\n          schema:\n            type: boolean\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: 'schemas_swagger.yaml#/definitions/common.PaginatedListResponse'\n                  - type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: 'schemas_swagger.yaml#/definitions/entity.Entity'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n  /entities/clean:\n    post:\n      tags:\n        - entities\n      summary: Clean disabled entities\n      description: Clean disabled entities\n      operationId: entities-clean\n      parameters:\n        - name: archive\n          in: query\n          required: true\n          schema:\n            type: boolean\n        - name: archive_dependencies\n          in: query\n          schema:\n            type: boolean\n      responses:\n        202:\n          description: OK\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n  /entities/pbehaviors:\n    get:\n      tags:\n        - pbehaviors\n      summary: Find pbehaviors by entity id\n      description: Get list of pbehaviors\n      operationId: pbehaviors-find-by-entity-id\n      parameters:\n        - name: id\n          in: query\n          description: Entity id\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'schemas_swagger.yaml#/definitions/pbehavior.Response'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n  /entity-categories:\n    get:\n      tags:\n        - entity-categories\n      summary: Find entity categories\n      description: Get paginated list of entity categories\n      operationId: entity-categories-find-all\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/search'\n        - $ref: '#/components/parameters/sort'\n        - name: sort_by\n          in: query\n          description: sort query\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: 'schemas_swagger.yaml#/definitions/common.PaginatedListResponse'\n                  - type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: 'schemas_swagger.yaml#/definitions/entitycategory.Category'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n    post:\n      tags:\n        - entity-categories\n      summary: Create entity category\n      description: Create entity category\n      operationId: entity-categories-create\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/entitycategory.EditRequest'\n            examples:\n              create:\n                summary: Create\n                description: Create a category.\n                value: {\n                  \"name\": \"Backend\"\n                }\n        required: true\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/entitycategory.Category'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n  /entity-categories/{id}:\n    get:\n      tags:\n        - entity-categories\n      summary: Get entity category by id\n      description: Get entity category by id\n      operationId: entity-categories-get-by-id\n      parameters:\n        - name: id\n          in: path\n          description: category id\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/entitycategory.Category'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    put:\n      tags:\n        - entity-categories\n      summary: Update entity category by id\n      description: Update entity category by id\n      operationId: entity-categories-update-by-id\n      parameters:\n        - name: id\n          in: path\n          description: category id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/entitycategory.EditRequest'\n            examples:\n              update:\n                summary: Update\n                description: Update a category.\n                value: {\n                  \"name\": \"Backend\"\n                }\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/entitycategory.Category'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    delete:\n      tags:\n        - entity-categories\n      summary: Delete entity category by id\n      description: Delete entity category by id\n      operationId: entity-categories-delete-by-id\n      parameters:\n        - name: id\n          in: path\n          description: category id\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: OK\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n  /entity-export:\n    post:\n      tags:\n        - entities\n      summary: Start export entities\n      description: Start export entities\n      operationId: entities-export-start\n      requestBody:\n        description: request\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/entity.ExportRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/entity.ExportResponse'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n  /entity-export/{id}:\n    get:\n      tags:\n        - entities\n      summary: Get status of export entities\n      description: Get status of export entities\n      operationId: entities-export-get\n      parameters:\n        - name: id\n          in: path\n          description: export task id\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/entity.ExportResponse'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n  /entity-export/{id}/download:\n    get:\n      tags:\n        - entities\n      summary: Get result of export entities\n      description: Get result of export entities\n      operationId: entities-export-download\n      parameters:\n        - name: id\n          in: path\n          description: export task id\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            text/csv:\n              schema:\n                type: string\n                format: binary\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n  /entitybasics:\n    get:\n      tags:\n        - entitybasics\n      summary: Get entity by id\n      description: Get entity by id\n      operationId: entitybasics-get-by-id\n      parameters:\n        - name: _id\n          in: query\n          description: Entity id\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/entitybasic.Entity'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    put:\n      tags:\n        - entitybasics\n      summary: Update entity by id\n      description: Update entity by id\n      operationId: entitybasics-update-by-id\n      parameters:\n        - name: _id\n          in: query\n          description: Entity id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/entitybasic.EditRequest'\n            examples:\n              resource:\n                summary: Resource\n                description: Update a resource.\n                value: {\n                  \"description\": \"Important resource\",\n                  \"enabled\": true,\n                  \"category\": \"d73a4b2a-1927-49d5-bdc3-ae1559ebc7e7\",\n                  \"impact_level\": 3,\n                  \"sli_avail_state\": 1,\n                  \"infos\": [\n                    {\n                      \"name\": \"group\",\n                      \"description\": \"Group id\",\n                      \"value\": \"g1\"\n                    }\n                  ],\n                  \"impact\": [\n                    \"cps_component\"\n                  ],\n                  \"depends\": [\n                    \"cps_connector/cps_connector_name\"\n                  ]\n                }\n              component:\n                summary: Component\n                description: Update a component.\n                value: {\n                  \"description\": \"Important component\",\n                  \"enabled\": true,\n                  \"category\": \"d73a4b2a-1927-49d5-bdc3-ae1559ebc7e7\",\n                  \"impact_level\": 3,\n                  \"sli_avail_state\": 1,\n                  \"infos\": [\n                    {\n                      \"name\": \"group\",\n                      \"description\": \"Group id\",\n                      \"value\": \"g1\"\n                    }\n                  ],\n                  \"impact\": [\n                    \"cps_connector/cps_connector_name\"\n                  ],\n                  \"depends\": [\n                    \"cps_resource_1/cps_component\",\n                    \"cps_resource_2/cps_component\"\n                  ]\n                }\n              connector:\n                summary: Connector\n                description: Update a connector.\n                value: {\n                  \"description\": \"Important connector\",\n                  \"enabled\": true,\n                  \"category\": \"d73a4b2a-1927-49d5-bdc3-ae1559ebc7e7\",\n                  \"impact_level\": 3,\n                  \"sli_avail_state\": 1,\n                  \"infos\": [\n                    {\n                      \"name\": \"group\",\n                      \"description\": \"Group id\",\n                      \"value\": \"g1\"\n                    }\n                  ],\n                  \"impact\": [\n                    \"cps_resource_1/cps_component_1\",\n                    \"cps_resource_2/cps_component_2\"\n                  ],\n                  \"depends\": [\n                    \"cps_component_1\",\n                    \"cps_component_2\"\n                  ]\n                }\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/entitybasic.Entity'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    delete:\n      tags:\n        - entitybasics\n      summary: Delete entity by id\n      description: Delete entity by id\n      operationId: entitybasics-delete-by-id\n      parameters:\n        - name: _id\n          in: query\n          description: Entity id\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: OK\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n  /entityservice-dependencies:\n    get:\n      tags:\n        - entityservices\n      summary: Get entity service's dependencies by id\n      description: Get entity service's dependencies by id\n      operationId: entityservices-get-dependencies-by-id\n      parameters:\n        - name: id\n          in: query\n          description: entity service id\n          required: true\n          schema:\n            type: string\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/limit'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: 'schemas_swagger.yaml#/definitions/common.PaginatedListResponse'\n                  - type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: 'schemas_swagger.yaml#/definitions/entityservice.AlarmWithEntity'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n  /entityservice-impacts:\n    get:\n      tags:\n        - entityservices\n      summary: Get entity's impacted services by id\n      description: Get entity's impacted services by id\n      operationId: entityservices-get-impacts-by-id\n      parameters:\n        - name: id\n          in: query\n          description: entity id\n          required: true\n          schema:\n            type: string\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/limit'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: 'schemas_swagger.yaml#/definitions/common.PaginatedListResponse'\n                  - type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: 'schemas_swagger.yaml#/definitions/entityservice.AlarmWithEntity'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n  /entityservices:\n    post:\n      tags:\n        - entityservices\n      summary: Create entity service\n      description: Create entity service\n      operationId: entityservices-create\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/entityservice.EditRequest'\n            examples:\n              create:\n                summary: Create\n                description: Create a service.\n                value: {\n                  \"name\": \"Group 1\",\n                  \"output_template\": \"All: {{.All}}\n                    Alarms: {{.Alarms}}\n                    Acknowledged: {{.Acknowledged}}\n                    NotAcknowledged: {{.NotAcknowledged}}\n                    StateCritical: {{.State.Critical}}\n                    StateMajor: {{.State.Major}}\n                    StateMinor: {{.State.Minor}}\n                    StateInfo: {{.State.Info}}\n                    Maintenance: {{index .PbehaviorCounters \\\"default_maintenance\\\"}}\n                    Pause: {{index .PbehaviorCounters \\\"default_pause\\\"}}\n                    Inactive: {{index .PbehaviorCounters \\\"default_inactive\\\"}}\",\n                  \"category\": \"d73a4b2a-1927-49d5-bdc3-ae1559ebc7e7\",\n                  \"impact_level\": 2,\n                  \"enabled\": true,\n                  \"entity_patterns\": [\n                    {\n                      \"type\": \"resource\",\n                      \"infos\": {\n                        \"group\": {\n                          \"value\": \"g1\"\n                        }\n                      }\n                    }\n                  ],\n                  \"sli_avail_state\": 1,\n                  \"infos\": [\n                    {\n                      \"name\": \"group\",\n                      \"description\": \"Group id\",\n                      \"value\": \"g1\"\n                    }\n                  ]\n                }\n        required: true\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/entityservice.Response'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n  /entityservices/{id}:\n    get:\n      tags:\n        - entityservices\n      summary: Get entity service by id\n      description: Get entity service by id\n      operationId: entityservices-get-by-id\n      parameters:\n        - name: id\n          in: path\n          description: entity service id\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/entityservice.Response'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    put:\n      tags:\n        - entityservices\n      summary: Update entity service by id\n      description: Update entity service by id\n      operationId: entityservices-update-by-id\n      parameters:\n        - name: id\n          in: path\n          description: entity service id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/entityservice.EditRequest'\n            examples:\n              update:\n                summary: Update\n                description: Update a service.\n                value: {\n                  \"name\": \"Group 1\",\n                  \"output_template\": \"All: {{.All}}\n                    Alarms: {{.Alarms}}\n                    Acknowledged: {{.Acknowledged}}\n                    NotAcknowledged: {{.NotAcknowledged}}\n                    StateCritical: {{.State.Critical}}\n                    StateMajor: {{.State.Major}}\n                    StateMinor: {{.State.Minor}}\n                    StateInfo: {{.State.Info}}\n                    Maintenance: {{index .PbehaviorCounters \\\"default_maintenance\\\"}}\n                    Pause: {{index .PbehaviorCounters \\\"default_pause\\\"}}\n                    Inactive: {{index .PbehaviorCounters \\\"default_inactive\\\"}}\",\n                  \"category\": \"d73a4b2a-1927-49d5-bdc3-ae1559ebc7e7\",\n                  \"impact_level\": 2,\n                  \"enabled\": true,\n                  \"entity_patterns\": [\n                    {\n                      \"type\": \"resource\",\n                      \"infos\": {\n                        \"group\": {\n                          \"value\": \"g1\"\n                        }\n                      }\n                    }\n                  ],\n                  \"sli_avail_state\": 1,\n                  \"infos\": [\n                    {\n                      \"name\": \"group\",\n                      \"description\": \"Group id\",\n                      \"value\": \"g1\"\n                    }\n                  ]\n                }\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/entityservice.Response'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    delete:\n      tags:\n        - entityservices\n      summary: Delete entity service by id\n      description: Delete entity service by id\n      operationId: entityservices-delete-by-id\n      parameters:\n        - name: id\n          in: path\n          description: entity service id\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: OK\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n  /event:\n    post:\n      tags:\n        - events\n      summary: Send event/events\n      description: Send event/events\n      operationId: event-send\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/event.Event'\n            examples:\n              check:\n                summary: Check\n                description: Update a state of an alarm.\n                value: {\n                  \"event_type\": \"check\",\n                  \"connector\": \"cps_connector\",\n                  \"connector_name\": \"cps_connector_name\",\n                  \"component\": \"cps_component\",\n                  \"resource\": \"cps_resource\",\n                  \"source_type\": \"resource\",\n                  \"state\": 3,\n                  \"output\": \"Something bag h\",\n                  \"long_output\": \"\"\n                }\n              ack:\n                summary: Ack\n                description: Acknowledge an alarm.\n                value: {\n                  \"event_type\": \"ack\",\n                  \"connector\": \"cps_connector\",\n                  \"connector_name\": \"cps_connector_name\",\n                  \"component\": \"cps_component\",\n                  \"resource\": \"cps_resource\",\n                  \"source_type\": \"resource\",\n                  \"author\": \"root\",\n                  \"user_id\": \"root\",\n                  \"output\": \"\"\n                }\n              ackremove:\n                summary: Ack remove\n                description: Unacknowledge an alarm.\n                value: {\n                  \"event_type\": \"ackremove\",\n                  \"connector\": \"cps_connector\",\n                  \"connector_name\": \"cps_connector_name\",\n                  \"component\": \"cps_component\",\n                  \"resource\": \"cps_resource\",\n                  \"source_type\": \"resource\",\n                  \"author\": \"root\",\n                  \"user_id\": \"root\",\n                  \"output\": \"\"\n                }\n              cancel:\n                summary: Cancel\n                description: Cancel an alarm.\n                value: {\n                  \"event_type\": \"cancel\",\n                  \"connector\": \"cps_connector\",\n                  \"connector_name\": \"cps_connector_name\",\n                  \"component\": \"cps_component\",\n                  \"resource\": \"cps_resource\",\n                  \"source_type\": \"resource\",\n                  \"author\": \"root\",\n                  \"user_id\": \"root\",\n                  \"output\": \"\"\n                }\n              uncancel:\n                summary: Uncancel\n                description: Uncancel an alarm.\n                value: {\n                  \"event_type\": \"uncancel\",\n                  \"connector\": \"cps_connector\",\n                  \"connector_name\": \"cps_connector_name\",\n                  \"component\": \"cps_component\",\n                  \"resource\": \"cps_resource\",\n                  \"source_type\": \"resource\",\n                  \"author\": \"root\",\n                  \"user_id\": \"root\",\n                  \"output\": \"\"\n                }\n              comment:\n                summary: Comment\n                description: Add new comment to an alarm.\n                value: {\n                  \"event_type\": \"comment\",\n                  \"connector\": \"cps_connector\",\n                  \"connector_name\": \"cps_connector_name\",\n                  \"component\": \"cps_component\",\n                  \"resource\": \"cps_resource\",\n                  \"source_type\": \"resource\",\n                  \"author\": \"root\",\n                  \"user_id\": \"root\",\n                  \"output\": \"\"\n                }\n              snooze:\n                summary: Snooze\n                description: Snooze an alarm for duration (in seconds).\n                value: {\n                  \"event_type\": \"snooze\",\n                  \"connector\": \"cps_connector\",\n                  \"connector_name\": \"cps_connector_name\",\n                  \"component\": \"cps_component\",\n                  \"resource\": \"cps_resource\",\n                  \"source_type\": \"resource\",\n                  \"author\": \"root\",\n                  \"user_id\": \"root\",\n                  \"output\": \"\",\n                  \"duration\": 600\n                }\n              changestate:\n                summary: Change state\n                description: Change a state of an alarm. Following check events won't update the state.\n                value: {\n                  \"event_type\": \"changestate\",\n                  \"connector\": \"cps_connector\",\n                  \"connector_name\": \"cps_connector_name\",\n                  \"component\": \"cps_component\",\n                  \"resource\": \"cps_resource\",\n                  \"source_type\": \"resource\",\n                  \"author\": \"root\",\n                  \"user_id\": \"root\",\n                  \"output\": \"\",\n                  \"state\": 3\n                }\n              assocticket:\n                summary: Associate ticket\n                description: Add new ticket to an alarm.\n                value: {\n                  \"event_type\": \"assocticket\",\n                  \"connector\": \"cps_connector\",\n                  \"connector_name\": \"cps_connector_name\",\n                  \"component\": \"cps_component\",\n                  \"resource\": \"cps_resource\",\n                  \"source_type\": \"resource\",\n                  \"author\": \"root\",\n                  \"user_id\": \"root\",\n                  \"ticket\": \"\"\n                }\n              declareticket:\n                summary: Declare ticket\n                description: Emit a trigger. A scenario can be started on the trigger.\n                value: {\n                  \"event_type\": \"declareticket\",\n                  \"connector\": \"cps_connector\",\n                  \"connector_name\": \"cps_connector_name\",\n                  \"component\": \"cps_component\",\n                  \"resource\": \"cps_resource\",\n                  \"source_type\": \"resource\"\n                }\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/event.Response'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n  /eventfilter/rules:\n    get:\n      tags:\n        - eventfilters\n      summary: Find all eventfilter\n      description: Get paginated list of eventfilter\n      operationId: eventfilters-find-all\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/search'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: 'schemas_swagger.yaml#/definitions/common.PaginatedListResponse'\n                  - type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: 'schemas_swagger.yaml#/definitions/eventfilter.EventFilter'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    post:\n      tags:\n        - eventfilters\n      summary: Create eventfilter\n      description: Create eventfilter\n      operationId: eventfilters-create\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/eventfilter.EventFilter'\n        required: true\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/eventfilter.EventFilter'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n  /eventfilter/rules/{id}:\n    get:\n      tags:\n        - eventfilters\n      summary: Get eventfilter by id\n      description: Get eventfilter by id\n      operationId: eventfilters-get-by-id\n      parameters:\n        - name: id\n          in: path\n          description: eventfilter id\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/eventfilter.EventFilter'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    put:\n      tags:\n        - eventfilters\n      summary: Update eventfilter by id\n      description: Update eventfilter by id\n      operationId: eventfilters-update-by-id\n      parameters:\n        - name: id\n          in: path\n          description: eventfilter id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/eventfilter.EventFilter'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/eventfilter.EventFilter'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    delete:\n      tags:\n        - eventfilters\n      summary: Delete eventfilter by id\n      description: Delete eventfilter by id\n      operationId: eventfilters-delete-by-id\n      parameters:\n        - name: id\n          in: path\n          description: eventfilter id\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: OK\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n  /file:\n    get:\n      tags:\n        - files\n      summary: List files by ID\n      description: Get list of file objects by ID\n      operationId: files-list\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'schemas_swagger.yaml#/definitions/file.File'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    post:\n      tags:\n        - files\n      summary: Upload files\n      description: Upload files\n      operationId: file-upload\n      parameters:\n        - name: public\n          in: query\n          description: file visibility\n          schema:\n            type: boolean\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              required:\n                - files\n              properties:\n                files:\n                  type: array\n                  items:\n                    type: string\n                    format: binary\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'schemas_swagger.yaml#/definitions/file.File'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n  /file-access:\n    get:\n      tags:\n        - auth\n      summary: Get file access\n      description: Get file access\n      operationId: auth-get-file-access\n      responses:\n        204:\n          description: OK\n      security:\n        - BearerAuth: [ ]\n  /file/{id}:\n    get:\n      tags:\n        - files\n      summary: Get file by ID\n      description: Get file content by ID or download with file name\n      operationId: files-get\n      parameters:\n        - name: id\n          in: path\n          description: file id\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n                format: binary\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    delete:\n      tags:\n        - files\n      summary: Delete file\n      description: Delete file by ID\n      operationId: files-delete\n      parameters:\n        - name: id\n          in: path\n          description: file id\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: OK\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n  /flapping-rules:\n    get:\n      tags:\n        - flappingrules\n      summary: Find all flapping rule\n      description: Get paginated list of flapping rule\n      operationId: flappingrules-find-all\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/search'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: 'schemas_swagger.yaml#/definitions/common.PaginatedListResponse'\n                  - type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: 'schemas_swagger.yaml#/definitions/flappingrule.Response'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    post:\n      tags:\n        - flappingrules\n      summary: Create flapping rule\n      description: Create flapping rule\n      operationId: flappingrules-create\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/flappingrule.CreateRequest'\n        required: true\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/flappingrule.Response'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n  /flapping-rules/{id}:\n    get:\n      tags:\n        - flappingrules\n      summary: Get flapping rule by id\n      description: Get flapping rule by id\n      operationId: flappingrules-get-by-id\n      parameters:\n        - name: id\n          in: path\n          description: flapping rule id\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/flappingrule.Response'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    put:\n      tags:\n        - flappingrules\n      summary: Update flapping rule by id\n      description: Update flapping rule by id\n      operationId: flappingrules-update-by-id\n      parameters:\n        - name: id\n          in: path\n          description: flapping rule id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/flappingrule.UpdateRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/flappingrule.Response'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    delete:\n      tags:\n        - flappingrules\n      summary: Delete flapping rule by id\n      description: Delete flapping rule by id\n      operationId: flappingrules-delete-by-id\n      parameters:\n        - name: id\n          in: path\n          description: flapping rule id\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: OK\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n  /idle-rules:\n    get:\n      tags:\n        - idlerules\n      summary: Find idle rules\n      description: Get paginated list of idle rules\n      operationId: idlerules-find-all\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/search'\n        - $ref: '#/components/parameters/sort'\n        - name: sort_by\n          in: query\n          description: sort query\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: 'schemas_swagger.yaml#/definitions/common.PaginatedListResponse'\n                  - type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: 'schemas_swagger.yaml#/definitions/idlerule.Rule'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n    post:\n      tags:\n        - idlerules\n      summary: Create idle rule\n      description: Create idle rule\n      operationId: idlerules-create\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/idlerule.EditRequest'\n        required: true\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/idlerule.Rule'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n  /idle-rules/{id}:\n    get:\n      tags:\n        - idlerules\n      summary: Get idle rule by id\n      description: Get idle rule by id\n      operationId: idlerules-get-by-id\n      parameters:\n        - name: id\n          in: path\n          description: rule id\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/idlerule.Rule'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    put:\n      tags:\n        - idlerules\n      summary: Update idle rule by id\n      description: Update idle rule by id\n      operationId: idlerules-update-by-id\n      parameters:\n        - name: id\n          in: path\n          description: rule id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/idlerule.EditRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/idlerule.Rule'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    delete:\n      tags:\n        - idlerules\n      summary: Delete idle rule by id\n      description: Delete idle rule by id\n      operationId: idlerules-delete-by-id\n      parameters:\n        - name: id\n          in: path\n          description: rule id\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: OK\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n  /idle-rules/count:\n    post:\n      tags:\n        - idlerules\n      summary: Count entities and alarm matching patterns\n      description: Count entities and alarm matching patterns\n      operationId: idlerules-countpatterns\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/idlerule.CountByPatternRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/idlerule.CountByPatternResult'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n        408:\n          description: Request Timeout\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n  /internal/user_interface:\n    put:\n      tags:\n        - internal\n      summary: update user interface\n      description: update user interface\n      operationId: internal-update-user-interface\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/appinfo.UserInterfaceConf'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/appinfo.UserInterfaceConf'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n    delete:\n      tags:\n        - internal\n      summary: delete user interface\n      description: delete user interface\n      operationId: internal-delete-user-interface\n      responses:\n        204:\n          description: OK\n  /logged-user-count:\n    get:\n      tags:\n        - auth\n      summary: Get logged user count\n      description: Get logged user count\n      operationId: auth-logged-user-count\n      responses:\n        204:\n          description: OK\n  /login:\n    post:\n      tags:\n        - auth\n      summary: Log in\n      description: Log in\n      operationId: auth-login\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/auth.loginRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/auth.loginResponse'\n      security:\n        - { }\n  /logout:\n    post:\n      tags:\n        - auth\n      summary: Log out\n      description: Log out\n      operationId: auth-logout\n      responses:\n        204:\n          description: OK\n      security:\n        - BearerAuth: [ ]\n  /message-rate-stats:\n    get:\n      tags:\n        - message-rate-stats\n      summary: Find message rate stats\n      description: Get paginated list of stats\n      operationId: message-rate-stats-find-all\n      parameters:\n        - name: from\n          in: query\n          required: true\n          schema:\n            type: integer\n        - name: interval\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: to\n          in: query\n          required: true\n          schema:\n            type: integer\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/messageratestats.StatsListResponse'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n  /notification:\n    get:\n      tags:\n        - notification\n      summary: Get notification settings\n      description: Get notification settings\n      operationId: notification-get\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/limit'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: 'schemas_swagger.yaml#/definitions/common.PaginatedListResponse'\n                  - type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: 'schemas_swagger.yaml#/definitions/notification.Notification'\n    put:\n      tags:\n        - notification\n      summary: Update notification settings\n      description: Update notification settings\n      operationId: notification-update\n      parameters:\n        - name: id\n          in: path\n          description: type id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/notification.Notification'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/notification.Notification'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n  /pbehavior-comments:\n    post:\n      tags:\n        - pbehavior-comments\n      summary: Create pbehavior comment\n      description: Create pbehavior comment\n      operationId: pbehavior-comments-create\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/pbehaviorcomment.Request'\n            examples:\n              create:\n                summary: Create\n                description: Create a comment\n                value: {\n                  \"pbehavior\": \"27e7f6ae-2ba0-4c7d-be4b-3e55e9c6e101\",\n                  \"message\": \"A comment for the pbehavior\"\n                }\n        required: true\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/pbehavior.Comment'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n  /pbehavior-comments/:id:\n    delete:\n      tags:\n        - pbehavior-comments\n      summary: Delete pbehavior comment by id\n      description: Delete pbehavior comment by id\n      operationId: pbehavior-comment-delete-by-id\n      parameters:\n        - name: id\n          in: path\n          description: pbehavior comment id\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: OK\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n  /pbehavior-exceptions:\n    get:\n      tags:\n        - pbehavior-exceptions\n      summary: Find all pbehavior exceptions\n      description: Get paginated list of behavior exceptions\n      operationId: pbehavior-exceptions-find-all\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/search'\n        - $ref: '#/components/parameters/sort'\n        - name: sort_by\n          in: query\n          description: sort query\n          schema:\n            type: string\n        - name: with_flags\n          in: query\n          description: with flags\n          schema:\n            type: boolean\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: 'schemas_swagger.yaml#/definitions/common.PaginatedListResponse'\n                  - type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: 'schemas_swagger.yaml#/definitions/pbehaviorexception.Exception'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n    post:\n      tags:\n        - pbehavior-exceptions\n      summary: Create pbehavior exception\n      description: Create pbehavior exception\n      operationId: pbehavior-exceptions-create\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/pbehaviorexception.Request'\n            examples:\n              create:\n                summary: Create\n                description: Create an exception\n                value: {\n                  \"name\": \"Public holidays 2022\",\n                  \"description\": \"New Year, Easter, Christmas\",\n                  \"exdates\": [\n                    {\n                      \"begin\": 1640991600,\n                      \"end\": 1641078000,\n                      \"type\": \"default_inactive\"\n                    },\n                    {\n                      \"begin\": 1650232800,\n                      \"end\": 1650319200,\n                      \"type\": \"default_inactive\"\n                    },\n                    {\n                      \"begin\": 1671922800,\n                      \"end\": 1672009200,\n                      \"type\": \"default_inactive\"\n                    }\n                  ]\n                }\n        required: true\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/pbehaviorexception.Exception'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n  /pbehavior-exceptions/{id}:\n    get:\n      tags:\n        - pbehavior-exceptions\n      summary: Get pbehavior exception by id\n      description: Get pbehavior exception by id\n      operationId: pbehavior-exceptions-get-by-id\n      parameters:\n        - name: id\n          in: path\n          description: exception id\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/pbehaviorexception.Exception'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    put:\n      tags:\n        - pbehavior-exceptions\n      summary: Update behavior exception by id\n      description: Update behavior exception by id\n      operationId: pbehavior-exceptions-update-by-id\n      parameters:\n        - name: id\n          in: path\n          description: exception id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/pbehaviorexception.Request'\n            examples:\n              update:\n                summary: Update\n                description: Update an exception\n                value: {\n                  \"name\": \"Public holidays 2022\",\n                  \"description\": \"New Year, Easter, Christmas\",\n                  \"exdates\": [\n                    {\n                      \"begin\": 1640991600,\n                      \"end\": 1641078000,\n                      \"type\": \"default_inactive\"\n                    },\n                    {\n                      \"begin\": 1650232800,\n                      \"end\": 1650319200,\n                      \"type\": \"default_inactive\"\n                    },\n                    {\n                      \"begin\": 1671922800,\n                      \"end\": 1672009200,\n                      \"type\": \"default_inactive\"\n                    }\n                  ]\n                }\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/pbehaviorexception.Exception'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    delete:\n      tags:\n        - pbehavior-exceptions\n      summary: Delete pbehavior exception by id\n      description: Delete pbehavior exception by id\n      operationId: pbehavior-exceptions-delete-by-id\n      parameters:\n        - name: id\n          in: path\n          description: exception id\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: OK\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n  /pbehavior-ics/{id}:\n    get:\n      tags:\n        - pbehavior-ics\n      summary: Get pbehavior ICS by id\n      description: Get pbehavior ICS by id\n      operationId: pbehavior-ics-get-by-id\n      parameters:\n        - name: id\n          in: path\n          description: pbehavior id\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            text/calendar:\n              schema:\n                type: string\n                format: binart\n        404:\n          description: Not Found\n          content:\n            application/octet-stream:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n  /pbehavior-reasons:\n    get:\n      tags:\n        - pbehavior-reasons\n      summary: Find pbehavior reasons\n      description: Get paginated list of behavior reasons\n      operationId: pbehavior-reasons-find-all\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/search'\n        - $ref: '#/components/parameters/sort'\n        - name: sort_by\n          in: query\n          description: sort query\n          schema:\n            type: string\n        - name: with_flags\n          in: query\n          description: with flags\n          schema:\n            type: boolean\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: 'schemas_swagger.yaml#/definitions/common.PaginatedListResponse'\n                  - type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: 'schemas_swagger.yaml#/definitions/pbehaviorreason.Reason'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n    post:\n      tags:\n        - pbehavior-reasons\n      summary: Create pbehavior reason\n      description: Create pbehavior reason\n      operationId: pbehavior-reasons-create\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/pbehaviorreason.Request'\n            examples:\n              create:\n                summary: Create\n                description: Create a reason\n                value: {\n                  \"name\": \"Deployment\",\n                  \"description\": \"New version deployment\"\n                }\n        required: true\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/pbehaviorreason.Reason'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n  /pbehavior-reasons/{id}:\n    get:\n      tags:\n        - pbehavior-reasons\n      summary: Get pbehavior reason by id\n      description: Get pbehavior reason by id\n      operationId: pbehavior-reasons-get-by-id\n      parameters:\n        - name: id\n          in: path\n          description: reason id\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/pbehaviorreason.Reason'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    put:\n      tags:\n        - pbehavior-reasons\n      summary: Update behavior reason by id\n      description: Update behavior reason by id\n      operationId: pbehavior-reasons-update-by-id\n      parameters:\n        - name: id\n          in: path\n          description: reason id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/pbehaviorreason.Request'\n            examples:\n              update:\n                summary: Update\n                description: Update a reason\n                value: {\n                  \"name\": \"Deployment\",\n                  \"description\": \"New version deployment\"\n                }\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/pbehaviorreason.Reason'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    delete:\n      tags:\n        - pbehavior-reasons\n      summary: Delete pbehavior reason by id\n      description: Delete pbehavior reason by id\n      operationId: pbehavior-reasons-delete-by-id\n      parameters:\n        - name: id\n          in: path\n          description: reason id\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: OK\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n  /pbehavior-timespans:\n    post:\n      tags:\n        - pbehavior-timespans\n      summary: Get all pbehavior timespans\n      description: 'Get time spans of calendar event within view span; {by_date: false}\n        adds exception spans with types, {by_date: true} merges adjacent spans if\n        gap between sequential ones less than 24 hours'\n      operationId: pbehavior-timespans-get-all\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/pbehaviortimespan.TimespansRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'schemas_swagger.yaml#/definitions/pbehaviortimespan.timespansItemResponse'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n  /pbehavior-types:\n    get:\n      tags:\n        - pbehavior-types\n      summary: Find pbehavior types\n      description: Get paginated list of behavior types\n      operationId: pbehavior-types-find-all\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/search'\n        - $ref: '#/components/parameters/sort'\n        - name: sort_by\n          in: query\n          description: sort query\n          schema:\n            type: string\n        - name: with_flags\n          in: query\n          description: with flags\n          schema:\n            type: boolean\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: 'schemas_swagger.yaml#/definitions/common.PaginatedListResponse'\n                  - type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: 'schemas_swagger.yaml#/definitions/pbehavior.Type'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n    post:\n      tags:\n        - pbehavior-types\n      summary: Create pbehavior type\n      description: Create pbehavior type\n      operationId: pbehavior-types-create\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/pbehaviortype.EditRequest'\n            examples:\n              create:\n                summary: Create\n                description: Create a type\n                value: {\n                  \"name\": \"Unplanned maintenance\",\n                  \"description\": \"Maintenances which are not on the schedule\",\n                  \"type\": \"maintenance\",\n                  \"priority\": 10,\n                  \"icon_name\": \"broken_image\"\n                }\n        required: true\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/pbehavior.Type'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n  /pbehavior-types/{id}:\n    get:\n      tags:\n        - pbehavior-types\n      summary: Get pbehavior type by id\n      description: Get pbehavior type by id\n      operationId: pbehavior-types-get-by-id\n      parameters:\n        - name: id\n          in: path\n          description: type id\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/pbehavior.Type'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    put:\n      tags:\n        - pbehavior-types\n      summary: Update behavior type by id\n      description: Update behavior type by id\n      operationId: pbehavior-types-update-by-id\n      parameters:\n        - name: id\n          in: path\n          description: type id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/pbehaviortype.EditRequest'\n            examples:\n              update:\n                summary: Update\n                description: Update a type\n                value: {\n                  \"name\": \"Unplanned maintenance\",\n                  \"description\": \"Maintenances which are not on the schedule\",\n                  \"type\": \"maintenance\",\n                  \"priority\": 10,\n                  \"icon_name\": \"broken_image\"\n                }\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/pbehavior.Type'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    delete:\n      tags:\n        - pbehavior-types\n      summary: Delete pbehavior type by id\n      description: Delete pbehavior type by id\n      operationId: pbehavior-types-delete-by-id\n      parameters:\n        - name: id\n          in: path\n          description: type id\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: OK\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n  /pbehaviors:\n    delete:\n      tags:\n        - pbehaviors\n      summary: Delete pbehavior by name\n      description: Delete pbehavior by name\n      operationId: pbehaviors-delete-by-name\n      parameters:\n        - name: name\n          in: query\n          description: pbehavior name\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: OK\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    get:\n      tags:\n        - pbehaviors\n      summary: Find all pbehaviors\n      description: Get paginated list of pbehaviors\n      operationId: pbehaviors-find-all\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/search'\n        - $ref: '#/components/parameters/sort'\n        - name: sort_by\n          in: query\n          description: sort query\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: 'schemas_swagger.yaml#/definitions/common.PaginatedListResponse'\n                  - type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: 'schemas_swagger.yaml#/definitions/pbehavior.Response'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n    post:\n      tags:\n        - pbehaviors\n      summary: Create pbehavior\n      description: Create pbehavior\n      operationId: pbehaviors-create\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/pbehavior.CreateRequest'\n            examples:\n              maintenance:\n                summary: Maintenance period\n                description: Create a pbehavior with one maintenance period\n                value: {\n                  \"name\": \"Maintenance period\",\n                  \"enabled\": true,\n                  \"tstart\": 1591172881,\n                  \"tstop\": 1591536400,\n                  \"rrule\": \"\",\n                  \"type\": \"default_Maintenance\",\n                  \"reason\": \"default_reason\",\n                  \"filter\": {\n                    \"$and\": [\n                      {\n                        \"name\": \"cps_resource\"\n                      }\n                    ]\n                  }\n                }\n              pause:\n                summary: Pause period\n                description: Create a pbehavior with endless pause period\n                value: {\n                  \"name\": \"Pause period\",\n                  \"enabled\": true,\n                  \"tstart\": 1591172881,\n                  \"tstop\": null,\n                  \"rrule\": \"\",\n                  \"type\": \"default_pause\",\n                  \"reason\": \"default_reason\",\n                  \"filter\": {\n                    \"$and\": [\n                      {\n                        \"name\": \"cps_resource\"\n                      }\n                    ]\n                  }\n                }\n              inactive:\n                summary: Inactive period\n                description: Create a pbehavior with weekend inactive periods\n                value: {\n                  \"name\": \"Inactive period\",\n                  \"enabled\": true,\n                  \"tstart\": 1651269600,\n                  \"tstop\": 1651442400,\n                  \"rrule\": \"FREQ=WEEKLY\",\n                  \"type\": \"default_inactive\",\n                  \"reason\": \"default_reason\",\n                  \"filter\": {\n                    \"$and\": [\n                      {\n                        \"name\": \"cps_resource\"\n                      }\n                    ]\n                  }\n                }\n              active:\n                summary: Active period\n                description: Create a pbehavior with daily active periods except some days\n                value: {\n                  \"name\": \"Active period\",\n                  \"enabled\": true,\n                  \"tstart\": 1650855600,\n                  \"tstop\": 1650891600,\n                  \"rrule\": \"FREQ=DAILY\",\n                  \"type\": \"default_active\",\n                  \"reason\": \"default_reason\",\n                  \"filter\": {\n                    \"$and\": [\n                      {\n                        \"name\": \"cps_resource\"\n                      }\n                    ]\n                  },\n                  \"exdates\": [\n                    {\n                      \"begin\": 1651460400,\n                      \"end\": 1651496400,\n                      \"type\": \"default_maintenance\"\n                    }\n                  ],\n                  \"exceptions\": [ \"27e7f6ae-2ba0-4c7d-be4b-3e55e9c6e101\" ]\n                }\n        required: true\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/pbehavior.Response'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n  /pbehaviors/{id}:\n    get:\n      tags:\n        - pbehaviors\n      summary: Get pbehavior by id\n      description: Get pbehavior by id\n      operationId: pbehaviors-get-by-id\n      parameters:\n        - name: id\n          in: path\n          description: pbehavior id\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/pbehavior.Response'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    put:\n      tags:\n        - pbehaviors\n      summary: Update behavior by id\n      description: Update behavior by id\n      operationId: pbehaviors-update-by-id\n      parameters:\n        - name: id\n          in: path\n          description: pbehavior id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/pbehavior.UpdateRequest'\n            examples:\n              update:\n                summary: Update\n                description: Update a pbehavior\n                value: {\n                  \"name\": \"Active period\",\n                  \"enabled\": true,\n                  \"tstart\": 1650855600,\n                  \"tstop\": 1650891600,\n                  \"rrule\": \"FREQ=DAILY\",\n                  \"type\": \"default_active\",\n                  \"reason\": \"default_reason\",\n                  \"filter\": {\n                    \"$and\": [\n                      {\n                        \"name\": \"cps_resource\"\n                      }\n                    ]\n                  },\n                  \"exdates\": [\n                    {\n                      \"begin\": 1651460400,\n                      \"end\": 1651496400,\n                      \"type\": \"default_maintenance\"\n                    }\n                  ],\n                  \"exceptions\": [ \"27e7f6ae-2ba0-4c7d-be4b-3e55e9c6e101\" ]\n                }\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/pbehavior.Response'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    delete:\n      tags:\n        - pbehaviors\n      summary: Delete pbehavior by id\n      description: Delete pbehavior by id\n      operationId: pbehaviors-delete-by-id\n      parameters:\n        - name: id\n          in: path\n          description: pbehavior id\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: OK\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    patch:\n      tags:\n        - pbehaviors\n      summary: Patch partial set of behavior attributes by id\n      description: Patch partial set of behavior attributes by id\n      operationId: pbehaviors-patch-by-id\n      parameters:\n        - name: id\n          in: path\n          description: pbehavior id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/pbehavior.PatchRequest'\n            examples:\n              update:\n                summary: Update interval\n                description: Update only a pbehavior interval\n                value: {\n                  \"tstart\": 1650855600,\n                  \"tstop\": 1650891600\n                }\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/pbehavior.Response'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n  /pbehaviors/{id}/entities:\n    get:\n      tags:\n        - pbehaviors\n      summary: Find entities by pbehavior id\n      description: Find entities by pbehavior id\n      operationId: pbehaviors-find-entities\n      parameters:\n        - name: id\n          in: path\n          description: pbehavior id\n          required: true\n          schema:\n            type: string\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/search'\n        - $ref: '#/components/parameters/sort'\n        - name: sort_by\n          in: query\n          description: sort query\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: 'schemas_swagger.yaml#/definitions/common.PaginatedListResponse'\n                  - type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: 'schemas_swagger.yaml#/definitions/entity.Entity'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n  /pbehaviors/count:\n    post:\n      tags:\n        - pbehaviors\n      summary: Count entities matching filter\n      description: Count entities matching filter\n      operationId: pbehaviors-countfilter\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/pbehavior.FilterRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/pbehavior.CountFilterResult'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n        408:\n          description: Request Timeout\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n  /permissions:\n    get:\n      tags:\n        - permissions\n      summary: Find permissions\n      description: Get paginated list of permissions\n      operationId: permissions-find-all\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/search'\n        - $ref: '#/components/parameters/sort'\n        - name: sort_by\n          in: query\n          description: sort query\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: 'schemas_swagger.yaml#/definitions/common.PaginatedListResponse'\n                  - type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: 'schemas_swagger.yaml#/definitions/permission.Permission'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n  /playlists:\n    get:\n      tags:\n        - playlists\n      summary: Find all playlist\n      description: Get paginated list of playlist\n      operationId: playlists-find-all\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/search'\n        - $ref: '#/components/parameters/sort'\n        - name: sort_by\n          in: query\n          description: sort query\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: 'schemas_swagger.yaml#/definitions/common.PaginatedListResponse'\n                  - type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: 'schemas_swagger.yaml#/definitions/playlist.Playlist'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n    post:\n      tags:\n        - playlists\n      summary: Create playlist\n      description: Create playlist\n      operationId: playlists-create\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/playlist.EditRequest'\n        required: true\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/playlist.Playlist'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n  /playlists/{id}:\n    get:\n      tags:\n        - playlists\n      summary: Get playlist by id\n      description: Get playlist by id\n      operationId: playlists-get-by-id\n      parameters:\n        - name: id\n          in: path\n          description: playlist id\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/playlist.Playlist'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    put:\n      tags:\n        - playlists\n      summary: Update playlist by id\n      description: Update playlist by id\n      operationId: playlists-update-by-id\n      parameters:\n        - name: id\n          in: path\n          description: playlist id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/playlist.Playlist'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/playlist.Playlist'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    delete:\n      tags:\n        - playlists\n      summary: Delete playlist by id\n      description: Delete playlist by id\n      operationId: playlists-delete-by-id\n      parameters:\n        - name: id\n          in: path\n          description: playlist id\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: OK\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n  /resolve-rules:\n    get:\n      tags:\n        - resolverules\n      summary: Find all resolve rule\n      description: Get paginated list of resolve rule\n      operationId: resolverules-find-all\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/search'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: 'schemas_swagger.yaml#/definitions/common.PaginatedListResponse'\n                  - type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: 'schemas_swagger.yaml#/definitions/resolverule.Response'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    post:\n      tags:\n        - resolverules\n      summary: Create resolve rule\n      description: Create resolve rule\n      operationId: resolverules-create\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/resolverule.CreateRequest'\n        required: true\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/resolverule.Response'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n  /resolve-rules/{id}:\n    get:\n      tags:\n        - resolverules\n      summary: Get resolve rule by id\n      description: Get resolve rule by id\n      operationId: resolverules-get-by-id\n      parameters:\n        - name: id\n          in: path\n          description: resolve rule id\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/resolverule.Response'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    put:\n      tags:\n        - resolverules\n      summary: Update resolve rule by id\n      description: Update resolve rule by id\n      operationId: resolverules-update-by-id\n      parameters:\n        - name: id\n          in: path\n          description: resolve rule id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/resolverule.UpdateRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/resolverule.Response'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    delete:\n      tags:\n        - resolverules\n      summary: Delete resolve rule by id\n      description: Delete resolve rule by id\n      operationId: resolverules-delete-by-id\n      parameters:\n        - name: id\n          in: path\n          description: resolve rule id\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: OK\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n  /roles:\n    get:\n      tags:\n        - roles\n      summary: Find roles\n      description: Get paginated list of roles\n      operationId: roles-find-all\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/search'\n        - $ref: '#/components/parameters/sort'\n        - name: sort_by\n          in: query\n          description: sort query\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: 'schemas_swagger.yaml#/definitions/common.PaginatedListResponse'\n                  - type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: 'schemas_swagger.yaml#/definitions/role.Role'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n    post:\n      tags:\n        - roles\n      summary: Create role\n      description: Create role\n      operationId: roles-create\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/role.CreateRequest'\n        required: true\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/role.Role'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n  /roles/{id}:\n    get:\n      tags:\n        - roles\n      summary: Get role by id\n      description: Get role by id\n      operationId: roles-get-by-id\n      parameters:\n        - name: id\n          in: path\n          description: role id\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/role.Role'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    put:\n      tags:\n        - roles\n      summary: Update role by id\n      description: Update role by id\n      operationId: roles-update-by-id\n      parameters:\n        - name: id\n          in: path\n          description: role id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/role.EditRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/role.Role'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    delete:\n      tags:\n        - roles\n      summary: Delete role by id\n      description: Delete role by id\n      operationId: roles-delete-by-id\n      parameters:\n        - name: id\n          in: path\n          description: role id\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: OK\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n  /scenarios:\n    get:\n      tags:\n        - scenarios\n      summary: Find scenarios\n      description: Get paginated list of scenarios\n      operationId: scenarios-find-all\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/search'\n        - $ref: '#/components/parameters/sort'\n        - name: sort_by\n          in: query\n          description: sort query\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: 'schemas_swagger.yaml#/definitions/common.PaginatedListResponse'\n                  - type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: 'schemas_swagger.yaml#/definitions/scenario.Scenario'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n    post:\n      tags:\n        - scenarios\n      summary: Create scenario\n      description: Create scenario\n      operationId: scenarios-create\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/scenario.EditRequest'\n            examples:\n              ack:\n                summary: Acknowledge action\n                description: Create a scenario with acknowledge action.\n                value: {\n                  \"name\": \"Scenario with acknowledge action\",\n                  \"comment\": \"The scenario acknowledges an alarm on create\",\n                  \"enabled\": true,\n                  \"priority\": 10,\n                  \"triggers\": [ \"create\" ],\n                  \"actions\": [\n                    {\n                      \"type\": \"ack\",\n                      \"parameters\": {\n                        \"output\": \"The alarm is acknowledged by scenario\"\n                      },\n                      \"alarm_patterns\": [\n                        {\n                          \"v\": {\n                            \"state\": {\n                              \"val\": 3\n                            }\n                          }\n                        }\n                      ],\n                      \"entity_patterns\": [\n                        {\n                          \"type\": \"resource\",\n                          \"infos\": {\n                            \"group\": {\n                              \"value\": \"g1\"\n                            }\n                          }\n                        }\n                      ],\n                      \"drop_scenario_if_not_matched\": false,\n                      \"emit_trigger\": false\n                    }\n                  ]\n                }\n              ackremove:\n                summary: Acknowledge remove action\n                description: Create a scenario with acknowledge remove action.\n                value: {\n                  \"name\": \"Scenario with acknowledge remove action\",\n                  \"comment\": \"The scenario removes an acknowledge of an alarm on state increase\",\n                  \"enabled\": true,\n                  \"priority\": 10,\n                  \"triggers\": [ \"stateinc\" ],\n                  \"actions\": [\n                    {\n                      \"type\": \"ackremove\",\n                      \"parameters\": {\n                        \"output\": \"The alarm is unacknowledged by scenario\"\n                      },\n                      \"alarm_patterns\": [\n                        {\n                          \"v\": {\n                            \"state\": {\n                              \"val\": 3\n                            }\n                          }\n                        }\n                      ],\n                      \"entity_patterns\": [\n                        {\n                          \"type\": \"resource\",\n                          \"infos\": {\n                            \"group\": {\n                              \"value\": \"g1\"\n                            }\n                          }\n                        }\n                      ],\n                      \"drop_scenario_if_not_matched\": false,\n                      \"emit_trigger\": false\n                    }\n                  ]\n                }\n              assocticket:\n                summary: Associate ticket action\n                description: Create a scenario with associate ticket action.\n                value: {\n                  \"name\": \"Scenario with associate ticket action\",\n                  \"comment\": \"The scenario adds a ticket to an alarm on activate\",\n                  \"enabled\": true,\n                  \"priority\": 10,\n                  \"triggers\": [ \"activate\" ],\n                  \"actions\": [\n                    {\n                      \"type\": \"assocticket\",\n                      \"parameters\": {\n                        \"output\": \"The ticket is added to the alarm by scenario\",\n                        \"ticket\": \"ENV-116\"\n                      },\n                      \"alarm_patterns\": [\n                        {\n                          \"v\": {\n                            \"state\": {\n                              \"val\": 3\n                            }\n                          }\n                        }\n                      ],\n                      \"entity_patterns\": [\n                        {\n                          \"type\": \"resource\",\n                          \"infos\": {\n                            \"group\": {\n                              \"value\": \"g1\"\n                            }\n                          }\n                        }\n                      ],\n                      \"drop_scenario_if_not_matched\": false,\n                      \"emit_trigger\": false\n                    }\n                  ]\n                }\n              cancel:\n                summary: Cancel action\n                description: Create a scenario with cancel action.\n                value: {\n                  \"name\": \"Scenario with cancel action\",\n                  \"comment\": \"The scenario cancels an alarm on state decrease\",\n                  \"enabled\": true,\n                  \"priority\": 10,\n                  \"triggers\": [ \"statedec\" ],\n                  \"actions\": [\n                    {\n                      \"type\": \"cancel\",\n                      \"parameters\": {\n                        \"output\": \"The alarm is canceled by scenario\"\n                      },\n                      \"alarm_patterns\": [\n                        {\n                          \"v\": {\n                            \"state\": {\n                              \"val\": 1\n                            }\n                          }\n                        }\n                      ],\n                      \"entity_patterns\": [\n                        {\n                          \"type\": \"resource\",\n                          \"infos\": {\n                            \"group\": {\n                              \"value\": \"g1\"\n                            }\n                          }\n                        }\n                      ],\n                      \"drop_scenario_if_not_matched\": false,\n                      \"emit_trigger\": false\n                    }\n                  ]\n                }\n              changestate:\n                summary: Change state action\n                description: Create a scenario with change state action.\n                value: {\n                  \"name\": \"Scenario with change state action\",\n                  \"comment\": \"The scenario changes a state of an alarm on acknowledge\",\n                  \"enabled\": true,\n                  \"priority\": 10,\n                  \"triggers\": [ \"ack\" ],\n                  \"actions\": [\n                    {\n                      \"type\": \"changestate\",\n                      \"parameters\": {\n                        \"output\": \"The state of the alarm is changed by scenario\",\n                        \"state\": 3\n                      },\n                      \"alarm_patterns\": [\n                        {\n                          \"v\": {\n                            \"status\": {\n                              \"val\": 1\n                            }\n                          }\n                        }\n                      ],\n                      \"entity_patterns\": [\n                        {\n                          \"type\": \"resource\",\n                          \"infos\": {\n                            \"group\": {\n                              \"value\": \"g1\"\n                            }\n                          }\n                        }\n                      ],\n                      \"drop_scenario_if_not_matched\": false,\n                      \"emit_trigger\": false\n                    }\n                  ]\n                }\n              pbehavior:\n                summary: Pbehavior action\n                description: Create a scenario with pbehavior action.\n                value: {\n                  \"name\": \"Scenario with pbehavior action\",\n                  \"comment\": \"The scenario creates a pbehavior for an alarm on create\",\n                  \"enabled\": true,\n                  \"priority\": 10,\n                  \"triggers\": [ \"create\" ],\n                  \"actions\": [\n                    {\n                      \"type\": \"pbehavior\",\n                      \"parameters\": {\n                        \"name\": \"The pbehavior is created by scenario\",\n                        \"reason\": \"default_reason\",\n                        \"type\": \"default_pause\",\n                        \"start_on_trigger\": true,\n                        \"duration\": {\n                          \"value\": 10,\n                          \"unit\": \"m\"\n                        }\n                      },\n                      \"alarm_patterns\": [\n                        {\n                          \"v\": {\n                            \"state\": {\n                              \"val\": 3\n                            }\n                          }\n                        }\n                      ],\n                      \"entity_patterns\": [\n                        {\n                          \"type\": \"resource\",\n                          \"infos\": {\n                            \"group\": {\n                              \"value\": \"g1\"\n                            }\n                          }\n                        }\n                      ],\n                      \"drop_scenario_if_not_matched\": false,\n                      \"emit_trigger\": false\n                    }\n                  ]\n                }\n              snooze:\n                summary: Snooze action\n                description: Create a scenario with snooze action.\n                value: {\n                  \"name\": \"Scenario with snooze action\",\n                  \"comment\": \"The scenario snoozes an alarm on create\",\n                  \"enabled\": true,\n                  \"priority\": 10,\n                  \"triggers\": [ \"create\" ],\n                  \"actions\": [\n                    {\n                      \"type\": \"snooze\",\n                      \"parameters\": {\n                        \"output\": \"The alarm is snoozed by scenario\",\n                        \"duration\": {\n                          \"value\": 10,\n                          \"unit\": \"m\"\n                        }\n                      },\n                      \"alarm_patterns\": [\n                        {\n                          \"v\": {\n                            \"state\": {\n                              \"val\": 3\n                            }\n                          }\n                        }\n                      ],\n                      \"entity_patterns\": [\n                        {\n                          \"type\": \"resource\",\n                          \"infos\": {\n                            \"group\": {\n                              \"value\": \"g1\"\n                            }\n                          }\n                        }\n                      ],\n                      \"drop_scenario_if_not_matched\": false,\n                      \"emit_trigger\": false\n                    }\n                  ]\n                }\n              webhook:\n                summary: Webhook action\n                description: Create a scenario with webhook action.\n                value: {\n                  \"name\": \"Scenario with webhook action\",\n                  \"comment\": \"The scenario does webhook request for an alarm on declare ticket\",\n                  \"enabled\": true,\n                  \"priority\": 10,\n                  \"triggers\": [ \"declareticket\" ],\n                  \"actions\": [\n                    {\n                      \"type\": \"webhook\",\n                      \"parameters\": {\n                        \"request\": {\n                          \"method\": \"POST\",\n                          \"url\": \"https://test-rest-api.com/ticket\",\n                          \"auth\": {\n                            \"username\": \"admin\",\n                            \"password\": \"admin\"\n                          },\n                          \"headers\": { \"Content-Type\": \"application/json\" },\n                          \"payload\": \"{\\\"service\\\":\\\"{{ .Alarm.Value.Resource }}\\\",\\\"host\\\":\\\"{{ .Alarm.Value.Component }}\\\",\\\"group\\\":\\\"{{ .Entity.Infos.group.Value }}\\\",\\\"change\\\":\\\"{{ .AdditionalData.AlarmChangeType }}\\\"}\"\n                        },\n                        \"declare_ticket\": {\n                          \"empty_response\": false,\n                          \"is_regexp\": false,\n                          \"ticket_id\": \"id\",\n                          \"external_link\": \"link\"\n                        },\n                        \"retry_count\": 3,\n                        \"retry_delay\": {\n                          \"value\": 3,\n                          \"unit\": \"s\"\n                        }\n                      },\n                      \"alarm_patterns\": [\n                        {\n                          \"v\": {\n                            \"state\": {\n                              \"val\": 3\n                            }\n                          }\n                        }\n                      ],\n                      \"entity_patterns\": [\n                        {\n                          \"type\": \"resource\",\n                          \"infos\": {\n                            \"group\": {\n                              \"value\": \"g1\"\n                            }\n                          }\n                        }\n                      ],\n                      \"drop_scenario_if_not_matched\": false,\n                      \"emit_trigger\": false\n                    }\n                  ]\n                }\n        required: true\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/scenario.Scenario'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n  /scenarios/{id}:\n    get:\n      tags:\n        - scenarios\n      summary: Get scenario by id\n      description: Get scenario by id\n      operationId: scenarios-get-by-id\n      parameters:\n        - name: id\n          in: path\n          description: scenario id\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/scenario.Scenario'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    put:\n      tags:\n        - scenarios\n      summary: Update scenario by id\n      description: Update scenario by id\n      operationId: scenarios-update-by-id\n      parameters:\n        - name: id\n          in: path\n          description: scenario id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/scenario.EditRequest'\n            examples:\n              ack:\n                summary: Acknowledge action\n                description: Update a scenario with acknowledge action.\n                value: {\n                  \"name\": \"Scenario with acknowledge action\",\n                  \"comment\": \"The scenario acknowledges an alarm on create\",\n                  \"enabled\": true,\n                  \"priority\": 10,\n                  \"triggers\": [ \"create\" ],\n                  \"actions\": [\n                    {\n                      \"type\": \"ack\",\n                      \"parameters\": {\n                        \"output\": \"The alarm is acknowledged by scenario\"\n                      },\n                      \"alarm_patterns\": [\n                        {\n                          \"v\": {\n                            \"state\": {\n                              \"val\": 3\n                            }\n                          }\n                        }\n                      ],\n                      \"entity_patterns\": [\n                        {\n                          \"type\": \"resource\",\n                          \"infos\": {\n                            \"group\": {\n                              \"value\": \"g1\"\n                            }\n                          }\n                        }\n                      ],\n                      \"drop_scenario_if_not_matched\": false,\n                      \"emit_trigger\": false\n                    }\n                  ]\n                }\n              ackremove:\n                summary: Acknowledge remove action\n                description: Update a scenario with acknowledge remove action.\n                value: {\n                  \"name\": \"Scenario with acknowledge remove action\",\n                  \"comment\": \"The scenario removes an acknowledge of an alarm on state increase\",\n                  \"enabled\": true,\n                  \"priority\": 10,\n                  \"triggers\": [ \"stateinc\" ],\n                  \"actions\": [\n                    {\n                      \"type\": \"ackremove\",\n                      \"parameters\": {\n                        \"output\": \"The alarm is unacknowledged by scenario\"\n                      },\n                      \"alarm_patterns\": [\n                        {\n                          \"v\": {\n                            \"state\": {\n                              \"val\": 3\n                            }\n                          }\n                        }\n                      ],\n                      \"entity_patterns\": [\n                        {\n                          \"type\": \"resource\",\n                          \"infos\": {\n                            \"group\": {\n                              \"value\": \"g1\"\n                            }\n                          }\n                        }\n                      ],\n                      \"drop_scenario_if_not_matched\": false,\n                      \"emit_trigger\": false\n                    }\n                  ]\n                }\n              assocticket:\n                summary: Associate ticket action\n                description: Update a scenario with associate ticket action.\n                value: {\n                  \"name\": \"Scenario with associate ticket action\",\n                  \"comment\": \"The scenario adds a ticket to an alarm on activate\",\n                  \"enabled\": true,\n                  \"priority\": 10,\n                  \"triggers\": [ \"activate\" ],\n                  \"actions\": [\n                    {\n                      \"type\": \"assocticket\",\n                      \"parameters\": {\n                        \"output\": \"The ticket is added to the alarm by scenario\",\n                        \"ticket\": \"ENV-116\"\n                      },\n                      \"alarm_patterns\": [\n                        {\n                          \"v\": {\n                            \"state\": {\n                              \"val\": 3\n                            }\n                          }\n                        }\n                      ],\n                      \"entity_patterns\": [\n                        {\n                          \"type\": \"resource\",\n                          \"infos\": {\n                            \"group\": {\n                              \"value\": \"g1\"\n                            }\n                          }\n                        }\n                      ],\n                      \"drop_scenario_if_not_matched\": false,\n                      \"emit_trigger\": false\n                    }\n                  ]\n                }\n              cancel:\n                summary: Cancel action\n                description: Update a scenario with cancel action.\n                value: {\n                  \"name\": \"Scenario with cancel action\",\n                  \"comment\": \"The scenario cancels an alarm on state decrease\",\n                  \"enabled\": true,\n                  \"priority\": 10,\n                  \"triggers\": [ \"statedec\" ],\n                  \"actions\": [\n                    {\n                      \"type\": \"cancel\",\n                      \"parameters\": {\n                        \"output\": \"The alarm is canceled by scenario\"\n                      },\n                      \"alarm_patterns\": [\n                        {\n                          \"v\": {\n                            \"state\": {\n                              \"val\": 1\n                            }\n                          }\n                        }\n                      ],\n                      \"entity_patterns\": [\n                        {\n                          \"type\": \"resource\",\n                          \"infos\": {\n                            \"group\": {\n                              \"value\": \"g1\"\n                            }\n                          }\n                        }\n                      ],\n                      \"drop_scenario_if_not_matched\": false,\n                      \"emit_trigger\": false\n                    }\n                  ]\n                }\n              changestate:\n                summary: Change state action\n                description: Update a scenario with change state action.\n                value: {\n                  \"name\": \"Scenario with change state action\",\n                  \"comment\": \"The scenario changes a state of an alarm on acknowledge\",\n                  \"enabled\": true,\n                  \"priority\": 10,\n                  \"triggers\": [ \"ack\" ],\n                  \"actions\": [\n                    {\n                      \"type\": \"changestate\",\n                      \"parameters\": {\n                        \"output\": \"The state of the alarm is changed by scenario\",\n                        \"state\": 3\n                      },\n                      \"alarm_patterns\": [\n                        {\n                          \"v\": {\n                            \"status\": {\n                              \"val\": 1\n                            }\n                          }\n                        }\n                      ],\n                      \"entity_patterns\": [\n                        {\n                          \"type\": \"resource\",\n                          \"infos\": {\n                            \"group\": {\n                              \"value\": \"g1\"\n                            }\n                          }\n                        }\n                      ],\n                      \"drop_scenario_if_not_matched\": false,\n                      \"emit_trigger\": false\n                    }\n                  ]\n                }\n              pbehavior:\n                summary: Pbehavior action\n                description: Update a scenario with pbehavior action.\n                value: {\n                  \"name\": \"Scenario with pbehavior action\",\n                  \"comment\": \"The scenario creates a pbehavior for an alarm on create\",\n                  \"enabled\": true,\n                  \"priority\": 10,\n                  \"triggers\": [ \"create\" ],\n                  \"actions\": [\n                    {\n                      \"type\": \"pbehavior\",\n                      \"parameters\": {\n                        \"name\": \"The pbehavior is created by scenario\",\n                        \"reason\": \"default_reason\",\n                        \"type\": \"default_pause\",\n                        \"start_on_trigger\": true,\n                        \"duration\": {\n                          \"value\": 10,\n                          \"unit\": \"m\"\n                        }\n                      },\n                      \"alarm_patterns\": [\n                        {\n                          \"v\": {\n                            \"state\": {\n                              \"val\": 3\n                            }\n                          }\n                        }\n                      ],\n                      \"entity_patterns\": [\n                        {\n                          \"type\": \"resource\",\n                          \"infos\": {\n                            \"group\": {\n                              \"value\": \"g1\"\n                            }\n                          }\n                        }\n                      ],\n                      \"drop_scenario_if_not_matched\": false,\n                      \"emit_trigger\": false\n                    }\n                  ]\n                }\n              snooze:\n                summary: Snooze action\n                description: Update a scenario with snooze action.\n                value: {\n                  \"name\": \"Scenario with snooze action\",\n                  \"comment\": \"The scenario snoozes an alarm on create\",\n                  \"enabled\": true,\n                  \"priority\": 10,\n                  \"triggers\": [ \"create\" ],\n                  \"actions\": [\n                    {\n                      \"type\": \"snooze\",\n                      \"parameters\": {\n                        \"output\": \"The alarm is snoozed by scenario\",\n                        \"duration\": {\n                          \"value\": 10,\n                          \"unit\": \"m\"\n                        }\n                      },\n                      \"alarm_patterns\": [\n                        {\n                          \"v\": {\n                            \"state\": {\n                              \"val\": 3\n                            }\n                          }\n                        }\n                      ],\n                      \"entity_patterns\": [\n                        {\n                          \"type\": \"resource\",\n                          \"infos\": {\n                            \"group\": {\n                              \"value\": \"g1\"\n                            }\n                          }\n                        }\n                      ],\n                      \"drop_scenario_if_not_matched\": false,\n                      \"emit_trigger\": false\n                    }\n                  ]\n                }\n              webhook:\n                summary: Webhook action\n                description: Update a scenario with webhook action.\n                value: {\n                  \"name\": \"Scenario with webhook action\",\n                  \"comment\": \"The scenario does webhook request for an alarm on declare ticket\",\n                  \"enabled\": true,\n                  \"priority\": 10,\n                  \"triggers\": [ \"declareticket\" ],\n                  \"actions\": [\n                    {\n                      \"type\": \"webhook\",\n                      \"parameters\": {\n                        \"request\": {\n                          \"method\": \"POST\",\n                          \"url\": \"https://test-rest-api.com/ticket\",\n                          \"auth\": {\n                            \"username\": \"admin\",\n                            \"password\": \"admin\"\n                          },\n                          \"headers\": { \"Content-Type\": \"application/json\" },\n                          \"payload\": \"{\\\"service\\\":\\\"{{ .Alarm.Value.Resource }}\\\",\\\"host\\\":\\\"{{ .Alarm.Value.Component }}\\\",\\\"group\\\":\\\"{{ .Entity.Infos.group.Value }}\\\",\\\"change\\\":\\\"{{ .AdditionalData.AlarmChangeType }}\\\"}\"\n                        },\n                        \"declare_ticket\": {\n                          \"empty_response\": false,\n                          \"is_regexp\": false,\n                          \"ticket_id\": \"id\",\n                          \"external_link\": \"link\"\n                        },\n                        \"retry_count\": 3,\n                        \"retry_delay\": {\n                          \"value\": 3,\n                          \"unit\": \"s\"\n                        }\n                      },\n                      \"alarm_patterns\": [\n                        {\n                          \"v\": {\n                            \"state\": {\n                              \"val\": 3\n                            }\n                          }\n                        }\n                      ],\n                      \"entity_patterns\": [\n                        {\n                          \"type\": \"resource\",\n                          \"infos\": {\n                            \"group\": {\n                              \"value\": \"g1\"\n                            }\n                          }\n                        }\n                      ],\n                      \"drop_scenario_if_not_matched\": false,\n                      \"emit_trigger\": false\n                    }\n                  ]\n                }\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/scenario.Scenario'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    delete:\n      tags:\n        - scenarios\n      summary: Delete scenario by id\n      description: Delete scenario by id\n      operationId: scenarios-delete-by-id\n      parameters:\n        - name: id\n          in: path\n          description: scenario id\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: OK\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n  /scenarios/check-priority:\n    post:\n      tags:\n        - scenarios\n      summary: Check priority\n      description: Check priority\n      operationId: scenarios-check-priority\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/scenario.CheckPriorityRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/scenario.CheckPriorityResponse'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n  /scenarios/minimal-priority:\n    get:\n      tags:\n        - scenarios\n      summary: Get minimal priority\n      description: Get minimal priority\n      operationId: scenarios-get-minimal-priority\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/scenario.GetMinimalPriorityResponse'\n  /state-settings:\n    get:\n      tags:\n        - state-settings\n      summary: Find all state settings for a widget\n      description: Get paginated list of state settings\n      operationId: state-settings-list\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/limit'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: 'schemas_swagger.yaml#/definitions/common.PaginatedListResponse'\n                  - type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: 'schemas_swagger.yaml#/definitions/statesettings.StateSetting'\n  /state-settings/{id}:\n    put:\n      tags:\n        - state-settings\n      summary: Update state setting type by id\n      description: Update state setting type by id\n      operationId: state-settings-update-by-id\n      parameters:\n        - name: id\n          in: path\n          description: type id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/statesettings.StateSettingRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/statesettings.StateSetting'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n  /user-preferences:\n    put:\n      tags:\n        - userpreference\n      summary: Update user preferences by widget id\n      description: Update user preferences by widget id\n      operationId: userpreference-update-by-widget-id\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/userpreferences.EditRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/userpreferences.Response'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n  /user-preferences/{id}:\n    get:\n      tags:\n        - userpreference\n      summary: Get user preferences by widget id\n      description: Get user preferences by widget id\n      operationId: userpreference-get-by-id\n      parameters:\n        - name: id\n          in: path\n          description: widget id\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/userpreferences.Response'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n  /users:\n    get:\n      tags:\n        - users\n      summary: Find users\n      description: Get paginated list of users\n      operationId: users-find-all\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/search'\n        - $ref: '#/components/parameters/sort'\n        - name: permission\n          in: query\n          description: role permission\n          schema:\n            type: string\n        - name: sort_by\n          in: query\n          description: sort query\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: 'schemas_swagger.yaml#/definitions/common.PaginatedListResponse'\n                  - type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: 'schemas_swagger.yaml#/definitions/user.User'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n    post:\n      tags:\n        - users\n      summary: Create user\n      description: Create user\n      operationId: users-create\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/user.EditRequest'\n        required: true\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/user.User'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n  /users/{id}:\n    get:\n      tags:\n        - users\n      summary: Get user by id\n      description: Get user by id\n      operationId: users-get-by-id\n      parameters:\n        - name: id\n          in: path\n          description: user id\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/user.User'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    put:\n      tags:\n        - users\n      summary: Update user by id\n      description: Update user by id\n      operationId: users-update-by-id\n      parameters:\n        - name: id\n          in: path\n          description: user id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/user.EditRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/user.User'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    delete:\n      tags:\n        - users\n      summary: Delete user by id\n      description: Delete user by id\n      operationId: users-delete-by-id\n      parameters:\n        - name: id\n          in: path\n          description: user id\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: OK\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n  /view-groups:\n    get:\n      tags:\n        - viewgroups\n      summary: Find view groups\n      description: Get paginated list of view groups\n      operationId: viewgroups-find-all\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/search'\n        - $ref: '#/components/parameters/sort'\n        - name: sort_by\n          in: query\n          description: sort query\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: 'schemas_swagger.yaml#/definitions/common.PaginatedListResponse'\n                  - type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: 'schemas_swagger.yaml#/definitions/viewgroup.ViewGroup'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n    post:\n      tags:\n        - viewgroups\n      summary: Create view group\n      description: Create view group\n      operationId: viewgroups-create\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/viewgroup.EditRequest'\n        required: true\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/viewgroup.ViewGroup'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n  /view-groups/{id}:\n    get:\n      tags:\n        - viewgroups\n      summary: Get view group by id\n      description: Get view group by id\n      operationId: viewgroups-get-by-id\n      parameters:\n        - name: id\n          in: path\n          description: viewgroup id\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/viewgroup.ViewGroup'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    put:\n      tags:\n        - viewgroups\n      summary: Update view group by id\n      description: Update view group by id\n      operationId: viewgroups-update-by-id\n      parameters:\n        - name: id\n          in: path\n          description: view group id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/viewgroup.EditRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/viewgroup.ViewGroup'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    delete:\n      tags:\n        - viewgroups\n      summary: Delete view group by id\n      description: Delete view group by id\n      operationId: viewgroups-delete-by-id\n      parameters:\n        - name: id\n          in: path\n          description: view group id\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: OK\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n  /view-positions:\n    put:\n      tags:\n        - views\n      summary: Update views positions\n      description: Update views positions\n      operationId: views-update-positions\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: 'schemas_swagger.yaml#/definitions/view.EditPositionItemRequest'\n        required: true\n      responses:\n        204:\n          description: OK\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n  /views:\n    get:\n      tags:\n        - views\n      summary: Find views\n      description: Get paginated list of views\n      operationId: views-find-all\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/search'\n        - $ref: '#/components/parameters/sort'\n        - name: sort_by\n          in: query\n          description: sort query\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: 'schemas_swagger.yaml#/definitions/common.PaginatedListResponse'\n                  - type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: 'schemas_swagger.yaml#/definitions/viewgroup.View'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n    post:\n      tags:\n        - views\n      summary: Create view\n      description: Create view\n      operationId: views-create\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/view.EditRequest'\n        required: true\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/viewgroup.View'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n  /views/{id}:\n    get:\n      tags:\n        - views\n      summary: Get view by id\n      description: Get view by id\n      operationId: views-get-by-id\n      parameters:\n        - name: id\n          in: path\n          description: view id\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/viewgroup.View'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    put:\n      tags:\n        - views\n      summary: Update view by id\n      description: Update view by id\n      operationId: views-update-by-id\n      parameters:\n        - name: id\n          in: path\n          description: view id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas_swagger.yaml#/definitions/view.EditRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/viewgroup.View'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n    delete:\n      tags:\n        - views\n      summary: Delete view by id\n      description: Delete view by id\n      operationId: views-delete-by-id\n      parameters:\n        - name: id\n          in: path\n          description: view id\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: OK\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ErrorResponse'\n  /weather-services:\n    get:\n      tags:\n        - weather-services\n      summary: Find all services\n      description: Get paginated list of services\n      operationId: weather-services-find-all\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/limit'\n        - name: filter\n          in: query\n          description: filter query\n          schema:\n            type: string\n        - $ref: '#/components/parameters/sort'\n        - name: sort_by\n          in: query\n          description: sort query\n          schema:\n            type: string\n        - name: category\n          in: query\n          description: category\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: 'schemas_swagger.yaml#/definitions/common.PaginatedListResponse'\n                  - type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: 'schemas_swagger.yaml#/definitions/serviceweather.Service'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\n  /weather-services/{id}:\n    get:\n      tags:\n        - weather-services\n      summary: Find all entity by service id\n      description: Get paginated list of entities\n      operationId: weather-services-find-all-entities\n      parameters:\n        - name: id\n          in: path\n          description: service id\n          required: true\n          schema:\n            type: string\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/sort'\n        - name: sort_by\n          in: query\n          description: sort query\n          schema:\n            type: string\n        - name: with_instructions\n          in: query\n          description: show assigned instructions and execution flags\n          schema:\n            type: boolean\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: 'schemas_swagger.yaml#/definitions/common.PaginatedListResponse'\n                  - type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: 'schemas_swagger.yaml#/definitions/serviceweather.Entity'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas_swagger.yaml#/definitions/common.ValidationErrorResponse'\ncomponents:\n  parameters:\n    page:\n      name: page\n      in: query\n      description: current page\n      required: false\n      schema:\n        type: integer\n        minimum: 1\n    limit:\n      name: limit\n      in: query\n      description: items per page\n      required: false\n      schema:\n        type: integer\n        minimum: 1\n    search:\n      name: search\n      in: query\n      description: search query\n      schema:\n        type: string\n    sort:\n      name: sort\n      in: query\n      description: sort query\n      schema:\n        type: string\n        enum:\n          - asc\n          - desc\n  \n  schemas:\n    event.Event:\n      type: object\n      required:\n        - connector\n        - connector_name\n        - component\n        - event_type\n        - source_type\n      properties:\n        component:\n          type: string\n        connector:\n          type: string\n        connector_name:\n          type: string\n        event_type:\n          type: string\n          enum:\n            - check\n            - ack\n            - ackremove\n            - cancel\n            - uncancel\n            - comment\n            - snooze\n            - changestate\n            - assocticket\n            - declareticket\n        resource:\n          type: string\n        source_type:\n          type: string\n          enum:\n            - resource\n            - component\n        state:\n          type: integer\n          enum:\n            - 0\n            - 1\n            - 2\n            - 3\n          description: \u003e\n            State:\n              * `0` - Info\n              * `1` - Minor\n              * `2` - Major\n              * `3` - Critical\n        output:\n          type: string\n        long_output:\n          type: string\n        author:\n          type: string\n        user_id:\n          type: string\n        duration:\n          type: integer\n    event.Response:\n      type: object\n      properties:\n        failed_events:\n          type: array\n          items:\n            $ref: '#/components/schemas/event.Event'\n        retry_events:\n          type: array\n          items:\n            $ref: '#/components/schemas/event.Event'\n        sent_events:\n          type: array\n          items:\n            $ref: '#/components/schemas/event.Event'\n\n  securitySchemes:\n    BasicAuth:\n      type: http\n      scheme: basic\n    BearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n\nsecurity:\n  - BearerAuth: [ ]\n  - BasicAuth: [ ]\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /bulk/pbehaviors: put: operation \"pbehaviors-bulk-update\": requestBody: content: application/json: schema: parse schema: item: parse schema: resolve \"schemas_swagger.yaml#/definitions/pbehavior.BulkUpdateRequestItem\": find schema: external base \"schemas_swagger.yaml\" is not supported"
}