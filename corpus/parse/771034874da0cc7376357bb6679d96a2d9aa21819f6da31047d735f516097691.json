{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql-provider-registry"
		},
		"file": {
			"name": "ProfileMapping.yaml",
			"size": 0,
			"path": "providers/src/okta/v0.1.0/services/ProfileMapping.yaml",
			"byteSize": 5481,
			"content": "components:\n  schemas:\n    ProfileMapping:\n      properties:\n        _links:\n          additionalProperties:\n            properties: {}\n            type: object\n          readOnly: true\n          type: object\n        id:\n          readOnly: true\n          type: string\n        properties:\n          additionalProperties:\n            $ref: '#/components/schemas/ProfileMappingProperty'\n          readOnly: true\n          type: object\n        source:\n          $ref: '#/components/schemas/ProfileMappingSource'\n        target:\n          $ref: '#/components/schemas/ProfileMappingSource'\n      type: object\n      x-okta-crud:\n      - alias: read\n        arguments:\n        - dest: mappingId\n          src: id\n        operationId: getProfileMapping\n      - alias: update\n        arguments:\n        - dest: mappingId\n          src: id\n        operationId: updateProfileMapping\n      x-okta-tags:\n      - ProfileMapping\n    ProfileMappingProperty:\n      properties:\n        expression:\n          type: string\n        pushStatus:\n          $ref: '#/components/schemas/ProfileMappingPropertyPushStatus'\n      type: object\n      x-okta-tags:\n      - ProfileMapping\n    ProfileMappingPropertyPushStatus:\n      enum:\n      - PUSH\n      - DONT_PUSH\n      type: object\n      x-okta-tags:\n      - ProfileMapping\n    ProfileMappingSource:\n      properties:\n        _links:\n          additionalProperties:\n            properties: {}\n            type: object\n          readOnly: true\n          type: object\n        id:\n          readOnly: true\n          type: string\n        name:\n          readOnly: true\n          type: string\n        type:\n          readOnly: true\n          type: string\n      type: object\n      x-okta-tags:\n      - ProfileMapping\n  securitySchemes:\n    api_token:\n      description: SSWS {API Token}\n      in: header\n      name: Authorization\n      type: apiKey\n  x-stackQL-resources:\n    mappings:\n      id: okta.profilemapping.mappings\n      methods:\n        get:\n          operation:\n            $ref: '#/paths/~1api~1v1~1mappings~1{mappingId}/GET'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        insert:\n          operation:\n            $ref: '#/paths/~1api~1v1~1mappings~1{mappingId}/POST'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list:\n          operation:\n            $ref: '#/paths/~1api~1v1~1mappings/GET'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      name: mappings\n      title: mappings\nexternalDocs:\n  description: Find more info here\n  url: https://developer.okta.com/docs/api/getting_started/design_principles.html\ninfo:\n  contact:\n    email: devex-public@okta.com\n    name: Okta Developer Team\n    url: https://developer.okta.com/\n  description: Allows customers to easily access the Okta API\n  license:\n    name: Apache-2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\n  termsOfService: https://developer.okta.com/terms/\n  title: Okta API\n  version: 2.8.0\nopenapi: 3.0.1\npaths:\n  /api/v1/mappings:\n    get:\n      description: Enumerates Profile Mappings in your organization with pagination.\n      operationId: listProfileMappings\n      parameters:\n      - in: query\n        name: after\n        schema:\n          type: string\n      - in: query\n        name: limit\n        schema:\n          default: -1\n          format: int32\n          type: integer\n      - in: query\n        name: sourceId\n        schema:\n          type: string\n      - in: query\n        name: targetId\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/ProfileMapping'\n                type: array\n          description: Success\n      security:\n      - api_token: []\n      tags:\n      - ProfileMapping\n  /api/v1/mappings/{mappingId}:\n    get:\n      description: Fetches a single Profile Mapping referenced by its ID.\n      operationId: getProfileMapping\n      parameters:\n      - in: path\n        name: mappingId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProfileMapping'\n          description: Success\n      security:\n      - api_token: []\n      summary: Get Profile Mapping\n      tags:\n      - ProfileMapping\n    post:\n      description: Updates an existing Profile Mapping by adding, updating, or removing\n        one or many Property Mappings.\n      operationId: updateProfileMapping\n      parameters:\n      - in: path\n        name: mappingId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ProfileMapping'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProfileMapping'\n          description: Success\n      security:\n      - api_token: []\n      summary: Update Profile Mapping\n      tags:\n      - ProfileMapping\n      x-codegen-request-body-name: profileMapping\nservers:\n- url: https://{subdomain}.okta.com/\n  variables:\n    subdomain:\n      default: my-domain\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"ProfileMappingProperty\": parse schema: property \"pushStatus\": parse schema: resolve \"#/components/schemas/ProfileMappingPropertyPushStatus\": parse enum values: parse value \"\\\"PUSH\\\"\": unexpected type: \"object\""
}