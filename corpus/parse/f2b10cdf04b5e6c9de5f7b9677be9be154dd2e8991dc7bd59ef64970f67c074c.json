{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/radiantearth/stac-api-spec"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "item-search/openapi.yaml",
			"byteSize": 11496,
			"content": "openapi: 3.0.3\ninfo:\n  title: STAC API - Item Search\n  version: 1.0.0-rc.1\n  description: \u003e-\n    This is an OpenAPI definition of the SpatioTemporal Asset Catalog API - Item Search\n    specification.\n  contact:\n    name: STAC Specification\n    url: 'http://stacspec.org'\n  license:\n    name: Apache License 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0'\ntags:\n  - name: Item Search\n    description: essential characteristics of a STAC API\npaths:\n  /search:\n    get:\n      summary: Search STAC items with simple filtering.\n      operationId: getItemSearch\n      description: |-\n        Retrieve Items matching filters. Intended as a shorthand API for simple\n        queries.\n\n        This method is required to implement.\n\n        If this endpoint is implemented on a server, it is required to add a\n        link referring to this endpoint with `rel` set to `search` to the\n        `links` array in `GET /`. As `GET` is the default method, the `method`\n        may not be set explicitly in the link.\n      tags:\n        - Item Search\n      parameters:\n        - $ref: '#/components/parameters/bbox'\n        - $ref: '#/components/parameters/intersects'\n        - $ref: '#/components/parameters/datetime'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/ids'\n        - $ref: '#/components/parameters/collectionsArray'\n        # extensions\n        - $ref: '../fragments/fields/openapi.yaml#/components/parameters/fields'\n        - $ref: '../fragments/filter/openapi.yaml#/components/parameters/filter'\n        - $ref: '../fragments/sort/openapi.yaml#/components/parameters/sortby'\n      responses:\n        '200':\n          description: A feature collection.\n          content:\n            application/geo+json:\n              schema:\n                allOf:\n                  - $ref: '../fragments/itemcollection/openapi.yaml#/components/schemas/itemCollection'\n                  # extensions\n                  - $ref: '../fragments/context/openapi.yaml#/components/schemas/itemCollection'\n            text/html:\n              schema:\n                type: string\n        default:\n          $ref: '../core/commons.yaml#/components/responses/Error'\n    post:\n      summary: Search STAC items with full-featured filtering.\n      operationId: postItemSearch\n      description: |-\n        Retrieve items matching filters. Intended as the standard, full-featured\n        query API.\n\n        This method is optional to implement, but recommended.\n\n        If this endpoint is implemented on a server, it is required to add a\n        link referring to this endpoint with `rel` set to `search` and `method`\n        set to `POST` to the `links` array in `GET /`.\n      tags:\n        - Item Search\n      requestBody:\n        content:\n          application/json:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/searchBody'\n                # extensions\n                - $ref: '../fragments/fields/openapi.yaml#/components/schemas/searchBody'\n                - $ref: '../fragments/filter/openapi.yaml#/components/schemas/searchBody'\n                - $ref: '../fragments/sort/openapi.yaml#/components/schemas/searchBody'\n      responses:\n        '200':\n          description: A feature collection.\n          content:\n            application/geo+json:\n              schema:\n                $ref: '../fragments/itemcollection/openapi.yaml#/components/schemas/itemCollection'\n            text/html:\n              schema:\n                type: string\n        default:\n          $ref: '../core/commons.yaml#/components/responses/Error'\ncomponents:\n  parameters:\n    ids:\n      name: ids\n      in: query\n      description: |-\n        Array of Item ids to return.\n      required: false\n      schema:\n        $ref: '#/components/schemas/ids'\n      explode: false\n    collectionsArray:\n      name: collections\n      in: query\n      description: |\n        Array of Collection IDs to include in the search for items.\n        Only Item objects in one of the provided collections will be searched\n      required: false\n      schema:\n        $ref: '#/components/schemas/collectionsArray'\n      explode: false\n    datetime:\n      name: datetime\n      in: query\n      description: |-\n        Either a date-time or an interval, open or closed. Date and time expressions\n        adhere to RFC 3339. Open intervals are expressed using double-dots.\n\n        Examples:\n\n        * A date-time: \"2018-02-12T23:20:50Z\"\n        * A closed interval: \"2018-02-12T00:00:00Z/2018-03-18T12:31:12Z\"\n        * Open intervals: \"2018-02-12T00:00:00Z/..\" or \"../2018-03-18T12:31:12Z\"\n\n        Only features that have a temporal property that intersects the value of\n        `datetime` are selected.\n\n        If a feature has multiple temporal properties, it is the decision of the\n        server whether only a single temporal property is used to determine\n        the extent or all relevant temporal properties.\n      required: false\n      schema:\n        type: string\n      style: form\n      explode: false\n    bbox:\n      name: bbox\n      in: query\n      description: |-\n        Only features that have a geometry that intersects the bounding box are selected.\n        The bounding box is provided as four or six numbers, depending on\n        whether the coordinate reference system includes a vertical axis (height\n        or depth):\n\n        * Lower left corner, coordinate axis 1\n        * Lower left corner, coordinate axis 2\n        * Minimum value, coordinate axis 3 (optional)\n        * Upper right corner, coordinate axis 1\n        * Upper right corner, coordinate axis 2\n        * Maximum value, coordinate axis 3 (optional)\n\n        The coordinate reference system of the values is WGS 84\n        longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84).\n\n        For WGS 84 longitude/latitude the values are in most cases the sequence\n        of minimum longitude, minimum latitude, maximum longitude and maximum\n        latitude. However, in cases where the box spans the antimeridian the\n        first value (west-most box edge) is larger than the third value\n        (east-most box edge).\n\n        If the vertical axis is included, the third and the sixth number are\n        the bottom and the top of the 3-dimensional bounding box.\n\n        If a feature has multiple spatial geometry properties, it is the\n        decision of the server whether only a single spatial geometry property\n        is used to determine the extent or all relevant geometries.\n\n        Example: The bounding box of the New Zealand Exclusive Economic Zone in\n        WGS 84 (from 160.6째E to 170째W and from 55.95째S to 25.89째S) would be\n        represented in JSON as `[160.6, -55.95, -170, -25.89]` and in a query as\n        `bbox=160.6,-55.95,-170,-25.89`.\n      required: false\n      schema:\n        type: array\n        oneOf:\n          - minItems: 4\n            maxItems: 4\n          - minItems: 6\n            maxItems: 6\n        items:\n          type: number\n      style: form\n      explode: false\n    limit:\n      name: limit\n      in: query\n      description: |-\n        The optional limit parameter recommends the number of items that should be present in the response document.\n\n        Only items are counted that are on the first level of the collection in the response document.\n        Nested objects contained within the explicitly requested items must not be counted.\n\n        Minimum = 1. Maximum = 10000. Default = 10.\n      required: false\n      schema:\n        type: integer\n        minimum: 1\n        maximum: 10000\n        default: 10\n      style: form\n      explode: false\n    intersects:\n      name: intersects\n      in: query\n      description: |-\n        The optional intersects parameter filters the result Items in the same was as bbox, only with\n        a GeoJSON Geometry rather than a bbox.\n      required: false\n      schema:\n        $ref: '../core/commons.yaml#/components/schemas/geometryGeoJSON'\n      style: form\n      explode: false\n  schemas:\n    searchBody:\n      description: The search criteria\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/bboxFilter'\n        - $ref: '#/components/schemas/datetimeFilter'\n        - $ref: '#/components/schemas/intersectsFilter'\n        - $ref: '#/components/schemas/collectionsFilter'\n        - $ref: '#/components/schemas/idsFilter'\n        - $ref: '#/components/schemas/limitFilter'\n    limit:\n      type: integer\n      minimum: 1\n      example: 10\n      default: 10\n      maximum: 10000\n      description: |-\n        The optional limit parameter limits the number of items that are presented in the response document.\n\n        If the limit parameter value is greater than advertised limit maximum, the server must return the\n        maximum possible number of items, rather than responding with an error.\n\n        Only items are counted that are on the first level of the collection in the response document.\n        Nested objects contained within the explicitly requested items must not be counted.\n\n        Minimum = 1. Maximum = 10000. Default = 10.\n    bboxFilter:\n      type: object\n      description: Only return items that intersect the provided bounding box.\n      properties:\n        bbox:\n          $ref: '../core/commons.yaml#/components/schemas/bbox'\n    collectionsArray:\n      type: array\n      description: |-\n        Array of Collection IDs to include in the search for items.\n        Only Item objects in one of the provided collections will be searched.\n      items:\n        type: string\n    ids:\n      type: array\n      description: |-\n        Array of Item ids to return.\n      items:\n        type: string\n    datetimeFilter:\n      description: An object representing a date+time based filter.\n      type: object\n      properties:\n        datetime:\n          $ref: '#/components/schemas/datetime_interval'\n    intersectsFilter:\n      type: object\n      description: Only returns items that intersect with the provided polygon.\n      properties:\n        intersects:\n          $ref: '../core/commons.yaml#/components/schemas/geometryGeoJSON'\n    limitFilter:\n      type: object\n      description: Only returns maximum number of results (page size)\n      properties:\n        limit:\n          $ref: '#/components/schemas/limit'\n    idsFilter:\n      type: object\n      description: Only returns items that match the array of given ids\n      properties:\n        ids:\n          $ref: '#/components/schemas/ids'\n    collectionsFilter:\n      type: object\n      description: Only returns the collections specified\n      properties:\n        collections:\n          $ref: '#/components/schemas/collectionsArray'\n    datetime_interval:\n      type: string\n      description: |-\n        Either a date-time or an interval, open or closed. Date and time expressions\n        adhere to RFC 3339. Open intervals are expressed using double-dots.\n\n        Examples:\n\n        * A date-time: \"2018-02-12T23:20:50Z\"\n        * A closed interval: \"2018-02-12T00:00:00Z/2018-03-18T12:31:12Z\"\n        * Open intervals: \"2018-02-12T00:00:00Z/..\" or \"../2018-03-18T12:31:12Z\"\n\n        Only features that have a temporal property that intersects the value of\n        `datetime` are selected.\n\n        If a feature has multiple temporal properties, it is the decision of the\n        server whether only a single temporal property is used to determine\n        the extent or all relevant temporal properties.\n      example: '2018-02-12T00:00:00Z/2018-03-18T12:31:12Z'\n"
		}
	},
	"Error": "parse: parse spec: paths: /search: get: operation \"getItemSearch\": parameters: parse parameter \"\": resolve \"#/components/parameters/intersects\" reference: schema: parse schema: reference \"../core/commons.yaml#/components/schemas/geometryGeoJSON\": resolve reference \"../core/commons.yaml#/components/schemas/geometryGeoJSON\": invalid schema reference \"../core/commons.yaml#/components/schemas/geometryGeoJSON\""
}