{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/cyberark/conjur-openapi-spec"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "spec/openapi.yml",
			"byteSize": 9224,
			"content": "openapi: \"3.0.0\"\n\ninfo:\n  description: \"This is an API definition for CyberArk Conjur Open Source. You can find out more at [Conjur.org](https://www.conjur.org/).\"\n  version: 5.3.0\n  title: \"Conjur\"\n  contact:\n    email: \"conj_maintainers@cyberark.com\"\n  license:\n    name: \"Apache 2.0\"\n    url: \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n\nservers: \n- url: /\n\ntags:\n- name: \"authentication\"\n  description: \"Authentication\"\n- name: \"secrets\"\n  description: \"Secrets\"\n- name: \"policies\"\n  description: \"Policies\"\n- name: \"roles\"\n  description: \"RBAC\"\n- name: \"host factory\"\n  description: \"Host factories\"\n- name: \"public keys\"\n  description: \"SSH keys\"\n- name: \"resources\"\n  description: \"Resources\"\n- name: \"status\"\n  description: \"Server status\"\n- name: \"certificate authority\"\n  description: \"Certificate authority\"\n\ncomponents:\n  schemas:\n    AccountName:\n      description: \"Conjur account name\"\n      type: string\n      minLength: 1\n      example: \"default\"\n\n    Count:\n      description: \"Return only the count of results\"\n      type: boolean\n      example: true\n\n    Kind:\n      type: string\n      minLength: 1\n      example: \"variable\"\n\n    Limit:\n      description: \"Return no more than this number of results\"\n      type: integer\n      example: 10\n\n    Offset:\n      description: \"Skips this many items before returning the rest\"\n      type: integer\n      example: 20\n\n    ResourceID:\n      type: string\n      minLength: 1\n      example: \"prod%2Faws%2Fdb-password\"\n      description: |\n        Resource identifier. Requires to be encoded when in path.\n\n        ##### Examples:\n\n        - `myapp-01` -\u003e `myapp-01` (unchanged)\n        - `alice@devops` -\u003e `alice%40devops`\n        - `prod/aws/db-password` -\u003e `prod%2Faws%2Fdb-password`\n        - `research+development` -\u003e `research%2Bdevelopment`\n        - `sales\u0026marketing` -\u003e `sales%26marketing`\n\n    ResourceVersion:\n      description: \"Version of the resource (Conjur keeps the last 20 versions of a secret)\"\n      type: integer\n      example: 1\n\n    RoleType:\n      type: string\n      minLength: 1\n      description: |\n        ##### Kinds of roles:\n\n        - User: one unique wonderful human\n        - Host: a single logical machine (in the broad sense, not just physical)\n        - Layer: a collection of hosts that have the same privileges\n        - Group: a collection of users and groups that have the same privileges\n        - Policy: a role which owns of a set of related object\n\n        Any identifier included in the URL must be URL-encoded to be recognized by the Conjur API.\n\n        ##### Resource Identifiers:\n\n        - `myapp-01` -\u003e `myapp-01` (unchanged)\n        - `alice@devops` -\u003e `alice%40devops`\n        - `prod/aws/db-password` -\u003e `prod%2Faws%2Fdb-password`\n        - `research+development` -\u003e `research%2Bdevelopment`\n        - `sales\u0026marketing` -\u003e `sales%26marketing`\n\n  parameters:\n    ServiceID:\n      name: service_id\n      in: path\n      required: true\n      description: \"URL-Encoded authenticator service ID\"\n      example: prod%2fgke\n      schema:\n        type: string\n\n    RequestID:\n      name: X-Request-Id\n      in: header\n      required: false\n      description: |\n        Add an ID to the request being made so it can be tracked in Conjur.\n        If not provided the server will automatically generate one.\n      example: \"test-id\"\n      schema:\n        type: string\n        pattern: '^[a-zA-Z\\d-]{1,255}$'\n\n  responses:\n    BadRequest:\n      description: \"The server cannot process the request due to malformed request syntax\"\n    Busy:\n      description: \"Similar operation already in progress, retry after a delay\"\n    InadequatePrivileges:\n      description: \"The authenticated user lacks the necessary privileges\"\n    InternalServerError:\n      description: \"Malfromed request, rejected by the server\"\n    ResourceNotFound:\n      description: \"The requested resource does not exist, the authenticated user lacks the required privileges to enumerate this resource, or its value has not been set\"\n    ResourcesNotFound:\n      description: \"At least one resource was unable to be found\"\n    UnauthorizedError:\n      description: \"Authentication information is missing or invalid\"\n    UnprocessableEntity:\n      description: \"A request parameter was either missing or invalid.\"\n\n  securitySchemes:\n    basicAuth:\n      description: |\n        Basic authentication with Conjur username and password (users only)\n        or API key (hosts and users).\n      type: http\n      scheme: basic\n    conjurAuth:\n      description: \"Conjur access token in `Token token=\u003cbase64_encoded_token\u003e` format.\"\n      type: apiKey\n      in: header\n      name: Authorization\n    conjurKubernetesMutualTls:\n      description: |\n        Conjur Kubernetes authenticator mutual TLS authentication.\n        To authenticate using this method, you must provide a trusted client\n        certificate\n      type: http\n      scheme: mutual\n\n\nsecurity:\n  - basicAuth: []\n  - conjurAuth: []\n  - conjurKubernetesMutualTls: []\n\npaths:\n\n# ========== AUTHENTICATION ===========\n\n  '/authn/{account}/login':\n    $ref: 'authentication.yml#/components/paths/DefaultLogin'\n\n  '/authn-k8s/{service_id}/inject_client_cert':\n    $ref: 'authentication.yml#/components/paths/K8sInjectClientCert'\n\n  '/authn-ldap/{service_id}/{account}/login':\n    $ref: 'authentication.yml#/components/paths/LDAPLogin'\n\n  '/authn/{account}/{login}/authenticate':\n    $ref: 'authentication.yml#/components/paths/DefaultAuthenticate'\n\n  '/authn-iam/{service_id}/{account}/{login}/authenticate':\n    $ref: 'authentication.yml#/components/paths/AWSAuthenticate'\n\n  '/authn-azure/{service_id}/{account}/{login}/authenticate':\n    $ref: 'authentication.yml#/components/paths/AzureAuthenticate'\n\n  '/authn-gcp/{account}/authenticate':\n    $ref: 'authentication.yml#/components/paths/GCPAuthenticate'\n\n  '/authn-k8s/{service_id}/{account}/{login}/authenticate':\n    $ref: 'authentication.yml#/components/paths/KubernetesAuthenticate'\n\n  '/authn-ldap/{service_id}/{account}/{login}/authenticate':\n    $ref: 'authentication.yml#/components/paths/LDAPAuthenticate'\n\n  '/authn-oidc/{service_id}/{account}/authenticate':\n    $ref: 'authentication.yml#/components/paths/OIDCAuthenticate'\n\n  '/authn-jwt/{service_id}/{account}/authenticate':\n    $ref: 'authentication.yml#/components/paths/JWTAuthenticate'\n\n  '/authn-jwt/{service_id}/{account}/{id}/authenticate':\n    $ref: 'authentication.yml#/components/paths/JWTAuthenticateWithId'\n\n  '/authn/{account}/password':\n    $ref: 'authentication.yml#/components/paths/ChangePassword'\n\n  '/authn/{account}/api_key':\n    $ref: 'authentication.yml#/components/paths/RotateApiKey'\n\n  '/{authenticator}/{account}':\n    $ref: 'authentication.yml#/components/paths/EnableAuthenticator'\n\n  '/{authenticator}/{service_id}/{account}':\n    $ref: 'authentication.yml#/components/paths/EnableAuthenticatorInstance'\n\n# ========== STATUS ===========\n\n  '/whoami':\n    $ref: 'status.yml#/components/paths/WhoAmI'\n\n  '/{authenticator}/{service_id}/{account}/status':\n    $ref: 'status.yml#/components/paths/ServiceAuthenticatorStatus'\n\n  '/authn-gcp/{account}/status':\n    $ref: 'status.yml#/components/paths/AuthenticatorStatus'\n\n  '/authenticators':\n    $ref: 'status.yml#/components/paths/AuthenticatorsIndex'\n\n  '/health':\n    x-conjur-settings:\n      enterprise-only: true\n    $ref: 'status.yml#/components/paths/Health'\n\n  '/remote_health/{remote}':\n    x-conjur-settings:\n      enterprise-only: true\n    $ref: 'status.yml#/components/paths/RemoteHealth'\n\n  '/info':\n    x-conjur-settings:\n      enterprise-only: true\n    $ref: 'status.yml#/components/paths/Info'\n\n# ========== SECRETS ==================\n\n  '/secrets/{account}/{kind}/{identifier}':\n    $ref: 'secrets.yml#/components/paths/Secret'\n\n  '/secrets':\n    $ref: 'secrets.yml#/components/paths/BatchSecrets'\n\n# ========== POLICIES =================\n\n  '/policies/{account}/policy/{identifier}':\n    $ref: 'policies.yml#/components/paths/Policies'\n\n# ========== ROLES ====================\n\n  '/roles/{account}/{kind}/{identifier}':\n    $ref: 'roles.yml#/components/paths/Roles'\n\n# ========== RESOURCES ================\n\n  '/resources':\n    $ref: 'resources.yml#/components/paths/ListResources'\n\n  '/resources/{account}':\n    $ref: 'resources.yml#/components/paths/ListResourcesOnAccount'\n\n  '/resources/{account}/{kind}':\n    $ref: 'resources.yml#/components/paths/ListSimilarResourcesOnAccount'\n\n  '/resources/{account}/{kind}/{identifier}':\n    $ref: 'resources.yml#/components/paths/SingleResource'\n\n# ========== HOST FACTORY =============\n\n  '/host_factory_tokens':\n    $ref: 'host-factory.yml#/components/paths/CreateHostToken'\n\n  '/host_factory_tokens/{token}':\n    $ref: 'host-factory.yml#/components/paths/RevokeHostToken'\n\n  '/host_factories/hosts':\n    $ref: 'host-factory.yml#/components/paths/CreateHost'\n\n# ========== PUBLIC KEYS ==============\n\n  '/public_keys/{account}/{kind}/{identifier}':\n    $ref: 'public-keys.yml#/components/paths/PublicKeys'\n\n# ========== CERTIFICATE AUTHORITY ====\n\n  '/ca/{account}/{service_id}/sign':\n    $ref: 'cert-auth.yml#/components/paths/Sign'\n\n# TODO: Seed Service\n\nexternalDocs:\n  description: \"Find out more about Conjur\"\n  url: \"https://conjur.org\"\n"
		}
	},
	"Error": "parse: parse spec: /authenticators: referenced pathItem not supported"
}