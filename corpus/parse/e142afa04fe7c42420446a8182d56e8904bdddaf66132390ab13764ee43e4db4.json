{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/kubernetes-sigs/cluster-api-provider-vsphere"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "contrib/haproxy/openapi/api/openapi.yaml",
			"byteSize": 344466,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    email: support@haproxy.com\n    name: HAProxy Support\n    url: https://my.haproxy.com/portal/cust/login\n  description: |-\n    API for editing and managing haproxy instances. Provides process information, configuration management,\n    haproxy stats and logs.\n\n    # Authentication\n\n    \u003c!-- ReDoc-Inject: \u003csecurity-definitions\u003e --\u003e\n  title: HAProxy Data Plane API\n  version: \"1.2\"\nexternalDocs:\n  description: HAProxy Documentation\n  url: https://cbonte.github.io/haproxy-dconv/\nservers:\n- url: /v1\nsecurity:\n- basic_auth: []\ntags:\n- description: API autodiscover endpoints\n  name: Discovery\n- name: Information\n- name: Specification\n- description: |\n    Managing transactions. Configuration changes can be grouped in the transaction. You start the\n    transaction with trasactions POST, and call the configuration changes you need with parameter\n    transaction_id. When you want to commit the transaction, you call the transactions PUT and all changes\n    in that transaction is commited. If you call a configuration change without the transaction_id,\n    transaction mechanism is implicitly called with one operation in transaction.\n  name: Transactions\n- description: |\n    Checking reload success. To avoid constant reloading we reload in intervals that are configurable when\n    with reload-delay option. When a change to configuration is made and force_reload url query string\n    parameter is false we issue a request for reload, and return the reload ID in response header. You can\n    then use reloads endpoints to check the status of that reload ID. If force_reload is true, we override all\n    of this and reload immediately.\n  name: Reloads\n- description: |\n    Managing sites (simple configuration mode). Sites are considered as one frontend with multiple backends\n    connected to it via default_backend or use-backend directives.\n  name: Sites\n- description: Stats container\n  name: Stats\n- description: Managing global configuration (advanced mode)\n  name: Global\n- description: Managing defaults configuration (advanced mode)\n  name: Defaults\n- description: Managing frontend configuration (advanced mode)\n  name: Frontend\n- description: Managing backend configurations (advanced mode)\n  name: Backend\n- description: Managing frontend bind configurations (advanced mode)\n  name: Bind\n- description: Managing backend server configurations (advanced mode)\n  name: Server\n- description: Various frontend options (advanced mode)\n  name: Frontend options\n- description: Various backend options (advanced mode)\n  name: Backend options\n- description: Raw HAProxy configuration management (advanced mode)\n  name: Configuration\n- description: Managing advanced haproxy configuration (advanced mode)\n  name: HAProxy configuration management\n- name: TCPRequestRule\n- name: HTTPRequestRule\n- name: HTTPResponseRule\n- name: BackendSwitchingRule\n- name: ServerSwitchingRule\n- name: TCPResponseRule\n- name: Filter\n- name: StickRule\n- name: LogTarget\n- name: ACL\npaths:\n  /:\n    get:\n      description: Returns a list of root endpoints.\n      operationId: getAPIEndpoints\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/endpoints'\n          description: Success\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Return list of root endpoints\n      tags:\n      - Discovery\n  /specification:\n    get:\n      description: Return Data Plane API OpenAPI specification\n      operationId: getSpecification\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: object\n          description: Success\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Data Plane API Specification\n      tags:\n      - Specification\n  /info:\n    get:\n      description: Return API, hardware and OS information\n      operationId: getInfo\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/info'\n          description: Success\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Return API, hardware and OS information\n      tags:\n      - Information\n  /services:\n    get:\n      description: Returns a list of API managed services endpoints.\n      operationId: getServicesEndpoints\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/endpoints'\n          description: Success\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Return list of service endpoints\n      tags:\n      - Discovery\n  /services/haproxy:\n    get:\n      description: Returns a list of HAProxy related endpoints.\n      operationId: getHaproxyEndpoints\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/endpoints'\n          description: Success\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Return list of HAProxy related endpoints\n      tags:\n      - Discovery\n  /services/haproxy/info:\n    get:\n      description: Return HAProxy process information\n      operationId: getHaproxyProcessInfo\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/process_info'\n          description: Success\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Return HAProxy process information\n      tags:\n      - Information\n  /services/haproxy/sites:\n    get:\n      description: Returns an array of all configured sites.\n      operationId: getSites\n      parameters:\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200'\n          description: Successful operation\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Return an array of sites\n      tags:\n      - Sites\n    post:\n      description: Adds a new site to the configuration file.\n      operationId: createSite\n      parameters:\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      requestBody:\n        $ref: '#/components/requestBodies/site'\n      responses:\n        201:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/site'\n          description: Site created\n        202:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/site'\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad request\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        409:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource already exists\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Add a site\n      tags:\n      - Sites\n  /services/haproxy/sites/{name}:\n    delete:\n      description: Deletes a site from the configuration by it's name.\n      operationId: deleteSite\n      parameters:\n      - description: Site frontend name\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      responses:\n        202:\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        204:\n          description: Site deleted\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Delete a site\n      tags:\n      - Sites\n    get:\n      description: Returns one site configuration by it's name.\n      operationId: getSite\n      parameters:\n      - description: Site frontend name\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_1'\n          description: Successful operation\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Return a site\n      tags:\n      - Sites\n    put:\n      description: Replaces a site configuration by it's name.\n      operationId: replaceSite\n      parameters:\n      - description: Site frontend name\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      requestBody:\n        $ref: '#/components/requestBodies/site'\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/site'\n          description: Site replaced\n        202:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/site'\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad request\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Replace a site\n      tags:\n      - Sites\n  /services/haproxy/stats:\n    get:\n      description: Returns a list of HAProxy stats endpoints.\n      operationId: getStatsEndpoints\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/endpoints'\n          description: Success\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Return list of HAProxy stats endpoints\n      tags:\n      - Discovery\n  /services/haproxy/stats/native:\n    get:\n      description: Getting stats from the HAProxy.\n      operationId: getStats\n      parameters:\n      - description: Object type to get stats for (one of frontend, backend, server)\n        explode: true\n        in: query\n        name: type\n        required: false\n        schema:\n          enum:\n          - frontend\n          - backend\n          - server\n          type: string\n        style: form\n      - description: Object name to get stats for\n        explode: true\n        in: query\n        name: name\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Object parent name to get stats for, in case the object is a\n          server\n        explode: true\n        in: query\n        name: parent\n        required: false\n        schema:\n          type: string\n        style: form\n        x-dependency:\n          query.type: server\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/native_stats'\n          description: Success\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/native_stats'\n          description: Internal Server Error\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Gets stats\n      tags:\n      - Stats\n  /services/haproxy/transactions:\n    get:\n      description: Returns a list of HAProxy configuration transactions. Transactions\n        can be filtered by their status.\n      operationId: getTransactions\n      parameters:\n      - description: Filter by transaction status\n        explode: true\n        in: query\n        name: status\n        required: false\n        schema:\n          enum:\n          - failed\n          - in_progress\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/transactions'\n          description: Success\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Return list of HAProxy configuration transactions.\n      tags:\n      - Transactions\n    post:\n      description: Starts a new transaction and returns it's id\n      operationId: startTransaction\n      parameters:\n      - description: Configuration version on which to work on\n        explode: true\n        in: query\n        name: version\n        required: true\n        schema:\n          type: integer\n        style: form\n      responses:\n        201:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/transaction'\n          description: Transaction started\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Start a new transaction\n      tags:\n      - Transactions\n  /services/haproxy/transactions/{id}:\n    delete:\n      description: Deletes a transaction.\n      operationId: deleteTransaction\n      parameters:\n      - description: Transaction id\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        204:\n          description: Transaction deleted\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Delete a transaction\n      tags:\n      - Transactions\n    get:\n      description: Returns one HAProxy configuration transactions.\n      operationId: getTransaction\n      parameters:\n      - description: Transaction id\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/transaction'\n          description: Successful operation\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Return one HAProxy configuration transactions\n      tags:\n      - Transactions\n    put:\n      description: Commit transaction, execute all operations in transaction and return\n        msg\n      operationId: commitTransaction\n      parameters:\n      - description: Transaction id\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/transaction'\n          description: Transaction succesfully commited\n        202:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/transaction'\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad request\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Commit transaction\n      tags:\n      - Transactions\n  /services/haproxy/reloads:\n    get:\n      description: Returns a list of HAProxy reloads.\n      operationId: getReloads\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/reloads'\n          description: Success\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Return list of HAProxy Reloads.\n      tags:\n      - Reloads\n  /services/haproxy/reloads/{id}:\n    get:\n      description: Returns one HAProxy reload status.\n      operationId: getReload\n      parameters:\n      - description: Reload id\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          pattern: ^\\d{4}-\\d{2}-\\d{2}-\\d+$\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/reload'\n          description: Successful operation\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Return one HAProxy reload status\n      tags:\n      - Reloads\n  /services/haproxy/configuration:\n    get:\n      description: Returns a list of endpoints to be used for advanced configuration\n        of HAProxy objects.\n      operationId: getConfigurationEndpoints\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/endpoints'\n          description: Success\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Return list of HAProxy advanced configuration endpoints\n      tags:\n      - Discovery\n  /services/haproxy/configuration/global:\n    get:\n      description: Returns global part of configuration.\n      operationId: getGlobal\n      parameters:\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_2'\n          description: Successful operation\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Return a global part of configuration\n      tags:\n      - Global\n      - HAProxy configuration management\n    put:\n      description: Replace global part of config\n      operationId: replaceGlobal\n      parameters:\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/global'\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/global'\n          description: Global replaced\n        202:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/global'\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad request\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Replace global\n      tags:\n      - Global\n      - HAProxy configuration management\n  /services/haproxy/configuration/defaults:\n    get:\n      description: Returns defaults part of configuration.\n      operationId: getDefaults\n      parameters:\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_3'\n          description: Successful operation\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Return defaults part of configuration\n      tags:\n      - Defaults\n      - HAProxy configuration management\n    put:\n      description: Replace defaults part of config\n      operationId: replaceDefaults\n      parameters:\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/defaults'\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/defaults'\n          description: Defaults replaced\n        202:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/defaults'\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad request\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Replace defaults\n      tags:\n      - Defaults\n      - HAProxy configuration management\n  /services/haproxy/configuration/frontends:\n    get:\n      description: Returns an array of all configured frontends.\n      operationId: getFrontends\n      parameters:\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_4'\n          description: Successful operation\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Return an array of frontends\n      tags:\n      - Frontend\n      - HAProxy configuration management\n    post:\n      description: Adds a new frontend to the configuration file.\n      operationId: createFrontend\n      parameters:\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      requestBody:\n        $ref: '#/components/requestBodies/frontend'\n      responses:\n        201:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/frontend'\n          description: Frontend created\n        202:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/frontend'\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad request\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        409:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource already exists\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Add a frontend\n      tags:\n      - Frontend\n      - HAProxy configuration management\n  /services/haproxy/configuration/frontends/{name}:\n    delete:\n      description: Deletes a frontend from the configuration by it's name.\n      operationId: deleteFrontend\n      parameters:\n      - description: Frontend name\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      responses:\n        202:\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        204:\n          description: Frontend deleted\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Delete a frontend\n      tags:\n      - Frontend\n      - HAProxy configuration management\n    get:\n      description: Returns one frontend configuration by it's name.\n      operationId: getFrontend\n      parameters:\n      - description: Frontend name\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_5'\n          description: Successful operation\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Return a frontend\n      tags:\n      - Frontend\n      - HAProxy configuration management\n    put:\n      description: Replaces a frontend configuration by it's name.\n      operationId: replaceFrontend\n      parameters:\n      - description: Frontend name\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      requestBody:\n        $ref: '#/components/requestBodies/frontend'\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/frontend'\n          description: Frontend replaced\n        202:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/frontend'\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad request\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Replace a frontend\n      tags:\n      - Frontend\n      - HAProxy configuration management\n  /services/haproxy/configuration/backends:\n    get:\n      description: Returns an array of all configured backends.\n      operationId: getBackends\n      parameters:\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_6'\n          description: Successful operation\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Return an array of backends\n      tags:\n      - Backend\n      - HAProxy configuration management\n    post:\n      description: Adds a new backend to the configuration file.\n      operationId: createBackend\n      parameters:\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      requestBody:\n        $ref: '#/components/requestBodies/backend'\n      responses:\n        201:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/backend'\n          description: Backend created\n        202:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/backend'\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad request\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        409:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource already exists\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Add a backend\n      tags:\n      - Backend\n      - HAProxy configuration management\n  /services/haproxy/configuration/backends/{name}:\n    delete:\n      description: Deletes a frontend from the configuration by it's name.\n      operationId: deleteBackend\n      parameters:\n      - description: Backend name\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      responses:\n        202:\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        204:\n          description: Backend deleted\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Delete a backend\n      tags:\n      - Backend\n      - HAProxy configuration management\n    get:\n      description: Returns one backend configuration by it's name.\n      operationId: getBackend\n      parameters:\n      - description: Backend name\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_7'\n          description: Successful operation\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Return a backend\n      tags:\n      - Backend\n      - HAProxy configuration management\n    put:\n      description: Replaces a backend configuration by it's name.\n      operationId: replaceBackend\n      parameters:\n      - description: Backend name\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      requestBody:\n        $ref: '#/components/requestBodies/backend'\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/backend'\n          description: Backend replaced\n        202:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/backend'\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad request\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Replace a backend\n      tags:\n      - Backend\n      - HAProxy configuration management\n  /services/haproxy/configuration/binds:\n    get:\n      description: Returns an array of all binds that are configured in specified\n        frontend.\n      operationId: getBinds\n      parameters:\n      - description: Parent frontend name\n        explode: true\n        in: query\n        name: frontend\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_8'\n          description: Successful operation\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Return an array of binds\n      tags:\n      - Bind\n      - HAProxy configuration management\n      - Frontend options\n    post:\n      description: Adds a new bind in the specified frontend in the configuration\n        file.\n      operationId: createBind\n      parameters:\n      - description: Parent frontend name\n        explode: true\n        in: query\n        name: frontend\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      requestBody:\n        $ref: '#/components/requestBodies/bind'\n      responses:\n        201:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/bind'\n          description: Bind created\n        202:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/bind'\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad request\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        409:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource already exists\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Add a new bind\n      tags:\n      - Bind\n      - HAProxy configuration management\n      - Frontend options\n  /services/haproxy/configuration/binds/{name}:\n    delete:\n      description: Deletes a bind configuration by it's name in the specified frontend.\n      operationId: deleteBind\n      parameters:\n      - description: Bind name\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Parent frontend name\n        explode: true\n        in: query\n        name: frontend\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      responses:\n        202:\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        204:\n          description: Bind deleted\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Delete a bind\n      tags:\n      - Bind\n      - HAProxy configuration management\n      - Frontend options\n    get:\n      description: Returns one bind configuration by it's name in the specified frontend.\n      operationId: getBind\n      parameters:\n      - description: Bind name\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Parent frontend name\n        explode: true\n        in: query\n        name: frontend\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_9'\n          description: Successful operation\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource already exists\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Return one bind\n      tags:\n      - Bind\n      - HAProxy configuration management\n      - Frontend options\n    put:\n      description: Replaces a bind configuration by it's name in the specified frontend.\n      operationId: replaceBind\n      parameters:\n      - description: Bind name\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Parent frontend name\n        explode: true\n        in: query\n        name: frontend\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      requestBody:\n        $ref: '#/components/requestBodies/bind'\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/bind'\n          description: Bind replaced\n        202:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/bind'\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad request\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Replace a bind\n      tags:\n      - Bind\n      - HAProxy configuration management\n      - Frontend options\n  /services/haproxy/configuration/servers:\n    get:\n      description: Returns an array of all servers that are configured in specified\n        backend.\n      operationId: getServers\n      parameters:\n      - description: Parent backend name\n        explode: true\n        in: query\n        name: backend\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_10'\n          description: Successful operation\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Return an array of servers\n      tags:\n      - Server\n      - HAProxy configuration management\n      - Backend options\n    post:\n      description: Adds a new server in the specified backend in the configuration\n        file.\n      operationId: createServer\n      parameters:\n      - description: Parent backend name\n        explode: true\n        in: query\n        name: backend\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      requestBody:\n        $ref: '#/components/requestBodies/server'\n      responses:\n        201:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/server'\n          description: Server created\n        202:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/server'\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad request\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        409:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource already exists\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Add a new server\n      tags:\n      - Server\n      - HAProxy configuration management\n      - Backend options\n  /services/haproxy/configuration/servers/{name}:\n    delete:\n      description: Deletes a server configuration by it's name in the specified backend.\n      operationId: deleteServer\n      parameters:\n      - description: Server name\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Parent backend name\n        explode: true\n        in: query\n        name: backend\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      responses:\n        202:\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        204:\n          description: Server deleted\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Delete a server\n      tags:\n      - Server\n      - HAProxy configuration management\n      - Backend options\n    get:\n      description: Returns one server configuration by it's name in the specified\n        backend.\n      operationId: getServer\n      parameters:\n      - description: Server name\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Parent backend name\n        explode: true\n        in: query\n        name: backend\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_11'\n          description: Successful operation\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Return one server\n      tags:\n      - Server\n      - HAProxy configuration management\n      - Backend options\n    put:\n      description: Replaces a server configuration by it's name in the specified backend.\n      operationId: replaceServer\n      parameters:\n      - description: Server name\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Parent backend name\n        explode: true\n        in: query\n        name: backend\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      requestBody:\n        $ref: '#/components/requestBodies/server'\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/server'\n          description: Server replaced\n        202:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/server'\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad request\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Replace a server\n      tags:\n      - Server\n      - HAProxy configuration management\n      - Backend options\n  /services/haproxy/configuration/http_request_rules:\n    get:\n      description: Returns all HTTP Request Rules that are configured in specified\n        parent.\n      operationId: getHTTPRequestRules\n      parameters:\n      - description: Parent name\n        explode: true\n        in: query\n        name: parent_name\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Parent type\n        explode: true\n        in: query\n        name: parent_type\n        required: true\n        schema:\n          enum:\n          - frontend\n          - backend\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_12'\n          description: Successful operation\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Return an array of all HTTP Request Rules\n      tags:\n      - HAProxy configuration management\n      - Backend options\n      - Frontend options\n      - HTTPRequestRule\n    post:\n      description: Adds a new HTTP Request Rule of the specified type in the specified\n        parent.\n      operationId: createHTTPRequestRule\n      parameters:\n      - description: Parent name\n        explode: true\n        in: query\n        name: parent_name\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Parent type\n        explode: true\n        in: query\n        name: parent_type\n        required: true\n        schema:\n          enum:\n          - frontend\n          - backend\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      requestBody:\n        $ref: '#/components/requestBodies/http_request_rule'\n      responses:\n        201:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/http_request_rule'\n          description: HTTP Request Rule created\n        202:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/http_request_rule'\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad request\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        409:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource already exists\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Add a new HTTP Request Rule\n      tags:\n      - HAProxy configuration management\n      - Backend options\n      - Frontend options\n      - HTTPRequestRule\n  /services/haproxy/configuration/http_request_rules/{id}:\n    delete:\n      description: Deletes a HTTP Request Rule configuration by it's ID from the specified\n        parent.\n      operationId: deleteHTTPRequestRule\n      parameters:\n      - description: HTTP Request Rule ID\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Parent name\n        explode: true\n        in: query\n        name: parent_name\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Parent type\n        explode: true\n        in: query\n        name: parent_type\n        required: true\n        schema:\n          enum:\n          - frontend\n          - backend\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      responses:\n        202:\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        204:\n          description: HTTP Request Rule deleted\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Delete a HTTP Request Rule\n      tags:\n      - HAProxy configuration management\n      - Backend options\n      - Frontend options\n      - HTTPRequestRule\n    get:\n      description: Returns one HTTP Request Rule configuration by it's ID in the specified\n        parent.\n      operationId: getHTTPRequestRule\n      parameters:\n      - description: HTTP Request Rule ID\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Parent name\n        explode: true\n        in: query\n        name: parent_name\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Parent type\n        explode: true\n        in: query\n        name: parent_type\n        required: true\n        schema:\n          enum:\n          - frontend\n          - backend\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_13'\n          description: Successful operation\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Return one HTTP Request Rule\n      tags:\n      - HAProxy configuration management\n      - Backend options\n      - Frontend options\n      - HTTPRequestRule\n    put:\n      description: Replaces a HTTP Request Rule configuration by it's ID in the specified\n        parent.\n      operationId: replaceHTTPRequestRule\n      parameters:\n      - description: HTTP Request Rule ID\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Parent name\n        explode: true\n        in: query\n        name: parent_name\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Parent type\n        explode: true\n        in: query\n        name: parent_type\n        required: true\n        schema:\n          enum:\n          - frontend\n          - backend\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      requestBody:\n        $ref: '#/components/requestBodies/http_request_rule'\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/http_request_rule'\n          description: HTTP Request Rule replaced\n        202:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/http_request_rule'\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad request\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Replace a HTTP Request Rule\n      tags:\n      - HAProxy configuration management\n      - Backend options\n      - Frontend options\n      - HTTPRequestRule\n  /services/haproxy/configuration/http_response_rules:\n    get:\n      description: Returns all HTTP Response Rules that are configured in specified\n        parent.\n      operationId: getHTTPResponseRules\n      parameters:\n      - description: Parent name\n        explode: true\n        in: query\n        name: parent_name\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Parent type\n        explode: true\n        in: query\n        name: parent_type\n        required: true\n        schema:\n          enum:\n          - frontend\n          - backend\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_14'\n          description: Successful operation\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Return an array of all HTTP Response Rules\n      tags:\n      - HAProxy configuration management\n      - Backend options\n      - Frontend options\n      - HTTPResponseRule\n    post:\n      description: Adds a new HTTP Response Rule of the specified type in the specified\n        parent.\n      operationId: createHTTPResponseRule\n      parameters:\n      - description: Parent name\n        explode: true\n        in: query\n        name: parent_name\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Parent type\n        explode: true\n        in: query\n        name: parent_type\n        required: true\n        schema:\n          enum:\n          - frontend\n          - backend\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      requestBody:\n        $ref: '#/components/requestBodies/http_response_rule'\n      responses:\n        201:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/http_response_rule'\n          description: HTTP Response Rule created\n        202:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/http_response_rule'\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad request\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        409:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource already exists\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Add a new HTTP Response Rule\n      tags:\n      - HAProxy configuration management\n      - Backend options\n      - Frontend options\n      - HTTPResponseRule\n  /services/haproxy/configuration/http_response_rules/{id}:\n    delete:\n      description: Deletes a HTTP Response Rule configuration by it's ID from the\n        specified parent.\n      operationId: deleteHTTPResponseRule\n      parameters:\n      - description: HTTP Response Rule ID\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Parent name\n        explode: true\n        in: query\n        name: parent_name\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Parent type\n        explode: true\n        in: query\n        name: parent_type\n        required: true\n        schema:\n          enum:\n          - frontend\n          - backend\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      responses:\n        202:\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        204:\n          description: HTTP Response Rule deleted\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Delete a HTTP Response Rule\n      tags:\n      - HAProxy configuration management\n      - Backend options\n      - Frontend options\n      - HTTPResponseRule\n    get:\n      description: Returns one HTTP Response Rule configuration by it's ID in the\n        specified parent.\n      operationId: getHTTPResponseRule\n      parameters:\n      - description: HTTP Response Rule ID\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Parent name\n        explode: true\n        in: query\n        name: parent_name\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Parent type\n        explode: true\n        in: query\n        name: parent_type\n        required: true\n        schema:\n          enum:\n          - frontend\n          - backend\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_15'\n          description: Successful operation\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Return one HTTP Response Rule\n      tags:\n      - HAProxy configuration management\n      - Backend options\n      - Frontend options\n      - HTTPResponseRule\n    put:\n      description: Replaces a HTTP Response Rule configuration by it's ID in the specified\n        parent.\n      operationId: replaceHTTPResponseRule\n      parameters:\n      - description: HTTP Response Rule ID\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Parent name\n        explode: true\n        in: query\n        name: parent_name\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Parent type\n        explode: true\n        in: query\n        name: parent_type\n        required: true\n        schema:\n          enum:\n          - frontend\n          - backend\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      requestBody:\n        $ref: '#/components/requestBodies/http_response_rule'\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/http_response_rule'\n          description: HTTP Response Rule replaced\n        202:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/http_response_rule'\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad request\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Replace a HTTP Response Rule\n      tags:\n      - HAProxy configuration management\n      - Backend options\n      - Frontend options\n      - HTTPResponseRule\n  /services/haproxy/configuration/tcp_request_rules:\n    get:\n      description: Returns all TCP Request Rules that are configured in specified\n        parent and parent type.\n      operationId: getTCPRequestRules\n      parameters:\n      - description: Parent name\n        explode: true\n        in: query\n        name: parent_name\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Parent type\n        explode: true\n        in: query\n        name: parent_type\n        required: true\n        schema:\n          enum:\n          - frontend\n          - backend\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_16'\n          description: Successful operation\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Return an array of all TCP Request Rules\n      tags:\n      - HAProxy configuration management\n      - Backend options\n      - Frontend options\n      - TCPRequestRule\n    post:\n      description: Adds a new TCP Request Rule of the specified type in the specified\n        parent.\n      operationId: createTCPRequestRule\n      parameters:\n      - description: Parent name\n        explode: true\n        in: query\n        name: parent_name\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Parent type\n        explode: true\n        in: query\n        name: parent_type\n        required: true\n        schema:\n          enum:\n          - frontend\n          - backend\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      requestBody:\n        $ref: '#/components/requestBodies/tcp_request_rule'\n      responses:\n        201:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/tcp_request_rule'\n          description: TCP Request Rule created\n        202:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/tcp_request_rule'\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad request\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        409:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource already exists\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Add a new TCP Request Rule\n      tags:\n      - HAProxy configuration management\n      - Backend options\n      - Frontend options\n      - TCPRequestRule\n  /services/haproxy/configuration/tcp_request_rules/{id}:\n    delete:\n      description: Deletes a TCP Request Rule configuration by it's ID from the specified\n        parent.\n      operationId: deleteTCPRequestRule\n      parameters:\n      - description: TCP Request Rule ID\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Parent name\n        explode: true\n        in: query\n        name: parent_name\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Parent type\n        explode: true\n        in: query\n        name: parent_type\n        required: true\n        schema:\n          enum:\n          - frontend\n          - backend\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      responses:\n        202:\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        204:\n          description: TCP Request Rule deleted\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Delete a TCP Request Rule\n      tags:\n      - HAProxy configuration management\n      - Backend options\n      - Frontend options\n      - TCPRequestRule\n    get:\n      description: Returns one TCP Request Rule configuration by it's ID in the specified\n        parent.\n      operationId: getTCPRequestRule\n      parameters:\n      - description: TCP Request Rule ID\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Parent name\n        explode: true\n        in: query\n        name: parent_name\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Parent type\n        explode: true\n        in: query\n        name: parent_type\n        required: true\n        schema:\n          enum:\n          - frontend\n          - backend\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_17'\n          description: Successful operation\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Return one TCP Request Rule\n      tags:\n      - HAProxy configuration management\n      - Backend options\n      - Frontend options\n      - TCPRequestRule\n    put:\n      description: Replaces a TCP Request Rule configuration by it's ID in the specified\n        parent.\n      operationId: replaceTCPRequestRule\n      parameters:\n      - description: TCP Request Rule ID\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Parent name\n        explode: true\n        in: query\n        name: parent_name\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Parent type\n        explode: true\n        in: query\n        name: parent_type\n        required: true\n        schema:\n          enum:\n          - frontend\n          - backend\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      requestBody:\n        $ref: '#/components/requestBodies/tcp_request_rule'\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/tcp_request_rule'\n          description: TCP Request Rule replaced\n        202:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/tcp_request_rule'\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad request\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Replace a TCP Request Rule\n      tags:\n      - HAProxy configuration management\n      - Backend options\n      - Frontend options\n      - TCPRequestRule\n  /services/haproxy/configuration/tcp_response_rules:\n    get:\n      description: Returns all TCP Response Rules that are configured in specified\n        backend.\n      operationId: getTCPResponseRules\n      parameters:\n      - description: Parent backend name\n        explode: true\n        in: query\n        name: backend\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_18'\n          description: Successful operation\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Return an array of all TCP Response Rules\n      tags:\n      - HAProxy configuration management\n      - Backend options\n      - Frontend options\n      - TCPResponseRule\n    post:\n      description: Adds a new TCP Response Rule of the specified type in the specified\n        backend.\n      operationId: createTCPResponseRule\n      parameters:\n      - description: Parent backend name\n        explode: true\n        in: query\n        name: backend\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      requestBody:\n        $ref: '#/components/requestBodies/tcp_response_rule'\n      responses:\n        201:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/tcp_response_rule'\n          description: TCP Response Rule created\n        202:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/tcp_response_rule'\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad request\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        409:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource already exists\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Add a new TCP Response Rule\n      tags:\n      - HAProxy configuration management\n      - Backend options\n      - Frontend options\n      - TCPResponseRule\n  /services/haproxy/configuration/tcp_response_rules/{id}:\n    delete:\n      description: Deletes a TCP Response Rule configuration by it's ID from the specified\n        backend.\n      operationId: deleteTCPResponseRule\n      parameters:\n      - description: TCP Response Rule ID\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Parent backend name\n        explode: true\n        in: query\n        name: backend\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      responses:\n        202:\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        204:\n          description: TCP Response Rule deleted\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Delete a TCP Response Rule\n      tags:\n      - HAProxy configuration management\n      - Backend options\n      - Frontend options\n      - TCPResponseRule\n    get:\n      description: Returns one TCP Response Rule configuration by it's ID in the specified\n        backend.\n      operationId: getTCPResponseRule\n      parameters:\n      - description: TCP Response Rule ID\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Parent backend name\n        explode: true\n        in: query\n        name: backend\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_19'\n          description: Successful operation\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Return one TCP Response Rule\n      tags:\n      - HAProxy configuration management\n      - Backend options\n      - Frontend options\n      - TCPResponseRule\n    put:\n      description: Replaces a TCP Response Rule configuration by it's ID in the specified\n        backend.\n      operationId: replaceTCPResponseRule\n      parameters:\n      - description: TCP Response Rule ID\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Parent backend name\n        explode: true\n        in: query\n        name: backend\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      requestBody:\n        $ref: '#/components/requestBodies/tcp_response_rule'\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/tcp_response_rule'\n          description: TCP Response Rule replaced\n        202:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/tcp_response_rule'\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad request\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Replace a TCP Response Rule\n      tags:\n      - HAProxy configuration management\n      - Backend options\n      - Frontend options\n      - TCPResponseRule\n  /services/haproxy/configuration/backend_switching_rules:\n    get:\n      description: Returns all Backend Switching Rules that are configured in specified\n        frontend.\n      operationId: getBackendSwitchingRules\n      parameters:\n      - description: Frontend name\n        explode: true\n        in: query\n        name: frontend\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_20'\n          description: Successful operation\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Return an array of all Backend Switching Rules\n      tags:\n      - HAProxy configuration management\n      - Frontend options\n      - BackendSwitchingRule\n    post:\n      description: Adds a new Backend Switching Rule of the specified type in the\n        specified frontend.\n      operationId: createBackendSwitchingRule\n      parameters:\n      - description: Frontend name\n        explode: true\n        in: query\n        name: frontend\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      requestBody:\n        $ref: '#/components/requestBodies/backend_switching_rule'\n      responses:\n        201:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/backend_switching_rule'\n          description: Backend Switching Rule created\n        202:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/backend_switching_rule'\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad request\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        409:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource already exists\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Add a new Backend Switching Rule\n      tags:\n      - HAProxy configuration management\n      - Frontend options\n      - BackendSwitchingRule\n  /services/haproxy/configuration/backend_switching_rules/{id}:\n    delete:\n      description: Deletes a Backend Switching Rule configuration by it's ID from\n        the specified frontend.\n      operationId: deleteBackendSwitchingRule\n      parameters:\n      - description: Switching Rule ID\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Frontend name\n        explode: true\n        in: query\n        name: frontend\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      responses:\n        202:\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        204:\n          description: Backend Switching Rule deleted\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Delete a Backend Switching Rule\n      tags:\n      - HAProxy configuration management\n      - Frontend options\n      - BackendSwitchingRule\n    get:\n      description: Returns one Backend Switching Rule configuration by it's ID in\n        the specified frontend.\n      operationId: getBackendSwitchingRule\n      parameters:\n      - description: Switching Rule ID\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Frontend name\n        explode: true\n        in: query\n        name: frontend\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_21'\n          description: Successful operation\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Return one Backend Switching Rule\n      tags:\n      - HAProxy configuration management\n      - Frontend options\n      - BackendSwitchingRule\n    put:\n      description: Replaces a Backend Switching Rule configuration by it's ID in the\n        specified frontend.\n      operationId: replaceBackendSwitchingRule\n      parameters:\n      - description: Switching Rule ID\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Frontend name\n        explode: true\n        in: query\n        name: frontend\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      requestBody:\n        $ref: '#/components/requestBodies/backend_switching_rule'\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/backend_switching_rule'\n          description: Backend Switching Rule replaced\n        202:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/backend_switching_rule'\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad request\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Replace a Backend Switching Rule\n      tags:\n      - HAProxy configuration management\n      - Frontend options\n      - BackendSwitchingRule\n  /services/haproxy/configuration/server_switching_rules:\n    get:\n      description: Returns all Backend Switching Rules that are configured in specified\n        backend.\n      operationId: getServerSwitchingRules\n      parameters:\n      - description: Backend name\n        explode: true\n        in: query\n        name: backend\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_22'\n          description: Successful operation\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Return an array of all Server Switching Rules\n      tags:\n      - HAProxy configuration management\n      - Backend options\n      - ServerSwitchingRule\n    post:\n      description: Adds a new Server Switching Rule of the specified type in the specified\n        backend.\n      operationId: createServerSwitchingRule\n      parameters:\n      - description: Backend name\n        explode: true\n        in: query\n        name: backend\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      requestBody:\n        $ref: '#/components/requestBodies/server_switching_rule'\n      responses:\n        201:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/server_switching_rule'\n          description: Server Switching Rule created\n        202:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/server_switching_rule'\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad request\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        409:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource already exists\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Add a new Server Switching Rule\n      tags:\n      - HAProxy configuration management\n      - Backend options\n      - ServerSwitchingRule\n  /services/haproxy/configuration/server_switching_rules/{id}:\n    delete:\n      description: Deletes a Server Switching Rule configuration by it's ID from the\n        specified backend.\n      operationId: deleteServerSwitchingRule\n      parameters:\n      - description: Switching Rule ID\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Backend name\n        explode: true\n        in: query\n        name: backend\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      responses:\n        202:\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        204:\n          description: Server Switching Rule deleted\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Delete a Server Switching Rule\n      tags:\n      - HAProxy configuration management\n      - Backend options\n      - ServerSwitchingRule\n    get:\n      description: Returns one Server Switching Rule configuration by it's ID in the\n        specified backend.\n      operationId: getServerSwitchingRule\n      parameters:\n      - description: Switching Rule ID\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Backend name\n        explode: true\n        in: query\n        name: backend\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_23'\n          description: Successful operation\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Return one Server Switching Rule\n      tags:\n      - HAProxy configuration management\n      - Backend options\n      - ServerSwitchingRule\n    put:\n      description: Replaces a Server Switching Rule configuration by it's ID in the\n        specified backend.\n      operationId: replaceServerSwitchingRule\n      parameters:\n      - description: Switching Rule ID\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Backend name\n        explode: true\n        in: query\n        name: backend\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      requestBody:\n        $ref: '#/components/requestBodies/server_switching_rule'\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/server_switching_rule'\n          description: Server Switching Rule replaced\n        202:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/server_switching_rule'\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad request\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Replace a Server Switching Rule\n      tags:\n      - HAProxy configuration management\n      - Backend options\n      - ServerSwitchingRule\n  /services/haproxy/configuration/filters:\n    get:\n      description: Returns all Filters that are configured in specified parent.\n      operationId: getFilters\n      parameters:\n      - description: Parent name\n        explode: true\n        in: query\n        name: parent_name\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Parent type\n        explode: true\n        in: query\n        name: parent_type\n        required: true\n        schema:\n          enum:\n          - frontend\n          - backend\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_24'\n          description: Successful operation\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Return an array of all Filters\n      tags:\n      - HAProxy configuration management\n      - Backend options\n      - Frontend options\n      - Filter\n    post:\n      description: Adds a new Filter of the specified type in the specified parent.\n      operationId: createFilter\n      parameters:\n      - description: Parent name\n        explode: true\n        in: query\n        name: parent_name\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Parent type\n        explode: true\n        in: query\n        name: parent_type\n        required: true\n        schema:\n          enum:\n          - frontend\n          - backend\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      requestBody:\n        $ref: '#/components/requestBodies/filter'\n      responses:\n        201:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/filter'\n          description: Filter created\n        202:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/filter'\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad request\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        409:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource already exists\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Add a new Filter\n      tags:\n      - HAProxy configuration management\n      - Backend options\n      - Frontend options\n      - Filter\n  /services/haproxy/configuration/filters/{id}:\n    delete:\n      description: Deletes a Filter configuration by it's ID from the specified parent.\n      operationId: deleteFilter\n      parameters:\n      - description: Filter ID\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Parent name\n        explode: true\n        in: query\n        name: parent_name\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Parent type\n        explode: true\n        in: query\n        name: parent_type\n        required: true\n        schema:\n          enum:\n          - frontend\n          - backend\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      responses:\n        202:\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        204:\n          description: Filter deleted\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Delete a Filter\n      tags:\n      - HAProxy configuration management\n      - Backend options\n      - Frontend options\n      - Filter\n    get:\n      description: Returns one Filter configuration by it's ID in the specified parent.\n      operationId: getFilter\n      parameters:\n      - description: Filter ID\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Parent name\n        explode: true\n        in: query\n        name: parent_name\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Parent type\n        explode: true\n        in: query\n        name: parent_type\n        required: true\n        schema:\n          enum:\n          - frontend\n          - backend\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_25'\n          description: Successful operation\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Return one Filter\n      tags:\n      - HAProxy configuration management\n      - Backend options\n      - Frontend options\n      - Filter\n    put:\n      description: Replaces a Filter configuration by it's ID in the specified parent.\n      operationId: replaceFilter\n      parameters:\n      - description: Filter ID\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Parent name\n        explode: true\n        in: query\n        name: parent_name\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Parent type\n        explode: true\n        in: query\n        name: parent_type\n        required: true\n        schema:\n          enum:\n          - frontend\n          - backend\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      requestBody:\n        $ref: '#/components/requestBodies/filter'\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/filter'\n          description: Filter replaced\n        202:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/filter'\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad request\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Replace a Filter\n      tags:\n      - HAProxy configuration management\n      - Backend options\n      - Frontend options\n      - Filter\n  /services/haproxy/configuration/stick_rules:\n    get:\n      description: Returns all Stick Rules that are configured in specified backend.\n      operationId: getStickRules\n      parameters:\n      - description: Backend name\n        explode: true\n        in: query\n        name: backend\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_26'\n          description: Successful operation\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Return an array of all Stick Rules\n      tags:\n      - HAProxy configuration management\n      - Backend options\n      - StickRule\n    post:\n      description: Adds a new Stick Rule of the specified type in the specified backend.\n      operationId: createStickRule\n      parameters:\n      - description: Backend name\n        explode: true\n        in: query\n        name: backend\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      requestBody:\n        $ref: '#/components/requestBodies/stick_rule'\n      responses:\n        201:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/stick_rule'\n          description: Stick Rule created\n        202:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/stick_rule'\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad request\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        409:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource already exists\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Add a new Stick Rule\n      tags:\n      - HAProxy configuration management\n      - Backend options\n      - StickRule\n  /services/haproxy/configuration/stick_rules/{id}:\n    delete:\n      description: Deletes a Stick Rule configuration by it's ID from the specified\n        backend.\n      operationId: deleteStickRule\n      parameters:\n      - description: Stick Rule ID\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Backend name\n        explode: true\n        in: query\n        name: backend\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      responses:\n        202:\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        204:\n          description: Stick Rule deleted\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Delete a Stick Rule\n      tags:\n      - HAProxy configuration management\n      - Backend options\n      - StickRule\n    get:\n      description: Returns one Stick Rule configuration by it's ID in the specified\n        backend.\n      operationId: getStickRule\n      parameters:\n      - description: Stick Rule ID\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Backend name\n        explode: true\n        in: query\n        name: backend\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_27'\n          description: Successful operation\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Return one Stick Rule\n      tags:\n      - HAProxy configuration management\n      - Backend options\n      - StickRule\n    put:\n      description: Replaces a Stick Rule configuration by it's ID in the specified\n        backend.\n      operationId: replaceStickRule\n      parameters:\n      - description: Stick Rule ID\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Backend name\n        explode: true\n        in: query\n        name: backend\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      requestBody:\n        $ref: '#/components/requestBodies/stick_rule'\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/stick_rule'\n          description: Stick Rule replaced\n        202:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/stick_rule'\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad request\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Replace a Stick Rule\n      tags:\n      - HAProxy configuration management\n      - Backend options\n      - StickRule\n  /services/haproxy/configuration/log_targets:\n    get:\n      description: Returns all Log Targets that are configured in specified parent.\n      operationId: getLogTargets\n      parameters:\n      - description: Parent name\n        explode: true\n        in: query\n        name: parent_name\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Parent type\n        explode: true\n        in: query\n        name: parent_type\n        required: true\n        schema:\n          enum:\n          - frontend\n          - backend\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_28'\n          description: Successful operation\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Return an array of all Log Targets\n      tags:\n      - HAProxy configuration management\n      - Backend options\n      - Frontend options\n      - LogTarget\n    post:\n      description: Adds a new Log Target of the specified type in the specified parent.\n      operationId: createLogTarget\n      parameters:\n      - description: Parent name\n        explode: true\n        in: query\n        name: parent_name\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Parent type\n        explode: true\n        in: query\n        name: parent_type\n        required: true\n        schema:\n          enum:\n          - frontend\n          - backend\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      requestBody:\n        $ref: '#/components/requestBodies/log_target'\n      responses:\n        201:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/log_target'\n          description: Log Target created\n        202:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/log_target'\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad request\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        409:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource already exists\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Add a new Log Target\n      tags:\n      - HAProxy configuration management\n      - Backend options\n      - Frontend options\n      - LogTarget\n  /services/haproxy/configuration/log_targets/{id}:\n    delete:\n      description: Deletes a Log Target configuration by it's ID from the specified\n        parent.\n      operationId: deleteLogTarget\n      parameters:\n      - description: Log Target ID\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Parent name\n        explode: true\n        in: query\n        name: parent_name\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Parent type\n        explode: true\n        in: query\n        name: parent_type\n        required: true\n        schema:\n          enum:\n          - frontend\n          - backend\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      responses:\n        202:\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        204:\n          description: Log Target deleted\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Delete a Log Target\n      tags:\n      - HAProxy configuration management\n      - Backend options\n      - Frontend options\n      - LogTarget\n    get:\n      description: Returns one Log Target configuration by it's ID in the specified\n        parent.\n      operationId: getLogTarget\n      parameters:\n      - description: Log Target ID\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Parent name\n        explode: true\n        in: query\n        name: parent_name\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Parent type\n        explode: true\n        in: query\n        name: parent_type\n        required: true\n        schema:\n          enum:\n          - frontend\n          - backend\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_29'\n          description: Successful operation\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Return one Log Target\n      tags:\n      - HAProxy configuration management\n      - Backend options\n      - Frontend options\n      - LogTarget\n    put:\n      description: Replaces a Log Target configuration by it's ID in the specified\n        parent.\n      operationId: replaceLogTarget\n      parameters:\n      - description: Log Target ID\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Parent name\n        explode: true\n        in: query\n        name: parent_name\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Parent type\n        explode: true\n        in: query\n        name: parent_type\n        required: true\n        schema:\n          enum:\n          - frontend\n          - backend\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      requestBody:\n        $ref: '#/components/requestBodies/log_target'\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/log_target'\n          description: Log Target replaced\n        202:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/log_target'\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad request\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Replace a Log Target\n      tags:\n      - HAProxy configuration management\n      - Backend options\n      - Frontend options\n      - LogTarget\n  /services/haproxy/configuration/acls:\n    get:\n      description: Returns all ACL lines that are configured in specified parent.\n      operationId: getAcls\n      parameters:\n      - description: Parent name\n        explode: true\n        in: query\n        name: parent_name\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Parent type\n        explode: true\n        in: query\n        name: parent_type\n        required: true\n        schema:\n          enum:\n          - frontend\n          - backend\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_30'\n          description: Successful operation\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Return an array of all ACL lines\n      tags:\n      - HAProxy configuration management\n      - Backend options\n      - Frontend options\n      - ACL\n    post:\n      description: Adds a new ACL line of the specified type in the specified parent.\n      operationId: createAcl\n      parameters:\n      - description: Parent name\n        explode: true\n        in: query\n        name: parent_name\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Parent type\n        explode: true\n        in: query\n        name: parent_type\n        required: true\n        schema:\n          enum:\n          - frontend\n          - backend\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      requestBody:\n        $ref: '#/components/requestBodies/acl'\n      responses:\n        201:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/acl'\n          description: ACL line created\n        202:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/acl'\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad request\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        409:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource already exists\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Add a new ACL line\n      tags:\n      - HAProxy configuration management\n      - Backend options\n      - Frontend options\n      - ACL\n  /services/haproxy/configuration/acls/{id}:\n    delete:\n      description: Deletes a ACL line configuration by it's ID from the specified\n        parent.\n      operationId: deleteAcl\n      parameters:\n      - description: ACL line ID\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Parent name\n        explode: true\n        in: query\n        name: parent_name\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Parent type\n        explode: true\n        in: query\n        name: parent_type\n        required: true\n        schema:\n          enum:\n          - frontend\n          - backend\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      responses:\n        202:\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        204:\n          description: ACL line deleted\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Delete a ACL line\n      tags:\n      - HAProxy configuration management\n      - Backend options\n      - Frontend options\n      - ACL\n    get:\n      description: Returns one ACL line configuration by it's ID in the specified\n        parent.\n      operationId: getAcl\n      parameters:\n      - description: ACL line ID\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Parent name\n        explode: true\n        in: query\n        name: parent_name\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Parent type\n        explode: true\n        in: query\n        name: parent_type\n        required: true\n        schema:\n          enum:\n          - frontend\n          - backend\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_31'\n          description: Successful operation\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Return one ACL line\n      tags:\n      - HAProxy configuration management\n      - Backend options\n      - Frontend options\n      - ACL\n    put:\n      description: Replaces a ACL line configuration by it's ID in the specified parent.\n      operationId: replaceAcl\n      parameters:\n      - description: ACL line ID\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Parent name\n        explode: true\n        in: query\n        name: parent_name\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Parent type\n        explode: true\n        in: query\n        name: parent_type\n        required: true\n        schema:\n          enum:\n          - frontend\n          - backend\n          type: string\n        style: form\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      requestBody:\n        $ref: '#/components/requestBodies/acl'\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/acl'\n          description: ACL line replaced\n        202:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/acl'\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad request\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: The specified resource was not found\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Replace a ACL line\n      tags:\n      - HAProxy configuration management\n      - Backend options\n      - Frontend options\n      - ACL\n  /services/haproxy/configuration/raw:\n    get:\n      description: Returns HAProxy configuration file in plain text\n      operationId: getHAProxyConfiguration\n      parameters:\n      - description: ID of the transaction where we want to add the operation. Cannot\n          be used when version is specified.\n        explode: true\n        in: query\n        name: transaction_id\n        required: false\n        schema:\n          type: string\n        style: form\n        x-nullable: false\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      responses:\n        200:\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_32'\n          description: Operation successful\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Return HAProxy configuration\n      tags:\n      - Configuration\n      - HAProxy configuration management\n    post:\n      description: Push a new haproxy configuration file in plain text\n      operationId: postHAProxyConfiguration\n      parameters:\n      - description: Version used for checking configuration version. Cannot be used\n          when transaction is specified, transaction has it's own version.\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: integer\n        style: form\n        x-nullable: false\n      - description: If set, do a force reload, do not wait for the configured reload-delay.\n          Cannot be used when transaction is specified, as changes in transaction\n          are not applied directly to configuration.\n        explode: true\n        in: query\n        name: force_reload\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      requestBody:\n        content:\n          text/plain:\n            schema:\n              type: string\n        required: true\n      responses:\n        201:\n          content:\n            text/plain:\n              schema:\n                type: string\n          description: New HAProxy configuration pushed\n        202:\n          content:\n            text/plain:\n              schema:\n                type: string\n          description: Configuration change accepted and reload requested\n          headers:\n            Reload-ID:\n              description: ID of the requested reload\n              explode: false\n              schema:\n                type: string\n              style: simple\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad request\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: General Error\n          headers:\n            Configuration-Version:\n              description: Configuration file version\n              explode: false\n              schema:\n                type: integer\n              style: simple\n              x-nullable: false\n      summary: Push new haproxy configuration\n      tags:\n      - Configuration\n      - HAProxy configuration management\ncomponents:\n  parameters:\n    transaction_id:\n      description: ID of the transaction where we want to add the operation. Cannot\n        be used when version is specified.\n      explode: true\n      in: query\n      name: transaction_id\n      required: false\n      schema:\n        type: string\n      style: form\n      x-nullable: false\n    version:\n      description: Version used for checking configuration version. Cannot be used\n        when transaction is specified, transaction has it's own version.\n      explode: true\n      in: query\n      name: version\n      required: false\n      schema:\n        type: integer\n      style: form\n      x-nullable: false\n    force_reload:\n      description: If set, do a force reload, do not wait for the configured reload-delay.\n        Cannot be used when transaction is specified, as changes in transaction are\n        not applied directly to configuration.\n      explode: true\n      in: query\n      name: force_reload\n      required: false\n      schema:\n        default: false\n        type: boolean\n      style: form\n  requestBodies:\n    backend:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/backend'\n      required: true\n    backend_switching_rule:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/backend_switching_rule'\n      required: true\n    acl:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/acl'\n      required: true\n    http_request_rule:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/http_request_rule'\n      required: true\n    http_response_rule:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/http_response_rule'\n      required: true\n    stick_rule:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/stick_rule'\n      required: true\n    tcp_response_rule:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/tcp_response_rule'\n      required: true\n    site:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/site'\n      required: true\n    frontend:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/frontend'\n      required: true\n    bind:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/bind'\n      required: true\n    server:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/server'\n      required: true\n    tcp_request_rule:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/tcp_request_rule'\n      required: true\n    server_switching_rule:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/server_switching_rule'\n      required: true\n    filter:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/filter'\n      required: true\n    log_target:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/log_target'\n      required: true\n  responses:\n    BadRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n      description: Bad request\n      headers:\n        Configuration-Version:\n          description: Configuration file version\n          explode: false\n          schema:\n            type: integer\n          style: simple\n          x-nullable: false\n    NotFound:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n      description: The specified resource was not found\n      headers:\n        Configuration-Version:\n          description: Configuration file version\n          explode: false\n          schema:\n            type: integer\n          style: simple\n          x-nullable: false\n    AlreadyExists:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n      description: The specified resource already exists\n      headers:\n        Configuration-Version:\n          description: Configuration file version\n          explode: false\n          schema:\n            type: integer\n          style: simple\n          x-nullable: false\n    DefaultError:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n      description: General Error\n      headers:\n        Configuration-Version:\n          description: Configuration file version\n          explode: false\n          schema:\n            type: integer\n          style: simple\n          x-nullable: false\n  schemas:\n    site:\n      additionalProperties: false\n      description: \"Site configuration. Sites are considered as one service and all\\\n        \\ farms connected to that service.\\nFarms are connected to service using use-backend\\\n        \\ and default_backend directives. Sites let you\\nconfigure simple HAProxy\\\n        \\ configurations, for more advanced options use /haproxy/configuration \\n\\\n        endpoints.\\n\"\n      example:\n        farms:\n        - balance:\n            algorithm: roundrobin\n          mode: http\n          name: www_backend\n          servers:\n          - address: 127.0.1.1\n            name: www_server\n            port: 4567\n            weight: 30\n          - address: 127.0.1.2\n            name: www_server_new\n            port: 4567\n            weight: 70\n          use_as: default\n        name: test_site\n        service:\n          http_connection_mode: httpclose\n          listeners:\n          - address: 127.0.0.1\n            name: test_listener\n            port: 80\n          - address: 127.0.0.1\n            name: test_listener_2\n            port: 8080\n          maxconn: 2000\n          mode: http\n      properties:\n        farms:\n          items:\n            $ref: '#/components/schemas/site_farms'\n          type: array\n        name:\n          nullable: false\n          pattern: ^[A-Za-z0-9-_.:]+$\n          type: string\n        service:\n          $ref: '#/components/schemas/site_service'\n      required:\n      - name\n      title: Site\n      type: object\n    sites:\n      description: |\n        Sites array. Sites are considered as one service and all farms connected to that service.\n        Farms are connected to service using use-backend and default_backend directives. Sites let you\n        configure simple HAProxy configurations, for more advanced options use /haproxy/configuration\n        endpoints.\n      items:\n        $ref: '#/components/schemas/site'\n      title: Sites\n      type: array\n    global:\n      additionalProperties: false\n      description: HAProxy global configuration\n      example:\n        external_check: true\n        nbproc: 1\n        maxconn: 6\n        stats_timeout: 5\n        cpu_maps:\n        - process: process\n          cpu_set: cpu_set\n        - process: process\n          cpu_set: cpu_set\n        daemon: enabled\n        pidfile: pidfile\n        tune_ssl_default_dh_param: 2\n        ssl_default_bind_options: ssl_default_bind_options\n        master-worker: true\n        runtime_apis:\n        - mode: mode\n          process: process\n          address: address\n          level: user\n          exposeFdListeners: true\n        - mode: mode\n          process: process\n          address: address\n          level: user\n          exposeFdListeners: true\n        nbthread: 5\n        ssl_default_bind_ciphers: ssl_default_bind_ciphers\n      properties:\n        cpu_maps:\n          items:\n            $ref: '#/components/schemas/global_cpu_maps'\n          type: array\n          x-display-name: CPU Maps\n          x-go-name: CPUMaps\n        daemon:\n          enum:\n          - enabled\n          - disabled\n          type: string\n        external_check:\n          type: boolean\n          x-display-name: External Check\n        master-worker:\n          type: boolean\n          x-display-name: Master Worker Mode\n        maxconn:\n          type: integer\n          x-display-name: Max Connections\n        nbproc:\n          type: integer\n          x-display-name: Number of Processes\n        nbthread:\n          type: integer\n          x-display-name: Number of Threads\n        pidfile:\n          type: string\n          x-display-name: PID File\n        runtime_apis:\n          items:\n            $ref: '#/components/schemas/global_runtime_apis'\n          type: array\n          x-display-name: Runtime APIs\n          x-go-name: RuntimeAPIs\n        ssl_default_bind_ciphers:\n          type: string\n          x-display-name: SSL Default Bind Ciphers\n        ssl_default_bind_options:\n          type: string\n          x-display-name: SSL Default Bind Options\n        stats_timeout:\n          nullable: true\n          type: integer\n        tune_ssl_default_dh_param:\n          type: integer\n          x-display-name: SSL Default DH Parameter Size\n      title: Global\n      type: object\n    defaults:\n      additionalProperties: false\n      description: HAProxy defaults configuration\n      example:\n        external_check_path: external_check_path\n        redispatch:\n          interval: 1\n          enabled: enabled\n        log_format: log_format\n        external_check_command: external_check_command\n        connect_timeout: 5\n        maxconn: 7\n        http_request_timeout: 4\n        default_backend: default_backend\n        httpchk:\n          method: HEAD\n          uri: uri\n          version: version\n        mode: tcp\n        dontlognull: enabled\n        forwardfor:\n          ifnone: true\n          header: header\n          except: except\n          enabled: enabled\n        log_format_sd: log_format_sd\n        balance:\n          arguments:\n          - arguments\n          - arguments\n          algorithm: roundrobin\n        http-use-htx: enabled\n        log_separate_errors: enabled\n        clflog: true\n        tcplog: true\n        client_timeout: 1\n        external_check: enabled\n        queue_timeout: 1\n        clitcpka: enabled\n        cookie: cookie\n        http_keep_alive_timeout: 2\n        default_server:\n          fall: 5\n          port: 46276\n          inter: 2\n          rise: 9\n        httplog: true\n        contstats: enabled\n        server_timeout: 6\n        http_connection_mode: httpclose\n        retries: 1\n        http_pretend_keepalive: enabled\n        check_timeout: 6\n        error_files:\n        - code: 3\n          file: file\n        - code: 3\n          file: file\n        log_tag: log_tag\n        adv_check: ssl-hello-chk\n      properties:\n        adv_check:\n          enum:\n          - ssl-hello-chk\n          - smtpchk\n          - ldap-check\n          - mysql-check\n          - pgsql-check\n          - tcp-check\n          - redis-check\n          type: string\n          x-display-name: Advanced Check\n        balance:\n          $ref: '#/components/schemas/balance'\n        check_timeout:\n          nullable: true\n          type: integer\n        clflog:\n          type: boolean\n          x-display-name: CLF Log\n        client_timeout:\n          nullable: true\n          type: integer\n        clitcpka:\n          enum:\n          - enabled\n          - disabled\n          type: string\n          x-display-name: Client TCP Keep Alive\n        connect_timeout:\n          nullable: true\n          type: integer\n        contstats:\n          enum:\n          - enabled\n          type: string\n          x-display-name: Continous Statistics\n        cookie:\n          type: string\n        default_backend:\n          pattern: ^[A-Za-z0-9-_.:]+$\n          type: string\n          x-dynamic-enum:\n            operation: getBackends\n            property: name\n        default_server:\n          $ref: '#/components/schemas/default_server'\n        dontlognull:\n          enum:\n          - enabled\n          - disabled\n          type: string\n          x-display-name: Don't Log Null\n        error_files:\n          items:\n            $ref: '#/components/schemas/errorfile'\n          type: array\n          x-go-name: ErrorFiles\n        external_check:\n          enum:\n          - enabled\n          - disabled\n          type: string\n          x-display-name: External Check\n        external_check_command:\n          pattern: ^[^\\s]+$\n          type: string\n          x-display-name: External Check Command\n        external_check_path:\n          pattern: ^[^\\s]+$\n          type: string\n          x-display-name: External Check Path\n        forwardfor:\n          $ref: '#/components/schemas/forwardfor'\n        http-use-htx:\n          enum:\n          - enabled\n          - disabled\n          type: string\n          x-display-name: HTTP Use HTX\n        http_connection_mode:\n          enum:\n          - httpclose\n          - http-server-close\n          - http-keep-alive\n          type: string\n        http_keep_alive_timeout:\n          nullable: true\n          type: integer\n        http_pretend_keepalive:\n          enum:\n          - enabled\n          - disabled\n          type: string\n        http_request_timeout:\n          nullable: true\n          type: integer\n        httpchk:\n          $ref: '#/components/schemas/httpchk'\n        httplog:\n          type: boolean\n          x-display-name: HTTP Log\n        log_format:\n          type: string\n        log_format_sd:\n          type: string\n          x-display-name: Log Format SD\n        log_separate_errors:\n          enum:\n          - enabled\n          - disabled\n          type: string\n        log_tag:\n          pattern: ^[^\\s]+$\n          type: string\n        maxconn:\n          nullable: true\n          type: integer\n          x-display-name: Max Connections\n        mode:\n          enum:\n          - tcp\n          - http\n          type: string\n        queue_timeout:\n          nullable: true\n          type: integer\n        redispatch:\n          $ref: '#/components/schemas/redispatch'\n        retries:\n          nullable: true\n          type: integer\n        server_timeout:\n          nullable: true\n          type: integer\n        tcplog:\n          type: boolean\n          x-display-name: TCP Log\n      title: Defaults\n      type: object\n    frontend:\n      additionalProperties: false\n      description: HAProxy frontend configuration\n      example:\n        default_backend: test_backend\n        http_connection_mode: http-keep-alive\n        maxconn: 2000\n        mode: http\n        name: test_frontend\n      properties:\n        clflog:\n          type: boolean\n          x-dependency:\n            mode:\n              value: http\n          x-display-name: CLF Log\n        client_timeout:\n          nullable: true\n          type: integer\n        clitcpka:\n          enum:\n          - enabled\n          - disabled\n          type: string\n          x-dependency:\n            mode:\n              value: tcp\n          x-display-name: Client TCP Keep Alive\n        contstats:\n          enum:\n          - enabled\n          type: string\n          x-display-name: Continous Statistics\n        default_backend:\n          pattern: ^[A-Za-z0-9-_.:]+$\n          type: string\n          x-dynamic-enum:\n            operation: getBackends\n            property: name\n        dontlognull:\n          enum:\n          - enabled\n          - disabled\n          type: string\n          x-display-name: Don't Log Null\n        forwardfor:\n          $ref: '#/components/schemas/forwardfor'\n        http-use-htx:\n          enum:\n          - enabled\n          - disabled\n          type: string\n          x-dependency:\n            mode:\n              value: http\n          x-display-name: HTTP Use HTX\n        http_connection_mode:\n          enum:\n          - httpclose\n          - http-server-close\n          - http-keep-alive\n          type: string\n          x-dependency:\n            mode:\n              value: http\n        http_keep_alive_timeout:\n          nullable: true\n          type: integer\n          x-dependency:\n            mode:\n              value: http\n        http_request_timeout:\n          nullable: true\n          type: integer\n          x-dependency:\n            mode:\n              value: http\n        httplog:\n          type: boolean\n          x-dependency:\n            mode:\n              value: http\n          x-display-name: HTTP Log\n        log_format:\n          type: string\n        log_format_sd:\n          type: string\n          x-display-name: Log Format SD\n        log_separate_errors:\n          enum:\n          - enabled\n          - disabled\n          type: string\n        log_tag:\n          pattern: ^[A-Za-z0-9-_.:]+$\n          type: string\n        maxconn:\n          nullable: true\n          type: integer\n          x-display-name: Max Connections\n        mode:\n          enum:\n          - http\n          - tcp\n          type: string\n        name:\n          nullable: false\n          pattern: ^[A-Za-z0-9-_.:]+$\n          type: string\n        tcplog:\n          type: boolean\n          x-dependency:\n            mode:\n              value: tcp\n          x-display-name: TCP Log\n      required:\n      - name\n      title: Frontend\n      type: object\n    frontends:\n      description: HAProxy frontends array\n      items:\n        $ref: '#/components/schemas/frontend'\n      title: Frontends\n      type: array\n    backend:\n      additionalProperties: false\n      description: HAProxy backend configuration\n      example:\n        balance:\n          algorithm: roundrobin\n        forwardfor:\n          enabled: true\n        httpchk:\n          method: OPTIONS\n          uri: /check\n          version: HTTP/1.1\n        mode: http\n        name: test_backend\n      properties:\n        adv_check:\n          enum:\n          - ssl-hello-chk\n          - smtpchk\n          - ldap-check\n          - mysql-check\n          - pgsql-check\n          - tcp-check\n          - redis-check\n          type: string\n          x-display-name: Advanced Check\n        balance:\n          $ref: '#/components/schemas/balance'\n        check_timeout:\n          nullable: true\n          type: integer\n        connect_timeout:\n          nullable: true\n          type: integer\n        cookie:\n          type: string\n          x-dependency:\n            mode:\n              value: http\n        default_server:\n          $ref: '#/components/schemas/default_server'\n        external_check:\n          enum:\n          - enabled\n          - disabled\n          type: string\n          x-display-name: External Check\n        external_check_command:\n          pattern: ^[^\\s]+$\n          type: string\n          x-display-name: External Check Command\n        external_check_path:\n          pattern: ^[^\\s]+$\n          type: string\n          x-display-name: External Check Path\n        forwardfor:\n          $ref: '#/components/schemas/forwardfor'\n        hash_type:\n          $ref: '#/components/schemas/backend_hash_type'\n        http-use-htx:\n          enum:\n          - enabled\n          - disabled\n          type: string\n          x-dependency:\n            mode:\n              value: http\n        http_connection_mode:\n          enum:\n          - httpclose\n          - http-server-close\n          - http-keep-alive\n          type: string\n          x-dependency:\n            mode:\n              value: http\n        http_keep_alive_timeout:\n          nullable: true\n          type: integer\n          x-dependency:\n            mode:\n              value: http\n        http_pretend_keepalive:\n          enum:\n          - enabled\n          - disabled\n          type: string\n          x-dependency:\n            mode:\n              value: http\n        http_request_timeout:\n          nullable: true\n          type: integer\n          x-dependency:\n            mode:\n              value: http\n        httpchk:\n          $ref: '#/components/schemas/httpchk'\n        log_tag:\n          pattern: ^[^\\s]+$\n          type: string\n        mode:\n          enum:\n          - http\n          - tcp\n          type: string\n        name:\n          nullable: false\n          pattern: ^[A-Za-z0-9-_.:]+$\n          type: string\n        queue_timeout:\n          nullable: true\n          type: integer\n        redispatch:\n          $ref: '#/components/schemas/redispatch'\n        retries:\n          nullable: true\n          type: integer\n        server_timeout:\n          nullable: true\n          type: integer\n        stick_table:\n          $ref: '#/components/schemas/backend_stick_table'\n      required:\n      - name\n      title: Backend\n      type: object\n    backends:\n      description: HAProxy backends array\n      items:\n        $ref: '#/components/schemas/backend'\n      title: Backends\n      type: array\n    bind:\n      additionalProperties: false\n      description: HAProxy frontend bind configuration\n      example:\n        address: 127.0.0.1\n        name: http\n        port: 80\n      properties:\n        accept_proxy:\n          type: boolean\n        address:\n          pattern: ^[^\\s]+$\n          type: string\n        alpn:\n          pattern: ^[^\\s]+$\n          type: string\n          x-display-name: ALPN Protocols\n        name:\n          nullable: false\n          pattern: ^[^\\s]+$\n          type: string\n        port:\n          maximum: 65535\n          minimum: 0\n          nullable: true\n          type: integer\n        process:\n          pattern: ^[^\\s]+$\n          type: string\n        ssl:\n          type: boolean\n        ssl_cafile:\n          pattern: ^[^\\s]+$\n          type: string\n          x-dependency:\n            ssl:\n              value: true\n          x-display-name: SSL CA File\n        ssl_certificate:\n          pattern: ^[^\\s]+$\n          type: string\n          x-dependency:\n            ssl:\n              value: true\n        tcp_user_timeout:\n          nullable: true\n          type: integer\n        transparent:\n          type: boolean\n        v4v6:\n          type: boolean\n        verify:\n          enum:\n          - none\n          - optional\n          - required\n          type: string\n          x-dependency:\n            ssl:\n              value: enabled\n      required:\n      - name\n      title: Bind\n      type: object\n    binds:\n      description: HAProxy frontend binds array (corresponds to bind directives)\n      items:\n        $ref: '#/components/schemas/bind'\n      title: Binds\n      type: array\n    server:\n      additionalProperties: false\n      description: HAProxy backend server configuration\n      example:\n        address: 10.1.1.1\n        check: enabled\n        max-connections: 500\n        name: www\n        port: 8080\n        weight: 80\n      properties:\n        address:\n          nullable: false\n          pattern: ^[^\\s]+$\n          type: string\n        backup:\n          enum:\n          - enabled\n          - disabled\n          type: string\n        check:\n          enum:\n          - enabled\n          - disabled\n          type: string\n        cookie:\n          pattern: ^[^\\s]+$\n          type: string\n        inter:\n          nullable: true\n          type: integer\n        maintenance:\n          enum:\n          - enabled\n          - disabled\n          type: string\n        maxconn:\n          nullable: true\n          type: integer\n          x-display-name: Max Connections\n        name:\n          nullable: false\n          pattern: ^[^\\s]+$\n          type: string\n        on-error:\n          enum:\n          - fastinter\n          - fail-check\n          - sudden-death\n          - mark-down\n          type: string\n        on-marked-down:\n          enum:\n          - shutdown-sessions\n          type: string\n        on-marked-up:\n          enum:\n          - shutdown-backup-sessions\n          type: string\n        port:\n          maximum: 65535\n          minimum: 0\n          nullable: true\n          type: integer\n        ssl:\n          enum:\n          - enabled\n          - disabled\n          type: string\n        ssl_cafile:\n          pattern: ^[^\\s]+$\n          type: string\n          x-dependency:\n            ssl:\n              value: enabled\n          x-display-name: SSL CA File\n        ssl_certificate:\n          pattern: ^[^\\s]+$\n          type: string\n          x-dependency:\n            ssl:\n              value: enabled\n        tls_tickets:\n          enum:\n          - enabled\n          - disabled\n          type: string\n          x-dependency:\n            ssl:\n              value: enabled\n        verify:\n          enum:\n          - none\n          - required\n          type: string\n          x-dependency:\n            ssl:\n              value: enabled\n        weight:\n          nullable: true\n          type: integer\n      required:\n      - name\n      title: Server\n      type: object\n    servers:\n      description: HAProxy backend servers array\n      items:\n        $ref: '#/components/schemas/server'\n      title: Servers\n      type: array\n    http_request_rule:\n      additionalProperties: false\n      description: HAProxy HTTP request rule configuration (corresponds to http-request\n        directives)\n      example:\n        cond: unless\n        cond_test: '{ src 192.168.0.0/16 }'\n        hdr_format: '%T'\n        hdr_name: X-Haproxy-Current-Date\n        id: 0\n        type: add-header\n      properties:\n        acl_file:\n          pattern: ^[^\\s]+$\n          type: string\n          x-dependency:\n            type:\n              required: true\n              value:\n              - add-acl\n              - del-acl\n          x-display-name: ACL File\n        acl_keyfmt:\n          pattern: ^[^\\s]+$\n          type: string\n          x-dependency:\n            type:\n              required: true\n              value:\n              - add-acl\n              - del-acl\n          x-display-name: ACL Key Format\n        auth_realm:\n          pattern: ^[^\\s]+$\n          type: string\n          x-dependency:\n            type:\n              value: auth\n          x-display-name: Authentication Realm\n        cond:\n          enum:\n          - if\n          - unless\n          type: string\n          x-display-name: Condition\n        cond_test:\n          type: string\n          x-dependency:\n            cond:\n              required: true\n          x-display-name: Condition Test\n          x-dynamic-enum:\n            freeFormat: true\n            operation: getACLs\n            property: acl_name\n        deny_status:\n          nullable: false\n          type: integer\n          x-dependency:\n            type:\n              value:\n              - deny\n              - tarpit\n        hdr_format:\n          pattern: ^[^\\s]+$\n          type: string\n          x-dependency:\n            type:\n              required: true\n              value:\n              - replace-header\n              - replace-value\n              - set-header\n              - add-header\n          x-display-name: Header Format\n        hdr_match:\n          pattern: ^[^\\s]+$\n          type: string\n          x-dependency:\n            type:\n              required: true\n              value:\n              - replace-header\n              - replace-value\n          x-display-name: Header Match\n        hdr_name:\n          pattern: ^[^\\s]+$\n          type: string\n          x-dependency:\n            type:\n              required: true\n              value:\n              - add-header\n              - replace-header\n              - del-header\n              - set-header\n              - replace-value\n          x-display-name: Header Name\n        id:\n          nullable: true\n          type: integer\n        log_level:\n          enum:\n          - emerg\n          - alert\n          - crit\n          - err\n          - warning\n          - notice\n          - info\n          - debug\n          - silent\n          type: string\n          x-dependency:\n            type:\n              required: true\n              value: set-log-level\n        query-fmt:\n          type: string\n          x-dependency:\n            type:\n              required: true\n              value: set-query\n        redir_code:\n          enum:\n          - 301\n          - 302\n          - 303\n          type: integer\n          x-dependency:\n            type:\n              value: redirect\n          x-display-name: Redirect Code\n        redir_option:\n          type: string\n          x-dependency:\n            type:\n              required: true\n              value: redirect\n          x-display-name: Redirect Option\n        redir_type:\n          enum:\n          - location\n          - prefix\n          - scheme\n          type: string\n          x-dependency:\n            type:\n              required: true\n              value: redirect\n          x-display-name: Redirect Type\n        redir_value:\n          pattern: ^[^\\s]+$\n          type: string\n          x-dependency:\n            type:\n              required: true\n              value: redirect\n          x-display-name: Redirect Value\n        spoe_engine:\n          pattern: ^[^\\s]+$\n          type: string\n          x-dependency:\n            type:\n              required: true\n              value: send-spoe-group\n          x-display-name: SPOE Engine\n        spoe_group:\n          pattern: ^[^\\s]+$\n          type: string\n          x-dependency:\n            type:\n              required: true\n              value: send-spoe-group\n          x-display-name: SPOE Group\n        type:\n          enum:\n          - allow\n          - deny\n          - auth\n          - redirect\n          - tarpit\n          - add-header\n          - replace-header\n          - replace-value\n          - del-header\n          - set-header\n          - set-log-level\n          - set-query\n          - set-uri\n          - set-var\n          - send-spoe-group\n          - add-acl\n          - del-acl\n          nullable: false\n          type: string\n        uri-fmt:\n          type: string\n          x-dependency:\n            type:\n              required: true\n              value: set-uri\n        var_expr:\n          type: string\n          x-dependency:\n            type:\n              required: true\n              value: set-var\n          x-display-name: Var Expression\n        var_name:\n          pattern: ^[^\\s]+$\n          type: string\n          x-dependency:\n            type:\n              required: true\n              value: set-var\n        var_scope:\n          pattern: ^[^\\s]+$\n          type: string\n          x-dependency:\n            type:\n              required: true\n              value: set-var\n      required:\n      - id\n      - type\n      title: HTTP Request Rule\n      type: object\n    http_request_rules:\n      description: HAProxy HTTP request rules array (corresponds to http-request directives)\n      items:\n        $ref: '#/components/schemas/http_request_rule'\n      title: HTTP Request Rules Array\n      type: array\n    http_response_rule:\n      additionalProperties: false\n      description: HAProxy HTTP response rule configuration (corresponds to http-response\n        directives)\n      example:\n        cond: unless\n        cond_test: '{ src 192.168.0.0/16 }'\n        hdr_format: '%T'\n        hdr_name: X-Haproxy-Current-Date\n        id: 0\n        type: add-header\n      properties:\n        acl_file:\n          pattern: ^[^\\s]+$\n          type: string\n          x-dependency:\n            type:\n              required: true\n              value:\n              - add-acl\n              - del-acl\n        acl_keyfmt:\n          pattern: ^[^\\s]+$\n          type: string\n          x-dependency:\n            type:\n              required: true\n              value:\n              - add-acl\n              - del-acl\n          x-display-name: ACK Key Format\n        cond:\n          enum:\n          - if\n          - unless\n          type: string\n          x-display-name: Condition\n        cond_test:\n          type: string\n          x-dependency:\n            cond:\n              required: true\n          x-display-name: Condition Test\n          x-dynamic-enum:\n            freeFormat: true\n            operation: getACLs\n            property: acl_name\n        hdr_format:\n          pattern: ^[^\\s]+$\n          type: string\n          x-dependency:\n            type:\n              required: true\n              value:\n              - replace-header\n              - replace-value\n              - set-header\n              - add-header\n          x-display-name: Header Format\n        hdr_match:\n          pattern: ^[^\\s]+$\n          type: string\n          x-dependency:\n            type:\n              required: true\n              value:\n              - replace-header\n              - replace-value\n          x-display-name: Header Match\n        hdr_name:\n          pattern: ^[^\\s]+$\n          type: string\n          x-dependency:\n            type:\n              required: true\n              value:\n              - add-header\n              - replace-header\n              - del-header\n              - set-header\n              - replace-value\n          x-display-name: Header Name\n        id:\n          nullable: true\n          type: integer\n        log_level:\n          enum:\n          - emerg\n          - alert\n          - crit\n          - err\n          - warning\n          - notice\n          - info\n          - debug\n          - silent\n          type: string\n          x-dependency:\n            type:\n              required: true\n              value: set-log-level\n        redir_code:\n          enum:\n          - 301\n          - 302\n          - 303\n          type: integer\n          x-dependency:\n            type:\n              value: redirect\n          x-display-name: Redirect Code\n        redir_option:\n          type: string\n          x-dependency:\n            type:\n              required: true\n              value: redirect\n          x-display-name: Redirect Option\n        redir_type:\n          enum:\n          - location\n          - prefix\n          - scheme\n          type: string\n          x-dependency:\n            type:\n              required: true\n              value: redirect\n          x-display-name: Redirect Type\n        redir_value:\n          pattern: ^[^\\s]+$\n          type: string\n          x-dependency:\n            type:\n              required: true\n              value: redirect\n          x-display-name: Redirect Value\n        spoe_engine:\n          pattern: ^[^\\s]+$\n          type: string\n          x-dependency:\n            type:\n              required: true\n              value: send-spoe-group\n        spoe_group:\n          pattern: ^[^\\s]+$\n          type: string\n          x-dependency:\n            type:\n              required: true\n              value: send-spoe-group\n        status:\n          maximum: 999\n          minimum: 100\n          nullable: false\n          type: integer\n          x-dependency:\n            type:\n              required: true\n              value: set-status\n        status_reason:\n          type: string\n          x-dependency:\n            type:\n              value: set-status\n        type:\n          enum:\n          - allow\n          - deny\n          - redirect\n          - add-header\n          - set-header\n          - del-header\n          - set-log-level\n          - set-var\n          - set-status\n          - send-spoe-group\n          - replace-header\n          - replace-value\n          - add-acl\n          - del-acl\n          nullable: false\n          type: string\n        var_expr:\n          type: string\n          x-dependency:\n            type:\n              required: true\n              value: set-var\n          x-display-name: Var Expression\n        var_name:\n          pattern: ^[^\\s]+$\n          type: string\n          x-dependency:\n            type:\n              required: true\n              value: set-var\n        var_scope:\n          pattern: ^[^\\s]+$\n          type: string\n          x-dependency:\n            type:\n              required: true\n              value: set-var\n      required:\n      - id\n      - type\n      title: HTTP Response Rule\n      type: object\n    http_response_rules:\n      description: HAProxy HTTP response rules array (corresponds to http-response\n        directives)\n      items:\n        $ref: '#/components/schemas/http_response_rule'\n      title: HTTP Response Rules Array\n      type: array\n    tcp_request_rule:\n      additionalProperties: false\n      description: HAProxy TCP Request Rule configuration (corresponds to tcp-request)\n      example:\n        cond: if\n        cond_test: '{ src 192.168.0.0/16 }'\n        id: 0\n        type: accept\n      properties:\n        action:\n          enum:\n          - accept\n          - reject\n          nullable: false\n          type: string\n          x-dependency:\n            type:\n              required: true\n              value:\n              - connection\n              - content\n              - session\n        cond:\n          enum:\n          - if\n          - unless\n          type: string\n          x-dependency:\n            type:\n              value:\n              - connection\n              - content\n              - session\n          x-display-name: Condition\n        cond_test:\n          type: string\n          x-dependency:\n            cond:\n              required: true\n            type:\n              required: true\n              value:\n              - connection\n              - content\n              - session\n          x-display-name: Condition Test\n          x-dynamic-enum:\n            freeFormat: true\n            operation: getACLs\n            property: acl_name\n        id:\n          nullable: true\n          type: integer\n        timeout:\n          nullable: true\n          type: integer\n          x-dependency:\n            type:\n              required: true\n              value: inspect-delay\n        type:\n          enum:\n          - connection\n          - content\n          - inspect-delay\n          - session\n          nullable: false\n          type: string\n      required:\n      - id\n      - type\n      title: TCP Request Rule\n      type: object\n    tcp_request_rules:\n      description: HAProxy TCP request rules array (corresponds to tcp-request directive)\n      items:\n        $ref: '#/components/schemas/tcp_request_rule'\n      title: TCP Request Rules Array\n      type: array\n    tcp_response_rule:\n      additionalProperties: false\n      description: HAProxy TCP Response Rule configuration (corresponds to tcp-response)\n      example:\n        cond: if\n        cond_test: '{ src 192.168.0.0/16 }'\n        id: 0\n        type: accept\n      properties:\n        action:\n          enum:\n          - accept\n          - reject\n          nullable: false\n          type: string\n          x-dependency:\n            type:\n              required: true\n              value: content\n        cond:\n          enum:\n          - if\n          - unless\n          type: string\n          x-dependency:\n            type:\n              value: content\n          x-display-name: Condition\n        cond_test:\n          type: string\n          x-dependency:\n            cond:\n              required: true\n            type:\n              value: content\n          x-display-name: Condition Test\n          x-dynamic-enum:\n            freeFormat: true\n            operation: getACLs\n            property: acl_name\n        id:\n          nullable: true\n          type: integer\n        timeout:\n          nullable: true\n          type: integer\n          x-dependency:\n            type:\n              required: true\n              value: inspect-delay\n        type:\n          enum:\n          - content\n          - inspect-delay\n          nullable: false\n          type: string\n      required:\n      - id\n      - type\n      title: TCP Response Rule\n      type: object\n    tcp_response_rules:\n      description: HAProxy TCP response rules array (corresponds to tcp-response directive)\n      items:\n        $ref: '#/components/schemas/tcp_response_rule'\n      title: TCP Response Rules Array\n      type: array\n    backend_switching_rule:\n      additionalProperties: false\n      description: HAProxy backend switching rule configuration (corresponds to use_backend\n        directive)\n      example:\n        cond: if\n        cond_test: '{ req_ssl_sni -i www.example.com }'\n        id: 0\n        name: test_backend\n      properties:\n        cond:\n          enum:\n          - if\n          - unless\n          type: string\n          x-display-name: Condition\n        cond_test:\n          type: string\n          x-dependency:\n            cond:\n              required: true\n          x-display-name: Condition Test\n          x-dynamic-enum:\n            freeFormat: true\n            operation: getACLs\n            property: acl_name\n        id:\n          nullable: true\n          type: integer\n        name:\n          nullable: false\n          pattern: ^[^\\s]+$\n          type: string\n          x-display-name: Backend Name\n          x-dynamic-enum:\n            operation: getBackends\n            property: name\n      required:\n      - id\n      - name\n      title: Backend Switching Rule\n      type: object\n    backend_switching_rules:\n      description: HAProxy backend switching rules array (corresponds to use_backend\n        directives)\n      items:\n        $ref: '#/components/schemas/backend_switching_rule'\n      title: Backend Switching Rules Array\n      type: array\n    server_switching_rule:\n      additionalProperties: false\n      description: HAProxy server switching rule configuration (corresponds to use-server\n        directive)\n      example:\n        cond: if\n        cond_test: '{ req_ssl_sni -i www.example.com }'\n        id: 0\n        target_server: www\n      properties:\n        cond:\n          enum:\n          - if\n          - unless\n          type: string\n          x-display-name: Condition\n        cond_test:\n          type: string\n          x-dependency:\n            cond:\n              required: true\n          x-display-name: Condition Test\n          x-dynamic-enum:\n            freeFormat: true\n            operation: getACLs\n            property: acl_name\n        id:\n          nullable: true\n          type: integer\n        target_server:\n          nullable: false\n          pattern: ^[^\\s]+$\n          type: string\n          x-dynamic-enum:\n            operation: getServers\n            property: name\n      required:\n      - id\n      - target_server\n      title: Server Switching Rule\n      type: object\n    server_switching_rules:\n      description: HAProxy backend server switching rules array (corresponds to use-server\n        directives)\n      items:\n        $ref: '#/components/schemas/server_switching_rule'\n      title: Server Switching Rules Array\n      type: array\n    filter:\n      additionalProperties: false\n      description: HAProxy filters\n      example:\n        id: 0\n        trace_name: name\n        trace_rnd_parsing: true\n        type: trace\n      properties:\n        cache_name:\n          pattern: ^[^\\s]+$\n          type: string\n          x-dependency:\n            type:\n              required: true\n              value: cache\n        id:\n          nullable: true\n          type: integer\n        spoe_config:\n          pattern: ^[^\\s]+$\n          type: string\n          x-dependency:\n            type:\n              required: true\n              value: spoe\n        spoe_engine:\n          pattern: ^[^\\s]+$\n          type: string\n          x-dependency:\n            type:\n              value: spoe\n        trace_hexdump:\n          type: boolean\n          x-dependency:\n            type:\n              value: trace\n        trace_name:\n          pattern: ^[^\\s]+$\n          type: string\n          x-dependency:\n            type:\n              value: trace\n        trace_rnd_forwarding:\n          type: boolean\n          x-dependency:\n            type:\n              value: trace\n          x-display-name: Trace Random Forwarding\n        trace_rnd_parsing:\n          type: boolean\n          x-dependency:\n            type:\n              value: trace\n          x-display-name: Trace Random Parsing\n        type:\n          enum:\n          - trace\n          - compression\n          - spoe\n          - cache\n          nullable: false\n          type: string\n      required:\n      - id\n      - type\n      title: Filter\n      type: object\n    filters:\n      description: HAProxy filters array (corresponds to filter directive)\n      items:\n        $ref: '#/components/schemas/filter'\n      title: Filters Array\n      type: array\n    stick_rule:\n      additionalProperties: false\n      description: Define a pattern used to create an entry in a stickiness table\n        or matching condition or associate a user to a server.\n      example:\n        id: 0\n        pattern: src\n        type: storeonly\n      properties:\n        cond:\n          enum:\n          - if\n          - unless\n          type: string\n          x-display-name: Condition\n        cond_test:\n          type: string\n          x-dependency:\n            cond:\n              required: true\n          x-display-name: Condition Test\n          x-dynamic-enum:\n            freeFormat: true\n            operation: getACLs\n            property: acl_name\n        id:\n          nullable: true\n          type: integer\n        pattern:\n          nullable: false\n          pattern: ^[^\\s]+$\n          type: string\n        table:\n          pattern: ^[^\\s]+$\n          type: string\n        type:\n          enum:\n          - match\n          - on\n          - store-request\n          - store-response\n          nullable: false\n          type: string\n      required:\n      - id\n      - pattern\n      - type\n      title: Stick Rule\n      type: object\n    stick_rules:\n      description: HAProxy backend stick rules array (corresponds to stick store-request,\n        stick match, stick on, stick store-response)\n      items:\n        $ref: '#/components/schemas/stick_rule'\n      title: Stick Rules Array\n      type: array\n    log_target:\n      additionalProperties: false\n      description: Per-instance logging of events and traffic.\n      example:\n        nolog: true\n        address: address\n        level: emerg\n        minlevel: emerg\n        format: rfc3164\n        length: 1\n        global: true\n        id: 6\n        facility: kern\n      properties:\n        address:\n          pattern: ^[^\\s]+$\n          type: string\n          x-dependency:\n            global:\n              required: true\n              value: false\n            nolog:\n              required: true\n              value: false\n        facility:\n          enum:\n          - kern\n          - user\n          - mail\n          - daemon\n          - auth\n          - syslog\n          - lpr\n          - news\n          - uucp\n          - cron\n          - auth2\n          - ftp\n          - ntp\n          - audit\n          - alert\n          - cron2\n          - local0\n          - local1\n          - local2\n          - local3\n          - local4\n          - local5\n          - local6\n          - local7\n          type: string\n          x-dependency:\n            global:\n              required: true\n              value: false\n            nolog:\n              required: true\n              value: false\n        format:\n          enum:\n          - rfc3164\n          - rfc5424\n          - short\n          - raw\n          type: string\n          x-dependency:\n            global:\n              value: false\n            nolog:\n              value: false\n        global:\n          type: boolean\n        id:\n          nullable: true\n          type: integer\n        length:\n          type: integer\n          x-dependency:\n            global:\n              value: false\n            nolog:\n              value: false\n        level:\n          enum:\n          - emerg\n          - alert\n          - crit\n          - err\n          - warning\n          - notice\n          - info\n          - debug\n          type: string\n          x-dependency:\n            global:\n              value: false\n            nolog:\n              value: false\n        minlevel:\n          enum:\n          - emerg\n          - alert\n          - crit\n          - err\n          - warning\n          - notice\n          - info\n          - debug\n          type: string\n          x-dependency:\n            global:\n              value: false\n            level:\n              required: false\n            nolog:\n              value: false\n        nolog:\n          type: boolean\n      required:\n      - id\n      title: Log Target\n      type: object\n    log_targets:\n      description: HAProxy log target array (corresponds to log directives)\n      items:\n        $ref: '#/components/schemas/log_target'\n      title: Log Target Array\n      type: array\n    acl:\n      additionalProperties: false\n      description: |\n        The use of Access Control Lists (ACL) provides a flexible solution to perform\n        content switching and generally to take decisions based on content extracted\n        from the request, the response or any environmental status.\n      example:\n        criterion: criterion\n        acl_name: acl_name\n        id: 6\n        value: value\n      properties:\n        acl_name:\n          nullable: false\n          pattern: ^[^\\s]+$\n          type: string\n        criterion:\n          nullable: false\n          pattern: ^[^\\s]+$\n          type: string\n        id:\n          nullable: true\n          type: integer\n        value:\n          nullable: false\n          type: string\n      required:\n      - acl_name\n      - criterion\n      - id\n      - value\n      title: ACL Lines\n      type: object\n    acls:\n      description: HAProxy ACL lines array (corresponds to acl directives)\n      items:\n        $ref: '#/components/schemas/acl'\n      title: ACL Lines Array\n      type: array\n    native_stats:\n      description: HAProxy stats array\n      items:\n        description: Stats from one runtime API\n        properties:\n          error:\n            type: string\n          runtimeAPI:\n            type: string\n          stats:\n            items:\n              $ref: '#/components/schemas/native_stat'\n            type: array\n        title: Stats collection\n        type: object\n        x-go-name: NativeStatsCollection\n      title: Stats Array\n      type: array\n      x-go-name: NativeStats\n    native_stat:\n      description: Current stats for one object.\n      example:\n        name: frontend_test\n        stats:\n          bin: 4326578\n          bout: 889901290\n          comp_byp: 0\n          comp_in: 0\n          comp_out: 0\n          comp_rsp: 0\n          conn_rate: 12\n          conn_rate_max: 456\n          conn_tot: 45682\n          dcon: 0\n          dreq: 4\n          dresp: 1\n          dses: 0\n          ereq: 54\n          hrsp_1xx: 0\n          hrsp_2xx: 165\n          hrsp_3xx: 12\n          hrsp_4xx: 50\n          hrsp_5xx: 4\n          hrsp_other: 0\n          iid: 0\n          intercepted: 346\n          mode: http\n          pid: 3204\n          rate: 64\n          rate_lim: 20000\n          rate_max: 4000\n          req_rate: 49\n          req_rate_max: 3965\n          req_total: 1254786\n          scur: 129\n          slim: 2000\n          smax: 2000\n          status: UP\n          stot: 12902\n        type: frontend\n      properties:\n        backend_name:\n          type: string\n          x-dependency:\n            type: server\n        name:\n          type: string\n        stats:\n          $ref: '#/components/schemas/native_stat_stats'\n        type:\n          enum:\n          - backend\n          - server\n          - frontend\n          type: string\n      title: Stats\n      type: object\n      x-go-name: NativeStat\n    error:\n      additionalProperties:\n        type: string\n      description: API Error\n      properties:\n        code:\n          nullable: true\n          type: integer\n        message:\n          nullable: true\n          type: string\n      required:\n      - code\n      - message\n      title: Error\n      type: object\n    endpoint:\n      description: Endpoint definition\n      example:\n        description: description\n        title: title\n        url: url\n      properties:\n        description:\n          description: Endpoint description\n          type: string\n        title:\n          description: Endpoint title\n          type: string\n        url:\n          description: Path to the endpoint\n          type: string\n      title: Endpoint\n      type: object\n    endpoints:\n      description: Collection of endpoints\n      items:\n        $ref: '#/components/schemas/endpoint'\n      title: Endpoints Array\n      type: array\n    process_info:\n      description: General HAProxy process information\n      example:\n        haproxy:\n          address: 127.0.0.1\n          pid: 1234\n          processes: 4\n          release_date: 2016-03-11\n          time: 2018-07-02T12:00:00.124Z\n          uptime: 8\n          version: 1.7-dev1-868ab3-148\n      properties:\n        haproxy:\n          $ref: '#/components/schemas/process_info_haproxy'\n      title: HAProxy Information\n      type: object\n    transaction:\n      description: HAProxy configuration transaction\n      example:\n        _version: 2\n        id: 273e3385-2d0c-4fb1-aa27-93cbb31ff203\n        status: in_progress\n      properties:\n        _version:\n          type: integer\n        id:\n          pattern: ^[^\\s]+$\n          type: string\n        status:\n          enum:\n          - failed\n          - in_progress\n          - success\n          type: string\n      title: Configuration transaction\n      type: object\n    transactions:\n      description: Configuration transactions array\n      items:\n        $ref: '#/components/schemas/transaction'\n      title: Transactions array\n      type: array\n    info:\n      description: General API, OS and hardware information\n      example:\n        api:\n          build_date: 2019-08-21T17:31:56.000Z\n          version: v1.2.1 45a3288.dev\n        system:\n          cpu_info:\n            model: Intel(R) Core(TM) i7-7500U CPU @ 2.70GHz\n            num_cpus: 4\n          hostname: test\n          mem_info:\n            dataplaneapi_memory: 44755536\n            free_memory: 5790642176\n            total_memory: 16681517056\n          os_string: 'Linux 4.15.0-58-generic #64-Ubuntu SMP Tue Aug 6 11:12:41 UTC\n            2019'\n          time: 1566401525\n          uptime: 87340\n      properties:\n        api:\n          $ref: '#/components/schemas/info_api'\n        system:\n          $ref: '#/components/schemas/info_system'\n      title: Information\n      type: object\n    reload:\n      description: HAProxy reload\n      example:\n        id: 2019-01-03-44\n        status: in_progress\n      properties:\n        id:\n          pattern: ^\\d{4}-\\d{2}-\\d{2}-\\d+$\n          type: string\n        reload_timestamp:\n          type: integer\n        response:\n          type: string\n        status:\n          enum:\n          - failed\n          - in_progress\n          - succeeded\n          type: string\n      title: HAProxy reload\n      type: object\n    reloads:\n      description: HAProxy reloads array\n      items:\n        $ref: '#/components/schemas/reload'\n      title: HAProxy Reloads Array\n      type: array\n    balance:\n      example:\n        arguments:\n        - arguments\n        - arguments\n        algorithm: roundrobin\n      properties:\n        algorithm:\n          enum:\n          - roundrobin\n          - static-rr\n          - leastconn\n          - first\n          - source\n          - uri\n          - url_param\n          - random\n          type: string\n        arguments:\n          items:\n            pattern: ^[^\\s]+$\n            type: string\n          type: array\n          x-dependency:\n            algorithm:\n              value:\n              - uri\n              - url_param\n      type: object\n    forwardfor:\n      example:\n        ifnone: true\n        header: header\n        except: except\n        enabled: enabled\n      properties:\n        enabled:\n          enum:\n          - enabled\n          type: string\n        except:\n          pattern: ^[^\\s]+$\n          type: string\n        header:\n          pattern: ^[^\\s]+$\n          type: string\n        ifnone:\n          type: boolean\n      required:\n      - enabled\n      type: object\n      x-display-name: ForwardFor\n    default_server:\n      example:\n        fall: 5\n        port: 46276\n        inter: 2\n        rise: 9\n      properties:\n        fall:\n          nullable: true\n          type: integer\n        inter:\n          nullable: true\n          type: integer\n        port:\n          maximum: 65535\n          minimum: 0\n          nullable: true\n          type: integer\n        rise:\n          nullable: true\n          type: integer\n      type: object\n    httpchk:\n      example:\n        method: HEAD\n        uri: uri\n        version: version\n      properties:\n        method:\n          enum:\n          - HEAD\n          - PUT\n          - POST\n          - GET\n          - TRACE\n          - PATCH\n          type: string\n        uri:\n          pattern: ^[^\\s]+$\n          type: string\n        version:\n          pattern: ^[^\\s]+$\n          type: string\n      type: object\n      x-display-name: HTTP Check\n    redispatch:\n      example:\n        interval: 1\n        enabled: enabled\n      properties:\n        enabled:\n          enum:\n          - enabled\n          - disabled\n          type: string\n        interval:\n          nullable: false\n          type: integer\n      required:\n      - enabled\n      type: object\n    errorfile:\n      example:\n        code: 3\n        file: file\n      properties:\n        code:\n          enum:\n          - 200\n          - 400\n          - 403\n          - 405\n          - 408\n          - 425\n          - 429\n          - 500\n          - 502\n          - 503\n          - 504\n          type: integer\n        file:\n          type: string\n      type: object\n      x-display-name: Error File\n    inline_response_200:\n      example:\n        data:\n        - farms:\n          - balance:\n              algorithm: roundrobin\n            mode: http\n            name: www_backend\n            servers:\n            - address: 127.0.1.1\n              name: www_server\n              port: 4567\n              weight: 30\n            - address: 127.0.1.2\n              name: www_server_new\n              port: 4567\n              weight: 70\n            use_as: default\n          name: test_site\n          service:\n            http_connection_mode: httpclose\n            listeners:\n            - address: 127.0.0.1\n              name: test_listener\n              port: 80\n            - address: 127.0.0.1\n              name: test_listener_2\n              port: 8080\n            maxconn: 2000\n            mode: http\n        - farms:\n          - balance:\n              algorithm: roundrobin\n            mode: http\n            name: www_backend\n            servers:\n            - address: 127.0.1.1\n              name: www_server\n              port: 4567\n              weight: 30\n            - address: 127.0.1.2\n              name: www_server_new\n              port: 4567\n              weight: 70\n            use_as: default\n          name: test_site\n          service:\n            http_connection_mode: httpclose\n            listeners:\n            - address: 127.0.0.1\n              name: test_listener\n              port: 80\n            - address: 127.0.0.1\n              name: test_listener_2\n              port: 8080\n            maxconn: 2000\n            mode: http\n        _version: 0\n      properties:\n        _version:\n          type: integer\n        data:\n          description: |\n            Sites array. Sites are considered as one service and all farms connected to that service.\n            Farms are connected to service using use-backend and default_backend directives. Sites let you\n            configure simple HAProxy configurations, for more advanced options use /haproxy/configuration\n            endpoints.\n          items:\n            $ref: '#/components/schemas/site'\n          title: Sites\n          type: array\n      required:\n      - data\n    inline_response_200_1:\n      example:\n        data:\n          farms:\n          - balance:\n              algorithm: roundrobin\n            mode: http\n            name: www_backend\n            servers:\n            - address: 127.0.1.1\n              name: www_server\n              port: 4567\n              weight: 30\n            - address: 127.0.1.2\n              name: www_server_new\n              port: 4567\n              weight: 70\n            use_as: default\n          name: test_site\n          service:\n            http_connection_mode: httpclose\n            listeners:\n            - address: 127.0.0.1\n              name: test_listener\n              port: 80\n            - address: 127.0.0.1\n              name: test_listener_2\n              port: 8080\n            maxconn: 2000\n            mode: http\n        _version: 0\n      properties:\n        _version:\n          type: integer\n        data:\n          $ref: '#/components/schemas/site'\n    inline_response_200_2:\n      example:\n        data:\n          external_check: true\n          nbproc: 1\n          maxconn: 6\n          stats_timeout: 5\n          cpu_maps:\n          - process: process\n            cpu_set: cpu_set\n          - process: process\n            cpu_set: cpu_set\n          daemon: enabled\n          pidfile: pidfile\n          tune_ssl_default_dh_param: 2\n          ssl_default_bind_options: ssl_default_bind_options\n          master-worker: true\n          runtime_apis:\n          - mode: mode\n            process: process\n            address: address\n            level: user\n            exposeFdListeners: true\n          - mode: mode\n            process: process\n            address: address\n            level: user\n            exposeFdListeners: true\n          nbthread: 5\n          ssl_default_bind_ciphers: ssl_default_bind_ciphers\n        _version: 0\n      properties:\n        _version:\n          type: integer\n        data:\n          $ref: '#/components/schemas/global'\n    inline_response_200_3:\n      example:\n        data:\n          external_check_path: external_check_path\n          redispatch:\n            interval: 1\n            enabled: enabled\n          log_format: log_format\n          external_check_command: external_check_command\n          connect_timeout: 5\n          maxconn: 7\n          http_request_timeout: 4\n          default_backend: default_backend\n          httpchk:\n            method: HEAD\n            uri: uri\n            version: version\n          mode: tcp\n          dontlognull: enabled\n          forwardfor:\n            ifnone: true\n            header: header\n            except: except\n            enabled: enabled\n          log_format_sd: log_format_sd\n          balance:\n            arguments:\n            - arguments\n            - arguments\n            algorithm: roundrobin\n          http-use-htx: enabled\n          log_separate_errors: enabled\n          clflog: true\n          tcplog: true\n          client_timeout: 1\n          external_check: enabled\n          queue_timeout: 1\n          clitcpka: enabled\n          cookie: cookie\n          http_keep_alive_timeout: 2\n          default_server:\n            fall: 5\n            port: 46276\n            inter: 2\n            rise: 9\n          httplog: true\n          contstats: enabled\n          server_timeout: 6\n          http_connection_mode: httpclose\n          retries: 1\n          http_pretend_keepalive: enabled\n          check_timeout: 6\n          error_files:\n          - code: 3\n            file: file\n          - code: 3\n            file: file\n          log_tag: log_tag\n          adv_check: ssl-hello-chk\n        _version: 0\n      properties:\n        _version:\n          type: integer\n        data:\n          $ref: '#/components/schemas/defaults'\n    inline_response_200_4:\n      example:\n        data:\n        - default_backend: test_backend\n          http_connection_mode: http-keep-alive\n          maxconn: 2000\n          mode: http\n          name: test_frontend\n        - default_backend: test_backend\n          http_connection_mode: http-keep-alive\n          maxconn: 2000\n          mode: http\n          name: test_frontend\n        _version: 0\n      properties:\n        _version:\n          type: integer\n        data:\n          description: HAProxy frontends array\n          items:\n            $ref: '#/components/schemas/frontend'\n          title: Frontends\n          type: array\n      required:\n      - data\n    inline_response_200_5:\n      example:\n        data:\n          default_backend: test_backend\n          http_connection_mode: http-keep-alive\n          maxconn: 2000\n          mode: http\n          name: test_frontend\n        _version: 0\n      properties:\n        _version:\n          type: integer\n        data:\n          $ref: '#/components/schemas/frontend'\n    inline_response_200_6:\n      example:\n        data:\n        - balance:\n            algorithm: roundrobin\n          forwardfor:\n            enabled: true\n          httpchk:\n            method: OPTIONS\n            uri: /check\n            version: HTTP/1.1\n          mode: http\n          name: test_backend\n        - balance:\n            algorithm: roundrobin\n          forwardfor:\n            enabled: true\n          httpchk:\n            method: OPTIONS\n            uri: /check\n            version: HTTP/1.1\n          mode: http\n          name: test_backend\n        _version: 0\n      properties:\n        _version:\n          type: integer\n        data:\n          description: HAProxy backends array\n          items:\n            $ref: '#/components/schemas/backend'\n          title: Backends\n          type: array\n      required:\n      - data\n    inline_response_200_7:\n      example:\n        data:\n          balance:\n            algorithm: roundrobin\n          forwardfor:\n            enabled: true\n          httpchk:\n            method: OPTIONS\n            uri: /check\n            version: HTTP/1.1\n          mode: http\n          name: test_backend\n        _version: 0\n      properties:\n        _version:\n          type: integer\n        data:\n          $ref: '#/components/schemas/backend'\n    inline_response_200_8:\n      example:\n        data:\n        - address: 127.0.0.1\n          name: http\n          port: 80\n        - address: 127.0.0.1\n          name: http\n          port: 80\n        _version: 0\n      properties:\n        _version:\n          type: integer\n        data:\n          description: HAProxy frontend binds array (corresponds to bind directives)\n          items:\n            $ref: '#/components/schemas/bind'\n          title: Binds\n          type: array\n      required:\n      - data\n    inline_response_200_9:\n      example:\n        data:\n          address: 127.0.0.1\n          name: http\n          port: 80\n        _version: 0\n      properties:\n        _version:\n          type: integer\n        data:\n          $ref: '#/components/schemas/bind'\n    inline_response_200_10:\n      example:\n        data:\n        - address: 10.1.1.1\n          check: enabled\n          max-connections: 500\n          name: www\n          port: 8080\n          weight: 80\n        - address: 10.1.1.1\n          check: enabled\n          max-connections: 500\n          name: www\n          port: 8080\n          weight: 80\n        _version: 0\n      properties:\n        _version:\n          type: integer\n        data:\n          description: HAProxy backend servers array\n          items:\n            $ref: '#/components/schemas/server'\n          title: Servers\n          type: array\n      required:\n      - data\n    inline_response_200_11:\n      example:\n        data:\n          address: 10.1.1.1\n          check: enabled\n          max-connections: 500\n          name: www\n          port: 8080\n          weight: 80\n        _version: 0\n      properties:\n        _version:\n          type: integer\n        data:\n          $ref: '#/components/schemas/server'\n    inline_response_200_12:\n      example:\n        data:\n        - cond: unless\n          cond_test: '{ src 192.168.0.0/16 }'\n          hdr_format: '%T'\n          hdr_name: X-Haproxy-Current-Date\n          id: 0\n          type: add-header\n        - cond: unless\n          cond_test: '{ src 192.168.0.0/16 }'\n          hdr_format: '%T'\n          hdr_name: X-Haproxy-Current-Date\n          id: 0\n          type: add-header\n        _version: 0\n      properties:\n        _version:\n          type: integer\n        data:\n          description: HAProxy HTTP request rules array (corresponds to http-request\n            directives)\n          items:\n            $ref: '#/components/schemas/http_request_rule'\n          title: HTTP Request Rules Array\n          type: array\n      required:\n      - data\n    inline_response_200_13:\n      example:\n        data:\n          cond: unless\n          cond_test: '{ src 192.168.0.0/16 }'\n          hdr_format: '%T'\n          hdr_name: X-Haproxy-Current-Date\n          id: 0\n          type: add-header\n        _version: 0\n      properties:\n        _version:\n          type: integer\n        data:\n          $ref: '#/components/schemas/http_request_rule'\n    inline_response_200_14:\n      example:\n        data:\n        - cond: unless\n          cond_test: '{ src 192.168.0.0/16 }'\n          hdr_format: '%T'\n          hdr_name: X-Haproxy-Current-Date\n          id: 0\n          type: add-header\n        - cond: unless\n          cond_test: '{ src 192.168.0.0/16 }'\n          hdr_format: '%T'\n          hdr_name: X-Haproxy-Current-Date\n          id: 0\n          type: add-header\n        _version: 0\n      properties:\n        _version:\n          type: integer\n        data:\n          description: HAProxy HTTP response rules array (corresponds to http-response\n            directives)\n          items:\n            $ref: '#/components/schemas/http_response_rule'\n          title: HTTP Response Rules Array\n          type: array\n      required:\n      - data\n    inline_response_200_15:\n      example:\n        data:\n          cond: unless\n          cond_test: '{ src 192.168.0.0/16 }'\n          hdr_format: '%T'\n          hdr_name: X-Haproxy-Current-Date\n          id: 0\n          type: add-header\n        _version: 0\n      properties:\n        _version:\n          type: integer\n        data:\n          $ref: '#/components/schemas/http_response_rule'\n    inline_response_200_16:\n      example:\n        data:\n        - cond: if\n          cond_test: '{ src 192.168.0.0/16 }'\n          id: 0\n          type: accept\n        - cond: if\n          cond_test: '{ src 192.168.0.0/16 }'\n          id: 0\n          type: accept\n        _version: 0\n      properties:\n        _version:\n          type: integer\n        data:\n          description: HAProxy TCP request rules array (corresponds to tcp-request\n            directive)\n          items:\n            $ref: '#/components/schemas/tcp_request_rule'\n          title: TCP Request Rules Array\n          type: array\n      required:\n      - data\n    inline_response_200_17:\n      example:\n        data:\n          cond: if\n          cond_test: '{ src 192.168.0.0/16 }'\n          id: 0\n          type: accept\n        _version: 0\n      properties:\n        _version:\n          type: integer\n        data:\n          $ref: '#/components/schemas/tcp_request_rule'\n    inline_response_200_18:\n      example:\n        data:\n        - cond: if\n          cond_test: '{ src 192.168.0.0/16 }'\n          id: 0\n          type: accept\n        - cond: if\n          cond_test: '{ src 192.168.0.0/16 }'\n          id: 0\n          type: accept\n        _version: 0\n      properties:\n        _version:\n          type: integer\n        data:\n          description: HAProxy TCP response rules array (corresponds to tcp-response\n            directive)\n          items:\n            $ref: '#/components/schemas/tcp_response_rule'\n          title: TCP Response Rules Array\n          type: array\n      required:\n      - data\n    inline_response_200_19:\n      example:\n        data:\n          cond: if\n          cond_test: '{ src 192.168.0.0/16 }'\n          id: 0\n          type: accept\n        _version: 0\n      properties:\n        _version:\n          type: integer\n        data:\n          $ref: '#/components/schemas/tcp_response_rule'\n    inline_response_200_20:\n      example:\n        data:\n        - cond: if\n          cond_test: '{ req_ssl_sni -i www.example.com }'\n          id: 0\n          name: test_backend\n        - cond: if\n          cond_test: '{ req_ssl_sni -i www.example.com }'\n          id: 0\n          name: test_backend\n        _version: 0\n      properties:\n        _version:\n          type: integer\n        data:\n          description: HAProxy backend switching rules array (corresponds to use_backend\n            directives)\n          items:\n            $ref: '#/components/schemas/backend_switching_rule'\n          title: Backend Switching Rules Array\n          type: array\n      required:\n      - data\n    inline_response_200_21:\n      example:\n        data:\n          cond: if\n          cond_test: '{ req_ssl_sni -i www.example.com }'\n          id: 0\n          name: test_backend\n        _version: 0\n      properties:\n        _version:\n          type: integer\n        data:\n          $ref: '#/components/schemas/backend_switching_rule'\n    inline_response_200_22:\n      example:\n        data:\n        - cond: if\n          cond_test: '{ req_ssl_sni -i www.example.com }'\n          id: 0\n          target_server: www\n        - cond: if\n          cond_test: '{ req_ssl_sni -i www.example.com }'\n          id: 0\n          target_server: www\n        _version: 0\n      properties:\n        _version:\n          type: integer\n        data:\n          description: HAProxy backend server switching rules array (corresponds to\n            use-server directives)\n          items:\n            $ref: '#/components/schemas/server_switching_rule'\n          title: Server Switching Rules Array\n          type: array\n      required:\n      - data\n    inline_response_200_23:\n      example:\n        data:\n          cond: if\n          cond_test: '{ req_ssl_sni -i www.example.com }'\n          id: 0\n          target_server: www\n        _version: 0\n      properties:\n        _version:\n          type: integer\n        data:\n          $ref: '#/components/schemas/server_switching_rule'\n    inline_response_200_24:\n      example:\n        data:\n        - id: 0\n          trace_name: name\n          trace_rnd_parsing: true\n          type: trace\n        - id: 0\n          trace_name: name\n          trace_rnd_parsing: true\n          type: trace\n        _version: 0\n      properties:\n        _version:\n          type: integer\n        data:\n          description: HAProxy filters array (corresponds to filter directive)\n          items:\n            $ref: '#/components/schemas/filter'\n          title: Filters Array\n          type: array\n      required:\n      - data\n    inline_response_200_25:\n      example:\n        data:\n          id: 0\n          trace_name: name\n          trace_rnd_parsing: true\n          type: trace\n        _version: 0\n      properties:\n        _version:\n          type: integer\n        data:\n          $ref: '#/components/schemas/filter'\n    inline_response_200_26:\n      example:\n        data:\n        - id: 0\n          pattern: src\n          type: storeonly\n        - id: 0\n          pattern: src\n          type: storeonly\n        _version: 0\n      properties:\n        _version:\n          type: integer\n        data:\n          description: HAProxy backend stick rules array (corresponds to stick store-request,\n            stick match, stick on, stick store-response)\n          items:\n            $ref: '#/components/schemas/stick_rule'\n          title: Stick Rules Array\n          type: array\n      required:\n      - data\n    inline_response_200_27:\n      example:\n        data:\n          id: 0\n          pattern: src\n          type: storeonly\n        _version: 0\n      properties:\n        _version:\n          type: integer\n        data:\n          $ref: '#/components/schemas/stick_rule'\n    inline_response_200_28:\n      example:\n        data:\n        - nolog: true\n          address: address\n          level: emerg\n          minlevel: emerg\n          format: rfc3164\n          length: 1\n          global: true\n          id: 6\n          facility: kern\n        - nolog: true\n          address: address\n          level: emerg\n          minlevel: emerg\n          format: rfc3164\n          length: 1\n          global: true\n          id: 6\n          facility: kern\n        _version: 0\n      properties:\n        _version:\n          type: integer\n        data:\n          description: HAProxy log target array (corresponds to log directives)\n          items:\n            $ref: '#/components/schemas/log_target'\n          title: Log Target Array\n          type: array\n      required:\n      - data\n    inline_response_200_29:\n      example:\n        data:\n          nolog: true\n          address: address\n          level: emerg\n          minlevel: emerg\n          format: rfc3164\n          length: 1\n          global: true\n          id: 6\n          facility: kern\n        _version: 0\n      properties:\n        _version:\n          type: integer\n        data:\n          $ref: '#/components/schemas/log_target'\n    inline_response_200_30:\n      example:\n        data:\n        - criterion: criterion\n          acl_name: acl_name\n          id: 6\n          value: value\n        - criterion: criterion\n          acl_name: acl_name\n          id: 6\n          value: value\n        _version: 0\n      properties:\n        _version:\n          type: integer\n        data:\n          description: HAProxy ACL lines array (corresponds to acl directives)\n          items:\n            $ref: '#/components/schemas/acl'\n          title: ACL Lines Array\n          type: array\n      required:\n      - data\n    inline_response_200_31:\n      example:\n        data:\n          criterion: criterion\n          acl_name: acl_name\n          id: 6\n          value: value\n        _version: 0\n      properties:\n        _version:\n          type: integer\n        data:\n          $ref: '#/components/schemas/acl'\n    inline_response_200_32:\n      example:\n        data: data\n        _version: 0\n      properties:\n        _version:\n          type: integer\n        data:\n          type: string\n      required:\n      - data\n    site_farms:\n      properties:\n        balance:\n          $ref: '#/components/schemas/balance'\n        cond:\n          enum:\n          - if\n          - unless\n          type: string\n          x-dependency:\n            use_as:\n              required: true\n              value: conditional\n          x-display-name: Condition\n        cond_test:\n          type: string\n          x-dependency:\n            use_as:\n              required: true\n              value: conditional\n          x-display-name: Condition Test\n        forwardfor:\n          $ref: '#/components/schemas/forwardfor'\n        mode:\n          enum:\n          - http\n          - tcp\n          type: string\n        name:\n          nullable: false\n          pattern: ^[A-Za-z0-9-_.:]+$\n          type: string\n        servers:\n          items:\n            $ref: '#/components/schemas/server'\n          type: array\n        use_as:\n          enum:\n          - default\n          - conditional\n          nullable: false\n          type: string\n      required:\n      - name\n      - use_as\n    site_service:\n      properties:\n        http_connection_mode:\n          enum:\n          - http-tunnel\n          - httpclose\n          - forced-close\n          - http-server-close\n          - http-keep-alive\n          type: string\n          x-dependency:\n            mode:\n              value: http\n          x-display-name: HTTP Connection Mode\n        listeners:\n          items:\n            $ref: '#/components/schemas/bind'\n          type: array\n        maxconn:\n          nullable: true\n          type: integer\n          x-display-name: Max Connections\n        mode:\n          enum:\n          - http\n          - tcp\n          type: string\n    global_cpu_maps:\n      example:\n        process: process\n        cpu_set: cpu_set\n      properties:\n        cpu_set:\n          type: string\n          x-display-name: CPU Set\n        process:\n          type: string\n          x-display-name: Process/Thread Set\n      required:\n      - cpu_set\n      - process\n    global_runtime_apis:\n      example:\n        mode: mode\n        process: process\n        address: address\n        level: user\n        exposeFdListeners: true\n      properties:\n        address:\n          pattern: ^[^\\s]+$\n          type: string\n        exposeFdListeners:\n          type: boolean\n          x-display-name: Expose FD Listeners\n        level:\n          enum:\n          - user\n          - operator\n          - admin\n          type: string\n        mode:\n          pattern: ^[^\\s]+$\n          type: string\n        process:\n          pattern: ^[^\\s]+$\n          type: string\n      required:\n      - address\n    backend_hash_type:\n      properties:\n        function:\n          enum:\n          - sdbm\n          - djb2\n          - wt6\n          - crc32\n          type: string\n        method:\n          enum:\n          - map-based\n          - consistent\n          type: string\n        modifier:\n          enum:\n          - avalanche\n          type: string\n    backend_stick_table:\n      properties:\n        expire:\n          nullable: true\n          type: integer\n        keylen:\n          nullable: true\n          type: integer\n          x-display-name: Key Length\n        nopurge:\n          type: boolean\n          x-display-name: No Purge\n        peers:\n          pattern: ^[^\\s]+$\n          type: string\n        size:\n          nullable: true\n          type: integer\n        store:\n          pattern: ^[^\\s]+$\n          type: string\n        type:\n          enum:\n          - ip\n          - ipv6\n          - integer\n          - string\n          - binary\n          type: string\n    native_stat_stats:\n      properties:\n        act:\n          nullable: true\n          type: integer\n          x-dependency:\n            type:\n            - server\n            - backend\n        addr:\n          type: string\n          x-dependency:\n            type: server\n        agent_code:\n          nullable: true\n          type: integer\n          x-dependency:\n            type: server\n        agent_desc:\n          type: string\n          x-dependency:\n            type: server\n        agent_duration:\n          nullable: true\n          type: integer\n          x-dependency:\n            type: server\n        agent_fall:\n          nullable: true\n          type: integer\n          x-dependency:\n            type: server\n        agent_health:\n          nullable: true\n          type: integer\n          x-dependency:\n            type: server\n        agent_rise:\n          nullable: true\n          type: integer\n          x-dependency:\n            type: server\n        agent_status:\n          enum:\n          - UNK\n          - INI\n          - SOCKERR\n          - L40K\n          - L4TOUT\n          - L4CON\n          - L7OK\n          - L7STS\n          type: string\n          x-dependency:\n            type: server\n        algo:\n          type: string\n          x-dependency:\n            type: backend\n        bck:\n          nullable: true\n          type: integer\n          x-dependency:\n            type:\n            - server\n            - backend\n        bin:\n          nullable: true\n          type: integer\n        bout:\n          nullable: true\n          type: integer\n        check_code:\n          nullable: true\n          type: integer\n          x-dependency:\n            type: server\n        check_desc:\n          type: string\n          x-dependency:\n            type: server\n        check_duration:\n          nullable: true\n          type: integer\n          x-dependency:\n            type: server\n        check_fall:\n          nullable: true\n          type: integer\n          x-dependency:\n            type: server\n        check_health:\n          nullable: true\n          type: integer\n          x-dependency:\n            type: server\n        check_rise:\n          nullable: true\n          type: integer\n          x-dependency:\n            type: server\n        check_status:\n          enum:\n          - UNK\n          - INI\n          - SOCKERR\n          - L40K\n          - L4TOUT\n          - L4CON\n          - L6OK\n          - L6TOUT\n          - L6RSP\n          - L7OK\n          - L7OKC\n          - L7TOUT\n          - L7RSP\n          - L7STS\n          type: string\n          x-dependency:\n            type: server\n        chkdown:\n          nullable: true\n          type: integer\n          x-dependency:\n            type:\n            - server\n            - backend\n        chkfail:\n          nullable: true\n          type: integer\n          x-dependency:\n            type: server\n        cli_abrt:\n          nullable: true\n          type: integer\n          x-dependency:\n            type:\n            - server\n            - backend\n        comp_byp:\n          nullable: true\n          type: integer\n          x-dependency:\n            type:\n            - frontend\n            - backend\n        comp_in:\n          nullable: true\n          type: integer\n          x-dependency:\n            type:\n            - frontend\n            - backend\n        comp_out:\n          nullable: true\n          type: integer\n          x-dependency:\n            type:\n            - frontend\n            - backend\n        comp_rsp:\n          nullable: true\n          type: integer\n          x-dependency:\n            type:\n            - frontend\n            - backend\n        conn_rate:\n          nullable: true\n          type: integer\n          x-dependency:\n            type: frontend\n        conn_rate_max:\n          nullable: true\n          type: integer\n          x-dependency:\n            type: frontend\n        conn_tot:\n          nullable: true\n          type: integer\n          x-dependency:\n            type: frontend\n        cookie:\n          type: string\n          x-dependency:\n            type:\n            - server\n            - backend\n        ctime:\n          nullable: true\n          type: integer\n          x-dependency:\n            type:\n            - server\n            - backend\n        dcon:\n          nullable: true\n          type: integer\n          x-dependency:\n            type: frontend\n        downtime:\n          nullable: true\n          type: integer\n          x-dependency:\n            type: server\n        dreq:\n          nullable: true\n          type: integer\n          x-dependency:\n            type:\n            - frontend\n            - backend\n        dresp:\n          nullable: true\n          type: integer\n        dses:\n          nullable: true\n          type: integer\n          x-dependency:\n            type: frontend\n        econ:\n          nullable: true\n          type: integer\n          x-dependency:\n            type:\n            - server\n            - backend\n        ereq:\n          nullable: true\n          type: integer\n          x-dependency:\n            type: frontend\n        eresp:\n          nullable: true\n          type: integer\n          x-dependency:\n            type:\n            - server\n            - backend\n        hanafail:\n          type: string\n          x-dependency:\n            type: server\n        hrsp_1xx:\n          nullable: true\n          type: integer\n        hrsp_2xx:\n          nullable: true\n          type: integer\n        hrsp_3xx:\n          nullable: true\n          type: integer\n        hrsp_4xx:\n          nullable: true\n          type: integer\n        hrsp_5xx:\n          nullable: true\n          type: integer\n        hrsp_other:\n          nullable: true\n          type: integer\n        iid:\n          nullable: true\n          type: integer\n        intercepted:\n          nullable: true\n          type: integer\n          x-dependency:\n            type:\n            - frontend\n            - backend\n        lastchg:\n          nullable: true\n          type: integer\n          x-dependency:\n            type:\n            - server\n            - backend\n        lastsess:\n          nullable: true\n          type: integer\n          x-dependency:\n            type:\n            - server\n            - backend\n        lbtot:\n          nullable: true\n          type: integer\n          x-dependency:\n            type:\n            - server\n            - backend\n        mode:\n          enum:\n          - tcp\n          - http\n          - health\n          - unknown\n          type: string\n        pid:\n          nullable: true\n          type: integer\n        qcur:\n          nullable: true\n          type: integer\n          x-dependency:\n            type:\n            - server\n            - backend\n        qlimit:\n          nullable: true\n          type: integer\n          x-dependency:\n            type:\n            - server\n            - backend\n        qmax:\n          nullable: true\n          type: integer\n          x-dependency:\n            type:\n            - server\n            - backend\n        qtime:\n          nullable: true\n          type: integer\n          x-dependency:\n            type:\n            - server\n            - backend\n        rate:\n          nullable: true\n          type: integer\n        rate_lim:\n          nullable: true\n          type: integer\n          x-dependency:\n            type: frontend\n        rate_max:\n          nullable: true\n          type: integer\n        req_rate:\n          nullable: true\n          type: integer\n          x-dependency:\n            type: frontend\n        req_rate_max:\n          nullable: true\n          type: integer\n          x-dependency:\n            type: frontend\n        req_tot:\n          nullable: true\n          type: integer\n          x-dependency:\n            type:\n            - frontend\n            - backend\n        rtime:\n          nullable: true\n          type: integer\n          x-dependency:\n            type:\n            - server\n            - backend\n        scur:\n          nullable: true\n          type: integer\n        sid:\n          nullable: true\n          type: integer\n          x-dependency:\n            type: server\n        slim:\n          nullable: true\n          type: integer\n        smax:\n          nullable: true\n          type: integer\n        srv_abrt:\n          nullable: true\n          type: integer\n          x-dependency:\n            type:\n            - server\n            - backend\n        status:\n          enum:\n          - UP\n          - DOWN\n          - NOLB\n          - MAINT\n          - no check\n          type: string\n        stot:\n          nullable: true\n          type: integer\n        throttle:\n          nullable: true\n          type: integer\n          x-dependency:\n            type: server\n        tracked:\n          nullable: true\n          type: integer\n          x-dependency:\n            type: server\n        ttime:\n          nullable: true\n          type: integer\n          x-dependency:\n            type:\n            - server\n            - backend\n        weight:\n          nullable: true\n          type: integer\n          x-dependency:\n            type:\n            - server\n            - backend\n        wredis:\n          nullable: true\n          type: integer\n          x-dependency:\n            type:\n            - server\n            - backend\n        wretr:\n          nullable: true\n          type: integer\n          x-dependency:\n            type:\n            - server\n            - backend\n    process_info_haproxy:\n      properties:\n        pid:\n          description: Process id of the replying worker process\n          nullable: true\n          type: integer\n        processes:\n          description: Number of spawned processes\n          nullable: true\n          type: integer\n        release_date:\n          description: HAProxy version release date\n          format: date\n          type: string\n        uptime:\n          description: HAProxy uptime in s\n          nullable: true\n          type: integer\n        version:\n          description: HAProxy version string\n          type: string\n    info_api:\n      properties:\n        build_date:\n          description: HAProxy Dataplane API build date\n          format: date-time\n          type: string\n        version:\n          description: HAProxy Dataplane API version string\n          type: string\n    info_system_cpu_info:\n      properties:\n        model:\n          type: string\n        num_cpus:\n          description: Number of logical CPUs\n          type: integer\n    info_system_mem_info:\n      properties:\n        dataplaneapi_memory:\n          type: integer\n        free_memory:\n          type: integer\n        total_memory:\n          type: integer\n    info_system:\n      properties:\n        cpu_info:\n          $ref: '#/components/schemas/info_system_cpu_info'\n        hostname:\n          description: Hostname where the HAProxy is running\n          type: string\n        mem_info:\n          $ref: '#/components/schemas/info_system_mem_info'\n        os_string:\n          description: OS string\n          type: string\n        time:\n          description: Current time in milliseconds since Epoch.\n          type: integer\n        uptime:\n          description: System uptime\n          nullable: true\n          type: integer\n  securitySchemes:\n    basic_auth:\n      scheme: basic\n      type: http\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"inline_response_200_27\": parse schema: property \"data\": parse schema: resolve \"#/components/schemas/stick_rule\": parse schema: property \"type\": parse enum values: parse value \"true\": expected type \"string\", got \"bool\""
}