{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "npm/tdp_core"
		},
		"file": {
			"name": "db.yml",
			"size": 0,
			"path": "tdp_core/swagger/db.yml",
			"byteSize": 9632,
			"content": "openapi: 3.0.0\ntags:\n  - name: db\n    description: database api\n  - name: query_generic\n    description: generic queries\n  - name: query_score\n    description: score queries\n  - name: query_lookup\n    description: lookup queries\npaths:\n  /db/:\n    get:\n      x-swagger-router-controller: tdp_core\n      operationId: sql.list_databases\n      description: list all known databases\n      tags:\n        - db\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                title: ArrayOfDatabases\n                type: array\n                items:\n                  $ref: '#/components/schemas/database'\n        '403':\n          $ref: '#/components/responses/notAllowed'\n  '/db/{database}/':\n    parameters:\n      - $ref: '#/components/parameters/database'\n    get:\n      x-swagger-router-controller: tdp_core\n      operationId: sql.list_view\n      description: list all views of a given database\n      tags:\n        - db\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                title: ArrayOfViews\n                type: array\n                items:\n                  $ref: '#/components/schemas/view'\n        '403':\n          $ref: '#/components/responses/notAllowed'\n        '404':\n          $ref: '#/components/responses/notFound'\n  '/db/{database}/{view}':\n    parameters:\n      - $ref: '#/components/parameters/database'\n      - $ref: '#/components/parameters/view'\n    get:\n      x-swagger-router-controller: tdp_core\n      operationId: sql.get_filtered_data\n      description: see the base version with additional filter possiblities\n      tags:\n        - db\n        - query_generic\n      parameters:\n        - $ref: '#/components/parameters/returnQuery'\n      responses:\n        '200':\n          $ref: '#/components/responses/entries_generic'\n        '403':\n          $ref: '#/components/responses/notAllowed'\n        '404':\n          $ref: '#/components/responses/notFound'\n  '/db/{database}/{view}/score':\n    parameters:\n      - $ref: '#/components/parameters/database'\n      - $ref: '#/components/parameters/view'\n    get:\n      x-swagger-router-controller: tdp_core\n      operationId: sql.get_score_data\n      description: \u003e-\n        see the base version with additional filter possibilities and score\n        mapping\n      tags:\n        - db\n        - query_score\n      parameters:\n        - $ref: '#/components/parameters/returnQuery'\n        - $ref: '#/components/parameters/format'\n        - $ref: '#/components/parameters/scoreTarget'\n      responses:\n        '200':\n          $ref: '#/components/responses/queryScore'\n        '403':\n          $ref: '#/components/responses/notAllowed'\n        '404':\n          $ref: '#/components/responses/notFound'\n  '/db/{database}/{view}/count':\n    parameters:\n      - $ref: '#/components/parameters/database'\n      - $ref: '#/components/parameters/view'\n    get:\n      x-swagger-router-controller: tdp_core\n      operationId: sql.get_count_data\n      description: see the base version but returns just the number of results\n      tags:\n        - db\n        - query_generic\n      responses:\n        '200':\n          $ref: '#/components/responses/queryCount'\n        '403':\n          $ref: '#/components/responses/notAllowed'\n        '404':\n          $ref: '#/components/responses/notFound'\n  '/db/{database}/{view}/desc':\n    parameters:\n      - $ref: '#/components/parameters/database'\n      - $ref: '#/components/parameters/view'\n    get:\n      x-swagger-router-controller: tdp_core\n      operationId: sql.get_desc\n      description: returns the description information of the given view\n      tags:\n        - db\n        - query_generic\n      responses:\n        '200':\n          $ref: '#/components/responses/queryDesc'\n        '403':\n          $ref: '#/components/responses/notAllowed'\n        '404':\n          $ref: '#/components/responses/notFound'\n  '/db/{database}/{view}/lookup':\n    parameters:\n      - $ref: '#/components/parameters/database'\n      - $ref: '#/components/parameters/view'\n    get:\n      x-swagger-router-controller: tdp_core\n      operationId: sql.lookup\n      description: lookups up the given query term using this view\n      tags:\n        - db\n        - query_lookup\n      parameters:\n        - $ref: '#/components/parameters/lookupQuery'\n        - $ref: '#/components/parameters/lookupPage'\n        - $ref: '#/components/parameters/lookupLimit'\n      responses:\n        '200':\n          $ref: '#/components/responses/queryLookup'\n        '403':\n          $ref: '#/components/responses/notAllowed'\n        '404':\n          $ref: '#/components/responses/notFound'\ncomponents:\n  parameters:\n    database:\n      name: database\n      description: the database key\n      in: path\n      required: true\n      schema:\n        type: string\n    view:\n      name: view\n      description: the view name\n      in: path\n      required: true\n      schema:\n        type: string\n    returnQuery:\n      name: _return_query\n      in: query\n      schema:\n        type: boolean\n        default: false\n      required: false\n    format:\n      name: _format\n      in: query\n      schema:\n        type: string\n        enum:\n          - json\n          - csv\n      required: false\n    lookupQuery:\n      name: query\n      in: query\n      required: true\n      description: the search string\n      schema:\n        type: string\n    lookupPage:\n      name: page\n      in: query\n      required: false\n      description: result page\n      schema:\n        type: integer\n        default: 0\n    lookupLimit:\n      name: limit\n      in: query\n      required: false\n      description: number of results per page\n      schema:\n        type: integer\n        default: 30\n    scoreTarget:\n      name: target\n      in: query\n      required: false\n      description: target idtype to map the resulting scores to\n      schema:\n        type: string\n  responses:\n    queryDesc:\n      description: Successful response\n      content:\n        application/json:\n          schema:\n            title: column description\n            type: object\n            properties:\n              idType:\n                type: string\n                description: the IDType of resulting rows\n              columns:\n                $ref: '#/components/schemas/columns'\n    queryLookup:\n      description: Successful response\n      content:\n        application/json:\n          schema:\n            title: column description\n            type: object\n            properties:\n              more:\n                type: boolean\n                description: whether more results exists\n              items:\n                type: object\n                properties:\n                  _id:\n                    type: integer\n                    description: the system wide unique id\n                  id:\n                    type: string\n                    description: the id of the found entry\n                  text:\n                    type: string\n                    description: label that matched the given query\n    queryCount:\n      description: Successful response\n      content:\n        application/json:\n          schema:\n            oneOf:\n              - title: number of records\n                type: integer\n              - $ref: '#/components/schemas/returnQueryResult'\n    queryScore:\n      description: Successful response\n      content:\n        text/csv:\n          schema:\n            type: string\n        application/json:\n          schema:\n            title: ArrayOfRows\n            type: array\n            items:\n              type: object\n              properties:\n                id:\n                  type: string\n              additionalProperties: true\n    entries_generic:\n      description: Successful response\n      content:\n        text/csv:\n          schema:\n            type: string\n        application/json:\n          schema:\n            title: ArrayOfRows\n            type: array\n            items:\n              type: object\n              additionalProperties: true\n  schemas:\n    database:\n      type: string\n    view:\n      type: object\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n        arguments:\n          type: array\n          items:\n            type: string\n        type:\n          type: string\n        query:\n          type: string\n        columns:\n          $ref: '#/components/schemas/columns'\n        idType:\n          type: string\n        filters:\n          type: array\n          items:\n            type: string\n        queries:\n          type: object\n          additionalProperties: true\n      required:\n        - name\n        - description\n        - arguments\n        - query\n    columns:\n      type: array\n      description: list of columns\n      items:\n        $ref: '#/components/schemas/column'\n    column:\n      type: object\n      properties:\n        column:\n          type: string\n        label:\n          type: string\n        type:\n          type: string\n          enum:\n            - categorical\n            - number\n            - string\n        min:\n          type: number\n        max:\n          type: number\n        categories:\n          type: array\n          items:\n            type: string\n      required:\n        - column\n        - type\n        - label\n      additionalProperties: true\n    returnQueryResult:\n      type: object\n      properties:\n        query:\n          type: string\n        args:\n          type: object\n          additionalProperties: true\n      required:\n        - query\n        - args\n",
			"canonicalURL": "/npm/tdp_core@d9adfaf8612a370880cc9b397a772c18740b2608/-/blob/tdp_core/swagger/db.yml",
			"externalURLs": []
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/db/\": get: operation \"sql.list_databases\": responses: 403: at tdp_core/swagger/db.yml:30:17: can't find value for \"components/responses/notAllowed\""
}