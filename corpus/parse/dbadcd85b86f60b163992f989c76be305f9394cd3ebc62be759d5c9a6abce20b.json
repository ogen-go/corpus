{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Podcastindex-org/docs-api"
		},
		"file": {
			"name": "root.yaml",
			"size": 0,
			"path": "api_src/root.yaml",
			"byteSize": 7469,
			"content": "openapi: 3.0.2\ninfo:\n  version: 1.7.2\n  title: PodcastIndex.org API\n  termsOfService: 'https://github.com/Podcastindex-org/legal/blob/main/TermsOfService.md'\n  contact:\n    email: info@podcastindex.org\n    url: 'https://podcastindex.org/'\n  license:\n    name: MIT\n    url: 'https://github.com/Podcastindex-org/docs-api/blob/master/LICENSE'\n  x-logo:\n    url: 'logo.svg'\n    href: '/'\n  # language=Markdown\n  description: >\n    Download the openapi spec in [json](pi_api.json) or [yaml](pi_api.yaml) format.\n\n    # Overview\n\n    The Podcast Index (Podcast Index LLC) is a software developer focused partnership that provides tools and data to\n    anyone who aspires to create new and exciting Podcast experiences without the heavy lifting of indexing,\n    aggregation and data management.\n\n    # Example Code\n\n    Users have provided example code for working the API in the following languages:\n\n      - [AWS Lambda - python](https://github.com/tbowers/python-podcastindex-org-lambda)\n      - [Bash](https://github.com/suorcd/Bash-podcastindex-org-example)\n      - [C#](https://github.com/ComicStrip/csharp-podcastindex-org-example)\n      - [Elisp](https://github.com/sabexx/elisp-example)\n      - [Flutter/Dart](https://github.com/crediblecreative/flutter-dart-podcastindex-org-example)\n      - [Go](https://github.com/ComicStrip/Go-podcastindex-org-example)\n      - [Go](https://github.com/kilobit/podcast-index-client)\n      - [Java](https://github.com/ComicStrip/Java-podcastindex-org-example)\n      - [Java](https://github.com/stucoates/PodcastIndexJavaClient)\n      - [Node.js](https://github.com/ComicStrip/node.js-podcastindex-org-example)\n      - [PHP](https://github.com/Podcastindex-org/example-code)\n      - [Python](https://github.com/tbowers/python-podcastindex-org-example)\n      - [Swift](https://github.com/ComicStrip/Swift-podcastindex-org-example)\n      - ... [More](https://github.com/Podcastindex-org-Examples)\n\n    Don't see your desired language, create an example repo and create a\n    [Pull Request](https://github.com/Podcastindex-org/docs-api/pulls) with a link to your example code project!\n\n    # Libraries\n\n    User created libraries for working with the API:\n\n      - Node.js/npm/yarn\n          - [podcast-index-api](https://www.npmjs.com/package/podcast-index-api)\n          - [podcastdx-client](https://www.npmjs.com/package/podcastdx-client)\n      - Python/pip\n          - [python-podcastindex](https://pypi.org/project/python-podcastindex/)\n      - .NET\n          - [PodcastIndexSharp](https://www.nuget.org/packages/PodcastIndexSharp)\n\n    Are we missing a library? Did you create one for a different language? Create a\n    [Pull Request](https://github.com/Podcastindex-org/docs-api/pulls) with a link to the new library!\n\n    # Postman\n\n    A collection file for use in the [Postman](https://www.postman.com/) application is available for this API.\n\n      1. Download the contents of the [Postman Docs](https://github.com/Podcastindex-org/docs-api/tree/master/Postman%20Docs) folder.\n      2. Import the `PodcastIndex.postman_collection.json` collection to Postman\n      3. Import the `PodcastIndexOrgEnvironment.postman_environment.json` to Postman\n      4. Set the `AuthKey` environment variable\n      5. Set the `SecretKey` environment variable\n      6. Hit the Send button (âŒ˜ + return)\n\n    # Contributing\n\n    The source for this API documentation is available at\n    [https://github.com/Podcastindex-org/docs-api](https://github.com/Podcastindex-org/docs-api).\n    Submit an Issue or create a Pull Request.\n\n    # Authentication Details\n\n    Sending an API request is easy. We use an Amazon-style request authorization token to secure each request.\n\n\n    Register for a free API key at https://api.podcastindex.org/\n\n\n    These headers parameters are required for each request: `User-Agent`, `X-Auth-Date`, `X-Auth-Key`, `Authorization`\n\n\n    See [Authentication](#auth) for description of parameters.\n\n    # Legal\n    \n    Legal\n\n      - [Privacy Policy](https://github.com/Podcastindex-org/legal/blob/main/PrivacyPolicy.md)\n      - [Terms of Service](https://github.com/Podcastindex-org/legal/blob/main/TermsOfService.md)\n      - [License](https://github.com/Podcastindex-org/docs-api/blob/master/LICENSE)\n\ntags:\n  - name: Search\n    # language=Markdown\n    description: >\n      Search the index\n  - name: Podcasts\n    # language=Markdown\n    description: >\n      Find details about a Podcast and its feed.\n  - name: Episodes\n    # language=Markdown\n    description: >\n      Find details about one or more episodes of a podcast or podcasts.\n  - name: Recent\n    # language=Markdown\n    description: >\n      Find recent additions to the index\n  - name: Value\n    # language=Markdown\n    description: >\n      The podcast's \"Value for Value\" information\n  - name: Stats\n    # language=Markdown\n    description: >\n      Statistics for items in the Podcast Index\n  - name: Categories\n    # language=Markdown\n    description: >\n      Categories used by the Podcast Index\n  - name: Hub\n    # language=Markdown\n    description: >\n      Notify the index that a feed has changed\n  - name: Add\n    # language=Markdown\n    description: >\n      Add new podcast feeds to the index.\n\n\n      **NOTE**: To add to the index, the API Key must have write or publisher permissions.\nservers:\n  - url: 'https://api.podcastindex.org/api/1.0'\ncomponents:\n  securitySchemes:\n    User Agent:\n      $ref: 'components/securitySchemes/User-Agent.yaml'\n    API Key:\n      $ref: 'components/securitySchemes/API-Key.yaml'\n    Date:\n      $ref: 'components/securitySchemes/Date.yaml'\n    Authorization:\n      $ref: 'components/securitySchemes/Authorization.yaml'\npaths:\n  '/search/byterm':\n    $ref: 'paths/search/byterm.yaml'\n  '/search/bytitle':\n    $ref: 'paths/search/bytitle.yaml'\n  '/search/byperson':\n    $ref: 'paths/search/byperson.yaml'\n  '/podcasts/byfeedid':\n    $ref: 'paths/podcasts/byfeedid.yaml'\n  '/podcasts/byfeedurl':\n    $ref: 'paths/podcasts/byfeedurl.yaml'\n  '/podcasts/byitunesid':\n    $ref: 'paths/podcasts/byitunesid.yaml'\n  '/podcasts/byguid':\n    $ref: 'paths/podcasts/byguid.yaml'\n  '/podcasts/bytag':\n    $ref: 'paths/podcasts/bytag.yaml'\n  '/podcasts/trending':\n    $ref: 'paths/podcasts/trending.yaml'\n  '/podcasts/dead':\n    $ref: 'paths/podcasts/dead.yaml'\n  '/episodes/byfeedid':\n    $ref: 'paths/episodes/byfeedid.yaml'\n  '/episodes/byfeedurl':\n    $ref: 'paths/episodes/byfeedurl.yaml'\n  '/episodes/byitunesid':\n    $ref: 'paths/episodes/byitunesid.yaml'\n  '/episodes/byid':\n    $ref: 'paths/episodes/byid.yaml'\n  '/episodes/byguid':\n    $ref: 'paths/episodes/byguid.yaml'\n  '/episodes/random':\n    $ref: 'paths/episodes/random.yaml'\n  '/recent/episodes':\n    $ref: 'paths/recent/episodes.yaml'\n  '/recent/feeds':\n    $ref: 'paths/recent/feeds.yaml'\n  '/recent/newfeeds':\n    $ref: 'paths/recent/newfeeds.yaml'\n  '/recent/soundbites':\n    $ref: 'paths/recent/soundbites.yaml'\n  '/value/byfeedid':\n    $ref: 'paths/value/byfeedid.yaml'\n  '/value/byfeedurl':\n    $ref: 'paths/value/byfeedurl.yaml'\n  '/stats/current':\n    $ref: 'paths/stats/current.yaml'\n  '/categories/list':\n    $ref: 'paths/categories/list.yaml'\n  '/hub/pubnotify':\n    $ref: 'paths/hub/pubnotify.yaml'\n  '/add/byfeedurl':\n    $ref: 'paths/add/byfeedurl.yaml'\n  '/add/byitunesid':\n    $ref: 'paths/add/byitunesid.yaml'\n  # currently not used and has some bugs. leaving off for now\n  #'/add/batch/byfeedurl':\n  #  $ref: 'paths/add/batch/byfeedurl.yaml'\n",
			"canonicalURL": "/github.com/Podcastindex-org/docs-api@9001e7c04a72cd542d2b6b234a2ea94a7612fbcf/-/blob/api_src/root.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Podcastindex-org/docs-api/blob/9001e7c04a72cd542d2b6b234a2ea94a7612fbcf/api_src/root.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/categories/list\": at 1:4472: referenced pathItem not supported"
}