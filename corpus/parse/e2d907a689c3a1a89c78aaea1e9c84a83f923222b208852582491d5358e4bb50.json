{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/JHUAPL/PINE"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "backend/pine/backend/admin/openapi.yaml",
			"byteSize": 12309,
			"content": "# (C) 2021 The Johns Hopkins University Applied Physics Laboratory LLC.\n\nopenapi: \"3.0.2\"\n\nsecurity:\n  - cookieAuth: []\n  - eveBasicAuth: []\n\ntags:\n  - name: admin\n    description: \u003e\n      Operations in the \"admin\" blueprint.  These operations are generally only available when the\n      \"eve\" auth module is running and are only accessible to logged-in users that are\n      administrators.\n\ncomponents:\n\n  schemas:\n\n    UserRoles:\n      description: The role (for permissions) of the user.\n      type: array\n      items:\n        type: string\n        enum: [administrator, user]\n\n    NewUserData:\n      type: object\n      properties:\n        id:\n          type: string\n        email:\n          type: string\n        passwd:\n          type: string\n        description:\n          type: string\n        firstname:\n          type: string\n        lastname:\n          type: string\n        role:\n          $ref: \"#/components/schemas/UserRoles\"\n      required:\n        - id\n        - email\n        - passwd\n        - firstname\n        - lastname\n        - roles\n\n    UpdateUserData:\n      type: object\n      properties:\n        _id:\n          type: string\n        _etag:\n          type: string\n        description:\n          type: string\n        firstname:\n          type: string\n        lastname:\n          type: string\n        email:\n          type: string\n          description: If this is not included, you wont be able to log in.\n        passwdhash:\n          type: string\n          description: Setting this manually might break the password.\n        role:\n          $ref: \"#/components/schemas/UserRoles\"\n      required:\n        - _id\n        - _etag\n        - firstname\n        - lastname\n        - passwdhash\n        - role\n\npaths:\n\n  /admin/users:\n    get:\n      summary: Get All User Information\n      description: |\n        Get a list of all users (and details: id, email, password hash).\n        \n        Example: `curl -X GET http://localhost:5000/admin/users --cookie admin.cookie`\n        \n        _Note_: this endpoint requires the logged in user to be an admin and is only relevant if\n        the auth module supports it.\n      operationId: admin_get_users\n      tags: [admin]\n      responses:\n        \"200\":\n          description: Returned list of user details.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"../api/components.yaml#/schemas/UserInfo\"\n        \"401\":\n          $ref: \"../api/components.yaml#/responses/NotAuthorizedOrNotAdmin\"\n        default:\n          $ref: \"../api/components.yaml#/responses/UnexpectedServerError\"\n\n    post:\n      summary: Create New User\n      description: |\n        Create a new user.\n        \n        Example: `curl -X Post http://localhost:5000/admin/users -d '{\"id\":\"joe\", \"passwd\":\"mypass\", \"email\":\"joe@pine.jhuapl.edu\", \"description\": \"\", \"firstname\":\"joe\", \"lastname\":\"jones\"}' -H \"Content-type:application/json\" --cookie admin.cookie`\n        \n        _Note_: this endpoint requires the logged in user to be an admin and is only relevant if\n        the auth module supports it.\n      operationId: admin_add_user\n      tags: [admin]\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/NewUserData\"\n      responses:\n        \"200\":\n          description: Return id info of newly created user.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"../api/components.yaml#/schemas/IDInfo\"\n        \"400\":\n          $ref: \"../api/components.yaml#/responses/InvalidInputParameters\"\n        \"401\":\n          $ref: \"../api/components.yaml#/responses/NotAuthorizedOrNotAdmin\"\n        \"409\":\n          description: User with that ID/email already exists.\n          content: {application/json: {schema: {$ref: \"../api/components.yaml#/schemas/ErrorResponse\"}}}\n        default:\n          $ref: \"../api/components.yaml#/responses/UnexpectedServerError\"\n\n  /admin/users/{user_id}:\n    get:\n      summary: Get User Details\n      description: |\n        Get details (id, email, password hash...) of a certain user.\n        \n        Example: `curl -X GET http://localhost:5000/admin/users/ada --cookie admin.cookie`\n        \n        _Note_: this endpoint requires the logged in user to be an admin and is only relevant if\n        the auth module supports it.\n      operationId: admin_get_user\n      tags: [admin]\n      parameters:\n        - $ref: \"../api/components.yaml#/parameters/userIdParam\"\n      responses:\n        \"200\":\n          description: Successfully found the user and returned their details.\n          content:\n            application/json:\n              schema:\n                $ref: \"../api/components.yaml#/schemas/UserInfo\"\n        \"401\":\n          $ref: \"../api/components.yaml#/responses/NotAuthorizedOrNotAdmin\"\n        \"404\":\n          description: No user found with that ID.\n        default:\n          $ref: \"../api/components.yaml#/responses/UnexpectedServerError\"\n\n    put:\n      summary: Update user details.\n      description: |\n        Update user details.\n        \n        Example: `curl -X PUT http://localhost:5000/admin/users/ada -d '{\"_id\":\"ada\",\"description\":\"newdesc\", \"firstname\":\"newada\", \"lastname\":\"adalast\", \"_etag\":\"1c12354ee74f5d5732231ac5034f7915fb167244\", \"email\":\"ada@pine.jhuapl.edu\"}' -H \"Content-type:application/json\" --cookie admin.cookie`\n        \n        _Note_: this endpoint requires the logged in user to be an admin and is only relevant if\n        the auth module supports it.\n      operationId: admin_update_user\n      tags: [admin]\n      parameters:\n        - $ref: \"../api/components.yaml#/parameters/userIdParam\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateUserData\"\n      responses:\n        \"200\":\n          description: Successfully changed user information\n          content:\n            application/json:\n              schema:\n                $ref: \"../api/components.yaml#/schemas/IDInfo\"\n        \"401\":\n          $ref: \"../api/components.yaml#/responses/NotAuthorizedOrNotAdmin\"\n        \"404\":\n          description: No user found with that ID.\n        \"412\":\n          $ref: \"../api/components.yaml#/responses/MismatchedEtag\"\n        \"422\":\n          $ref: \"../api/components.yaml#/responses/InvalidInputParameters\"\n        default:\n          $ref: \"../api/components.yaml#/responses/UnexpectedServerError\"\n\n    delete:\n      summary: Delete User\n      description: |\n        Delete a user.\n        \n        _Note_: this endpoint requires the logged in user to be an admin and is only relevant if\n        the auth module supports it.\n      operationId: admin_delete_user\n      tags: [admin]\n      parameters:\n        - $ref: \"../api/components.yaml#/parameters/userIdParam\"\n      responses:\n        \"204\":\n          description: Successfully deleted user.\n        \"401\":\n          $ref: \"../api/components.yaml#/responses/NotAuthorizedOrNotAdmin\"\n        \"404\":\n          description: No user found with that ID.\n        default:\n          $ref: \"../api/components.yaml#/responses/UnexpectedServerError\"\n\n  /admin/users/{user_id}/password:\n    put:\n      summary: Update User Password\n      description: |\n        Update the password of a user.\n        \n        Example: `curl -X post http://localhost:5000/admin/users/ada/password -d '{\"passwd\":\"newpass\"}' -H \"Content-type:application/json\" --cookie admin.cookie`\n        \n        _Note_: this endpoint requires the logged in user to be an admin and is only relevant if\n        the auth module supports it.\n      operationId: admin_update_user_password\n      tags: [admin]\n      parameters:\n        - $ref: \"../api/components.yaml#/parameters/userIdParam\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                passwd:\n                  type: string\n              required:\n                - passwd\n      responses:\n        \"200\":\n          description: \"Successfully changed user password\"\n          content:\n            application/json:\n              schema:\n                $ref: \"../api/components.yaml#/schemas/IDInfo\"\n        \"401\":\n          $ref: \"../api/components.yaml#/responses/NotAuthorizedOrNotAdmin\"\n        \"404\":\n          description: No user found with that ID.\n        default:\n          $ref: \"../api/components.yaml#/responses/UnexpectedServerError\"\n\n  /admin/system/export:\n    get:\n      summary: Export Database\n      description: |\n        Export the database to a zip file.\n        \n        Example: `curl -X GET http://localhost:5000/admin/system/export --cookie admin.cookie -v --output out.zip`\n        \n        _Note_: this endpoint requires the logged in user to be an admin and is only relevant if\n        the auth module supports it.\n      operationId: admin_system_export\n      tags: [admin]\n      responses:\n        \"200\":\n          description: \"Successfully exported database\"\n          content:\n            application/gzip: {}\n        \"401\":\n          $ref: \"../api/components.yaml#/responses/NotAuthorizedOrNotAdmin\"\n        default:\n          $ref: \"../api/components.yaml#/responses/UnexpectedServerError\"\n\n  /admin/system/import:\n    put:\n      summary: Import Database (Update)\n      description: |\n        Import the database given in request body.  This will _update_ and not _replace_ the\n        database.\n        \n        Example: `curl -X PUT http://localhost:5000/admin/system/import --cookie admin.cookie -F \"file=@/home/pine/out.zip\"`\n        \n        _Note_: this endpoint requires the logged in user to be an admin and is only relevant if\n        the auth module supports it.\n      operationId: admin_system_import_put\n      tags: [admin]\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                file:\n                  type: string\n                  format: binary\n              required:\n                - file\n      responses:\n        \"200\":\n          $ref: \"../api/components.yaml#/responses/Success\"\n        \"400\":\n          description: The loading of data was wrong. Should be a gz, like what is exported.\n          content: {application/json: {schema: {$ref: \"../api/components.yaml#/schemas/ErrorResponse\"}}}\n        \"401\":\n          $ref: \"../api/components.yaml#/responses/NotAuthorizedOrNotAdmin\"\n        \"422\":\n          description: The file argument was not present.\n          content: {application/json: {schema: {$ref: \"../api/components.yaml#/schemas/ErrorResponse\"}}}\n        default:\n          $ref: \"../api/components.yaml#/responses/UnexpectedServerError\"\n\n    post:\n      summary: Import Database (Replace)\n      description: |\n        Import the database given in request body.  This will _replace_ and not _update_ the\n        database.\n        \n        Example: `curl -X POST http://localhost:5000/admin/system/import --cookie admin.cookie -F \"file=@/home/pine/out.zip\"`\n        \n        _Note_: this endpoint requires the logged in user to be an admin and is only relevant if\n        the auth module supports it.\n      operationId: admin_system_import_post\n      tags: [admin]\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                file:\n                  type: string\n                  format: binary\n              required:\n                - file\n      responses:\n        \"200\":\n          $ref: \"../api/components.yaml#/responses/Success\"\n        \"400\":\n          description: The loading of data was wrong. Should be a gz, like what is exported.\n          content: {application/json: {schema: {$ref: \"../api/components.yaml#/schemas/ErrorResponse\"}}}\n        \"401\":\n          $ref: \"../api/components.yaml#/responses/NotAuthorizedOrNotAdmin\"\n        \"422\":\n          description: The file argument was not present.\n          content: {application/json: {schema: {$ref: \"../api/components.yaml#/schemas/ErrorResponse\"}}}\n        default:\n          $ref: \"../api/components.yaml#/responses/UnexpectedServerError\"\n"
		}
	},
	"Error": "parse: parse spec: paths: /admin/system/export: get: operation \"admin_system_export\": responses: 401: resolve \"../api/components.yaml#/responses/NotAuthorizedOrNotAdmin\" reference: invalid response reference: \"../api/components.yaml#/responses/NotAuthorizedOrNotAdmin\""
}