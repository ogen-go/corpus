{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/plantbreeding/BrAPI"
		},
		"file": {
			"name": "ObservationLevels_GET.yaml",
			"size": 0,
			"path": "Specification/BrAPI-Phenotyping/ObservationUnits/ObservationLevels_GET.yaml",
			"byteSize": 3068,
			"content": "info:\n  title: BrAPI\n  version: ''\nopenapi: 3.0.0\npaths:\n  /observationlevels:\n    get:\n      summary: Get the Observation Levels\n      description: |-\n        Call to retrieve the list of supported observation levels. \n        \n        Observation levels indicate the granularity level at which the measurements are taken. `levelName` defines the level, `levelOrder` defines where that level exists in the hierarchy of levels. `levelOrder`s lower numbers are at the top of the hierarchy (ie field \u003e 0) and higher numbers are at the bottom of the hierarchy (ie plant \u003e 6). \n        \n        The values are used to supply the `observationLevel` parameter in the observation unit details call.\n              \n        For more information on Observation Levels, please review the \u003ca target=\"_blank\" href=\"https://wiki.brapi.org/index.php/Observation_Levels\"\u003eObservation Levels documentation\u003c/a\u003e.\n      parameters:\n      - description: Filter by study DbId\n        in: query\n        name: studyDbId\n        required: false\n        schema:\n          type: string\n      - description: Filter by trial DbId\n        in: query\n        name: trialDbId\n        required: false\n        schema:\n          type: string\n      - description: Filter by program DbId\n        in: query\n        name: programDbId\n        required: false\n        schema:\n          type: string\n      - $ref: '#/components/parameters/page'\n      - $ref: '#/components/parameters/pageSize'\n      - $ref: '#/components/parameters/authorizationHeader'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                title: ObservationLevelListResponse\n                type: object\n                properties:\n                  '@context':\n                    $ref: '#/components/schemas/Context'\n                  metadata:\n                    $ref: '#/components/schemas/metadata'\n                  result:\n                    required:\n                    - data\n                    type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/ObservationUnitHierarchyLevel'\n                        example:\n                          - levelName: field\n                            levelOrder: 0\n                          - levelName: block\n                            levelOrder: 1\n                          - levelName: plot\n                            levelOrder: 2\n                          - levelName: sub-plot\n                            levelOrder: 3\n                          - levelName: plant\n                            levelOrder: 4\n                required:\n                - metadata\n                - result\n          description: OK\n          headers: {}\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n      tags:\n      - Observation Units\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /observationlevels: get: parameters: parse parameter \"\": resolve \"#/components/parameters/page\" reference: component by reference \"#/components/parameters/page\" not found"
}