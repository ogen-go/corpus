{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/wikimedia/restbase"
		},
		"file": {
			"name": "mobile-html.yaml",
			"size": 0,
			"path": "v1/pcs/mobile-html.yaml",
			"byteSize": 7137,
			"content": "openapi: 3.0.1\ninfo:\n  version: 1.0.0-beta\n  title: MediaWiki page mobile-html API\n  description: API for retrieving page content for reading purposes\n  termsOfService: https://www.mediawiki.org/wiki/REST_API#Terms_and_conditions\n  contact:\n    name: Product Infrastructure\n    url: https://www.mediawiki.org/wiki/Wikimedia_Product/Wikimedia_Product_Infrastructure_team\n  license:\n    name: Apache licence, v2\n    url: https://www.apache.org/licenses/LICENSE-2.0\npaths:\n  /mobile-html/{title}:\n    x-route-filters:\n      - path: ./lib/access_check_filter.js\n        options:\n          redirect_cache_control: '{{options.response_cache_control}}'\n      - path: lib/security_response_header_filter.js\n        options:\n          mobile_html: true\n      - path: lib/language_variants_filter.js\n      - path: lib/ensure_content_type.js\n    get: \u0026mobile-html_title_revision_get_spec\n      tags:\n        - Page content\n      summary: Get page content HTML optimized for mobile consumption.\n      description: |\n        Gets the content HTML optimized for mobile consumption for the given page. This content\n        is derived from Parsoid HTML (see `/page/html/{title}` endpoint).\n        The difference to Parsoid HTML is roughly:\n        * Some elements and attributes not needed for the reading case are removed.\n        * LeadIntroductionTransform: The introductory paragraph is moved before an infobox.\n        * RedLinks: Red links are flattened (=turned into span elements).\n        * WidenImage: images that should be displayed in gallery are widened.\n        * Section headings are slightly changed by wrapping the headings inside a div and adding\n          a span element inside the new div for the edit buttons.\n        * Additional classes are added to img elements to fix issues with non-white backgrounds.\n          See Theme support below for instructions on how to enable that.\n        * Pagelib CSS files needed to display the content are referenced.\n        * LazyLoadTransform: server-side portion/prep for lazy loading of images.\n        * CollapseTable: server-side portion/prep for collapsing tables.\n\n        What's not included? What parts of the PageLibrary does a client still have to do?\n        * Theme support: Themes can be turned on by adding a theme class to the root \u003chtml\u003e tag.\n          Possible class names are:\n          * `pagelib_theme_default`\n          * `pagelib_theme_dark`\n          * `pagelib_theme_black`\n          * `pagelib_theme_sepia`\n\n          The pagelib JS has functionality to do that: ThemeTransform.setTheme(document, theme).\n        * Dim images: DimImagesTransform.dim(window, enable)\n        * PlatformTransform.classify(window) to trigger Android and iOS app specific CSS rules\n        * LazyLoadTransformer: client side companion of LazyLoadTransform (note the extra *er*\n        here)\n        * FooterTransformer: seems to be more UI than content, requires I18N, too\n\n        Stability: [experimental](https://www.mediawiki.org/wiki/API_versioning#Experimental)\n      parameters:\n        - name: title\n          in: path\n          description: 'Page title. Use underscores instead of spaces. Use percent-encoding. Example: `Main_Page`.'\n          required: true\n          schema:\n            type: string\n        - name: redirect\n          in: query\n          description: |\n            Requests for [redirect pages](https://www.mediawiki.org/wiki/Help:Redirects) return HTTP 302 with a redirect target in `Location` header and content in the body.\n            To get a 200 response instead, supply `false` to the `redirect` parameter.\n          schema:\n            type: boolean\n      responses:\n        200:\n          description: mobile-optimized HTML of the given page.\n          headers:\n            ETag:\n              description: |\n                Syntax: \"{revision}/{tid}\". Example: \"701384379/154d7bca-c264-11e5-8c2f-1b51b33b59fc\"\n              schema:\n                type: string\n          content:\n            text/html; charset=utf-8; profile=\"https://www.mediawiki.org/wiki/Specs/Mobile-HTML/1.2.2\":\n              schema:\n                type: string\n        301:\n          description: |\n            A permanent redirect is returned if the supplied article title was not in the normalized form.\n            To avoid this kind of redirect, you can use the [mediawiki-title](https://github.com/wikimedia/mediawiki-title) library to perform\n            title normalization client-side.\n\n            Beware that redirected pre-flighted cross-origin requests (such as those sending custom request headers like `Api-User-Agent`)\n            will fail in most current browsers [due to a spec bug](https://github.com/whatwg/fetch/issues/204).\n        302:\n          description: |\n            The page is a [redirect page](https://www.mediawiki.org/wiki/Help:Redirects).\n            The `location` header points to the redirect target.\n            If you would like to avoid automatically following redirect pages, set the `redirect=false` query parameter.\n\n            Beware that redirected pre-flighted cross-origin requests (such as those sending custom request headers like `Api-User-Agent`)\n            will fail in most current browsers [due to a spec bug](https://github.com/whatwg/fetch/issues/204).\n        404:\n          description: Unknown page title\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n        default:\n          description: Error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n      operationId: getContent-mobile-html\n      x-monitor: true\n      x-amples:\n        - title: Get mobile-html from storage\n          request:\n            params:\n              domain: en.wikipedia.org\n              title: User:BSitzmann_(WMF)/MCS/Test/Frankenstein\n          response:\n            status: 200\n            headers:\n              etag: /.+/\n              content-type: /^text\\/html.+/\n            body: /^\u003c!DOCTYPE html\u003e.*/\n\n  /mobile-html/{title}/{revision}:\n    get:\n      \u003c\u003c: *mobile-html_title_revision_get_spec\n      parameters:\n        - name: title\n          in: path\n          description: 'Page title. Use underscores instead of spaces. Use percent-encoding. Example: `Main_Page`.'\n          required: true\n          schema:\n            type: string\n        - name: revision\n          in: path\n          description: |\n            Optional page revision. Note that older revisions are not stored, so request latency with the revision would be higher.\n          required: true\n          schema:\n            type: integer\n        - name: redirect\n          in: query\n          description: |\n            Requests for [redirect pages](https://www.mediawiki.org/wiki/Help:Redirects) return HTTP 302 with a redirect target in `Location` header and content in the body.\n            To get a 200 response instead, supply `false` to the `redirect` parameter.\n          schema:\n            type: boolean\n      operationId: getContentWithRevision-mobile-html\n      x-monitor: false\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /mobile-html/{title}: get: operation \"getContent-mobile-html\": responses: 404: content: \"application/problem+json\": schema: parse schema: resolve \"#/components/schemas/problem\": find schema: resolve \"#/components/schemas/problem\": can't find value for \"components/schemas/problem\""
}