{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "amazonaws.com-cognito-idp-2016-04-18-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/amazonaws.com-cognito-idp-2016-04-18-swagger.yaml",
			"byteSize": 416274,
			"content": "openapi: 3.0.0\ninfo:\n  version: 2016-04-18\n  x-release: v4\n  title: Amazon Cognito Identity Provider\n  description: \u003cp\u003eUsing the Amazon Cognito User Pools API, you can create a user pool to\n    manage directories and users. You can authenticate a user to obtain tokens\n    related to user identity and access policies.\u003c/p\u003e \u003cp\u003eThis API reference\n    provides information about user pools in Amazon Cognito User Pools.\u003c/p\u003e\n    \u003cp\u003eFor more information, see the Amazon Cognito Documentation.\u003c/p\u003e\n  x-logo:\n    url: https://twitter.com/awscloud/profile_image?size=original\n    backgroundColor: \"#FFFFFF\"\n  termsOfService: https://aws.amazon.com/service-terms/\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: https://github.com/mermade/aws2openapi\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: http://www.apache.org/licenses/\n  x-providerName: amazonaws.com\n  x-serviceName: cognito-idp\n  x-origin:\n    - contentType: application/json\n      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/cognito-idp-2016-04-18.normal.json\n      converter:\n        url: https://github.com/mermade/aws2openapi\n        version: 1.0.0\n      x-apisguru-direct: true\n  x-apiClientRegistration:\n    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: https://docs.aws.amazon.com/cognito-idp/\nx-hasEquivalentPaths: true\nsecurity:\n  - hmac: []\npaths:\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.AddCustomAttributes:\n    post:\n      operationId: AddCustomAttributes\n      description: Adds additional user attributes to the user pool schema.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AddCustomAttributesResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"483\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"484\":\n          description: UserImportInProgressException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserImportInProgressException\"\n        \"485\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.AddCustomAttributes\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AddCustomAttributesRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminAddUserToGroup:\n    post:\n      operationId: AdminAddUserToGroup\n      description: \u003cp\u003eAdds the specified user to the specified group.\u003c/p\u003e \u003cp\u003eCalling this\n        action requires developer credentials.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"483\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"484\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"485\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.AdminAddUserToGroup\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AdminAddUserToGroupRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminConfirmSignUp:\n    post:\n      operationId: AdminConfirmSignUp\n      description: \u003cp\u003eConfirms user registration as an admin without using a confirmation\n        code. Works on any user.\u003c/p\u003e \u003cp\u003eCalling this action requires developer\n        credentials.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdminConfirmSignUpResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: UnexpectedLambdaException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnexpectedLambdaException\"\n        \"483\":\n          description: UserLambdaValidationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserLambdaValidationException\"\n        \"484\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"485\":\n          description: TooManyFailedAttemptsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyFailedAttemptsException\"\n        \"486\":\n          description: InvalidLambdaResponseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidLambdaResponseException\"\n        \"487\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"488\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"489\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"490\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.AdminConfirmSignUp\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AdminConfirmSignUpRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminCreateUser:\n    post:\n      operationId: AdminCreateUser\n      description: \u003cp\u003eCreates a new user in the specified user pool.\u003c/p\u003e \u003cp\u003eIf\n        \u003ccode\u003eMessageAction\u003c/code\u003e is not set, the default is to send a welcome\n        message via email or phone (SMS).\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis message is based on\n        a template that you configured in your call to or . This template\n        includes your custom sign-up instructions and placeholders for user name\n        and temporary password.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eAlternatively, you can call\n        AdminCreateUser with “SUPPRESS” for the \u003ccode\u003eMessageAction\u003c/code\u003e\n        parameter, and Amazon Cognito will not send any email. \u003c/p\u003e \u003cp\u003eIn either\n        case, the user will be in the \u003ccode\u003eFORCE_CHANGE_PASSWORD\u003c/code\u003e state\n        until they sign in and change their password.\u003c/p\u003e \u003cp\u003eAdminCreateUser\n        requires developer credentials.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdminCreateUserResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"483\":\n          description: UsernameExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UsernameExistsException\"\n        \"484\":\n          description: InvalidPasswordException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPasswordException\"\n        \"485\":\n          description: CodeDeliveryFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CodeDeliveryFailureException\"\n        \"486\":\n          description: UnexpectedLambdaException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnexpectedLambdaException\"\n        \"487\":\n          description: UserLambdaValidationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserLambdaValidationException\"\n        \"488\":\n          description: InvalidLambdaResponseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidLambdaResponseException\"\n        \"489\":\n          description: PreconditionNotMetException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PreconditionNotMetException\"\n        \"490\":\n          description: InvalidSmsRoleAccessPolicyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidSmsRoleAccessPolicyException\"\n        \"491\":\n          description: InvalidSmsRoleTrustRelationshipException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidSmsRoleTrustRelationshipException\"\n        \"492\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"493\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"494\":\n          description: UnsupportedUserStateException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnsupportedUserStateException\"\n        \"495\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.AdminCreateUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AdminCreateUserRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminDeleteUser:\n    post:\n      operationId: AdminDeleteUser\n      description: \u003cp\u003eDeletes a user as an administrator. Works on any user.\u003c/p\u003e \u003cp\u003eCalling\n        this action requires developer credentials.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"483\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"484\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"485\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.AdminDeleteUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AdminDeleteUserRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminDeleteUserAttributes:\n    post:\n      operationId: AdminDeleteUserAttributes\n      description: \u003cp\u003eDeletes the user attributes in a user pool as an administrator. Works\n        on any user.\u003c/p\u003e \u003cp\u003eCalling this action requires developer\n        credentials.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdminDeleteUserAttributesResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"483\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"484\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"485\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.AdminDeleteUserAttributes\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AdminDeleteUserAttributesRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminDisableProviderForUser:\n    post:\n      operationId: AdminDisableProviderForUser\n      description: \u003cp\u003eDisables the user from signing in with the specified external (SAML\n        or social) identity provider. If the user to disable is a Cognito User\n        Pools native username + password user, they are not permitted to use\n        their password to sign-in. If the user to disable is a linked external\n        IdP user, any link between that user and an existing user is removed.\n        The next time the external user (no longer attached to the previously\n        linked \u003ccode\u003eDestinationUser\u003c/code\u003e) signs in, they must create a new\n        user account. See .\u003c/p\u003e \u003cp\u003eThis action is enabled only for admin access\n        and requires developer credentials.\u003c/p\u003e \u003cp\u003eThe \u003ccode\u003eProviderName\u003c/code\u003e\n        must match the value specified when creating an IdP for the pool. \u003c/p\u003e\n        \u003cp\u003eTo disable a native username + password user, the\n        \u003ccode\u003eProviderName\u003c/code\u003e value must be \u003ccode\u003eCognito\u003c/code\u003e and the\n        \u003ccode\u003eProviderAttributeName\u003c/code\u003e must be \u003ccode\u003eCognito_Subject\u003c/code\u003e,\n        with the \u003ccode\u003eProviderAttributeValue\u003c/code\u003e being the name that is used\n        in the user pool for the user.\u003c/p\u003e \u003cp\u003eThe\n        \u003ccode\u003eProviderAttributeName\u003c/code\u003e must always be\n        \u003ccode\u003eCognito_Subject\u003c/code\u003e for social identity providers. The\n        \u003ccode\u003eProviderAttributeValue\u003c/code\u003e must always be the exact subject\n        that was used when the user was originally linked as a source user.\u003c/p\u003e\n        \u003cp\u003eFor de-linking a SAML identity, there are two scenarios. If the\n        linked identity has not yet been used to sign-in, the\n        \u003ccode\u003eProviderAttributeName\u003c/code\u003e and\n        \u003ccode\u003eProviderAttributeValue\u003c/code\u003e must be the same values that were\n        used for the \u003ccode\u003eSourceUser\u003c/code\u003e when the identities were originally\n        linked in the call. (If the linking was done with\n        \u003ccode\u003eProviderAttributeName\u003c/code\u003e set to \u003ccode\u003eCognito_Subject\u003c/code\u003e,\n        the same applies here). However, if the user has already signed in, the\n        \u003ccode\u003eProviderAttributeName\u003c/code\u003e must be \u003ccode\u003eCognito_Subject\u003c/code\u003e\n        and \u003ccode\u003eProviderAttributeValue\u003c/code\u003e must be the subject of the SAML\n        assertion.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdminDisableProviderForUserResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"483\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"484\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"485\":\n          description: AliasExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AliasExistsException\"\n        \"486\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.AdminDisableProviderForUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AdminDisableProviderForUserRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminDisableUser:\n    post:\n      operationId: AdminDisableUser\n      description: \u003cp\u003eDisables the specified user.\u003c/p\u003e \u003cp\u003eCalling this action requires\n        developer credentials.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdminDisableUserResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"483\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"484\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"485\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.AdminDisableUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AdminDisableUserRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminEnableUser:\n    post:\n      operationId: AdminEnableUser\n      description: \u003cp\u003eEnables the specified user as an administrator. Works on any\n        user.\u003c/p\u003e \u003cp\u003eCalling this action requires developer credentials.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdminEnableUserResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"483\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"484\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"485\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.AdminEnableUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AdminEnableUserRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminForgetDevice:\n    post:\n      operationId: AdminForgetDevice\n      description: \u003cp\u003eForgets the device, as an administrator.\u003c/p\u003e \u003cp\u003eCalling this action\n        requires developer credentials.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: InvalidUserPoolConfigurationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidUserPoolConfigurationException\"\n        \"483\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"484\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"485\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"486\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.AdminForgetDevice\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AdminForgetDeviceRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminGetDevice:\n    post:\n      operationId: AdminGetDevice\n      description: \u003cp\u003eGets the device, as an administrator.\u003c/p\u003e \u003cp\u003eCalling this action\n        requires developer credentials.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdminGetDeviceResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: InvalidUserPoolConfigurationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidUserPoolConfigurationException\"\n        \"483\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"484\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n        \"485\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.AdminGetDevice\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AdminGetDeviceRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminGetUser:\n    post:\n      operationId: AdminGetUser\n      description: \u003cp\u003eGets the specified user by user name in a user pool as an\n        administrator. Works on any user.\u003c/p\u003e \u003cp\u003eCalling this action requires\n        developer credentials.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdminGetUserResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"483\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"484\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"485\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.AdminGetUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AdminGetUserRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminInitiateAuth:\n    post:\n      operationId: AdminInitiateAuth\n      description: \u003cp\u003eInitiates the authentication flow, as an administrator.\u003c/p\u003e\n        \u003cp\u003eCalling this action requires developer credentials.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdminInitiateAuthResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"483\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"484\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n        \"485\":\n          description: UnexpectedLambdaException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnexpectedLambdaException\"\n        \"486\":\n          description: InvalidUserPoolConfigurationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidUserPoolConfigurationException\"\n        \"487\":\n          description: UserLambdaValidationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserLambdaValidationException\"\n        \"488\":\n          description: InvalidLambdaResponseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidLambdaResponseException\"\n        \"489\":\n          description: MFAMethodNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MFAMethodNotFoundException\"\n        \"490\":\n          description: InvalidSmsRoleAccessPolicyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidSmsRoleAccessPolicyException\"\n        \"491\":\n          description: InvalidSmsRoleTrustRelationshipException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidSmsRoleTrustRelationshipException\"\n        \"492\":\n          description: PasswordResetRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PasswordResetRequiredException\"\n        \"493\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"494\":\n          description: UserNotConfirmedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotConfirmedException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.AdminInitiateAuth\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AdminInitiateAuthRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminLinkProviderForUser:\n    post:\n      operationId: AdminLinkProviderForUser\n      description: \u003cp\u003eLinks an existing user account in a user pool\n        (\u003ccode\u003eDestinationUser\u003c/code\u003e) to an identity from an external identity\n        provider (\u003ccode\u003eSourceUser\u003c/code\u003e) based on a specified attribute name\n        and value from the external identity provider. This allows you to create\n        a link from the existing user account to an external federated user\n        identity that has not yet been used to sign in, so that the federated\n        user identity can be used to sign in as the existing user account. \u003c/p\u003e\n        \u003cp\u003e For example, if there is an existing user with a username and\n        password, this API links that user to a federated user identity, so that\n        when the federated user identity is used, the user signs in as the\n        existing user account. \u003c/p\u003e \u003cimportant\u003e \u003cp\u003eBecause this API allows a\n        user with an external federated identity to sign in as an existing user\n        in the user pool, it is critical that it only be used with external\n        identity providers and provider attributes that have been trusted by the\n        application owner.\u003c/p\u003e \u003c/important\u003e \u003cp\u003eSee also .\u003c/p\u003e \u003cp\u003eThis action is\n        enabled only for admin access and requires developer credentials.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdminLinkProviderForUserResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"483\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"484\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"485\":\n          description: AliasExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AliasExistsException\"\n        \"486\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.AdminLinkProviderForUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AdminLinkProviderForUserRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminListDevices:\n    post:\n      operationId: AdminListDevices\n      description: \u003cp\u003eLists devices, as an administrator.\u003c/p\u003e \u003cp\u003eCalling this action\n        requires developer credentials.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdminListDevicesResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: InvalidUserPoolConfigurationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidUserPoolConfigurationException\"\n        \"483\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"484\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n        \"485\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.AdminListDevices\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AdminListDevicesRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminListGroupsForUser:\n    post:\n      operationId: AdminListGroupsForUser\n      description: \u003cp\u003eLists the groups that the user belongs to.\u003c/p\u003e \u003cp\u003eCalling this action\n        requires developer credentials.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdminListGroupsForUserResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"483\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"484\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"485\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: Limit\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: NextToken\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.AdminListGroupsForUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AdminListGroupsForUserRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminListUserAuthEvents:\n    post:\n      operationId: AdminListUserAuthEvents\n      description: Lists a history of user activity and any risks detected as part of\n        Amazon Cognito advanced security.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdminListUserAuthEventsResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"483\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"484\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"485\":\n          description: UserPoolAddOnNotEnabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserPoolAddOnNotEnabledException\"\n        \"486\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: MaxResults\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: NextToken\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.AdminListUserAuthEvents\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AdminListUserAuthEventsRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminRemoveUserFromGroup:\n    post:\n      operationId: AdminRemoveUserFromGroup\n      description: \u003cp\u003eRemoves the specified user from the specified group.\u003c/p\u003e \u003cp\u003eCalling\n        this action requires developer credentials.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"483\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"484\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"485\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.AdminRemoveUserFromGroup\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AdminRemoveUserFromGroupRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminResetUserPassword:\n    post:\n      operationId: AdminResetUserPassword\n      description: \u003cp\u003eResets the specified user's password in a user pool as an\n        administrator. Works on any user.\u003c/p\u003e \u003cp\u003eWhen a developer calls this\n        API, the current password is invalidated, so it must be changed. If a\n        user tries to sign in after the API is called, the app will get a\n        PasswordResetRequiredException exception back and should direct the user\n        down the flow to reset the password, which is the same as the forgot\n        password flow. In addition, if the user pool has phone verification\n        selected and a verified phone number exists for the user, or if email\n        verification is selected and a verified email exists for the user,\n        calling this API will also result in sending a message to the end user\n        with the code to change their password.\u003c/p\u003e \u003cp\u003eCalling this action\n        requires developer credentials.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdminResetUserPasswordResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: UnexpectedLambdaException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnexpectedLambdaException\"\n        \"483\":\n          description: UserLambdaValidationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserLambdaValidationException\"\n        \"484\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"485\":\n          description: InvalidLambdaResponseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidLambdaResponseException\"\n        \"486\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"487\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"488\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"489\":\n          description: InvalidSmsRoleAccessPolicyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidSmsRoleAccessPolicyException\"\n        \"490\":\n          description: InvalidEmailRoleAccessPolicyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidEmailRoleAccessPolicyException\"\n        \"491\":\n          description: InvalidSmsRoleTrustRelationshipException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidSmsRoleTrustRelationshipException\"\n        \"492\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.AdminResetUserPassword\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AdminResetUserPasswordRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminRespondToAuthChallenge:\n    post:\n      operationId: AdminRespondToAuthChallenge\n      description: \u003cp\u003eResponds to an authentication challenge, as an administrator.\u003c/p\u003e\n        \u003cp\u003eCalling this action requires developer credentials.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdminRespondToAuthChallengeResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"483\":\n          description: CodeMismatchException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CodeMismatchException\"\n        \"484\":\n          description: ExpiredCodeException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ExpiredCodeException\"\n        \"485\":\n          description: UnexpectedLambdaException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnexpectedLambdaException\"\n        \"486\":\n          description: InvalidPasswordException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPasswordException\"\n        \"487\":\n          description: UserLambdaValidationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserLambdaValidationException\"\n        \"488\":\n          description: InvalidLambdaResponseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidLambdaResponseException\"\n        \"489\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"490\":\n          description: InvalidUserPoolConfigurationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidUserPoolConfigurationException\"\n        \"491\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n        \"492\":\n          description: MFAMethodNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MFAMethodNotFoundException\"\n        \"493\":\n          description: InvalidSmsRoleAccessPolicyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidSmsRoleAccessPolicyException\"\n        \"494\":\n          description: InvalidSmsRoleTrustRelationshipException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidSmsRoleTrustRelationshipException\"\n        \"495\":\n          description: AliasExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AliasExistsException\"\n        \"496\":\n          description: PasswordResetRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PasswordResetRequiredException\"\n        \"497\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"498\":\n          description: UserNotConfirmedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotConfirmedException\"\n        \"499\":\n          description: SoftwareTokenMFANotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SoftwareTokenMFANotFoundException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.AdminRespondToAuthChallenge\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AdminRespondToAuthChallengeRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminSetUserMFAPreference:\n    post:\n      operationId: AdminSetUserMFAPreference\n      description: Sets the user's multi-factor authentication (MFA) preference, including\n        which MFA options are enabled and if any are preferred. Only one factor\n        can be set as preferred. The preferred MFA factor will be used to\n        authenticate a user if multiple factors are enabled. If multiple options\n        are enabled and no preference is set, a challenge to choose an MFA\n        option will be returned during sign in.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdminSetUserMFAPreferenceResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"483\":\n          description: PasswordResetRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PasswordResetRequiredException\"\n        \"484\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"485\":\n          description: UserNotConfirmedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotConfirmedException\"\n        \"486\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.AdminSetUserMFAPreference\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AdminSetUserMFAPreferenceRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminSetUserPassword:\n    post:\n      operationId: AdminSetUserPassword\n      description: \u003cp\u003eSets the specified user's password in a user pool as an\n        administrator. Works on any user. \u003c/p\u003e \u003cp\u003eThe password can be temporary\n        or permanent. If it is temporary, the user status will be placed into\n        the \u003ccode\u003eFORCE_CHANGE_PASSWORD\u003c/code\u003e state. When the user next tries\n        to sign in, the InitiateAuth/AdminInitiateAuth response will contain the\n        \u003ccode\u003eNEW_PASSWORD_REQUIRED\u003c/code\u003e challenge. If the user does not sign\n        in before it expires, the user will not be able to sign in and their\n        password will need to be reset by an administrator. \u003c/p\u003e \u003cp\u003eOnce the\n        user has set a new password, or the password is permanent, the user\n        status will be set to \u003ccode\u003eConfirmed\u003c/code\u003e.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdminSetUserPasswordResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"482\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"483\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n        \"484\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"485\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"486\":\n          description: InvalidPasswordException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPasswordException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.AdminSetUserPassword\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AdminSetUserPasswordRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminSetUserSettings:\n    post:\n      operationId: AdminSetUserSettings\n      description: \" \u003ci\u003eThis action is no longer supported.\u003c/i\u003e You can use it to configure\n        only SMS MFA. You can't use it to configure TOTP software token MFA. To\n        configure either type of MFA, use the \u003ca\u003eAdminSetUserMFAPreference\u003c/a\u003e\n        action instead.\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdminSetUserSettingsResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"483\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"484\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.AdminSetUserSettings\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AdminSetUserSettingsRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminUpdateAuthEventFeedback:\n    post:\n      operationId: AdminUpdateAuthEventFeedback\n      description: Provides feedback for an authentication event as to whether it was from\n        a valid user. This feedback is used for improving the risk evaluation\n        decision for the user pool as part of Amazon Cognito advanced security.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdminUpdateAuthEventFeedbackResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"483\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"484\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"485\":\n          description: UserPoolAddOnNotEnabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserPoolAddOnNotEnabledException\"\n        \"486\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.AdminUpdateAuthEventFeedback\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AdminUpdateAuthEventFeedbackRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminUpdateDeviceStatus:\n    post:\n      operationId: AdminUpdateDeviceStatus\n      description: \u003cp\u003eUpdates the device status as an administrator.\u003c/p\u003e \u003cp\u003eCalling this\n        action requires developer credentials.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdminUpdateDeviceStatusResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: InvalidUserPoolConfigurationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidUserPoolConfigurationException\"\n        \"483\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"484\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"485\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"486\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.AdminUpdateDeviceStatus\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AdminUpdateDeviceStatusRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminUpdateUserAttributes:\n    post:\n      operationId: AdminUpdateUserAttributes\n      description: \u003cp\u003eUpdates the specified user's attributes, including developer\n        attributes, as an administrator. Works on any user.\u003c/p\u003e \u003cp\u003eFor custom\n        attributes, you must prepend the \u003ccode\u003ecustom:\u003c/code\u003e prefix to the\n        attribute name.\u003c/p\u003e \u003cp\u003eIn addition to updating user attributes, this API\n        can also be used to mark phone and email as verified.\u003c/p\u003e \u003cp\u003eCalling\n        this action requires developer credentials.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdminUpdateUserAttributesResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: UnexpectedLambdaException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnexpectedLambdaException\"\n        \"483\":\n          description: UserLambdaValidationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserLambdaValidationException\"\n        \"484\":\n          description: InvalidLambdaResponseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidLambdaResponseException\"\n        \"485\":\n          description: AliasExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AliasExistsException\"\n        \"486\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"487\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"488\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"489\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n        \"490\":\n          description: InvalidSmsRoleAccessPolicyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidSmsRoleAccessPolicyException\"\n        \"491\":\n          description: InvalidEmailRoleAccessPolicyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidEmailRoleAccessPolicyException\"\n        \"492\":\n          description: InvalidSmsRoleTrustRelationshipException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidSmsRoleTrustRelationshipException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.AdminUpdateUserAttributes\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AdminUpdateUserAttributesRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.AdminUserGlobalSignOut:\n    post:\n      operationId: AdminUserGlobalSignOut\n      description: \u003cp\u003eSigns out users from all devices, as an administrator.\u003c/p\u003e \u003cp\u003eCalling\n        this action requires developer credentials.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdminUserGlobalSignOutResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"483\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"484\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"485\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.AdminUserGlobalSignOut\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AdminUserGlobalSignOutRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.AssociateSoftwareToken:\n    post:\n      operationId: AssociateSoftwareToken\n      description: Returns a unique generated shared secret key code for the user account.\n        The request takes an access token or a session string, but not both.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AssociateSoftwareTokenResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"482\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"483\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n        \"484\":\n          description: SoftwareTokenMFANotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SoftwareTokenMFANotFoundException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.AssociateSoftwareToken\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AssociateSoftwareTokenRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.ChangePassword:\n    post:\n      operationId: ChangePassword\n      description: Changes the password for a specified user in a user pool.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ChangePasswordResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: InvalidPasswordException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPasswordException\"\n        \"483\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"484\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"485\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"486\":\n          description: PasswordResetRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PasswordResetRequiredException\"\n        \"487\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"488\":\n          description: UserNotConfirmedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotConfirmedException\"\n        \"489\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.ChangePassword\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ChangePasswordRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.ConfirmDevice:\n    post:\n      operationId: ConfirmDevice\n      description: Confirms tracking of the device. This API call is the call that begins\n        device tracking.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConfirmDeviceResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"483\":\n          description: InvalidPasswordException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPasswordException\"\n        \"484\":\n          description: InvalidLambdaResponseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidLambdaResponseException\"\n        \"485\":\n          description: UsernameExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UsernameExistsException\"\n        \"486\":\n          description: InvalidUserPoolConfigurationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidUserPoolConfigurationException\"\n        \"487\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"488\":\n          description: PasswordResetRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PasswordResetRequiredException\"\n        \"489\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"490\":\n          description: UserNotConfirmedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotConfirmedException\"\n        \"491\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.ConfirmDevice\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ConfirmDeviceRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.ConfirmForgotPassword:\n    post:\n      operationId: ConfirmForgotPassword\n      description: Allows a user to enter a confirmation code to reset a forgotten password.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConfirmForgotPasswordResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: UnexpectedLambdaException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnexpectedLambdaException\"\n        \"482\":\n          description: UserLambdaValidationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserLambdaValidationException\"\n        \"483\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"484\":\n          description: InvalidPasswordException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPasswordException\"\n        \"485\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"486\":\n          description: CodeMismatchException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CodeMismatchException\"\n        \"487\":\n          description: ExpiredCodeException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ExpiredCodeException\"\n        \"488\":\n          description: TooManyFailedAttemptsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyFailedAttemptsException\"\n        \"489\":\n          description: InvalidLambdaResponseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidLambdaResponseException\"\n        \"490\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"491\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"492\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"493\":\n          description: UserNotConfirmedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotConfirmedException\"\n        \"494\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.ConfirmForgotPassword\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ConfirmForgotPasswordRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.ConfirmSignUp:\n    post:\n      operationId: ConfirmSignUp\n      description: Confirms registration of a user and handles the existing alias from a\n        previous user.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConfirmSignUpResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: UnexpectedLambdaException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnexpectedLambdaException\"\n        \"483\":\n          description: UserLambdaValidationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserLambdaValidationException\"\n        \"484\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"485\":\n          description: TooManyFailedAttemptsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyFailedAttemptsException\"\n        \"486\":\n          description: CodeMismatchException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CodeMismatchException\"\n        \"487\":\n          description: ExpiredCodeException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ExpiredCodeException\"\n        \"488\":\n          description: InvalidLambdaResponseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidLambdaResponseException\"\n        \"489\":\n          description: AliasExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AliasExistsException\"\n        \"490\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"491\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"492\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"493\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.ConfirmSignUp\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ConfirmSignUpRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.CreateGroup:\n    post:\n      operationId: CreateGroup\n      description: \u003cp\u003eCreates a new group in the specified user pool.\u003c/p\u003e \u003cp\u003eCalling this\n        action requires developer credentials.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateGroupResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: GroupExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GroupExistsException\"\n        \"482\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"483\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"484\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"485\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"486\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.CreateGroup\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateGroupRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.CreateIdentityProvider:\n    post:\n      operationId: CreateIdentityProvider\n      description: Creates an identity provider for a user pool.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateIdentityProviderResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: DuplicateProviderException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DuplicateProviderException\"\n        \"482\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"483\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"484\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"485\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"486\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.CreateIdentityProvider\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateIdentityProviderRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.CreateResourceServer:\n    post:\n      operationId: CreateResourceServer\n      description: Creates a new OAuth2.0 resource server and defines custom scopes in it.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateResourceServerResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"483\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"484\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"485\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.CreateResourceServer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateResourceServerRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.CreateUserImportJob:\n    post:\n      operationId: CreateUserImportJob\n      description: Creates the user import job.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateUserImportJobResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"483\":\n          description: PreconditionNotMetException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PreconditionNotMetException\"\n        \"484\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"485\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"486\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.CreateUserImportJob\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateUserImportJobRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.CreateUserPool:\n    post:\n      operationId: CreateUserPool\n      description: Creates a new Amazon Cognito user pool and sets the password policy for\n        the pool.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateUserPoolResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"482\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"483\":\n          description: InvalidSmsRoleAccessPolicyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidSmsRoleAccessPolicyException\"\n        \"484\":\n          description: InvalidSmsRoleTrustRelationshipException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidSmsRoleTrustRelationshipException\"\n        \"485\":\n          description: InvalidEmailRoleAccessPolicyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidEmailRoleAccessPolicyException\"\n        \"486\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"487\":\n          description: UserPoolTaggingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserPoolTaggingException\"\n        \"488\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.CreateUserPool\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateUserPoolRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.CreateUserPoolClient:\n    post:\n      operationId: CreateUserPoolClient\n      description: Creates the user pool client.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateUserPoolClientResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"483\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"484\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"485\":\n          description: ScopeDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ScopeDoesNotExistException\"\n        \"486\":\n          description: InvalidOAuthFlowException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidOAuthFlowException\"\n        \"487\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.CreateUserPoolClient\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateUserPoolClientRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.CreateUserPoolDomain:\n    post:\n      operationId: CreateUserPoolDomain\n      description: Creates a new domain for a user pool.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateUserPoolDomainResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"482\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"483\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"484\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.CreateUserPoolDomain\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateUserPoolDomainRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.DeleteGroup:\n    post:\n      operationId: DeleteGroup\n      description: \u003cp\u003eDeletes a group. Currently only groups with no members can be\n        deleted.\u003c/p\u003e \u003cp\u003eCalling this action requires developer credentials.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"483\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"484\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.DeleteGroup\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeleteGroupRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.DeleteIdentityProvider:\n    post:\n      operationId: DeleteIdentityProvider\n      description: Deletes an identity provider for a user pool.\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: UnsupportedIdentityProviderException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnsupportedIdentityProviderException\"\n        \"482\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"483\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"484\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"485\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.DeleteIdentityProvider\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeleteIdentityProviderRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.DeleteResourceServer:\n    post:\n      operationId: DeleteResourceServer\n      description: Deletes a resource server.\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"483\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"484\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.DeleteResourceServer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeleteResourceServerRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.DeleteUser:\n    post:\n      operationId: DeleteUser\n      description: Allows a user to delete himself or herself.\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"483\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"484\":\n          description: PasswordResetRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PasswordResetRequiredException\"\n        \"485\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"486\":\n          description: UserNotConfirmedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotConfirmedException\"\n        \"487\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.DeleteUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeleteUserRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.DeleteUserAttributes:\n    post:\n      operationId: DeleteUserAttributes\n      description: Deletes the attributes for a user.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeleteUserAttributesResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"483\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"484\":\n          description: PasswordResetRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PasswordResetRequiredException\"\n        \"485\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"486\":\n          description: UserNotConfirmedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotConfirmedException\"\n        \"487\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.DeleteUserAttributes\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeleteUserAttributesRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.DeleteUserPool:\n    post:\n      operationId: DeleteUserPool\n      description: Deletes the specified Amazon Cognito user pool.\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"483\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"484\":\n          description: UserImportInProgressException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserImportInProgressException\"\n        \"485\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.DeleteUserPool\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeleteUserPoolRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.DeleteUserPoolClient:\n    post:\n      operationId: DeleteUserPoolClient\n      description: Allows the developer to delete the user pool client.\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"483\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"484\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.DeleteUserPoolClient\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeleteUserPoolClientRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.DeleteUserPoolDomain:\n    post:\n      operationId: DeleteUserPoolDomain\n      description: Deletes a domain for a user pool.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeleteUserPoolDomainResponse\"\n        \"480\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"483\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.DeleteUserPoolDomain\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeleteUserPoolDomainRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.DescribeIdentityProvider:\n    post:\n      operationId: DescribeIdentityProvider\n      description: Gets information about a specific identity provider.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DescribeIdentityProviderResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"483\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"484\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.DescribeIdentityProvider\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DescribeIdentityProviderRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.DescribeResourceServer:\n    post:\n      operationId: DescribeResourceServer\n      description: Describes a resource server.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DescribeResourceServerResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"483\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"484\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.DescribeResourceServer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DescribeResourceServerRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.DescribeRiskConfiguration:\n    post:\n      operationId: DescribeRiskConfiguration\n      description: Describes the risk configuration.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DescribeRiskConfigurationResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"483\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"484\":\n          description: UserPoolAddOnNotEnabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserPoolAddOnNotEnabledException\"\n        \"485\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.DescribeRiskConfiguration\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DescribeRiskConfigurationRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.DescribeUserImportJob:\n    post:\n      operationId: DescribeUserImportJob\n      description: Describes the user import job.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DescribeUserImportJobResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"483\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"484\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.DescribeUserImportJob\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DescribeUserImportJobRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.DescribeUserPool:\n    post:\n      operationId: DescribeUserPool\n      description: Returns the configuration information and metadata of the specified user\n        pool.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DescribeUserPoolResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"483\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"484\":\n          description: UserPoolTaggingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserPoolTaggingException\"\n        \"485\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.DescribeUserPool\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DescribeUserPoolRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.DescribeUserPoolClient:\n    post:\n      operationId: DescribeUserPoolClient\n      description: Client method for returning the configuration information and metadata\n        of the specified user pool app client.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DescribeUserPoolClientResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"483\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"484\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.DescribeUserPoolClient\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DescribeUserPoolClientRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.DescribeUserPoolDomain:\n    post:\n      operationId: DescribeUserPoolDomain\n      description: Gets information about a domain.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DescribeUserPoolDomainResponse\"\n        \"480\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"483\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.DescribeUserPoolDomain\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DescribeUserPoolDomainRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.ForgetDevice:\n    post:\n      operationId: ForgetDevice\n      description: Forgets the specified device.\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"483\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"484\":\n          description: InvalidUserPoolConfigurationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidUserPoolConfigurationException\"\n        \"485\":\n          description: PasswordResetRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PasswordResetRequiredException\"\n        \"486\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"487\":\n          description: UserNotConfirmedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotConfirmedException\"\n        \"488\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.ForgetDevice\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ForgetDeviceRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.ForgotPassword:\n    post:\n      operationId: ForgotPassword\n      description: Calling this API causes a message to be sent to the end user with a\n        confirmation code that is required to change the user's password. For\n        the \u003ccode\u003eUsername\u003c/code\u003e parameter, you can use the username or user\n        alias. If a verified phone number exists for the user, the confirmation\n        code is sent to the phone number. Otherwise, if a verified email exists,\n        the confirmation code is sent to the email. If neither a verified phone\n        number nor a verified email exists,\n        \u003ccode\u003eInvalidParameterException\u003c/code\u003e is thrown. To use the\n        confirmation code for resetting the password, call .\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ForgotPasswordResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: UnexpectedLambdaException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnexpectedLambdaException\"\n        \"483\":\n          description: UserLambdaValidationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserLambdaValidationException\"\n        \"484\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"485\":\n          description: InvalidLambdaResponseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidLambdaResponseException\"\n        \"486\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"487\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"488\":\n          description: InvalidSmsRoleAccessPolicyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidSmsRoleAccessPolicyException\"\n        \"489\":\n          description: InvalidSmsRoleTrustRelationshipException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidSmsRoleTrustRelationshipException\"\n        \"490\":\n          description: InvalidEmailRoleAccessPolicyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidEmailRoleAccessPolicyException\"\n        \"491\":\n          description: CodeDeliveryFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CodeDeliveryFailureException\"\n        \"492\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"493\":\n          description: UserNotConfirmedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotConfirmedException\"\n        \"494\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.ForgotPassword\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ForgotPasswordRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.GetCSVHeader:\n    post:\n      operationId: GetCSVHeader\n      description: Gets the header information for the .csv file to be used as input for\n        the user import job.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetCSVHeaderResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"483\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"484\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.GetCSVHeader\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetCSVHeaderRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.GetDevice:\n    post:\n      operationId: GetDevice\n      description: Gets the device.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetDeviceResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: InvalidUserPoolConfigurationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidUserPoolConfigurationException\"\n        \"483\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"484\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"485\":\n          description: PasswordResetRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PasswordResetRequiredException\"\n        \"486\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"487\":\n          description: UserNotConfirmedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotConfirmedException\"\n        \"488\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.GetDevice\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetDeviceRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.GetGroup:\n    post:\n      operationId: GetGroup\n      description: \u003cp\u003eGets a group.\u003c/p\u003e \u003cp\u003eCalling this action requires developer\n        credentials.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetGroupResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"483\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"484\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.GetGroup\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetGroupRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.GetIdentityProviderByIdentifier:\n    post:\n      operationId: GetIdentityProviderByIdentifier\n      description: Gets the specified identity provider.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetIdentityProviderByIdentifierResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"483\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"484\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.GetIdentityProviderByIdentifier\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetIdentityProviderByIdentifierRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.GetSigningCertificate:\n    post:\n      operationId: GetSigningCertificate\n      description: This method takes a user pool ID, and returns the signing certificate.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetSigningCertificateResponse\"\n        \"480\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.GetSigningCertificate\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetSigningCertificateRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.GetUICustomization:\n    post:\n      operationId: GetUICustomization\n      description: Gets the UI Customization information for a particular app client's app\n        UI, if there is something set. If nothing is set for the particular\n        client, but there is an existing pool level customization (app\n        \u003ccode\u003eclientId\u003c/code\u003e will be \u003ccode\u003eALL\u003c/code\u003e), then that is returned.\n        If nothing is present, then an empty shape is returned.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetUICustomizationResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"483\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"484\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.GetUICustomization\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetUICustomizationRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.GetUser:\n    post:\n      operationId: GetUser\n      description: Gets the user attributes and metadata for a user.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetUserResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"483\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"484\":\n          description: PasswordResetRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PasswordResetRequiredException\"\n        \"485\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"486\":\n          description: UserNotConfirmedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotConfirmedException\"\n        \"487\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.GetUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetUserRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.GetUserAttributeVerificationCode:\n    post:\n      operationId: GetUserAttributeVerificationCode\n      description: Gets the user attribute verification code for the specified attribute\n        name.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetUserAttributeVerificationCodeResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"483\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"484\":\n          description: UnexpectedLambdaException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnexpectedLambdaException\"\n        \"485\":\n          description: UserLambdaValidationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserLambdaValidationException\"\n        \"486\":\n          description: InvalidLambdaResponseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidLambdaResponseException\"\n        \"487\":\n          description: InvalidSmsRoleAccessPolicyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidSmsRoleAccessPolicyException\"\n        \"488\":\n          description: InvalidSmsRoleTrustRelationshipException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidSmsRoleTrustRelationshipException\"\n        \"489\":\n          description: InvalidEmailRoleAccessPolicyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidEmailRoleAccessPolicyException\"\n        \"490\":\n          description: CodeDeliveryFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CodeDeliveryFailureException\"\n        \"491\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"492\":\n          description: PasswordResetRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PasswordResetRequiredException\"\n        \"493\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"494\":\n          description: UserNotConfirmedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotConfirmedException\"\n        \"495\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.GetUserAttributeVerificationCode\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetUserAttributeVerificationCodeRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.GetUserPoolMfaConfig:\n    post:\n      operationId: GetUserPoolMfaConfig\n      description: Gets the user pool multi-factor authentication (MFA) configuration.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetUserPoolMfaConfigResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"482\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"483\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"484\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.GetUserPoolMfaConfig\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetUserPoolMfaConfigRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.GlobalSignOut:\n    post:\n      operationId: GlobalSignOut\n      description: Signs out users from all devices.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GlobalSignOutResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"483\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"484\":\n          description: PasswordResetRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PasswordResetRequiredException\"\n        \"485\":\n          description: UserNotConfirmedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotConfirmedException\"\n        \"486\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.GlobalSignOut\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GlobalSignOutRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.InitiateAuth:\n    post:\n      operationId: InitiateAuth\n      description: Initiates the authentication flow.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InitiateAuthResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"483\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"484\":\n          description: UnexpectedLambdaException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnexpectedLambdaException\"\n        \"485\":\n          description: InvalidUserPoolConfigurationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidUserPoolConfigurationException\"\n        \"486\":\n          description: UserLambdaValidationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserLambdaValidationException\"\n        \"487\":\n          description: InvalidLambdaResponseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidLambdaResponseException\"\n        \"488\":\n          description: PasswordResetRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PasswordResetRequiredException\"\n        \"489\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"490\":\n          description: UserNotConfirmedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotConfirmedException\"\n        \"491\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n        \"492\":\n          description: InvalidSmsRoleAccessPolicyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidSmsRoleAccessPolicyException\"\n        \"493\":\n          description: InvalidSmsRoleTrustRelationshipException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidSmsRoleTrustRelationshipException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.InitiateAuth\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/InitiateAuthRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.ListDevices:\n    post:\n      operationId: ListDevices\n      description: Lists the devices.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListDevicesResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"483\":\n          description: InvalidUserPoolConfigurationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidUserPoolConfigurationException\"\n        \"484\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"485\":\n          description: PasswordResetRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PasswordResetRequiredException\"\n        \"486\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"487\":\n          description: UserNotConfirmedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotConfirmedException\"\n        \"488\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.ListDevices\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ListDevicesRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.ListGroups:\n    post:\n      operationId: ListGroups\n      description: \u003cp\u003eLists the groups associated with a user pool.\u003c/p\u003e \u003cp\u003eCalling this\n        action requires developer credentials.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListGroupsResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"483\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"484\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: Limit\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: NextToken\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.ListGroups\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ListGroupsRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.ListIdentityProviders:\n    post:\n      operationId: ListIdentityProviders\n      description: Lists information about all identity providers for a user pool.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListIdentityProvidersResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"483\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"484\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: MaxResults\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: NextToken\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.ListIdentityProviders\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ListIdentityProvidersRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.ListResourceServers:\n    post:\n      operationId: ListResourceServers\n      description: Lists the resource servers for a user pool.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListResourceServersResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"483\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"484\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: MaxResults\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: NextToken\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.ListResourceServers\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ListResourceServersRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.ListTagsForResource:\n    post:\n      operationId: ListTagsForResource\n      description: \u003cp\u003eLists the tags that are assigned to an Amazon Cognito user pool.\u003c/p\u003e\n        \u003cp\u003eA tag is a label that you can apply to user pools to categorize and\n        manage them in different ways, such as by purpose, owner, environment,\n        or other criteria.\u003c/p\u003e \u003cp\u003eYou can use this action up to 10 times per\n        second, per account.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListTagsForResourceResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"482\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"483\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"484\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.ListTagsForResource\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ListTagsForResourceRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.ListUserImportJobs:\n    post:\n      operationId: ListUserImportJobs\n      description: Lists the user import jobs.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListUserImportJobsResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"483\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"484\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.ListUserImportJobs\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ListUserImportJobsRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.ListUserPoolClients:\n    post:\n      operationId: ListUserPoolClients\n      description: Lists the clients that have been created for the specified user pool.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListUserPoolClientsResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"483\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"484\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: MaxResults\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: NextToken\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.ListUserPoolClients\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ListUserPoolClientsRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.ListUserPools:\n    post:\n      operationId: ListUserPools\n      description: Lists the user pools associated with an AWS account.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListUserPoolsResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"482\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"483\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: MaxResults\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: NextToken\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.ListUserPools\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ListUserPoolsRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.ListUsers:\n    post:\n      operationId: ListUsers\n      description: Lists the users in the Amazon Cognito user pool.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListUsersResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"483\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"484\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: Limit\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: PaginationToken\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.ListUsers\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ListUsersRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.ListUsersInGroup:\n    post:\n      operationId: ListUsersInGroup\n      description: \u003cp\u003eLists the users in the specified group.\u003c/p\u003e \u003cp\u003eCalling this action\n        requires developer credentials.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListUsersInGroupResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"483\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"484\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: Limit\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: NextToken\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.ListUsersInGroup\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ListUsersInGroupRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.ResendConfirmationCode:\n    post:\n      operationId: ResendConfirmationCode\n      description: Resends the confirmation (for confirmation of registration) to a\n        specific user in the user pool.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResendConfirmationCodeResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: UnexpectedLambdaException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnexpectedLambdaException\"\n        \"483\":\n          description: UserLambdaValidationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserLambdaValidationException\"\n        \"484\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"485\":\n          description: InvalidLambdaResponseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidLambdaResponseException\"\n        \"486\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"487\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"488\":\n          description: InvalidSmsRoleAccessPolicyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidSmsRoleAccessPolicyException\"\n        \"489\":\n          description: InvalidSmsRoleTrustRelationshipException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidSmsRoleTrustRelationshipException\"\n        \"490\":\n          description: InvalidEmailRoleAccessPolicyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidEmailRoleAccessPolicyException\"\n        \"491\":\n          description: CodeDeliveryFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CodeDeliveryFailureException\"\n        \"492\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"493\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.ResendConfirmationCode\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ResendConfirmationCodeRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.RespondToAuthChallenge:\n    post:\n      operationId: RespondToAuthChallenge\n      description: Responds to the authentication challenge.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RespondToAuthChallengeResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"483\":\n          description: CodeMismatchException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CodeMismatchException\"\n        \"484\":\n          description: ExpiredCodeException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ExpiredCodeException\"\n        \"485\":\n          description: UnexpectedLambdaException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnexpectedLambdaException\"\n        \"486\":\n          description: UserLambdaValidationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserLambdaValidationException\"\n        \"487\":\n          description: InvalidPasswordException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPasswordException\"\n        \"488\":\n          description: InvalidLambdaResponseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidLambdaResponseException\"\n        \"489\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"490\":\n          description: InvalidUserPoolConfigurationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidUserPoolConfigurationException\"\n        \"491\":\n          description: MFAMethodNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MFAMethodNotFoundException\"\n        \"492\":\n          description: PasswordResetRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PasswordResetRequiredException\"\n        \"493\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"494\":\n          description: UserNotConfirmedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotConfirmedException\"\n        \"495\":\n          description: InvalidSmsRoleAccessPolicyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidSmsRoleAccessPolicyException\"\n        \"496\":\n          description: InvalidSmsRoleTrustRelationshipException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidSmsRoleTrustRelationshipException\"\n        \"497\":\n          description: AliasExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AliasExistsException\"\n        \"498\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n        \"499\":\n          description: SoftwareTokenMFANotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SoftwareTokenMFANotFoundException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.RespondToAuthChallenge\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RespondToAuthChallengeRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.SetRiskConfiguration:\n    post:\n      operationId: SetRiskConfiguration\n      description: \u003cp\u003eConfigures actions on detected risks. To delete the risk\n        configuration for \u003ccode\u003eUserPoolId\u003c/code\u003e or \u003ccode\u003eClientId\u003c/code\u003e, pass\n        null values for all four configuration types.\u003c/p\u003e \u003cp\u003eTo enable Amazon\n        Cognito advanced security features, update the user pool to include the\n        \u003ccode\u003eUserPoolAddOns\u003c/code\u003e key\u003ccode\u003eAdvancedSecurityMode\u003c/code\u003e.\u003c/p\u003e\n        \u003cp\u003eSee .\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SetRiskConfigurationResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"483\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"484\":\n          description: UserPoolAddOnNotEnabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserPoolAddOnNotEnabledException\"\n        \"485\":\n          description: CodeDeliveryFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CodeDeliveryFailureException\"\n        \"486\":\n          description: InvalidEmailRoleAccessPolicyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidEmailRoleAccessPolicyException\"\n        \"487\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.SetRiskConfiguration\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SetRiskConfigurationRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.SetUICustomization:\n    post:\n      operationId: SetUICustomization\n      description: \u003cp\u003eSets the UI customization information for a user pool's built-in app\n        UI.\u003c/p\u003e \u003cp\u003eYou can specify app UI customization settings for a single\n        client (with a specific \u003ccode\u003eclientId\u003c/code\u003e) or for all clients (by\n        setting the \u003ccode\u003eclientId\u003c/code\u003e to \u003ccode\u003eALL\u003c/code\u003e). If you specify\n        \u003ccode\u003eALL\u003c/code\u003e, the default configuration will be used for every\n        client that has no UI customization set previously. If you specify UI\n        customization settings for a particular client, it will no longer fall\n        back to the \u003ccode\u003eALL\u003c/code\u003e configuration. \u003c/p\u003e \u003cnote\u003e \u003cp\u003eTo use this\n        API, your user pool must have a domain associated with it. Otherwise,\n        there is no place to host the app's pages, and the service will throw an\n        error.\u003c/p\u003e \u003c/note\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SetUICustomizationResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"483\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"484\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.SetUICustomization\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SetUICustomizationRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.SetUserMFAPreference:\n    post:\n      operationId: SetUserMFAPreference\n      description: Set the user's multi-factor authentication (MFA) method preference,\n        including which MFA factors are enabled and if any are preferred. Only\n        one factor can be set as preferred. The preferred MFA factor will be\n        used to authenticate a user if multiple factors are enabled. If multiple\n        options are enabled and no preference is set, a challenge to choose an\n        MFA option will be returned during sign in.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SetUserMFAPreferenceResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"483\":\n          description: PasswordResetRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PasswordResetRequiredException\"\n        \"484\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"485\":\n          description: UserNotConfirmedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotConfirmedException\"\n        \"486\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.SetUserMFAPreference\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SetUserMFAPreferenceRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.SetUserPoolMfaConfig:\n    post:\n      operationId: SetUserPoolMfaConfig\n      description: Set the user pool multi-factor authentication (MFA) configuration.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SetUserPoolMfaConfigResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"482\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"483\":\n          description: InvalidSmsRoleAccessPolicyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidSmsRoleAccessPolicyException\"\n        \"484\":\n          description: InvalidSmsRoleTrustRelationshipException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidSmsRoleTrustRelationshipException\"\n        \"485\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"486\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.SetUserPoolMfaConfig\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SetUserPoolMfaConfigRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.SetUserSettings:\n    post:\n      operationId: SetUserSettings\n      description: \" \u003ci\u003eThis action is no longer supported.\u003c/i\u003e You can use it to configure\n        only SMS MFA. You can't use it to configure TOTP software token MFA. To\n        configure either type of MFA, use the \u003ca\u003eSetUserMFAPreference\u003c/a\u003e action\n        instead.\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SetUserSettingsResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"483\":\n          description: PasswordResetRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PasswordResetRequiredException\"\n        \"484\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"485\":\n          description: UserNotConfirmedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotConfirmedException\"\n        \"486\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.SetUserSettings\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SetUserSettingsRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.SignUp:\n    post:\n      operationId: SignUp\n      description: Registers the user in the specified user pool and creates a user name,\n        password, and user attributes.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SignUpResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: UnexpectedLambdaException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnexpectedLambdaException\"\n        \"483\":\n          description: UserLambdaValidationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserLambdaValidationException\"\n        \"484\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"485\":\n          description: InvalidPasswordException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPasswordException\"\n        \"486\":\n          description: InvalidLambdaResponseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidLambdaResponseException\"\n        \"487\":\n          description: UsernameExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UsernameExistsException\"\n        \"488\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"489\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n        \"490\":\n          description: InvalidSmsRoleAccessPolicyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidSmsRoleAccessPolicyException\"\n        \"491\":\n          description: InvalidSmsRoleTrustRelationshipException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidSmsRoleTrustRelationshipException\"\n        \"492\":\n          description: InvalidEmailRoleAccessPolicyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidEmailRoleAccessPolicyException\"\n        \"493\":\n          description: CodeDeliveryFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CodeDeliveryFailureException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.SignUp\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SignUpRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.StartUserImportJob:\n    post:\n      operationId: StartUserImportJob\n      description: Starts the user import.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StartUserImportJobResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"483\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n        \"484\":\n          description: PreconditionNotMetException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PreconditionNotMetException\"\n        \"485\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.StartUserImportJob\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/StartUserImportJobRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.StopUserImportJob:\n    post:\n      operationId: StopUserImportJob\n      description: Stops the user import job.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StopUserImportJobResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"483\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n        \"484\":\n          description: PreconditionNotMetException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PreconditionNotMetException\"\n        \"485\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.StopUserImportJob\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/StopUserImportJobRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.TagResource:\n    post:\n      operationId: TagResource\n      description: \u003cp\u003eAssigns a set of tags to an Amazon Cognito user pool. A tag is a\n        label that you can use to categorize and manage user pools in different\n        ways, such as by purpose, owner, environment, or other criteria.\u003c/p\u003e\n        \u003cp\u003eEach tag consists of a key and value, both of which you define. A key\n        is a general category for more specific values. For example, if you have\n        two versions of a user pool, one for testing and another for production,\n        you might assign an \u003ccode\u003eEnvironment\u003c/code\u003e tag key to both user pools.\n        The value of this key might be \u003ccode\u003eTest\u003c/code\u003e for one user pool and\n        \u003ccode\u003eProduction\u003c/code\u003e for the other.\u003c/p\u003e \u003cp\u003eTags are useful for cost\n        tracking and access control. You can activate your tags so that they\n        appear on the Billing and Cost Management console, where you can track\n        the costs associated with your user pools. In an IAM policy, you can\n        constrain permissions for user pools based on specific tags or tag\n        values.\u003c/p\u003e \u003cp\u003eYou can use this action up to 5 times per second, per\n        account. A user pool can have as many as 50 tags.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TagResourceResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"482\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"483\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"484\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.TagResource\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TagResourceRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.UntagResource:\n    post:\n      operationId: UntagResource\n      description: Removes the specified tags from an Amazon Cognito user pool. You can use\n        this action up to 5 times per second, per account\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UntagResourceResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"482\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"483\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"484\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.UntagResource\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UntagResourceRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.UpdateAuthEventFeedback:\n    post:\n      operationId: UpdateAuthEventFeedback\n      description: Provides the feedback for an authentication event whether it was from a\n        valid user or not. This feedback is used for improving the risk\n        evaluation decision for the user pool as part of Amazon Cognito advanced\n        security.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateAuthEventFeedbackResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"483\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"484\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"485\":\n          description: UserPoolAddOnNotEnabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserPoolAddOnNotEnabledException\"\n        \"486\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.UpdateAuthEventFeedback\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateAuthEventFeedbackRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.UpdateDeviceStatus:\n    post:\n      operationId: UpdateDeviceStatus\n      description: Updates the device status.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateDeviceStatusResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"483\":\n          description: InvalidUserPoolConfigurationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidUserPoolConfigurationException\"\n        \"484\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"485\":\n          description: PasswordResetRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PasswordResetRequiredException\"\n        \"486\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"487\":\n          description: UserNotConfirmedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotConfirmedException\"\n        \"488\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.UpdateDeviceStatus\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateDeviceStatusRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.UpdateGroup:\n    post:\n      operationId: UpdateGroup\n      description: \u003cp\u003eUpdates the specified group with the specified attributes.\u003c/p\u003e\n        \u003cp\u003eCalling this action requires developer credentials.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateGroupResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"483\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"484\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.UpdateGroup\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateGroupRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.UpdateIdentityProvider:\n    post:\n      operationId: UpdateIdentityProvider\n      description: Updates identity provider information for a user pool.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateIdentityProviderResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: UnsupportedIdentityProviderException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnsupportedIdentityProviderException\"\n        \"482\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"483\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"484\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"485\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.UpdateIdentityProvider\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateIdentityProviderRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.UpdateResourceServer:\n    post:\n      operationId: UpdateResourceServer\n      description: Updates the name and scopes of resource server. All other fields are\n        read-only.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateResourceServerResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"483\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"484\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.UpdateResourceServer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateResourceServerRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.UpdateUserAttributes:\n    post:\n      operationId: UpdateUserAttributes\n      description: Allows a user to update a specific attribute (one at a time).\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateUserAttributesResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: CodeMismatchException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CodeMismatchException\"\n        \"483\":\n          description: ExpiredCodeException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ExpiredCodeException\"\n        \"484\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"485\":\n          description: UnexpectedLambdaException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnexpectedLambdaException\"\n        \"486\":\n          description: UserLambdaValidationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserLambdaValidationException\"\n        \"487\":\n          description: InvalidLambdaResponseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidLambdaResponseException\"\n        \"488\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"489\":\n          description: AliasExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AliasExistsException\"\n        \"490\":\n          description: InvalidSmsRoleAccessPolicyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidSmsRoleAccessPolicyException\"\n        \"491\":\n          description: InvalidSmsRoleTrustRelationshipException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidSmsRoleTrustRelationshipException\"\n        \"492\":\n          description: InvalidEmailRoleAccessPolicyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidEmailRoleAccessPolicyException\"\n        \"493\":\n          description: CodeDeliveryFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CodeDeliveryFailureException\"\n        \"494\":\n          description: PasswordResetRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PasswordResetRequiredException\"\n        \"495\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"496\":\n          description: UserNotConfirmedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotConfirmedException\"\n        \"497\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.UpdateUserAttributes\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateUserAttributesRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.UpdateUserPool:\n    post:\n      operationId: UpdateUserPool\n      description: Updates the specified user pool with the specified attributes. If you\n        don't provide a value for an attribute, it will be set to the default\n        value. You can get a list of the current user pool settings with .\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateUserPoolResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: ConcurrentModificationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentModificationException\"\n        \"483\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"484\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"485\":\n          description: UserImportInProgressException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserImportInProgressException\"\n        \"486\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n        \"487\":\n          description: InvalidSmsRoleAccessPolicyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidSmsRoleAccessPolicyException\"\n        \"488\":\n          description: InvalidSmsRoleTrustRelationshipException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidSmsRoleTrustRelationshipException\"\n        \"489\":\n          description: UserPoolTaggingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserPoolTaggingException\"\n        \"490\":\n          description: InvalidEmailRoleAccessPolicyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidEmailRoleAccessPolicyException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.UpdateUserPool\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateUserPoolRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.UpdateUserPoolClient:\n    post:\n      operationId: UpdateUserPoolClient\n      description: Updates the specified user pool app client with the specified\n        attributes. If you don't provide a value for an attribute, it will be\n        set to the default value. You can get a list of the current user pool\n        app client settings with .\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateUserPoolClientResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: ConcurrentModificationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentModificationException\"\n        \"483\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"484\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"485\":\n          description: ScopeDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ScopeDoesNotExistException\"\n        \"486\":\n          description: InvalidOAuthFlowException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidOAuthFlowException\"\n        \"487\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.UpdateUserPoolClient\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateUserPoolClientRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.UpdateUserPoolDomain:\n    post:\n      operationId: UpdateUserPoolDomain\n      description: \u003cp\u003eUpdates the Secure Sockets Layer (SSL) certificate for the custom\n        domain for your user pool.\u003c/p\u003e \u003cp\u003eYou can use this operation to provide\n        the Amazon Resource Name (ARN) of a new certificate to Amazon Cognito.\n        You cannot use it to change the domain for a user pool.\u003c/p\u003e \u003cp\u003eA custom\n        domain is used to host the Amazon Cognito hosted UI, which provides\n        sign-up and sign-in pages for your application. When you set up a custom\n        domain, you provide a certificate that you manage with AWS Certificate\n        Manager (ACM). When necessary, you can use this operation to change the\n        certificate that you applied to your custom domain.\u003c/p\u003e \u003cp\u003eUsually, this\n        is unnecessary following routine certificate renewal with ACM. When you\n        renew your existing certificate in ACM, the ARN for your certificate\n        remains the same, and your custom domain uses the new certificate\n        automatically.\u003c/p\u003e \u003cp\u003eHowever, if you replace your existing certificate\n        with a new one, ACM gives the new certificate a new ARN. To apply the\n        new certificate to your custom domain, you must provide this ARN to\n        Amazon Cognito.\u003c/p\u003e \u003cp\u003eWhen you add your new certificate in ACM, you\n        must choose US East (N. Virginia) as the AWS Region.\u003c/p\u003e \u003cp\u003eAfter you\n        submit your request, Amazon Cognito requires up to 1 hour to distribute\n        your new certificate to your custom domain.\u003c/p\u003e \u003cp\u003eFor more information\n        about adding a custom domain to your user pool, see \u003ca\n        href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-add-custom-domain.html\"\u003eUsing\n        Your Own Domain for the Hosted UI\u003c/a\u003e.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateUserPoolDomainResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"482\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"483\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"484\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.UpdateUserPoolDomain\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateUserPoolDomainRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.VerifySoftwareToken:\n    post:\n      operationId: VerifySoftwareToken\n      description: Use this API to register a user's entered TOTP code and mark the user's\n        software token MFA status as \"verified\" if successful. The request takes\n        an access token or a session string, but not both.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/VerifySoftwareTokenResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: InvalidUserPoolConfigurationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidUserPoolConfigurationException\"\n        \"483\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"484\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"485\":\n          description: PasswordResetRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PasswordResetRequiredException\"\n        \"486\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"487\":\n          description: UserNotConfirmedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotConfirmedException\"\n        \"488\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n        \"489\":\n          description: EnableSoftwareTokenMFAException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EnableSoftwareTokenMFAException\"\n        \"490\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"491\":\n          description: SoftwareTokenMFANotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SoftwareTokenMFANotFoundException\"\n        \"492\":\n          description: CodeMismatchException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CodeMismatchException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.VerifySoftwareToken\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/VerifySoftwareTokenRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSCognitoIdentityProviderService.VerifyUserAttribute:\n    post:\n      operationId: VerifyUserAttribute\n      description: Verifies the specified user attributes in the user pool.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/VerifyUserAttributeResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: CodeMismatchException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CodeMismatchException\"\n        \"483\":\n          description: ExpiredCodeException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ExpiredCodeException\"\n        \"484\":\n          description: NotAuthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotAuthorizedException\"\n        \"485\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"486\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"487\":\n          description: PasswordResetRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PasswordResetRequiredException\"\n        \"488\":\n          description: UserNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundException\"\n        \"489\":\n          description: UserNotConfirmedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotConfirmedException\"\n        \"490\":\n          description: InternalErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSCognitoIdentityProviderService.VerifyUserAttribute\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/VerifyUserAttributeRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\nservers:\n  - url: http://cognito-idp.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-south-1\n          - sa-east-1\n        default: us-east-1\n    description: The Amazon Cognito Identity Provider multi-region endpoint\n  - url: https://cognito-idp.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-south-1\n          - sa-east-1\n        default: us-east-1\n    description: The Amazon Cognito Identity Provider multi-region endpoint\n  - url: http://cognito-idp.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Amazon Cognito Identity Provider endpoint for China (Beijing) and\n      China (Ningxia)\n  - url: https://cognito-idp.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Amazon Cognito Identity Provider endpoint for China (Beijing) and\n      China (Ningxia)\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      required: false\n      schema:\n        type: string\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    AddCustomAttributesResponse:\n      type: object\n      properties: {}\n      description: Represents the response from the server for the request to add custom\n        attributes.\n    AddCustomAttributesRequest:\n      type: object\n      required:\n        - UserPoolId\n        - CustomAttributes\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        CustomAttributes:\n          $ref: \"#/components/schemas/CustomAttributesListType\"\n      description: Represents the request to add custom attributes.\n    ResourceNotFoundException: {}\n    InvalidParameterException: {}\n    TooManyRequestsException: {}\n    NotAuthorizedException: {}\n    UserImportInProgressException: {}\n    InternalErrorException: {}\n    AdminAddUserToGroupRequest:\n      type: object\n      required:\n        - UserPoolId\n        - Username\n        - GroupName\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        Username:\n          $ref: \"#/components/schemas/UsernameType\"\n        GroupName:\n          $ref: \"#/components/schemas/GroupNameType\"\n    UserNotFoundException: {}\n    AdminConfirmSignUpResponse:\n      type: object\n      properties: {}\n      description: Represents the response from the server for the request to confirm\n        registration.\n    AdminConfirmSignUpRequest:\n      type: object\n      required:\n        - UserPoolId\n        - Username\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        Username:\n          $ref: \"#/components/schemas/UsernameType\"\n        ClientMetadata:\n          $ref: \"#/components/schemas/ClientMetadataType\"\n      description: Represents the request to confirm user registration.\n    UnexpectedLambdaException: {}\n    UserLambdaValidationException: {}\n    TooManyFailedAttemptsException: {}\n    InvalidLambdaResponseException: {}\n    LimitExceededException: {}\n    AdminCreateUserResponse:\n      type: object\n      properties:\n        User:\n          $ref: \"#/components/schemas/UserType\"\n      description: Represents the response from the server to the request to create the\n        user.\n    AdminCreateUserRequest:\n      type: object\n      required:\n        - UserPoolId\n        - Username\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        Username:\n          $ref: \"#/components/schemas/UsernameType\"\n        UserAttributes:\n          $ref: \"#/components/schemas/AttributeListType\"\n        ValidationData:\n          $ref: \"#/components/schemas/AttributeListType\"\n        TemporaryPassword:\n          $ref: \"#/components/schemas/PasswordType\"\n        ForceAliasCreation:\n          $ref: \"#/components/schemas/ForceAliasCreation\"\n        MessageAction:\n          $ref: \"#/components/schemas/MessageActionType\"\n        DesiredDeliveryMediums:\n          $ref: \"#/components/schemas/DeliveryMediumListType\"\n        ClientMetadata:\n          $ref: \"#/components/schemas/ClientMetadataType\"\n      description: Represents the request to create a user in the specified user pool.\n    UsernameExistsException: {}\n    InvalidPasswordException: {}\n    CodeDeliveryFailureException: {}\n    PreconditionNotMetException: {}\n    InvalidSmsRoleAccessPolicyException: {}\n    InvalidSmsRoleTrustRelationshipException: {}\n    UnsupportedUserStateException: {}\n    AdminDeleteUserRequest:\n      type: object\n      required:\n        - UserPoolId\n        - Username\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        Username:\n          $ref: \"#/components/schemas/UsernameType\"\n      description: Represents the request to delete a user as an administrator.\n    AdminDeleteUserAttributesResponse:\n      type: object\n      properties: {}\n      description: Represents the response received from the server for a request to delete\n        user attributes.\n    AdminDeleteUserAttributesRequest:\n      type: object\n      required:\n        - UserPoolId\n        - Username\n        - UserAttributeNames\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        Username:\n          $ref: \"#/components/schemas/UsernameType\"\n        UserAttributeNames:\n          $ref: \"#/components/schemas/AttributeNameListType\"\n      description: Represents the request to delete user attributes as an administrator.\n    AdminDisableProviderForUserResponse:\n      type: object\n      properties: {}\n    AdminDisableProviderForUserRequest:\n      type: object\n      required:\n        - UserPoolId\n        - User\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/StringType\"\n        User:\n          $ref: \"#/components/schemas/ProviderUserIdentifierType\"\n    AliasExistsException: {}\n    AdminDisableUserResponse:\n      type: object\n      properties: {}\n      description: Represents the response received from the server to disable the user as\n        an administrator.\n    AdminDisableUserRequest:\n      type: object\n      required:\n        - UserPoolId\n        - Username\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        Username:\n          $ref: \"#/components/schemas/UsernameType\"\n      description: Represents the request to disable any user as an administrator.\n    AdminEnableUserResponse:\n      type: object\n      properties: {}\n      description: Represents the response from the server for the request to enable a user\n        as an administrator.\n    AdminEnableUserRequest:\n      type: object\n      required:\n        - UserPoolId\n        - Username\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        Username:\n          $ref: \"#/components/schemas/UsernameType\"\n      description: Represents the request that enables the user as an administrator.\n    AdminForgetDeviceRequest:\n      type: object\n      required:\n        - UserPoolId\n        - Username\n        - DeviceKey\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        Username:\n          $ref: \"#/components/schemas/UsernameType\"\n        DeviceKey:\n          $ref: \"#/components/schemas/DeviceKeyType\"\n      description: Sends the forgot device request, as an administrator.\n    InvalidUserPoolConfigurationException: {}\n    AdminGetDeviceResponse:\n      type: object\n      required:\n        - Device\n      properties:\n        Device:\n          $ref: \"#/components/schemas/DeviceType\"\n      description: Gets the device response, as an administrator.\n    AdminGetDeviceRequest:\n      type: object\n      required:\n        - DeviceKey\n        - UserPoolId\n        - Username\n      properties:\n        DeviceKey:\n          $ref: \"#/components/schemas/DeviceKeyType\"\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        Username:\n          $ref: \"#/components/schemas/UsernameType\"\n      description: Represents the request to get the device, as an administrator.\n    AdminGetUserResponse:\n      type: object\n      required:\n        - Username\n      properties:\n        Username:\n          $ref: \"#/components/schemas/UsernameType\"\n        UserAttributes:\n          $ref: \"#/components/schemas/AttributeListType\"\n        UserCreateDate:\n          $ref: \"#/components/schemas/DateType\"\n        UserLastModifiedDate:\n          $ref: \"#/components/schemas/DateType\"\n        Enabled:\n          $ref: \"#/components/schemas/BooleanType\"\n        UserStatus:\n          $ref: \"#/components/schemas/UserStatusType\"\n        MFAOptions:\n          $ref: \"#/components/schemas/MFAOptionListType\"\n        PreferredMfaSetting:\n          $ref: \"#/components/schemas/StringType\"\n        UserMFASettingList:\n          $ref: \"#/components/schemas/UserMFASettingListType\"\n      description: Represents the response from the server from the request to get the\n        specified user as an administrator.\n    AdminGetUserRequest:\n      type: object\n      required:\n        - UserPoolId\n        - Username\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        Username:\n          $ref: \"#/components/schemas/UsernameType\"\n      description: Represents the request to get the specified user as an administrator.\n    AdminInitiateAuthResponse:\n      type: object\n      properties:\n        ChallengeName:\n          $ref: \"#/components/schemas/ChallengeNameType\"\n        Session:\n          $ref: \"#/components/schemas/SessionType\"\n        ChallengeParameters:\n          $ref: \"#/components/schemas/ChallengeParametersType\"\n        AuthenticationResult:\n          $ref: \"#/components/schemas/AuthenticationResultType\"\n      description: Initiates the authentication response, as an administrator.\n    AdminInitiateAuthRequest:\n      type: object\n      required:\n        - UserPoolId\n        - ClientId\n        - AuthFlow\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        ClientId:\n          $ref: \"#/components/schemas/ClientIdType\"\n        AuthFlow:\n          $ref: \"#/components/schemas/AuthFlowType\"\n        AuthParameters:\n          $ref: \"#/components/schemas/AuthParametersType\"\n        ClientMetadata:\n          $ref: \"#/components/schemas/ClientMetadataType\"\n        AnalyticsMetadata:\n          $ref: \"#/components/schemas/AnalyticsMetadataType\"\n        ContextData:\n          $ref: \"#/components/schemas/ContextDataType\"\n      description: Initiates the authorization request, as an administrator.\n    MFAMethodNotFoundException: {}\n    PasswordResetRequiredException: {}\n    UserNotConfirmedException: {}\n    AdminLinkProviderForUserResponse:\n      type: object\n      properties: {}\n    AdminLinkProviderForUserRequest:\n      type: object\n      required:\n        - UserPoolId\n        - DestinationUser\n        - SourceUser\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/StringType\"\n        DestinationUser:\n          $ref: \"#/components/schemas/ProviderUserIdentifierType\"\n        SourceUser:\n          $ref: \"#/components/schemas/ProviderUserIdentifierType\"\n    AdminListDevicesResponse:\n      type: object\n      properties:\n        Devices:\n          $ref: \"#/components/schemas/DeviceListType\"\n        PaginationToken:\n          $ref: \"#/components/schemas/SearchPaginationTokenType\"\n      description: Lists the device's response, as an administrator.\n    AdminListDevicesRequest:\n      type: object\n      required:\n        - UserPoolId\n        - Username\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        Username:\n          $ref: \"#/components/schemas/UsernameType\"\n        Limit:\n          $ref: \"#/components/schemas/QueryLimitType\"\n        PaginationToken:\n          $ref: \"#/components/schemas/SearchPaginationTokenType\"\n      description: Represents the request to list devices, as an administrator.\n    AdminListGroupsForUserResponse:\n      type: object\n      properties:\n        Groups:\n          $ref: \"#/components/schemas/GroupListType\"\n        NextToken:\n          $ref: \"#/components/schemas/PaginationKey\"\n    AdminListGroupsForUserRequest:\n      type: object\n      required:\n        - Username\n        - UserPoolId\n      properties:\n        Username:\n          $ref: \"#/components/schemas/UsernameType\"\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        Limit:\n          $ref: \"#/components/schemas/QueryLimitType\"\n        NextToken:\n          $ref: \"#/components/schemas/PaginationKey\"\n    AdminListUserAuthEventsResponse:\n      type: object\n      properties:\n        AuthEvents:\n          $ref: \"#/components/schemas/AuthEventsType\"\n        NextToken:\n          $ref: \"#/components/schemas/PaginationKey\"\n    AdminListUserAuthEventsRequest:\n      type: object\n      required:\n        - UserPoolId\n        - Username\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        Username:\n          $ref: \"#/components/schemas/UsernameType\"\n        MaxResults:\n          $ref: \"#/components/schemas/QueryLimitType\"\n        NextToken:\n          $ref: \"#/components/schemas/PaginationKey\"\n    UserPoolAddOnNotEnabledException: {}\n    AdminRemoveUserFromGroupRequest:\n      type: object\n      required:\n        - UserPoolId\n        - Username\n        - GroupName\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        Username:\n          $ref: \"#/components/schemas/UsernameType\"\n        GroupName:\n          $ref: \"#/components/schemas/GroupNameType\"\n    AdminResetUserPasswordResponse:\n      type: object\n      properties: {}\n      description: Represents the response from the server to reset a user password as an\n        administrator.\n    AdminResetUserPasswordRequest:\n      type: object\n      required:\n        - UserPoolId\n        - Username\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        Username:\n          $ref: \"#/components/schemas/UsernameType\"\n        ClientMetadata:\n          $ref: \"#/components/schemas/ClientMetadataType\"\n      description: Represents the request to reset a user's password as an administrator.\n    InvalidEmailRoleAccessPolicyException: {}\n    AdminRespondToAuthChallengeResponse:\n      type: object\n      properties:\n        ChallengeName:\n          $ref: \"#/components/schemas/ChallengeNameType\"\n        Session:\n          $ref: \"#/components/schemas/SessionType\"\n        ChallengeParameters:\n          $ref: \"#/components/schemas/ChallengeParametersType\"\n        AuthenticationResult:\n          $ref: \"#/components/schemas/AuthenticationResultType\"\n      description: Responds to the authentication challenge, as an administrator.\n    AdminRespondToAuthChallengeRequest:\n      type: object\n      required:\n        - UserPoolId\n        - ClientId\n        - ChallengeName\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        ClientId:\n          $ref: \"#/components/schemas/ClientIdType\"\n        ChallengeName:\n          $ref: \"#/components/schemas/ChallengeNameType\"\n        ChallengeResponses:\n          $ref: \"#/components/schemas/ChallengeResponsesType\"\n        Session:\n          $ref: \"#/components/schemas/SessionType\"\n        AnalyticsMetadata:\n          $ref: \"#/components/schemas/AnalyticsMetadataType\"\n        ContextData:\n          $ref: \"#/components/schemas/ContextDataType\"\n        ClientMetadata:\n          $ref: \"#/components/schemas/ClientMetadataType\"\n      description: The request to respond to the authentication challenge, as an\n        administrator.\n    CodeMismatchException: {}\n    ExpiredCodeException: {}\n    SoftwareTokenMFANotFoundException: {}\n    AdminSetUserMFAPreferenceResponse:\n      type: object\n      properties: {}\n    AdminSetUserMFAPreferenceRequest:\n      type: object\n      required:\n        - Username\n        - UserPoolId\n      properties:\n        SMSMfaSettings:\n          $ref: \"#/components/schemas/SMSMfaSettingsType\"\n        SoftwareTokenMfaSettings:\n          $ref: \"#/components/schemas/SoftwareTokenMfaSettingsType\"\n        Username:\n          $ref: \"#/components/schemas/UsernameType\"\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n    AdminSetUserPasswordResponse:\n      type: object\n      properties: {}\n    AdminSetUserPasswordRequest:\n      type: object\n      required:\n        - UserPoolId\n        - Username\n        - Password\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        Username:\n          $ref: \"#/components/schemas/UsernameType\"\n        Password:\n          $ref: \"#/components/schemas/PasswordType\"\n        Permanent:\n          $ref: \"#/components/schemas/BooleanType\"\n    AdminSetUserSettingsResponse:\n      type: object\n      properties: {}\n      description: Represents the response from the server to set user settings as an\n        administrator.\n    AdminSetUserSettingsRequest:\n      type: object\n      required:\n        - UserPoolId\n        - Username\n        - MFAOptions\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        Username:\n          $ref: \"#/components/schemas/UsernameType\"\n        MFAOptions:\n          $ref: \"#/components/schemas/MFAOptionListType\"\n      description: You can use this parameter to set an MFA configuration that uses the SMS\n        delivery medium.\n    AdminUpdateAuthEventFeedbackResponse:\n      type: object\n      properties: {}\n    AdminUpdateAuthEventFeedbackRequest:\n      type: object\n      required:\n        - UserPoolId\n        - Username\n        - EventId\n        - FeedbackValue\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        Username:\n          $ref: \"#/components/schemas/UsernameType\"\n        EventId:\n          $ref: \"#/components/schemas/EventIdType\"\n        FeedbackValue:\n          $ref: \"#/components/schemas/FeedbackValueType\"\n    AdminUpdateDeviceStatusResponse:\n      type: object\n      properties: {}\n      description: The status response from the request to update the device, as an\n        administrator.\n    AdminUpdateDeviceStatusRequest:\n      type: object\n      required:\n        - UserPoolId\n        - Username\n        - DeviceKey\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        Username:\n          $ref: \"#/components/schemas/UsernameType\"\n        DeviceKey:\n          $ref: \"#/components/schemas/DeviceKeyType\"\n        DeviceRememberedStatus:\n          $ref: \"#/components/schemas/DeviceRememberedStatusType\"\n      description: The request to update the device status, as an administrator.\n    AdminUpdateUserAttributesResponse:\n      type: object\n      properties: {}\n      description: Represents the response from the server for the request to update user\n        attributes as an administrator.\n    AdminUpdateUserAttributesRequest:\n      type: object\n      required:\n        - UserPoolId\n        - Username\n        - UserAttributes\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        Username:\n          $ref: \"#/components/schemas/UsernameType\"\n        UserAttributes:\n          $ref: \"#/components/schemas/AttributeListType\"\n        ClientMetadata:\n          $ref: \"#/components/schemas/ClientMetadataType\"\n      description: Represents the request to update the user's attributes as an\n        administrator.\n    AdminUserGlobalSignOutResponse:\n      type: object\n      properties: {}\n      description: The global sign-out response, as an administrator.\n    AdminUserGlobalSignOutRequest:\n      type: object\n      required:\n        - UserPoolId\n        - Username\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        Username:\n          $ref: \"#/components/schemas/UsernameType\"\n      description: The request to sign out of all devices, as an administrator.\n    AssociateSoftwareTokenResponse:\n      type: object\n      properties:\n        SecretCode:\n          $ref: \"#/components/schemas/SecretCodeType\"\n        Session:\n          $ref: \"#/components/schemas/SessionType\"\n    AssociateSoftwareTokenRequest:\n      type: object\n      properties:\n        AccessToken:\n          $ref: \"#/components/schemas/TokenModelType\"\n        Session:\n          $ref: \"#/components/schemas/SessionType\"\n    ChangePasswordResponse:\n      type: object\n      properties: {}\n      description: The response from the server to the change password request.\n    ChangePasswordRequest:\n      type: object\n      required:\n        - PreviousPassword\n        - ProposedPassword\n        - AccessToken\n      properties:\n        PreviousPassword:\n          $ref: \"#/components/schemas/PasswordType\"\n        ProposedPassword:\n          $ref: \"#/components/schemas/PasswordType\"\n        AccessToken:\n          $ref: \"#/components/schemas/TokenModelType\"\n      description: Represents the request to change a user password.\n    ConfirmDeviceResponse:\n      type: object\n      properties:\n        UserConfirmationNecessary:\n          $ref: \"#/components/schemas/BooleanType\"\n      description: Confirms the device response.\n    ConfirmDeviceRequest:\n      type: object\n      required:\n        - AccessToken\n        - DeviceKey\n      properties:\n        AccessToken:\n          $ref: \"#/components/schemas/TokenModelType\"\n        DeviceKey:\n          $ref: \"#/components/schemas/DeviceKeyType\"\n        DeviceSecretVerifierConfig:\n          $ref: \"#/components/schemas/DeviceSecretVerifierConfigType\"\n        DeviceName:\n          $ref: \"#/components/schemas/DeviceNameType\"\n      description: Confirms the device request.\n    ConfirmForgotPasswordResponse:\n      type: object\n      properties: {}\n      description: The response from the server that results from a user's request to\n        retrieve a forgotten password.\n    ConfirmForgotPasswordRequest:\n      type: object\n      required:\n        - ClientId\n        - Username\n        - ConfirmationCode\n        - Password\n      properties:\n        ClientId:\n          $ref: \"#/components/schemas/ClientIdType\"\n        SecretHash:\n          $ref: \"#/components/schemas/SecretHashType\"\n        Username:\n          $ref: \"#/components/schemas/UsernameType\"\n        ConfirmationCode:\n          $ref: \"#/components/schemas/ConfirmationCodeType\"\n        Password:\n          $ref: \"#/components/schemas/PasswordType\"\n        AnalyticsMetadata:\n          $ref: \"#/components/schemas/AnalyticsMetadataType\"\n        UserContextData:\n          $ref: \"#/components/schemas/UserContextDataType\"\n        ClientMetadata:\n          $ref: \"#/components/schemas/ClientMetadataType\"\n      description: The request representing the confirmation for a password reset.\n    ConfirmSignUpResponse:\n      type: object\n      properties: {}\n      description: Represents the response from the server for the registration\n        confirmation.\n    ConfirmSignUpRequest:\n      type: object\n      required:\n        - ClientId\n        - Username\n        - ConfirmationCode\n      properties:\n        ClientId:\n          $ref: \"#/components/schemas/ClientIdType\"\n        SecretHash:\n          $ref: \"#/components/schemas/SecretHashType\"\n        Username:\n          $ref: \"#/components/schemas/UsernameType\"\n        ConfirmationCode:\n          $ref: \"#/components/schemas/ConfirmationCodeType\"\n        ForceAliasCreation:\n          $ref: \"#/components/schemas/ForceAliasCreation\"\n        AnalyticsMetadata:\n          $ref: \"#/components/schemas/AnalyticsMetadataType\"\n        UserContextData:\n          $ref: \"#/components/schemas/UserContextDataType\"\n        ClientMetadata:\n          $ref: \"#/components/schemas/ClientMetadataType\"\n      description: Represents the request to confirm registration of a user.\n    CreateGroupResponse:\n      type: object\n      properties:\n        Group:\n          $ref: \"#/components/schemas/GroupType\"\n    CreateGroupRequest:\n      type: object\n      required:\n        - GroupName\n        - UserPoolId\n      properties:\n        GroupName:\n          $ref: \"#/components/schemas/GroupNameType\"\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        Description:\n          $ref: \"#/components/schemas/DescriptionType\"\n        RoleArn:\n          $ref: \"#/components/schemas/ArnType\"\n        Precedence:\n          $ref: \"#/components/schemas/PrecedenceType\"\n    GroupExistsException: {}\n    CreateIdentityProviderResponse:\n      type: object\n      required:\n        - IdentityProvider\n      properties:\n        IdentityProvider:\n          $ref: \"#/components/schemas/IdentityProviderType\"\n    CreateIdentityProviderRequest:\n      type: object\n      required:\n        - UserPoolId\n        - ProviderName\n        - ProviderType\n        - ProviderDetails\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        ProviderName:\n          $ref: \"#/components/schemas/ProviderNameTypeV1\"\n        ProviderType:\n          $ref: \"#/components/schemas/IdentityProviderTypeType\"\n        ProviderDetails:\n          $ref: \"#/components/schemas/ProviderDetailsType\"\n        AttributeMapping:\n          $ref: \"#/components/schemas/AttributeMappingType\"\n        IdpIdentifiers:\n          $ref: \"#/components/schemas/IdpIdentifiersListType\"\n    DuplicateProviderException: {}\n    CreateResourceServerResponse:\n      type: object\n      required:\n        - ResourceServer\n      properties:\n        ResourceServer:\n          $ref: \"#/components/schemas/ResourceServerType\"\n    CreateResourceServerRequest:\n      type: object\n      required:\n        - UserPoolId\n        - Identifier\n        - Name\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        Identifier:\n          $ref: \"#/components/schemas/ResourceServerIdentifierType\"\n        Name:\n          $ref: \"#/components/schemas/ResourceServerNameType\"\n        Scopes:\n          $ref: \"#/components/schemas/ResourceServerScopeListType\"\n    CreateUserImportJobResponse:\n      type: object\n      properties:\n        UserImportJob:\n          $ref: \"#/components/schemas/UserImportJobType\"\n      description: Represents the response from the server to the request to create the\n        user import job.\n    CreateUserImportJobRequest:\n      type: object\n      required:\n        - JobName\n        - UserPoolId\n        - CloudWatchLogsRoleArn\n      properties:\n        JobName:\n          $ref: \"#/components/schemas/UserImportJobNameType\"\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        CloudWatchLogsRoleArn:\n          $ref: \"#/components/schemas/ArnType\"\n      description: Represents the request to create the user import job.\n    CreateUserPoolResponse:\n      type: object\n      properties:\n        UserPool:\n          $ref: \"#/components/schemas/UserPoolType\"\n      description: Represents the response from the server for the request to create a user\n        pool.\n    CreateUserPoolRequest:\n      type: object\n      required:\n        - PoolName\n      properties:\n        PoolName:\n          $ref: \"#/components/schemas/UserPoolNameType\"\n        Policies:\n          $ref: \"#/components/schemas/UserPoolPolicyType\"\n        LambdaConfig:\n          $ref: \"#/components/schemas/LambdaConfigType\"\n        AutoVerifiedAttributes:\n          $ref: \"#/components/schemas/VerifiedAttributesListType\"\n        AliasAttributes:\n          $ref: \"#/components/schemas/AliasAttributesListType\"\n        UsernameAttributes:\n          $ref: \"#/components/schemas/UsernameAttributesListType\"\n        SmsVerificationMessage:\n          $ref: \"#/components/schemas/SmsVerificationMessageType\"\n        EmailVerificationMessage:\n          $ref: \"#/components/schemas/EmailVerificationMessageType\"\n        EmailVerificationSubject:\n          $ref: \"#/components/schemas/EmailVerificationSubjectType\"\n        VerificationMessageTemplate:\n          $ref: \"#/components/schemas/VerificationMessageTemplateType\"\n        SmsAuthenticationMessage:\n          $ref: \"#/components/schemas/SmsVerificationMessageType\"\n        MfaConfiguration:\n          $ref: \"#/components/schemas/UserPoolMfaType\"\n        DeviceConfiguration:\n          $ref: \"#/components/schemas/DeviceConfigurationType\"\n        EmailConfiguration:\n          $ref: \"#/components/schemas/EmailConfigurationType\"\n        SmsConfiguration:\n          $ref: \"#/components/schemas/SmsConfigurationType\"\n        UserPoolTags:\n          $ref: \"#/components/schemas/UserPoolTagsType\"\n        AdminCreateUserConfig:\n          $ref: \"#/components/schemas/AdminCreateUserConfigType\"\n        Schema:\n          $ref: \"#/components/schemas/SchemaAttributesListType\"\n        UserPoolAddOns:\n          $ref: \"#/components/schemas/UserPoolAddOnsType\"\n      description: Represents the request to create a user pool.\n    UserPoolTaggingException: {}\n    CreateUserPoolClientResponse:\n      type: object\n      properties:\n        UserPoolClient:\n          $ref: \"#/components/schemas/UserPoolClientType\"\n      description: Represents the response from the server to create a user pool client.\n    CreateUserPoolClientRequest:\n      type: object\n      required:\n        - UserPoolId\n        - ClientName\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        ClientName:\n          $ref: \"#/components/schemas/ClientNameType\"\n        GenerateSecret:\n          $ref: \"#/components/schemas/GenerateSecret\"\n        RefreshTokenValidity:\n          $ref: \"#/components/schemas/RefreshTokenValidityType\"\n        ReadAttributes:\n          $ref: \"#/components/schemas/ClientPermissionListType\"\n        WriteAttributes:\n          $ref: \"#/components/schemas/ClientPermissionListType\"\n        ExplicitAuthFlows:\n          $ref: \"#/components/schemas/ExplicitAuthFlowsListType\"\n        SupportedIdentityProviders:\n          $ref: \"#/components/schemas/SupportedIdentityProvidersListType\"\n        CallbackURLs:\n          $ref: \"#/components/schemas/CallbackURLsListType\"\n        LogoutURLs:\n          $ref: \"#/components/schemas/LogoutURLsListType\"\n        DefaultRedirectURI:\n          $ref: \"#/components/schemas/RedirectUrlType\"\n        AllowedOAuthFlows:\n          $ref: \"#/components/schemas/OAuthFlowsType\"\n        AllowedOAuthScopes:\n          $ref: \"#/components/schemas/ScopeListType\"\n        AllowedOAuthFlowsUserPoolClient:\n          $ref: \"#/components/schemas/BooleanType\"\n        AnalyticsConfiguration:\n          $ref: \"#/components/schemas/AnalyticsConfigurationType\"\n      description: Represents the request to create a user pool client.\n    ScopeDoesNotExistException: {}\n    InvalidOAuthFlowException: {}\n    CreateUserPoolDomainResponse:\n      type: object\n      properties:\n        CloudFrontDomain:\n          $ref: \"#/components/schemas/DomainType\"\n    CreateUserPoolDomainRequest:\n      type: object\n      required:\n        - Domain\n        - UserPoolId\n      properties:\n        Domain:\n          $ref: \"#/components/schemas/DomainType\"\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        CustomDomainConfig:\n          $ref: \"#/components/schemas/CustomDomainConfigType\"\n    DeleteGroupRequest:\n      type: object\n      required:\n        - GroupName\n        - UserPoolId\n      properties:\n        GroupName:\n          $ref: \"#/components/schemas/GroupNameType\"\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n    DeleteIdentityProviderRequest:\n      type: object\n      required:\n        - UserPoolId\n        - ProviderName\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        ProviderName:\n          $ref: \"#/components/schemas/ProviderNameType\"\n    UnsupportedIdentityProviderException: {}\n    DeleteResourceServerRequest:\n      type: object\n      required:\n        - UserPoolId\n        - Identifier\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        Identifier:\n          $ref: \"#/components/schemas/ResourceServerIdentifierType\"\n    DeleteUserRequest:\n      type: object\n      required:\n        - AccessToken\n      properties:\n        AccessToken:\n          $ref: \"#/components/schemas/TokenModelType\"\n      description: Represents the request to delete a user.\n    DeleteUserAttributesResponse:\n      type: object\n      properties: {}\n      description: Represents the response from the server to delete user attributes.\n    DeleteUserAttributesRequest:\n      type: object\n      required:\n        - UserAttributeNames\n        - AccessToken\n      properties:\n        UserAttributeNames:\n          $ref: \"#/components/schemas/AttributeNameListType\"\n        AccessToken:\n          $ref: \"#/components/schemas/TokenModelType\"\n      description: Represents the request to delete user attributes.\n    DeleteUserPoolRequest:\n      type: object\n      required:\n        - UserPoolId\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n      description: Represents the request to delete a user pool.\n    DeleteUserPoolClientRequest:\n      type: object\n      required:\n        - UserPoolId\n        - ClientId\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        ClientId:\n          $ref: \"#/components/schemas/ClientIdType\"\n      description: Represents the request to delete a user pool client.\n    DeleteUserPoolDomainResponse:\n      type: object\n      properties: {}\n    DeleteUserPoolDomainRequest:\n      type: object\n      required:\n        - Domain\n        - UserPoolId\n      properties:\n        Domain:\n          $ref: \"#/components/schemas/DomainType\"\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n    DescribeIdentityProviderResponse:\n      type: object\n      required:\n        - IdentityProvider\n      properties:\n        IdentityProvider:\n          $ref: \"#/components/schemas/IdentityProviderType\"\n    DescribeIdentityProviderRequest:\n      type: object\n      required:\n        - UserPoolId\n        - ProviderName\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        ProviderName:\n          $ref: \"#/components/schemas/ProviderNameType\"\n    DescribeResourceServerResponse:\n      type: object\n      required:\n        - ResourceServer\n      properties:\n        ResourceServer:\n          $ref: \"#/components/schemas/ResourceServerType\"\n    DescribeResourceServerRequest:\n      type: object\n      required:\n        - UserPoolId\n        - Identifier\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        Identifier:\n          $ref: \"#/components/schemas/ResourceServerIdentifierType\"\n    DescribeRiskConfigurationResponse:\n      type: object\n      required:\n        - RiskConfiguration\n      properties:\n        RiskConfiguration:\n          $ref: \"#/components/schemas/RiskConfigurationType\"\n    DescribeRiskConfigurationRequest:\n      type: object\n      required:\n        - UserPoolId\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        ClientId:\n          $ref: \"#/components/schemas/ClientIdType\"\n    DescribeUserImportJobResponse:\n      type: object\n      properties:\n        UserImportJob:\n          $ref: \"#/components/schemas/UserImportJobType\"\n      description: Represents the response from the server to the request to describe the\n        user import job.\n    DescribeUserImportJobRequest:\n      type: object\n      required:\n        - UserPoolId\n        - JobId\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        JobId:\n          $ref: \"#/components/schemas/UserImportJobIdType\"\n      description: Represents the request to describe the user import job.\n    DescribeUserPoolResponse:\n      type: object\n      properties:\n        UserPool:\n          $ref: \"#/components/schemas/UserPoolType\"\n      description: Represents the response to describe the user pool.\n    DescribeUserPoolRequest:\n      type: object\n      required:\n        - UserPoolId\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n      description: Represents the request to describe the user pool.\n    DescribeUserPoolClientResponse:\n      type: object\n      properties:\n        UserPoolClient:\n          $ref: \"#/components/schemas/UserPoolClientType\"\n      description: Represents the response from the server from a request to describe the\n        user pool client.\n    DescribeUserPoolClientRequest:\n      type: object\n      required:\n        - UserPoolId\n        - ClientId\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        ClientId:\n          $ref: \"#/components/schemas/ClientIdType\"\n      description: Represents the request to describe a user pool client.\n    DescribeUserPoolDomainResponse:\n      type: object\n      properties:\n        DomainDescription:\n          $ref: \"#/components/schemas/DomainDescriptionType\"\n    DescribeUserPoolDomainRequest:\n      type: object\n      required:\n        - Domain\n      properties:\n        Domain:\n          $ref: \"#/components/schemas/DomainType\"\n    ForgetDeviceRequest:\n      type: object\n      required:\n        - DeviceKey\n      properties:\n        AccessToken:\n          $ref: \"#/components/schemas/TokenModelType\"\n        DeviceKey:\n          $ref: \"#/components/schemas/DeviceKeyType\"\n      description: Represents the request to forget the device.\n    ForgotPasswordResponse:\n      type: object\n      properties:\n        CodeDeliveryDetails:\n          $ref: \"#/components/schemas/CodeDeliveryDetailsType\"\n      description: Respresents the response from the server regarding the request to reset\n        a password.\n    ForgotPasswordRequest:\n      type: object\n      required:\n        - ClientId\n        - Username\n      properties:\n        ClientId:\n          $ref: \"#/components/schemas/ClientIdType\"\n        SecretHash:\n          $ref: \"#/components/schemas/SecretHashType\"\n        UserContextData:\n          $ref: \"#/components/schemas/UserContextDataType\"\n        Username:\n          $ref: \"#/components/schemas/UsernameType\"\n        AnalyticsMetadata:\n          $ref: \"#/components/schemas/AnalyticsMetadataType\"\n        ClientMetadata:\n          $ref: \"#/components/schemas/ClientMetadataType\"\n      description: Represents the request to reset a user's password.\n    GetCSVHeaderResponse:\n      type: object\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        CSVHeader:\n          $ref: \"#/components/schemas/ListOfStringTypes\"\n      description: Represents the response from the server to the request to get the header\n        information for the .csv file for the user import job.\n    GetCSVHeaderRequest:\n      type: object\n      required:\n        - UserPoolId\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n      description: Represents the request to get the header information for the .csv file\n        for the user import job.\n    GetDeviceResponse:\n      type: object\n      required:\n        - Device\n      properties:\n        Device:\n          $ref: \"#/components/schemas/DeviceType\"\n      description: Gets the device response.\n    GetDeviceRequest:\n      type: object\n      required:\n        - DeviceKey\n      properties:\n        DeviceKey:\n          $ref: \"#/components/schemas/DeviceKeyType\"\n        AccessToken:\n          $ref: \"#/components/schemas/TokenModelType\"\n      description: Represents the request to get the device.\n    GetGroupResponse:\n      type: object\n      properties:\n        Group:\n          $ref: \"#/components/schemas/GroupType\"\n    GetGroupRequest:\n      type: object\n      required:\n        - GroupName\n        - UserPoolId\n      properties:\n        GroupName:\n          $ref: \"#/components/schemas/GroupNameType\"\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n    GetIdentityProviderByIdentifierResponse:\n      type: object\n      required:\n        - IdentityProvider\n      properties:\n        IdentityProvider:\n          $ref: \"#/components/schemas/IdentityProviderType\"\n    GetIdentityProviderByIdentifierRequest:\n      type: object\n      required:\n        - UserPoolId\n        - IdpIdentifier\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        IdpIdentifier:\n          $ref: \"#/components/schemas/IdpIdentifierType\"\n    GetSigningCertificateResponse:\n      type: object\n      properties:\n        Certificate:\n          $ref: \"#/components/schemas/StringType\"\n      description: Response from Cognito for a signing certificate request.\n    GetSigningCertificateRequest:\n      type: object\n      required:\n        - UserPoolId\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n      description: Request to get a signing certificate from Cognito.\n    GetUICustomizationResponse:\n      type: object\n      required:\n        - UICustomization\n      properties:\n        UICustomization:\n          $ref: \"#/components/schemas/UICustomizationType\"\n    GetUICustomizationRequest:\n      type: object\n      required:\n        - UserPoolId\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        ClientId:\n          $ref: \"#/components/schemas/ClientIdType\"\n    GetUserResponse:\n      type: object\n      required:\n        - Username\n        - UserAttributes\n      properties:\n        Username:\n          $ref: \"#/components/schemas/UsernameType\"\n        UserAttributes:\n          $ref: \"#/components/schemas/AttributeListType\"\n        MFAOptions:\n          $ref: \"#/components/schemas/MFAOptionListType\"\n        PreferredMfaSetting:\n          $ref: \"#/components/schemas/StringType\"\n        UserMFASettingList:\n          $ref: \"#/components/schemas/UserMFASettingListType\"\n      description: Represents the response from the server from the request to get\n        information about the user.\n    GetUserRequest:\n      type: object\n      required:\n        - AccessToken\n      properties:\n        AccessToken:\n          $ref: \"#/components/schemas/TokenModelType\"\n      description: Represents the request to get information about the user.\n    GetUserAttributeVerificationCodeResponse:\n      type: object\n      properties:\n        CodeDeliveryDetails:\n          $ref: \"#/components/schemas/CodeDeliveryDetailsType\"\n      description: The verification code response returned by the server response to get\n        the user attribute verification code.\n    GetUserAttributeVerificationCodeRequest:\n      type: object\n      required:\n        - AccessToken\n        - AttributeName\n      properties:\n        AccessToken:\n          $ref: \"#/components/schemas/TokenModelType\"\n        AttributeName:\n          $ref: \"#/components/schemas/AttributeNameType\"\n        ClientMetadata:\n          $ref: \"#/components/schemas/ClientMetadataType\"\n      description: Represents the request to get user attribute verification.\n    GetUserPoolMfaConfigResponse:\n      type: object\n      properties:\n        SmsMfaConfiguration:\n          $ref: \"#/components/schemas/SmsMfaConfigType\"\n        SoftwareTokenMfaConfiguration:\n          $ref: \"#/components/schemas/SoftwareTokenMfaConfigType\"\n        MfaConfiguration:\n          $ref: \"#/components/schemas/UserPoolMfaType\"\n    GetUserPoolMfaConfigRequest:\n      type: object\n      required:\n        - UserPoolId\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n    GlobalSignOutResponse:\n      type: object\n      properties: {}\n      description: The response to the request to sign out all devices.\n    GlobalSignOutRequest:\n      type: object\n      required:\n        - AccessToken\n      properties:\n        AccessToken:\n          $ref: \"#/components/schemas/TokenModelType\"\n      description: Represents the request to sign out all devices.\n    InitiateAuthResponse:\n      type: object\n      properties:\n        ChallengeName:\n          $ref: \"#/components/schemas/ChallengeNameType\"\n        Session:\n          $ref: \"#/components/schemas/SessionType\"\n        ChallengeParameters:\n          $ref: \"#/components/schemas/ChallengeParametersType\"\n        AuthenticationResult:\n          $ref: \"#/components/schemas/AuthenticationResultType\"\n      description: Initiates the authentication response.\n    InitiateAuthRequest:\n      type: object\n      required:\n        - AuthFlow\n        - ClientId\n      properties:\n        AuthFlow:\n          $ref: \"#/components/schemas/AuthFlowType\"\n        AuthParameters:\n          $ref: \"#/components/schemas/AuthParametersType\"\n        ClientMetadata:\n          $ref: \"#/components/schemas/ClientMetadataType\"\n        ClientId:\n          $ref: \"#/components/schemas/ClientIdType\"\n        AnalyticsMetadata:\n          $ref: \"#/components/schemas/AnalyticsMetadataType\"\n        UserContextData:\n          $ref: \"#/components/schemas/UserContextDataType\"\n      description: Initiates the authentication request.\n    ListDevicesResponse:\n      type: object\n      properties:\n        Devices:\n          $ref: \"#/components/schemas/DeviceListType\"\n        PaginationToken:\n          $ref: \"#/components/schemas/SearchPaginationTokenType\"\n      description: Represents the response to list devices.\n    ListDevicesRequest:\n      type: object\n      required:\n        - AccessToken\n      properties:\n        AccessToken:\n          $ref: \"#/components/schemas/TokenModelType\"\n        Limit:\n          $ref: \"#/components/schemas/QueryLimitType\"\n        PaginationToken:\n          $ref: \"#/components/schemas/SearchPaginationTokenType\"\n      description: Represents the request to list the devices.\n    ListGroupsResponse:\n      type: object\n      properties:\n        Groups:\n          $ref: \"#/components/schemas/GroupListType\"\n        NextToken:\n          $ref: \"#/components/schemas/PaginationKey\"\n    ListGroupsRequest:\n      type: object\n      required:\n        - UserPoolId\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        Limit:\n          $ref: \"#/components/schemas/QueryLimitType\"\n        NextToken:\n          $ref: \"#/components/schemas/PaginationKey\"\n    ListIdentityProvidersResponse:\n      type: object\n      required:\n        - Providers\n      properties:\n        Providers:\n          $ref: \"#/components/schemas/ProvidersListType\"\n        NextToken:\n          $ref: \"#/components/schemas/PaginationKeyType\"\n    ListIdentityProvidersRequest:\n      type: object\n      required:\n        - UserPoolId\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        MaxResults:\n          $ref: \"#/components/schemas/ListProvidersLimitType\"\n        NextToken:\n          $ref: \"#/components/schemas/PaginationKeyType\"\n    ListResourceServersResponse:\n      type: object\n      required:\n        - ResourceServers\n      properties:\n        ResourceServers:\n          $ref: \"#/components/schemas/ResourceServersListType\"\n        NextToken:\n          $ref: \"#/components/schemas/PaginationKeyType\"\n    ListResourceServersRequest:\n      type: object\n      required:\n        - UserPoolId\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        MaxResults:\n          $ref: \"#/components/schemas/ListResourceServersLimitType\"\n        NextToken:\n          $ref: \"#/components/schemas/PaginationKeyType\"\n    ListTagsForResourceResponse:\n      type: object\n      properties:\n        Tags:\n          $ref: \"#/components/schemas/UserPoolTagsType\"\n    ListTagsForResourceRequest:\n      type: object\n      required:\n        - ResourceArn\n      properties:\n        ResourceArn:\n          $ref: \"#/components/schemas/ArnType\"\n    ListUserImportJobsResponse:\n      type: object\n      properties:\n        UserImportJobs:\n          $ref: \"#/components/schemas/UserImportJobsListType\"\n        PaginationToken:\n          $ref: \"#/components/schemas/PaginationKeyType\"\n      description: Represents the response from the server to the request to list the user\n        import jobs.\n    ListUserImportJobsRequest:\n      type: object\n      required:\n        - UserPoolId\n        - MaxResults\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        MaxResults:\n          $ref: \"#/components/schemas/PoolQueryLimitType\"\n        PaginationToken:\n          $ref: \"#/components/schemas/PaginationKeyType\"\n      description: Represents the request to list the user import jobs.\n    ListUserPoolClientsResponse:\n      type: object\n      properties:\n        UserPoolClients:\n          $ref: \"#/components/schemas/UserPoolClientListType\"\n        NextToken:\n          $ref: \"#/components/schemas/PaginationKey\"\n      description: Represents the response from the server that lists user pool clients.\n    ListUserPoolClientsRequest:\n      type: object\n      required:\n        - UserPoolId\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        MaxResults:\n          $ref: \"#/components/schemas/QueryLimit\"\n        NextToken:\n          $ref: \"#/components/schemas/PaginationKey\"\n      description: Represents the request to list the user pool clients.\n    ListUserPoolsResponse:\n      type: object\n      properties:\n        UserPools:\n          $ref: \"#/components/schemas/UserPoolListType\"\n        NextToken:\n          $ref: \"#/components/schemas/PaginationKeyType\"\n      description: Represents the response to list user pools.\n    ListUserPoolsRequest:\n      type: object\n      required:\n        - MaxResults\n      properties:\n        NextToken:\n          $ref: \"#/components/schemas/PaginationKeyType\"\n        MaxResults:\n          $ref: \"#/components/schemas/PoolQueryLimitType\"\n      description: Represents the request to list user pools.\n    ListUsersResponse:\n      type: object\n      properties:\n        Users:\n          $ref: \"#/components/schemas/UsersListType\"\n        PaginationToken:\n          $ref: \"#/components/schemas/SearchPaginationTokenType\"\n      description: The response from the request to list users.\n    ListUsersRequest:\n      type: object\n      required:\n        - UserPoolId\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        AttributesToGet:\n          $ref: \"#/components/schemas/SearchedAttributeNamesListType\"\n        Limit:\n          $ref: \"#/components/schemas/QueryLimitType\"\n        PaginationToken:\n          $ref: \"#/components/schemas/SearchPaginationTokenType\"\n        Filter:\n          $ref: \"#/components/schemas/UserFilterType\"\n      description: Represents the request to list users.\n    ListUsersInGroupResponse:\n      type: object\n      properties:\n        Users:\n          $ref: \"#/components/schemas/UsersListType\"\n        NextToken:\n          $ref: \"#/components/schemas/PaginationKey\"\n    ListUsersInGroupRequest:\n      type: object\n      required:\n        - UserPoolId\n        - GroupName\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        GroupName:\n          $ref: \"#/components/schemas/GroupNameType\"\n        Limit:\n          $ref: \"#/components/schemas/QueryLimitType\"\n        NextToken:\n          $ref: \"#/components/schemas/PaginationKey\"\n    ResendConfirmationCodeResponse:\n      type: object\n      properties:\n        CodeDeliveryDetails:\n          $ref: \"#/components/schemas/CodeDeliveryDetailsType\"\n      description: The response from the server when the Amazon Cognito Your User Pools\n        service makes the request to resend a confirmation code.\n    ResendConfirmationCodeRequest:\n      type: object\n      required:\n        - ClientId\n        - Username\n      properties:\n        ClientId:\n          $ref: \"#/components/schemas/ClientIdType\"\n        SecretHash:\n          $ref: \"#/components/schemas/SecretHashType\"\n        UserContextData:\n          $ref: \"#/components/schemas/UserContextDataType\"\n        Username:\n          $ref: \"#/components/schemas/UsernameType\"\n        AnalyticsMetadata:\n          $ref: \"#/components/schemas/AnalyticsMetadataType\"\n        ClientMetadata:\n          $ref: \"#/components/schemas/ClientMetadataType\"\n      description: Represents the request to resend the confirmation code.\n    RespondToAuthChallengeResponse:\n      type: object\n      properties:\n        ChallengeName:\n          $ref: \"#/components/schemas/ChallengeNameType\"\n        Session:\n          $ref: \"#/components/schemas/SessionType\"\n        ChallengeParameters:\n          $ref: \"#/components/schemas/ChallengeParametersType\"\n        AuthenticationResult:\n          $ref: \"#/components/schemas/AuthenticationResultType\"\n      description: The response to respond to the authentication challenge.\n    RespondToAuthChallengeRequest:\n      type: object\n      required:\n        - ClientId\n        - ChallengeName\n      properties:\n        ClientId:\n          $ref: \"#/components/schemas/ClientIdType\"\n        ChallengeName:\n          $ref: \"#/components/schemas/ChallengeNameType\"\n        Session:\n          $ref: \"#/components/schemas/SessionType\"\n        ChallengeResponses:\n          $ref: \"#/components/schemas/ChallengeResponsesType\"\n        AnalyticsMetadata:\n          $ref: \"#/components/schemas/AnalyticsMetadataType\"\n        UserContextData:\n          $ref: \"#/components/schemas/UserContextDataType\"\n        ClientMetadata:\n          $ref: \"#/components/schemas/ClientMetadataType\"\n      description: The request to respond to an authentication challenge.\n    SetRiskConfigurationResponse:\n      type: object\n      required:\n        - RiskConfiguration\n      properties:\n        RiskConfiguration:\n          $ref: \"#/components/schemas/RiskConfigurationType\"\n    SetRiskConfigurationRequest:\n      type: object\n      required:\n        - UserPoolId\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        ClientId:\n          $ref: \"#/components/schemas/ClientIdType\"\n        CompromisedCredentialsRiskConfiguration:\n          $ref: \"#/components/schemas/CompromisedCredentialsRiskConfigurationType\"\n        AccountTakeoverRiskConfiguration:\n          $ref: \"#/components/schemas/AccountTakeoverRiskConfigurationType\"\n        RiskExceptionConfiguration:\n          $ref: \"#/components/schemas/RiskExceptionConfigurationType\"\n    SetUICustomizationResponse:\n      type: object\n      required:\n        - UICustomization\n      properties:\n        UICustomization:\n          $ref: \"#/components/schemas/UICustomizationType\"\n    SetUICustomizationRequest:\n      type: object\n      required:\n        - UserPoolId\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        ClientId:\n          $ref: \"#/components/schemas/ClientIdType\"\n        CSS:\n          $ref: \"#/components/schemas/CSSType\"\n        ImageFile:\n          $ref: \"#/components/schemas/ImageFileType\"\n    SetUserMFAPreferenceResponse:\n      type: object\n      properties: {}\n    SetUserMFAPreferenceRequest:\n      type: object\n      required:\n        - AccessToken\n      properties:\n        SMSMfaSettings:\n          $ref: \"#/components/schemas/SMSMfaSettingsType\"\n        SoftwareTokenMfaSettings:\n          $ref: \"#/components/schemas/SoftwareTokenMfaSettingsType\"\n        AccessToken:\n          $ref: \"#/components/schemas/TokenModelType\"\n    SetUserPoolMfaConfigResponse:\n      type: object\n      properties:\n        SmsMfaConfiguration:\n          $ref: \"#/components/schemas/SmsMfaConfigType\"\n        SoftwareTokenMfaConfiguration:\n          $ref: \"#/components/schemas/SoftwareTokenMfaConfigType\"\n        MfaConfiguration:\n          $ref: \"#/components/schemas/UserPoolMfaType\"\n    SetUserPoolMfaConfigRequest:\n      type: object\n      required:\n        - UserPoolId\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        SmsMfaConfiguration:\n          $ref: \"#/components/schemas/SmsMfaConfigType\"\n        SoftwareTokenMfaConfiguration:\n          $ref: \"#/components/schemas/SoftwareTokenMfaConfigType\"\n        MfaConfiguration:\n          $ref: \"#/components/schemas/UserPoolMfaType\"\n    SetUserSettingsResponse:\n      type: object\n      properties: {}\n      description: The response from the server for a set user settings request.\n    SetUserSettingsRequest:\n      type: object\n      required:\n        - AccessToken\n        - MFAOptions\n      properties:\n        AccessToken:\n          $ref: \"#/components/schemas/TokenModelType\"\n        MFAOptions:\n          $ref: \"#/components/schemas/MFAOptionListType\"\n      description: Represents the request to set user settings.\n    SignUpResponse:\n      type: object\n      required:\n        - UserConfirmed\n        - UserSub\n      properties:\n        UserConfirmed:\n          $ref: \"#/components/schemas/BooleanType\"\n        CodeDeliveryDetails:\n          $ref: \"#/components/schemas/CodeDeliveryDetailsType\"\n        UserSub:\n          $ref: \"#/components/schemas/StringType\"\n      description: The response from the server for a registration request.\n    SignUpRequest:\n      type: object\n      required:\n        - ClientId\n        - Username\n        - Password\n      properties:\n        ClientId:\n          $ref: \"#/components/schemas/ClientIdType\"\n        SecretHash:\n          $ref: \"#/components/schemas/SecretHashType\"\n        Username:\n          $ref: \"#/components/schemas/UsernameType\"\n        Password:\n          $ref: \"#/components/schemas/PasswordType\"\n        UserAttributes:\n          $ref: \"#/components/schemas/AttributeListType\"\n        ValidationData:\n          $ref: \"#/components/schemas/AttributeListType\"\n        AnalyticsMetadata:\n          $ref: \"#/components/schemas/AnalyticsMetadataType\"\n        UserContextData:\n          $ref: \"#/components/schemas/UserContextDataType\"\n        ClientMetadata:\n          $ref: \"#/components/schemas/ClientMetadataType\"\n      description: Represents the request to register a user.\n    StartUserImportJobResponse:\n      type: object\n      properties:\n        UserImportJob:\n          $ref: \"#/components/schemas/UserImportJobType\"\n      description: Represents the response from the server to the request to start the user\n        import job.\n    StartUserImportJobRequest:\n      type: object\n      required:\n        - UserPoolId\n        - JobId\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        JobId:\n          $ref: \"#/components/schemas/UserImportJobIdType\"\n      description: Represents the request to start the user import job.\n    StopUserImportJobResponse:\n      type: object\n      properties:\n        UserImportJob:\n          $ref: \"#/components/schemas/UserImportJobType\"\n      description: Represents the response from the server to the request to stop the user\n        import job.\n    StopUserImportJobRequest:\n      type: object\n      required:\n        - UserPoolId\n        - JobId\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        JobId:\n          $ref: \"#/components/schemas/UserImportJobIdType\"\n      description: Represents the request to stop the user import job.\n    TagResourceResponse:\n      type: object\n      properties: {}\n    TagResourceRequest:\n      type: object\n      required:\n        - ResourceArn\n        - Tags\n      properties:\n        ResourceArn:\n          $ref: \"#/components/schemas/ArnType\"\n        Tags:\n          $ref: \"#/components/schemas/UserPoolTagsType\"\n    UntagResourceResponse:\n      type: object\n      properties: {}\n    UntagResourceRequest:\n      type: object\n      required:\n        - ResourceArn\n        - TagKeys\n      properties:\n        ResourceArn:\n          $ref: \"#/components/schemas/ArnType\"\n        TagKeys:\n          $ref: \"#/components/schemas/UserPoolTagsListType\"\n    UpdateAuthEventFeedbackResponse:\n      type: object\n      properties: {}\n    UpdateAuthEventFeedbackRequest:\n      type: object\n      required:\n        - UserPoolId\n        - Username\n        - EventId\n        - FeedbackToken\n        - FeedbackValue\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        Username:\n          $ref: \"#/components/schemas/UsernameType\"\n        EventId:\n          $ref: \"#/components/schemas/EventIdType\"\n        FeedbackToken:\n          $ref: \"#/components/schemas/TokenModelType\"\n        FeedbackValue:\n          $ref: \"#/components/schemas/FeedbackValueType\"\n    UpdateDeviceStatusResponse:\n      type: object\n      properties: {}\n      description: The response to the request to update the device status.\n    UpdateDeviceStatusRequest:\n      type: object\n      required:\n        - AccessToken\n        - DeviceKey\n      properties:\n        AccessToken:\n          $ref: \"#/components/schemas/TokenModelType\"\n        DeviceKey:\n          $ref: \"#/components/schemas/DeviceKeyType\"\n        DeviceRememberedStatus:\n          $ref: \"#/components/schemas/DeviceRememberedStatusType\"\n      description: Represents the request to update the device status.\n    UpdateGroupResponse:\n      type: object\n      properties:\n        Group:\n          $ref: \"#/components/schemas/GroupType\"\n    UpdateGroupRequest:\n      type: object\n      required:\n        - GroupName\n        - UserPoolId\n      properties:\n        GroupName:\n          $ref: \"#/components/schemas/GroupNameType\"\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        Description:\n          $ref: \"#/components/schemas/DescriptionType\"\n        RoleArn:\n          $ref: \"#/components/schemas/ArnType\"\n        Precedence:\n          $ref: \"#/components/schemas/PrecedenceType\"\n    UpdateIdentityProviderResponse:\n      type: object\n      required:\n        - IdentityProvider\n      properties:\n        IdentityProvider:\n          $ref: \"#/components/schemas/IdentityProviderType\"\n    UpdateIdentityProviderRequest:\n      type: object\n      required:\n        - UserPoolId\n        - ProviderName\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        ProviderName:\n          $ref: \"#/components/schemas/ProviderNameType\"\n        ProviderDetails:\n          $ref: \"#/components/schemas/ProviderDetailsType\"\n        AttributeMapping:\n          $ref: \"#/components/schemas/AttributeMappingType\"\n        IdpIdentifiers:\n          $ref: \"#/components/schemas/IdpIdentifiersListType\"\n    UpdateResourceServerResponse:\n      type: object\n      required:\n        - ResourceServer\n      properties:\n        ResourceServer:\n          $ref: \"#/components/schemas/ResourceServerType\"\n    UpdateResourceServerRequest:\n      type: object\n      required:\n        - UserPoolId\n        - Identifier\n        - Name\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        Identifier:\n          $ref: \"#/components/schemas/ResourceServerIdentifierType\"\n        Name:\n          $ref: \"#/components/schemas/ResourceServerNameType\"\n        Scopes:\n          $ref: \"#/components/schemas/ResourceServerScopeListType\"\n    UpdateUserAttributesResponse:\n      type: object\n      properties:\n        CodeDeliveryDetailsList:\n          $ref: \"#/components/schemas/CodeDeliveryDetailsListType\"\n      description: Represents the response from the server for the request to update user\n        attributes.\n    UpdateUserAttributesRequest:\n      type: object\n      required:\n        - UserAttributes\n        - AccessToken\n      properties:\n        UserAttributes:\n          $ref: \"#/components/schemas/AttributeListType\"\n        AccessToken:\n          $ref: \"#/components/schemas/TokenModelType\"\n        ClientMetadata:\n          $ref: \"#/components/schemas/ClientMetadataType\"\n      description: Represents the request to update user attributes.\n    UpdateUserPoolResponse:\n      type: object\n      properties: {}\n      description: Represents the response from the server when you make a request to\n        update the user pool.\n    UpdateUserPoolRequest:\n      type: object\n      required:\n        - UserPoolId\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        Policies:\n          $ref: \"#/components/schemas/UserPoolPolicyType\"\n        LambdaConfig:\n          $ref: \"#/components/schemas/LambdaConfigType\"\n        AutoVerifiedAttributes:\n          $ref: \"#/components/schemas/VerifiedAttributesListType\"\n        SmsVerificationMessage:\n          $ref: \"#/components/schemas/SmsVerificationMessageType\"\n        EmailVerificationMessage:\n          $ref: \"#/components/schemas/EmailVerificationMessageType\"\n        EmailVerificationSubject:\n          $ref: \"#/components/schemas/EmailVerificationSubjectType\"\n        VerificationMessageTemplate:\n          $ref: \"#/components/schemas/VerificationMessageTemplateType\"\n        SmsAuthenticationMessage:\n          $ref: \"#/components/schemas/SmsVerificationMessageType\"\n        MfaConfiguration:\n          $ref: \"#/components/schemas/UserPoolMfaType\"\n        DeviceConfiguration:\n          $ref: \"#/components/schemas/DeviceConfigurationType\"\n        EmailConfiguration:\n          $ref: \"#/components/schemas/EmailConfigurationType\"\n        SmsConfiguration:\n          $ref: \"#/components/schemas/SmsConfigurationType\"\n        UserPoolTags:\n          $ref: \"#/components/schemas/UserPoolTagsType\"\n        AdminCreateUserConfig:\n          $ref: \"#/components/schemas/AdminCreateUserConfigType\"\n        UserPoolAddOns:\n          $ref: \"#/components/schemas/UserPoolAddOnsType\"\n      description: Represents the request to update the user pool.\n    ConcurrentModificationException: {}\n    UpdateUserPoolClientResponse:\n      type: object\n      properties:\n        UserPoolClient:\n          $ref: \"#/components/schemas/UserPoolClientType\"\n      description: Represents the response from the server to the request to update the\n        user pool client.\n    UpdateUserPoolClientRequest:\n      type: object\n      required:\n        - UserPoolId\n        - ClientId\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        ClientId:\n          $ref: \"#/components/schemas/ClientIdType\"\n        ClientName:\n          $ref: \"#/components/schemas/ClientNameType\"\n        RefreshTokenValidity:\n          $ref: \"#/components/schemas/RefreshTokenValidityType\"\n        ReadAttributes:\n          $ref: \"#/components/schemas/ClientPermissionListType\"\n        WriteAttributes:\n          $ref: \"#/components/schemas/ClientPermissionListType\"\n        ExplicitAuthFlows:\n          $ref: \"#/components/schemas/ExplicitAuthFlowsListType\"\n        SupportedIdentityProviders:\n          $ref: \"#/components/schemas/SupportedIdentityProvidersListType\"\n        CallbackURLs:\n          $ref: \"#/components/schemas/CallbackURLsListType\"\n        LogoutURLs:\n          $ref: \"#/components/schemas/LogoutURLsListType\"\n        DefaultRedirectURI:\n          $ref: \"#/components/schemas/RedirectUrlType\"\n        AllowedOAuthFlows:\n          $ref: \"#/components/schemas/OAuthFlowsType\"\n        AllowedOAuthScopes:\n          $ref: \"#/components/schemas/ScopeListType\"\n        AllowedOAuthFlowsUserPoolClient:\n          $ref: \"#/components/schemas/BooleanType\"\n        AnalyticsConfiguration:\n          $ref: \"#/components/schemas/AnalyticsConfigurationType\"\n      description: Represents the request to update the user pool client.\n    UpdateUserPoolDomainResponse:\n      type: object\n      properties:\n        CloudFrontDomain:\n          $ref: \"#/components/schemas/DomainType\"\n      description: The UpdateUserPoolDomain response output.\n    UpdateUserPoolDomainRequest:\n      type: object\n      required:\n        - Domain\n        - UserPoolId\n        - CustomDomainConfig\n      properties:\n        Domain:\n          $ref: \"#/components/schemas/DomainType\"\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        CustomDomainConfig:\n          $ref: \"#/components/schemas/CustomDomainConfigType\"\n      description: The UpdateUserPoolDomain request input.\n    VerifySoftwareTokenResponse:\n      type: object\n      properties:\n        Status:\n          $ref: \"#/components/schemas/VerifySoftwareTokenResponseType\"\n        Session:\n          $ref: \"#/components/schemas/SessionType\"\n    VerifySoftwareTokenRequest:\n      type: object\n      required:\n        - UserCode\n      properties:\n        AccessToken:\n          $ref: \"#/components/schemas/TokenModelType\"\n        Session:\n          $ref: \"#/components/schemas/SessionType\"\n        UserCode:\n          $ref: \"#/components/schemas/SoftwareTokenMFAUserCodeType\"\n        FriendlyDeviceName:\n          $ref: \"#/components/schemas/StringType\"\n    EnableSoftwareTokenMFAException: {}\n    VerifyUserAttributeResponse:\n      type: object\n      properties: {}\n      description: A container representing the response from the server from the request\n        to verify user attributes.\n    VerifyUserAttributeRequest:\n      type: object\n      required:\n        - AccessToken\n        - AttributeName\n        - Code\n      properties:\n        AccessToken:\n          $ref: \"#/components/schemas/TokenModelType\"\n        AttributeName:\n          $ref: \"#/components/schemas/AttributeNameType\"\n        Code:\n          $ref: \"#/components/schemas/ConfirmationCodeType\"\n      description: Represents the request to verify user attributes.\n    AWSAccountIdType:\n      type: string\n    AccountTakeoverActionNotifyType:\n      type: boolean\n    AccountTakeoverEventActionType:\n      type: string\n      enum:\n        - BLOCK\n        - MFA_IF_CONFIGURED\n        - MFA_REQUIRED\n        - NO_ACTION\n    AccountTakeoverActionType:\n      type: object\n      required:\n        - Notify\n        - EventAction\n      properties:\n        Notify:\n          $ref: \"#/components/schemas/AccountTakeoverActionNotifyType\"\n        EventAction:\n          $ref: \"#/components/schemas/AccountTakeoverEventActionType\"\n      description: Account takeover action type.\n    AccountTakeoverActionsType:\n      type: object\n      properties:\n        LowAction:\n          $ref: \"#/components/schemas/AccountTakeoverActionType\"\n        MediumAction:\n          $ref: \"#/components/schemas/AccountTakeoverActionType\"\n        HighAction:\n          $ref: \"#/components/schemas/AccountTakeoverActionType\"\n      description: Account takeover actions type.\n    NotifyConfigurationType:\n      type: object\n      required:\n        - SourceArn\n      properties:\n        From:\n          $ref: \"#/components/schemas/StringType\"\n        ReplyTo:\n          $ref: \"#/components/schemas/StringType\"\n        SourceArn:\n          $ref: \"#/components/schemas/ArnType\"\n        BlockEmail:\n          $ref: \"#/components/schemas/NotifyEmailType\"\n        NoActionEmail:\n          $ref: \"#/components/schemas/NotifyEmailType\"\n        MfaEmail:\n          $ref: \"#/components/schemas/NotifyEmailType\"\n      description: The notify configuration type.\n    AccountTakeoverRiskConfigurationType:\n      type: object\n      required:\n        - Actions\n      properties:\n        NotifyConfiguration:\n          $ref: \"#/components/schemas/NotifyConfigurationType\"\n        Actions:\n          $ref: \"#/components/schemas/AccountTakeoverActionsType\"\n      description: Configuration for mitigation actions and notification for different\n        levels of risk detected for a potential account takeover.\n    UserPoolIdType:\n      type: string\n      pattern: \"[\\\\w-]+_[0-9a-zA-Z]+\"\n      minLength: 1\n      maxLength: 55\n    CustomAttributesListType:\n      type: array\n      items:\n        $ref: \"#/components/schemas/SchemaAttributeType\"\n      minItems: 1\n      maxItems: 25\n    UsernameType:\n      type: string\n      pattern: \"[\\\\p{L}\\\\p{M}\\\\p{S}\\\\p{N}\\\\p{P}]+\"\n      minLength: 1\n      maxLength: 128\n      format: password\n    GroupNameType:\n      type: string\n      pattern: \"[\\\\p{L}\\\\p{M}\\\\p{S}\\\\p{N}\\\\p{P}]+\"\n      minLength: 1\n      maxLength: 128\n    ClientMetadataType:\n      type: object\n      additionalProperties:\n        $ref: \"#/components/schemas/StringType\"\n    BooleanType:\n      type: boolean\n    AdminCreateUserUnusedAccountValidityDaysType:\n      type: integer\n      minimum: 0\n      maximum: 365\n    MessageTemplateType:\n      type: object\n      properties:\n        SMSMessage:\n          $ref: \"#/components/schemas/SmsVerificationMessageType\"\n        EmailMessage:\n          $ref: \"#/components/schemas/EmailVerificationMessageType\"\n        EmailSubject:\n          $ref: \"#/components/schemas/EmailVerificationSubjectType\"\n      description: The message template structure.\n    AdminCreateUserConfigType:\n      type: object\n      properties:\n        AllowAdminCreateUserOnly:\n          $ref: \"#/components/schemas/BooleanType\"\n        UnusedAccountValidityDays:\n          $ref: \"#/components/schemas/AdminCreateUserUnusedAccountValidityDaysType\"\n        InviteMessageTemplate:\n          $ref: \"#/components/schemas/MessageTemplateType\"\n      description: The configuration for creating a new user profile.\n    AttributeListType:\n      type: array\n      items:\n        $ref: \"#/components/schemas/AttributeType\"\n    PasswordType:\n      type: string\n      pattern: \"[\\\\S]+\"\n      minLength: 6\n      maxLength: 256\n      format: password\n    ForceAliasCreation:\n      type: boolean\n    MessageActionType:\n      type: string\n      enum:\n        - RESEND\n        - SUPPRESS\n    DeliveryMediumListType:\n      type: array\n      items:\n        $ref: \"#/components/schemas/DeliveryMediumType\"\n    UserType:\n      type: object\n      properties:\n        Username:\n          $ref: \"#/components/schemas/UsernameType\"\n        Attributes:\n          $ref: \"#/components/schemas/AttributeListType\"\n        UserCreateDate:\n          $ref: \"#/components/schemas/DateType\"\n        UserLastModifiedDate:\n          $ref: \"#/components/schemas/DateType\"\n        Enabled:\n          $ref: \"#/components/schemas/BooleanType\"\n        UserStatus:\n          $ref: \"#/components/schemas/UserStatusType\"\n        MFAOptions:\n          $ref: \"#/components/schemas/MFAOptionListType\"\n      description: The user type.\n    AttributeNameListType:\n      type: array\n      items:\n        $ref: \"#/components/schemas/AttributeNameType\"\n    StringType:\n      type: string\n    ProviderUserIdentifierType:\n      type: object\n      properties:\n        ProviderName:\n          $ref: \"#/components/schemas/ProviderNameType\"\n        ProviderAttributeName:\n          $ref: \"#/components/schemas/StringType\"\n        ProviderAttributeValue:\n          $ref: \"#/components/schemas/StringType\"\n      description: A container for information about an identity provider for a user pool.\n    DeviceKeyType:\n      type: string\n      pattern: \"[\\\\w-]+_[0-9a-f-]+\"\n      minLength: 1\n      maxLength: 55\n    DeviceType:\n      type: object\n      properties:\n        DeviceKey:\n          $ref: \"#/components/schemas/DeviceKeyType\"\n        DeviceAttributes:\n          $ref: \"#/components/schemas/AttributeListType\"\n        DeviceCreateDate:\n          $ref: \"#/components/schemas/DateType\"\n        DeviceLastModifiedDate:\n          $ref: \"#/components/schemas/DateType\"\n        DeviceLastAuthenticatedDate:\n          $ref: \"#/components/schemas/DateType\"\n      description: The device type.\n    DateType:\n      type: string\n      format: date-time\n    UserStatusType:\n      type: string\n      enum:\n        - UNCONFIRMED\n        - CONFIRMED\n        - ARCHIVED\n        - COMPROMISED\n        - UNKNOWN\n        - RESET_REQUIRED\n        - FORCE_CHANGE_PASSWORD\n    MFAOptionListType:\n      type: array\n      items:\n        $ref: \"#/components/schemas/MFAOptionType\"\n    UserMFASettingListType:\n      type: array\n      items:\n        $ref: \"#/components/schemas/StringType\"\n    ClientIdType:\n      type: string\n      pattern: \"[\\\\w+]+\"\n      minLength: 1\n      maxLength: 128\n      format: password\n    AuthFlowType:\n      type: string\n      enum:\n        - USER_SRP_AUTH\n        - REFRESH_TOKEN_AUTH\n        - REFRESH_TOKEN\n        - CUSTOM_AUTH\n        - ADMIN_NO_SRP_AUTH\n        - USER_PASSWORD_AUTH\n    AuthParametersType:\n      type: object\n      additionalProperties:\n        $ref: \"#/components/schemas/StringType\"\n    AnalyticsMetadataType:\n      type: object\n      properties:\n        AnalyticsEndpointId:\n          $ref: \"#/components/schemas/StringType\"\n      description: \u003cp\u003eAn Amazon Pinpoint analytics endpoint.\u003c/p\u003e \u003cp\u003eAn endpoint uniquely\n        identifies a mobile device, email address, or phone number that can\n        receive messages from Amazon Pinpoint analytics.\u003c/p\u003e\n    ContextDataType:\n      type: object\n      required:\n        - IpAddress\n        - ServerName\n        - ServerPath\n        - HttpHeaders\n      properties:\n        IpAddress:\n          $ref: \"#/components/schemas/StringType\"\n        ServerName:\n          $ref: \"#/components/schemas/StringType\"\n        ServerPath:\n          $ref: \"#/components/schemas/StringType\"\n        HttpHeaders:\n          $ref: \"#/components/schemas/HttpHeaderList\"\n        EncodedData:\n          $ref: \"#/components/schemas/StringType\"\n      description: Contextual user data type used for evaluating the risk of an unexpected\n        event by Amazon Cognito advanced security.\n    ChallengeNameType:\n      type: string\n      enum:\n        - SMS_MFA\n        - SOFTWARE_TOKEN_MFA\n        - SELECT_MFA_TYPE\n        - MFA_SETUP\n        - PASSWORD_VERIFIER\n        - CUSTOM_CHALLENGE\n        - DEVICE_SRP_AUTH\n        - DEVICE_PASSWORD_VERIFIER\n        - ADMIN_NO_SRP_AUTH\n        - NEW_PASSWORD_REQUIRED\n    SessionType:\n      type: string\n      minLength: 20\n      maxLength: 2048\n    ChallengeParametersType:\n      type: object\n      additionalProperties:\n        $ref: \"#/components/schemas/StringType\"\n    AuthenticationResultType:\n      type: object\n      properties:\n        AccessToken:\n          $ref: \"#/components/schemas/TokenModelType\"\n        ExpiresIn:\n          $ref: \"#/components/schemas/IntegerType\"\n        TokenType:\n          $ref: \"#/components/schemas/StringType\"\n        RefreshToken:\n          $ref: \"#/components/schemas/TokenModelType\"\n        IdToken:\n          $ref: \"#/components/schemas/TokenModelType\"\n        NewDeviceMetadata:\n          $ref: \"#/components/schemas/NewDeviceMetadataType\"\n      description: The authentication result.\n    QueryLimitType:\n      type: integer\n      minimum: 0\n      maximum: 60\n    SearchPaginationTokenType:\n      type: string\n      pattern: \"[\\\\S]+\"\n      minLength: 1\n    DeviceListType:\n      type: array\n      items:\n        $ref: \"#/components/schemas/DeviceType\"\n    PaginationKey:\n      type: string\n      pattern: \"[\\\\S]+\"\n      minLength: 1\n    GroupListType:\n      type: array\n      items:\n        $ref: \"#/components/schemas/GroupType\"\n    AuthEventsType:\n      type: array\n      items:\n        $ref: \"#/components/schemas/AuthEventType\"\n    ChallengeResponsesType:\n      type: object\n      additionalProperties:\n        $ref: \"#/components/schemas/StringType\"\n    SMSMfaSettingsType:\n      type: object\n      properties:\n        Enabled:\n          $ref: \"#/components/schemas/BooleanType\"\n        PreferredMfa:\n          $ref: \"#/components/schemas/BooleanType\"\n      description: The type used for enabling SMS MFA at the user level.\n    SoftwareTokenMfaSettingsType:\n      type: object\n      properties:\n        Enabled:\n          $ref: \"#/components/schemas/BooleanType\"\n        PreferredMfa:\n          $ref: \"#/components/schemas/BooleanType\"\n      description: The type used for enabling software token MFA at the user level.\n    EventIdType:\n      type: string\n      pattern: \"[\\\\w+-]+\"\n      minLength: 1\n      maxLength: 50\n    FeedbackValueType:\n      type: string\n      enum:\n        - Valid\n        - Invalid\n    DeviceRememberedStatusType:\n      type: string\n      enum:\n        - remembered\n        - not_remembered\n    AdvancedSecurityModeType:\n      type: string\n      enum:\n        - OFF\n        - AUDIT\n        - ENFORCED\n    AliasAttributeType:\n      type: string\n      enum:\n        - phone_number\n        - email\n        - preferred_username\n    AliasAttributesListType:\n      type: array\n      items:\n        $ref: \"#/components/schemas/AliasAttributeType\"\n    HexStringType:\n      type: string\n      pattern: ^[0-9a-fA-F]+$\n    ArnType:\n      type: string\n      pattern: arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?\n      minLength: 20\n      maxLength: 2048\n    AnalyticsConfigurationType:\n      type: object\n      required:\n        - ApplicationId\n        - RoleArn\n        - ExternalId\n      properties:\n        ApplicationId:\n          $ref: \"#/components/schemas/HexStringType\"\n        RoleArn:\n          $ref: \"#/components/schemas/ArnType\"\n        ExternalId:\n          $ref: \"#/components/schemas/StringType\"\n        UserDataShared:\n          $ref: \"#/components/schemas/BooleanType\"\n      description: The Amazon Pinpoint analytics configuration for collecting metrics for a\n        user pool.\n    TokenModelType:\n      type: string\n      pattern: \"[A-Za-z0-9-_=.]+\"\n      format: password\n    SecretCodeType:\n      type: string\n      pattern: \"[A-Za-z0-9]+\"\n      minLength: 16\n      format: password\n    AttributeDataType:\n      type: string\n      enum:\n        - String\n        - Number\n        - DateTime\n        - Boolean\n    AttributeType:\n      type: object\n      required:\n        - Name\n      properties:\n        Name:\n          $ref: \"#/components/schemas/AttributeNameType\"\n        Value:\n          $ref: \"#/components/schemas/AttributeValueType\"\n      description: Specifies whether the attribute is standard or custom.\n    AttributeMappingKeyType:\n      type: string\n      minLength: 1\n      maxLength: 32\n    AttributeMappingType:\n      type: object\n      additionalProperties:\n        $ref: \"#/components/schemas/StringType\"\n    AttributeNameType:\n      type: string\n      pattern: \"[\\\\p{L}\\\\p{M}\\\\p{S}\\\\p{N}\\\\p{P}]+\"\n      minLength: 1\n      maxLength: 32\n    AttributeValueType:\n      type: string\n      maxLength: 2048\n      format: password\n    EventType:\n      type: string\n      enum:\n        - SignIn\n        - SignUp\n        - ForgotPassword\n    EventResponseType:\n      type: string\n      enum:\n        - Success\n        - Failure\n    EventRiskType:\n      type: object\n      properties:\n        RiskDecision:\n          $ref: \"#/components/schemas/RiskDecisionType\"\n        RiskLevel:\n          $ref: \"#/components/schemas/RiskLevelType\"\n      description: The event risk type.\n    ChallengeResponseListType:\n      type: array\n      items:\n        $ref: \"#/components/schemas/ChallengeResponseType\"\n    EventContextDataType:\n      type: object\n      properties:\n        IpAddress:\n          $ref: \"#/components/schemas/StringType\"\n        DeviceName:\n          $ref: \"#/components/schemas/StringType\"\n        Timezone:\n          $ref: \"#/components/schemas/StringType\"\n        City:\n          $ref: \"#/components/schemas/StringType\"\n        Country:\n          $ref: \"#/components/schemas/StringType\"\n      description: Specifies the user context data captured at the time of an event request.\n    EventFeedbackType:\n      type: object\n      required:\n        - FeedbackValue\n        - Provider\n      properties:\n        FeedbackValue:\n          $ref: \"#/components/schemas/FeedbackValueType\"\n        Provider:\n          $ref: \"#/components/schemas/StringType\"\n        FeedbackDate:\n          $ref: \"#/components/schemas/DateType\"\n      description: Specifies the event feedback type.\n    AuthEventType:\n      type: object\n      properties:\n        EventId:\n          $ref: \"#/components/schemas/StringType\"\n        EventType:\n          $ref: \"#/components/schemas/EventType\"\n        CreationDate:\n          $ref: \"#/components/schemas/DateType\"\n        EventResponse:\n          $ref: \"#/components/schemas/EventResponseType\"\n        EventRisk:\n          $ref: \"#/components/schemas/EventRiskType\"\n        ChallengeResponses:\n          $ref: \"#/components/schemas/ChallengeResponseListType\"\n        EventContextData:\n          $ref: \"#/components/schemas/EventContextDataType\"\n        EventFeedback:\n          $ref: \"#/components/schemas/EventFeedbackType\"\n      description: The authentication event type.\n    IntegerType:\n      type: integer\n    NewDeviceMetadataType:\n      type: object\n      properties:\n        DeviceKey:\n          $ref: \"#/components/schemas/DeviceKeyType\"\n        DeviceGroupKey:\n          $ref: \"#/components/schemas/StringType\"\n      description: The new device metadata type.\n    BlockedIPRangeListType:\n      type: array\n      items:\n        $ref: \"#/components/schemas/StringType\"\n      maxItems: 20\n    CSSType:\n      type: string\n    CSSVersionType:\n      type: string\n    RedirectUrlType:\n      type: string\n      pattern: \"[\\\\p{L}\\\\p{M}\\\\p{S}\\\\p{N}\\\\p{P}]+\"\n      minLength: 1\n      maxLength: 1024\n    CallbackURLsListType:\n      type: array\n      items:\n        $ref: \"#/components/schemas/RedirectUrlType\"\n      minItems: 0\n      maxItems: 100\n    ChallengeName:\n      type: string\n      enum:\n        - Password\n        - Mfa\n    ChallengeResponse:\n      type: string\n      enum:\n        - Success\n        - Failure\n    ChallengeResponseType:\n      type: object\n      properties:\n        ChallengeName:\n          $ref: \"#/components/schemas/ChallengeName\"\n        ChallengeResponse:\n          $ref: \"#/components/schemas/ChallengeResponse\"\n      description: The challenge response type.\n    ClientNameType:\n      type: string\n      pattern: \"[\\\\w\\\\s+=,.@-]+\"\n      minLength: 1\n      maxLength: 128\n    ClientPermissionType:\n      type: string\n      minLength: 1\n      maxLength: 2048\n    ClientPermissionListType:\n      type: array\n      items:\n        $ref: \"#/components/schemas/ClientPermissionType\"\n    ClientSecretType:\n      type: string\n      pattern: \"[\\\\w+]+\"\n      minLength: 1\n      maxLength: 64\n      format: password\n    CodeDeliveryDetailsType:\n      type: object\n      properties:\n        Destination:\n          $ref: \"#/components/schemas/StringType\"\n        DeliveryMedium:\n          $ref: \"#/components/schemas/DeliveryMediumType\"\n        AttributeName:\n          $ref: \"#/components/schemas/AttributeNameType\"\n      description: The code delivery details being returned from the server.\n    CodeDeliveryDetailsListType:\n      type: array\n      items:\n        $ref: \"#/components/schemas/CodeDeliveryDetailsType\"\n    DeliveryMediumType:\n      type: string\n      enum:\n        - SMS\n        - EMAIL\n    CompletionMessageType:\n      type: string\n      pattern: \"[\\\\w]+\"\n      minLength: 1\n      maxLength: 128\n    CompromisedCredentialsEventActionType:\n      type: string\n      enum:\n        - BLOCK\n        - NO_ACTION\n    CompromisedCredentialsActionsType:\n      type: object\n      required:\n        - EventAction\n      properties:\n        EventAction:\n          $ref: \"#/components/schemas/CompromisedCredentialsEventActionType\"\n      description: The compromised credentials actions type\n    EventFiltersType:\n      type: array\n      items:\n        $ref: \"#/components/schemas/EventFilterType\"\n    CompromisedCredentialsRiskConfigurationType:\n      type: object\n      required:\n        - Actions\n      properties:\n        EventFilter:\n          $ref: \"#/components/schemas/EventFiltersType\"\n        Actions:\n          $ref: \"#/components/schemas/CompromisedCredentialsActionsType\"\n      description: The compromised credentials risk configuration type.\n    DeviceSecretVerifierConfigType:\n      type: object\n      properties:\n        PasswordVerifier:\n          $ref: \"#/components/schemas/StringType\"\n        Salt:\n          $ref: \"#/components/schemas/StringType\"\n      description: The device verifier against which it will be authenticated.\n    DeviceNameType:\n      type: string\n      minLength: 1\n      maxLength: 1024\n    SecretHashType:\n      type: string\n      pattern: \"[\\\\w+=/]+\"\n      minLength: 1\n      maxLength: 128\n      format: password\n    ConfirmationCodeType:\n      type: string\n      pattern: \"[\\\\S]+\"\n      minLength: 1\n      maxLength: 2048\n    UserContextDataType:\n      type: object\n      properties:\n        EncodedData:\n          $ref: \"#/components/schemas/StringType\"\n      description: Contextual data such as the user's device fingerprint, IP address, or\n        location used for evaluating the risk of an unexpected event by Amazon\n        Cognito advanced security.\n    HttpHeaderList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/HttpHeader\"\n    DescriptionType:\n      type: string\n      maxLength: 2048\n    PrecedenceType:\n      type: integer\n      minimum: 0\n    GroupType:\n      type: object\n      properties:\n        GroupName:\n          $ref: \"#/components/schemas/GroupNameType\"\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        Description:\n          $ref: \"#/components/schemas/DescriptionType\"\n        RoleArn:\n          $ref: \"#/components/schemas/ArnType\"\n        Precedence:\n          $ref: \"#/components/schemas/PrecedenceType\"\n        LastModifiedDate:\n          $ref: \"#/components/schemas/DateType\"\n        CreationDate:\n          $ref: \"#/components/schemas/DateType\"\n      description: The group type.\n    ProviderNameTypeV1:\n      type: string\n      pattern: \"[^_][\\\\p{L}\\\\p{M}\\\\p{S}\\\\p{N}\\\\p{P}][^_]+\"\n      minLength: 1\n      maxLength: 32\n    IdentityProviderTypeType:\n      type: string\n      enum:\n        - SAML\n        - Facebook\n        - Google\n        - LoginWithAmazon\n        - OIDC\n    ProviderDetailsType:\n      type: object\n      additionalProperties:\n        $ref: \"#/components/schemas/StringType\"\n    IdpIdentifiersListType:\n      type: array\n      items:\n        $ref: \"#/components/schemas/IdpIdentifierType\"\n      minItems: 0\n      maxItems: 50\n    IdentityProviderType:\n      type: object\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        ProviderName:\n          $ref: \"#/components/schemas/ProviderNameType\"\n        ProviderType:\n          $ref: \"#/components/schemas/IdentityProviderTypeType\"\n        ProviderDetails:\n          $ref: \"#/components/schemas/ProviderDetailsType\"\n        AttributeMapping:\n          $ref: \"#/components/schemas/AttributeMappingType\"\n        IdpIdentifiers:\n          $ref: \"#/components/schemas/IdpIdentifiersListType\"\n        LastModifiedDate:\n          $ref: \"#/components/schemas/DateType\"\n        CreationDate:\n          $ref: \"#/components/schemas/DateType\"\n      description: A container for information about an identity provider.\n    ResourceServerIdentifierType:\n      type: string\n      pattern: \"[\\\\x21\\\\x23-\\\\x5B\\\\x5D-\\\\x7E]+\"\n      minLength: 1\n      maxLength: 256\n    ResourceServerNameType:\n      type: string\n      pattern: \"[\\\\w\\\\s+=,.@-]+\"\n      minLength: 1\n      maxLength: 256\n    ResourceServerScopeListType:\n      type: array\n      items:\n        $ref: \"#/components/schemas/ResourceServerScopeType\"\n      maxItems: 100\n    ResourceServerType:\n      type: object\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        Identifier:\n          $ref: \"#/components/schemas/ResourceServerIdentifierType\"\n        Name:\n          $ref: \"#/components/schemas/ResourceServerNameType\"\n        Scopes:\n          $ref: \"#/components/schemas/ResourceServerScopeListType\"\n      description: A container for information about a resource server for a user pool.\n    UserImportJobNameType:\n      type: string\n      pattern: \"[\\\\w\\\\s+=,.@-]+\"\n      minLength: 1\n      maxLength: 128\n    UserImportJobType:\n      type: object\n      properties:\n        JobName:\n          $ref: \"#/components/schemas/UserImportJobNameType\"\n        JobId:\n          $ref: \"#/components/schemas/UserImportJobIdType\"\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        PreSignedUrl:\n          $ref: \"#/components/schemas/PreSignedUrlType\"\n        CreationDate:\n          $ref: \"#/components/schemas/DateType\"\n        StartDate:\n          $ref: \"#/components/schemas/DateType\"\n        CompletionDate:\n          $ref: \"#/components/schemas/DateType\"\n        Status:\n          $ref: \"#/components/schemas/UserImportJobStatusType\"\n        CloudWatchLogsRoleArn:\n          $ref: \"#/components/schemas/ArnType\"\n        ImportedUsers:\n          $ref: \"#/components/schemas/LongType\"\n        SkippedUsers:\n          $ref: \"#/components/schemas/LongType\"\n        FailedUsers:\n          $ref: \"#/components/schemas/LongType\"\n        CompletionMessage:\n          $ref: \"#/components/schemas/CompletionMessageType\"\n      description: The user import job type.\n    GenerateSecret:\n      type: boolean\n    RefreshTokenValidityType:\n      type: integer\n      minimum: 0\n      maximum: 3650\n    ExplicitAuthFlowsListType:\n      type: array\n      items:\n        $ref: \"#/components/schemas/ExplicitAuthFlowsType\"\n    SupportedIdentityProvidersListType:\n      type: array\n      items:\n        $ref: \"#/components/schemas/ProviderNameType\"\n    LogoutURLsListType:\n      type: array\n      items:\n        $ref: \"#/components/schemas/RedirectUrlType\"\n      minItems: 0\n      maxItems: 100\n    OAuthFlowsType:\n      type: array\n      items:\n        $ref: \"#/components/schemas/OAuthFlowType\"\n      minItems: 0\n      maxItems: 3\n    ScopeListType:\n      type: array\n      items:\n        $ref: \"#/components/schemas/ScopeType\"\n      maxItems: 50\n    UserPoolClientType:\n      type: object\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        ClientName:\n          $ref: \"#/components/schemas/ClientNameType\"\n        ClientId:\n          $ref: \"#/components/schemas/ClientIdType\"\n        ClientSecret:\n          $ref: \"#/components/schemas/ClientSecretType\"\n        LastModifiedDate:\n          $ref: \"#/components/schemas/DateType\"\n        CreationDate:\n          $ref: \"#/components/schemas/DateType\"\n        RefreshTokenValidity:\n          $ref: \"#/components/schemas/RefreshTokenValidityType\"\n        ReadAttributes:\n          $ref: \"#/components/schemas/ClientPermissionListType\"\n        WriteAttributes:\n          $ref: \"#/components/schemas/ClientPermissionListType\"\n        ExplicitAuthFlows:\n          $ref: \"#/components/schemas/ExplicitAuthFlowsListType\"\n        SupportedIdentityProviders:\n          $ref: \"#/components/schemas/SupportedIdentityProvidersListType\"\n        CallbackURLs:\n          $ref: \"#/components/schemas/CallbackURLsListType\"\n        LogoutURLs:\n          $ref: \"#/components/schemas/LogoutURLsListType\"\n        DefaultRedirectURI:\n          $ref: \"#/components/schemas/RedirectUrlType\"\n        AllowedOAuthFlows:\n          $ref: \"#/components/schemas/OAuthFlowsType\"\n        AllowedOAuthScopes:\n          $ref: \"#/components/schemas/ScopeListType\"\n        AllowedOAuthFlowsUserPoolClient:\n          $ref: \"#/components/schemas/BooleanType\"\n        AnalyticsConfiguration:\n          $ref: \"#/components/schemas/AnalyticsConfigurationType\"\n      description: Contains information about a user pool client.\n    DomainType:\n      type: string\n      pattern: ^[a-z0-9](?:[a-z0-9\\-]{0,61}[a-z0-9])?$\n      minLength: 1\n      maxLength: 63\n    CustomDomainConfigType:\n      type: object\n      required:\n        - CertificateArn\n      properties:\n        CertificateArn:\n          $ref: \"#/components/schemas/ArnType\"\n      description: The configuration for a custom domain that hosts the sign-up and sign-in\n        webpages for your application.\n    UserPoolNameType:\n      type: string\n      pattern: \"[\\\\w\\\\s+=,.@-]+\"\n      minLength: 1\n      maxLength: 128\n    UserPoolPolicyType:\n      type: object\n      properties:\n        PasswordPolicy:\n          $ref: \"#/components/schemas/PasswordPolicyType\"\n      description: The policy associated with a user pool.\n    LambdaConfigType:\n      type: object\n      properties:\n        PreSignUp:\n          $ref: \"#/components/schemas/ArnType\"\n        CustomMessage:\n          $ref: \"#/components/schemas/ArnType\"\n        PostConfirmation:\n          $ref: \"#/components/schemas/ArnType\"\n        PreAuthentication:\n          $ref: \"#/components/schemas/ArnType\"\n        PostAuthentication:\n          $ref: \"#/components/schemas/ArnType\"\n        DefineAuthChallenge:\n          $ref: \"#/components/schemas/ArnType\"\n        CreateAuthChallenge:\n          $ref: \"#/components/schemas/ArnType\"\n        VerifyAuthChallengeResponse:\n          $ref: \"#/components/schemas/ArnType\"\n        PreTokenGeneration:\n          $ref: \"#/components/schemas/ArnType\"\n        UserMigration:\n          $ref: \"#/components/schemas/ArnType\"\n      description: Specifies the configuration for AWS Lambda triggers.\n    VerifiedAttributesListType:\n      type: array\n      items:\n        $ref: \"#/components/schemas/VerifiedAttributeType\"\n    UsernameAttributesListType:\n      type: array\n      items:\n        $ref: \"#/components/schemas/UsernameAttributeType\"\n    SmsVerificationMessageType:\n      type: string\n      pattern: .*\\{####\\}.*\n      minLength: 6\n      maxLength: 140\n    EmailVerificationMessageType:\n      type: string\n      pattern: \"[\\\\p{L}\\\\p{M}\\\\p{S}\\\\p{N}\\\\p{P}\\\\s*]*\\\\{####\\\\}[\\\\p{L}\\\\p{M}\\\\p{S}\\\\p{\\\n        N}\\\\p{P}\\\\s*]*\"\n      minLength: 6\n      maxLength: 20000\n    EmailVerificationSubjectType:\n      type: string\n      pattern: \"[\\\\p{L}\\\\p{M}\\\\p{S}\\\\p{N}\\\\p{P}\\\\s]+\"\n      minLength: 1\n      maxLength: 140\n    VerificationMessageTemplateType:\n      type: object\n      properties:\n        SmsMessage:\n          $ref: \"#/components/schemas/SmsVerificationMessageType\"\n        EmailMessage:\n          $ref: \"#/components/schemas/EmailVerificationMessageType\"\n        EmailSubject:\n          $ref: \"#/components/schemas/EmailVerificationSubjectType\"\n        EmailMessageByLink:\n          $ref: \"#/components/schemas/EmailVerificationMessageByLinkType\"\n        EmailSubjectByLink:\n          $ref: \"#/components/schemas/EmailVerificationSubjectByLinkType\"\n        DefaultEmailOption:\n          $ref: \"#/components/schemas/DefaultEmailOptionType\"\n      description: The template for verification messages.\n    UserPoolMfaType:\n      type: string\n      enum:\n        - OFF\n        - ON\n        - OPTIONAL\n    DeviceConfigurationType:\n      type: object\n      properties:\n        ChallengeRequiredOnNewDevice:\n          $ref: \"#/components/schemas/BooleanType\"\n        DeviceOnlyRememberedOnUserPrompt:\n          $ref: \"#/components/schemas/BooleanType\"\n      description: The configuration for the user pool's device tracking.\n    EmailConfigurationType:\n      type: object\n      properties:\n        SourceArn:\n          $ref: \"#/components/schemas/ArnType\"\n        ReplyToEmailAddress:\n          $ref: \"#/components/schemas/EmailAddressType\"\n        EmailSendingAccount:\n          $ref: \"#/components/schemas/EmailSendingAccountType\"\n      description: The email configuration type.\n    SmsConfigurationType:\n      type: object\n      required:\n        - SnsCallerArn\n      properties:\n        SnsCallerArn:\n          $ref: \"#/components/schemas/ArnType\"\n        ExternalId:\n          $ref: \"#/components/schemas/StringType\"\n      description: The SMS configuration type that includes the settings the Cognito User\n        Pool needs to call for the Amazon SNS service to send an SMS message\n        from your AWS account. The Cognito User Pool makes the request to the\n        Amazon SNS Service by using an AWS IAM role that you provide for your\n        AWS account.\n    UserPoolTagsType:\n      type: object\n      additionalProperties:\n        $ref: \"#/components/schemas/TagValueType\"\n    SchemaAttributesListType:\n      type: array\n      items:\n        $ref: \"#/components/schemas/SchemaAttributeType\"\n      minItems: 1\n      maxItems: 50\n    UserPoolAddOnsType:\n      type: object\n      required:\n        - AdvancedSecurityMode\n      properties:\n        AdvancedSecurityMode:\n          $ref: \"#/components/schemas/AdvancedSecurityModeType\"\n      description: The user pool add-ons type.\n    UserPoolType:\n      type: object\n      properties:\n        Id:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        Name:\n          $ref: \"#/components/schemas/UserPoolNameType\"\n        Policies:\n          $ref: \"#/components/schemas/UserPoolPolicyType\"\n        LambdaConfig:\n          $ref: \"#/components/schemas/LambdaConfigType\"\n        Status:\n          $ref: \"#/components/schemas/StatusType\"\n        LastModifiedDate:\n          $ref: \"#/components/schemas/DateType\"\n        CreationDate:\n          $ref: \"#/components/schemas/DateType\"\n        SchemaAttributes:\n          $ref: \"#/components/schemas/SchemaAttributesListType\"\n        AutoVerifiedAttributes:\n          $ref: \"#/components/schemas/VerifiedAttributesListType\"\n        AliasAttributes:\n          $ref: \"#/components/schemas/AliasAttributesListType\"\n        UsernameAttributes:\n          $ref: \"#/components/schemas/UsernameAttributesListType\"\n        SmsVerificationMessage:\n          $ref: \"#/components/schemas/SmsVerificationMessageType\"\n        EmailVerificationMessage:\n          $ref: \"#/components/schemas/EmailVerificationMessageType\"\n        EmailVerificationSubject:\n          $ref: \"#/components/schemas/EmailVerificationSubjectType\"\n        VerificationMessageTemplate:\n          $ref: \"#/components/schemas/VerificationMessageTemplateType\"\n        SmsAuthenticationMessage:\n          $ref: \"#/components/schemas/SmsVerificationMessageType\"\n        MfaConfiguration:\n          $ref: \"#/components/schemas/UserPoolMfaType\"\n        DeviceConfiguration:\n          $ref: \"#/components/schemas/DeviceConfigurationType\"\n        EstimatedNumberOfUsers:\n          $ref: \"#/components/schemas/IntegerType\"\n        EmailConfiguration:\n          $ref: \"#/components/schemas/EmailConfigurationType\"\n        SmsConfiguration:\n          $ref: \"#/components/schemas/SmsConfigurationType\"\n        UserPoolTags:\n          $ref: \"#/components/schemas/UserPoolTagsType\"\n        SmsConfigurationFailure:\n          $ref: \"#/components/schemas/StringType\"\n        EmailConfigurationFailure:\n          $ref: \"#/components/schemas/StringType\"\n        Domain:\n          $ref: \"#/components/schemas/DomainType\"\n        CustomDomain:\n          $ref: \"#/components/schemas/DomainType\"\n        AdminCreateUserConfig:\n          $ref: \"#/components/schemas/AdminCreateUserConfigType\"\n        UserPoolAddOns:\n          $ref: \"#/components/schemas/UserPoolAddOnsType\"\n        Arn:\n          $ref: \"#/components/schemas/ArnType\"\n      description: A container for information about the user pool.\n    CustomAttributeNameType:\n      type: string\n      pattern: \"[\\\\p{L}\\\\p{M}\\\\p{S}\\\\p{N}\\\\p{P}]+\"\n      minLength: 1\n      maxLength: 20\n    SchemaAttributeType:\n      type: object\n      properties:\n        Name:\n          $ref: \"#/components/schemas/CustomAttributeNameType\"\n        AttributeDataType:\n          $ref: \"#/components/schemas/AttributeDataType\"\n        DeveloperOnlyAttribute:\n          $ref: \"#/components/schemas/BooleanType\"\n        Mutable:\n          $ref: \"#/components/schemas/BooleanType\"\n        Required:\n          $ref: \"#/components/schemas/BooleanType\"\n        NumberAttributeConstraints:\n          $ref: \"#/components/schemas/NumberAttributeConstraintsType\"\n        StringAttributeConstraints:\n          $ref: \"#/components/schemas/StringAttributeConstraintsType\"\n      description: Contains information about the schema attribute.\n    DefaultEmailOptionType:\n      type: string\n      enum:\n        - CONFIRM_WITH_LINK\n        - CONFIRM_WITH_CODE\n    ProviderNameType:\n      type: string\n      pattern: \"[\\\\p{L}\\\\p{M}\\\\p{S}\\\\p{N}\\\\p{P}]+\"\n      minLength: 1\n      maxLength: 32\n    RiskConfigurationType:\n      type: object\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        ClientId:\n          $ref: \"#/components/schemas/ClientIdType\"\n        CompromisedCredentialsRiskConfiguration:\n          $ref: \"#/components/schemas/CompromisedCredentialsRiskConfigurationType\"\n        AccountTakeoverRiskConfiguration:\n          $ref: \"#/components/schemas/AccountTakeoverRiskConfigurationType\"\n        RiskExceptionConfiguration:\n          $ref: \"#/components/schemas/RiskExceptionConfigurationType\"\n        LastModifiedDate:\n          $ref: \"#/components/schemas/DateType\"\n      description: The risk configuration type.\n    UserImportJobIdType:\n      type: string\n      pattern: import-[0-9a-zA-Z-]+\n      minLength: 1\n      maxLength: 55\n    DomainDescriptionType:\n      type: object\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        AWSAccountId:\n          $ref: \"#/components/schemas/AWSAccountIdType\"\n        Domain:\n          $ref: \"#/components/schemas/DomainType\"\n        S3Bucket:\n          $ref: \"#/components/schemas/S3BucketType\"\n        CloudFrontDistribution:\n          $ref: \"#/components/schemas/StringType\"\n        Version:\n          $ref: \"#/components/schemas/DomainVersionType\"\n        Status:\n          $ref: \"#/components/schemas/DomainStatusType\"\n        CustomDomainConfig:\n          $ref: \"#/components/schemas/CustomDomainConfigType\"\n      description: A container for information about a domain.\n    S3BucketType:\n      type: string\n      pattern: ^[0-9A-Za-z\\.\\-_]*(?\u003c!\\.)$\n      minLength: 3\n      maxLength: 1024\n    DomainVersionType:\n      type: string\n      minLength: 1\n      maxLength: 20\n    DomainStatusType:\n      type: string\n      enum:\n        - CREATING\n        - DELETING\n        - UPDATING\n        - ACTIVE\n        - FAILED\n    EmailAddressType:\n      type: string\n      pattern: \"[\\\\p{L}\\\\p{M}\\\\p{S}\\\\p{N}\\\\p{P}]+@[\\\\p{L}\\\\p{M}\\\\p{S}\\\\p{N}\\\\p{P}]+\"\n    EmailSendingAccountType:\n      type: string\n      enum:\n        - COGNITO_DEFAULT\n        - DEVELOPER\n    EmailNotificationBodyType:\n      type: string\n      pattern: \"[\\\\p{L}\\\\p{M}\\\\p{S}\\\\p{N}\\\\p{P}\\\\s*]+\"\n      minLength: 6\n      maxLength: 20000\n    EmailNotificationSubjectType:\n      type: string\n      pattern: \"[\\\\p{L}\\\\p{M}\\\\p{S}\\\\p{N}\\\\p{P}\\\\s]+\"\n      minLength: 1\n      maxLength: 140\n    EmailVerificationMessageByLinkType:\n      type: string\n      pattern: \"[\\\\p{L}\\\\p{M}\\\\p{S}\\\\p{N}\\\\p{P}\\\\s*]*\\\\{##[\\\\p{L}\\\\p{M}\\\\p{S}\\\\p{N}\\\\p\\\n        {P}\\\\s*]*##\\\\}[\\\\p{L}\\\\p{M}\\\\p{S}\\\\p{N}\\\\p{P}\\\\s*]*\"\n      minLength: 6\n      maxLength: 20000\n    EmailVerificationSubjectByLinkType:\n      type: string\n      pattern: \"[\\\\p{L}\\\\p{M}\\\\p{S}\\\\p{N}\\\\p{P}\\\\s]+\"\n      minLength: 1\n      maxLength: 140\n    EventFilterType:\n      type: string\n      enum:\n        - SIGN_IN\n        - PASSWORD_CHANGE\n        - SIGN_UP\n    RiskDecisionType:\n      type: string\n      enum:\n        - NoRisk\n        - AccountTakeover\n        - Block\n    RiskLevelType:\n      type: string\n      enum:\n        - Low\n        - Medium\n        - High\n    ExplicitAuthFlowsType:\n      type: string\n      enum:\n        - ADMIN_NO_SRP_AUTH\n        - CUSTOM_AUTH_FLOW_ONLY\n        - USER_PASSWORD_AUTH\n    ListOfStringTypes:\n      type: array\n      items:\n        $ref: \"#/components/schemas/StringType\"\n    IdpIdentifierType:\n      type: string\n      pattern: \"[\\\\w\\\\s+=.@-]+\"\n      minLength: 1\n      maxLength: 40\n    UICustomizationType:\n      type: object\n      properties:\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        ClientId:\n          $ref: \"#/components/schemas/ClientIdType\"\n        ImageUrl:\n          $ref: \"#/components/schemas/ImageUrlType\"\n        CSS:\n          $ref: \"#/components/schemas/CSSType\"\n        CSSVersion:\n          $ref: \"#/components/schemas/CSSVersionType\"\n        LastModifiedDate:\n          $ref: \"#/components/schemas/DateType\"\n        CreationDate:\n          $ref: \"#/components/schemas/DateType\"\n      description: A container for the UI customization information for a user pool's\n        built-in app UI.\n    SmsMfaConfigType:\n      type: object\n      properties:\n        SmsAuthenticationMessage:\n          $ref: \"#/components/schemas/SmsVerificationMessageType\"\n        SmsConfiguration:\n          $ref: \"#/components/schemas/SmsConfigurationType\"\n      description: The SMS text message multi-factor authentication (MFA) configuration\n        type.\n    SoftwareTokenMfaConfigType:\n      type: object\n      properties:\n        Enabled:\n          $ref: \"#/components/schemas/BooleanType\"\n      description: The type used for enabling software token MFA at the user pool level.\n    HttpHeader:\n      type: object\n      properties:\n        headerName:\n          $ref: \"#/components/schemas/StringType\"\n        headerValue:\n          $ref: \"#/components/schemas/StringType\"\n      description: The HTTP header.\n    ImageFileType:\n      type: string\n    ImageUrlType:\n      type: string\n    ListProvidersLimitType:\n      type: integer\n      minimum: 0\n      maximum: 60\n    PaginationKeyType:\n      type: string\n      pattern: \"[\\\\S]+\"\n      minLength: 1\n    ProvidersListType:\n      type: array\n      items:\n        $ref: \"#/components/schemas/ProviderDescription\"\n      minItems: 0\n      maxItems: 50\n    ListResourceServersLimitType:\n      type: integer\n      minimum: 1\n      maximum: 50\n    ResourceServersListType:\n      type: array\n      items:\n        $ref: \"#/components/schemas/ResourceServerType\"\n    PoolQueryLimitType:\n      type: integer\n      minimum: 1\n      maximum: 60\n    UserImportJobsListType:\n      type: array\n      items:\n        $ref: \"#/components/schemas/UserImportJobType\"\n      minItems: 1\n      maxItems: 50\n    QueryLimit:\n      type: integer\n      minimum: 1\n      maximum: 60\n    UserPoolClientListType:\n      type: array\n      items:\n        $ref: \"#/components/schemas/UserPoolClientDescription\"\n    UserPoolListType:\n      type: array\n      items:\n        $ref: \"#/components/schemas/UserPoolDescriptionType\"\n    UsersListType:\n      type: array\n      items:\n        $ref: \"#/components/schemas/UserType\"\n    SearchedAttributeNamesListType:\n      type: array\n      items:\n        $ref: \"#/components/schemas/AttributeNameType\"\n    UserFilterType:\n      type: string\n      maxLength: 256\n    LongType:\n      type: integer\n    MFAOptionType:\n      type: object\n      properties:\n        DeliveryMedium:\n          $ref: \"#/components/schemas/DeliveryMediumType\"\n        AttributeName:\n          $ref: \"#/components/schemas/AttributeNameType\"\n      description: \u003cp\u003e \u003ci\u003eThis data type is no longer supported.\u003c/i\u003e You can use it only\n        for SMS MFA configurations. You can't use it for TOTP software token MFA\n        configurations.\u003c/p\u003e \u003cp\u003eTo set either type of MFA configuration, use the\n        \u003ca\u003eAdminSetUserMFAPreference\u003c/a\u003e or \u003ca\u003eSetUserMFAPreference\u003c/a\u003e\n        actions.\u003c/p\u003e \u003cp\u003eTo look up information about either type of MFA\n        configuration, use the \u003ca\u003eAdminGetUserResponse$UserMFASettingList\u003c/a\u003e or\n        \u003ca\u003eGetUserResponse$UserMFASettingList\u003c/a\u003e responses.\u003c/p\u003e\n    NotifyEmailType:\n      type: object\n      required:\n        - Subject\n      properties:\n        Subject:\n          $ref: \"#/components/schemas/EmailNotificationSubjectType\"\n        HtmlBody:\n          $ref: \"#/components/schemas/EmailNotificationBodyType\"\n        TextBody:\n          $ref: \"#/components/schemas/EmailNotificationBodyType\"\n      description: The notify email type.\n    NumberAttributeConstraintsType:\n      type: object\n      properties:\n        MinValue:\n          $ref: \"#/components/schemas/StringType\"\n        MaxValue:\n          $ref: \"#/components/schemas/StringType\"\n      description: The minimum and maximum value of an attribute that is of the number data\n        type.\n    OAuthFlowType:\n      type: string\n      enum:\n        - code\n        - implicit\n        - client_credentials\n    PasswordPolicyMinLengthType:\n      type: integer\n      minimum: 6\n      maximum: 99\n    TemporaryPasswordValidityDaysType:\n      type: integer\n      minimum: 0\n      maximum: 365\n    PasswordPolicyType:\n      type: object\n      properties:\n        MinimumLength:\n          $ref: \"#/components/schemas/PasswordPolicyMinLengthType\"\n        RequireUppercase:\n          $ref: \"#/components/schemas/BooleanType\"\n        RequireLowercase:\n          $ref: \"#/components/schemas/BooleanType\"\n        RequireNumbers:\n          $ref: \"#/components/schemas/BooleanType\"\n        RequireSymbols:\n          $ref: \"#/components/schemas/BooleanType\"\n        TemporaryPasswordValidityDays:\n          $ref: \"#/components/schemas/TemporaryPasswordValidityDaysType\"\n      description: The password policy type.\n    PreSignedUrlType:\n      type: string\n      minLength: 0\n      maxLength: 2048\n    ProviderDescription:\n      type: object\n      properties:\n        ProviderName:\n          $ref: \"#/components/schemas/ProviderNameType\"\n        ProviderType:\n          $ref: \"#/components/schemas/IdentityProviderTypeType\"\n        LastModifiedDate:\n          $ref: \"#/components/schemas/DateType\"\n        CreationDate:\n          $ref: \"#/components/schemas/DateType\"\n      description: A container for identity provider details.\n    ResourceServerScopeDescriptionType:\n      type: string\n      minLength: 1\n      maxLength: 256\n    ResourceServerScopeType:\n      type: object\n      required:\n        - ScopeName\n        - ScopeDescription\n      properties:\n        ScopeName:\n          $ref: \"#/components/schemas/ResourceServerScopeNameType\"\n        ScopeDescription:\n          $ref: \"#/components/schemas/ResourceServerScopeDescriptionType\"\n      description: A resource server scope.\n    ResourceServerScopeNameType:\n      type: string\n      pattern: \"[\\\\x21\\\\x23-\\\\x2E\\\\x30-\\\\x5B\\\\x5D-\\\\x7E]+\"\n      minLength: 1\n      maxLength: 256\n    RiskExceptionConfigurationType:\n      type: object\n      properties:\n        BlockedIPRangeList:\n          $ref: \"#/components/schemas/BlockedIPRangeListType\"\n        SkippedIPRangeList:\n          $ref: \"#/components/schemas/SkippedIPRangeListType\"\n      description: The type of the configuration to override the risk decision.\n    SkippedIPRangeListType:\n      type: array\n      items:\n        $ref: \"#/components/schemas/StringType\"\n      maxItems: 20\n    StringAttributeConstraintsType:\n      type: object\n      properties:\n        MinLength:\n          $ref: \"#/components/schemas/StringType\"\n        MaxLength:\n          $ref: \"#/components/schemas/StringType\"\n      description: The constraints associated with a string attribute.\n    ScopeType:\n      type: string\n      pattern: \"[\\\\x21\\\\x23-\\\\x5B\\\\x5D-\\\\x7E]+\"\n      minLength: 1\n      maxLength: 256\n    SoftwareTokenMFAUserCodeType:\n      type: string\n      pattern: \"[0-9]+\"\n      minLength: 6\n      maxLength: 6\n    StatusType:\n      type: string\n      enum:\n        - Enabled\n        - Disabled\n    TagKeysType:\n      type: string\n      minLength: 1\n      maxLength: 128\n    TagValueType:\n      type: string\n      minLength: 0\n      maxLength: 256\n    UserPoolTagsListType:\n      type: array\n      items:\n        $ref: \"#/components/schemas/TagKeysType\"\n    UserImportJobStatusType:\n      type: string\n      enum:\n        - Created\n        - Pending\n        - InProgress\n        - Stopping\n        - Expired\n        - Stopped\n        - Failed\n        - Succeeded\n    UserPoolClientDescription:\n      type: object\n      properties:\n        ClientId:\n          $ref: \"#/components/schemas/ClientIdType\"\n        UserPoolId:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        ClientName:\n          $ref: \"#/components/schemas/ClientNameType\"\n      description: The description of the user pool client.\n    UserPoolDescriptionType:\n      type: object\n      properties:\n        Id:\n          $ref: \"#/components/schemas/UserPoolIdType\"\n        Name:\n          $ref: \"#/components/schemas/UserPoolNameType\"\n        LambdaConfig:\n          $ref: \"#/components/schemas/LambdaConfigType\"\n        Status:\n          $ref: \"#/components/schemas/StatusType\"\n        LastModifiedDate:\n          $ref: \"#/components/schemas/DateType\"\n        CreationDate:\n          $ref: \"#/components/schemas/DateType\"\n      description: A user pool description.\n    UsernameAttributeType:\n      type: string\n      enum:\n        - phone_number\n        - email\n    VerifiedAttributeType:\n      type: string\n      enum:\n        - phone_number\n        - email\n    VerifySoftwareTokenResponseType:\n      type: string\n      enum:\n        - SUCCESS\n        - ERROR\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"AdvancedSecurityModeType\": parse enum values: parse value \"false\": expected type \"string\", got \"bool\""
}