{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/appNG/appng"
		},
		"file": {
			"name": "appng-openapi.yaml",
			"size": 0,
			"path": "appng-rest-api/src/main/resources/org/appng/api/rest/appng-openapi.yaml",
			"byteSize": 28525,
			"content": "openapi: 3.0.1\ninfo:\n  version: 1.0.0\n  title: appNG REST API\n  description: The REST API for appNG\n  contact:\n    name: appNG developer team\n    email: matthias.mueller@appng.org\n    url: http://appng.org\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0\nsecurity:\n  - appNGCookie: []\npaths:\n  \"/service/{site}/{application}/rest/openapi/navigation\":\n    get:\n      tags:\n        - appNG\n      operationId: getNavigation\n      parameters:\n        - in: path \n          name: site\n          description: the site to call\n          required: true\n          schema:\n            type: string\n        - in: path \n          name: application\n          description: the application to call\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: datasource response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Navigation\"\n  \"/service/{site}/{application}/rest/openapi/page/{id}/{pageUrlParams}\":\n    get:\n      tags:\n        - appNG\n      operationId: getPageWithUrlParams\n      parameters:\n        - in: path \n          name: site\n          description: the site to call\n          required: true\n          schema:\n            type: string\n        - in: path \n          name: application\n          description: the application to call\n          required: true\n          schema:\n            type: string\n        - in: path \n          name: id\n          description: the ID of the page\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: pageUrlParams\n          description: the URL path to parametrize the page with.\n          required: true         \n          schema:\n            type: string\n        - in: query\n          name: _sect\n          description: a list of section IDs to fill\n          required: false         \n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        \"200\":\n          description: datasource response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PageDefinition\"\n  \"/service/{site}/{application}/rest/openapi/datasource/{id}/{params}\":\n    get:\n      tags:\n        - appNG\n      description: Returns a datasource by id\n      operationId: getDatasource\n      parameters:\n        - in: path \n          name: site\n          description: the site to call\n          required: true\n          schema:\n            type: string\n        - in: path \n          name: application\n          description: the application to call\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: id\n          description: The id of the datasource.\n          schema:\n            type: string\n          required: true\n        - in: path\n          name: params\n          description: |\n            The id of the datasource.\n            Parameters (including sorting and filtering parameters) are passed as matrix style parameters.\n            Note that names and values of these matrix parameters must be URL-Encoded\n          schema:\n            type: string\n          style: matrix\n          explode: true\n          example: ;name=appng;host=localhost;sortSites=name%3Aasc%3Bhost%3Adesc%3Bpage%3A0%3BpageSize%3A10\n          required: true\n      responses:\n        \"200\":\n          description: datasource response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Datasource\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorModel\"\n  \"/service/{site}/{application}/rest/openapi/action/{event-id}/{id}/{params}\":\n    get:\n      tags:\n        - appNG\n      description: Returns an action. To be used for initially retrieving the action.\n      operationId: getAction\n      parameters:\n        - in: path \n          name: site\n          description: the site to call\n          required: true\n          schema:\n            type: string\n        - in: path \n          name: application\n          description: the application to call\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: event-id\n          description: event-id of the action\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: id\n          description: The ID of the action.\n          required: true\n          schema:\n            type: string          \n        - in: path\n          name: params\n          description: \n            Parameters (including sorting and filtering parameters) are passed as matrix style parameters.\n            Note that names and values of these matrix parameters must be URL-Encoded\n          schema:\n            type: string\n          style: matrix\n          explode: true\n          example: ;name=appng;host=localhost;sortSites=name%3Aasc%3Bhost%3Adesc%3Bpage%3A0%3BpageSize%3A10\n          required: true\n      responses:\n        \"200\":\n          description: action response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Action\"\n        \"400\":\n          description: action response, in case an recoverable error occurred\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Action\"\n        default:\n          description: unexpected/unrecoverable error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorModel\"\n  \"/service/{site}/{application}/rest/openapi/action/multipart/{event-id}/{id}/{params}\":\n    post:\n      tags:\n        - appNG\n      description: Performs an action.\n      operationId: performActionMultiPart\n      parameters:\n        - in: path \n          name: site\n          description: the site to call\n          required: true\n          schema:\n            type: string\n        - in: path \n          name: application\n          description: the application to call\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: event-id\n          description: event-id of the action\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: id\n          description: The ID of the action.\n          required: true\n          schema:\n            type: string          \n        - in: path\n          name: params\n          description: \n            Parameters (including sorting and filtering parameters) are passed as matrix style parameters.\n            Note that names and values of these matrix parameters must be URL-Encoded\n          schema:\n            type: string\n          style: matrix\n          explode: true\n          example: ;name=appng;host=localhost;sortSites=name%3Aasc%3Bhost%3Adesc%3Bpage%3A0%3BpageSize%3A10\n          required: true\n      requestBody:\n        description: For each field of an action, a multipart parameter must be present .\n        content: \n          multipart/form-data:\n            schema:\n              type: object\n      responses:\n        \"200\":\n          description: action response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Action\"\n        \"400\":\n          description: action response, in case an recoverable error occurred\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Action\"\n        default:\n          description: unexpected/unrecoverable error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorModel\"\ncomponents:\n  securitySchemes:\n    appNGCookie:\n      type: apiKey\n      in: cookie\n      name: JSESSIONID\n  schemas:\n    PageDefinition:\n      type: object\n      required:\n        - id\n        - _self\n      properties:\n        _self:\n          type: string\n          description: The URL of the page\n        _userUrl:\n          type: string\n          description: The URL of the page represented to the user\n        user:\n          $ref: \"#/components/schemas/User\"\n        id:\n          type: string\n        messages:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Message\"\n        urlPath:\n          type: string\n          description: the current URL path \n        urlParameters:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Parameter\"\n        urlTemplate:\n          type: string\n          description: A complete template for teh full path this page can handle\n        getParameters:\n          type: object\n          additionalProperties:\n            type: string\n        sessionParameters:\n          type: object\n          additionalProperties:\n            type: string\n        title:\n          $ref: \"#/components/schemas/Label\"\n        links:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Link\"\n        sections:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Section\"\n        appNGVersion:\n          type: String\n          description: The version of appNG\n        appVersion:\n          type: String\n          description: The version of the application\n    Section:\n      type: object\n      required:\n        - id\n        - _self\n      properties:\n        _self:\n          type: string\n          description: the API path to this section\n        id:\n          type: string\n        title:\n          $ref: \"#/components/schemas/Label\"\n        hidden:\n          type: boolean\n          description: Whether the section is hidden or not\n        elements:\n          type: array\n          items:\n            $ref: \"#/components/schemas/SectionElement\"\n    SectionElement:\n      type: object\n      properties:\n        title:\n          type: string\n        collapsed:\n          type: boolean\n          description: Whether the element is collapsed\n        datasource:\n          $ref: \"#/components/schemas/Datasource\"\n        action:\n          $ref: \"#/components/schemas/Action\"\n    Action:\n      type: object\n      description: An action, representing an executable operation.\n      required:\n        - _self\n        - id\n        - event-id\n      properties:\n        _self:\n          type: string\n          description: The URL of the action\n        _execute:\n          type: string\n          description: The URL to execute the action\n        id:\n          type: string\n          description: The Id of the action.\n        event-id:\n          type: string\n          description: The event-Id of the action.\n        title:\n          type: string\n          description: The title of the datasource.\n        parameters:\n          type: object\n          description: A list of parameters for the action\n          additionalProperties:\n            type: string\n        user:\n          $ref: \"#/components/schemas/User\"\n        messages:\n          type: array\n          description: A list of messages.\n          items:\n            $ref: \"#/components/schemas/Message\"\n        fields:\n          type: array\n          description: A list of action-fields.\n          items:\n            $ref: \"#/components/schemas/ActionField\"\n        permissions:\n          type: array\n          description: The permissions for this action.\n          items:\n            $ref: \"#/components/schemas/Permission\"\n        onSuccess:\n          type: string\n        appNGVersion:\n          type: String\n          description: The version of appNG\n        appVersion:\n          type: String\n          description: The version of the application  \n    Datasource:\n      type: object\n      description: A datasource, represented by either a page (of elements) or a single\n        element.\n      required:\n        - id\n        - _self\n      properties:\n        _self:\n          type: string\n          description: The URL of the datasource\n        id:\n          type: string\n          description: The unique ID of the datasource.\n        title:\n          type: string\n          description: The title of the datasource.\n        parameters:\n          type: object\n          description: The parameters for the datasource.\n          additionalProperties:\n            type: string\n        user:\n          $ref: \"#/components/schemas/User\"\n        links:\n          type: array\n          description: A list of links.\n          items:\n            $ref: \"#/components/schemas/Link\"\n        messages:\n          type: array\n          description: A list of messages.\n          items:\n            $ref: \"#/components/schemas/Message\"\n        fields:\n          type: array\n          description: A list of fields.\n          items:\n            $ref: \"#/components/schemas/Field\"\n        filters:\n          type: array\n          description: A list of filters.\n          items:\n            $ref: \"#/components/schemas/Filter\"\n        filterResetPath:\n          type: string\n          description: the path to be called to reset the filter\n        page:\n          $ref: \"#/components/schemas/Page\"\n        item:\n          $ref: \"#/components/schemas/Item\"\n        items:\n          type: array\n          description: The items of this page.\n          items:\n            $ref: \"#/components/schemas/Item\"  \n        permissions:\n          type: array\n          description: The permissions for this datasource.\n          items:\n            $ref: \"#/components/schemas/Permission\"\n        appNGVersion:\n          type: String\n          description: The version of appNG\n        appVersion:\n          type: String\n          description: The version of the application\n    ErrorModel:\n      type: object\n      description: \"\"\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          format: int32\n          description: \"\"\n        message:\n          type: string\n          description: \"\"\n    Field:\n      type: object\n      description: A field that is part of a datasource.\n      required:\n        - name\n        - fieldType\n      properties:\n        name:\n          type: string\n          description: The name for this field.\n        label:\n          type: string\n          description: The label for this field.\n        fieldType:\n          $ref: \"#/components/schemas/FieldType\"\n        sort:\n          $ref: \"#/components/schemas/Sort\"\n        format:\n          type: string\n          description: The format for this field, depending on its type.\n        rules:\n          type: array\n          description: The validation rules that should be applied for this field.\n          items:\n            $ref: \"#/components/schemas/ValidationRule\"\n        fields:\n          type: object\n          description: The child fields of this field.\n          additionalProperties:\n            $ref: \"#/components/schemas/Field\"\n    Icon:\n      type: object\n      description: an icon\n      properties:\n        name:\n          type: string\n        label:\n          type: string\n    FieldValue:\n      type: object\n      description: The value of a field within a datasource.\n      required:\n        - name\n      properties:\n        name:\n          type: string\n          description: The name of the field.\n        value:\n          type: object\n          description: |\n            The value of the field.\n            This can be a simple string,integer,number or boolean value (for simple FieldTypes), \n            or an object (namely: an associative array of FieldValues for FieldType.OBJECT)\n            or an array of objects (namely: an array of associative arrays of FieldValues for for FieldType.LIST_OBJECT).\n        formattedValue:\n          type: string\n          description: The formatted value of the field (only applies for \"simple\" FieldTypes).\n        icons:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Icon\"\n    Page:\n      type: object\n      description: A page that contains paging information an a list of elements.\n      required:\n        - _first\n        - _previous\n        - _next\n        - _last\n        - number\n        - size\n        - totalPages\n        - totalItems\n        - isFirst\n        - isLast\n      properties:\n        _first:\n          type: string\n          description: path to the first page\n        _previous:\n          type: string\n          description: path to the previous page\n        _next:\n          type: string\n          description: path to the next page\n        _last:\n          type: string\n          description: path to the last page\n        number:\n          type: integer\n          format: int32\n          description: The 0-based number of the current page.\n        size:\n          type: integer\n          format: int32\n          description: The number of items per page.\n        totalPages:\n          type: integer\n          format: int32\n          description: The number of total pages.\n        totalItems:\n          type: integer\n          format: int32\n          description: The total number of items.\n        isFirst:\n          type: boolean\n          description: If this is the first page.\n        isLast:\n          type: boolean\n          description: If this is the last page.\n        pageSizes:  \n          type: array\n          items:\n            $ref: \"#/components/schemas/PageSize\"\n    PageSize:\n      type: object\n      description: describes the size and path for setting a page size\n      properties:\n        size:\n          type: integer\n          format: int32\n          description: the number of items to show\n        path:\n          type: string\n          description: the path\n    Sort:\n      type: object\n      description: Marks a field as sortable, properties are filled only when sorting has\n        been applied.\n      properties:\n        prio:\n          type: integer\n          description: The priority for this sort, important when a multi-field sort is\n            applied.\n        order:\n          type: string\n          enum:\n            - asc\n            - desc\n          description: The order for this sort (ascending or descending).\n        pathAsc:\n          type: string\n          description: the path to sort ascending\n        pathDesc:\n          type: string\n          description: the path to sort descending\n    Item:\n      type: object\n      description: A single item of a page.\n      properties:\n        fields:\n          type: object\n          description: The list of field-values of the item.\n          additionalProperties:\n            $ref: \"#/components/schemas/FieldValue\"\n        selected:\n          type: boolean\n          description: Whether this item is selected/active.\n        links:\n          type: array\n          description: A list of links.\n          items:\n            $ref: \"#/components/schemas/Link\"\n    Link:\n      type: object\n      description: A link.\n      required:\n      - type\n      discriminator:\n        propertyName: linkType\n      properties:\n        type:\n          type: string\n          description: |\n            * page - Links to a page.\n            * extern - Links to an external resource.\n            * intern - Links to an internal resource.\n            * action - Links to an action.\n            * datasource - Links to a datasource\n          enum:\n            - page\n            - extern\n            - intern\n            - action\n            - datasource\n        id:\n          type: string\n          description: The ID for this link.\n        label:\n          type: string\n          description: The label for the link.\n        target:\n          type: string\n          description: The target for the link.\n        icon:\n          type: string\n          description: A descriptive name for an icon that should be used for this link.\n        default:\n          type: boolean\n          description: Whether or not this link should be considered as default.\n        confirmation:\n          type: string\n          description: A confirmation message that should be displayed to the user before\n            following this link.\n    ActionLink:\n      allOf:\n      - $ref: '#/components/schemas/Link'\n      - type: object\n        properties:\n          id:\n            type: string\n            description: ID of the action\n          event-id:\n            type: string\n            description: Event-ID of the action\n          interactive:\n            type: boolean\n            description: Wether or not this action requires additional user-input\n          parameters:\n            type: array\n            items:\n              $ref: \"#/components/schemas/Parameter\"\n    Filter:\n      type: object\n      description: A filter that applies to a datasource.\n      properties:\n        name:\n          type: string\n          description: The name of the filter.\n        label:\n          type: string\n          description: The label iof the filter.\n        type:\n          $ref: \"#/components/schemas/OptionType\"\n        options:\n          $ref: \"#/components/schemas/Options\"\n    Options:\n      type: object\n      description: A set of selectable options\n      properties:\n        multiple:\n          type: boolean\n          description: Whether or not this filter allows multiple options to be selected.\n        entries:\n          type: array\n          description: A list of options for this filter.\n          items:\n            $ref: \"#/components/schemas/Option\"\n    Option:\n      type: object\n      description: A single option, used in a filter or an action-field.\n      properties:\n        value:\n          type: string\n          description: The value for this option.\n        label:\n          type: string\n          description: The label for this option.\n        selected:\n          type: boolean\n          description: Whether or not this option is selected.\n        hits:\n          type: integer\n          description: Tells how many hits there are for this option.\n        options:\n          type: array\n          description: An option can act as a group and thus can itself own a list of\n            options.\n          items:\n            $ref: \"#/components/schemas/Option\"\n    FieldType:\n      type: string\n      description: The possible types for a field/action-field.\n      enum:\n        - text\n        - longtext\n        - richtext\n        - password\n        - url\n        - int\n        - long\n        - decimal\n        - checkbox\n        - coordinate\n        - date\n        - file\n        - file_multiple\n        - image\n        - linkpanel\n        - list_checkbox\n        - list_radio\n        - list_select\n        - list_text\n        - object\n        - list_object\n    OptionType:\n      type: string\n      description: The possible types for an option.\n      enum:\n        - select\n        - select_multiple\n        - radio\n        - checkbox\n        - text\n        - date\n    ActionField:\n      type: object\n      description: A single field as a part of an action.\n      properties:\n        name:\n          type: string\n          description: The name of the field.\n        value:\n          type: object\n          description: The value of the field. The concrete type of that object depends on\n            the fieldType of this field.\n        label:\n          type: string\n          description: The label for the field.\n        fieldType:\n          $ref: \"#/components/schemas/FieldType\"\n        readonly:\n          type: boolean\n          description: Whether or not this field is read-only.\n        visible:\n          type: boolean\n          description: Whether or not this field should be visible.\n        format:\n          type: string\n          description: The format for this field, depending on its type.\n        formattedValue:\n          type: string\n          description: The formatted value for this field.\n        options:\n          $ref: \"#/components/schemas/Options\"\n        rules:\n          type: array\n          description: The validation rules that should be applied for this field.\n          items:\n            $ref: \"#/components/schemas/ValidationRule\"\n        messages:\n          type: array\n          description: The messages related to this field.\n          items:\n            $ref: \"#/components/schemas/Message\"\n        fields:\n          type: array\n          description: The child fields of this fieldValue.\n          items:\n            $ref: \"#/components/schemas/ActionField\"\n    ValidationRule:\n      type: object\n      description: A validation rule that can be bound to an action-field.\n      properties:\n        type:\n          type: string\n          description: The type of the rule.\n        message:\n          type: string\n          description: The error message displayed when the rule isn't fulfilled.\n        active:\n          type: boolean\n          description: Whether or not this rule is active, meaning it should be applied.\n        messageKey:\n          type: string\n          description: The message key for this rule\n        options:\n          type: object\n          description: An array defining the custom parameters for this rule.\n          additionalProperties:\n            type: string\n    User:\n      type: object\n      description: \"\"\n      properties:\n        name:\n          type: string\n          description: \"the user's real name\"\n        nickName:\n          type: string\n          description: \"the user's nickname\"\n        authenticated:\n          type: boolean\n        email:\n          type: string\n          description: The email address of the user.\n          example: john@example.com\n        locale:\n          type: string\n          description: The IETF BCP 47 language tag for the user.\n          example: en_US\n        timezone:\n          type: string\n          description: The name of the IANA time zone the user is located at.\n          example: Europe/Berlin\n        decimalSeparator:\n          type: string\n          description: The charactor used as a decimal separator.\n          example: .\n        groupingSeparator:\n          type: string\n          description: The charactor used when grouping numbers.\n          example: \",\"\n    Message:\n      type: object\n      description: A textual message with a certain level.\n      properties:\n        level:\n          type: string\n          description: The level of the message.\n          enum:\n            - OK\n            - NOTICE\n            - INVALID\n            - ERROR\n        text:\n          type: string\n          description: The actual message.\n        key:\n          type: string\n          description: A key for this message\n    Permission:\n      type: object\n      description: A permission.\n      properties:\n        mode:\n          type: string\n          description: The mode\n          enum:\n            - READ\n            - SET\n        ref:\n          type: string\n          description: The reference id of the permission.\n        value:\n          type: boolean\n          description: The value, true if the permission is present.\n    Parameter:\n      type: object\n      description: A single parameter.\n      required:\n        - name\n      properties:\n        name:\n          type: string\n          description: The name of the parameter.\n        value:\n          type: string\n          description: The value of the parameter.\n    Label:\n      type: object\n      properties:\n        value:\n          type: string\n    Navigation:\n      type: object\n      properties:\n        user:\n          $ref: \"#/components/schemas/User\"\n        items:\n          type: array\n          items:\n            $ref: \"#/components/schemas/NavigationItem\"\n        loginAction:\n          $ref: \"#/components/schemas/Action\"\n        appNGVersion:\n          type: String\n          description: The version of appNG\n    NavigationItem:\n      type: object\n      properties:\n        _self:\n          type: string\n          description: the API path (type PAGE only)\n        name:\n          type: string\n        default:\n          type: boolean\n          description: if this is the default page? (type PAGE only)\n        path:\n          type: string\n        active:\n          type: boolean\n        type:\n          type: string\n          enum:\n            - SITE\n            - APP\n            - PAGE\n        items:\n          type: array\n          items:\n            $ref: \"#/components/schemas/NavigationItem\"\n          ",
			"canonicalURL": "/github.com/appNG/appng@9157a92c6fb345bb1276f7fdf435ba42be4f42cd/-/blob/appng-rest-api/src/main/resources/org/appng/api/rest/appng-openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/appNG/appng/blob/9157a92c6fb345bb1276f7fdf435ba42be4f42cd/appng-rest-api/src/main/resources/org/appng/api/rest/appng-openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"Section\": resolve \"#/components/schemas/Section\": property \"elements\": items: $ref: resolve \"#/components/schemas/SectionElement\": property \"datasource\": $ref: resolve \"#/components/schemas/Datasource\": property \"appNGVersion\": at appng-rest-api/src/main/resources/org/appng/api/rest/appng-openapi.yaml:472:17: type: unexpected schema type: \"String\""
}