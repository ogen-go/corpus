{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/clearflask/clearflask"
		},
		"file": {
			"name": "api-client.yaml",
			"size": 0,
			"path": "clearflask-api/src/main/openapi/api-client.yaml",
			"byteSize": 5029,
			"content": "## SPDX-FileCopyrightText: 2019-2021 Matus Faro \u003cmatus@smotana.com\u003e\n## SPDX-License-Identifier: AGPL-3.0-only\nopenapi: 3.0.0\ninfo:\n  title: ClearFlask Client API\n  description: ClearFlask API documentation.\n  version: 1.0.0\n\nservers:\n- url: https://clearflask.com/api/v1\n\ncomponents:\n  schemas:\n    Cursor:\n      description: Cursor to fetch next set of results.\n      type: string\n    ErrorResponse:\n      type: object\n      properties:\n        userFacingMessage:\n          type: string\n  responses:\n    Ok:\n      description: \u003e-\n        HTTP 200 Ok\n        Request was successful. No response value supplied.\n    NotFound:\n      description: \u003e-\n        HTTP 404 Not Found\n        The specified resource was not found.\n      content:\n        application/json:\n          schema:\n            $ref: 'api-client.yaml#/components/schemas/ErrorResponse'\n    Forbidden:\n      description: \u003e-\n        HTTP 403 Forbidden\n        Use when access is not allowed to a particular resource\n        NotFound is also acceptable when the existence of a\n        resource must be protected.\n      content:\n        application/json:\n          schema:\n            $ref: 'api-client.yaml#/components/schemas/ErrorResponse'\n    Unauthorized:\n      description: \u003e-\n        HTTP 401 Unauthorized\n        Used during login/bind to indicate the authentication was\n        not successful.\n      content:\n        application/json:\n          schema:\n            $ref: 'api-client.yaml#/components/schemas/ErrorResponse'\n    ConfigChanged:\n      description: \u003e-\n        HTTP 412 Precondition Failed\n        Use only when client needs to reload the App Configuration.\n        In a case where a request does not make sense based on App\n        Configuration. Client is expected to reload immediately.\n      content:\n        application/json:\n          schema:\n            $ref: 'api-client.yaml#/components/schemas/ErrorResponse'\n\npaths:\n  /project/{projectId}/ideasearch:\n    $ref: 'api-idea.yaml#/~1project~1{projectId}~1ideasearch'\n  /project/{projectId}/idea:\n    $ref: 'api-idea.yaml#/~1project~1{projectId}~1idea'\n  /project/{projectId}/ideagetall:\n    $ref: 'api-idea.yaml#/~1project~1{projectId}~1ideagetall'\n  /project/{projectId}/idea/{ideaId}:\n    $ref: 'api-idea.yaml#/~1project~1{projectId}~1idea~1{ideaId}'\n  /project/{projectId}/idea/{ideaId}/merge/{parentIdeaId}:\n    $ref: 'api-idea.yaml#/~1project~1{projectId}~1idea~1{ideaId}~1merge~1{parentIdeaId}'\n  /project/{projectId}/bind:\n    $ref: 'api-user.yaml#/~1project~1{projectId}~1bind'\n  /project/{projectId}/forgot:\n    $ref: 'api-user.yaml#/~1project~1{projectId}~1forgot'\n  /project/{projectId}/login:\n    $ref: 'api-user.yaml#/~1project~1{projectId}~1login'\n  /project/{projectId}/logout:\n    $ref: 'api-user.yaml#/~1project~1{projectId}~1logout'\n  /project/{projectId}/user:\n    $ref: 'api-user.yaml#/~1project~1{projectId}~1user'\n  /project/{projectId}/user/{userId}:\n    $ref: 'api-user.yaml#/~1project~1{projectId}~1user~1{userId}'\n  /project/{projectId}/commentsearch:\n    $ref: 'api-comment.yaml#/~1project~1{projectId}~1commentsearch'\n  /project/{projectId}/idea/{ideaId}/commentsearch:\n    $ref: 'api-comment.yaml#/~1project~1{projectId}~1idea~1{ideaId}~1commentsearch'\n  /project/{projectId}/idea/{ideaId}/comment:\n    $ref: 'api-comment.yaml#/~1project~1{projectId}~1idea~1{ideaId}~1comment'\n  /project/{projectId}/idea/{ideaId}/comment/{commentId}:\n    $ref: 'api-comment.yaml#/~1project~1{projectId}~1idea~1{ideaId}~1comment~1{commentId}'\n  /project/{projectId}/user/{userId}/transactionsearch:\n    $ref: 'api-credit.yaml#/~1project~1{projectId}~1user~1{userId}~1transactionsearch'\n  /project/{projectId}/vote/ideas:\n    $ref: 'api-vote.yaml#/~1project~1{projectId}~1vote~1ideas'\n  /project/{projectId}/vote/idea/{ideaId}:\n    $ref: 'api-vote.yaml#/~1project~1{projectId}~1vote~1idea~1{ideaId}'\n  /project/{projectId}/vote/comments:\n    $ref: 'api-vote.yaml#/~1project~1{projectId}~1vote~1comments'\n  /project/{projectId}/idea/{ideaId}/vote/comment/{commentId}:\n    $ref: 'api-vote.yaml#/~1project~1{projectId}~1idea~1{ideaId}~1vote~1comment~1{commentId}'\n  /project/{projectId}/subscribe/category/{categoryId}:\n    $ref: 'api-vote.yaml#/~1project~1{projectId}~1subscribe~1category~1{categoryId}'\n  /slug/{slug}/bind/configAndUser:\n    $ref: 'api-project.yaml#/~1slug~1{slug}~1bind~1configAndUser'\n  /slug/{slug}/bind/config:\n    $ref: 'api-project.yaml#/~1slug~1{slug}~1bind~1config'\n  /slug/{slug}/bind/user:\n    $ref: 'api-project.yaml#/~1slug~1{slug}~1bind~1user'\n  /project/{projectId}/notificationsearch:\n    $ref: 'api-notification.yaml#/~1project~1{projectId}~1notificationsearch'\n  /project/{projectId}/notificationclear:\n    $ref: 'api-notification.yaml#/~1project~1{projectId}~1notificationclear'\n  /project/{projectId}/notificationclear/{notificationId}/clear:\n    $ref: 'api-notification.yaml#/~1project~1{projectId}~1notificationclear~1{notificationId}'\n  /project/{projectId}/content/upload:\n    $ref: 'api-content.yaml#/~1project~1{projectId}~1content~1upload'\n"
		}
	},
	"Error": "parse: parse spec: /project/{projectId}/idea/{ideaId}: referenced pathItem not supported"
}