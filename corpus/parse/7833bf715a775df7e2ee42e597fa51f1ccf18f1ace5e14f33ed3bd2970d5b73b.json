{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/wso2/identity-api-server"
		},
		"file": {
			"name": "inputValidation.yaml",
			"size": 0,
			"path": "components/org.wso2.carbon.identity.api.server.input.validation/org.wso2.carbon.identity.api.server.input.validation.v1/src/main/resources/inputValidation.yaml",
			"byteSize": 6554,
			"content": "openapi: 3.0.0\ninfo:\n  description: \u003e\n    This document specifies an **Input Validation RESTful API** for **WSO2\n    Identity Server**.\n  version: \"v1\"\n  title: WSO2 Identity Server - Input Validation Rest API\n  termsOfService: 'http://swagger.io/terms/'\n  contact:\n    name: WSO2\n    url: 'http://wso2.com/products/identity-server/'\n    email: architecture@wso2.org\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\n\nservers:\n  - url: 'https://{host-name}/api/server/v1'\n    variables:\n      server-url:\n        default: \"localhost:9443\"\npaths:\n  /validation-rules:\n    get:\n      tags:\n        - Get Validation Rules\n      description: Get validation rules for user inputs\n      operationId: getValidationRules\n      responses:\n        '200':\n          $ref: '#/components/responses/Success'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    put:\n      tags:\n        - Update Validation Rules\n      description: Update validation rules for user inputs\n      operationId: updateValidationRules\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ValidationConfiguration'\n            examples:\n              Rules:\n                value:\n                  - field: password\n                    rules:\n                      - validator: LengthValidator\n                        properties:\n                          - key: min.length\n                            value: 5\n                          - key: max.length\n                            value: 15\n              Regex:\n                value:\n                  - field: password\n                    regEx:\n                      - validator: JavaRegExValidator\n                        properties:\n                          - key: java.regex\n                            value: (?=.*[A-Z])\n        description: Represents the password validation criteria.\n        required: true\n      responses:\n        '200':\n          $ref: '#/components/responses/Success'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  /validation-rules/validators:\n    get:\n      tags:\n        - Get all validators\n      description: Get all validators\n      operationId: getValidators\n      responses:\n        '200':\n          description: Configurations successfully updated.\n          content:\n            'application/json':\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ValidatorModel'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '500':\n          $ref: '#/components/responses/ServerError'\ncomponents:\n  schemas:\n    ValidatorModel:\n      type: object\n      properties:\n        type:\n          type: string\n          enum:\n            - RULE\n            - REGEX\n        name:\n          type: string\n          example: LengthValidator\n        properties:\n          type: array\n          items:\n            $ref: '#/components/schemas/PropertyModel'\n    PropertyModel:\n      type: object\n      properties:\n        name:\n          type: string\n          example: min.length\n        description:\n          type: string\n          example: Minimum length required\n        displayName:\n          type: string\n          example: Minimum limit\n        type:\n          type: string\n          example: int\n        displayOrder:\n          type: integer\n          example: 1\n    ValidationConfiguration:\n      type: array\n      items:\n        $ref: '#/components/schemas/ValidationConfigModel'\n    ValidationConfigModel:\n      type: object\n      required:\n        - field\n      properties:\n        field:\n          type: string\n          example: password\n        rules:\n          type: array\n          items:\n            $ref: '#/components/schemas/RuleModel'\n        regEx:\n          type: array\n          items:\n            $ref: '#/components/schemas/RuleModel'\n    RuleModel:\n      type: object\n      required:\n        - validator\n        - properties\n      properties:\n        validator:\n          type: string\n          example: lengthValidator\n        properties:\n          type: array\n          items:\n            $ref: '#/components/schemas/MappingModel'\n    MappingModel:\n      type: object\n      required:\n        - key\n        - value\n      properties:\n        key:\n          type: string\n        value:\n          type: string\n    Error:\n      type: object\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: string\n          example: VR-60001\n        message:\n          type: string\n          example: Some Error Message\n        description:\n          type: string\n          example: Some Error Description\n  responses:\n    Unauthorized:\n      description: Unauthorized\n    Forbidden:\n      description: Resource Forbidden\n    ServerError:\n      description: Internal Server Error\n      content:\n        'application/json':\n          schema:\n            $ref: '#/components/schemas/Error'\n    BadRequest:\n      description: Invalid Input Request\n      content:\n        'application/json':\n          schema:\n            $ref: '#/components/schemas/Error'\n    Success:\n      description: Configurations successfully updated.\n      content:\n        'application/json':\n          schema:\n            $ref: '#/components/schemas/ValidationConfiguration'\n          examples:\n            Rules:\n              value:\n                - field: password\n                  rules:\n                    - validator: LengthValidator\n                      properties:\n                        - key: min.length\n                          value: 5\n                        - key: max.length\n                          value: 15\n            Regex:\n              value:\n                - field: password\n                  regEx:\n                    - validator: JavaRegExValidator\n                      properties:\n                        - key: java.regex\n                          value: (?=.*[A-Z])\n\n",
			"canonicalURL": "/github.com/wso2/identity-api-server@2943553d9bc197cdd4e18085fb3f2dd256a390a6/-/blob/components/org.wso2.carbon.identity.api.server.input.validation/org.wso2.carbon.identity.api.server.input.validation.v1/src/main/resources/inputValidation.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/wso2/identity-api-server/blob/2943553d9bc197cdd4e18085fb3f2dd256a390a6/components/org.wso2.carbon.identity.api.server.input.validation/org.wso2.carbon.identity.api.server.input.validation.v1/src/main/resources/inputValidation.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse servers: at components/org.wso2.carbon.identity.api.server.input.validation/org.wso2.carbon.identity.api.server.input.validation.v1/src/main/resources/inputValidation.yaml:18:10: path parameter not specified: \"host-name\""
}