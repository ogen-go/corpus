{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/brkly/alor_dev_auto_python"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi.yaml",
			"byteSize": 116906,
			"content": "openapi: 3.0.0\ninfo:\n  title: Alor OpenAPI V2\n  description: |\n    \u003csmall\u003eSwagger-документация для API v1 доступна по ссылке\u0026#58; \u003ca href=\"https://alor.dev/rawdocs/WarpOpenApi3.yml\"\u003ehttps://alor.dev/rawdocs/WarpOpenApi3.yml\u003c/a\u003e\u003c/small\u003e\u003cbr\u003e\u003cbr\u003e\n    API для работы с торговой системой АЛОР Брокер. Предоставляет интерфейсы для выставления заявок и получения биржевой информации.\n\n    Данные для неавторизованных запросов предоставляются с 15-минутной задержкой, для авторизованных - без задержек. \n\n    Публичная биржевая информация может быть получена через HTTP(S) API, а также доступна через однократно установленное WebSocket соединение. \u003cbr\u003e\n    **Внимание!** WebSocket соединения могут и будут разрываться *(например, если клиент не успевает обрабатывать сообщения и на стороне API в буфере накопится более 5000 событий)*. \u003cbr\u003e\n    Во внешнем ПО необходимо предусмотреть механизмы переподключения и переподписки (при необходимости)! \u003cbr\u003e \u003cbr\u003e \n    В OpenAPI V2 \"Санкт-Петербургская биржа\" (SPBX) еще находится в процессе разработки. Доступно получение рыночных данных *(marketdata, md)*. Заявки на SPBX в V2 пока недоступны. В V1 торговый функционал для SPBX доступен.\n\n    \u003ch4\u003e Доступные типы данных \u003c/h4\u003e\n     * Все сделки\n     * Все заявки\n     * Информация по инструментам\n     * Котировки\n     * Биржевые стаканы\n     * Исторические данные\n     * Позиции\n     * Информация о клиенте\n\n    \u003ch4\u003eПоддерживаемые виды заявок\u003c/h4\u003e\n     * рыночные\n     * лимитные\n     * стоп-лосс\n     * тейк-профит\n     * стоп-лосс лимит\n     * тейк-профит лимит\n\n    \u003ch4\u003e    Ограничения по частоте запросов     \u003c/h4\u003e\n    \u003cp\u003eНа текущий момент ограничений по количеству запросов в минуту или WebSocket-подписок нет. \u003cbr/\u003e\n    Сервер может обрабатывать \"тяжелые\" запросы (пример - история за все время) и запросы без авторизации с меньшим приоритетом. \u003cbr/\u003e\n    АЛОР оставляет за собой право на ограничение частоты запросов, если это будет необходимо для стабильной работы системы. \u003cbr/\u003e\n    \u003cbr/\u003e\u003c/p\u003e\n\n\n    \u003ch2\u003e\n    Авторизация\n    \u003c/h2\u003e\n\n    \u003ch4\u003eOAuth\u003c/h4\u003e\n\n    \u003cb\u003eВнимание!\u003c/b\u003e  \n    JWT и refresh token — равносильны логину и паролю.\n    Их нужно скрывать от публичного доступа.\n\n    \u003ch4\u003eДля разработчиков сторонних приложений, в которых торговлю будут вести их пользователи.\u003c/h4\u003e\n\n    Мы предоставляем сервис для авторизации сторониих приложений по стандарту OAuth 2.0.\n    С примером приложения, использующего OAuth сервис для авторизации пользователей можно ознакомиться в разделе\n     \u003ca href=\"/examples\"\u003eПримеры\u003c/a\u003e.\n\n    Список разрешений (scopes), которые могут быть выданы приложению:\n    \u003ctable\u003e\n      \u003ctr\u003e\n        \u003ctd\u003e\u003cb\u003eOrdersRead\u003c/b\u003e\u003c/td\u003e\n        \u003ctd\u003eЧтение выставленных заявок\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n        \u003ctd\u003e\u003cb\u003eOrdersCreate\u003c/b\u003e\u003c/td\u003e\n        \u003ctd\u003eВыставление заявок\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n        \u003ctd\u003e\u003cb\u003eTrades\u003c/b\u003e\u003c/td\u003e\n        \u003ctd\u003eЧтение совершенных сделок\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n        \u003ctd\u003e\u003cb\u003ePersonal\u003c/b\u003e\u003c/td\u003e\n        \u003ctd\u003eПерсональная информация: ФИО, почта и т.п.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n        \u003ctd\u003e\u003cb\u003eStats\u003c/b\u003e\u003c/td\u003e\n        \u003ctd\u003eСтатистика: прибыль, средние цены и т.п.\u003c/td\u003e\n      \u003c/tr\u003e\n    \u003c/table\u003e\n\n    \u003ch4\u003eДля ведения операций от своего имени\u003c/h4\u003e\n\n    Выписать себе \u003cb\u003erefresh token\u003c/b\u003e для ведения операций от своего имени [можно здесь](https://alor.dev/open-api-tokens).\n\n    \u003ch2\u003eКраткое описание работы с авторизацией\u003c/h2\u003e\n\n    Чтобы выполнить авторизованный запрос, добавьте в запрос заголовок с именем \"Authorization\"\n    и значением, состоящим из префикса `\"Bearer \"` и валидного JWT токена.\n\n    Срок жизни JWT короткий: это сделано для безопасности. \n    Для большинства вариантов использования API мы рекоммендуем использовать механизм  \u003cb\u003erefresh token\u003c/b\u003e .\n\n    Механизм  \u003cb\u003erefresh token\u003c/b\u003e  позволяет получать JWT с новым сроком жизни.\n    Для этого отправьте POST запрос на адрес `https://oauthdev.alor.ru/refresh?token={refreshToken}` *(игровой контур)* или `https://oauth.alor.ru/refresh?token={refreshToken}` *(боевой контур)*.\n    Если у  \u003cb\u003erefresh token\u003c/b\u003e  не истек срок жизни и не он не был отозван, то в теле ответа в поле AccessToken вернётся свежий JWT токен. \n\n    Срок жизни  \u003cb\u003erefresh token\u003c/b\u003e, получаемого обычным способом — 1 месяц.  \n    Срок жизни  \u003cb\u003erefresh token\u003c/b\u003e, получаемого самостоятельным выписыванием — год.\n\n    |\n    |-\n\n    \u003e Если мы для вас не завели портфели для ведения торговли в игровом контуре, оставьте заявку на \u003ca href=\"mailto:openapi@alor.ru\"\u003eopenapi@alor.ru\u003c/a\u003e или свяжитесь с нами в [телеграме](https://tgmssg.ru/AlorOpenAPI).\n\n    \u003c/br\u003e\u003c/br\u003e\n    Игровой контур: `https://apidev.alor.ru`\n\n    Боевой контур: `https://api.alor.ru`\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\n  version: '1.0'\n  termsOfService: 'http://alorbroker.ru'\n  contact:\n    email: openapi@alor.ru\nservers:\n  - url: https://apidev.alor.ru\n    description: Dev server\n  - url: https://api.alor.ru\n    description: Production server\npaths:\n  '/client/v1.0/users/{username}/portfolios':\n    get:\n      summary: Получение списка серверов портфелей\n      description: Получение списка серверов по секциям «Валютный рынок», «Срочный рынок», «Фондовый рынок». В ответе в поле tradeServerCode содержится значение которое надо использовать\n      operationId: DevUserPortfolio\n      parameters:\n        - name: username\n          in: path\n          description: Имя пользователя\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n          example: P039004\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/servers_info'\n      deprecated: false\n      security:\n        - bearerAuth: []\n  '/md/v2/clients/{exchange}/{portfolio}/orders':\n    get:\n      servers:\n        - url: 'https://apidev.alor.ru'\n      summary: Получение информации о всех заявках\n      description: Запрос информации о всех заявках\n      operationId: DevGetAllOrders\n      parameters:\n        - name: exchange\n          in: path\n          description: Биржа\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n            enum:\n              - MOEX\n              - SPBX\n        - name: portfolio\n          in: path\n          description: Идентификатор клиентского портфеля\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n          example: D39004\n        - name: format\n          in: query\n          description: Формат возвращаемого сервером JSON\n          required: false\n          schema:\n            type: string\n            enum:\n              - Simple\n          example: Simple\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/orders'\n        '403':\n          description: Недостаточно прав для получения информации об указанном portfolio\n      deprecated: false\n      security:\n        - bearerAuth: []\n  '/md/v2/clients/{exchange}/{portfolio}/orders/{orderId}':\n    get:\n      servers:\n        - url: 'https://apidev.alor.ru'\n      summary: Получение информации о выбранной заявке\n      description: Запрос информации о выбранной заявке\n      operationId: DevGetOneOrder\n      parameters:\n        - name: exchange\n          in: path\n          description: Биржа\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n            enum:\n              - MOEX\n              - SPBX\n        - name: portfolio\n          in: path\n          description: Идентификатор клиентского портфеля\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n          example: D39004\n        - name: orderId\n          in: path\n          description: Идентификатор заявки\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: integer\n          example: 18995978560\n        - name: format\n          in: query\n          description: Формат возвращаемого сервером JSON\n          required: false\n          schema:\n            type: string\n            enum:\n              - Simple\n          example: Simple\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/order'\n        '403':\n          description: Недостаточно прав для получения информации об указанном portfolio\n        '404':\n          description: Указанный orderId не найден\n      deprecated: false\n      security:\n        - bearerAuth: []\n  '/md/v2/clients/{exchange}/{portfolio}/stoporders':\n    get:\n      servers:\n        - url: 'https://apidev.alor.ru'\n      summary: Получение информации о стоп-заявках\n      description: Запрос информации о всех стоп-заявках\n      operationId: DevGetAllStopOrders\n      parameters:\n        - name: exchange\n          in: path\n          description: Биржа\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n            enum:\n              - MOEX\n              - SPBX\n        - name: portfolio\n          in: path\n          description: Идентификатор клиентского портфеля\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n          example: D39004\n        - name: format\n          in: query\n          description: Формат возвращаемого сервером JSON\n          required: false\n          schema:\n            type: string\n            enum:\n              - Simple\n          example: Simple\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/stoporders'\n        '403':\n          description: Недостаточно прав для получения информации об указанном portfolio\n      deprecated: false\n      security:\n        - bearerAuth: []\n  '/md/v2/clients/{exchange}/{portfolio}/stoporders/{orderId}':\n    get:\n      servers:\n        - url: 'https://apidev.alor.ru'\n      summary: Получение информации о выбранной стоп-заявке\n      description: Запрос информации о выбранной стоп-заявке\n      operationId: DevGetOneStopOrder\n      parameters:\n        - name: exchange\n          in: path\n          description: Биржа\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n            enum:\n              - MOEX\n              - SPBX\n        - name: portfolio\n          in: path\n          description: Идентификатор клиентского портфеля\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n          example: D39004\n        - name: orderId\n          in: path\n          description: Идентификатор стоп-заявки\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: integer\n          example: 332350\n        - name: format\n          in: query\n          description: Формат возвращаемого сервером JSON\n          required: false\n          schema:\n            type: string\n            enum:\n              - Simple\n          example: Simple\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/stoporder'\n        '403':\n          description: Недостаточно прав для получения информации об указанном portfolio\n        '404':\n          description: Указанный orderId не найден\n      deprecated: false\n      security:\n        - bearerAuth: []\n  '/md/v2/clients/legacy/{exchange}/{portfolio}/money':\n    get:\n      servers:\n        - url: 'https://apidev.alor.ru'\n      summary: Получение информации по деньгам для выбранного портфеля\n      description: 'Запрос информации о позиции по деньгам. Вызов существует для обратной совместимости с API v1, предпочтительно использовать другие вызовы (/summary, /risk, /positions)'\n      operationId: ExchangePortfolioMoney\n      parameters:\n        - name: exchange\n          in: path\n          description: Биржа\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n            enum:\n              - MOEX\n              - SPBX\n        - name: portfolio\n          in: path\n          description: Идентификатор клиентского портфеля\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n          example: D39004\n        - name: format\n          in: query\n          description: Формат возвращаемого сервером JSON\n          required: false\n          schema:\n            type: string\n            enum:\n              - Simple\n            example: Simple\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/money'\n        '403':\n          description: Недостаточно прав для получения информации об указанном portfolio\n      deprecated: false\n      security:\n        - bearerAuth: []\n  '/md/v2/clients/{exchange}/{portfolio}/summary':\n    get:\n      servers:\n        - url: 'https://apidev.alor.ru'\n      summary: Получение информации о портфеле\n      description: Запрос сводной информации о портфеле\n      operationId: ExchangePortfolioSummary\n      parameters:\n        - name: exchange\n          in: path\n          description: Биржа\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n            enum:\n              - MOEX\n              - SPBX\n        - name: portfolio\n          in: path\n          description: Идентификатор клиентского портфеля\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n          example: D39004\n        - name: format\n          in: query\n          description: Формат возвращаемого сервером JSON\n          required: false\n          schema:\n            type: string\n            enum:\n              - Simple\n            example: Simple\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/summary'\n        '403':\n          description: Недостаточно прав для получения информации об указанном portfolio\n      deprecated: false\n      security:\n        - bearerAuth: []\n  '/md/v2/Clients/{exchange}/{portfolio}/positions':\n    get:\n      servers:\n        - url: 'https://apidev.alor.ru'\n      summary: Получение информации о позициях\n      description: Запрос информации о позициях\n      operationId: DevGetAllPositions\n      parameters:\n        - name: exchange\n          in: path\n          description: Биржа\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n            enum:\n              - MOEX\n              - SPBX\n        - name: portfolio\n          in: path\n          description: Идентификатор клиентского портфеля\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n          example: D39004\n        - name: format\n          in: query\n          description: Формат возвращаемого сервером JSON\n          required: false\n          schema:\n            type: string\n            enum:\n              - Simple\n            example: Simple\n        - name: withoutCurrency\n          in: query\n          description: 'Исключить из ответа все денежные инструменты, по умолчанию false'\n          required: false\n          schema:\n            type: boolean\n            enum:\n              - true\n              - false\n            example: false\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/positions'\n        '403':\n          description: Недостаточно прав для получения информации об указанном portfolio\n      deprecated: false\n      security:\n        - bearerAuth: []\n  '/md/v2/Clients/{exchange}/{portfolio}/positions/{symbol}':\n    get:\n      servers:\n        - url: 'https://apidev.alor.ru'\n      summary: Получение информации о позициях выбранного инструмента\n      description: Запрос информации о позициях выбранного инструмента\n      operationId: DevGetOnePosition\n      parameters:\n        - name: exchange\n          in: path\n          description: Биржа\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n            enum:\n              - MOEX\n              - SPBX\n        - name: portfolio\n          in: path\n          description: Идентификатор клиентского портфеля\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n          example: D39004\n        - name: symbol\n          in: path\n          description: Тикер (Код финансового инструмента)\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n          example: LKOH\n        - name: format\n          in: query\n          description: Формат возвращаемого сервером JSON\n          required: false\n          schema:\n            type: string\n            enum:\n              - Simple\n            example: Simple\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/position'\n        '403':\n          description: Недостаточно прав для получения информации об указанном portfolio\n        '404':\n          description: Указанный symbol не найден\n      deprecated: false\n      security:\n        - bearerAuth: []\n  '/md/v2/Clients/{exchange}/{portfolio}/trades':\n    get:\n      servers:\n        - url: 'https://apidev.alor.ru'\n      summary: Получение информации о сделках\n      description: Запрос информации о сделках\n      operationId: DevGetAllTrades\n      parameters:\n        - name: exchange\n          in: path\n          description: Биржа\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n            enum:\n              - MOEX\n              - SPBX\n        - name: portfolio\n          in: path\n          description: Идентификатор клиентского портфеля\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n          example: D39004\n        - name: format\n          in: query\n          description: Формат возвращаемого сервером JSON\n          required: false\n          schema:\n            type: string\n            enum:\n              - Simple\n            example: Simple\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/trades'\n        '403':\n          description: Недостаточно прав для получения информации об указанном portfolio\n      deprecated: false\n      security:\n        - bearerAuth: []\n  '/md/v2/Clients/{exchange}/{portfolio}/{ticker}/trades':\n    get:\n      servers:\n        - url: 'https://apidev.alor.ru'\n      summary: Получение информации о сделках по выбранному инструменту\n      description: Запрос информации о сделках по выбранному инструменту\n      operationId: DevGetTickerTrades\n      parameters:\n        - name: exchange\n          in: path\n          description: Биржа\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n            enum:\n              - MOEX\n              - SPBX\n        - name: portfolio\n          in: path\n          description: Идентификатор клиентского портфеля\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n          example: D39004\n        - name: ticker\n          in: path\n          description: Тикер (Код финансового инструмента)\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n          example: LKOH\n        - name: format\n          in: query\n          description: Формат возвращаемого сервером JSON\n          required: false\n          schema:\n            type: string\n            enum:\n              - Simple\n            example: Simple\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/trades'\n      deprecated: false\n      security:\n        - bearerAuth: []\n  '/md/v2/Clients/{exchange}/{portfolio}/fortsrisk':\n    get:\n      servers:\n        - url: 'https://apidev.alor.ru'\n      summary: Получение информации о рисках на срочном рынке\n      description: Запрос информации о рисках на срочном рынке для выбранного портфеля\n      operationId: Fortsrisk\n      parameters:\n        - name: exchange\n          in: path\n          description: Биржа\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n            enum:\n              - MOEX\n        - name: portfolio\n          in: path\n          description: Идентификатор клиентского портфеля\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n          example: D39004\n        - name: format\n          in: query\n          description: Формат возвращаемого сервером JSON\n          required: false\n          schema:\n            type: string\n            enum:\n              - Simple\n            example: Simple\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/fortsrisk'\n        '403':\n          description: Недостаточно прав для получения информации об указанном portfolio\n      deprecated: false\n      security:\n        - bearerAuth: []\n  '/md/v2/Clients/{exchange}/{portfolio}/risk':\n    get:\n      servers:\n        - url: 'https://apidev.alor.ru'\n      summary: Получение информации о рисках\n      description: Запрос информации о рисках\n      operationId: Risk\n      parameters:\n        - name: exchange\n          in: path\n          description: Биржа\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n            enum:\n              - MOEX\n              - SPBX\n        - name: portfolio\n          in: path\n          description: Идентификатор клиентского портфеля\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n          example: D39004\n        - name: format\n          in: query\n          description: Формат возвращаемого сервером JSON\n          required: false\n          schema:\n            type: string\n            enum:\n              - Simple\n            example: Simple\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/risk'\n        '403':\n          description: Недостаточно прав для получения информации об указанном portfolio\n      deprecated: false\n      security:\n        - bearerAuth: []\n  '/md/v2/Securities':\n    get:\n      servers:\n        - url: 'https://apidev.alor.ru'\n      summary: Получение информации о торговых инструментах\n      description: Запрос информации о торговых инструментах\n      operationId: DevSecuritiesSearch\n      parameters:\n        - name: query\n          in: query\n          description: Тикер (Код финансового инструмента)\n          required: true\n          style: form\n          explode: true\n          schema:\n            type: string\n          example: GAZP\n        - name: limit\n          in: query\n          description: Ограничение на количество выдаваемых результатов поиска\n          required: false\n          style: form\n          explode: true\n          schema:\n            type: integer\n            format: int32\n          example: 3\n        - name: sector\n          in: query\n          description: Рынок на бирже\n          required: false\n          style: form\n          explode: true\n          schema:\n            type: string\n            enum:\n              - FORTS\n              - FOND\n              - CURR\n          example: FOND\n        - name: cficode\n          in: query\n          description: Код финансового инструмента по стандарту ISO 10962\n          required: false\n          style: form\n          explode: true\n          schema:\n            type: string\n          example: EXXXXX\n        - name: exchange\n          in: query\n          description: Биржа\n          required: false\n          style: form\n          explode: true\n          schema:\n            type: string\n            enum:\n              - MOEX\n              - SPBX\n        - name: format\n          in: query\n          description: Формат возвращаемого сервером JSON\n          required: false\n          schema:\n            type: string\n            enum:\n              - Simple\n            example: Simple\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/securities'\n      security:\n        - bearerAuth: []\n      deprecated: false\n  '/md/v2/Securities/{exchange}':\n    get:\n      servers:\n        - url: 'https://apidev.alor.ru'\n      summary: Получение информации о торговых инструментах на выбранной бирже\n      description: Запрос информации об инструментах на выбранной бирже\n      operationId: DevSecuritiesSearchExchange\n      parameters:\n        - name: exchange\n          in: path\n          description: Биржа\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n            enum:\n              - MOEX\n              - SPBX\n        - name: format\n          in: query\n          description: Формат возвращаемого сервером JSON\n          required: false\n          schema:\n            type: string\n            enum:\n              - Simple\n            example: Simple\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/securities'\n      deprecated: false\n      security:\n        - bearerAuth: []\n  '/md/v2/Securities/{exchange}/{symbol}':\n    get:\n      servers:\n        - url: 'https://apidev.alor.ru'\n      summary: Получение информации о выбранном финансовом инструменте\n      description: Запрос информации о выбранном финансовом инструменте на бирже\n      operationId: DevSecuritiesSearchExchangeCode\n      parameters:\n        - name: exchange\n          in: path\n          description: Биржа\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n            enum:\n              - MOEX\n              - SPBX\n        - name: symbol\n          in: path\n          description: Тикер (Код финансового инструмента)\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n          example: SBER\n        - name: format\n          in: query\n          description: Формат возвращаемого сервером JSON\n          required: false\n          schema:\n            type: string\n            enum:\n              - Simple\n            example: Simple\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/security'\n        '404':\n          description: Указанный symbol не найден\n      deprecated: false\n      security:\n        - bearerAuth: []\n  '/md/v2/Securities/{symbols}/quotes':\n    get:\n      servers:\n        - url: 'https://apidev.alor.ru'\n      summary: Получение информации о котировках для выбранных инструментов\n      description: Запрос информации о котировках для выбранных инструментов и бирж\n      operationId: DevQuotes\n      parameters:\n        - name: symbols\n          in: path\n          description: Принимает несколько пар биржа-тикер. Пары отделены запятыми. Биржа и тикер разделены двоеточием\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n            example: 'MOEX:SBER,MOEX:GAZP,SPBX:AAPL'\n          example: 'MOEX:SBER,MOEX:GAZP,SPBX:AAPL'\n        - name: format\n          in: query\n          description: Формат возвращаемого сервером JSON\n          required: false\n          schema:\n            type: string\n            enum:\n              - Simple\n            example: Simple\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/symbols'\n      deprecated: false\n      security:\n        - bearerAuth: []\n  '/md/v2/orderbooks/{exchange}/{seccode}':\n    get:\n      servers:\n        - url: 'https://apidev.alor.ru'\n      summary: Получение информации о биржевом стакане\n      description: Запрос биржевого стакана\n      operationId: DevOrderbookExchangSeccode\n      parameters:\n        - name: exchange\n          in: path\n          description: Биржа\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n            enum:\n              - MOEX\n              - SPBX\n        - name: seccode\n          in: path\n          description: Инструмент\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n            example: RTS-9.20\n          example: RTS-9.20\n        - name: depth\n          in: query\n          description: Глубина стакана. Стандартное и максимальное значение - 20 (20х20).\n          required: false\n          style: form\n          explode: true\n          schema:\n            type: integer\n            maximum: 20\n            minimum: 1\n            example: 5\n          example: 5\n        - name: format\n          in: query\n          description: Формат возвращаемого сервером JSON\n          required: false\n          schema:\n            type: string\n            enum:\n              - Simple\n            example: Simple\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/orderbook'\n      deprecated: false\n      security:\n        - bearerAuth: []\n  '/md/v2/Securities/{exchange}/{symbol}/alltrades':\n    get:\n      servers:\n        - url: 'https://apidev.alor.ru'\n      summary: Получение информации о всех сделках по ценным бумагам за сегодня\n      description: Запросить данные о всех сделках (лента) по ценным бумагам за сегодняшний день\n      operationId: DevSecuritiesSearchAllTrades\n      parameters:\n        - name: exchange\n          in: path\n          description: Биржа\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n            enum:\n              - MOEX\n              - SPBX\n        - name: symbol\n          in: path\n          description: Тикер (Код финансового инструмента)\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n          example: SBER\n        - name: format\n          in: query\n          description: Формат возвращаемого сервером JSON\n          required: false\n          schema:\n            type: string\n            enum:\n              - Simple\n            example: Simple\n          example: Simple\n        - name: from\n          in: query\n          description: Начало отрезка времени (UTC) для фильтра результатов в формате Unix Time Seconds\n          required: false\n          style: form\n          explode: true\n          schema:\n            type: integer\n          example: 1593430060\n        - name: to\n          in: query\n          description: Конец отрезка времени (UTC) для фильтра результатов в формате Unix Time Seconds\n          required: false\n          style: form\n          explode: true\n          schema:\n            type: integer\n          example: 1593430560\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/alltrades'\n        '404':\n          description: Указанный symbol не найден\n      deprecated: false\n      security:\n        - bearerAuth: []\n  '/md/v2/Securities/{exchange}/{symbol}/actualFuturesQuote':\n    get:\n      servers:\n        - url: 'https://apidev.alor.ru'\n      summary: Получение котировки по ближайшему фьючерсу (код)\n      description: 'Запрос котировки по ближайшему фьючерсу (только по коду, без даты)'\n      operationId: DevSecuritiesFutures\n      parameters:\n        - name: exchange\n          in: path\n          description: Биржа\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n            enum:\n              - MOEX\n        - name: symbol\n          in: path\n          description: Тикер (Код финансового инструмента)\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n          example: SBRF\n        - name: format\n          in: query\n          description: Формат возвращаемого сервером JSON\n          required: false\n          schema:\n            type: string\n            enum:\n              - Simple\n            example: Simple\n          example: Simple\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/symbol_futures'\n        '404':\n          description: Указанный symbol не найден\n      deprecated: false\n      security:\n        - bearerAuth: []\n  '/md/v2/time':\n    get:\n      servers:\n        - url: 'https://apidev.alor.ru'\n      summary: Запрос текущего UTC времени в формате Unix\n      description: 'Запрос текущего UTC времени в формате Unix Time Seconds. Если этот запрос выполнен без авторизации, то будет возвращено время, которое было 15 минут назад.'\n      operationId: LocalTime\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/time'\n      deprecated: false\n      security:\n        - bearerAuth: []\n  '/md/v2/history':\n    get:\n      servers:\n        - url: 'https://apidev.alor.ru'\n      summary: Запрос истории для выбранных биржи и инструмента\n      description: 'Запрос истории рынка для выбранных биржи и финансового инструмента. Данные имеют задержку в 15 минут, если запрос не авторизован. Для авторизованных клиентов задержка не применяется.'\n      operationId: DevHistory\n      parameters:\n        - name: symbol\n          in: query\n          description: Тикер (Код финансового инструмента)\n          required: true\n          style: form\n          explode: true\n          schema:\n            type: string\n          example: SBER\n        - name: exchange\n          in: query\n          description: Биржа\n          required: true\n          style: form\n          explode: true\n          schema:\n            type: string\n            enum:\n              - MOEX\n              - SPBX\n        - name: tf\n          in: query\n          description: 'Длительность таймфрейма в секундах или код (\"D\" - дни, \"W\" - недели, \"M\" - месяцы, \"Y\" - годы)'\n          required: true\n          style: form\n          explode: true\n          schema:\n            type: string\n            enum:\n              - 15\n              - 60\n              - 300\n              - 3600\n              - D\n              - W\n              - M\n              - 'Y'\n          example: '60'\n        - name: from\n          in: query\n          description: Начало отрезка времени (UTC) в формате Unix Time Seconds\n          required: true\n          style: form\n          explode: true\n          schema:\n            type: integer\n            format: int32\n          example: 1549000661\n        - name: to\n          in: query\n          description: Конец отрезка времени (UTC) в формате Unix Time Seconds\n          required: true\n          style: form\n          explode: true\n          schema:\n            type: integer\n            format: int32\n          example: 1550060661\n        - name: format\n          in: query\n          description: Формат возвращаемого сервером JSON\n          required: false\n          schema:\n            type: string\n            enum:\n              - Simple\n            example: Simple\n          example: Simple\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/history'\n        '404':\n          description: Указанный symbol не найден\n      deprecated: false\n      security:\n        - bearerAuth: []\n  '/commandapi/warptrans/TRADE/v2/client/orders/actions/market':\n    post:\n      summary: Создание рыночной заявки\n      description: ''\n      operationId: CommandAPI /v2/client/orders/actions/market\n      requestBody:\n        description: Тело заявки\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/bodyrequest_OrdersActionsMarketTV'\n      parameters:\n        - name: X-ALOR-REQID\n          in: header\n          description: 'Через точку с запятой портфель и уникальный идентификатор запроса ``portfolio;uid``. В качестве идентификатора запроса требуется уникальная случайная строка. Если уже приходил запрос с таким идентификатором, то заявка не будет исполнена повторно, а в качестве ответа будет возвращена копия ответа на предыдущий запрос с таким значением идентификатора.'\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n          example: D39004;10338211158548488\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/orders_actions_LimitMarket_CommandAPI'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/orders_actions_400_CommandAPI'\n      deprecated: false\n      security:\n        - bearerAuth: []\n  '/commandapi/warptrans/TRADE/v2/client/orders/actions/limit':\n    post:\n      summary: Создание лимитной заявки\n      description: ''\n      operationId: CommandAPI /v2/client/orders/actions/limit\n      requestBody:\n        description: Тело заявки\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/bodyrequest_OrdersActionsLimitTV'\n      parameters:\n        - name: X-ALOR-REQID\n          in: header\n          description: 'Через точку с запятой портфель и уникальный идентификатор запроса ``portfolio;uid``. В качестве идентификатора запроса требуется уникальная случайная строка. Если уже приходил запрос с таким идентификатором, то заявка не будет исполнена повторно, а в качестве ответа будет возвращена копия ответа на предыдущий запрос с таким значением идентификатора.'\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n          example: D39004;10338211158548488\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/orders_actions_LimitMarket_CommandAPI'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/orders_actions_400_CommandAPI'\n      deprecated: false\n      security:\n        - bearerAuth: []\n  '/warptrans/{tradeServerCode}/v2/client/orders/actions/stopLoss':\n    post:\n      servers:\n        - url: 'https://apidev.alor.ru'\n      summary: Создание стоп-лосс заявки\n      description: ''\n      operationId: /v2/client/orders/actions/stopLoss\n      requestBody:\n        description: Тело заявки\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/bodyrequest_OrdersActionsStop'\n      parameters:\n        - name: tradeServerCode\n          in: path\n          description: Код торгового сервера\n          required: true\n          schema:\n            type: string\n          example: TRADE\n        - name: X-ALOR-REQID\n          in: header\n          description: 'Требуется уникальная случайная строка в качестве идентификатора запроса. Если уже приходил запрос с таким идентификатором, то заявка не будет исполнена повторно, а в качестве ответа будет возвращена копия ответа на первый запрос с таким значением идентификатора'\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n          example: 9823-616stn\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/orders_actions_StopProfitLoss'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/orders_actions_400'\n      deprecated: false\n      security:\n        - bearerAuth: []\n  '/warptrans/{tradeServerCode}/v2/client/orders/actions/takeProfit':\n    post:\n      servers:\n        - url: 'https://apidev.alor.ru'\n      summary: Создание стоп-заявки\n      description: ''\n      operationId: /v2/client/orders/actions/takeProfit\n      requestBody:\n        description: Тело заявки\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/bodyrequest_OrdersActionsStop'\n      parameters:\n        - name: tradeServerCode\n          in: path\n          description: Код торгового сервера\n          required: true\n          schema:\n            type: string\n          example: TRADE\n        - name: X-ALOR-REQID\n          in: header\n          description: 'Требуется уникальная случайная строка в качестве идентификатора запроса. Если уже приходил запрос с таким идентификатором, то заявка не будет исполнена повторно, а в качестве ответа будет возвращена копия ответа на первый запрос с таким значением идентификатора'\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n          example: 9823-616stn\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/orders_actions_StopProfitLoss'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/orders_actions_400'\n      deprecated: false\n      security:\n        - bearerAuth: []\n  '/warptrans/{tradeServerCode}/v2/client/orders/actions/takeProfitLimit':\n    post:\n      servers:\n        - url: 'https://apidev.alor.ru'\n      summary: Создание стоп-лимит заявки\n      description: ''\n      operationId: /v2/client/orders/actions/takeProfitLimit\n      requestBody:\n        description: Тело заявки\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/bodyrequest_OrdersActionsStoplimit'\n      parameters:\n        - name: tradeServerCode\n          in: path\n          description: Код торгового сервера\n          required: true\n          schema:\n            type: string\n          example: TRADE\n        - name: X-ALOR-REQID\n          in: header\n          description: 'Требуется уникальная случайная строка в качестве идентификатора запроса. Если уже приходил запрос с таким идентификатором, то заявка не будет исполнена повторно, а в качестве ответа будет возвращена копия ответа на первый запрос с таким значением идентификатора'\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n          example: 9823-616stn\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/orders_actions_StopProfitLoss'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/orders_actions_400'\n      deprecated: false\n      security:\n        - bearerAuth: []\n  '/warptrans/{tradeServerCode}/v2/client/orders/actions/stopLossLimit':\n    post:\n      servers:\n        - url: 'https://apidev.alor.ru'\n      summary: Создание стоп-лосс лимит заявки\n      description: Создание стоп-лосс лимит заявки\n      operationId: /v2/client/orders/actions/stopLossLimit\n      requestBody:\n        description: Тело заявки\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/bodyrequest_OrdersActionsStoplimit'\n      parameters:\n        - name: tradeServerCode\n          in: path\n          description: Код торгового сервера\n          required: true\n          schema:\n            type: string\n          example: TRADE\n        - name: X-ALOR-REQID\n          in: header\n          description: 'Требуется уникальная случайная строка в качестве идентификатора запроса. Если уже приходил запрос с таким идентификатором, то заявка не будет исполнена повторно, а в качестве ответа будет возвращена копия ответа на первый запрос с таким значением идентификатора'\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n          example: 9823-616stn\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/orders_actions_StopProfitLoss'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/orders_actions_400'\n      deprecated: false\n      security:\n        - bearerAuth: []\n  '/warptrans/{tradeServerCode}/v2/client/orders/actions/stopLoss/{orderId}':\n    put:\n      servers:\n        - url: 'https://apidev.alor.ru'\n      summary: Изменение стоп-лосс заявки\n      description: Изменение стоп-лосс заявки с указанным номером\n      operationId: '/v2/client/orders/actions/stopLoss/{orderId}'\n      requestBody:\n        description: Тело заявки\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/bodyrequest_OrdersActionsStop'\n      parameters:\n        - name: tradeServerCode\n          in: path\n          description: Код торгового сервера\n          required: true\n          schema:\n            type: string\n          example: TRADE\n        - name: orderId\n          in: path\n          description: Идентификатор заявки\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: integer\n          example: 93713183\n        - name: X-ALOR-REQID\n          in: header\n          description: 'Требуется уникальная случайная строка в качестве идентификатора запроса. Если уже приходил запрос с таким идентификатором, то заявка не будет исполнена повторно, а в качестве ответа будет возвращена копия ответа на первый запрос с таким значением идентификатора'\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n          example: 9823-616stn\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/orders_actions_StopProfitLoss'\n        '400':\n          description: Bad request\n          content:\n            string:\n              schema:\n                type: string\n                example: Attempted to change non-owned order\n                description: Получено некорректное значение для X-ALOR-REQID или номера заявки\n      deprecated: false\n      security:\n        - bearerAuth: []\n  '/warptrans/{tradeServerCode}/v2/client/orders/actions/takeProfit/{orderId}':\n    put:\n      servers:\n        - url: 'https://apidev.alor.ru'\n      summary: Изменение стоп-заявки\n      description: Изменение стоп-заявки с указанным номером\n      operationId: '/v2/client/orders/actions/takeProfit/{orderId}'\n      requestBody:\n        description: Тело заявки\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/bodyrequest_OrdersActionsStop'\n      parameters:\n        - name: tradeServerCode\n          in: path\n          description: Код торгового сервера\n          required: true\n          schema:\n            type: string\n          example: TRADE\n        - name: orderId\n          in: path\n          description: Идентификатор заявки\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: integer\n          example: 93713183\n        - name: X-ALOR-REQID\n          in: header\n          description: 'Требуется уникальная случайная строка в качестве идентификатора запроса. Если уже приходил запрос с таким идентификатором, то заявка не будет исполнена повторно, а в качестве ответа будет возвращена копия ответа на первый запрос с таким значением идентификатора'\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n          example: 9823-696sat\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/orders_actions_StopProfitLoss'\n        '400':\n          description: Bad request\n          content:\n            string:\n              schema:\n                type: string\n                example: Attempted to change non-owned order\n                description: Получено некорректное значение для X-ALOR-REQID или номера заявки\n      deprecated: false\n      security:\n        - bearerAuth: []\n  '/warptrans/{tradeServerCode}/v2/client/orders/actions/takeProfitLimit/{orderId}':\n    put:\n      servers:\n        - url: 'https://apidev.alor.ru'\n      summary: Изменение стоп-лимит заявки\n      description: Изменение стоп-лимит заявки с указанным номером\n      operationId: '/v2/client/orders/actions/takeProfitLimit/{orderId}'\n      requestBody:\n        description: Тело заявки\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/bodyrequest_OrdersActionsStoplimit'\n      parameters:\n        - name: tradeServerCode\n          in: path\n          description: Код торгового сервера\n          required: true\n          schema:\n            type: string\n          example: TRADE\n        - name: orderId\n          in: path\n          description: Идентификатор заявки\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: integer\n          example: 93713183\n        - name: X-ALOR-REQID\n          in: header\n          description: 'Требуется уникальная случайная строка в качестве идентификатора запроса. Если уже приходил запрос с таким идентификатором, то заявка не будет исполнена повторно, а в качестве ответа будет возвращена копия ответа на первый запрос с таким значением идентификатора'\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n          example: 9823-616stn\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/orders_actions_StopProfitLoss'\n        '400':\n          description: Bad request\n          content:\n            string:\n              schema:\n                type: string\n                example: Attempted to change non-owned order\n                description: Получено некорректное значение для X-ALOR-REQID или номера заявки\n      deprecated: false\n      security:\n        - bearerAuth: []\n  '/warptrans/{tradeServerCode}/v2/client/orders/actions/stopLossLimit/{orderId}':\n    put:\n      servers:\n        - url: 'https://apidev.alor.ru'\n      summary: Изменение стоп-лосс лимит заявки\n      description: Изменение стоп-лосс лимит заявки с указанным номером\n      operationId: '/v2/client/orders/actions/stopLossLimit/{orderId}'\n      requestBody:\n        description: Тело заявки\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/bodyrequest_OrdersActionsStoplimit'\n      parameters:\n        - name: tradeServerCode\n          in: path\n          description: Код торгового сервера\n          required: true\n          schema:\n            type: string\n          example: TRADE\n        - name: orderId\n          in: path\n          description: Идентификатор заявки\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: integer\n          example: 93713183\n        - name: X-ALOR-REQID\n          in: header\n          description: 'Требуется уникальная случайная строка в качестве идентификатора запроса. Если уже приходил запрос с таким идентификатором, то заявка не будет исполнена повторно, а в качестве ответа будет возвращена копия ответа на первый запрос с таким значением идентификатора'\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n          example: 9823-616stn\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/orders_actions_StopProfitLoss'\n        '400':\n          description: Bad request\n          content:\n            string:\n              schema:\n                type: string\n                example: Attempted to change non-owned order\n                description: Получено некорректное значение для X-ALOR-REQID или номера заявки\n      deprecated: false\n      security:\n        - bearerAuth: []\n  '/commandapi/warptrans/TRADE/v2/client/orders/actions/market/{orderId}':\n    put:\n      summary: Изменение рыночной заявки\n      description: ''\n      operationId: CommandAPI /v2/client/orders/actions/marketput\n      requestBody:\n        description: Тело заявки\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/bodyrequest_OrdersActionsMarketTVput'\n      parameters:\n        - name: orderId\n          in: path\n          description: Идентификатор заявки\n          required: true\n          schema:\n            type: string\n          example: '23733377307'\n        - name: X-ALOR-REQID\n          in: header\n          description: 'Через точку с запятой портфолио и уникальный идентификатор запроса ``portfolio;uid``. В качестве идентификатора запроса требуется уникальная случайная строка из цифр. Если уже приходил запрос с таким идентификатором, то заявка не будет исполнена повторно, а в качестве ответа будет возвращена копия ответа на первый запрос с таким значением идентификатора'\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n          example: D39004;10338211158548488;2\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/orders_actions_LimitMarket'\n      deprecated: false\n      security:\n        - bearerAuth: []\n  '/commandapi/warptrans/TRADE/v2/client/orders/actions/limit/{orderId}':\n    put:\n      summary: Изменение лимитной заявки\n      description: ''\n      operationId: CommandAPI /v2/client/orders/actions/limitput\n      requestBody:\n        description: Тело заявки\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/bodyrequest_OrdersActionsLimitTVput'\n      parameters:\n        - name: orderId\n          in: path\n          description: Идентификатор заявки\n          required: true\n          schema:\n            type: string\n          example: '23733311729'\n        - name: X-ALOR-REQID\n          in: header\n          description: 'Через точку с запятой портфолио и уникальный идентификатор запроса ``portfolio;uid``. В качестве идентификатора запроса требуется уникальная случайная строка из цифр. Если уже приходил запрос с таким идентификатором, то заявка не будет исполнена повторно, а в качестве ответа будет возвращена копия ответа на первый запрос с таким значением идентификатора'\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n          example: D39004;10338211158548488;2\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/orders_actions_LimitMarket'\n      deprecated: false\n      security:\n        - bearerAuth: []\n  '/commandapi/warptrans/TRADE/v2/client/orders/{orderId}':\n    delete:\n      summary: Снятие заявки\n      description: Снятие заявки с указанным идентификатором\n      operationId: CommandAPI /v2/client/orders/delete\n      parameters:\n        - name: orderId\n          in: path\n          description: Идентификатор заявки\n          required: true\n          example: '18946369167'\n          schema:\n            type: string\n        - name: account\n          in: query\n          description: Идентификатор аккаунта пользователя\n          required: true\n          schema:\n            type: string\n          example: L01-00000F00\n        - name: portfolio\n          in: query\n          description: Идентификатор клиентского портфеля\n          required: true\n          schema:\n            type: string\n          example: D39004\n        - name: exchange\n          in: query\n          description: Биржа\n          required: true\n          schema:\n            type: string\n            enum:\n              - MOEX\n          example: MOEX\n        - name: stop\n          in: query\n          description: Является стоп-заявкой?\n          required: true\n          schema:\n            type: string\n            enum:\n              - 'true'\n              - 'false'\n          example: 'false'\n        - name: format\n          in: query\n          description: Формат возвращаемого сервером JSON\n          required: true\n          schema:\n            type: string\n            enum:\n              - Simple\n          example: Simple\n          explode: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/orders_actions_DeleteOrderId_CommandAPI'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: string\n                    example: OrderToCancelNotFound (404)\n                    description: Тип ошибки\n                  message:\n                    type: string\n                    example: Order to cancel not found\n                    description: Описание ошибки\n      deprecated: false\n      security:\n        - bearerAuth: []\n  '/warptrans/{tradeServerCode}/v2/client/orders/{orderId}':\n    delete:\n      summary: Снятие стоп-заявки\n      description: Снятие стоп-заявки с указанным идентификатором\n      operationId: '/v2/client/orders/actions/{orderId}'\n      parameters:\n        - name: tradeServerCode\n          in: path\n          description: Код торгового сервера\n          required: true\n          schema:\n            type: string\n          example: TRADE\n        - name: orderId\n          in: path\n          description: Идентификатор заявки\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: integer\n          example: 93713183\n        - name: portfolio\n          in: query\n          description: Идентификатор клиентского портфеля\n          required: true\n          schema:\n            type: string\n          example: D39004\n        - name: stop\n          in: query\n          description: Является стоп-заявкой?\n          required: true\n          schema:\n            type: boolean\n          example: true\n        - name: X-ALOR-REQID\n          in: header\n          description: 'Требуется уникальная случайная строка в качестве идентификатора запроса. Если уже приходил запрос с таким идентификатором, то заявка не будет исполнена повторно, а в качестве ответа будет возвращена копия ответа на первый запрос с таким значением идентификатора'\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n          example: 9823-616stn\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/orders_actions_DeleteOrderId'\n        '400':\n          description: Bad request\n          content:\n            string:\n              schema:\n                type: string\n                example: Attempted to change non-owned order\n                description: Получено некорректное значение для X-ALOR-REQID или номера заявки\n      deprecated: false\n      security:\n        - bearerAuth: []\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n  schemas:\n    orders_actions_LimitMarket_CommandAPI:\n      type: object\n      properties:\n        message:\n          type: string\n          example: success\n          description: Вид ответа на успешно выполненный запрос.\n        orderNumber:\n          type: string\n          example: '18946416113'\n          description: Идентификатор заявки\n    orders_actions_400_CommandAPI:\n      type: object\n      properties:\n        message:\n          type: string\n          example: Request with such X-ALOR-REQID was already handled. We return the response to that request.\n          description: Вид ответа для неуникального X-ALOR-REQID\n        oldResponse:\n          type: object\n          properties:\n            statusCode:\n              type: integer\n              example: 400\n            body:\n              type: string\n              example: 'Provided json can''t be properly deserialised, perhaps you made an error or forgot some field'\n    orders_actions_DeleteOrderId_CommandAPI:\n      type: string\n      example: success\n      description: Вид ответа на успешно выполненный запрос.\n    bodyrequest_OrdersActionsLimitTVput:\n      type: object\n      properties:\n        side:\n          type: string\n          example: buy\n          description: Направление сделки. Купля либо продажа.\n          enum:\n            - buy\n            - sell\n        type:\n          type: string\n          example: limit\n          description: Тип заявки\n        id:\n          type: integer\n          example: 18936040296\n          description: Идентификатор заявки\n        quantity:\n          type: integer\n          example: 2\n          description: Количество\n        price:\n          type: number\n          example: 190.97\n          description: Цена\n        instrument:\n          type: object\n          properties:\n            symbol:\n              type: string\n              example: SBER\n              description: Тикер (Код финансового инструмента)\n            exchange:\n              type: string\n              example: MOEX\n              description: Биржа\n        user:\n          type: object\n          properties:\n            account:\n              type: string\n              example: L01-00000F00\n              description: Идентификатор аккаунта пользователя\n            portfolio:\n              type: string\n              example: D39004\n              description: Идентификатор клиентского портфеля\n    bodyrequest_OrdersActionsMarketTVput:\n      type: object\n      properties:\n        side:\n          type: string\n          example: buy\n          description: Направление сделки. Купля либо продажа.\n          enum:\n            - buy\n            - sell\n        type:\n          type: string\n          example: market\n          description: Тип заявки\n        id:\n          type: integer\n          example: 18936040296\n          description: Идентификатор заявки\n        quantity:\n          type: integer\n          example: 2\n          description: Количество\n        instrument:\n          type: object\n          properties:\n            symbol:\n              type: string\n              example: SBER\n              description: Тикер (Код финансового инструмента)\n            exchange:\n              type: string\n              example: MOEX\n              description: Биржа\n        user:\n          type: object\n          properties:\n            account:\n              type: string\n              example: L01-00000F00\n              description: Идентификатор аккаунта пользователя\n            portfolio:\n              type: string\n              example: D39004\n              description: Идентификатор клиентского портфеля\n    bodyrequest_OrdersActionsLimitTV:\n      type: object\n      properties:\n        side:\n          type: string\n          example: buy\n          description: Направление сделки. Купля либо продажа.\n          enum:\n            - buy\n            - sell\n        type:\n          type: string\n          example: limit\n          description: Тип заявки\n        quantity:\n          type: integer\n          example: 2\n          description: Количество (лоты)\n        price:\n          type: number\n          example: 190.97\n          description: Цена\n        instrument:\n          type: object\n          properties:\n            symbol:\n              type: string\n              example: SBER\n              description: Тикер (Код финансового инструмента)\n            exchange:\n              type: string\n              example: MOEX\n              description: Биржа\n        user:\n          type: object\n          properties:\n            account:\n              type: string\n              example: L01-00000F00\n              description: Идентификатор аккаунта пользователя\n            portfolio:\n              type: string\n              example: D39004\n              description: Идентификатор клиентского портфеля\n    bodyrequest_OrdersActionsMarketTV:\n      type: object\n      properties:\n        side:\n          type: string\n          example: buy\n          description: Направление сделки. Купля либо продажа.\n          enum:\n            - buy\n            - sell\n        type:\n          type: string\n          example: market\n          description: Тип заявки\n        quantity:\n          type: integer\n          example: 2\n          description: Количество (лоты)\n        instrument:\n          type: object\n          properties:\n            symbol:\n              type: string\n              example: SBER\n              description: Тикер (Код финансового инструмента)\n            exchange:\n              type: string\n              example: MOEX\n              description: Биржа\n        user:\n          type: object\n          properties:\n            account:\n              type: string\n              example: L01-00000F00\n              description: Идентификатор аккаунта пользователя\n            portfolio:\n              type: string\n              example: D39004\n              description: Идентификатор клиентского портфеля\n    orders_actions_LimitMarket:\n      type: object\n      properties:\n        message:\n          type: string\n          example: (162) Заявка на покупку N 9763124 зарегистрирована (1 удовлетворено).\n          description: Вид ответа на успешно выполненный запрос.\n        orderNumber:\n          type: integer\n          example: 9763124\n          description: Идентификатор заявки\n    orders_actions_400:\n      type: object\n      properties:\n        message:\n          type: string\n          example: Заявка не может быть принята из-за возможного недопустимого снижения уровня маржи.\n          description: Вид ответа для случая отвергнутой заявки.\n    orders_actions_StopProfitLoss:\n      type: object\n      properties:\n        message:\n          type: string\n          example: 'Succeeded, OrderNo=326123, EndTime={08.08.18  23:59:59}, OrderEndTime=(None)'\n          description: Вид ответа на успешно выполненный запрос.\n        orderNumber:\n          type: integer\n          example: 326123\n          description: Идентификатор заявки\n    orders_actions_DeleteOrderId:\n      type: string\n      example: Succeeded\n      description: Вид ответа на успешно выполненный запрос.\n    bodyrequest_OrdersActionsStop:\n      type: object\n      properties:\n        Quantity:\n          type: integer\n          example: 1\n          description: Количество\n        Side:\n          type: string\n          example: buy\n          description: Направление сделки. Купля либо продажа.\n          enum:\n            - buy\n            - sell\n        TriggerPrice:\n          type: integer\n          example: 215\n          description: Стоп-цена\n        Instrument:\n          type: object\n          description: Информация об инструмента и бирже\n          properties:\n            Symbol:\n              type: string\n              example: SBER\n              description: Тикер (Код финансового инструмента)\n            Exchange:\n              type: string\n              example: MOEX\n              description: Биржа\n        User:\n          type: object\n          description: Информация о пользователе\n          properties:\n            Account:\n              type: string\n              example: L01-00000F00\n              description: Идентификатор аккаунта пользователя\n            Portfolio:\n              type: string\n              example: D39004\n              description: Идентификатор клиентского портфеля\n        OrderEndUnixTime:\n          type: integer\n          example: 0\n          description: Время (UTC) завершения сделки в формате Unix Time Seconds\n    bodyrequest_OrdersActionsStoplimit:\n      type: object\n      properties:\n        Quantity:\n          type: integer\n          example: 1\n          description: Количество\n        Side:\n          type: string\n          example: buy\n          description: Направление сделки. Купля либо продажа.\n          enum:\n            - buy\n            - sell\n        TriggerPrice:\n          type: integer\n          example: 205\n          description: Стоп-цена\n        Price:\n          type: integer\n          example: 210\n          description: Цена\n        Instrument:\n          type: object\n          properties:\n            Symbol:\n              type: string\n              example: SBER\n              description: Тикер (Код финансового инструмента)\n            Exchange:\n              type: string\n              example: MOEX\n              description: Биржа\n        User:\n          type: object\n          properties:\n            Account:\n              type: string\n              example: L01-00000F00\n              description: Идентификатор аккаунта пользователя\n            Portfolio:\n              type: string\n              example: D39004\n              description: Идентификатор клиентского портфеля\n        OrderEndUnixTime:\n          type: integer\n          example: 0\n          description: Время (UTC) завершения сделки в формате Unix Time seconds\n    symbols:\n      type: array\n      items:\n        $ref: '#/components/schemas/symbol'\n    orders:\n      type: array\n      items:\n        $ref: '#/components/schemas/order'\n    stoporders:\n      type: array\n      items:\n        $ref: '#/components/schemas/stoporder'\n    history:\n      type: object\n      properties:\n        history:\n          type: array\n          items:\n            $ref: '#/components/schemas/history_object'\n        next:\n          type: integer\n          example: 1532944860\n          nullable: true\n          description: Время (UTC) начала следующей свечи\n        prev:\n          type: integer\n          example: 1532944860\n          nullable: true\n          description: Время (UTC) начала предыдущей свечи\n    positions:\n      type: array\n      items:\n        $ref: '#/components/schemas/position'\n    trades:\n      type: array\n      items:\n        $ref: '#/components/schemas/trade'\n    orderbook:\n      type: object\n      description: Данные о запрашиваемом \"биржевом стакане\"\n      properties:\n        snapshot:\n          type: boolean\n          example: true\n          description: 'Deprecated. Устаревшее поле, будет удалено в будущих обновлениях.'\n          deprecated: true\n        bids:\n          type: array\n          items:\n            $ref: '#/components/schemas/orderbook_bid'\n          description: Биды\n        asks:\n          type: array\n          items:\n            $ref: '#/components/schemas/orderbook_ask'\n          description: Аски\n        timestamp:\n          type: number\n          example: 1610982677\n          description: 'Deprecated. Устаревшее поле, будет удалено в будущих обновлениях. Вместо этого поля используйте поле \"ms_timestamp\".'\n          deprecated: true\n        ms_timestamp:\n          type: number\n          example: 1610982677578\n          description: Время(UTC) в формате Unix Time Milliseconds\n        existing:\n          type: boolean\n          example: false\n          description: 'True - для данных из \"снепшота\", то есть из истории. False - для новых событий'\n    orderbook_bid:\n      type: object\n      properties:\n        price:\n          type: number\n          example: 115820\n          description: Цена\n        volume:\n          type: integer\n          example: 23\n          description: Объём\n    orderbook_ask:\n      type: object\n      properties:\n        price:\n          type: number\n          example: 116030\n          description: Цена\n        volume:\n          type: integer\n          example: 31\n          description: Объём\n    alltrades:\n      type: array\n      items:\n        $ref: '#/components/schemas/alltrade'\n    securities:\n      type: array\n      items:\n        $ref: '#/components/schemas/security'\n    symbol:\n      type: object\n      properties:\n        symbol:\n          type: string\n          example: KMEZ\n          description: Тикер (Код финансового инструмента)\n        exchange:\n          type: string\n          example: MOEX\n          description: Биржа\n        description:\n          type: string\n          example: КМЗ\n          description: Короткое описание на русском языке\n        ask:\n          type: number\n          example: 171.87\n          description: Аск\n        bid:\n          type: number\n          example: 171.82\n          description: Бид\n        prev_close_price:\n          type: number\n          example: 174.9\n          description: Цена предыдущего закрытия\n        last_price:\n          type: number\n          example: 171.82\n          description: Последняя цена\n        last_price_timestamp:\n          type: number\n          example: 1610982677\n          description: UTC-timestamp для значения поля \"last_price\"\n        change:\n          type: number\n          example: -3.08\n          description: Разность цены и цены предыдущего закрытия\n        change_percent:\n          type: number\n          example: -1.76\n          description: Относительное изменение цены\n        high_price:\n          type: number\n          example: 176.02\n          description: Максимальная цена\n        low_price:\n          type: number\n          example: 170.33\n          description: Минимальная цена\n        accruedInt:\n          type: integer\n          example: 0\n          description: Начислено\n        accrued_interest:\n          type: integer\n          example: 0\n          description: Начислено\n        volume:\n          type: number\n          example: 38767080\n          description: Объём\n        open_interest:\n          type: number\n          example: null\n          nullable: true\n          description: ''\n        open_price:\n          type: number\n          example: 175.07\n          description: Цена открытия\n        yield:\n          type: integer\n          example: null\n          description: ''\n        lotsize:\n          type: number\n          example: 10\n          description: Размер лота\n        lotvalue:\n          type: number\n          example: 1990.2\n          description: ''\n        facevalue:\n          type: number\n          example: 5\n          description: ''\n        type:\n          type: string\n          example: CS\n          description: ''\n    symbol_futures:\n      type: object\n      properties:\n        symbol:\n          type: string\n          example: SBRF-9.20\n          description: Тикер (Код финансового инструмента)\n        exchange:\n          type: string\n          example: MOEX\n          description: Биржа\n        description:\n          type: string\n          example: SRU0\n          description: Короткое описание на русском языке\n        ask:\n          type: number\n          example: 171.87\n          description: Аск\n        bid:\n          type: number\n          example: 171.82\n          description: Бид\n        prev_close_price:\n          type: number\n          example: 174.9\n          description: Цена предыдущего закрытия\n        last_price:\n          type: number\n          example: 171.82\n          description: Последняя цена\n        last_price_timestamp:\n          type: integer\n          example: 91022000\n          description: Время последней цены (UTC)\n        change:\n          type: number\n          example: -3.08\n          nullable: true\n          description: Разность цены и цены предыдущего закрытия\n        change_percent:\n          type: number\n          example: -1.76\n          nullable: true\n          description: Относительное изменение цены\n        high_price:\n          type: number\n          example: 176.02\n          description: Максимальная цена\n        low_price:\n          type: number\n          example: 170.33\n          description: Минимальная цена\n        accruedInt:\n          type: integer\n          example: 0\n          nullable: true\n          description: Начислено\n        accrued_interest:\n          type: integer\n          example: 0\n          nullable: true\n          description: Начислено\n        volume:\n          type: number\n          example: 38767080\n          description: Объём\n        open_price:\n          type: number\n          example: 175.07\n          description: Цена открытия\n        yield:\n          type: integer\n          example: null\n          description: ''\n        lotsize:\n          type: number\n          example: 10\n          description: Размер лота\n        lotvalue:\n          type: number\n          example: 1990.2\n          description: ''\n        facevalue:\n          type: number\n          example: 5\n          description: ''\n        type:\n          type: string\n          example: Фьючерсный контракт SBRF-9.20\n          description: ''\n    money:\n      type: object\n      properties:\n        cash:\n          type: number\n          example: 25614.89\n          description: Количество средств\n        used:\n          type: number\n          example: 45536.11\n          description: Количество использованных\n        open:\n          type: number\n          example: 45536.11\n          description: Средства на момент открытия\n        profit:\n          type: number\n          example: -354.7\n          description: Прибыль\n        profitRate:\n          type: number\n          example: -354.7\n          description: Прибыль в процентах\n        comission:\n          type: number\n          example: 2\n          description: Комиссия\n        changes:\n          type: number\n          example: 525.21\n          description: Изменения\n        portfolio:\n          type: number\n          example: 525.56\n          description: Идентификатор клиентского портфеля\n        free:\n          type: number\n          example: 525.25\n          description: Свободные средства\n    order:\n      type: object\n      properties:\n        id:\n          type: string\n          example: '18995978560'\n          description: Уникальный идентификатор заявки\n        symbol:\n          type: string\n          example: SBER\n          description: Тикер (Код финансового инструмента)\n        brokerSymbol:\n          type: string\n          example: 'MOEX:SBER'\n          description: Пара биржа-Тикер\n        exchange:\n          type: string\n          example: MOEX\n          description: Биржа\n        type:\n          type: string\n          example: market\n          description: Тип заявки. Лимитная либо рыночная.\n          enum:\n            - limit\n            - market\n        side:\n          type: string\n          example: buy\n          description: Направление сделки. Купля либо продажа.\n          enum:\n            - buy\n            - sell\n        status:\n          type: string\n          example: filled\n          description: 'Статус исполнения. На исполнении, исполнена, отменена, отклонена.'\n          enum:\n            - working\n            - filled\n            - canceled\n            - rejected\n        transTime:\n          type: string\n          example: '2020-06-16T23:59:59.9990000'\n          description: Время выставления (UTC)\n        endTime:\n          type: string\n          example: '2020-06-16T23:59:59.9990000'\n          description: Время завершения (UTC)\n        qtyUnits:\n          type: number\n          example: 1\n          description: Количество (штуки)\n        qtyBatch:\n          type: number\n          example: 1\n          description: Количество (лоты)\n        qty:\n          type: number\n          example: 1\n          description: Количество (лоты)\n        filledQtyUnits:\n          type: number\n          example: 1\n          description: Количество исполненных (штуки)\n        filledQtyBatch:\n          type: number\n          example: 1\n          description: Количество исполненных (лоты)\n        filled:\n          type: number\n          example: 1\n          description: Количество исполненных (лоты)\n        price:\n          type: number\n          example: 208.6\n          description: Цена\n        existing:\n          type: boolean\n          example: true\n          description: 'True - для данных из \"снепшота\", то есть из истории. False - для новых событий'\n    stoporder:\n      type: object\n      properties:\n        id:\n          type: number\n          example: 347499\n          description: Уникальный идентификатор стоп-заявки\n        symbol:\n          type: string\n          example: SBER\n          description: Тикер (Код финансового инструмента)\n        exchange:\n          type: string\n          example: MOEX\n          description: Биржа\n        brokerSymbol:\n          type: string\n          example: 'MOEX:LKOH'\n          description: 'Пара Биржа:Тикер'\n        type:\n          type: string\n          example: stop\n          description: Тип заявки\n          enum:\n            - stop\n            - stoplimit\n        stopPrice:\n          type: number\n          example: 215\n          description: Условная цена\n        side:\n          type: string\n          example: buy\n          description: Направление сделки. Купля либо продажа.\n          enum:\n            - buy\n            - sell\n        status:\n          type: string\n          example: filled\n          description: 'Статус исполнения. На исполнении, исполнена, отменена, отклонена.'\n          enum:\n            - working\n            - filled\n            - canceled\n            - rejected\n        endTime:\n          type: string\n          example: '2020-06-16T23:59:59.9990000'\n          description: Время действия заявки (UTC)\n        qty:\n          type: number\n          example: 1\n          description: Количество\n        filledQtyBatch:\n          type: number\n          example: 1\n          description: Количество исполненных\n        price:\n          type: number\n          example: 208.6\n          description: Цена(Лимит)\n        existing:\n          type: boolean\n          example: true\n          description: 'True - для данных из \"снепшота\", то есть из истории. False - для новых событий'\n    history_object:\n      type: object\n      properties:\n        time:\n          type: integer\n          example: 1532944740\n          description: Время (UTC) (Unix time seconds)\n        close:\n          type: number\n          example: 210.83\n          description: Цена при закрытии\n        open:\n          type: number\n          example: 210.82\n          description: Цена при открытии\n        high:\n          type: number\n          example: 210.83\n          description: Максимальная цена\n        low:\n          type: number\n          example: 210.68\n          description: Миниимальная цена\n        volume:\n          type: integer\n          example: 1944\n          description: Объём\n    summary:\n      type: object\n      properties:\n        buyingPowerAtMorning:\n          type: number\n          example: 439844.15\n          description: Покупательская способность на утро\n        buyingPower:\n          type: number\n          example: 452404\n          description: Покупательская способность\n        profit:\n          type: number\n          example: 12560\n          description: Прибыль за сегодня\n        profitRate:\n          type: number\n          example: 1.93\n          description: 'Норма прибыли, %'\n        portfolioEvaluation:\n          type: number\n          example: 651717\n          description: Ликвидный портфель\n        portfolioLiquidationValue:\n          type: number\n          example: 651717\n          description: Оценка портфеля\n        initialMargin:\n          type: number\n          example: 199313\n          description: Маржа\n        riskBeforeForcePositionClosing:\n          type: number\n          example: 552061\n          description: Риск до закрытия\n    position:\n      type: object\n      properties:\n        symbol:\n          type: string\n          example: LKOH\n          description: Тикер (Код финансового инструмента)\n        brokerSymbol:\n          type: string\n          example: 'MOEX:LKOH'\n          description: 'Пара Биржа:Тикер'\n        exchange:\n          type: string\n          example: MOEX\n          description: Биржа\n        avgPrice:\n          type: number\n          example: 16.6\n          description: Средняя цена\n        qtyUnits:\n          type: number\n          example: 20\n          description: Количество (штуки)\n        openUnits:\n          type: number\n          example: 30\n          description: Количество открытых позиций (штуки)\n        lotSize:\n          type: number\n          example: 1\n          description: Размер лота\n        shortName:\n          type: string\n          example: ЛУКОЙЛ\n          description: Короткое наименование\n        qtyT0:\n          type: number\n          example: 20\n          description: ''\n        qtyT1:\n          type: number\n          example: 20\n          description: ''\n        qtyT2:\n          type: number\n          example: 20\n          description: ''\n        qtyTFuture:\n          type: number\n          example: 20\n          description: Количество (штуки)\n        qtyT0Batch:\n          type: number\n          example: 20\n          description: ''\n        qtyT1Batch:\n          type: number\n          example: 20\n          description: ''\n        qtyT2Batch:\n          type: number\n          example: 20\n          description: ''\n        qtyTFutureBatch:\n          type: number\n          example: 20\n          description: Количество (лоты)\n        qtyBatch:\n          type: number\n          example: 20\n          description: Количество (лоты)\n        openQtyBatch:\n          type: number\n          example: 20\n          description: ''\n        qty:\n          type: number\n          example: 20\n          description: Количество (лоты)\n        open:\n          type: number\n          example: 20\n          description: ''\n        unrealisedPl:\n          type: number\n          example: 3250\n          description: ''\n        isCurrency:\n          type: boolean\n          example: false\n          description: 'True для валютных остатков (денег), false - для торговых инструментов'\n    fortsrisk:\n      type: object\n      properties:\n        portfolio:\n          type: string\n          example: D49004\n          description: Идентификатор клиентского портфеля\n        moneyFree:\n          type: number\n          example: 452404\n          description: 'Свободные средства. Сумма рублей и залогов, дисконтированных в рубли, доступная для открытия позиций. (MoneyFree = MoneyAmount + VmInterCl – MoneyBlocked – VmReserve – Fee)'\n        moneyBlocked:\n          type: number\n          example: 12560\n          description: 'Средства, заблокированные под ГО'\n        balanceMoney:\n          type: number\n          example: 1.93\n          description: Сальдо денежных торговых переводов за текущую сессию\n        fee:\n          type: number\n          example: 651717\n          description: Списанный сбор\n        moneyOld:\n          type: number\n          example: 651717\n          description: Общее количество рублей и дисконтированных в рубли залогов на начало сессии\n        moneyAmount:\n          type: number\n          example: 199313\n          description: Общее количество рублей и дисконтированных в рубли залогов\n        moneyPledgeAmount:\n          type: number\n          example: 552061\n          description: 'Сумма залогов, дисконтированных в рубли'\n        vmInterCl:\n          type: number\n          example: 651717\n          description: 'Вариационная маржа, списанная или полученная в пром. клиринг'\n        vmCurrentPositions:\n          type: number\n          example: 199313\n          description: Сагрегированная вармаржа по текущим позициям\n        varMargin:\n          type: number\n          example: 552061\n          description: VmCurrentPositions + VmInterCl\n        isLimitsSet:\n          type: boolean\n          example: false\n          description: Наличие установленных денежного и залогового лимитов\n    risk:\n      type: object\n      properties:\n        portfolio:\n          type: string\n          example: D49004\n          description: Идентификатор клиентского портфеля\n        exchange:\n          type: string\n          example: MOEX\n          description: Биржа\n        portfolioEvaluation:\n          type: number\n          example: 646270.9\n          description: Общая стоимость портфеля\n        portfolioLiquidationValue:\n          type: number\n          example: 646270.9\n          description: Стоимость ликвидного портфеля\n        initialMargin:\n          type: number\n          example: 15752.115\n          description: Начальная маржа\n        minimalMargin:\n          type: number\n          example: 65177.0575\n          description: Минимальная маржа\n        correctedMargin:\n          type: number\n          example: 15752.115\n          description: Скорректированная маржа\n        riskCoverageRatioOne:\n          type: number\n          example: 630518.785\n          description: НПР1\n        riskCoverageRatioTwo:\n          type: number\n          example: 638394.8425\n          description: НПР2\n        riskCategoryId:\n          type: integer\n          example: 2\n          description: Категория риска\n        clientType:\n          type: string\n          example: HighRisk\n          description: Тип клиента\n        hasForbiddenPositions:\n          type: boolean\n          example: false\n          description: Имеются ли запретные позиции\n        hasNegativeQuantity:\n          type: boolean\n          example: false\n          description: Имеются ли отрицательные количества\n    alltrade:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 159\n          description: Уникальный идентификатор.\n        orderno:\n          type: integer\n          example: 0\n          description: Идентификатор заявки\n        symbol:\n          type: string\n          example: SBER\n          description: 'Тикер (Код финансового инструмента). \"[N/A]\" используется если symbol не определен.'\n        qty:\n          type: integer\n          example: 1\n          description: Количество\n        price:\n          type: number\n          example: 142.52\n          description: Цена\n        time:\n          type: string\n          example: '2018-08-07T08:40:03.445Z'\n          description: Дата и время (UTC) закрытия заявки\n        timestamp:\n          type: integer\n          example: 1611158710768\n          description: Время (UTC) в формате Unix Time Milliseconds\n        side:\n          type: string\n          example: buy\n          description: Направление агрессивной заявки. Поле может быть пустым\n          enum:\n            - buy\n            - sell\n        oi:\n          type: integer\n          example: 523920\n          description: Открытый интерес (open interest). Если не поддерживается инстурментом - значение 0.\n        existing:\n          type: boolean\n          example: false\n          description: 'True - для данных из \"снепшота\", то есть из истории. False - для новых событий'\n    security:\n      type: object\n      properties:\n        symbol:\n          type: string\n          example: SBER\n          description: Тикер (Код финансового инструмента)\n        shortname:\n          type: string\n          example: Сбербанк\n          description: Краткое наименование инструмента\n        description:\n          type: string\n          example: Сбербанк России ПАО ао\n          description: Краткое описание инструмента\n        exchange:\n          type: string\n          example: MOEX\n          description: Биржа\n        type:\n          type: string\n          example: CS\n          description: Тип\n        lotsize:\n          type: number\n          example: 1\n          description: Размер лота\n        facevalue:\n          type: number\n          example: 100\n          description: Номинальная стоимость\n        cfiCode:\n          type: string\n          example: ESXXXX\n          description: Тип ценной бумаги согласно стандарту ISO 10962\n        cancellation:\n          type: string\n          example: '2018-09-03T00:00:00'\n          description: Дата и время (UTC) окончания действия\n        minstep:\n          type: number\n          example: 0.01\n          description: Минимальный шаг цены\n        rating:\n          type: number\n          example: 195613886\n          description: ''\n        marginbuy:\n          type: number\n          example: 6707.86\n          description: Цена маржинальной покупки (заемные средства)\n        marginsell:\n          type: number\n          example: 6707.86\n          description: Цена маржинальной продажи (заемные средства)\n        marginrate:\n          type: number\n          example: 89.3428\n          description: Отношение цены маржинальной покупки к цене последней сделки\n        pricestep:\n          type: number\n          example: 6.30202\n          description: 'Минимальный шаг цены, выраженный в рублях'\n        priceMax:\n          type: number\n          example: 79.57\n          description: Максимальная цена\n        priceMin:\n          type: number\n          example: 70.55\n          description: Минимальная цена\n        theorPrice:\n          type: number\n          example: 0\n          description: ''\n        theorPriceLimit:\n          type: number\n          example: 0\n          description: ''\n        volatility:\n          type: number\n          example: 0\n          description: Волативность\n        currency:\n          type: string\n          example: RUB\n          description: Валюта\n        ISIN:\n          type: string\n          nullable: true\n          example: RU000A1014L8\n          description: Идентификатор ценной бумаги согласно стандарту ISO 6166\n        yield:\n          type: string\n          nullable: true\n          example: null\n          description: ''\n        primary_board:\n          type: string\n          example: ROPD\n          description: Код режима торгов\n    time:\n      type: integer\n      example: 1532944071\n      description: Текущее время (UTC) в формате Unix time seconds\n    trade:\n      type: object\n      properties:\n        id:\n          type: string\n          example: 159\n          description: Уникальный идентификатор сделки\n        orderno:\n          type: string\n          example: 7271479\n          description: Идентификатор заявки\n        symbol:\n          type: string\n          example: GAZP\n          description: 'Тикер (Код финансового инструмента). \"[N/A]\" используется если symbol не определен.'\n        brokerSymbol:\n          type: string\n          example: 'GAZP:MOEX'\n          description: 'Пара Биржа:Тикер'\n        exchange:\n          type: string\n          example: MOEX\n          description: Биржа\n        date:\n          type: string\n          example: '2018-08-07T08:40:03.445Z'\n          description: Дата и время (UTC) закрытия заявки\n        board:\n          type: string\n          example: TQBR\n          description: Код режима торгов\n        qtyUnits:\n          type: integer\n          example: 1\n          description: Количество (штуки)\n        qtyBatch:\n          type: integer\n          example: 1\n          description: Количество (лоты)\n        qty:\n          type: integer\n          example: 1\n          description: Количество (лоты)\n        price:\n          type: number\n          example: 142.52\n          description: Цена\n        side:\n          type: string\n          example: buy\n          description: Направление сделки. Купля либо продажа.\n          enum:\n            - buy\n            - sell\n        existing:\n          type: boolean\n          example: false\n          description: 'True - для данных из \"снепшота\", то есть из истории. False - для новых событий'\n    servers_info:\n      type: array\n      items:\n        $ref: '#/components/schemas/portfolio_info'\n    portfolio_info:\n      type: array\n      items:\n        type: object\n        properties:\n          portfolio:\n            type: string\n            example: D39004\n            description: Идентификатор клиентского портфеля\n          tks:\n            type: string\n            example: L01-00000F00\n          tradeServersInfo:\n            type: array\n            items:\n              type: object\n              properties:\n                tradeServerCode:\n                  type: string\n                  example: TRADE\n                  description: Код сервера\n                addresses:\n                  type: string\n                  nullable: true\n                  example: null\n                type:\n                  type: string\n                  nullable: true\n                  example: null\n                contracts:\n                  type: string\n                  example: РЦБ\n                market:\n                  type: string\n                  nullable: true\n                  example: null\n                accountNum:\n                  type: string\n                  nullable: true\n                  example: null\n",
			"canonicalURL": "/github.com/brkly/alor_dev_auto_python@ff22b3284befa317b809eb33db173e019093d461/-/blob/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/brkly/alor_dev_auto_python/blob/ff22b3284befa317b809eb33db173e019093d461/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/md/v2/history\": get: operation \"DevHistory\": parameters: parse parameter \"tf\": schema: at 1:61726: parse enum values: parse value \"15\": expected type \"string\", got \"number\""
}