{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/moov-io/ach"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi.yaml",
			"byteSize": 79242,
			"content": "openapi: 3.0.2\ninfo:\n  description: Moov ACH ([Automated Clearing House](https://en.wikipedia.org/wiki/Automated_Clearing_House)) implements an HTTP API for creating, parsing, and validating ACH files. ACH is the primary method of electronic money movement throughout the United States.\n  version: v1\n  title: ACH API\n  contact:\n    url: https://github.com/moov-io/ach\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n\nservers:\n  - url: http://localhost:8080\n    description: Local development\n\ntags:\n  - name: 'ACH Files'\n    description: |\n      File contains the structures of an ACH File. It contains one and only one File Header and File Control with at least one Batch.\n      Batch objects within Files hold the Batch Header and Batch Control and all Entry Records and Addenda Records for the Batch.\n\npaths:\n  /ping:\n    get:\n      tags: ['ACH Files']\n      summary: Ping ACH service\n      description: Check if the ACH service is running.\n      operationId: ping\n      responses:\n        '200':\n          description: Service is running properly\n  /files:\n    get:\n      tags: ['ACH Files']\n      summary: List Files\n      description: List all ACH Files created with the ACH service. These Files are not persisted through multiple runs of the service.\n      operationId: getFiles\n      parameters:\n        - name: X-Request-ID\n          in: header\n          description: Optional Request ID allows application developer to trace requests through the system's logs\n          example: \"rs4f9915\"\n          schema:\n            type: string\n      responses:\n        '200':\n          description: A list of File objects\n          headers:\n            X-Total-Count:\n              description: The total number of Originators\n              schema:\n                type: integer\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Files'\n  /files/create:\n    post:\n      tags: ['ACH Files']\n      summary: Create File\n      description: Create a new File object from either the plaintext or JSON representation.\n      operationId: createFile\n      parameters:\n        - name: X-Request-ID\n          in: header\n          description: Optional Request ID allows application developer to trace requests through the system's logs\n          example: \"rs4f9915\"\n          schema:\n            type: string\n        - name: X-Idempotency-Key\n          in: header\n          description: Idempotent key in the header which expires after 24 hours. These strings should contain enough entropy to not collide with each other in your requests.\n          example: \"a4f88150\"\n          required: false\n          schema:\n            type: string\n        - name: requireABAOrigin\n          in: query\n          description: Optional parameter to configure ImmediateOrigin validation\n          schema:\n            type: boolean\n        - name: bypassOrigin\n          in: query\n          description: Optional parameter to configure ImmediateOrigin validation\n          schema:\n            type: boolean\n        - name: bypassDestination\n          in: query\n          description: Optional parameter to configure ImmediateDestination validation\n          schema:\n            type: boolean\n      requestBody:\n        description: Content of the ACH file (in json or raw text)\n        required: true\n        content:\n          text/plain:\n            schema:\n              description: A plaintext ACH file\n              type: string\n              example: |\n               101 23138010401210428821906240000A094101Federal Reserve Bank   My Bank Name\n               5225Name on Account                     121042882 PPDREG.SALARY      190625   1121042880000001\n               62723138010412345678         0100000000               Receiver Account Name   0121042880000001\n               82250000010023138010000100000000000000000000121042882                          121042880000001\n               9000001000001000000010023138010000100000000000000000000\n               9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999\n               9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999\n               9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999\n               9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999\n               9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateFile'\n      responses:\n        '200':\n          description: A JSON object containing a new File\n          headers:\n            Location:\n              description: The location of the new resource\n              schema:\n                type: string\n                format: uri\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileID'\n        '400':\n          description: \"Invalid File Header Object\"\n          content:\n            application/json:\n              schema:\n                $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'\n  /files/{fileID}:\n    get:\n      tags: ['ACH Files']\n      summary: Retrieve File\n      description: Get the details of an existing File using the unique File identifier that was returned upon creation.\n      operationId: getFileByID\n      parameters:\n        - name: X-Request-ID\n          in: header\n          description: Optional Request ID allows application developer to trace requests through the system's logs\n          example: \"rs4f9915\"\n          schema:\n            type: string\n        - name: fileID\n          in: path\n          description: File ID\n          required: true\n          schema:\n            type: string\n            example: \"3f2d23ee214\"\n      responses:\n        '200':\n          description: A File object for the supplied ID\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/File'\n        '404':\n          description: A resource with the specified ID was not found\n    delete:\n      tags: ['ACH Files']\n      summary: Delete File\n      description: Permanently deletes a File and associated Batches. It cannot be undone.\n      operationId: deleteACHFile\n      parameters:\n        - name: fileID\n          in: path\n          description: File ID\n          required: true\n          schema:\n            type: string\n            example: \"3f2d23ee214\"\n        - name: X-Request-ID\n          in: header\n          description: Optional Request ID allows application developer to trace requests through the system's logs\n          example: \"rs4f9915\"\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Permanently deleted File.\n        '404':\n          description: A File with the specified ID was not found.\n  /files/{fileID}/contents:\n    get:\n      tags: ['ACH Files']\n      summary: Get File Contents\n      description: |\n        Assembles the existing File (batches and controls) records, computes sequence numbers and totals. Returns plaintext file.\n      operationId: getFileContents\n      parameters:\n        - name: X-Request-ID\n          in: header\n          description: Optional Request ID allows application developer to trace requests through the system's logs\n          example: \"rs4f9915\"\n          schema:\n            type: string\n        - name: fileID\n          in: path\n          description: File ID\n          required: true\n          schema:\n            type: string\n            example: \"3f2d23ee214\"\n      responses:\n        '200':\n          description: File built successfully without errors.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/RawFile'\n  /files/{fileID}/validate:\n    get:\n      tags: ['ACH Files']\n      summary: Validate File\n      description: Validates the existing File. You need only supply the unique File identifier that was returned upon creation.\n      operationId: checkFile\n      parameters:\n        - name: X-Request-ID\n          in: header\n          description: Optional Request ID allows application developer to trace requests through the system's logs\n          example: \"rs4f9915\"\n          schema:\n            type: string\n        - name: fileID\n          in: path\n          description: File ID\n          required: true\n          schema:\n            type: string\n            example: \"3f2d23ee214\"\n      responses:\n        '200':\n          description: File validated successfully without errors.\n          content:\n            application/json:\n              schema:\n                $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'\n        '400':\n          description: Validation failed. Check response for errors\n    post:\n      tags: ['ACH Files']\n      summary: Validate File (Custom)\n      description: Validates the existing File. You need only supply the unique File identifier that was returned upon creation.\n      operationId: validateFile\n      parameters:\n        - name: X-Request-ID\n          in: header\n          description: Optional Request ID allows application developer to trace requests through the system's logs\n          example: \"rs4f9915\"\n          schema:\n            type: string\n        - name: fileID\n          in: path\n          description: File ID\n          required: true\n          schema:\n            type: string\n            example: \"3f2d23ee214\"\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ValidateOpts'\n      responses:\n        '200':\n          description: File validated successfully without errors.\n          content:\n            application/json:\n              schema:\n                $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'\n        '400':\n          description: Validation failed. Check response for errors\n  /files/{fileID}/segment:\n    post:\n      tags: ['ACH Files']\n      summary: Segment File\n      description: Split one File into two. One with only debits and one with only credits.\n      operationId: segmentFile\n      parameters:\n        - name: X-Request-ID\n          in: header\n          description: Optional Request ID allows application developer to trace requests through the system's logs\n          example: \"rs4f9915\"\n          schema:\n            type: string\n        - name: X-Idempotency-Key\n          in: header\n          description: Idempotent key in the header which expires after 24 hours. These strings should contain enough entropy to not collide with each other in your requests.\n          example: \"a4f88150\"\n          required: false\n          schema:\n            type: string\n        - name: fileID\n          in: path\n          description: File ID\n          required: true\n          schema:\n            type: string\n            example: \"3f2d23ee214\"\n      # requestBody:\n      #   description: Optional configuration for segmenting files\n      #   required: false\n      #   content:\n      #     application/json:\n      #       schema:\n      #         $ref: '#/components/schemas/SegmentFileConfiguration'\n      responses:\n        '200':\n          description: An ID of each new ACH file\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SegmentedFiles'\n        '400':\n          description: See error in response body\n          content:\n            application/json:\n              schema:\n                $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'\n        '404':\n          description: A resource with the specified ID was not found\n  /files/{fileID}/flatten:\n    post:\n      tags: ['ACH Files']\n      summary: Flatten Batches\n      description: Consolidate Batches and Entries into the minimum number of Batches needed.\n      operationId: flattenFile\n      parameters:\n        - name: X-Request-ID\n          in: header\n          description: Optional Request ID allows application developer to trace requests through the system's logs\n          example: \"rs4f9915\"\n          schema:\n            type: string\n        - name: X-Idempotency-Key\n          in: header\n          description: Idempotent key in the header which expires after 24 hours. These strings should contain enough entropy to not collide with each other in your requests.\n          example: \"a4f88150\"\n          required: false\n          schema:\n            type: string\n        - name: fileID\n          in: path\n          description: File ID\n          required: true\n          schema:\n            type: string\n            example: \"3f2d23ee214\"\n      responses:\n        '200':\n          description: An ID of the new ACH file\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileID'\n        '400':\n          description: See error in response body\n          content:\n            application/json:\n              schema:\n                $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'\n        '404':\n          description: A resource with the specified ID was not found\n  /files/{fileID}/batches:\n    get:\n      tags: ['ACH Files']\n      summary: Get Batches\n      description: Get the Batches on a File.\n      operationId: getFileBatches\n      parameters:\n        - name: X-Request-ID\n          in: header\n          description: Optional Request ID allows application developer to trace requests through the system's logs\n          example: \"rs4f9915\"\n          schema:\n            type: string\n        - name: fileID\n          in: path\n          description: File ID\n          required: true\n          schema:\n            type: string\n            example: \"3f2d23ee214\"\n      responses:\n        '200':\n          description: A list of Batch objects\n          headers:\n            X-Total-Count:\n              description: The total number of Batches on the File.\n              schema:\n                type: integer\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Batches'\n    post:\n      tags: ['ACH Files']\n      summary: Append Batch to File\n      description: Append a Batch record to the specified File.\n      operationId: addBatchToFile\n      parameters:\n        - name: X-Request-ID\n          in: header\n          description: Optional Request ID allows application developer to trace requests through the system's logs\n          example: \"rs4f9915\"\n          schema:\n            type: string\n        - name: X-Idempotency-Key\n          in: header\n          description: Idempotent key in the header which expires after 24 hours. These strings should contain enough entropy to not collide with each other in your requests.\n          example: \"a4f88150\"\n          required: false\n          schema:\n            type: string\n        - name: fileID\n          in: path\n          description: File ID\n          required: true\n          schema:\n            type: string\n            example: \"3f2d23ee214\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Batch'\n      responses:\n        '200':\n          description: Batch added to File\n        '400':\n          description: See error in response body\n          content:\n            application/json:\n              schema:\n                $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'\n        '404':\n          description: A resource with the specified ID was not found\n  /files/{fileID}/batches/{batchID}:\n    get:\n      tags: ['ACH Files']\n      summary: Get Batch\n      description: Get a specific Batch on a File.\n      operationId: getFileBatch\n      parameters:\n        - name: X-Request-ID\n          in: header\n          description: Optional Request ID allows application developer to trace requests through the system's logs\n          example: \"rs4f9915\"\n          schema:\n            type: string\n        - name: fileID\n          in: path\n          description: File ID\n          required: true\n          schema:\n            type: string\n            example: \"3f2d23ee214\"\n        - name: batchID\n          in: path\n          description: Batch ID\n          required: true\n          schema:\n            type: string\n            example: \"45758063\"\n      responses:\n        '200':\n          description: Batch object\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Batch'\n        '404':\n          description: Batch or File not found\n    delete:\n      tags: ['ACH Files']\n      summary: Delete Batch\n      description: Delete a Batch from a File.\n      operationId: deleteFileBatch\n      parameters:\n        - name: X-Request-ID\n          in: header\n          description: Optional Request ID allows application developer to trace requests through the system's logs\n          example: \"rs4f9915\"\n          schema:\n            type: string\n        - name: fileID\n          in: path\n          description: File ID\n          required: true\n          schema:\n            type: string\n            example: \"3f2d23ee214\"\n        - name: batchID\n          in: path\n          description: Batch ID\n          required: true\n          schema:\n            type: string\n            example: \"45758063\"\n      responses:\n        '200':\n          description: Batch deleted\n        '404':\n          description: Batch or File not found\n\ncomponents:\n  schemas:\n    CreateFile:\n      properties:\n        ID:\n          type: string\n          description: File ID\n          example: \"3f2d23ee214\"\n        fileHeader:\n          $ref: '#/components/schemas/FileHeader'\n        batches:\n          type: array\n          items:\n            $ref: '#/components/schemas/Batch'\n        IATBatches:\n          type: array\n          items:\n            $ref: '#/components/schemas/IATBatch'\n        fileControl:\n          $ref: '#/components/schemas/FileControl'\n        advEntryDetails:\n          type: array\n          items:\n            $ref: '#/components/schemas/ADVEntryDetail'\n        advBatchControl:\n          $ref: '#/components/schemas/ADVBatchControl'\n      required:\n        - fileHeader\n    FileID:\n      properties:\n        ID:\n          type: string\n          description: File ID\n          example: \"1e522dc8\"\n        error:\n          type: string\n          description: An error message describing the problem intended for humans.\n          example: Validation error(s) present.\n    File:\n      properties:\n        ID:\n          type: string\n          description: File ID\n          example: \"3f2d23ee214\"\n        fileHeader:\n          $ref: '#/components/schemas/FileHeader'\n        batches:\n          type: array\n          items:\n            $ref: '#/components/schemas/Batch'\n        IATBatches:\n          type: array\n          items:\n            $ref: '#/components/schemas/IATBatch'\n        fileControl:\n          $ref: '#/components/schemas/FileControl'\n        NotificationOfChange:\n          type: array\n          items:\n            $ref: '#/components/schemas/Batch'\n          nullable: true\n        ReturnEntries:\n          type: array\n          items:\n            $ref: '#/components/schemas/Batch'\n          nullable: true\n        fileADVControl:\n          $ref: '#/components/schemas/ADVFileControl'\n      required:\n        - ID\n        - fileHeader\n        - fileControl\n    FileHeader:\n      properties:\n        ID:\n          description: File ID\n          type: string\n          example: \"d1e26288\"\n        immediateOrigin:\n          type: string\n          description: Contains the Routing Number of the ACH Operator or sending point that is sending the file.\n          minLength: 9\n          maxLength: 10\n          example: \"999912342\"\n        immediateOriginName:\n          type: string\n          description: The name of the ACH Operator or sending point that is sending the file.\n          maxLength: 23\n          example: \"My Bank Name\"\n        immediateDestination:\n          type: string\n          maxLength: 10\n          minLength: 9\n          example: \"691000134\"\n          description: Contains the Routing Number of the ACH Operator or receiving point to which the file is being sent.\n        immediateDestinationName:\n          type: string\n          description: The name of the ACH Operator or receiving point to which the file is being sent.\n          maxLength: 23\n          example: \"Federal Reserve Bank\"\n        fileCreationTime:\n          description: 'The File Creation Time is the time when the file was prepared by an ODFI. (Format HHmm - H=Hour, m=Minute)'\n          type: string\n          format: \"HHmm\"\n          example: \"1504\"\n        fileCreationDate:\n          description: 'The File Creation Date is the date when the file was prepared by an ODFI. (Format YYMMDD - Y=Year, M=Month, D=Day)'\n          type: string\n          format: \"YYMMDD\"\n          example: \"190102\"\n        fileIDModifier:\n          type: string\n          description: Incremented value for each file for RDFIs.\n          example: \"0\"\n        referenceCode:\n          type: string\n          description: Reserved field for information pertinent to the Originator.\n      required:\n        - immediateOrigin\n        - immediateOriginName\n        - immediateDestination\n        - immediateDestinationName\n        - fileCreationTime\n        - fileCreationDate\n    FileControl:\n      properties:\n        ID:\n          description: File ID\n          type: string\n          example: \"d1e26288\"\n        batchCount:\n          description: Count of Batches in the File\n          type: integer\n          minimum: 1\n          example: 1\n        blockCount:\n          description: |\n            Total number of records in the file (include all headers and trailer) divided by 10 (This number must be evenly divisible by 10. If not, additional records consisting of all 9's are added to the file after the initial '9' record to fill out the block 10.)\n          type: integer\n          example: 1\n        entryAddendaCount:\n          description: Total detail and addenda records in the file\n          type: integer\n          minimum: 1\n          example: 1\n        entryHash:\n          description: Calculated in the same manner as the batch total but includes total from entire file\n          type: integer\n          example: 0\n        totalDebit:\n          description: Accumulated Batch debit totals within the file.\n          type: integer\n          example: 100\n        totalCredit:\n          description: Accumulated Batch credit totals within the file.\n          type: integer\n          example: 20\n      required:\n        - ID\n        - batchCount\n        - blockCount\n        - entryAddendaCount\n        - entryHash\n        - totalDebit\n        - totalCredit\n    RawFile:\n      type: string\n      description: Plaintext ACH file\n      example: \"101 222380104 1210428821805100000A094101Citadel                Bank Name\"\n    Files:\n      type: array\n      items:\n        $ref: '#/components/schemas/File'\n    Batch:\n      properties:\n        batchHeader:\n          $ref: '#/components/schemas/BatchHeader'\n        entryDetails:\n          type: array\n          items:\n            $ref: '#/components/schemas/EntryDetail'\n          minLength: 1\n        batchControl:\n          $ref: '#/components/schemas/BatchControl'\n        offset:\n          $ref: '#/components/schemas/Offset'\n      required:\n        - batchHeader\n        - entryDetails\n        - batchControl\n        - offset\n    BatchHeader:\n      required:\n        - serviceClassCode\n        - standardEntryClassCode\n        - companyName\n        - companyIdentification\n        - ODFIIdentification\n        - batchNumber\n      properties:\n        ID:\n          type: string\n          description: A client-defined ID used as a reference to this batch\n          example: \"913b5742\"\n        serviceClassCode:\n          type: integer\n          description: Service Class Code - Mixed Debits and Credits '200', ACH Credits Only '220', or ACH Debits Only '225'\n          example: 220\n        companyName:\n          type: string\n          description: Company originating the entries in the batch\n          example: Acme Corp\n        companyDiscretionaryData:\n          type: string\n          description: The 9 digit FEIN number (proceeded by a predetermined alpha or numeric character) of the entity in the company name field\n          example: \"123456789\"\n        companyIdentification:\n          description: |\n            Alphanumeric code used to identify an Originator. The Company Identification Field must be included on all prenotification records and on each entry initiated pursuant to such prenotification. The Company ID may begin with the ANSI one-digit Identification Code Designator (ICD), followed by the identification number.\n            Possible ICDs are the IRS Employer Identification Number (EIN) \"1\", Data Universal Numbering Systems (DUNS) \"3\", or User Assigned Number \"9\".\n          type: string\n          example: \"121042882\"\n        standardEntryClassCode:\n          type: string\n          description: Identifies the payment type (product) found within an ACH batch using a 3-character code.\n          example: \"PPD\"\n        companyEntryDescription:\n          type: string\n          description: |\n            A description of the entries contained in the batch.\n            The Originator establishes the value of this field to provide a description of the purpose of the entry to be displayed back to the receiver. For example, \"GAS BILL,\" \"REG. SALARY,\" \"INS. PREM,\", \"SOC. SEC.,\" \"DTC,\" \"TRADE PAY,\" \"PURCHASE,\" etc.\n            This field must contain the word \"REVERSAL\" (left justified) when the batch contains reversing entries.\n            This field must contain the word \"RECLAIM\" (left justified) when the batch contains reclamation entries.\n            This field must contain the word \"NONSETTLED\" (left justified) when the batch contains entries which could not settle.\n          example: \"PURCHASE\"\n        companyDescriptiveDate:\n          type: string\n          description: |\n            The Originator establishes this field as the date it would like to see displayed to the receiver for descriptive purposes. This field is never used to control timing of any computer or manual operation. It is solely for descriptive purposes. The RDFI should not assume any specific format.\n          example: \"SD1300\"\n        effectiveEntryDate:\n          description: Date on which the entries are to settle. (Format YYMMDD - Y=Year, M=Month, D=Day)\n          type: string\n          format: \"YYMMDD\"\n          example: \"190102\"\n        originatorStatusCode:\n          type: integer\n          description: |\n            ODFI initiating the Entry. |\n            0 - ADV File prepared by an ACH Operator. |\n            1 - This code identifies the Originator as a depository financial institution. |\n            2 - This code identifies the Originator as a Federal Government entity or agency.\n          example: 1\n        ODFIIdentification:\n          description: First 8 digits of the originating DFI transit routing number\n          type: string\n          example: \"12345678\"\n        batchNumber:\n          type: integer\n          description: |\n            BatchNumber is assigned in ascending sequence to each batch by the ODFI or its Sending Point in a given file of entries. Since the batch number in the Batch Header Record and the Batch Control Record is the same, the ascending sequence number should be assigned by batch and not by record.\n          example: 0\n    BatchControl:\n      properties:\n        ID:\n          description: Batch ID\n          type: string\n          example: \"62d8f0cd\"\n        serviceClassCode:\n          description: Same as ServiceClassCode in BatchHeaderRecord\n          type: integer\n          example: 220\n        entryAddendaCount:\n          description: EntryAddendaCount is a tally of each Entry Detail Record and each Addenda Record processed, within either the batch or file as appropriate.\n          type: integer\n          example: 1\n        entryHash:\n          description: |\n            Validate the Receiving DFI Identification in each Entry Detail Record is hashed to provide a check against inadvertent alteration of data contents due to hardware failure or program error.\n            In this context the Entry Hash is the sum of the corresponding fields in the Entry Detail Records on the file.\n          type: integer\n          example: 0\n        totalDebit:\n          description: Contains accumulated Entry debit totals within the batch.\n          type: integer\n          example: 100\n        totalCredit:\n          description: Contains accumulated Entry credit totals within the batch.\n          type: integer\n          example: 100\n        companyIdentification:\n          description: |\n            Alphanumeric code used to identify an Originator. The Company Identification Field must be included on all prenotification records and on each entry initiated pursuant to such prenotification. The Company ID may begin with the ANSI one-digit Identification Code Designator (ICD), followed by the identification number.\n            Possible ICDs are the IRS Employer Identification Number (EIN) \"1\", Data Universal Numbering Systems (DUNS) \"3\", and User Assigned Number \"9\".\n          type: string\n          example: \"121042882\"\n        messageAuthentication:\n          description: MAC is an eight character code derived from a special key used in conjunction with the DES algorithm. The purpose of the MAC is to validate the authenticity of ACH entries. The DES algorithm and key message standards must be in accordance with standards adopted by the American National Standards Institute. The remaining eleven characters of this field are blank.\n          type: string\n          example: \"3fe106cf\"\n        ODFIIdentification:\n          description: The routing number is used to identify the DFI originating entries within a given branch.\n          type: string\n          example: \"123456789\"\n        batchNumber:\n          type: integer\n          description: BatchNumber is assigned in ascending sequence to each batch by the ODFI or its Sending Point in a given file of entries. Since the batch number in the Batch Header Record and the Batch Control Record is the same, the ascending sequence number should be assigned by batch and not by record.\n          example: 0\n      required:\n        - serviceClassCode\n        - entryAddendaCount\n        - entryHash\n        - totalDebit\n        - totalCredit\n        - companyIdentification\n        - ODFIIdentification\n        - batchNumber\n    Batches:\n      type: array\n      items:\n        $ref: '#/components/schemas/Batch'\n    EntryDetail:\n      required:\n        - id\n        - transactionCode\n        - RDFIIdentification\n        - checkDigit\n        - DFIAccountNumber\n        - amount\n        - individualName\n      properties:\n        ID:\n          type: string\n          description: Entry Detail ID\n          example: \"842a2261\"\n        transactionCode:\n          type: integer\n          description: |\n            Based on transaction type:\n            22 - Credit (deposit) to checking account |\n            23 - Prenote for credit to checking account |\n            27 - Debit (withdrawal) to checking account |\n            28 - Prenote for debit to checking account |\n            32 - Credit to savings account |\n            33 - Prenote for credit to savings account |\n            37 - Debit to savings account |\n            38 - Prenote for debit to savings account\n          example: 22\n        RDFIIdentification:\n          type: string\n          description: RDFI's routing number without the last digit.\n          example: \"12345678\"\n        checkDigit:\n          type: string\n          description: Last digit in RDFI routing number.\n          example: \"0\"\n        DFIAccountNumber:\n          type: string\n          description: |\n            The receiver's bank account number you are crediting/debiting. It important to note that this is an alphanumeric field, so it's space padded, not zero padded\n          example: \"181141847\"\n        amount:\n          type: integer\n          description: Number of cents you are debiting/crediting this account\n          example: 1235\n        identificationNumber:\n          type: string\n          description: Internal identification (alphanumeric) that you use to uniquely identify this Entry Detail Record\n          example: \"8aa786\"\n        individualName:\n          type: string\n          description: The name of the receiver, usually the name on the bank account\n          example: Taylor Swift\n        discretionaryData:\n          type: string\n          description: |\n            DiscretionaryData allows ODFIs to include codes, of significance only to them, to enable specialized handling of the entry. There will be no standardized interpretation for the value of this field. It can either be a single two-character code, or two distinct one-character codes, according to the needs of the ODFI and/or Originator involved. This field must be returned intact for any returned entry.\n            WEB uses the Discretionary Data Field as the Payment Type Code.\n          example: \"AB\"\n        addendaRecordIndicator:\n          type: integer\n          description: |\n            AddendaRecordIndicator indicates the existence of an Addenda Record. A value of \"1\" indicates that one or more addenda records follow, and \"0\" means no such record is present.\n          example: 1\n        traceNumber:\n          type: string\n          description: |\n            TraceNumber assigned by the ODFI in ascending sequence, is included in each Entry Detail Record, Corporate Entry Detail Record, and Addenda Record.\n            Trace Numbers uniquely identify each entry within a batch in an ACH input file. In association with the Batch Number, transmission (File Creation) Date, and File ID Modifier, the Trace Number uniquely identifies an entry within a given file.\n            For Addenda Records, the Trace Number will be identical to the Trace Number in the associated Entry Detail Record, since the Trace Number is associated with an entry or item rather than a physical record.\n          example: \"124782618117\"\n        addenda02:\n          $ref: '#/components/schemas/Addenda02'\n        addenda05:\n          type: array\n          description: List of Addenda05 records\n          items:\n            $ref: '#/components/schemas/Addenda05'\n        addenda98:\n          $ref: '#/components/schemas/Addenda98'\n        addenda99:\n          $ref: '#/components/schemas/Addenda99'\n        category:\n          type: string\n          description: Category defines if the entry is a Forward, Return, or NOC\n          example: \"Forward\"\n    Addenda02:\n      properties:\n        id:\n          type: string\n          description: Client-defined string used as a reference to this record.\n          example: \"5ca8d25a\"\n        typeCode:\n          type: string\n          description: 02 - NACHA regulations\n          example: \"02\"\n        referenceInformationOne:\n          type: string\n          description: |\n            ReferenceInformationOne may be used for additional reference numbers, identification numbers,\n            or codes that the merchant needs to identify the particular transaction or customer.\n          example: ''\n        referenceInformationTwo:\n          type: string\n          description: |\n            ReferenceInformationTwo may be used for additional reference numbers, identification numbers,\n            or codes that the merchant needs to identify the particular transaction or customer.\n          example: ''\n        terminalIdentificationCode:\n          type: string\n          description: |\n            TerminalIdentificationCode identifies an Electronic terminal with a unique code that allows\n            a terminal owner and/or switching network to identify the terminal at which an Entry originated.\n          example: '200509'\n        transactionSerialNumber:\n          type: string\n          description: |\n            TransactionSerialNumber is assigned by the terminal at the time the transaction is originated.  The\n            number, with the Terminal Identification Code, serves as an audit trail for the transaction and is\n            usually assigned in ascending sequence.\n          example: '100049'\n        transactionDate:\n          type: string\n          format: \"MMDD\"\n          description: Timestamp identifies the date on which the transaction occurred. (Format MMDD - M=Month, D=Day)\n          example: '1224'\n        authorizationCodeOrExpireDate:\n          type: string\n          description: Indicates the code that a card authorization center has furnished to the merchant.\n          example: '123456'\n        terminalLocation:\n          type: string\n          description: Identifies the specific location of a terminal (i.e., street names of an intersection, address, etc.) in accordance with the requirements of Regulation E.\n          example: 2nd St\n        terminalCity:\n          type: string\n          description: Identifies the city in which the electronic terminal is located.\n          example: Anytown\n        terminalState:\n          type: string\n          description: Identifies the state in which the electronic terminal is located.\n          example: CA\n        traceNumber:\n          type: string\n          description: Entry Detail Trace Number\n          example: \"124782618117\"\n      required:\n        - typeCode\n        - terminalIdentificationCode\n        - transactionSerialNumber\n        - transactionDate\n        - terminalLocation\n        - terminalCity\n        - terminalState\n    Addenda05:\n      properties:\n        id:\n          type: string\n          description: Client-defined string used as a reference to this record.\n          example: 5ca8d25a\n        typeCode:\n          type: string\n          description: 05 - NACHA regulations\n          example: \"05\"\n        paymentRelatedInformation:\n          type: string\n          description: Text for describing the related payment\n          example: \"Car Payment\"\n        sequenceNumber:\n          type: integer\n          description: SequenceNumber is consecutively assigned to each Addenda05 Record following an Entry Detail Record. The first Addenda05 sequence number must always be a 1.\n          example: 1\n        entryDetailSequenceNumber:\n          type: integer\n          description: |\n            EntryDetailSequenceNumber contains the ascending sequence number section of the Entry\n            Detail or Corporate Entry Detail Record's trace number. This number is\n            the same as the last seven digits of the trace number of the related\n            Entry Detail Record or Corporate Entry Detail Record.\n          example: 2618117\n      required:\n        - typeCode\n        - paymentRelatedInformation\n        - sequenceNumber\n        - entryDetailSequenceNumber\n    Addenda10:\n      properties:\n        id:\n          type: string\n          description: Client-defined string used as a reference to this record.\n          example: 5ca8d25a\n        typeCode:\n          type: string\n          description: 10 - NACHA regulations\n          example: \"10\"\n        transactionTypeCode:\n          type: string\n          description: |\n            Describes the type of payment:\n            'ANN' = Annuity |\n            'BUS' = Business/Commercial |\n            'DEP' = Deposit |\n            'LOA' = Loan |\n            'MIS' = Miscellaneous |\n            'MOR' = Mortgage |\n            'PEN' = Pension |\n            'RLS' = Rent/Lease |\n            'REM' = Remittance2 |\n            'SAL' = Salary/Payroll |\n            'TAX' = Tax |\n            'TEL' = Telephone-Initiated Transaction |\n            'WEB' = Internet-Initiated Transaction |\n            'ARC' = Accounts Receivable Entry |\n            'BOC' = Back Office Conversion Entry |\n            'POP' = Point of Purchase Entry |\n            'RCK' = Re-presented Check Entry\n          example: TEL\n        foreignPaymentAmount:\n          type: integer\n          description: For inbound IAT payments this field should contain the USD amount or may be blank.\n          example: 1021441\n        foreignTraceNumber:\n          type: string\n          description: Trace number\n          example: \"19846249812\"\n        name:\n          type: string\n          description: Receiving Company Name/Individual Name\n          example: Jane Smith\n        entryDetailSequenceNumber:\n          type: integer\n          description: |\n            EntryDetailSequenceNumber contains the ascending sequence number section of the Entry\n            Detail or Corporate Entry Detail Record's trace number. This number is\n            the same as the last seven digits of the trace number of the related\n            Entry Detail Record or Corporate Entry Detail Record.\n          example: 2618117\n      required:\n        - typeCode\n        - transactionCode\n        - foreignPaymentAmount\n        - name\n        - entryDetailSequenceNumber\n    Addenda11:\n      properties:\n        id:\n          type: string\n          description: Client-defined string used as a reference to this record.\n          example: 5ca8d25a\n        typeCode:\n          type: string\n          description: 11 - NACHA regulations\n          example: \"11\"\n        originatorName:\n          type: string\n          description: Originator's name (your company name / name)\n          example: Acme Corp\n        originatorStreetAddress:\n          type: string\n          description: Originator's street address\n          example: 111 1st St\n        entryDetailSequenceNumber:\n          type: integer\n          description: |\n            EntryDetailSequenceNumber contains the ascending sequence number section of the Entry\n            Detail or Corporate Entry Detail Record's trace number. This number is\n            the same as the last seven digits of the trace number of the related\n            Entry Detail Record or Corporate Entry Detail Record.\n          example: 2618117\n      required:\n        - typeCode\n        - originatorName\n        - originatorStreetAddress\n        - entryDetailSequenceNumber\n    Addenda12:\n      properties:\n        id:\n          type: string\n          description: Client-defined string used as a reference to this record.\n          example: 5ca8d25a\n        typeCode:\n          type: string\n          description: 12 - NACHA regulations\n          example: \"12\"\n        originatorCityStateProvince:\n          type: string\n          description: |\n            Originator City \u0026 State / Province\n            Data elements City and State / Province  should be separated with an asterisk (*) as a delimiter and the field should end with a backslash (\\\\).\n          example: |\n            San Francisco*CA\\\n        originatorCountryPostalCode:\n          type: string\n          description: |\n            Originator Country \u0026 Postal Code\n            Data elements must be separated by an asterisk (*) and must end with a backslash (\\\\).\n          example: |\n            US*10036\\\n        entryDetailSequenceNumber:\n          type: integer\n          description: |\n            EntryDetailSequenceNumber contains the ascending sequence number section of the Entry\n            Detail or Corporate Entry Detail Record's trace number. This number is\n            the same as the last seven digits of the trace number of the related\n            Entry Detail Record or Corporate Entry Detail Record.\n          example: 2618117\n      required:\n        - typeCode\n        - originatorCityStateProvince\n        - originatorCountryPostalCode\n        - entryDetailSequenceNumber\n    Addenda13:\n      properties:\n        id:\n          type: string\n          description: Client-defined string used as a reference to this record.\n          example: 5ca8d25a\n        typeCode:\n          type: string\n          description: 13 - NACHA regulations\n          example: \"13\"\n        ODFIName:\n          type: string\n          description: |\n            Originating DFI Name\n            For Outbound IAT Entries, this field must contain the name of the U.S. ODFI.\n            For Inbound IATs: Name of the foreign bank providing funding for the payment transaction\n          example: My Bank\n        ODFIIDNumberQualifier:\n          type: string\n          description: |\n            Originating DFI Identification Number Qualifier.\n            For Inbound IATs: The 2-digit code that identifies the numbering scheme used in the\n            Foreign DFI Identification Number field:\n            '01' = National Clearing System |\n            '02' = BIC Code |\n            '03' = IBAN Code\n          example: '01'\n        ODFIBranchCountryCode:\n          type: string\n          description: |\n            Originating DFI Branch Country Code:\n            USb = United States\n            //(\"b\" indicates a blank space)\n            For Inbound IATs: This 3 position field contains a 2-character code as approved by the\n            International Organization for Standardization (ISO) used to identify the country in which\n            the branch of the bank that originated the entry is located. Values for other countries can\n            be found on the International Organization for Standardization website: www.iso.org.\n          example: \"US \"\n        entryDetailSequenceNumber:\n          type: integer\n          description: |\n            EntryDetailSequenceNumber contains the ascending sequence number section of the Entry\n            Detail or Corporate Entry Detail Record's trace number. This number is\n            the same as the last seven digits of the trace number of the related\n            Entry Detail Record or Corporate Entry Detail Record.\n          example: 2618117\n      required:\n        - typeCode\n        - ODFIName\n        - ODFIIDNumberQualifier\n        - ODFIBranchCountryCode\n        - entryDetailSequenceNumber\n    Addenda14:\n      properties:\n        id:\n          type: string\n          description: Client-defined string used as a reference to this record.\n          example: 5ca8d25a\n        typeCode:\n          type: string\n          description: 14 - NACHA regulations\n          example: \"14\"\n        RDFIName:\n          type: string\n          description: Name of the Receiver bank\n          example: 'Citadel Bank'\n        RDFIIDNumberQualifier:\n          type: string\n          description: |\n            Receiving DFI Identification Number Qualifier.\n            The 2-digit code that identifies the numbering scheme used in the\n            Receiving DFI Identification Number field:\n            '01' = National Clearing System |\n            '02' = BIC Code |\n            '03' = IBAN Code\n          example: '01'\n        RDFIIdentification:\n          type: string\n          description: This field contains the bank identification number of the DFI at which the Receiver maintains his account.\n          example: '98765432'\n        RDFIBranchCountryCode:\n          type: string\n          description: |\n            Receiving DFI Branch Country Code\n            USb\" = United States\n            (\"b\" indicates a blank space)\n            This 3 position field contains a 2-character code as approved by the International\n            Organization for Standardization (ISO) used to identify the country in which the\n            branch of the bank that receives the entry is located. Values for other countries can\n            be found on the International Organization for Standardization website: www.iso.org\n          example: 'US '\n        entryDetailSequenceNumber:\n          type: integer\n          description: |\n            EntryDetailSequenceNumber contains the ascending sequence number section of the Entry\n            Detail or Corporate Entry Detail Record's trace number. This number is\n            the same as the last seven digits of the trace number of the related\n            Entry Detail Record or Corporate Entry Detail Record.\n          example: 2618117\n      required:\n        - typeCode\n        - RDFIName\n        - RDFIIDNumberQualifier\n        - RDFIIdentification\n        - RDFIBranchCountryCode\n        - entryDetailSequenceNumber\n    Addenda15:\n      properties:\n        id:\n          type: string\n          description: Client-defined string used as a reference to this record.\n          example: 5ca8d25a\n        typeCode:\n          type: string\n          description: 15 - NACHA regulations\n          example: \"15\"\n        receiverIDNumber:\n          type: string\n          description: |\n            Receiver Identification Number contains the accounting number by which the Originator is known to the Receiver for descriptive purposes. NACHA Rules recommend but do not require the RDFI to print the contents of this field on the receiver's statement.\n          example: \"98765432\"\n        receiverStreetAddress:\n          type: string\n          description: Receiver's physical address\n          example: 123 1st St\n        entryDetailSequenceNumber:\n          type: integer\n          description: |\n            EntryDetailSequenceNumber contains the ascending sequence number section of the Entry\n            Detail or Corporate Entry Detail Record's trace number. This number is\n            the same as the last seven digits of the trace number of the related\n            Entry Detail Record or Corporate Entry Detail Record.\n          example: 2618117\n      required:\n        - typeCode\n        - receiverStreetAddress\n        - entryDetailSequenceNumber\n    Addenda16:\n      properties:\n        id:\n          type: string\n          description: Client-defined string used as a reference to this record.\n          example: 5ca8d25a\n        typeCode:\n          type: string\n          description: 16 - NACHA regulations\n          example: \"16\"\n        receiverCityStateProvince:\n          type: string\n          description: |\n            Receiver City \u0026 State / Province\n            Data elements City and State / Province  should be separated with an asterisk (*) as a delimiter\n            and the field should end with a backslash (\\\\).\n          example: |\n            San Francisco*CA\\\n        receiverCountryPostalCode:\n          type: string\n          description: |\n            Receiver Country \u0026 Postal Code\n            Data elements must be separated by an asterisk (*) and must end with a backslash (\\\\).\n          example: |\n            US*10036\\\n        entryDetailSequenceNumber:\n          type: integer\n          description: |\n            EntryDetailSequenceNumber contains the ascending sequence number section of the Entry\n            Detail or Corporate Entry Detail Record's trace number. This number is\n            the same as the last seven digits of the trace number of the related\n            Entry Detail Record or Corporate Entry Detail Record.\n          example: 2618117\n      required:\n        - typeCode\n        - receiverCityStateProvince\n        - receiverCountryPostalCode\n        - entryDetailSequenceNumber\n    Addenda17:\n      properties:\n        id:\n          type: string\n          description: Client-defined string used as a reference to this record.\n          example: 5ca8d25a\n        typeCode:\n          type: string\n          description: 17 - NACHA regulations\n          example: \"17\"\n        paymentRelatedInformation:\n          type: string\n          description: Additional information related to the payment\n          example: Test data\n        sequenceNumber:\n          type: integer\n          description: |\n            SequenceNumber is consecutively assigned to each Addenda17 Record following an Entry Detail Record. The first Addenda17 sequence number must always be a 1.\n          example: 1\n        entryDetailSequenceNumber:\n          type: integer\n          description: |\n            EntryDetailSequenceNumber contains the ascending sequence number section of the Entry\n            Detail or Corporate Entry Detail Record's trace number. This number is\n            the same as the last seven digits of the trace number of the related\n            Entry Detail Record or Corporate Entry Detail Record.\n          example: 2618117\n      required:\n        - typeCode\n        - paymentRelatedInformation\n        - sequenceNumber\n        - entryDetailSequenceNumber\n    Addenda18:\n      properties:\n        id:\n          type: string\n          description: Client-defined string used as a reference to this record.\n          example: 5ca8d25a\n        typeCode:\n          type: string\n          description: 18 - NACHA regulations\n          example: \"18\"\n        foreignCorrespondentBankName:\n          type: string\n          description: Name of the Foreign Correspondent Bank\n          example: Other Bank\n        foreignCorrespondentBankIDNumberQualifier:\n          type: string\n          description: |\n            Foreign Correspondent Bank Identification Number Qualifier contains a 2-digit code that identifies the numbering scheme used in the Foreign Correspondent Bank Identification Number field. Code values for this field are:\n              \"01\" = National Clearing System |\n              \"02\" = BIC Code |\n              \"03\" = IBAN Code\n          example: '01'\n        foreignCorrespondentBankIDNumber:\n          type: string\n          description: Foreign Correspondent Bank Identification Number contains the bank ID number of the Foreign Correspondent Bank\n          example: '98765432'\n        foreignCorrespondentBankBranchCountryCode:\n          type: string\n          description: |\n            Foreign Correspondent Bank Branch Country Code contains the two-character code, as approved by the International Organization for Standardization (ISO), to identify the country in which the branch of the Foreign Correspondent Bank is located. Values can be found on the International Organization for Standardization website: www.iso.org\n          example: US\n        sequenceNumber:\n          type: integer\n          description: |\n            SequenceNumber is consecutively assigned to each Addenda17 Record following an Entry Detail Record. The first Addenda17 sequence number must always be a 1.\n          example: 1\n        entryDetailSequenceNumber:\n          type: integer\n          description: |\n            EntryDetailSequenceNumber contains the ascending sequence number section of the Entry\n            Detail or Corporate Entry Detail Record's trace number. This number is\n            the same as the last seven digits of the trace number of the related\n            Entry Detail Record or Corporate Entry Detail Record.\n          example: 2618117\n      required:\n        - typeCode\n        - foreignCorrespondentBankName\n        - foreignCorrespondentBankIDNumber\n        - foreignCorrespondentBankBranchCountryCode\n        - sequenceNumber\n        - entryDetailSequenceNumber\n    Addenda98:\n      properties:\n        id:\n          type: string\n          description: Client-defined string used as a reference to this record.\n          example: 5ca8d25a\n        typeCode:\n          type: string\n          description: 98 - NACHA regulations\n          example: \"98\"\n        changeCode:\n          type: string\n          description: ChangeCode field contains a standard code used by an ACH Operator or RDFI to describe the reason for a change Entry.\n          example: C01\n        originalTrace:\n          type: string\n          description: |\n            OriginalTrace This field contains the Trace Number as originally included on the forward Entry or Prenotification.\n            The RDFI must include the Original Entry Trace Number in the Addenda Record of an Entry being returned to an ODFI,\n            in the Addenda Record of an 98, within an Acknowledgment Entry, or with an RDFI request for a copy of an authorization.\n          example: \"214874812\"\n        originalDFI:\n          type: string\n          description: The Receiving DFI Identification (addenda.RDFIIdentification) as originally included on the forward Entry or Prenotification that the RDFI is returning or correcting.\n          example: \"98765432\"\n        correctedData:\n          type: string\n          description: Correct field value of what changeCode references\n          example: \"198424892\"\n        traceNumber:\n          type: string\n          description: Entry Detail Trace Number\n          example: \"124782618117\"\n      required:\n      - typeCode\n      - changeCode\n      - originalTrace\n      - originalDFI\n      - correctedData\n    Addenda99:\n      properties:\n        id:\n          type: string\n          description: Client-defined string used as a reference to this record.\n          example: 5ca8d25a\n        typeCode:\n          type: string\n          description: 99 - NACHA regulations\n          example: \"99\"\n        returnCode:\n          type: string\n          description: Standard code used by an ACH Operator or RDFI to describe the reason for returning an Entry.\n          example: \"R01\"\n        originalTrace:\n          type: string\n          description: |\n            OriginalTrace This field contains the Trace Number as originally included on the forward Entry or Prenotification.\n            The RDFI must include the Original Entry Trace Number in the Addenda Record of an Entry being returned to an ODFI,\n            in the Addenda Record of an 98, within an Acknowledgment Entry, or with an RDFI request for a copy of an authorization.\n          example: \"214874812\"\n        dateOfDeath:\n          type: string\n          format: \"YYMMDD\"\n          description: The field date of death is to be supplied on Entries being returned for reason of death (return reason codes R14 and R15). (Format YYMMDD - Y=Year, M=Month, D=Day)\n          example: \"200102\"\n        originalDFI:\n          type: string\n          description: Contains the Receiving DFI Identification (addenda.RDFIIdentification) as originally included on the forward Entry or Prenotification that the RDFI is returning or correcting.\n          example: \"98765432\"\n        addendaInformation:\n          type: string\n          description: Information related to the return\n          example: text\n        traceNumber:\n          type: string\n          description: Matches the Entry Detail Trace Number of the entry being returned.\n          example: \"214874812\"\n      required:\n        - typeCode\n        - returnCode\n        - originalTrace\n        - dateOfDeath\n        - originalDFI\n    IATBatch:\n      properties:\n        ID:\n          description: Client-defined string used as a reference to this record.\n          type: string\n          example: a747e53f\n        IATBatchHeader:\n          $ref: '#/components/schemas/IATBatchHeader'\n        IATEntryDetails:\n          type: array\n          items:\n            $ref: '#/components/schemas/IATEntryDetail'\n          minItems: 1\n        batchControl:\n          $ref: '#/components/schemas/BatchControl'\n      required:\n         - IATBatchHeader\n         - IATEntryDetails\n         - batchControl\n    IATBatchHeader:\n      properties:\n        ID:\n          description: ID is a client-defined string used as a reference to this record.\n          type: string\n          example: a747e53f\n        serviceClassCode:\n          description: Service Class Code - Mixed Debits and Credits '200', ACH Credits Only '220', or ACH Debits Only '225'\n          type: integer\n          example: 220\n        IATIndicator:\n          description: Leave Blank. Only used for corrected IAT entries\n          type: string\n          example: \"\"\n        foreignExchangeIndicator:\n          description: |\n            Code indicating currency conversion:\n            'FV' (Fixed-to-Variable) – Entry is originated in a fixed-value amount and is to be received in a variable amount resulting from the execution of the foreign exchange conversion. |\n            'VF' (Variable-to-Fixed) – Entry is originated in a variable-value amount based on a specific foreign exchange rate for conversion to a fixed-value amount in which the entry is to be received. |\n            'FF' (Fixed-to-Fixed) – Entry is originated in a fixed-value amount and is to be received in the same fixed-value amount in the same currency denomination. There is no foreign exchange conversion for entries transmitted using this code. For entries originated in a fixed value amount, the foreign Exchange Reference Field will be space filled.\n          type: string\n          example: FF\n        foreignExchangeReferenceIndicator:\n          description: |\n            Code used to indicate the content of the Foreign Exchange Reference Field and is filled by the gateway operator. Valid entries are\n            1 - Foreign Exchange Rate |\n            2 - Foreign Exchange Reference Number |\n            3 - Space Filled\n          type: integer\n          example: 2\n        foreignExchangeReference:\n          description: Contains either the foreign exchange rate used to execute the foreign exchange conversion of a cross-border entry or another reference to the foreign exchange transaction.\n          type: string\n        ISODestinationCountryCode:\n          description: Two-character code, as approved by the International Organization for Standardization (ISO), to identify the country in which the entry is to be received. For United States use US.\n          type: string\n          example: US\n        originatorIdentification:\n          description: |\n            For U.S. entities: the number assigned will be your tax ID (often Social Security Number)\n            For non-U.S. entities: the number assigned will be your DDA number, or the last 9 characters of your account number if it exceeds 9 characters\n          type: string\n          example: \"123456789\"\n        standardEntryClassCode:\n          description: |\n            StandardEntryClassCode for consumer and non consumer international payments is IAT.\n            Identifies the payment type (product) found within an ACH batch using a 3-character code.\n            The SEC Code pertains to all items within batch.\n            Determines format of the detail records.\n            Determines addenda records (required or optional PLUS one or up to 9,999 records).\n            Determines rules to follow (return time frames).\n            Some SEC codes require specific data in predetermined fields within the ACH record.\n          type: string\n          example: IAT\n        companyEntryDescription:\n          description: |\n            A description of the entries contained in the batch\n            The Originator establishes the value of this field to provide a description of the purpose of the entry to be displayed back to the receiver. For example, \"GAS BILL,\" \"REG. SALARY,\" \"INS. PREM,\" \"SOC. SEC.,\" \"DTC,\" \"TRADE PAY,\" \"PURCHASE,\" etc.\n            This field must contain the word \"REVERSAL\" (left justified) when the batch contains reversing entries.\n            This field must contain the word \"RECLAIM\" (left justified) when the batch contains reclamation entries.\n            This field must contain the word \"NONSETTLED\" (left justified) when the batch contains entries which could not settle.\n          type: string\n          example: GAS BILL\n        ISOOriginatingCurrencyCode:\n          description: |\n            Three-character code, as approved by the International Organization for Standardization (ISO), to identify the currency denomination in which the entry was first originated. If the source of funds is within the territorial jurisdiction of the U.S., enter 'USD', otherwise refer to International Organization for Standardization website for value: www.iso.org\n          type: string\n          example: USD\n        ISODestinationCurrencyCode:\n          description: |\n            ISODestinationCurrencyCode is the three-character code, as approved by the International Organization for Standardization (ISO), to identify the currency denomination in which the entry will ultimately be settled. If the final destination of funds is within the territorial jurisdiction of the U.S., enter \"USD\", otherwise refer to International Organization for Standardization website for value: www.iso.org\n          type: string\n          example: USD\n        effectiveEntryDate:\n          description: |\n            EffectiveEntryDate the date on which the entries are to settle. Format YYMMDD (Y=Year, M=Month, D=Day)\n          type: string\n          format: \"YYMMDD\"\n          example: '181231'\n        originatorStatusCode:\n          description: |\n            ODFI initiating the Entry. |\n            0 - ADV File prepared by an ACH Operator. |\n            1 - This code identifies the Originator as a depository financial institution. |\n            2 - This code identifies the Originator as a Federal Government entity or agency.\n          type: integer\n          example: 1\n        ODFIIdentification:\n          description: |\n            First 8 digits of the originating DFI transit routing number. For Inbound IAT Entries, this field contains the routing number of the U.S. Gateway Operator.  For Outbound IAT Entries, this field contains the standard routing number, as assigned by Accuity, that identifies the U.S. ODFI initiating the Entry. (Format TTTTAAAA - T=Federal Reserve Routing Symbol, A=ABA Institution Identifier)\n          type: string\n          format: 'TTTTAAAA'\n          example: '12345678'\n        batchNumber:\n          description: |\n            BatchNumber is assigned in ascending sequence to each batch by the ODFI or its Sending Point in a given file of entries. Since the batch number in the Batch Header Record and the Batch Control Record is the same, the ascending sequence number should be assigned by batch and not by record.\n          type: integer\n          example: 0\n      required:\n        - serviceClassCode\n        - standardEntryClassCode\n        - foreignExchangeIndicator\n        - foreignExchangeReferenceIndicator\n        - foreignExchangeReference\n        - ISODestinationCountryCode\n        - originatorIdentification\n        - ISOOriginatingCurrencyCode\n        - ISODestinationCurrencyCode\n        - ODFIIdentification\n        - batchNumber\n    IATEntryDetail:\n      properties:\n        ID:\n          type: string\n          description: Entry Detail ID\n          example: 842a2261\n        transactionCode:\n          type: integer\n          description: |\n            Based on transaction type:\n            22 - Credit (deposit) to checking account |\n            23 - Prenote for credit to checking account |\n            27 - Debit (withdrawal) to checking account |\n            28 - Prenote for debit to checking account |\n            32 - Credit to savings account |\n            33 - Prenote for credit to savings account |\n            37 - Debit to savings account |\n            38 - Prenote for debit to savings account\n          example: 22\n        RDFIIdentification:\n          type: string\n          description: RDFI's routing number without the last digit.\n          example: \"12345678\"\n        checkDigit:\n          type: string\n          description: Last digit in RDFI routing number.\n          example: \"0\"\n        addendaRecords:\n          type: integer\n          description: Number of Addenda Records\n          example: 1\n        amount:\n          type: integer\n          description: Number of cents you are debiting/crediting this account\n          example: 1235\n        DFIAccountNumber:\n          type: string\n          description: |\n            The receiver's bank account number you are crediting/debiting. It important to note that this is an alphanumeric field, so it's space padded, not zero padded\n          example: \"181141847\"\n        OFACScreeningIndicator:\n          type: string\n          description: Signifies if the record has been screened against OFAC records\n          example: 'Y'\n        secondaryOFACScreeningIndicator:\n          type: string\n          description: Signifies if the record has been screened against OFAC records by a secondary entry\n          example: 'Y'\n        addendaRecordIndicator:\n          type: integer\n          description: |\n            AddendaRecordIndicator indicates the existence of an Addenda Record. A value of \"1\" indicates that one or more addenda records follow, and \"0\" means no such record is present.\n          example: 1\n        traceNumber:\n          type: string\n          description: Matches the Entry Detail Trace Number of the entry being returned.\n          example: \"214874812\"\n        addenda10:\n          $ref: '#/components/schemas/Addenda10'\n        addenda11:\n          $ref: '#/components/schemas/Addenda11'\n        addenda12:\n          $ref: '#/components/schemas/Addenda12'\n        addenda13:\n          $ref: '#/components/schemas/Addenda13'\n        addenda14:\n          $ref: '#/components/schemas/Addenda14'\n        addenda15:\n          $ref: '#/components/schemas/Addenda15'\n        addenda16:\n          $ref: '#/components/schemas/Addenda16'\n        addenda17:\n          $ref: '#/components/schemas/Addenda17'\n        addenda18:\n          $ref: '#/components/schemas/Addenda18'\n        addenda98:\n          $ref: '#/components/schemas/Addenda98'\n        addenda99:\n          $ref: '#/components/schemas/Addenda99'\n        category:\n          type: string\n          description: Category defines if the entry is a Forward, Return, or NOC\n          example: Forward\n      required:\n       - transactionCode\n       - RDFIIdentification\n       - checkDigit\n       - addendaRecords\n       - amount\n       - DFIAccountNumber\n       - OFACScreeningIndicator\n       - secondaryOFACScreeningIndicator\n       - addendaRecordIndicator\n       - addenda10\n       - addenda11\n       - addenda12\n       - addenda13\n       - addenda14\n       - addenda15\n       - addenda16\n    ADVEntryDetail:\n      required:\n        - transactionCode\n        - RDFIIdentification\n        - checkDigit\n        - DFIAccountNumber\n        - adviceRoutingNumber\n        - amount\n        - individualName\n        - achOperatorRoutingNumber\n        - sequenceNumber\n      properties:\n        ID:\n          type: string\n          description: Entry Detail ID\n          example: 842a2261\n        transactionCode:\n          type: integer\n          description: |\n            TransactionCode representing Accounting Entries:\n            81 - Credit for ACH debits originated |\n            82 - Debit for ACH credits originated |\n            83 - Credit for ACH credits received |\n            84 - Debit for ACH debits received |\n            85 - Credit for ACH credits in rejected batches |\n            86 - Debit for ACH debits in rejected batches |\n            87 - Summary credit for respondent ACH activity |\n            88 - Summary debit for respondent ACH activity\n          example: 81\n        RDFIIdentification:\n          type: string\n          description: RDFI's routing number without the last digit.\n          example: \"12345678\"\n        checkDigit:\n          type: string\n          description: Last digit in RDFI routing number.\n          example: \"0\"\n        DFIAccountNumber:\n          type: string\n          description: |\n            The receiver's bank account number you are crediting/debiting. It important to note that this is an alphanumeric field, so it's space padded, not zero padded\n          example: \"181141847\"\n        amount:\n          type: integer\n          description: Number of cents you are debiting/crediting this account\n          example: 1235\n        adviceRoutingNumber:\n          type: string\n          description: Suggested routing number to use\n          example: \"987654320\"\n        fileIdentification:\n          type: string\n          description: Unique identifier for the File\n          example: 22c24006\n        achOperatorData:\n          type: string\n          description: Information related to the ACH opreator\n          example: text\n        individualName:\n          type: string\n          description: The name of the receiver, usually the name on the bank account\n          example: Taylor Swift\n        discretionaryData:\n          type: string\n          description: |\n            DiscretionaryData allows ODFIs to include codes, of significance only to them, to enable specialized handling of the entry. There will be no standardized interpretation for the value of this field. It can either be a single two-character code, or two distinct one-character codes, according to the needs of the ODFI and/or Originator involved. This field must be returned intact for any returned entry.\n            WEB uses the Discretionary Data Field as the Payment Type Code.\n          example: AB\n        addendaRecordIndicator:\n          type: integer\n          description: |\n            AddendaRecordIndicator indicates the existence of an Addenda Record. A value of \"1\" indicates that one or more addenda records follow, and \"0\" means no such record is present.\n          example: 1\n        achOperatorRoutingNumber:\n          type: string\n          description: Routing number for ACH Operator\n          example: \"987654320\"\n        julianDay:\n          type: integer\n          description: Julian Day of the year\n          example: 12\n        sequenceNumber:\n          type: integer\n          description: SequenceNumber is consecutively assigned to each Addenda05 Record following an Entry Detail Record. The first Addenda05 sequence number must always be a 1.\n          example: 1\n        addenda99:\n          description: Addenda99 record for the Entry Detail\n          items:\n            $ref: '#/components/schemas/Addenda99'\n        category:\n          type: string\n          description: Category defines if the entry is a Forward, Return, or NOC\n          example: Forward\n    ADVBatchControl:\n      properties:\n        ID:\n          description: Batch ID\n          type: string\n          example: 62d8f0cd\n        serviceClassCode:\n          description: Same as ServiceClassCode in BatchHeader record\n          type: integer\n          example: 220\n        entryAddendaCount:\n          description: EntryAddendaCount is a tally of each Entry Detail Record and each Addenda Record processed, within either the batch or file as appropriate.\n          type: integer\n          example: 1\n        entryHash:\n          description: |\n            Validate the Receiving DFI Identification in each Entry Detail Record is hashed to provide a check against inadvertent alteration of data contents due to hardware failure or program error.\n            In this context the Entry Hash is the sum of the corresponding fields in the Entry Detail Records on the file.\n          type: integer\n          example: 0\n        totalDebit:\n          description: Contains accumulated Entry debit totals within the batch.\n          type: integer\n          example: 100\n        totalCredit:\n          description: Contains accumulated Entry credit totals within the batch.\n          type: integer\n          example: 100\n        achOperatorData:\n          description: Alphanumeric code used to identify an ACH Operator\n          type: string\n          example: user\n        ODFIIdentification:\n          description: The routing number is used to identify the DFI originating entries within a given branch.\n          type: string\n          example: \"98765432\"\n        batchNumber:\n          type: integer\n          description: BatchNumber is assigned in ascending sequence to each batch by the ODFI or its Sending Point in a given file of entries. Since the batch number in the Batch Header Record and the Batch Control Record is the same, the ascending sequence number should be assigned by batch and not by record.\n          example: 0\n      required:\n       - serviceClassCode\n       - entryAddendaCount\n       - entryHash\n       - totalDebit\n       - totalCredit\n       - achOperatorData\n       - ODFIIdentification\n       - batchNumber\n    ADVFileControl:\n      properties:\n        ID:\n          type: string\n          description: ADV File Control Record\n          example: 842a2261\n        batchCount:\n          description: Count of Batches in the File\n          type: integer\n          minimum: 1\n          example: 1\n        blockCount:\n          description: |\n            Total number of records in the file (include all headers and trailer) divided by 10 (This number must be evenly divisible by 10. If not, additional records consisting of all 9's are added to the file after the initial '9' record to fill out the block 10.)\n          type: integer\n          example: 1\n        entryAddendaCount:\n          description: Total detail and addenda records in the file\n          type: integer\n          minimum: 1\n          example: 1\n        entryHash:\n          description: Calculated in the same manner as the batch total but includes total from entire file\n          type: integer\n          example: 0\n        totalDebit:\n          description: Accumulated Batch debit totals within the file.\n          type: integer\n          example: 100\n        totalCredit:\n          description: Accumulated Batch credit totals within the file.\n          type: integer\n          example: 20\n      required:\n        - ID\n        - batchCount\n        - blockCount\n        - entryAddendaCount\n        - entryHash\n        - totalDebit\n        - totalCredit\n    Offset:\n      properties:\n        routingNumber:\n          type: string\n          description: ABA routing number\n          example: \"987654320\"\n        accountNumber:\n          type: string\n          description: Account number used to offset records\n          example: \"216112\"\n        accountType:\n          type: string\n          description: Account type used in offset record\n          enum:\n            - checking\n            - savings\n        description:\n          type: string\n          description: Memo for Offset EntryDetail record\n          example: OFFSET\n      required:\n        - routingNumber\n        - accountNumber\n        - accountType\n        - description\n    SegmentedFiles:\n      properties:\n        creditFileID:\n          type: string\n          description: File ID\n          example: \"058960d8\"\n        debitFileID:\n          type: string\n          description: File ID\n          example: \"3cac5447\"\n    ValidateOpts:\n      properties:\n        requireABAOrigin:\n          type: boolean\n          default: false\n          description: Require that the FileHeader ImmediateOrigin routing number which checksum matches.\n        bypassOriginValidation:\n          type: boolean\n          default: false\n          description: Skip ImmediateOrigin validation steps.\n        bypassDestinationValidation:\n          type: boolean\n          default: false\n          description: Skip ImmediateDestination validation steps.\n"
		}
	},
	"Error": "parse: parse spec: paths: /files/create: post: operation \"createFile\": responses: 400: content: \"application/json\": schema: parse schema: reference \"https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error\": resolve reference \"https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error\": invalid schema reference \"https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error\""
}