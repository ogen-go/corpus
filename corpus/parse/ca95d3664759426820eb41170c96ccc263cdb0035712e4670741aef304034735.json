{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/openemr/openemr"
		},
		"file": {
			"name": "openemr-api.yaml",
			"size": 0,
			"path": "swagger/openemr-api.yaml",
			"byteSize": 216478,
			"content": "openapi: 3.0.0\ninfo:\n  title: 'OpenEMR API'\n  version: 6.1.0\nservers:\n  -\n    url: /apis/default/\npaths:\n  /api/facility:\n    get:\n      tags:\n        - standard\n      description: 'Returns a single facility.'\n      parameters:\n        -\n          name: name\n          in: query\n          description: 'The name for the facility.'\n          required: false\n          schema:\n            type: string\n        -\n          name: facility_npi\n          in: query\n          description: 'The facility_npi for the facility.'\n          required: false\n          schema:\n            type: string\n        -\n          name: phone\n          in: query\n          description: 'The phone for the facility.'\n          required: false\n          schema:\n            type: string\n        -\n          name: fax\n          in: query\n          description: 'The fax for the facility.'\n          required: false\n          schema:\n            type: string\n        -\n          name: street\n          in: query\n          description: 'The street for the facility.'\n          required: false\n          schema:\n            type: string\n        -\n          name: city\n          in: query\n          description: 'The city for the facility.'\n          required: false\n          schema:\n            type: string\n        -\n          name: state\n          in: query\n          description: 'The state for the facility.'\n          required: false\n          schema:\n            type: string\n        -\n          name: postal_code\n          in: query\n          description: 'The postal_code for the facility.'\n          required: false\n          schema:\n            type: string\n        -\n          name: country_code\n          in: query\n          description: 'The country_code for the facility.'\n          required: false\n          schema:\n            type: string\n        -\n          name: federal_ein\n          in: query\n          description: 'The federal_ein for the facility.'\n          required: false\n          schema:\n            type: string\n        -\n          name: website\n          in: query\n          description: 'The website for the facility.'\n          required: false\n          schema:\n            type: string\n        -\n          name: email\n          in: query\n          description: 'The email for the facility.'\n          required: false\n          schema:\n            type: string\n        -\n          name: domain_identifier\n          in: query\n          description: 'The domain_identifier for the facility.'\n          required: false\n          schema:\n            type: string\n        -\n          name: facility_taxonomy\n          in: query\n          description: 'The facility_taxonomy for the facility.'\n          required: false\n          schema:\n            type: string\n        -\n          name: facility_code\n          in: query\n          description: 'The facility_code for the facility.'\n          required: false\n          schema:\n            type: string\n        -\n          name: billing_location\n          in: query\n          description: 'The billing_location setting for the facility.'\n          required: false\n          schema:\n            type: string\n        -\n          name: accepts_assignment\n          in: query\n          description: 'The accepts_assignment setting for the facility.'\n          required: false\n          schema:\n            type: string\n        -\n          name: oid\n          in: query\n          description: 'The oid for the facility.'\n          required: false\n          schema:\n            type: string\n        -\n          name: service_location\n          in: query\n          description: 'The service_location setting for the facility.'\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n    post:\n      tags:\n        - standard\n      description: 'Creates a facility in the system'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              required:\n                - name\n                - facility_npi\n              properties:\n                name:\n                  description: 'The name for the facility.'\n                  type: string\n                facility_npi:\n                  description: 'The facility_npi for the facility.'\n                  type: string\n                phone:\n                  description: 'The phone for the facility.'\n                  type: string\n                fax:\n                  description: 'The fax for the facility.'\n                  type: string\n                street:\n                  description: 'The street for the facility.'\n                  type: string\n                city:\n                  description: 'The city for the facility.'\n                  type: string\n                state:\n                  description: 'The state for the facility.'\n                  type: string\n                postal_code:\n                  description: 'The postal_code for the facility.'\n                  type: string\n                country_code:\n                  description: 'The country_code for the facility.'\n                  type: string\n                federal_ein:\n                  description: 'The federal_ein for the facility.'\n                  type: string\n                website:\n                  description: 'The website for the facility.'\n                  type: string\n                email:\n                  description: 'The email for the facility.'\n                  type: string\n                domain_identifier:\n                  description: 'The domain_identifier for the facility.'\n                  type: string\n                facility_taxonomy:\n                  description: 'The facility_taxonomy for the facility.'\n                  type: string\n                facility_code:\n                  description: 'The facility_code for the facility.'\n                  type: string\n                billing_location:\n                  description: 'The billing_location setting for the facility.'\n                  type: string\n                accepts_assignment:\n                  description: 'The accepts_assignment setting for the facility.'\n                  type: string\n                oid:\n                  description: 'The oid for the facility.'\n                  type: string\n                service_location:\n                  description: 'The service_location setting for the facility.'\n                  type: string\n              type: object\n              example:\n                name: Aquaria\n                facility_npi: '123456789123'\n                phone: 808-606-3030\n                fax: 808-606-3031\n                street: '1337 Bit Shifter Ln'\n                city: 'San Lorenzo'\n                state: ZZ\n                postal_code: '54321'\n                country_code: US\n                federal_ein: '4343434'\n                website: 'https://example.com'\n                email: foo@bar.com\n                domain_identifier: ''\n                facility_taxonomy: ''\n                facility_code: ''\n                billing_location: '1'\n                accepts_assignment: '1'\n                oid: ''\n                service_location: '1'\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/api/facility/{fuuid}':\n    get:\n      tags:\n        - standard\n      description: 'Returns a single facility.'\n      parameters:\n        -\n          name: fuuid\n          in: path\n          description: 'The uuid for the facility.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n    put:\n      tags:\n        - standard\n      description: 'Updates a facility in the system'\n      parameters:\n        -\n          name: fuuid\n          in: path\n          description: 'The uuid for the facility.'\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              properties:\n                name:\n                  description: 'The name for the facility.'\n                  type: string\n                facility_npi:\n                  description: 'The facility_npi for the facility.'\n                  type: string\n                phone:\n                  description: 'The phone for the facility.'\n                  type: string\n                fax:\n                  description: 'The fax for the facility.'\n                  type: string\n                street:\n                  description: 'The street for the facility.'\n                  type: string\n                city:\n                  description: 'The city for the facility.'\n                  type: string\n                state:\n                  description: 'The state for the facility.'\n                  type: string\n                postal_code:\n                  description: 'The postal_code for the facility.'\n                  type: string\n                country_code:\n                  description: 'The country_code for the facility.'\n                  type: string\n                federal_ein:\n                  description: 'The federal_ein for the facility.'\n                  type: string\n                website:\n                  description: 'The website for the facility.'\n                  type: string\n                email:\n                  description: 'The email for the facility.'\n                  type: string\n                domain_identifier:\n                  description: 'The domain_identifier for the facility.'\n                  type: string\n                facility_taxonomy:\n                  description: 'The facility_taxonomy for the facility.'\n                  type: string\n                facility_code:\n                  description: 'The facility_code for the facility.'\n                  type: string\n                billing_location:\n                  description: 'The billing_location setting for the facility.'\n                  type: string\n                accepts_assignment:\n                  description: 'The accepts_assignment setting for the facility.'\n                  type: string\n                oid:\n                  description: 'The oid for the facility.'\n                  type: string\n                service_location:\n                  description: 'The service_location setting for the facility.'\n                  type: string\n              type: object\n              example:\n                name: Aquaria\n                facility_npi: '123456789123'\n                phone: 808-606-3030\n                fax: 808-606-3031\n                street: '1337 Bit Shifter Ln'\n                city: 'San Lorenzo'\n                state: ZZ\n                postal_code: '54321'\n                country_code: US\n                federal_ein: '4343434'\n                website: 'https://example.com'\n                email: foo@bar.com\n                domain_identifier: ''\n                facility_taxonomy: ''\n                facility_code: ''\n                billing_location: '1'\n                accepts_assignment: '1'\n                oid: ''\n                service_location: '1'\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  /api/patient:\n    get:\n      tags:\n        - standard\n      description: 'Retrieves a list of patients'\n      parameters:\n        -\n          name: fname\n          in: query\n          description: 'The first name for the patient.'\n          required: false\n          schema:\n            type: string\n        -\n          name: lname\n          in: query\n          description: 'The last name for the patient.'\n          required: false\n          schema:\n            type: string\n        -\n          name: ss\n          in: query\n          description: 'The social security number for the patient.'\n          required: false\n          schema:\n            type: string\n        -\n          name: street\n          in: query\n          description: 'The street for the patient.'\n          required: false\n          schema:\n            type: string\n        -\n          name: postal_code\n          in: query\n          description: 'The postal code for the patient.'\n          required: false\n          schema:\n            type: string\n        -\n          name: city\n          in: query\n          description: 'The city for the patient.'\n          required: false\n          schema:\n            type: string\n        -\n          name: state\n          in: query\n          description: 'The state for the patient.'\n          required: false\n          schema:\n            type: string\n        -\n          name: phone_home\n          in: query\n          description: 'The home phone for the patient.'\n          required: false\n          schema:\n            type: string\n        -\n          name: phone_biz\n          in: query\n          description: 'The business phone for the patient.'\n          required: false\n          schema:\n            type: string\n        -\n          name: phone_cell\n          in: query\n          description: 'The cell phone for the patient.'\n          required: false\n          schema:\n            type: string\n        -\n          name: postal_contact\n          in: query\n          description: 'The postal_contact for the patient.'\n          required: false\n          schema:\n            type: string\n        -\n          name: sex\n          in: query\n          description: 'The gender for the patient.'\n          required: false\n          schema:\n            type: string\n        -\n          name: country_code\n          in: query\n          description: 'The country code for the patient.'\n          required: false\n          schema:\n            type: string\n        -\n          name: email\n          in: query\n          description: 'The email for the patient.'\n          required: false\n          schema:\n            type: string\n        -\n          name: DOB\n          in: query\n          description: 'The DOB for the patient.'\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n    post:\n      tags:\n        - standard\n      description: 'Creates a new patient'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/api_patient_request'\n      responses:\n        '200':\n          description: 'Standard response'\n          content:\n            application/json:\n              schema:\n                properties:\n                  validationErrors: { description: 'Validation errors.', type: array, items: { type: object } }\n                  internalErrors: { description: 'Internal errors.', type: array, items: { type: object } }\n                  data: { description: 'Returned data.', type: array, items: { properties: { pid: { description: 'patient pid', type: integer } }, type: object } }\n                type: object\n                example:\n                  validationErrors: []\n                  error_description: []\n                  data: { pid: 1 }\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/api/patient/{puuid}':\n    get:\n      tags:\n        - standard\n      description: 'Retrieves a single patient by their uuid'\n      parameters:\n        -\n          name: puuid\n          in: path\n          description: 'The uuid for the patient.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Standard response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/api_patient_response'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n    put:\n      tags:\n        - standard\n      description: 'Updates a patient'\n      parameters:\n        -\n          name: puuid\n          in: path\n          description: 'The uuid for the patient.'\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/api_patient_request'\n      responses:\n        '200':\n          description: 'Standard response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/api_patient_response'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/api/patient/{puuid}/encounter':\n    get:\n      tags:\n        - standard\n      description: 'Retrieves a list of encounters for a single patient'\n      parameters:\n        -\n          name: puuid\n          in: path\n          description: 'The uuid for the patient.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n    post:\n      tags:\n        - standard\n      description: 'Creates a new encounter'\n      parameters:\n        -\n          name: puuid\n          in: path\n          description: 'The uuid for the patient.'\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/api_encounter_request'\n      responses:\n        '200':\n          description: 'Standard response'\n          content:\n            application/json:\n              schema:\n                properties:\n                  validationErrors: { description: 'Validation errors.', type: array, items: { type: object } }\n                  internalErrors: { description: 'Internal errors.', type: array, items: { type: object } }\n                  data: { description: 'Returned data.', type: array, items: { properties: { encounter: { description: 'encounter id', type: integer }, uuid: { description: 'encounter uuid', type: string } }, type: object } }\n                type: object\n                example:\n                  validationErrors: []\n                  error_description: []\n                  data: { encounter: 1, uuid: 90c196f2-51cc-4655-8858-3a80aebff3ef }\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/api/patient/{puuid}/encounter/{euuid}':\n    get:\n      tags:\n        - standard\n      description: 'Retrieves a single encounter for a patient'\n      parameters:\n        -\n          name: puuid\n          in: path\n          description: 'The uuid for the patient.'\n          required: true\n          schema:\n            type: string\n        -\n          name: euuid\n          in: path\n          description: 'The uuid for the encounter.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Standard response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/api_encounter_response'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n    put:\n      tags:\n        - standard\n      description: 'Modify a encounter'\n      parameters:\n        -\n          name: puuid\n          in: path\n          description: 'The uuid for the patient.'\n          required: true\n          schema:\n            type: string\n        -\n          name: euuid\n          in: path\n          description: 'The uuid for the encounter.'\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/api_encounter_request'\n      responses:\n        '200':\n          description: 'Standard response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/api_encounter_response'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/api/patient/{pid}/encounter/{eid}/soap_note':\n    get:\n      tags:\n        - standard\n      description: 'Retrieves soap notes from an encounter for a patient'\n      parameters:\n        -\n          name: pid\n          in: path\n          description: 'The pid for the patient.'\n          required: true\n          schema:\n            type: string\n        -\n          name: eid\n          in: path\n          description: 'The id for the encounter.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n    post:\n      tags:\n        - standard\n      description: 'Submits a new soap note'\n      parameters:\n        -\n          name: pid\n          in: path\n          description: 'The id for the patient.'\n          required: true\n          schema:\n            type: string\n        -\n          name: eid\n          in: path\n          description: 'The id for the encounter.'\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/api_soap_note_request'\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/api/patient/{pid}/encounter/{eid}/vital':\n    get:\n      tags:\n        - standard\n      description: 'Retrieves all vitals from an encounter for a patient'\n      parameters:\n        -\n          name: pid\n          in: path\n          description: 'The pid for the patient.'\n          required: true\n          schema:\n            type: string\n        -\n          name: eid\n          in: path\n          description: 'The id for the encounter.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n    post:\n      tags:\n        - standard\n      description: 'Submits a new vitals form'\n      parameters:\n        -\n          name: pid\n          in: path\n          description: 'The id for the patient.'\n          required: true\n          schema:\n            type: string\n        -\n          name: eid\n          in: path\n          description: 'The id for the encounter.'\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/api_vital_request'\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/api/patient/{pid}/encounter/{eid}/vital/{vid}':\n    get:\n      tags:\n        - standard\n      description: 'Retrieves a vitals form from an encounter for a patient'\n      parameters:\n        -\n          name: pid\n          in: path\n          description: 'The pid for the patient.'\n          required: true\n          schema:\n            type: string\n        -\n          name: eid\n          in: path\n          description: 'The id for the encounter.'\n          required: true\n          schema:\n            type: string\n        -\n          name: vid\n          in: path\n          description: 'The id for the vitals form.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n    put:\n      tags:\n        - standard\n      description: 'Edit a vitals form'\n      parameters:\n        -\n          name: pid\n          in: path\n          description: 'The id for the patient.'\n          required: true\n          schema:\n            type: string\n        -\n          name: eid\n          in: path\n          description: 'The id for the encounter.'\n          required: true\n          schema:\n            type: string\n        -\n          name: vid\n          in: path\n          description: 'The id for the vitalss form.'\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/api_vital_request'\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/api/patient/{pid}/encounter/{eid}/soap_note/{sid}':\n    get:\n      tags:\n        - standard\n      description: 'Retrieves a soap note from an encounter for a patient'\n      parameters:\n        -\n          name: pid\n          in: path\n          description: 'The pid for the patient.'\n          required: true\n          schema:\n            type: string\n        -\n          name: eid\n          in: path\n          description: 'The id for the encounter.'\n          required: true\n          schema:\n            type: string\n        -\n          name: sid\n          in: path\n          description: 'The id for the soap note.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n    put:\n      tags:\n        - standard\n      description: 'Edit a soap note'\n      parameters:\n        -\n          name: pid\n          in: path\n          description: 'The id for the patient.'\n          required: true\n          schema:\n            type: string\n        -\n          name: eid\n          in: path\n          description: 'The id for the encounter.'\n          required: true\n          schema:\n            type: string\n        -\n          name: sid\n          in: path\n          description: 'The id for the soap noted.'\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/api_soap_note_request'\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  /api/practitioner:\n    get:\n      tags:\n        - standard\n      description: 'Retrieves a list of practitioners'\n      parameters:\n        -\n          name: title\n          in: query\n          description: 'The title for the practitioner.'\n          required: false\n          schema:\n            type: string\n        -\n          name: fname\n          in: query\n          description: 'The first name for the practitioner.'\n          required: false\n          schema:\n            type: string\n        -\n          name: lname\n          in: query\n          description: 'The last name for the practitioner.'\n          required: false\n          schema:\n            type: string\n        -\n          name: mname\n          in: query\n          description: 'The middle name for the practitioner.'\n          required: false\n          schema:\n            type: string\n        -\n          name: federaltaxid\n          in: query\n          description: 'The federal tax id for the practitioner.'\n          required: false\n          schema:\n            type: string\n        -\n          name: federaldrugid\n          in: query\n          description: 'The federal drug id for the practitioner.'\n          required: false\n          schema:\n            type: string\n        -\n          name: upin\n          in: query\n          description: 'The upin for the practitioner.'\n          required: false\n          schema:\n            type: string\n        -\n          name: facility_id\n          in: query\n          description: 'The facility id for the practitioner.'\n          required: false\n          schema:\n            type: string\n        -\n          name: facility\n          in: query\n          description: 'The facility for the practitioner.'\n          required: false\n          schema:\n            type: string\n        -\n          name: npi\n          in: query\n          description: 'The npi for the practitioner.'\n          required: false\n          schema:\n            type: string\n        -\n          name: email\n          in: query\n          description: 'The email for the practitioner.'\n          required: false\n          schema:\n            type: string\n        -\n          name: specialty\n          in: query\n          description: 'The specialty for the practitioner.'\n          required: false\n          schema:\n            type: string\n        -\n          name: billname\n          in: query\n          description: 'The billname for the practitioner.'\n          required: false\n          schema:\n            type: string\n        -\n          name: url\n          in: query\n          description: 'The url for the practitioner.'\n          required: false\n          schema:\n            type: string\n        -\n          name: assistant\n          in: query\n          description: 'The assistant for the practitioner.'\n          required: false\n          schema:\n            type: string\n        -\n          name: organization\n          in: query\n          description: 'The organization for the practitioner.'\n          required: false\n          schema:\n            type: string\n        -\n          name: valedictory\n          in: query\n          description: 'The valedictory for the practitioner.'\n          required: false\n          schema:\n            type: string\n        -\n          name: street\n          in: query\n          description: 'The street for the practitioner.'\n          required: false\n          schema:\n            type: string\n        -\n          name: streetb\n          in: query\n          description: 'The street (line 2) for the practitioner.'\n          required: false\n          schema:\n            type: string\n        -\n          name: city\n          in: query\n          description: 'The city for the practitioner.'\n          required: false\n          schema:\n            type: string\n        -\n          name: state\n          in: query\n          description: 'The state for the practitioner.'\n          required: false\n          schema:\n            type: string\n        -\n          name: zip\n          in: query\n          description: 'The zip for the practitioner.'\n          required: false\n          schema:\n            type: string\n        -\n          name: phone\n          in: query\n          description: 'The phone for the practitioner.'\n          required: false\n          schema:\n            type: string\n        -\n          name: fax\n          in: query\n          description: 'The fax for the practitioner.'\n          required: false\n          schema:\n            type: string\n        -\n          name: phonew1\n          in: query\n          description: 'The phonew1 for the practitioner.'\n          required: false\n          schema:\n            type: string\n        -\n          name: phonecell\n          in: query\n          description: 'The phonecell for the practitioner.'\n          required: false\n          schema:\n            type: string\n        -\n          name: notes\n          in: query\n          description: 'The notes for the practitioner.'\n          required: false\n          schema:\n            type: string\n        -\n          name: state_license_number2\n          in: query\n          description: 'The state license number for the practitioner.'\n          required: false\n          schema:\n            type: string\n        -\n          name: username\n          in: query\n          description: 'The username for the practitioner.'\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n    post:\n      tags:\n        - standard\n      description: 'Submits a new practitioner'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              required:\n                - fname\n                - lname\n                - npi\n              properties:\n                title:\n                  description: 'The title for the practitioner.'\n                  type: string\n                fname:\n                  description: 'The first name for the practitioner.'\n                  type: string\n                mname:\n                  description: 'The middle name for the practitioner.'\n                  type: string\n                lname:\n                  description: 'The last name for the practitioner.'\n                  type: string\n                federaltaxid:\n                  description: 'The federal tax id for the practitioner.'\n                  type: string\n                federaldrugid:\n                  description: 'The federal drug id for the practitioner.'\n                  type: string\n                upin:\n                  description: 'The upin for the practitioner.'\n                  type: string\n                facility_id:\n                  description: 'The facility_id for the practitioner.'\n                  type: string\n                facility:\n                  description: 'The facility name for the practitioner.'\n                  type: string\n                npi:\n                  description: 'The npi for the practitioner.'\n                  type: string\n                email:\n                  description: 'The email for the practitioner.'\n                  type: string\n                specialty:\n                  description: 'The specialty for the practitioner.'\n                  type: string\n                billname:\n                  description: 'The billname for the practitioner.'\n                  type: string\n                url:\n                  description: 'The url for the practitioner.'\n                  type: string\n                assistant:\n                  description: 'The assistant for the practitioner.'\n                  type: string\n                valedictory:\n                  description: 'The valedictory for the practitioner.'\n                  type: string\n                street:\n                  description: 'The street address for the practitioner.'\n                  type: string\n                streetb:\n                  description: 'The streetb address for the practitioner.'\n                  type: string\n                city:\n                  description: 'The city for the practitioner.'\n                  type: string\n                state:\n                  description: 'The state for the practitioner.'\n                  type: string\n                zip:\n                  description: 'The zip for the practitioner.'\n                  type: string\n                phone:\n                  description: 'The phone for the practitioner.'\n                  type: string\n                fax:\n                  description: 'The fax for the practitioner.'\n                  type: string\n                phonew1:\n                  description: 'The phonew1 for the practitioner.'\n                  type: string\n                phonecell:\n                  description: 'The phonecell for the practitioner.'\n                  type: string\n                notes:\n                  description: 'The notes for the practitioner.'\n                  type: string\n                state_license_number:\n                  description: 'The state license number for the practitioner.'\n                  type: string\n                username:\n                  description: 'The username for the practitioner.'\n                  type: string\n              type: object\n              example:\n                title: Mrs.\n                fname: Eduardo\n                mname: Kathy\n                lname: Perez\n                federaltaxid: ''\n                federaldrugid: ''\n                upin: ''\n                facility_id: '3'\n                facility: 'Your Clinic Name Here'\n                npi: '12345678901'\n                email: info@pennfirm.com\n                specialty: ''\n                billname: null\n                url: null\n                assistant: null\n                organization: null\n                valedictory: null\n                street: '789 Third Avenue'\n                streetb: '123 Cannaut Street'\n                city: 'San Diego'\n                state: CA\n                zip: '90210'\n                phone: '(619) 555-9827'\n                fax: null\n                phonew1: '(619) 555-7822'\n                phonecell: '(619) 555-7821'\n                notes: null\n                state_license_number: '123456'\n                username: eduardoperez\n      responses:\n        '200':\n          description: 'Standard response'\n          content:\n            application/json:\n              schema:\n                properties:\n                  validationErrors: { description: 'Validation errors.', type: array, items: { type: object } }\n                  internalErrors: { description: 'Internal errors.', type: array, items: { type: object } }\n                  data: { description: 'Returned data.', type: array, items: { properties: { id: { description: 'practitioner id', type: integer }, uuid: { description: 'practitioner uuid', type: string } }, type: object } }\n                type: object\n                example:\n                  validationErrors: []\n                  error_description: []\n                  data: { id: 7, uuid: 90d453fb-0248-4c0d-9575-d99d02b169f5 }\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/api/practitioner/{pruuid}':\n    get:\n      tags:\n        - standard\n      description: 'Retrieves a single practitioner by their uuid'\n      parameters:\n        -\n          name: pruuid\n          in: path\n          description: 'The uuid for the practitioner.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n    put:\n      tags:\n        - standard\n      description: 'Edit a practitioner'\n      parameters:\n        -\n          name: pruuid\n          in: path\n          description: 'The uuid for the practitioner.'\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              properties:\n                title:\n                  description: 'The title for the practitioner.'\n                  type: string\n                fname:\n                  description: 'The first name for the practitioner.'\n                  type: string\n                mname:\n                  description: 'The middle name for the practitioner.'\n                  type: string\n                lname:\n                  description: 'The last name for the practitioner.'\n                  type: string\n                federaltaxid:\n                  description: 'The federal tax id for the practitioner.'\n                  type: string\n                federaldrugid:\n                  description: 'The federal drug id for the practitioner.'\n                  type: string\n                upin:\n                  description: 'The upin for the practitioner.'\n                  type: string\n                facility_id:\n                  description: 'The facility_id for the practitioner.'\n                  type: string\n                facility:\n                  description: 'The facility name for the practitioner.'\n                  type: string\n                npi:\n                  description: 'The npi for the practitioner.'\n                  type: string\n                email:\n                  description: 'The email for the practitioner.'\n                  type: string\n                specialty:\n                  description: 'The specialty for the practitioner.'\n                  type: string\n                billname:\n                  description: 'The billname for the practitioner.'\n                  type: string\n                url:\n                  description: 'The url for the practitioner.'\n                  type: string\n                assistant:\n                  description: 'The assistant for the practitioner.'\n                  type: string\n                valedictory:\n                  description: 'The valedictory for the practitioner.'\n                  type: string\n                street:\n                  description: 'The street address for the practitioner.'\n                  type: string\n                streetb:\n                  description: 'The streetb address for the practitioner.'\n                  type: string\n                city:\n                  description: 'The city for the practitioner.'\n                  type: string\n                state:\n                  description: 'The state for the practitioner.'\n                  type: string\n                zip:\n                  description: 'The zip for the practitioner.'\n                  type: string\n                phone:\n                  description: 'The phone for the practitioner.'\n                  type: string\n                fax:\n                  description: 'The fax for the practitioner.'\n                  type: string\n                phonew1:\n                  description: 'The phonew1 for the practitioner.'\n                  type: string\n                phonecell:\n                  description: 'The phonecell for the practitioner.'\n                  type: string\n                notes:\n                  description: 'The notes for the practitioner.'\n                  type: string\n                state_license_number:\n                  description: 'The state license number for the practitioner.'\n                  type: string\n                username:\n                  description: 'The username for the practitioner.'\n                  type: string\n              type: object\n              example:\n                title: Mr\n                fname: Baz\n                mname: ''\n                lname: Bop\n                street: '456 Tree Lane'\n                zip: '08642'\n                city: FooTown\n                state: FL\n                phone: 123-456-7890\n      responses:\n        '200':\n          description: 'Standard response'\n          content:\n            application/json:\n              schema:\n                properties:\n                  validationErrors: { description: 'Validation errors.', type: array, items: { type: object } }\n                  internalErrors: { description: 'Internal errors.', type: array, items: { type: object } }\n                  data: { description: 'Returned data.', type: array, items: { properties: { id: { description: 'practitioner id', type: string }, uuid: { description: 'practitioner uuid', type: string }, title: { description: 'practitioner title', type: string }, fname: { description: 'practitioner fname', type: string }, lname: { description: 'practitioner lname', type: string }, mname: { description: 'practitioner mname', type: string }, federaltaxid: { description: 'practitioner federaltaxid', type: string }, federaldrugid: { description: 'practitioner federaldrugid', type: string }, upin: { description: 'practitioner upin', type: string }, facility_id: { description: 'practitioner facility_id', type: string }, facility: { description: 'practitioner facility', type: string }, npi: { description: 'practitioner npi', type: string }, email: { description: 'practitioner email', type: string }, active: { description: 'practitioner active setting', type: string }, specialty: { description: 'practitioner specialty', type: string }, billname: { description: 'practitioner billname', type: string }, url: { description: 'practitioner url', type: string }, assistant: { description: 'practitioner assistant', type: string }, organization: { description: 'practitioner organization', type: string }, valedictory: { description: 'practitioner valedictory', type: string }, street: { description: 'practitioner street', type: string }, streetb: { description: 'practitioner streetb', type: string }, city: { description: 'practitioner city', type: string }, state: { description: 'practitioner state', type: string }, zip: { description: 'practitioner zip', type: string }, phone: { description: 'practitioner phone', type: string }, fax: { description: fax, type: string }, phonew1: { description: 'practitioner phonew1', type: string }, phonecell: { description: 'practitioner phonecell', type: string }, notes: { description: 'practitioner notes', type: string }, state_license_number: { description: 'practitioner state license number', type: string }, abook_title: { description: 'practitioner abook title', type: string }, physician_title: { description: 'practitioner physician title', type: string }, physician_code: { description: 'practitioner physician code', type: string } }, type: object } }\n                type: object\n                example:\n                  validationErrors: []\n                  error_description: []\n                  data: { id: 7, uuid: 90d453fb-0248-4c0d-9575-d99d02b169f5, title: Mr, fname: Baz, lname: Bop, mname: '', federaltaxid: '', federaldrugid: '', upin: '', facility_id: '3', facility: 'Your Clinic Name Here', npi: '0123456789', email: info@pennfirm.com, active: '1', specialty: '', billname: '', url: '', assistant: '', organization: '', valedictory: '', street: '456 Tree Lane', streetb: '123 Cannaut Street', city: FooTown, state: FL, zip: '08642', phone: 123-456-7890, fax: '', phonew1: '(619) 555-7822', phonecell: '(619) 555-7821', notes: '', state_license_number: '123456', abook_title: null, physician_title: null, physician_code: null }\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  /api/medical_problem:\n    get:\n      tags:\n        - standard\n      description: 'Retrieves a list of medical problems'\n      parameters:\n        -\n          name: puuid\n          in: query\n          description: 'The uuid for the patient.'\n          required: false\n          schema:\n            type: string\n        -\n          name: condition_uuid\n          in: query\n          description: 'The uuid for the medical problem.'\n          required: false\n          schema:\n            type: string\n        -\n          name: title\n          in: query\n          description: 'The title for the medical problem.'\n          required: false\n          schema:\n            type: string\n        -\n          name: begdate\n          in: query\n          description: 'The start date for the medical problem.'\n          required: false\n          schema:\n            type: string\n        -\n          name: enddate\n          in: query\n          description: 'The end date for the medical problem.'\n          required: false\n          schema:\n            type: string\n        -\n          name: diagnosis\n          in: query\n          description: 'The diagnosis for the medical problem.'\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/api/medical_problem/{muuid}':\n    get:\n      tags:\n        - standard\n      description: 'Retrieves a single medical problem by their uuid'\n      parameters:\n        -\n          name: muuid\n          in: path\n          description: 'The uuid for the medical problem.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/api/patient/{puuid}/medical_problem':\n    get:\n      tags:\n        - standard\n      description: 'Retrieves all medical problems for a patient'\n      parameters:\n        -\n          name: puuid\n          in: path\n          description: 'The uuid for the patient.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n    post:\n      tags:\n        - standard\n      description: 'Submits a new medical problem'\n      parameters:\n        -\n          name: puuid\n          in: path\n          description: 'The uuid for the patient.'\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/api_medical_problem_request'\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/api/patient/{puuid}/medical_problem/{muuid}':\n    get:\n      tags:\n        - standard\n      description: 'Retrieves a medical problem for a patient'\n      parameters:\n        -\n          name: puuid\n          in: path\n          description: 'The uuid for the patient.'\n          required: true\n          schema:\n            type: string\n        -\n          name: muuid\n          in: path\n          description: 'The uuid for the medical problem.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n    put:\n      tags:\n        - standard\n      description: 'Edit a medical problem'\n      parameters:\n        -\n          name: puuid\n          in: path\n          description: 'The uuid for the patient.'\n          required: true\n          schema:\n            type: string\n        -\n          name: muuid\n          in: path\n          description: 'The uuid for the medical problem.'\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/api_medical_problem_request'\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n    delete:\n      tags:\n        - standard\n      description: 'Delete a medical problem'\n      parameters:\n        -\n          name: puuid\n          in: path\n          description: 'The uuid for the patient.'\n          required: true\n          schema:\n            type: string\n        -\n          name: muuid\n          in: path\n          description: 'The uuid for the medical problem.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  /api/allergy:\n    get:\n      tags:\n        - standard\n      description: 'Retrieves a list of allergies'\n      parameters:\n        -\n          name: lists.pid\n          in: query\n          description: 'The uuid for the patient.'\n          required: false\n          schema:\n            type: string\n        -\n          name: lists.id\n          in: query\n          description: 'The uuid for the allergy.'\n          required: false\n          schema:\n            type: string\n        -\n          name: title\n          in: query\n          description: 'The title for the allergy.'\n          required: false\n          schema:\n            type: string\n        -\n          name: begdate\n          in: query\n          description: 'The start date for the allergy.'\n          required: false\n          schema:\n            type: string\n        -\n          name: enddate\n          in: query\n          description: 'The end date for the allergy.'\n          required: false\n          schema:\n            type: string\n        -\n          name: diagnosis\n          in: query\n          description: 'The diagnosis for the allergy.'\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/api/allergy/{auuid}':\n    get:\n      tags:\n        - standard\n      description: 'Retrieves a single allergy by their uuid'\n      parameters:\n        -\n          name: auuid\n          in: path\n          description: 'The uuid for the allergy.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/api/patient/{puuid}/allergy':\n    get:\n      tags:\n        - standard\n      description: 'Retrieves all allergies for a patient'\n      parameters:\n        -\n          name: puuid\n          in: path\n          description: 'The uuid for the patient.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n    post:\n      tags:\n        - standard\n      description: 'Submits a new allergy'\n      parameters:\n        -\n          name: puuid\n          in: path\n          description: 'The uuid for the patient.'\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/api_allergy_request'\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/api/patient/{puuid}/allergy/{auuid}':\n    get:\n      tags:\n        - standard\n      description: 'Retrieves a allergy for a patient'\n      parameters:\n        -\n          name: puuid\n          in: path\n          description: 'The uuid for the patient.'\n          required: true\n          schema:\n            type: string\n        -\n          name: auuid\n          in: path\n          description: 'The uuid for the allergy.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n    put:\n      tags:\n        - standard\n      description: 'Edit a allergy'\n      parameters:\n        -\n          name: puuid\n          in: path\n          description: 'The uuid for the patient.'\n          required: true\n          schema:\n            type: string\n        -\n          name: auuid\n          in: path\n          description: 'The uuid for the allergy.'\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/api_allergy_request'\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n    delete:\n      tags:\n        - standard\n      description: 'Delete a medical problem'\n      parameters:\n        -\n          name: puuid\n          in: path\n          description: 'The uuid for the patient.'\n          required: true\n          schema:\n            type: string\n        -\n          name: auuid\n          in: path\n          description: 'The uuid for the allergy.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/api/patient/{pid}/medication':\n    get:\n      tags:\n        - standard\n      description: 'Retrieves all medications for a patient'\n      parameters:\n        -\n          name: pid\n          in: path\n          description: 'The pid for the patient.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n    post:\n      tags:\n        - standard\n      description: 'Submits a new medication'\n      parameters:\n        -\n          name: pid\n          in: path\n          description: 'The pid for the patient.'\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/api_medication_request'\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/api/patient/{pid}/medication/{mid}':\n    get:\n      tags:\n        - standard\n      description: 'Retrieves a medication for a patient'\n      parameters:\n        -\n          name: pid\n          in: path\n          description: 'The id for the patient.'\n          required: true\n          schema:\n            type: string\n        -\n          name: mid\n          in: path\n          description: 'The id for the medication.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n    put:\n      tags:\n        - standard\n      description: 'Edit a medication'\n      parameters:\n        -\n          name: pid\n          in: path\n          description: 'The pid for the patient.'\n          required: true\n          schema:\n            type: string\n        -\n          name: mid\n          in: path\n          description: 'The id for the medication.'\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/api_medication_request'\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n    delete:\n      tags:\n        - standard\n      description: 'Delete a medication'\n      parameters:\n        -\n          name: pid\n          in: path\n          description: 'The id for the patient.'\n          required: true\n          schema:\n            type: string\n        -\n          name: mid\n          in: path\n          description: 'The id for the medication.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/api/patient/{pid}/surgery':\n    get:\n      tags:\n        - standard\n      description: 'Retrieves all surgeries for a patient'\n      parameters:\n        -\n          name: pid\n          in: path\n          description: 'The pid for the patient.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n    post:\n      tags:\n        - standard\n      description: 'Submits a new surgery'\n      parameters:\n        -\n          name: pid\n          in: path\n          description: 'The pid for the patient.'\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/api_surgery_request'\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/api/patient/{pid}/surgery/{sid}':\n    get:\n      tags:\n        - standard\n      description: 'Retrieves a surgery for a patient'\n      parameters:\n        -\n          name: pid\n          in: path\n          description: 'The id for the patient.'\n          required: true\n          schema:\n            type: string\n        -\n          name: sid\n          in: path\n          description: 'The id for the surgery.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n    put:\n      tags:\n        - standard\n      description: 'Edit a surgery'\n      parameters:\n        -\n          name: pid\n          in: path\n          description: 'The pid for the patient.'\n          required: true\n          schema:\n            type: string\n        -\n          name: sid\n          in: path\n          description: 'The id for the surgery.'\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/api_surgery_request'\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n    delete:\n      tags:\n        - standard\n      description: 'Delete a surgery'\n      parameters:\n        -\n          name: pid\n          in: path\n          description: 'The id for the patient.'\n          required: true\n          schema:\n            type: string\n        -\n          name: sid\n          in: path\n          description: 'The id for the surgery.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/api/patient/{pid}/dental_issue':\n    get:\n      tags:\n        - standard\n      description: 'Retrieves all dental issues for a patient'\n      parameters:\n        -\n          name: pid\n          in: path\n          description: 'The pid for the patient.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n    post:\n      tags:\n        - standard\n      description: 'Submits a new dental issue'\n      parameters:\n        -\n          name: pid\n          in: path\n          description: 'The pid for the patient.'\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/api_dental_issue_request'\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/api/patient/{pid}/dental_issue/{did}':\n    get:\n      tags:\n        - standard\n      description: 'Retrieves a dental issue for a patient'\n      parameters:\n        -\n          name: pid\n          in: path\n          description: 'The id for the patient.'\n          required: true\n          schema:\n            type: string\n        -\n          name: did\n          in: path\n          description: 'The id for the dental issue.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n    put:\n      tags:\n        - standard\n      description: 'Edit a dental issue'\n      parameters:\n        -\n          name: pid\n          in: path\n          description: 'The pid for the patient.'\n          required: true\n          schema:\n            type: string\n        -\n          name: did\n          in: path\n          description: 'The id for the dental issue.'\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/api_dental_issue_request'\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n    delete:\n      tags:\n        - standard\n      description: 'Delete a dental issue'\n      parameters:\n        -\n          name: pid\n          in: path\n          description: 'The id for the patient.'\n          required: true\n          schema:\n            type: string\n        -\n          name: did\n          in: path\n          description: 'The id for the dental issue.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/api/patient/{pid}/appointment':\n    get:\n      tags:\n        - standard\n      description: 'Retrieves all appointments for a patient'\n      parameters:\n        -\n          name: pid\n          in: path\n          description: 'The pid for the patient.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n    post:\n      tags:\n        - standard\n      description: 'Submits a new appointment'\n      parameters:\n        -\n          name: pid\n          in: path\n          description: 'The id for the patient.'\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              required:\n                - pc_catid\n                - pc_title\n                - pc_duration\n                - pc_hometext\n                - pc_apptstatus\n                - pc_eventDate\n                - pc_startTime\n                - pc_facility\n                - pc_billing_location\n              properties:\n                pc_catid:\n                  description: 'The category of the appointment.'\n                  type: string\n                pc_title:\n                  description: 'The title of the appointment.'\n                  type: string\n                pc_duration:\n                  description: 'The duration of the appointment.'\n                  type: string\n                pc_hometext:\n                  description: 'Comments for the appointment.'\n                  type: string\n                pc_apptstatus:\n                  description: 'use an option from resource=/api/list/apptstat'\n                  type: string\n                pc_eventDate:\n                  description: 'The date of the appointment.'\n                  type: string\n                pc_startTime:\n                  description: 'The time of the appointment.'\n                  type: string\n                pc_facility:\n                  description: 'The facility id of the appointment.'\n                  type: string\n                pc_billing_location:\n                  description: 'The billinag location id of the appointment.'\n                  type: string\n              type: object\n              example:\n                pc_catid: '5'\n                pc_title: 'Office Visit'\n                pc_duration: '900'\n                pc_hometext: Test\n                pc_apptstatus: '-'\n                pc_eventDate: '2018-10-19'\n                pc_startTime: '09:00'\n                pc_facility: '9'\n                pc_billing_location: '10'\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  /api/appointment:\n    get:\n      tags:\n        - standard\n      description: 'Retrieves all appointments'\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/api/appointment/{eid}':\n    get:\n      tags:\n        - standard\n      description: 'Retrieves an appointment'\n      parameters:\n        -\n          name: eid\n          in: path\n          description: 'The eid for the appointment.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/api/patient/{pid}/appointment/{eid}':\n    get:\n      tags:\n        - standard\n      description: 'Retrieves a appointment for a patient'\n      parameters:\n        -\n          name: pid\n          in: path\n          description: 'The id for the patient.'\n          required: true\n          schema:\n            type: string\n        -\n          name: eid\n          in: path\n          description: 'The eid for the appointment.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n    delete:\n      tags:\n        - standard\n      description: 'Delete a appointment'\n      parameters:\n        -\n          name: pid\n          in: path\n          description: 'The id for the patient.'\n          required: true\n          schema:\n            type: string\n        -\n          name: eid\n          in: path\n          description: 'The eid for the appointment.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/api/list/{list_name}':\n    get:\n      tags:\n        - standard\n      description: 'Retrieves a list'\n      parameters:\n        -\n          name: list_name\n          in: path\n          description: 'The list_id of the list.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  /api/version:\n    get:\n      tags:\n        - standard\n      description: 'Retrieves the OpenEMR version information'\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  /api/product:\n    get:\n      tags:\n        - standard\n      description: 'Retrieves the OpenEMR product registration information'\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  /api/insurance_company:\n    get:\n      tags:\n        - standard\n      description: 'Retrieves all insurance companies'\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n    post:\n      tags:\n        - standard\n      description: 'Submits a new insurance company'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/api_insurance_company_request'\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/api/insurance_company/{iid}':\n    get:\n      tags:\n        - standard\n      description: 'Retrieves insurance company'\n      parameters:\n        -\n          name: iid\n          in: path\n          description: 'The id of the insurance company.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n    put:\n      tags:\n        - standard\n      description: 'Edit a insurance company'\n      parameters:\n        -\n          name: iid\n          in: path\n          description: 'The id for the insurance company.'\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/api_insurance_company_request'\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  /api/insurance_type:\n    get:\n      tags:\n        - standard\n      description: 'Retrieves all insurance types'\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/api/patient/{pid}/document':\n    get:\n      tags:\n        - standard\n      description: 'Retrieves all file information of documents from a category for a patient'\n      parameters:\n        -\n          name: pid\n          in: path\n          description: 'The pid for the patient.'\n          required: true\n          schema:\n            type: string\n        -\n          name: path\n          in: query\n          description: 'The category of the documents.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n    post:\n      tags:\n        - standard\n      description: 'Submits a new patient document'\n      parameters:\n        -\n          name: pid\n          in: path\n          description: 'The pid for the patient.'\n          required: true\n          schema:\n            type: string\n        -\n          name: path\n          in: query\n          description: 'The category of the document.'\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                document:\n                  description: document\n                  type: string\n                  format: binary\n              type: object\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/api/patient/{pid}/document/{did}':\n    get:\n      tags:\n        - standard\n      description: 'Retrieves a document for a patient'\n      parameters:\n        -\n          name: pid\n          in: path\n          description: 'The pid for the patient.'\n          required: true\n          schema:\n            type: string\n        -\n          name: did\n          in: path\n          description: 'The id for the patient document.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/api/patient/{pid}/insurance':\n    get:\n      tags:\n        - standard\n      description: 'Retrieves all insurances for a patient'\n      parameters:\n        -\n          name: pid\n          in: path\n          description: 'The pid for the patient.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/api/patient/{pid}/insurance/{type}':\n    get:\n      tags:\n        - standard\n      description: 'Retrieves a insurance (by type) for a patient'\n      parameters:\n        -\n          name: pid\n          in: path\n          description: 'The pid for the patient.'\n          required: true\n          schema:\n            type: string\n        -\n          name: type\n          in: path\n          description: 'The insurance type for the patient. (options are ''primary'', ''secondary'', or ''tertiary'')'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n    put:\n      tags:\n        - standard\n      description: 'Edit a patient insurance (by type)'\n      parameters:\n        -\n          name: pid\n          in: path\n          description: 'The pid for the patient.'\n          required: true\n          schema:\n            type: string\n        -\n          name: type\n          in: path\n          description: 'The insurance type for the patient. (options are ''primary'', ''secondary'', or ''tertiary'')'\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/api_insurance_request'\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n    post:\n      tags:\n        - standard\n      description: 'Submits a new patient insurance (with type)'\n      parameters:\n        -\n          name: pid\n          in: path\n          description: 'The pid for the patient.'\n          required: true\n          schema:\n            type: string\n        -\n          name: type\n          in: path\n          description: 'The insurance type for the patient. (options are ''primary'', ''secondary'', or ''tertiary'')'\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/api_insurance_request'\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/api/patient/{pid}/message':\n    post:\n      tags:\n        - standard\n      description: 'Submits a pnote message'\n      parameters:\n        -\n          name: pid\n          in: path\n          description: 'The id for the patient.'\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/api_message_request'\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/api/patient/{pid}/message/{mid}':\n    put:\n      tags:\n        - standard\n      description: 'Edit a pnote message'\n      parameters:\n        -\n          name: pid\n          in: path\n          description: 'The id for the patient.'\n          required: true\n          schema:\n            type: string\n        -\n          name: mid\n          in: path\n          description: 'The id for the pnote message.'\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/api_message_request'\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n    delete:\n      tags:\n        - standard\n      description: 'Delete a pnote message'\n      parameters:\n        -\n          name: pid\n          in: path\n          description: 'The id for the patient.'\n          required: true\n          schema:\n            type: string\n        -\n          name: eid\n          in: path\n          description: 'The id for the pnote message.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  /api/immunization:\n    get:\n      tags:\n        - standard\n      description: 'Retrieves a list of immunizations'\n      parameters:\n        -\n          name: patient_id\n          in: query\n          description: 'The pid for the patient.'\n          required: false\n          schema:\n            type: string\n        -\n          name: id\n          in: query\n          description: 'The id for the immunization.'\n          required: false\n          schema:\n            type: string\n        -\n          name: uuid\n          in: query\n          description: 'The uuid for the immunization.'\n          required: false\n          schema:\n            type: string\n        -\n          name: administered_date\n          in: query\n          description: 'The administered date for the immunization.'\n          required: false\n          schema:\n            type: string\n        -\n          name: immunization_id\n          in: query\n          description: 'The immunization list_id for the immunization.'\n          required: false\n          schema:\n            type: string\n        -\n          name: cvx_code\n          in: query\n          description: 'The cvx code for the immunization.'\n          required: false\n          schema:\n            type: string\n        -\n          name: manufacturer\n          in: query\n          description: 'The manufacturer for the immunization.'\n          required: false\n          schema:\n            type: string\n        -\n          name: lot_number\n          in: query\n          description: 'The lot number for the immunization.'\n          required: false\n          schema:\n            type: string\n        -\n          name: administered_by_id\n          in: query\n          description: 'The administered by id for the immunization.'\n          required: false\n          schema:\n            type: string\n        -\n          name: administered_by\n          in: query\n          description: 'The administered by for the immunization.'\n          required: false\n          schema:\n            type: string\n        -\n          name: education_date\n          in: query\n          description: 'The education date for the immunization.'\n          required: false\n          schema:\n            type: string\n        -\n          name: vis_date\n          in: query\n          description: 'The vis date for the immunization.'\n          required: false\n          schema:\n            type: string\n        -\n          name: note\n          in: query\n          description: 'The note for the immunization.'\n          required: false\n          schema:\n            type: string\n        -\n          name: create_date\n          in: query\n          description: 'The create date for the immunization.'\n          required: false\n          schema:\n            type: string\n        -\n          name: update_date\n          in: query\n          description: 'The update date for the immunization.'\n          required: false\n          schema:\n            type: string\n        -\n          name: created_by\n          in: query\n          description: 'The created_by for the immunization.'\n          required: false\n          schema:\n            type: string\n        -\n          name: updated_by\n          in: query\n          description: 'The updated_by for the immunization.'\n          required: false\n          schema:\n            type: string\n        -\n          name: amount_administered\n          in: query\n          description: 'The amount administered for the immunization.'\n          required: false\n          schema:\n            type: string\n        -\n          name: amount_administered_unit\n          in: query\n          description: 'The amount administered unit for the immunization.'\n          required: false\n          schema:\n            type: string\n        -\n          name: expiration_date\n          in: query\n          description: 'The expiration date for the immunization.'\n          required: false\n          schema:\n            type: string\n        -\n          name: route\n          in: query\n          description: 'The route for the immunization.'\n          required: false\n          schema:\n            type: string\n        -\n          name: administration_site\n          in: query\n          description: 'The administration site for the immunization.'\n          required: false\n          schema:\n            type: string\n        -\n          name: added_erroneously\n          in: query\n          description: 'The added_erroneously for the immunization.'\n          required: false\n          schema:\n            type: string\n        -\n          name: external_id\n          in: query\n          description: 'The external_id for the immunization.'\n          required: false\n          schema:\n            type: string\n        -\n          name: completion_status\n          in: query\n          description: 'The completion status for the immunization.'\n          required: false\n          schema:\n            type: string\n        -\n          name: information_source\n          in: query\n          description: 'The information source for the immunization.'\n          required: false\n          schema:\n            type: string\n        -\n          name: refusal_reason\n          in: query\n          description: 'The refusal reason for the immunization.'\n          required: false\n          schema:\n            type: string\n        -\n          name: ordering_provider\n          in: query\n          description: 'The ordering provider for the immunization.'\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/api/immunization/{uuid}':\n    get:\n      tags:\n        - standard\n      description: 'Retrieves a immunization'\n      parameters:\n        -\n          name: uuid\n          in: path\n          description: 'The uuid for the immunization.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  /api/procedure:\n    get:\n      tags:\n        - standard\n      description: 'Retrieves a list of all procedures'\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/api/procedure/{uuid}':\n    get:\n      tags:\n        - standard\n      description: 'Retrieves a procedure'\n      parameters:\n        -\n          name: uuid\n          in: path\n          description: 'The uuid for the procedure.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  /api/drug:\n    get:\n      tags:\n        - standard\n      description: 'Retrieves a list of all drugs'\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/api/drug/{uuid}':\n    get:\n      tags:\n        - standard\n      description: 'Retrieves a drug'\n      parameters:\n        -\n          name: uuid\n          in: path\n          description: 'The uuid for the drug.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  /api/prescription:\n    get:\n      tags:\n        - standard\n      description: 'Retrieves a list of all prescriptions'\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/api/prescription/{uuid}':\n    get:\n      tags:\n        - standard\n      description: 'Retrieves a prescription'\n      parameters:\n        -\n          name: uuid\n          in: path\n          description: 'The uuid for the prescription.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  /fhir/AllergyIntolerance:\n    get:\n      tags:\n        - fhir\n      description: 'Returns a list of AllergyIntolerance resources.'\n      parameters:\n        -\n          name: _id\n          in: query\n          description: 'The uuid for the AllergyIntolerance resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: patient\n          in: query\n          description: 'The uuid for the patient.'\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Standard Response'\n          content:\n            application/json:\n              schema:\n                properties:\n                  'json object': { description: 'FHIR Json object.', type: object }\n                type: object\n                example:\n                  meta: { lastUpdated: '2021-09-14T09:13:51' }\n                  resourceType: Bundle\n                  type: collection\n                  total: 0\n                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/AllergyIntolerance' }]\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/fhir/AllergyIntolerance/{uuid}':\n    get:\n      tags:\n        - fhir\n      description: 'Returns a single AllergyIntolerance resource.'\n      parameters:\n        -\n          name: uuid\n          in: path\n          description: 'The uuid for the AllergyIntolerance resource.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Standard Response'\n          content:\n            application/json:\n              schema:\n                properties:\n                  'json object': { description: 'FHIR Json object.', type: object }\n                type: object\n                example:\n                  id: 94682fe5-f383-4885-9505-64b02e34906f\n                  meta: { versionId: '1', lastUpdated: '2021-09-16T00:27:32+00:00' }\n                  resourceType: AllergyIntolerance\n                  text: { status: additional, div: '\u003cdiv xmlns=''http://www.w3.org/1999/xhtml''\u003epenicillin\u003c/div\u003e' }\n                  clinicalStatus: { coding: [{ system: 'http://terminology.hl7.org/CodeSystem/allergyintolerance-clinical', code: active, display: Active }] }\n                  verificationStatus: { coding: [{ system: 'http://terminology.hl7.org/CodeSystem/allergyintolerance-verification', code: confirmed, display: Confirmed }] }\n                  category: [medication]\n                  criticality: low\n                  code: { coding: [{ system: 'http://terminology.hl7.org/CodeSystem/data-absent-reason', code: unknown, display: Unknown }] }\n                  patient: { reference: Patient/94682ef5-b0e3-4289-b19a-11b9592e9c92 }\n                  reaction: [{ manifestation: [{ coding: [{ system: 'http://snomed.info/sct', code: '422587007', display: Nausea }], text: Nausea }] }]\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n        '404':\n          $ref: '#/components/responses/uuidnotfound'\n      security:\n        -\n          openemr_auth: []\n  /fhir/CarePlan:\n    get:\n      tags:\n        - fhir\n      description: 'Returns a list of CarePlan resources.'\n      parameters:\n        -\n          name: _id\n          in: query\n          description: 'The uuid for the CarePlan resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: patient\n          in: query\n          description: 'The uuid for the patient.'\n          required: false\n          schema:\n            type: string\n        -\n          name: category\n          in: query\n          description: 'The category of the CarePlan resource.'\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Standard Response'\n          content:\n            application/json:\n              schema:\n                properties:\n                  'json object': { description: 'FHIR Json object.', type: object }\n                type: object\n                example:\n                  meta: { lastUpdated: '2021-09-14T09:13:51' }\n                  resourceType: Bundle\n                  type: collection\n                  total: 0\n                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/CarePlan' }]\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/fhir/CarePlan/{uuid}':\n    get:\n      tags:\n        - fhir\n      description: 'Returns a single CarePlan resource.'\n      parameters:\n        -\n          name: uuid\n          in: path\n          description: 'The uuid for the CarePlan resource.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Standard Response'\n          content:\n            application/json:\n              schema:\n                properties:\n                  'json object': { description: 'FHIR Json object.', type: object }\n                type: object\n                example:\n                  id: 94682f08-8fbc-451e-b1ec-f922d765c38f_1\n                  meta: { versionId: '1', lastUpdated: '2021-09-16T00:54:18+00:00' }\n                  resourceType: CarePlan\n                  text: { status: generated, div: '\u003cdiv xmlns=\"http://www.w3.org/1999/xhtml\"\u003e\u003cp\u003eTreat flu.\u003c/p\u003e\u003c/div\u003e' }\n                  status: active\n                  intent: plan\n                  category: [{ coding: [{ system: 'http://hl7.org/fhir/us/core/CodeSystem/careplan-category', code: assess-plan }] }]\n                  description: 'Treat flu.'\n                  subject: { reference: Patient/94682ef5-b0e3-4289-b19a-11b9592e9c92, type: Patient }\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n        '404':\n          $ref: '#/components/responses/uuidnotfound'\n      security:\n        -\n          openemr_auth: []\n  /fhir/CareTeam:\n    get:\n      tags:\n        - fhir\n      description: 'Returns a list of CareTeam resources.'\n      parameters:\n        -\n          name: _id\n          in: query\n          description: 'The uuid for the CareTeam resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: patient\n          in: query\n          description: 'The uuid for the patient.'\n          required: false\n          schema:\n            type: string\n        -\n          name: status\n          in: query\n          description: 'The status of the CarePlan resource.'\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Standard Response'\n          content:\n            application/json:\n              schema:\n                properties:\n                  'json object': { description: 'FHIR Json object.', type: object }\n                type: object\n                example:\n                  meta: { lastUpdated: '2021-09-14T09:13:51' }\n                  resourceType: Bundle\n                  type: collection\n                  total: 0\n                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/CareTeam' }]\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/fhir/CareTeam/{uuid}':\n    get:\n      tags:\n        - fhir\n      description: 'Returns a single CareTeam resource.'\n      parameters:\n        -\n          name: uuid\n          in: path\n          description: 'The uuid for the CareTeam resource.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Standard Response'\n          content:\n            application/json:\n              schema:\n                properties:\n                  'json object': { description: 'FHIR Json object.', type: object }\n                type: object\n                example:\n                  id: 94682f09-69fe-4ada-8ea6-753a52bd1516\n                  meta: { versionId: '1', lastUpdated: '2021-09-16T01:07:22+00:00' }\n                  resourceType: CareTeam\n                  status: active\n                  subject: { reference: Patient/94682ef5-b0e3-4289-b19a-11b9592e9c92, type: Patient }\n                  participant: [{ role: [{ coding: [{ system: 'http://nucc.org/provider-taxonomy', code: 102L00000X, display: Psychoanalyst }] }], member: { reference: Practitioner/94682c68-f712-4c39-9158-ff132a08f26b, type: Practitioner }, onBehalfOf: { reference: Organization/94682c62-b801-4498-84a1-13f158bb2a18, type: Organization } }, { role: [{ coding: [{ system: 'http://terminology.hl7.org/CodeSystem/data-absent-reason', code: unknown, display: Unknown }] }], member: { reference: Organization/94682c62-b801-4498-84a1-13f158bb2a18, type: Organization } }]\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n        '404':\n          $ref: '#/components/responses/uuidnotfound'\n      security:\n        -\n          openemr_auth: []\n  /fhir/Condition:\n    get:\n      tags:\n        - fhir\n      description: 'Returns a list of Condition resources.'\n      parameters:\n        -\n          name: _id\n          in: query\n          description: 'The uuid for the Condition resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: patient\n          in: query\n          description: 'The uuid for the patient.'\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Standard Response'\n          content:\n            application/json:\n              schema:\n                properties:\n                  'json object': { description: 'FHIR Json object.', type: object }\n                type: object\n                example:\n                  meta: { lastUpdated: '2021-09-14T09:13:51' }\n                  resourceType: Bundle\n                  type: collection\n                  total: 0\n                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/Condition' }]\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/fhir/Condition/{uuid}':\n    get:\n      tags:\n        - fhir\n      description: 'Returns a single Condition resource.'\n      parameters:\n        -\n          name: uuid\n          in: path\n          description: 'The uuid for the Condition resource.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Standard Response'\n          content:\n            application/json:\n              schema:\n                properties:\n                  'json object': { description: 'FHIR Json object.', type: object }\n                type: object\n                example:\n                  id: 94682c68-e5bb-4c5c-859a-cebaa5a1e582\n                  meta: { versionId: '1', lastUpdated: '2021-09-16T02:41:53+00:00' }\n                  resourceType: Condition\n                  clinicalStatus: { coding: [{ system: 'http://terminology.hl7.org/CodeSystem/condition-clinical', code: inactive, display: Inactive }] }\n                  verificationStatus: { coding: [{ system: 'http://terminology.hl7.org/CodeSystem/condition-ver-status', code: unconfirmed, display: Unconfirmed }] }\n                  category: [{ coding: [{ system: 'http://terminology.hl7.org/CodeSystem/condition-category', code: problem-list-item, display: 'Problem List Item' }] }]\n                  code: { coding: [{ system: 'http://snomed.info/sct', code: '444814009', display: '' }] }\n                  subject: { reference: Patient/94682c62-d37e-48b5-8018-c5f6f3566609 }\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n        '404':\n          $ref: '#/components/responses/uuidnotfound'\n      security:\n        -\n          openemr_auth: []\n  /fhir/Coverage:\n    get:\n      tags:\n        - fhir\n      description: 'Returns a list of Coverage resources.'\n      parameters:\n        -\n          name: _id\n          in: query\n          description: 'The uuid for the Coverage resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: patient\n          in: query\n          description: 'The uuid for the patient.'\n          required: false\n          schema:\n            type: string\n        -\n          name: payor\n          in: query\n          description: 'The payor of the Coverage resource.'\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Standard Response'\n          content:\n            application/json:\n              schema:\n                properties:\n                  'json object': { description: 'FHIR Json object.', type: object }\n                type: object\n                example:\n                  meta: { lastUpdated: '2021-09-14T09:13:51' }\n                  resourceType: Bundle\n                  type: collection\n                  total: 0\n                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/Coverage' }]\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/fhir/Coverage/{uuid}':\n    get:\n      tags:\n        - fhir\n      description: 'Returns a single Coverage resource.'\n      parameters:\n        -\n          name: uuid\n          in: path\n          description: 'The uuid for the Coverage resource.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n        '404':\n          $ref: '#/components/responses/uuidnotfound'\n      security:\n        -\n          openemr_auth: []\n  /fhir/Device:\n    get:\n      tags:\n        - fhir\n      description: 'Returns a list of Device resources.'\n      parameters:\n        -\n          name: _id\n          in: query\n          description: 'The uuid for the Device resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: patient\n          in: query\n          description: 'The uuid for the patient.'\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Standard Response'\n          content:\n            application/json:\n              schema:\n                properties:\n                  'json object': { description: 'FHIR Json object.', type: object }\n                type: object\n                example:\n                  meta: { lastUpdated: '2021-09-14T09:13:51' }\n                  resourceType: Bundle\n                  type: collection\n                  total: 0\n                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/Device' }]\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/fhir/Device/{uuid}':\n    get:\n      tags:\n        - fhir\n      description: 'Returns a single Device resource.'\n      parameters:\n        -\n          name: uuid\n          in: path\n          description: 'The uuid for the Device resource.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Standard Response'\n          content:\n            application/json:\n              schema:\n                properties:\n                  'json object': { description: 'FHIR Json object.', type: object }\n                type: object\n                example:\n                  id: 946dce19-c80a-402c-862a-eadf3f2377f0\n                  meta: { versionId: '1', lastUpdated: '2021-09-18T19:28:59+00:00' }\n                  resourceType: Device\n                  udiCarrier: [{ deviceIdentifier: '08717648200274', carrierHRF: '=/08717648200274=,000025=A99971312345600=\u003e014032=}013032\u0026,1000000000000XYZ123' }]\n                  distinctIdentifier: A99971312345600\n                  manufactureDate: '2013-02-01'\n                  expirationDate: '2014-02-01'\n                  lotNumber: 000000000000XYZ123\n                  serialNumber: '000025'\n                  type: { extension: [{ valueCode: unknown, url: 'http://hl7.org/fhir/StructureDefinition/data-absent-reason' }] }\n                  patient: { reference: Patient/946da619-c631-431a-a282-487cd6fb7802, type: Patient }\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n        '404':\n          $ref: '#/components/responses/uuidnotfound'\n      security:\n        -\n          openemr_auth: []\n  /fhir/DiagnosticReport:\n    get:\n      tags:\n        - fhir\n      description: 'Returns a list of DiagnosticReport resources.'\n      parameters:\n        -\n          name: _id\n          in: query\n          description: 'The uuid for the DiagnosticReport resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: patient\n          in: query\n          description: 'The uuid for the patient.'\n          required: false\n          schema:\n            type: string\n        -\n          name: code\n          in: query\n          description: 'The code of the DiagnosticReport resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: category\n          in: query\n          description: 'The category of the DiagnosticReport resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: date\n          in: query\n          description: 'The datetime of the DiagnosticReport resource.'\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Standard Response'\n          content:\n            application/json:\n              schema:\n                properties:\n                  'json object': { description: 'FHIR Json object.', type: object }\n                type: object\n                example:\n                  meta: { lastUpdated: '2021-09-14T09:13:51' }\n                  resourceType: Bundle\n                  type: collection\n                  total: 0\n                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/DiagnosticReport' }]\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/fhir/DiagnosticReport/{uuid}':\n    get:\n      tags:\n        - fhir\n      description: 'Returns a single DiagnosticReport resource.'\n      parameters:\n        -\n          name: uuid\n          in: path\n          description: 'The uuid for the DiagnosticReport resource.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Standard Response'\n          content:\n            application/json:\n              schema:\n                properties:\n                  'json object': { description: 'FHIR Json object.', type: object }\n                type: object\n                example:\n                  id: 93fb2d6a-77ac-48ca-a12d-1a17e40007e3\n                  meta: { versionId: '1', lastUpdated: '2021-09-18T20:52:34+00:00' }\n                  resourceType: DiagnosticReport\n                  status: final\n                  category: [{ coding: [{ system: 'http://loinc.org', code: LP7839-6, display: Pathology }] }]\n                  code: { coding: [{ system: 'http://loinc.org', code: 11502-2, display: 'Laboratory report' }] }\n                  subject: { reference: Patient/9353b8f5-0a87-4e2a-afd4-25341fdb0fbc, type: Patient }\n                  encounter: { reference: Encounter/93540818-cb5f-49df-b73b-83901bb793b6, type: Encounter }\n                  effectiveDateTime: '2015-06-22T00:00:00+00:00'\n                  issued: '2015-06-22T00:00:00+00:00'\n                  performer: [{ reference: Organization/935249b5-0ba6-4b5b-8863-a7a27d4c6350, type: Organization }]\n                  presentedForm: [{ contentType: text/plain, data: TXMgQWxpY2UgTmV3bWFuIHdhcyB0ZXN0ZWQgZm9yIHRoZSBVcmluYW5hbHlzaXMgbWFjcm8gcGFuZWwgYW5kIHRoZSByZXN1bHRzIGhhdmUgYmVlbiBmb3VuZCB0byBiZSANCm5vcm1hbC4= }]\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n        '404':\n          $ref: '#/components/responses/uuidnotfound'\n      security:\n        -\n          openemr_auth: []\n  /fhir/DocumentReference:\n    get:\n      tags:\n        - fhir\n      description: 'Returns a list of DocumentReference resources.'\n      parameters:\n        -\n          name: _id\n          in: query\n          description: 'The uuid for the DocumentReference resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: patient\n          in: query\n          description: 'The uuid for the patient.'\n          required: false\n          schema:\n            type: string\n        -\n          name: type\n          in: query\n          description: 'The type of the DocumentReference resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: category\n          in: query\n          description: 'The category of the DocumentReference resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: date\n          in: query\n          description: 'The datetime of the DocumentReference resource.'\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Standard Response'\n          content:\n            application/json:\n              schema:\n                properties:\n                  'json object': { description: 'FHIR Json object.', type: object }\n                type: object\n                example:\n                  meta: { lastUpdated: '2021-09-14T09:13:51' }\n                  resourceType: Bundle\n                  type: collection\n                  total: 0\n                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/DocumentReference' }]\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/fhir/DocumentReference/{uuid}':\n    get:\n      tags:\n        - fhir\n      description: 'Returns a single DocumentReference resource.'\n      parameters:\n        -\n          name: uuid\n          in: path\n          description: 'The uuid for the DocumentReference resource.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Standard Response'\n          content:\n            application/json:\n              schema:\n                properties:\n                  'json object': { description: 'FHIR Json object.', type: object }\n                type: object\n                example:\n                  id: 946e7553-1aaa-49f8-8f81-ae15ccaa9165\n                  meta: { versionId: '1', lastUpdated: '2021-09-19T03:17:51+00:00' }\n                  resourceType: DocumentReference\n                  identifier: [{ value: 946e7553-1aaa-49f8-8f81-ae15ccaa9165 }]\n                  status: current\n                  type: { coding: [{ system: 'http://terminology.hl7.org/CodeSystem/v3-NullFlavor', code: UNK, display: unknown }] }\n                  category: [{ coding: [{ system: 'https://localhost:9300/apis/default/fhir/ValueSet/openemr-document-types', code: openemr-document, display: 'OpenEMR Document' }] }]\n                  subject: { reference: Patient/946da619-c631-431a-a282-487cd6fb7802, type: Patient }\n                  date: '2021-09-19T03:15:56+00:00'\n                  author: [null]\n                  content: [{ attachment: { contentType: image/gif, url: 'https://localhost:9300/apis/default/fhir/Document/7/Binary' }, format: { system: 'http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem', code: 'urn:ihe:iti:xds:2017:mimeTypeSufficient', display: 'mimeType Sufficient' } }]\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n        '404':\n          $ref: '#/components/responses/uuidnotfound'\n      security:\n        -\n          openemr_auth: []\n  '/fhir/Document/{id}/Binary':\n    get:\n      tags:\n        - fhir\n      description: 'THIS ENDPOINT DOCUMENTATION IS UNDER CONSTRUCTION.'\n      parameters:\n        -\n          name: id\n          in: path\n          description: 'The id for the Document.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  /fhir/Encounter:\n    get:\n      tags:\n        - fhir\n      description: 'Returns a list of Encounter resources.'\n      parameters:\n        -\n          name: _id\n          in: query\n          description: 'The uuid for the Encounter resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: patient\n          in: query\n          description: 'The uuid for the patient.'\n          required: false\n          schema:\n            type: string\n        -\n          name: date\n          in: query\n          description: 'The datetime of the Encounter resource.'\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Standard Response'\n          content:\n            application/json:\n              schema:\n                properties:\n                  'json object': { description: 'FHIR Json object.', type: object }\n                type: object\n                example:\n                  meta: { lastUpdated: '2021-09-14T09:13:51' }\n                  resourceType: Bundle\n                  type: collection\n                  total: 0\n                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/Encounter' }]\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/fhir/Encounter/{uuid}':\n    get:\n      tags:\n        - fhir\n      description: 'Returns a single Encounter resource.'\n      parameters:\n        -\n          name: uuid\n          in: path\n          description: 'The uuid for the Encounter resource.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Standard Response'\n          content:\n            application/json:\n              schema:\n                properties:\n                  'json object': { description: 'FHIR Json object.', type: object }\n                type: object\n                example:\n                  id: 946da61d-6b95-4f8e-abe5-534a25913b71\n                  meta: { versionId: '1', lastUpdated: '2021-09-19T06:27:41+00:00' }\n                  resourceType: Encounter\n                  identifier: [{ system: 'urn:ietf:rfc:3986', value: 946da61d-6b95-4f8e-abe5-534a25913b71 }]\n                  status: finished\n                  class: { system: 'http://terminology.hl7.org/CodeSystem/v3-ActCode', code: AMB, display: ambulatory }\n                  type: [{ coding: [{ system: 'http://snomed.info/sct', code: '185349003', display: 'Encounter for check up (procedure)' }] }]\n                  subject: { reference: Patient/946da61b-626b-4f88-81e2-adfb88f4f0fe, type: Patient }\n                  participant: [{ type: [{ coding: [{ system: 'http://terminology.hl7.org/CodeSystem/v3-ParticipationType', code: PPRF, display: 'Primary Performer' }] }], period: { start: '2012-08-13T00:00:00+00:00' }, individual: { reference: Practitioner/946da61d-ac5f-4fdc-b3f2-7b58dc49976b, type: Practitioner } }]\n                  period: { start: '2012-08-13T00:00:00+00:00' }\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n        '404':\n          $ref: '#/components/responses/uuidnotfound'\n      security:\n        -\n          openemr_auth: []\n  /fhir/Goal:\n    get:\n      tags:\n        - fhir\n      description: 'Returns a list of Condition resources.'\n      parameters:\n        -\n          name: _id\n          in: query\n          description: 'The uuid for the Goal resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: patient\n          in: query\n          description: 'The uuid for the patient.'\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Standard Response'\n          content:\n            application/json:\n              schema:\n                properties:\n                  'json object': { description: 'FHIR Json object.', type: object }\n                type: object\n                example:\n                  meta: { lastUpdated: '2021-09-14T09:13:51' }\n                  resourceType: Bundle\n                  type: collection\n                  total: 0\n                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/Goal' }]\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/fhir/Goal/{uuid}':\n    get:\n      tags:\n        - fhir\n      description: 'Returns a single Goal resource.'\n      parameters:\n        -\n          name: uuid\n          in: path\n          description: 'The uuid for the Goal resource.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Standard Response'\n          content:\n            application/json:\n              schema:\n                properties:\n                  'json object': { description: 'FHIR Json object.', type: object }\n                type: object\n                example:\n                  id: 946da61d-6b88-4d54-bdd6-4029e2ad9e3f_1\n                  meta: { versionId: '1', lastUpdated: '2021-09-19T06:45:58+00:00' }\n                  resourceType: Goal\n                  lifecycleStatus: active\n                  description: { text: 'Eating more vegetables.' }\n                  subject: { reference: Patient/946da619-c631-431a-a282-487cd6fb7802, type: Patient }\n                  target: [{ measure: { extension: [{ valueCode: unknown, url: 'http://hl7.org/fhir/StructureDefinition/data-absent-reason' }] }, detailString: 'Eating more vegetables.', dueDate: '2021-09-09' }]\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n        '404':\n          $ref: '#/components/responses/uuidnotfound'\n      security:\n        -\n          openemr_auth: []\n  /fhir/Group:\n    get:\n      tags:\n        - fhir\n      description: 'Returns a list of Group resources.'\n      parameters:\n        -\n          name: _id\n          in: query\n          description: 'The uuid for the Group resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: patient\n          in: query\n          description: 'The uuid for the patient.'\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Standard Response'\n          content:\n            application/json:\n              schema:\n                properties:\n                  'json object': { description: 'FHIR Json object.', type: object }\n                type: object\n                example:\n                  meta: { lastUpdated: '2021-09-14T09:13:51' }\n                  resourceType: Bundle\n                  type: collection\n                  total: 0\n                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/Group' }]\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/fhir/Group/{uuid}':\n    get:\n      tags:\n        - fhir\n      description: 'Returns a single Group resource.'\n      parameters:\n        -\n          name: uuid\n          in: path\n          description: 'The uuid for the Group resource.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n        '404':\n          $ref: '#/components/responses/uuidnotfound'\n      security:\n        -\n          openemr_auth: []\n  '/fhir/Group/{id}/$export':\n    get:\n      tags:\n        - fhir\n      description: 'THIS ENDPOINT DOCUMENTATION IS UNDER CONSTRUCTION.'\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  /fhir/Immunization:\n    get:\n      tags:\n        - fhir\n      description: 'Returns a list of Immunization resources.'\n      parameters:\n        -\n          name: _id\n          in: query\n          description: 'The uuid for the Immunization resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: patient\n          in: query\n          description: 'The uuid for the patient.'\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Standard Response'\n          content:\n            application/json:\n              schema:\n                properties:\n                  'json object': { description: 'FHIR Json object.', type: object }\n                type: object\n                example:\n                  meta: { lastUpdated: '2021-09-14T09:13:51' }\n                  resourceType: Bundle\n                  type: collection\n                  total: 0\n                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/Immunization' }]\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/fhir/Immunization/{uuid}':\n    get:\n      tags:\n        - fhir\n      description: 'Returns a single Immunization resource.'\n      parameters:\n        -\n          name: uuid\n          in: path\n          description: 'The uuid for the Immunization resource.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n        '404':\n          $ref: '#/components/responses/uuidnotfound'\n      security:\n        -\n          openemr_auth: []\n  /fhir/Location:\n    get:\n      tags:\n        - fhir\n      description: 'Returns a list of Location resources.'\n      parameters:\n        -\n          name: _id\n          in: query\n          description: 'The uuid for the Location resource.'\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Standard Response'\n          content:\n            application/json:\n              schema:\n                properties:\n                  'json object': { description: 'FHIR Json object.', type: object }\n                type: object\n                example:\n                  meta: { lastUpdated: '2021-09-14T09:13:51' }\n                  resourceType: Bundle\n                  type: collection\n                  total: 0\n                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/Location' }]\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/fhir/Location/{uuid}':\n    get:\n      tags:\n        - fhir\n      description: 'Returns a single Location resource.'\n      parameters:\n        -\n          name: uuid\n          in: path\n          description: 'The uuid for the Location resource.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Standard Response'\n          content:\n            application/json:\n              schema:\n                properties:\n                  'json object': { description: 'FHIR Json object.', type: object }\n                type: object\n                example:\n                  id: 946da61d-c4f2-4f03-a2a7-b571f6a24b65\n                  meta: { versionId: '1', lastUpdated: '2021-09-19T08:14:58+00:00' }\n                  resourceType: Location\n                  status: active\n                  name: 'Your Clinic Name Here'\n                  telecom: [{ system: phone, value: 000-000-0000 }, { system: fax, value: 000-000-0000 }]\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n        '404':\n          $ref: '#/components/responses/uuidnotfound'\n      security:\n        -\n          openemr_auth: []\n  /fhir/Medication:\n    get:\n      tags:\n        - fhir\n      description: 'Returns a list of Medication resources.'\n      responses:\n        '200':\n          description: 'Standard Response'\n          content:\n            application/json:\n              schema:\n                properties:\n                  'json object': { description: 'FHIR Json object.', type: object }\n                type: object\n                example:\n                  meta: { lastUpdated: '2021-09-14T09:13:51' }\n                  resourceType: Bundle\n                  type: collection\n                  total: 0\n                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/Medication' }]\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/fhir/Medication/{uuid}':\n    get:\n      tags:\n        - fhir\n      description: 'Returns a single Medication resource.'\n      parameters:\n        -\n          name: uuid\n          in: path\n          description: 'The uuid for the Medication resource.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n        '404':\n          $ref: '#/components/responses/uuidnotfound'\n      security:\n        -\n          openemr_auth: []\n  /fhir/MedicationRequest:\n    get:\n      tags:\n        - fhir\n      description: 'Returns a list of MedicationRequest resources.'\n      parameters:\n        -\n          name: _id\n          in: query\n          description: 'The uuid for the MedicationRequest resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: patient\n          in: query\n          description: 'The uuid for the patient.'\n          required: false\n          schema:\n            type: string\n        -\n          name: intent\n          in: query\n          description: 'The intent of the MedicationRequest resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: status\n          in: query\n          description: 'The status of the MedicationRequest resource.'\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Standard Response'\n          content:\n            application/json:\n              schema:\n                properties:\n                  'json object': { description: 'FHIR Json object.', type: object }\n                type: object\n                example:\n                  meta: { lastUpdated: '2021-09-14T09:13:51' }\n                  resourceType: Bundle\n                  type: collection\n                  total: 0\n                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/MedicationRequest' }]\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/fhir/MedicationRequest/{uuid}':\n    get:\n      tags:\n        - fhir\n      description: 'Returns a single MedicationRequest resource.'\n      parameters:\n        -\n          name: uuid\n          in: path\n          description: 'The uuid for the MedicationRequest resource.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Standard Response'\n          content:\n            application/json:\n              schema:\n                properties:\n                  'json object': { description: 'FHIR Json object.', type: object }\n                type: object\n                example:\n                  id: 946da61d-9cff-4416-8d27-805f19f9d7d8\n                  meta: { versionId: '1', lastUpdated: '2021-09-20T04:03:14+00:00' }\n                  resourceType: MedicationRequest\n                  status: active\n                  intent: order\n                  category: [{ coding: [{ system: 'http://terminology.hl7.org/CodeSystem/medicationrequest-category', code: community, display: Home/Community }] }]\n                  reportedBoolean: false\n                  medicationCodeableConcept: { coding: [{ system: 'http://www.nlm.nih.gov/research/umls/rxnorm', code: '1738139', display: 'Acetaminophen 325 MG Oral Tablet' }] }\n                  subject: { reference: Patient/946da617-1a4a-4b2c-ae66-93b84377cb1e, type: Patient }\n                  authoredOn: '2021-09-18T00:00:00+00:00'\n                  requester: { reference: Practitioner/946da61d-ac5f-4fdc-b3f2-7b58dc49976b, type: Practitioner }\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n        '404':\n          $ref: '#/components/responses/uuidnotfound'\n      security:\n        -\n          openemr_auth: []\n  /fhir/Observation:\n    get:\n      tags:\n        - fhir\n      description: 'Returns a list of Observation resources.'\n      parameters:\n        -\n          name: _id\n          in: query\n          description: 'The uuid for the Observation resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: patient\n          in: query\n          description: 'The uuid for the patient.'\n          required: false\n          schema:\n            type: string\n        -\n          name: code\n          in: query\n          description: 'The code of the Observation resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: category\n          in: query\n          description: 'The category of the Observation resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: date\n          in: query\n          description: 'The datetime of the Observation resource.'\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Standard Response'\n          content:\n            application/json:\n              schema:\n                properties:\n                  'json object': { description: 'FHIR Json object.', type: object }\n                type: object\n                example:\n                  meta: { lastUpdated: '2021-09-14T09:13:51' }\n                  resourceType: Bundle\n                  type: collection\n                  total: 0\n                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/Observation' }]\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/fhir/Observation/{uuid}':\n    get:\n      tags:\n        - fhir\n      description: 'Returns a single Observation resource.'\n      parameters:\n        -\n          name: uuid\n          in: path\n          description: 'The uuid for the Observation resource.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Standard Response'\n          content:\n            application/json:\n              schema:\n                properties:\n                  'json object': { description: 'FHIR Json object.', type: object }\n                type: object\n                example:\n                  id: 946da61e-0597-485e-9dfd-a87205ea56b3\n                  meta: { versionId: '1', lastUpdated: '2021-09-20T04:12:16+00:00' }\n                  resourceType: Observation\n                  status: final\n                  category: [{ coding: [{ system: 'http://terminology.hl7.org/CodeSystem/observation-category', code: vital-signs }] }]\n                  code: { coding: [{ system: 'http://loinc.org', code: 85354-9, display: 'Blood pressure systolic and diastolic' }] }\n                  subject: { reference: Patient/946da619-c631-431a-a282-487cd6fb7802, type: Patient }\n                  effectiveDateTime: '2015-08-31T00:00:00+00:00'\n                  component: [{ code: { coding: [{ system: 'http://loinc.org', code: 8480-6, display: 'Systolic blood pressure' }] }, valueQuantity: { value: 122, unit: 'mm[Hg]', system: 'http://unitsofmeasure.org', code: 'mm[Hg]' } }, { code: { coding: [{ system: 'http://loinc.org', code: 8462-4, display: 'Diastolic blood pressure' }] }, valueQuantity: { value: 77, unit: 'mm[Hg]', system: 'http://unitsofmeasure.org', code: 'mm[Hg]' } }]\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n        '404':\n          $ref: '#/components/responses/uuidnotfound'\n      security:\n        -\n          openemr_auth: []\n  /fhir/Organization:\n    get:\n      tags:\n        - fhir\n      description: 'Returns a list of Organization resources.'\n      parameters:\n        -\n          name: _id\n          in: query\n          description: 'The uuid for the Organization resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: name\n          in: query\n          description: 'The name of the Organization resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: email\n          in: query\n          description: 'The email of the Organization resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: phone\n          in: query\n          description: 'The phone of the Organization resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: telecom\n          in: query\n          description: 'The telecom of the Organization resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: address\n          in: query\n          description: 'The address of the Organization resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: address-city\n          in: query\n          description: 'The address-city of the Organization resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: address-postalcode\n          in: query\n          description: 'The address-postalcode of the Organization resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: address-state\n          in: query\n          description: 'The address-state of the Organization resource.'\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Standard Response'\n          content:\n            application/json:\n              schema:\n                properties:\n                  'json object': { description: 'FHIR Json object.', type: object }\n                type: object\n                example:\n                  meta: { lastUpdated: '2021-09-14T09:13:51' }\n                  resourceType: Bundle\n                  type: collection\n                  total: 0\n                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/Organization' }]\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n    post:\n      tags:\n        - fhir\n      description: 'Adds a Organization resource.'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              description: 'The json object for the Organization resource.'\n              type: object\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/fhir/Organization/{uuid}':\n    get:\n      tags:\n        - fhir\n      description: 'Returns a single Organization resource.'\n      parameters:\n        -\n          name: uuid\n          in: path\n          description: 'The uuid for the Organization resource.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Standard Response'\n          content:\n            application/json:\n              schema:\n                properties:\n                  'json object': { description: 'FHIR Json object.', type: object }\n                type: object\n                example:\n                  id: 946da616-fae2-409d-b24d-56425bfb3316\n                  meta: { versionId: '1', lastUpdated: '2021-09-21T16:47:36+00:00' }\n                  resourceType: Organization\n                  text: { status: generated, div: '\u003cdiv xmlns=\"http://www.w3.org/1999/xhtml\"\u003e \u003cp\u003eYour Clinic Name Here\u003c/p\u003e\u003c/div\u003e' }\n                  active: true\n                  type: [{ coding: [{ system: 'http://terminology.hl7.org/CodeSystem/organization-type', code: prov, display: 'Healthcare Provider' }] }]\n                  name: 'Your Clinic Name Here'\n                  telecom: [{ system: phone, value: 000-000-0000, use: work }, { system: fax, value: 000-000-0000, use: work }]\n                  address: [null]\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n        '404':\n          $ref: '#/components/responses/uuidnotfound'\n      security:\n        -\n          openemr_auth: []\n    put:\n      tags:\n        - fhir\n      description: 'Modifies a Organization resource.'\n      parameters:\n        -\n          name: uuid\n          in: path\n          description: 'The uuid for the organization.'\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              description: 'The json object for the Organization resource.'\n              type: object\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  /fhir/Patient:\n    get:\n      tags:\n        - fhir\n      description: 'Returns a list of Patient resources.'\n      parameters:\n        -\n          name: _id\n          in: query\n          description: 'The uuid for the Patient resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: identifier\n          in: query\n          description: 'The identifier of the Patient resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: name\n          in: query\n          description: 'The name of the Patient resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: birthdate\n          in: query\n          description: 'The birthdate of the Patient resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: gender\n          in: query\n          description: 'The gender of the Patient resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: address\n          in: query\n          description: 'The address of the Patient resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: address-city\n          in: query\n          description: 'The address-city of the Patient resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: address-postalcode\n          in: query\n          description: 'The address-postalcode of the Patient resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: address-state\n          in: query\n          description: 'The address-state of the Patient resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: email\n          in: query\n          description: 'The email of the Patient resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: family\n          in: query\n          description: 'The family name of the Patient resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: given\n          in: query\n          description: 'The given name of the Patient resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: phone\n          in: query\n          description: 'The phone number of the Patient resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: telecom\n          in: query\n          description: 'The fax number of the Patient resource.'\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Standard Response'\n          content:\n            application/json:\n              schema:\n                properties:\n                  'json object': { description: 'FHIR Json object.', type: object }\n                type: object\n                example:\n                  meta: { lastUpdated: '2021-09-14T09:13:51' }\n                  resourceType: Bundle\n                  type: collection\n                  total: 0\n                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/Patient' }]\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n    post:\n      tags:\n        - fhir\n      description: 'Adds a Patient resource.'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              description: 'The json object for the Patient resource.'\n              type: object\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/fhir/Patient/{uuid}':\n    get:\n      tags:\n        - fhir\n      description: 'Returns a single Patient resource.'\n      parameters:\n        -\n          name: uuid\n          in: path\n          description: 'The uuid for the Patient resource.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Standard Response'\n          content:\n            application/json:\n              schema:\n                properties:\n                  'json object': { description: 'FHIR Json object.', type: object }\n                type: object\n                example:\n                  id: 946da617-1a4a-4b2c-ae66-93b84377cb1e\n                  meta: { versionId: '1', lastUpdated: '2021-09-21T17:08:03+00:00' }\n                  resourceType: Patient\n                  text: { status: generated, div: '\u003cdiv xmlns=\"http://www.w3.org/1999/xhtml\"\u003e \u003cp\u003eAurore252 Von197\u003c/p\u003e\u003c/div\u003e' }\n                  extension: [{ valueCode: F, url: 'http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex' }, { extension: [{ valueCoding: { system: 'urn:oid:2.16.840.1.113883.6.238', code: 1006-6, display: Abenaki }, url: ombCategory }, { valueString: Abenaki, url: text }], url: 'http://hl7.org/fhir/us/core/StructureDefinition/us-core-race' }, { extension: [{ valueString: 'Declined To Specify', url: text }], url: 'http://hl7.org/fhir/us/core/StructureDefinition/us-core-ethnicity' }]\n                  identifier: [{ use: official, type: { coding: [{ system: 'http://terminology.hl7.org/CodeSystem/v2-0203', code: PT }] }, system: 'http://terminology.hl7.org/CodeSystem/v2-0203', value: '1' }]\n                  active: true\n                  name: [{ use: official, family: Von197, given: [Aurore252] }]\n                  gender: female\n                  birthDate: '1970-07-03'\n                  address: [{ line: ['245 Crona Wall'], city: Boston, state: Massachusetts, postalCode: '02215', period: { start: '2020-09-21T17:08:03.532+00:00' } }]\n                  communication: [{ language: { coding: [{ system: 'http://terminology.hl7.org/CodeSystem/data-absent-reason', code: unknown, display: Unknown }] } }]\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n        '404':\n          $ref: '#/components/responses/uuidnotfound'\n      security:\n        -\n          openemr_auth: []\n    put:\n      tags:\n        - fhir\n      description: 'Modifies a Patient resource.'\n      parameters:\n        -\n          name: uuid\n          in: path\n          description: 'The uuid for the Patient resource.'\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              description: 'The json object for the Patient resource.'\n              type: object\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  /fhir/Patient/$export:\n    get:\n      tags:\n        - fhir\n      description: 'THIS ENDPOINT DOCUMENTATION IS UNDER CONSTRUCTION.'\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  /fhir/Person:\n    get:\n      tags:\n        - fhir\n      description: 'Returns a list of Person resources.'\n      parameters:\n        -\n          name: name\n          in: query\n          description: 'The name of the Person resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: active\n          in: query\n          description: 'The active status of the Person resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: address\n          in: query\n          description: 'The address of the Person resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: address-city\n          in: query\n          description: 'The address-city of the Person resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: address-postalcode\n          in: query\n          description: 'The address-postalcode of the Person resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: address-state\n          in: query\n          description: 'The address-state of the Person resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: email\n          in: query\n          description: 'The email of the Person resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: family\n          in: query\n          description: 'The family name of the Person resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: given\n          in: query\n          description: 'The given name of the Person resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: phone\n          in: query\n          description: 'The phone number of the Person resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: telecom\n          in: query\n          description: 'The fax number of the Person resource.'\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Standard Response'\n          content:\n            application/json:\n              schema:\n                properties:\n                  'json object': { description: 'FHIR Json object.', type: object }\n                type: object\n                example:\n                  meta: { lastUpdated: '2021-09-14T09:13:51' }\n                  resourceType: Bundle\n                  type: collection\n                  total: 0\n                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/Person' }]\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/fhir/Person/{uuid}':\n    get:\n      tags:\n        - fhir\n      description: 'Returns a single Person resource.'\n      parameters:\n        -\n          name: uuid\n          in: path\n          description: 'The uuid for the Person resource.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n        '404':\n          $ref: '#/components/responses/uuidnotfound'\n      security:\n        -\n          openemr_auth: []\n  /fhir/Practitioner:\n    get:\n      tags:\n        - fhir\n      description: 'Returns a list of Practitioner resources.'\n      parameters:\n        -\n          name: _id\n          in: query\n          description: 'The uuid for the Practitioner resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: name\n          in: query\n          description: 'The name of the Practitioner resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: active\n          in: query\n          description: 'The active status of the Practitioner resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: address\n          in: query\n          description: 'The address of the Practitioner resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: address-city\n          in: query\n          description: 'The address-city of the Practitioner resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: address-postalcode\n          in: query\n          description: 'The address-postalcode of the Practitioner resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: address-state\n          in: query\n          description: 'The address-state of the Practitioner resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: email\n          in: query\n          description: 'The email of the Practitioner resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: family\n          in: query\n          description: 'The family name of the Practitioner resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: given\n          in: query\n          description: 'The given name of the Practitioner resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: phone\n          in: query\n          description: 'The phone number of the Practitioner resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: telecom\n          in: query\n          description: 'The fax number of the Practitioner resource.'\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Standard Response'\n          content:\n            application/json:\n              schema:\n                properties:\n                  'json object': { description: 'FHIR Json object.', type: object }\n                type: object\n                example:\n                  meta: { lastUpdated: '2021-09-14T09:13:51' }\n                  resourceType: Bundle\n                  type: collection\n                  total: 0\n                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/Practitioner' }]\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n    post:\n      tags:\n        - fhir\n      description: 'Adds a Practitioner resources.'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              description: 'The json object for the Practitioner resource.'\n              type: object\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/fhir/Practitioner/{uuid}':\n    get:\n      tags:\n        - fhir\n      description: 'Returns a single Practitioner resource.'\n      parameters:\n        -\n          name: uuid\n          in: path\n          description: 'The uuid for the Practitioner resource.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Standard Response'\n          content:\n            application/json:\n              schema:\n                properties:\n                  'json object': { description: 'FHIR Json object.', type: object }\n                type: object\n                example:\n                  id: 9473b0cf-e969-4eaa-8044-51037767fa4f\n                  meta: { versionId: '1', lastUpdated: '2021-09-21T17:41:57+00:00' }\n                  resourceType: Practitioner\n                  text: { status: generated, div: '\u003cdiv xmlns=\"http://www.w3.org/1999/xhtml\"\u003e \u003cp\u003eBilly Smith\u003c/p\u003e\u003c/div\u003e' }\n                  identifier: [{ system: 'http://hl7.org/fhir/sid/us-npi', value: '11223344554543' }]\n                  active: true\n                  name: [{ use: official, family: Smith, given: [Billy] }]\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n        '404':\n          $ref: '#/components/responses/uuidnotfound'\n      security:\n        -\n          openemr_auth: []\n    put:\n      tags:\n        - fhir\n      description: 'Modify a Practitioner resource.'\n      parameters:\n        -\n          name: uuid\n          in: path\n          description: 'The uuid for the Practitioner resource.'\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              description: 'The json object for the Practitioner resource.'\n              type: object\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  /fhir/PractitionerRole:\n    get:\n      tags:\n        - fhir\n      description: 'Returns a list of PractitionerRole resources.'\n      parameters:\n        -\n          name: specialty\n          in: query\n          description: 'The specialty of the PractitionerRole resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: practitioner\n          in: query\n          description: 'The practitioner of the PractitionerRole resource.'\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Standard Response'\n          content:\n            application/json:\n              schema:\n                properties:\n                  'json object': { description: 'FHIR Json object.', type: object }\n                type: object\n                example:\n                  meta: { lastUpdated: '2021-09-14T09:13:51' }\n                  resourceType: Bundle\n                  type: collection\n                  total: 0\n                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/PractitionerRole' }]\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/fhir/PractitionerRole/{uuid}':\n    get:\n      tags:\n        - fhir\n      description: 'Returns a single PractitionerRole resource.'\n      parameters:\n        -\n          name: uuid\n          in: path\n          description: 'The uuid for the PractitionerRole resource.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n        '404':\n          $ref: '#/components/responses/uuidnotfound'\n      security:\n        -\n          openemr_auth: []\n  /fhir/Procedure:\n    get:\n      tags:\n        - fhir\n      description: 'Returns a list of Procedure resources.'\n      parameters:\n        -\n          name: _id\n          in: query\n          description: 'The uuid for the Procedure resource.'\n          required: false\n          schema:\n            type: string\n        -\n          name: patient\n          in: query\n          description: 'The uuid for the patient.'\n          required: false\n          schema:\n            type: string\n        -\n          name: date\n          in: query\n          description: 'The datetime of the Procedure resource.'\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Standard Response'\n          content:\n            application/json:\n              schema:\n                properties:\n                  'json object': { description: 'FHIR Json object.', type: object }\n                type: object\n                example:\n                  meta: { lastUpdated: '2021-09-14T09:13:51' }\n                  resourceType: Bundle\n                  type: collection\n                  total: 0\n                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/Procedure' }]\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/fhir/Procedure/{uuid}':\n    get:\n      tags:\n        - fhir\n      description: 'Returns a single Procedure resource.'\n      parameters:\n        -\n          name: uuid\n          in: path\n          description: 'The uuid for the Procedure resource.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n        '404':\n          $ref: '#/components/responses/uuidnotfound'\n      security:\n        -\n          openemr_auth: []\n  '/fhir/Provenance/{uuid}':\n    get:\n      tags:\n        - fhir\n      description: 'Returns a single Provenance resource.'\n      parameters:\n        -\n          name: uuid\n          in: path\n          description: 'The uuid for the Provenance resource.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n        '404':\n          $ref: '#/components/responses/uuidnotfound'\n      security:\n        -\n          openemr_auth: []\n  /fhir/Provenance:\n    get:\n      tags:\n        - fhir\n      description: 'Returns a list of Provenance resources.'\n      parameters:\n        -\n          name: _id\n          in: query\n          description: 'The uuid for the Provenance resource.'\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Standard Response'\n          content:\n            application/json:\n              schema:\n                properties:\n                  'json object': { description: 'FHIR Json object.', type: object }\n                type: object\n                example:\n                  meta: { lastUpdated: '2021-09-14T09:13:51' }\n                  resourceType: Bundle\n                  type: collection\n                  total: 0\n                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/Provenance' }]\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  /fhir/metadata:\n    get:\n      tags:\n        - fhir\n      description: 'Returns metadata (ie. CapabilityStatement resource) of the fhir server.'\n      responses:\n        '200':\n          description: 'Return CapabilityStatement resource of the fhir server'\n  /fhir/.well-known/smart-configuration:\n    get:\n      tags:\n        - fhir\n      description: 'Returns smart configuration of the fhir server.'\n      responses:\n        '200':\n          description: 'Return smart configuration of the fhir server'\n  /fhir/$export:\n    get:\n      tags:\n        - fhir\n      description: 'THIS ENDPOINT DOCUMENTATION IS UNDER CONSTRUCTION.'\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  /fhir/$bulkdata-status:\n    get:\n      tags:\n        - fhir\n      description: 'THIS ENDPOINT DOCUMENTATION IS UNDER CONSTRUCTION.'\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n    delete:\n      tags:\n        - fhir\n      description: 'THIS ENDPOINT DOCUMENTATION IS UNDER CONSTRUCTION.'\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  /portal/patient:\n    get:\n      tags:\n        - standard-patient\n      description: 'Returns the patient.'\n      responses:\n        '200':\n          description: 'Standard response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/api_patient_response'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  /portal/patient/encounter:\n    get:\n      tags:\n        - standard-patient\n      description: 'Returns encounters for the patient.'\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\n  '/portal/patient/encounter/{euuid}':\n    get:\n      tags:\n        - standard-patient\n      description: 'Returns a selected encounter by its uuid.'\n      parameters:\n        -\n          name: euuid\n          in: path\n          description: 'The uuid for the encounter.'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/standard'\n        '400':\n          $ref: '#/components/responses/badrequest'\n        '401':\n          $ref: '#/components/responses/unauthorized'\n      security:\n        -\n          openemr_auth: []\ncomponents:\n  schemas:\n    api_patient_request:\n      description: 'Schema for the patient request'\n      required:\n        - fname\n        - lname\n        - DOB\n        - sex\n      properties:\n        title:\n          description: 'The title of patient.'\n          type: string\n        fname:\n          description: 'The fname of patient.'\n          type: string\n        mname:\n          description: 'The mname of patient.'\n          type: string\n        lname:\n          description: 'The lname of patient.'\n          type: string\n        street:\n          description: 'The street address of patient.'\n          type: string\n        postal_code:\n          description: 'The postal code of patient.'\n          type: string\n        city:\n          description: 'The city of patient.'\n          type: string\n        state:\n          description: 'The state of patient.'\n          type: string\n        country_code:\n          description: 'The country code of patient.'\n          type: string\n        phone_contact:\n          description: 'The phone contact of patient.'\n          type: string\n        DOB:\n          description: 'The DOB of patient.'\n          type: string\n        sex:\n          description: 'The lname of patient.'\n          type: string\n        race:\n          description: 'The race of patient.'\n          type: string\n        ethnicity:\n          description: 'The ethnicity of patient.'\n          type: string\n      type: object\n      example:\n        title: Mr\n        fname: Foo\n        mname: ''\n        lname: Bar\n        street: '456 Tree Lane'\n        postal_code: '08642'\n        city: FooTown\n        state: FL\n        country_code: US\n        phone_contact: 123-456-7890\n        DOB: '1992-02-02'\n        sex: Male\n        race: ''\n        ethnicity: ''\n    api_patient_response:\n      description: 'Schema for the patient response'\n      properties:\n        validationErrors:\n          description: 'Validation errors.'\n          type: array\n          items:\n            type: object\n        internalErrors:\n          description: 'Internal errors.'\n          type: array\n          items:\n            type: object\n        data:\n          description: 'Returned data.'\n          type: array\n          items:\n            properties:\n              id:\n                description: 'patient id'\n                type: string\n              pid:\n                description: 'patient pid'\n                type: string\n              pubpid:\n                description: 'patient public id'\n                type: string\n              title:\n                description: 'patient title'\n                type: string\n              fname:\n                description: 'patient first name'\n                type: string\n              mname:\n                description: 'patient middle name'\n                type: string\n              lname:\n                description: 'patient last name'\n                type: string\n              ss:\n                description: 'patient social security number'\n                type: string\n              street:\n                description: 'patient street address'\n                type: string\n              postal_code:\n                description: 'patient postal code'\n                type: string\n              city:\n                description: 'patient city'\n                type: string\n              state:\n                description: 'patient state'\n                type: string\n              county:\n                description: 'patient county'\n                type: string\n              country_code:\n                description: 'patient country code'\n                type: string\n              drivers_license:\n                description: 'patient drivers license id'\n                type: string\n              contact_relationship:\n                description: 'patient contact relationship'\n                type: string\n              phone_contact:\n                description: 'patient phone contact'\n                type: string\n              phone_home:\n                description: 'patient home phone'\n                type: string\n              phone_biz:\n                description: 'patient work phone'\n                type: string\n              phone_cell:\n                description: 'patient mobile phone'\n                type: string\n              email:\n                description: 'patient email'\n                type: string\n              DOB:\n                description: 'patient DOB'\n                type: string\n              sex:\n                description: 'patient sex (gender)'\n                type: string\n              race:\n                description: 'patient race'\n                type: string\n              ethnicity:\n                description: 'patient ethnicity'\n                type: string\n              status:\n                description: 'patient status'\n                type: string\n            type: object\n      type: object\n      example:\n        validationErrors: []\n        error_description: []\n        data:\n          id: '193'\n          pid: '1'\n          pubpid: ''\n          title: Mr\n          fname: Baz\n          mname: ''\n          lname: Bop\n          ss: ''\n          street: '456 Tree Lane'\n          postal_code: '08642'\n          city: FooTown\n          state: FL\n          county: ''\n          country_code: US\n          drivers_license: ''\n          contact_relationship: ''\n          phone_contact: 123-456-7890\n          phone_home: ''\n          phone_biz: ''\n          phone_cell: ''\n          email: ''\n          DOB: '1992-02-03'\n          sex: Male\n          race: ''\n          ethnicity: ''\n          status: ''\n    api_encounter_request:\n      description: 'Schema for the encounter request'\n      required:\n        - pc_catid\n        - class_code\n      properties:\n        date:\n          description: 'The date of encounter.'\n          type: string\n        onset_date:\n          description: 'The onset date of encounter.'\n          type: string\n        reason:\n          description: 'The reason of encounter.'\n          type: string\n        facility:\n          description: 'The facility of encounter.'\n          type: string\n        pc_catid:\n          description: 'The pc_catid of encounter.'\n          type: string\n        facility_id:\n          description: 'The facility id of encounter.'\n          type: string\n        billing_facility:\n          description: 'The billing facility id of encounter.'\n          type: string\n        sensitivity:\n          description: 'The sensitivity of encounter.'\n          type: string\n        referral_source:\n          description: 'The referral source of encounter.'\n          type: string\n        pos_code:\n          description: 'The pos_code of encounter.'\n          type: string\n        external_id:\n          description: 'The external id of encounter.'\n          type: string\n        provider_id:\n          description: 'The provider id of encounter.'\n          type: string\n        class_code:\n          description: 'The class_code of encounter.'\n          type: string\n      type: object\n      example:\n        date: '2020-11-10'\n        onset_date: ''\n        reason: 'Pregnancy Test'\n        facility: 'Owerri General Hospital'\n        pc_catid: '5'\n        facility_id: '3'\n        billing_facility: '3'\n        sensitivity: normal\n        referral_source: ''\n        pos_code: '0'\n        external_id: ''\n        provider_id: '1'\n        class_code: AMB\n    api_encounter_response:\n      description: 'Schema for the encounter response'\n      properties:\n        validationErrors:\n          description: 'Validation errors.'\n          type: array\n          items:\n            type: object\n        internalErrors:\n          description: 'Internal errors.'\n          type: array\n          items:\n            type: object\n        data:\n          description: 'Returned data.'\n          type: array\n          items:\n            properties:\n              id:\n                description: 'encounter id'\n                type: string\n              uuid:\n                description: 'encounter uuid'\n                type: string\n              date:\n                description: 'encounter date'\n                type: string\n              reason:\n                description: 'encounter reason'\n                type: string\n              facility:\n                description: 'encounter facility name'\n                type: string\n              facility_id:\n                description: 'encounter facility id name'\n                type: string\n              pid:\n                description: 'encounter for patient pid'\n                type: string\n              onset_date:\n                description: 'encounter onset date'\n                type: string\n              sensitivity:\n                description: 'encounter sensitivity'\n                type: string\n              billing_note:\n                description: 'encounter billing note'\n                type: string\n              pc_catid:\n                description: 'encounter pc_catid'\n                type: string\n              last_level_billed:\n                description: 'encounter last_level_billed'\n                type: string\n              last_level_closed:\n                description: 'encounter last_level_closed'\n                type: string\n              last_stmt_date:\n                description: 'encounter last_stmt_date'\n                type: string\n              stmt_count:\n                description: 'encounter stmt_count'\n                type: string\n              provider_id:\n                description: 'provider id'\n                type: string\n              supervisor_id:\n                description: 'encounter supervisor id'\n                type: string\n              invoice_refno:\n                description: 'encounter invoice_refno'\n                type: string\n              referral_source:\n                description: 'encounter referral source'\n                type: string\n              billing_facility:\n                description: 'encounter billing facility id'\n                type: string\n              external_id:\n                description: 'encounter external id'\n                type: string\n              pos_code:\n                description: 'encounter pos_code'\n                type: string\n              class_code:\n                description: 'encounter class_code'\n                type: string\n              class_title:\n                description: 'encounter class_title'\n                type: string\n              pc_catname:\n                description: 'encounter pc_catname'\n                type: string\n              billing_facility_name:\n                description: 'encounter billing facility name'\n                type: string\n            type: object\n      type: object\n      example:\n        validationErrors: []\n        error_description: []\n        data:\n          id: '1'\n          uuid: 90c196f2-51cc-4655-8858-3a80aebff3ef\n          date: '2019-09-14 00:00:00'\n          reason: 'Pregnancy Test'\n          facility: 'Owerri General Hospital'\n          facility_id: '3'\n          pid: '1'\n          onset_date: '2019-04-20 00:00:00'\n          sensitivity: normal\n          billing_note: null\n          pc_catid: '5'\n          last_level_billed: '0'\n          last_level_closed: '0'\n          last_stmt_date: null\n          stmt_count: '0'\n          provider_id: '1'\n          supervisor_id: '0'\n          invoice_refno: ''\n          referral_source: ''\n          billing_facility: '3'\n          external_id: ''\n          pos_code: '0'\n          class_code: AMB\n          class_title: ambulatory\n          pc_catname: 'Office Visit'\n          billing_facility_name: 'Owerri General Hospital'\n    api_vital_request:\n      description: 'Schema for the vital request'\n      properties:\n        bps:\n          description: 'The bps of vitals.'\n          type: string\n        bpd:\n          description: 'The bpd of vitals.'\n          type: string\n        weight:\n          description: 'The weight of vitals. (unit is lb)'\n          type: string\n        height:\n          description: 'The height of vitals. (unit is inches)'\n          type: string\n        temperature:\n          description: 'The temperature of temperature. (unit is F)'\n          type: string\n        temp_method:\n          description: 'The temp_method of vitals.'\n          type: string\n        pulse:\n          description: 'The pulse of vitals.'\n          type: string\n        respiration:\n          description: 'The respiration of vitals.'\n          type: string\n        note:\n          description: 'The note (ie. comments) of vitals.'\n          type: string\n        waist_circ:\n          description: 'The waist circumference of vitals. (unit is inches)'\n          type: string\n        head_circ:\n          description: 'The head circumference of vitals. (unit is inches)'\n          type: string\n        oxygen_saturation:\n          description: 'The oxygen_saturation of vitals.'\n          type: string\n      type: object\n      example:\n        bps: '130'\n        bpd: '80'\n        weight: '220'\n        height: '70'\n        temperature: '98'\n        temp_method: Oral\n        pulse: '60'\n        respiration: '20'\n        note: 'Patient with difficulty standing, which made weight measurement difficult.'\n        waist_circ: '37'\n        head_circ: '22.2'\n        oxygen_saturation: '96'\n    api_soap_note_request:\n      description: 'Schema for the soap_note request'\n      properties:\n        subjective:\n          description: 'The subjective of soap note.'\n          type: string\n        objective:\n          description: 'The objective of soap note.'\n          type: string\n        assessment:\n          description: 'The assessment of soap note.'\n          type: string\n        plan:\n          description: 'The plan of soap note.'\n          type: string\n      type: object\n      example:\n        subjective: 'The patient with mechanical fall and cut finger.'\n        objective: 'The patient with finger laceration on exam.'\n        assessment: 'The patient with finger laceration requiring sutures.'\n        plan: 'Sutured finger laceration.'\n    api_medical_problem_request:\n      description: 'Schema for the medical_problem request'\n      required:\n        - title\n        - begdate\n      properties:\n        title:\n          description: 'The title of medical problem.'\n          type: string\n        begdate:\n          description: 'The beginning date of medical problem.'\n          type: string\n        enddate:\n          description: 'The end date of medical problem.'\n          type: string\n        diagnosis:\n          description: 'The diagnosis of medical problem. In format `\u003ccodetype\u003e:\u003ccode\u003e`'\n          type: string\n      type: object\n      example:\n        title: Dermatochalasis\n        begdate: '2010-10-13'\n        enddate: null\n        diagnosis: 'ICD10:H02.839'\n    api_allergy_request:\n      description: 'Schema for the allergy request'\n      required:\n        - title\n        - begdate\n      properties:\n        title:\n          description: 'The title of allergy.'\n          type: string\n        begdate:\n          description: 'The beginning date of allergy.'\n          type: string\n        enddate:\n          description: 'The end date of allergy.'\n          type: string\n        diagnosis:\n          description: 'The diagnosis of allergy. In format `\u003ccodetype\u003e:\u003ccode\u003e`'\n          type: string\n      type: object\n      example:\n        title: Iodine\n        begdate: '2010-10-13'\n        enddate: null\n    api_medication_request:\n      description: 'Schema for the medication request'\n      required:\n        - title\n        - begdate\n      properties:\n        title:\n          description: 'The title of medication.'\n          type: string\n        begdate:\n          description: 'The beginning date of medication.'\n          type: string\n        enddate:\n          description: 'The end date of medication.'\n          type: string\n        diagnosis:\n          description: 'The diagnosis of medication. In format `\u003ccodetype\u003e:\u003ccode\u003e`'\n          type: string\n      type: object\n      example:\n        title: Norvasc\n        begdate: '2013-04-13'\n        enddate: null\n    api_surgery_request:\n      description: 'Schema for the surgery request'\n      required:\n        - title\n        - begdate\n      properties:\n        title:\n          description: 'The title of surgery.'\n          type: string\n        begdate:\n          description: 'The beginning date of surgery.'\n          type: string\n        enddate:\n          description: 'The end date of surgery.'\n          type: string\n        diagnosis:\n          description: 'The diagnosis of surgery. In format `\u003ccodetype\u003e:\u003ccode\u003e`'\n          type: string\n      type: object\n      example:\n        title: Blepharoplasty\n        begdate: '2013-10-14'\n        enddate: null\n        diagnosis: 'CPT4:15823-50'\n    api_dental_issue_request:\n      description: 'Schema for the dental_issue request'\n      required:\n        - title\n        - begdate\n      properties:\n        title:\n          description: 'The title of dental issue.'\n          type: string\n        begdate:\n          description: 'The beginning date of dental issue.'\n          type: string\n        enddate:\n          description: 'The end date of dental issue.'\n          type: string\n        diagnosis:\n          description: 'The diagnosis of dental issue. In format `\u003ccodetype\u003e:\u003ccode\u003e`'\n          type: string\n      type: object\n      example:\n        title: Halitosis\n        begdate: '2015-03-17'\n        enddate: null\n    api_insurance_company_request:\n      description: 'Schema for the insurance_company request'\n      required:\n        - name\n      properties:\n        name:\n          description: 'The name of insurance company.'\n          type: string\n        attn:\n          description: 'The attn of insurance company.'\n          type: string\n        cms_id:\n          description: 'The cms id of insurance company.'\n          type: string\n        ins_type_code:\n          description: 'The insurance type code of insurance company. The insurance type code can be found by inspecting the route at (/api/insurance_type).'\n          type: string\n        x12_receiver_id:\n          description: 'The x12 receiver id of insurance company.'\n          type: string\n        x12_default_partner_id:\n          description: 'The x12 default partner id of insurance company.'\n          type: string\n        alt_cms_id:\n          description: 'The alternate cms id of insurance company.'\n          type: string\n        line1:\n          description: 'The line1 address of insurance company.'\n          type: string\n        line2:\n          description: 'The line2 address of insurance company.'\n          type: string\n        city:\n          description: 'The city of insurance company.'\n          type: string\n        state:\n          description: 'The state of insurance company.'\n          type: string\n        zip:\n          description: 'The zip of insurance company.'\n          type: string\n        country:\n          description: 'The country of insurance company.'\n          type: string\n      type: object\n      example:\n        name: 'Cool Insurance Company'\n        attn: null\n        cms_id: null\n        ins_type_code: '2'\n        x12_receiver_id: null\n        x12_default_partner_id: null\n        alt_cms_id: ''\n        line1: '123 Cool Lane'\n        line2: 'Suite 123'\n        city: Cooltown\n        state: CA\n        zip: '12245'\n        country: USA\n    api_insurance_request:\n      description: 'Schema for the insurance request'\n      required:\n        - provider\n        - plan_name\n        - policy_number\n        - group_number\n        - subscriber_fname\n        - subscriber_lname\n        - subscriber_relationship\n        - subscriber_ss\n        - subscriber_DOB\n        - subscriber_street\n        - subscriber_postal_code\n        - subscriber_city\n        - subscriber_state\n        - subscriber_country\n        - subscriber_phone\n        - subscriber_sex\n        - accept_assignment\n        - policy_type\n      properties:\n        provider:\n          description: 'The insurance company id.'\n          type: string\n        plan_name:\n          description: 'The plan name of insurance.'\n          type: string\n        policy_number:\n          description: 'The policy number of insurance.'\n          type: string\n        group_number:\n          description: 'The group number of insurance.'\n          type: string\n        subscriber_lname:\n          description: 'The subscriber last name of insurance.'\n          type: string\n        subscriber_mname:\n          description: 'The subscriber middle name of insurance.'\n          type: string\n        subscriber_fname:\n          description: 'The subscriber first name of insurance.'\n          type: string\n        subscriber_relationship:\n          description: 'The subscriber relationship of insurance.'\n          type: string\n        subscriber_ss:\n          description: 'The subscriber ss number of insurance.'\n          type: string\n        subscriber_DOB:\n          description: 'The subscriber DOB of insurance.'\n          type: string\n        subscriber_street:\n          description: 'The subscriber street address of insurance.'\n          type: string\n        subscriber_postal_code:\n          description: 'The subscriber postal code of insurance.'\n          type: string\n        subscriber_city:\n          description: 'The subscriber city of insurance.'\n          type: string\n        subscriber_state:\n          description: 'The subscriber state of insurance. `state` can be found by querying `resource=/api/list/state`'\n          type: string\n        subscriber_country:\n          description: 'The subscriber country of insurance. `country` can be found by querying `resource=/api/list/country`'\n          type: string\n        subscriber_phone:\n          description: 'The subscriber phone of insurance.'\n          type: string\n        subscriber_employer:\n          description: 'The subscriber employer of insurance.'\n          type: string\n        subscriber_employer_street:\n          description: 'The subscriber employer street of insurance.'\n          type: string\n        subscriber_employer_postal_code:\n          description: 'The subscriber employer postal code of insurance.'\n          type: string\n        subscriber_employer_state:\n          description: 'The subscriber employer state of insurance.'\n          type: string\n        subscriber_employer_country:\n          description: 'The subscriber employer country of insurance.'\n          type: string\n        subscriber_employer_city:\n          description: 'The subscriber employer city of insurance.'\n          type: string\n        copay:\n          description: 'The copay of insurance.'\n          type: string\n        date:\n          description: 'The date of insurance.'\n          type: string\n        subscriber_sex:\n          description: 'The subscriber sex of insurance.'\n          type: string\n        accept_assignment:\n          description: 'The accept_assignment of insurance.'\n          type: string\n        policy_type:\n          description: 'The policy_type of insurance.'\n          type: string\n      type: object\n      example:\n        provider: '33'\n        plan_name: 'Some Plan'\n        policy_number: '12345'\n        group_number: '252412'\n        subscriber_lname: Tester\n        subscriber_mname: Xi\n        subscriber_fname: Foo\n        subscriber_relationship: other\n        subscriber_ss: '234231234'\n        subscriber_DOB: '2018-10-03'\n        subscriber_street: '183 Cool St'\n        subscriber_postal_code: '23418'\n        subscriber_city: Cooltown\n        subscriber_state: AZ\n        subscriber_country: USA\n        subscriber_phone: 234-598-2123\n        subscriber_employer: 'Some Employer'\n        subscriber_employer_street: '123 Heather Lane'\n        subscriber_employer_postal_code: '23415'\n        subscriber_employer_state: AZ\n        subscriber_employer_country: USA\n        subscriber_employer_city: Cooltown\n        copay: '35'\n        date: '2018-10-15'\n        subscriber_sex: Female\n        accept_assignment: 'TRUE'\n        policy_type: a\n    api_message_request:\n      description: 'Schema for the message request'\n      required:\n        - body\n        - groupname\n        - from\n        - to\n        - title\n        - message_status\n      properties:\n        body:\n          description: 'The body of message.'\n          type: string\n        groupname:\n          description: 'The group name (usually is ''Default'').'\n          type: string\n        from:\n          description: 'The sender of the message.'\n          type: string\n        to:\n          description: 'The recipient of the message.'\n          type: string\n        title:\n          description: 'use an option from resource=/api/list/note_type'\n          type: string\n        message_status:\n          description: 'use an option from resource=/api/list/message_status'\n          type: string\n      type: object\n      example:\n        body: 'Test 456'\n        groupname: Default\n        from: Matthew\n        to: admin\n        title: Other\n        message_status: New\n  responses:\n    standard:\n      description: 'Standard Response'\n      content:\n        application/json:\n          schema:\n            properties:\n              validationErrors:\n                description: 'Validation errors.'\n                type: array\n                items:\n                  type: object\n              internalErrors:\n                description: 'Internal errors.'\n                type: array\n                items:\n                  type: object\n              data:\n                description: 'Returned data.'\n                type: array\n                items:\n                  type: object\n            type: object\n            example:\n              validationErrors: []\n              error_description: []\n              data: []\n    badrequest:\n      description: 'Bad Request'\n      content:\n        application/json:\n          schema:\n            properties:\n              validationErrors:\n                description: 'Validation errors.'\n                type: object\n            type: object\n            example:\n              validationErrors:\n                _id: 'The search field argument was invalid, improperly formatted, or could not be parsed.  Inner message: UUID columns must be a valid UUID string'\n    unauthorized:\n      description: Unauthorized\n      content:\n        application/json:\n          schema:\n            properties:\n              error:\n                description: 'The error.'\n                type: string\n              error_description:\n                description: 'The description of the error.'\n                type: string\n              hint:\n                description: 'More specific information on the error.'\n                type: string\n              message:\n                description: 'Message regarding the error.'\n                type: string\n            type: object\n            example:\n              error: access_denied\n              error_description: 'The resource owner or authorization server denied the request.'\n              hint: 'Missing \"Authorization\" header'\n              message: 'The resource owner or authorization server denied the request.'\n    uuidnotfound:\n      description: 'Not Found'\n      content:\n        application/json:\n          schema:\n            properties:\n              empty:\n                description: empty\n                type: object\n            type: object\n            example: []\n  securitySchemes:\n    openemr_auth:\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: /oauth2/default/authorize\n          tokenUrl: /oauth2/default/token\n          refreshUrl: /oauth2/default/token\n          scopes:\n            openid: 'Generic mandatory scope'\n            offline_access: 'Will signal server to provide a refresh token'\n            'api:fhir': 'FHIR R4 API'\n            patient/AllergyIntolerance.read: 'Read allergy intolerance resources for the current patient (api:fhir)'\n            patient/CarePlan.read: 'Read care plan resources for the current patient (api:fhir)'\n            patient/CareTeam.read: 'Read care team resources for the current patient (api:fhir)'\n            patient/Condition.read: 'Read condition resources for the current patient (api:fhir)'\n            patient/Device.read: 'Read device resources for the current patient (api:fhir)'\n            patient/DiagnosticReport.read: 'Read diagnostic report resources for the current patient (api:fhir)'\n            patient/DocumentReference.read: 'Read document reference resources for the current patient (api:fhir)'\n            patient/Encounter.read: 'Read encounter resources for the current patient (api:fhir)'\n            patient/Goal.read: 'Read goal resources for the current patient (api:fhir)'\n            patient/Immunization.read: 'Read immunization resources for the current patient (api:fhir)'\n            patient/Location.read: 'Read location resources for the current patient (api:fhir)'\n            patient/Medication.read: 'Read medication resources for the current patient (api:fhir)'\n            patient/MedicationRequest.read: 'Read medication request resources for the current patient (api:fhir)'\n            patient/Observation.read: 'Read observation resources for the current patient (api:fhir)'\n            patient/Organization.read: 'Read organization resources for the current patient (api:fhir)'\n            patient/Patient.read: 'Read patient resource for the current patient (api:fhir)'\n            patient/Person.read: 'Read person resources for the current patient (api:fhir)'\n            patient/Practitioner.read: 'Read practitioner resources for the current patient (api:fhir)'\n            patient/Procedure.read: 'Read procedure resources for the current patient (api:fhir)'\n            patient/Provenance.read: 'Read provenance resources for the current patient (api:fhir)'\n            system/AllergyIntolerance.read: 'Read all allergy intolerance resources in the system (api:fhir)'\n            system/CarePlan.read: 'Read all care plan resources in the system (api:fhir)'\n            system/CareTeam.read: 'Read all care team resources in the system (api:fhir)'\n            system/Condition.read: 'Read all condition resources in the system (api:fhir)'\n            system/Coverage.read: 'Read all coverage resources in the system (api:fhir)'\n            system/Device.read: 'Read all device resources in the system (api:fhir)'\n            system/DiagnosticReport.read: 'Read all diagnostic report resources in the system (api:fhir)'\n            system/Document.read: 'Read all document resources in the system (api:fhir)'\n            system/DocumentReference.read: 'Read all document reference resources in the system (api:fhir)'\n            system/Encounter.read: 'Read all encounter resources in the system (api:fhir)'\n            system/Goal.read: 'Read all goal resources in the system (api:fhir)'\n            system/Group.read: 'Read all group resources in the system (api:fhir)'\n            system/Immunization.read: 'Read all immunization resources in the system (api:fhir)'\n            system/Location.read: 'Read all location resources in the system (api:fhir)'\n            system/Medication.read: 'Read all medication resources in the system (api:fhir)'\n            system/MedicationRequest.read: 'Read all medication request resources in the system (api:fhir)'\n            system/Observation.read: 'Read all observation resources in the system (api:fhir)'\n            system/Organization.read: 'Read all organization resources in the system (api:fhir)'\n            system/Patient.read: 'Read all patient resources in the system (api:fhir)'\n            system/Person.read: 'Read all person resources in the system (api:fhir)'\n            system/Practitioner.read: 'Read all practitioner resources in the system (api:fhir)'\n            system/PractitionerRole.read: 'Read all practitioner role resources in the system (api:fhir)'\n            system/Procedure.read: 'Read all procedure resources in the system (api:fhir)'\n            system/Provenance.read: 'Read all provenance resources in the system (api:fhir)'\n            user/AllergyIntolerance.read: 'Read all allergy intolerance resources the user has access to (api:fhir)'\n            user/CarePlan.read: 'Read all care plan resources the user has access to (api:fhir)'\n            user/CareTeam.read: 'Read all care team resources the user has access to (api:fhir)'\n            user/Condition.read: 'Read all condition resources the user has access to (api:fhir)'\n            user/Coverage.read: 'Read all coverage resources the user has access to (api:fhir)'\n            user/Device.read: 'Read all device resources the user has access to (api:fhir)'\n            user/DiagnosticReport.read: 'Read all diagnostic report resources the user has access to (api:fhir)'\n            user/DocumentReference.read: 'Read all document reference resources the user has access to (api:fhir)'\n            user/Encounter.read: 'Read all encounter resources the user has access to (api:fhir)'\n            user/Goal.read: 'Read all goal resources the user has access to (api:fhir)'\n            user/Immunization.read: 'Read all immunization resources the user has access to (api:fhir)'\n            user/Location.read: 'Read all location resources the user has access to (api:fhir)'\n            user/Medication.read: 'Read all medication resources the user has access to (api:fhir)'\n            user/MedicationRequest.read: 'Read all medication request resources the user has access to (api:fhir)'\n            user/Observation.read: 'Read all observation resources the user has access to (api:fhir)'\n            user/Organization.read: 'Read all organization resources the user has access to (api:fhir)'\n            user/Organization.write: 'Write all organization resources the user has access to (api:fhir)'\n            user/Patient.read: 'Read all patient resources the user has access to (api:fhir)'\n            user/Patient.write: 'Write all patient resources the user has access to (api:fhir)'\n            user/Person.read: 'Read all person resources the user has access to (api:fhir)'\n            user/Practitioner.read: 'Read all practitioner resources the user has access to (api:fhir)'\n            user/Practitioner.write: 'Write all practitioner resources the user has access to (api:fhir)'\n            user/PractitionerRole.read: 'Read all practitioner role resources the user has access to (api:fhir)'\n            user/Procedure.read: 'Read all procedure resources the user has access to (api:fhir)'\n            user/Provenance.read: 'Read all provenance resources the user has access to (api:fhir)'\n            'api:oemr': 'Standard OpenEMR API'\n            user/allergy.read: 'Read allergies the user has access to (api:oemr)'\n            user/allergy.write: 'Write allergies the user has access to for (api:oemr)'\n            user/appointment.read: 'Read appointments the user has access to (api:oemr)'\n            user/appointment.write: 'Write appointments the user has access to for (api:oemr)'\n            user/dental_issue.read: 'Read dental issues the user has access to (api:oemr)'\n            user/dental_issue.write: 'Write dental issues the user has access to (api:oemr)'\n            user/document.read: 'Read documents the user has access to (api:oemr)'\n            user/document.write: 'Write documents the user has access to (api:oemr)'\n            user/drug.read: 'Read drugs the user has access to (api:oemr)'\n            user/encounter.read: 'Read encounters the user has access to (api:oemr)'\n            user/encounter.write: 'Write encounters the user has access to (api:oemr)'\n            user/facility.read: 'Read facilities the user has access to (api:oemr)'\n            user/facility.write: 'Write facilities the user has access to (api:oemr)'\n            user/immunization.read: 'Read immunizations the user has access to (api:oemr)'\n            user/insurance.read: 'Read insurances the user has access to (api:oemr)'\n            user/insurance.write: 'Write insurances the user has access to (api:oemr)'\n            user/insurance_company.read: 'Read insurance companies the user has access to (api:oemr)'\n            user/insurance_company.write: 'Write insurance companies the user has access to (api:oemr)'\n            user/insurance_type.read: 'Read insurance types the user has access to (api:oemr)'\n            user/list.read: 'Read lists the user has access to (api:oemr)'\n            user/medical_problem.read: 'Read medical problems the user has access to (api:oemr)'\n            user/medical_problem.write: 'Write medical problems the user has access to (api:oemr)'\n            user/medication.read: 'Read medications the user has access to (api:oemr)'\n            user/medication.write: 'Write medications the user has access to (api:oemr)'\n            user/message.write: 'Read messages the user has access to (api:oemr)'\n            user/patient.read: 'Read patients the user has access to (api:oemr)'\n            user/patient.write: 'Write patients the user has access to (api:oemr)'\n            user/practitioner.read: 'Read practitioners the user has access to (api:oemr)'\n            user/practitioner.write: 'Write practitioners the user has access to (api:oemr)'\n            user/prescription.read: 'Read prescriptions the user has access to (api:oemr)'\n            user/procedure.read: 'Read procedures the user has access to (api:oemr)'\n            user/soap_note.read: 'Read soap notes the user has access to (api:oemr)'\n            user/soap_note.write: 'Write soap notes the user has access to (api:oemr)'\n            user/surgery.read: 'Read surgeries the user has access to (api:oemr)'\n            user/surgery.write: 'Write surgeries the user has access to (api:oemr)'\n            user/vital.read: 'Read vitals the user has access to (api:oemr)'\n            user/vital.write: 'Write vitals the user has access to (api:oemr)'\n            'api:port': 'Standard Patient Portal OpenEMR API'\n            patient/encounter.read: 'Read encounters the patient has access to (api:port)'\n            patient/patient.read: 'Write encounters the patient has access to (api:port)'\ntags:\n  -\n    name: fhir\n    description: 'FHIR R4 API'\n  -\n    name: standard\n    description: 'Standard OpenEMR API'\n  -\n    name: standard-patient\n    description: 'Standard Patient Portal OpenEMR API'\n"
		}
	},
	"Error": "parse: parse spec: paths: /fhir/Group/{id}/$export: get: operation \"\": parse path: path parameter not specified: \"id\""
}