{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/chainjet/platform"
		},
		"file": {
			"name": "trello-1.json",
			"size": 0,
			"path": "schemas/openapi3/trello-1.json",
			"byteSize": 387211,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"Trello\",\n    \"version\": \"0.0.1\",\n    \"x-categories\": [\"project-management\", \"productivity\"]\n  },\n  \"servers\": [{ \"url\": \"https://api.trello.com/1\" }],\n  \"components\": {\n    \"securitySchemes\": {\n      \"oauth1\": {\n        \"type\": \"http\",\n        \"scheme\": \"oauth1\",\n        \"x-requestTokenURL\": \"https://trello.com/1/OAuthGetRequestToken\",\n        \"x-accessTokenURL\": \"https://trello.com/1/OAuthGetAccessToken\",\n        \"x-userAuthorizationURL\": \"https://trello.com/1/OAuthAuthorizeToken\",\n        \"x-profileURL\": \"https://trello.com/1/members/me\",\n        \"x-signatureMethod\": \"HMAC-SHA1\"\n      },\n      \"APIKey\": { \"type\": \"apiKey\", \"in\": \"query\", \"name\": \"key\" },\n      \"APIToken\": { \"in\": \"query\", \"name\": \"token\", \"type\": \"apiKey\" }\n    },\n    \"schemas\": {\n      \"posStringOrNumber\": {\n        \"oneOf\": [\n          { \"type\": \"string\", \"enum\": [\"top\", \"bottom\"] },\n          { \"type\": \"number\", \"format\": \"float\", \"example\": 1293.5 }\n        ]\n      },\n      \"ActionFields\": {\n        \"type\": \"string\",\n        \"enum\": [\n          \"id\",\n          \"idMemberCreator\",\n          \"data\",\n          \"type\",\n          \"date\",\n          \"limits\",\n          \"display\",\n          \"memberCreator\"\n        ]\n      },\n      \"Action\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": { \"type\": \"string\", \"$ref\": \"#/components/schemas/TrelloID\" },\n          \"idMemberCreator\": {\n            \"type\": \"string\",\n            \"$ref\": \"#/components/schemas/TrelloID\"\n          },\n          \"data\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"text\": {\n                \"type\": \"string\",\n                \"example\": \"Can never go wrong with bowie\"\n              },\n              \"card\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"$ref\": \"#/components/schemas/TrelloID\"\n                  },\n                  \"name\": { \"type\": \"string\", \"example\": \"Bowie\" },\n                  \"idShort\": { \"type\": \"integer\", \"example\": 7 },\n                  \"shortLink\": { \"type\": \"string\", \"example\": \"3CsPkqOF\" }\n                }\n              },\n              \"board\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"$ref\": \"#/components/schemas/TrelloID\"\n                  },\n                  \"name\": { \"type\": \"string\", \"example\": \"Mullets\" },\n                  \"shortLink\": { \"type\": \"string\", \"example\": \"3CsPkqOF\" }\n                }\n              },\n              \"list\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"$ref\": \"#/components/schemas/TrelloID\"\n                  },\n                  \"name\": { \"type\": \"string\", \"example\": \"Amazing\" }\n                }\n              }\n            }\n          },\n          \"type\": { \"type\": \"string\", \"example\": \"commentCard\" },\n          \"date\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"example\": \"2020-03-09T19:41:51.396Z\"\n          },\n          \"limits\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"reactions\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"perAction\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"status\": { \"type\": \"string\", \"example\": \"ok\" },\n                      \"disableAt\": { \"type\": \"number\", \"example\": 1000 },\n                      \"warnAt\": { \"type\": \"number\", \"example\": 900 }\n                    }\n                  },\n                  \"uniquePerAction\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"status\": { \"type\": \"string\", \"example\": \"ok\" },\n                      \"disableAt\": { \"type\": \"number\", \"example\": 1000 },\n                      \"warnAt\": { \"type\": \"number\", \"example\": 900 }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"display\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"translationKey\": {\n                \"type\": \"string\",\n                \"example\": \"action_comment_on_card\"\n              },\n              \"entities\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"contextOn\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": { \"type\": \"string\", \"example\": \"translatable\" },\n                      \"translationKey\": {\n                        \"type\": \"string\",\n                        \"example\": \"action_on\"\n                      },\n                      \"hideIfContext\": { \"type\": \"boolean\" },\n                      \"idContext\": {\n                        \"type\": \"string\",\n                        \"$ref\": \"#/components/schemas/TrelloID\"\n                      }\n                    }\n                  },\n                  \"card\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": { \"type\": \"string\", \"example\": \"card\" },\n                      \"hideIfContext\": { \"type\": \"boolean\" },\n                      \"id\": {\n                        \"type\": \"string\",\n                        \"$ref\": \"#/components/schemas/TrelloID\"\n                      },\n                      \"shortLink\": { \"type\": \"string\", \"example\": \"3CsPkqOF\" },\n                      \"text\": { \"type\": \"string\", \"example\": \"Bowie\" }\n                    }\n                  },\n                  \"comment\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": { \"type\": \"string\", \"example\": \"comment\" },\n                      \"text\": {\n                        \"type\": \"string\",\n                        \"example\": \"Can never go wrong with bowie\"\n                      }\n                    }\n                  },\n                  \"memberCreator\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": { \"type\": \"string\", \"example\": \"member\" },\n                      \"id\": { \"$ref\": \"#/components/schemas/TrelloID\" },\n                      \"username\": { \"type\": \"string\", \"example\": \"bobloblaw\" },\n                      \"text\": {\n                        \"type\": \"string\",\n                        \"example\": \"Bob Loblaw (World)\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"memberCreator\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\",\n                \"$ref\": \"#/components/schemas/TrelloID\",\n                \"example\": \"5b02e7f4e1facdc393169f9d\"\n              },\n              \"activityBlocked\": { \"type\": \"boolean\", \"example\": false },\n              \"avatarHash\": {\n                \"type\": \"string\",\n                \"example\": \"db2adf80c2e6c26b76e1f10400eb4c45\"\n              },\n              \"avatarUrl\": {\n                \"type\": \"string\",\n                \"format\": \"url\",\n                \"example\": \"https://trello-members.s3.amazonaws.com/5b02e7f4e1facdc393169f9d/db2adf80c2e6c26b76e1f10400eb4c45\"\n              },\n              \"fullName\": {\n                \"type\": \"string\",\n                \"example\": \"Bob Loblaw (Trello)\"\n              },\n              \"idMemberReferrer\": {\n                \"type\": \"string\",\n                \"$ref\": \"#/components/schemas/TrelloID\",\n                \"nullable\": true,\n                \"example\": null\n              },\n              \"initials\": { \"type\": \"string\", \"example\": \"BL\" },\n              \"username\": { \"type\": \"string\", \"example\": \"bobloblaw\" }\n            }\n          }\n        }\n      },\n      \"AttachmentFields\": {\n        \"type\": \"string\",\n        \"enum\": [\n          \"id\",\n          \"bytes\",\n          \"date\",\n          \"edgeColor\",\n          \"idMember\",\n          \"isUpload\",\n          \"mimeType\",\n          \"name\",\n          \"previews\",\n          \"url\",\n          \"pos\"\n        ]\n      },\n      \"Attachment\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"$ref\": \"#/components/schemas/TrelloID\",\n            \"example\": \"5bc79d4206526d2279c1e6ea\"\n          },\n          \"bytes\": { \"type\": \"string\", \"example\": null, \"nullable\": true },\n          \"date\": {\n            \"type\": \"string\",\n            \"format\": \"date\",\n            \"example\": \"2018-10-17T19:10:14.808Z\"\n          },\n          \"edgeColor\": {\n            \"type\": \"string\",\n            \"$ref\": \"#/components/schemas/Color\",\n            \"example\": null,\n            \"nullable\": true\n          },\n          \"idMember\": {\n            \"type\": \"string\",\n            \"$ref\": \"#/components/schemas/TrelloID\",\n            \"example\": \"5bc79d4206526d2279c1e6eb\"\n          },\n          \"isUpload\": { \"type\": \"boolean\", \"example\": false },\n          \"mimeType\": { \"type\": \"string\", \"example\": \"\" },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"Deprecation Extension Notice\"\n          },\n          \"previews\": {\n            \"type\": \"array\",\n            \"items\": { \"type\": \"string\" },\n            \"example\": []\n          },\n          \"url\": {\n            \"type\": \"string\",\n            \"format\": \"url\",\n            \"example\": \"https://admin.typeform.com/form/RzExEM/share#/link\"\n          },\n          \"pos\": { \"type\": \"number\", \"format\": \"float\", \"example\": 1638 }\n        }\n      },\n      \"BoardFields\": {\n        \"type\": \"string\",\n        \"enum\": [\n          \"id\",\n          \"name\",\n          \"desc\",\n          \"descData\",\n          \"closed\",\n          \"idMemberCreator\",\n          \"idOrganization\",\n          \"pinned\",\n          \"url\",\n          \"shortUrl\",\n          \"prefs\",\n          \"labelNames\",\n          \"starred\",\n          \"limits\",\n          \"memberships\",\n          \"enterpriseOwned\"\n        ]\n      },\n      \"Board\": {\n        \"type\": \"object\",\n        \"required\": [\"id\"],\n        \"properties\": {\n          \"id\": { \"$ref\": \"#/components/schemas/TrelloID\" },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The name of the board.\",\n            \"example\": \"Trello Platform Changes\"\n          },\n          \"desc\": {\n            \"type\": \"string\",\n            \"example\": \"Track changes to Trello's Platform on this board.\"\n          },\n          \"descData\": { \"type\": \"string\" },\n          \"closed\": { \"type\": \"boolean\", \"example\": false },\n          \"idMemberCreator\": { \"$ref\": \"#/components/schemas/TrelloID\" },\n          \"idOrganization\": { \"$ref\": \"#/components/schemas/TrelloID\" },\n          \"pinned\": { \"type\": \"boolean\", \"example\": false },\n          \"url\": {\n            \"type\": \"string\",\n            \"format\": \"url\",\n            \"example\": \"https://trello.com/b/dQHqCohZ/trello-platform-changelog\"\n          },\n          \"shortUrl\": {\n            \"type\": \"string\",\n            \"format\": \"url\",\n            \"example\": \"https://trello.com/b/dQHqCohZ\"\n          },\n          \"prefs\": { \"$ref\": \"#/components/schemas/Prefs\" },\n          \"labelNames\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"green\": { \"type\": \"string\", \"example\": \"Addition\" },\n              \"yellow\": { \"type\": \"string\", \"example\": \"Update\" },\n              \"orange\": { \"type\": \"string\", \"example\": \"Deprecation\" },\n              \"red\": { \"type\": \"string\", \"example\": \"Deletion\" },\n              \"purple\": { \"type\": \"string\", \"example\": \"Power-Ups\" },\n              \"blue\": { \"type\": \"string\", \"example\": \"News\" },\n              \"sky\": { \"type\": \"string\", \"example\": \"Announcement\" },\n              \"lime\": { \"type\": \"string\", \"example\": \"Delight\" },\n              \"pink\": { \"type\": \"string\", \"example\": \"REST API\" },\n              \"black\": { \"type\": \"string\", \"example\": \"Capabilties\" }\n            }\n          },\n          \"limits\": { \"type\": \"object\", \"$ref\": \"#/components/schemas/Limits\" },\n          \"starred\": { \"type\": \"boolean\" },\n          \"memberships\": { \"type\": \"string\" },\n          \"shortLink\": { \"type\": \"string\" },\n          \"subscribed\": { \"type\": \"boolean\" },\n          \"powerUps\": { \"type\": \"string\" },\n          \"dateLastActivity\": { \"type\": \"string\", \"format\": \"date\" },\n          \"dateLastView\": { \"type\": \"string\", \"format\": \"date\" },\n          \"idTags\": { \"type\": \"string\" },\n          \"datePluginDisable\": {\n            \"type\": \"string\",\n            \"format\": \"date\",\n            \"nullable\": true\n          },\n          \"creationMethod\": { \"type\": \"string\", \"nullable\": true },\n          \"ixUpdate\": { \"type\": \"integer\" },\n          \"templateGallery\": { \"type\": \"string\", \"nullable\": true },\n          \"enterpriseOwned\": { \"type\": \"boolean\" }\n        }\n      },\n      \"BoardBackground\": {\n        \"type\": \"object\",\n        \"properties\": { \"id\": { \"$ref\": \"#/components/schemas/TrelloID\" } }\n      },\n      \"BoardStars\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"$ref\": \"#/components/schemas/TrelloID\",\n            \"example\": \"585063850027165010be15a8\"\n          },\n          \"idBoard\": {\n            \"$ref\": \"#/components/schemas/TrelloID\",\n            \"example\": \"57f7df684f1ca8c2877162e0\"\n          },\n          \"pos\": { \"type\": \"integer\", \"example\": 32768 }\n        }\n      },\n      \"CheckItem\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"idChecklist\": {\n            \"$ref\": \"#/components/schemas/TrelloID\",\n            \"example\": \"5dc9b507756e182c76007621\"\n          },\n          \"state\": {\n            \"type\": \"string\",\n            \"enum\": [\"complete\", \"incomplete\"],\n            \"example\": \"incomplete\"\n          },\n          \"id\": {\n            \"$ref\": \"#/components/schemas/TrelloID\",\n            \"example\": \"5dc9b509f02f4314edc4303a\"\n          },\n          \"name\": { \"type\": \"string\" },\n          \"nameData\": { \"type\": \"string\", \"nullable\": true, \"example\": null },\n          \"pos\": { \"type\": \"string\", \"example\": 1673 }\n        }\n      },\n      \"Checklist\": {\n        \"type\": \"object\",\n        \"properties\": { \"id\": { \"$ref\": \"#/components/schemas/TrelloID\" } }\n      },\n      \"Card\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": { \"$ref\": \"#/components/schemas/TrelloID\" },\n          \"address\": { \"type\": \"string\", \"nullable\": true },\n          \"badges\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"attachmentsByType\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"trello\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"board\": { \"type\": \"number\" },\n                      \"card\": { \"type\": \"number\" }\n                    }\n                  }\n                }\n              },\n              \"location\": { \"type\": \"boolean\" },\n              \"votes\": { \"type\": \"integer\" },\n              \"viewingMemberVoted\": { \"type\": \"boolean\", \"example\": false },\n              \"subscribed\": { \"type\": \"boolean\", \"example\": false },\n              \"fogbugz\": { \"type\": \"string\" },\n              \"checkItems\": { \"type\": \"integer\", \"example\": 0 },\n              \"checkItemsChecked\": { \"type\": \"integer\", \"example\": 0 },\n              \"comments\": { \"type\": \"integer\", \"example\": 0 },\n              \"attachments\": { \"type\": \"integer\", \"example\": 0 },\n              \"description\": { \"type\": \"boolean\" },\n              \"due\": { \"type\": \"string\", \"format\": \"date\", \"nullable\": true },\n              \"start\": { \"type\": \"string\", \"format\": \"date\", \"nullable\": true },\n              \"dueComplete\": { \"type\": \"boolean\" }\n            }\n          },\n          \"checkItemStates\": {\n            \"type\": \"array\",\n            \"items\": { \"oneOf\": [{ \"type\": \"string\" }] }\n          },\n          \"closed\": { \"type\": \"boolean\" },\n          \"coordinates\": { \"type\": \"string\", \"nullable\": true },\n          \"creationMethod\": { \"type\": \"string\", \"nullable\": true },\n          \"dateLastActivity\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"example\": \"2019-09-16T16:19:17.156Z\"\n          },\n          \"desc\": {\n            \"type\": \"string\",\n            \"example\": \"👋Hey there,\\n\\nTrello's Platform team uses this board to keep developers up-to-date.\"\n          },\n          \"descData\": {\n            \"type\": \"object\",\n            \"properties\": { \"emoji\": { \"type\": \"object\" } }\n          },\n          \"due\": { \"type\": \"string\", \"format\": \"date\", \"nullable\": true },\n          \"dueReminder\": { \"type\": \"string\", \"nullable\": true },\n          \"email\": {\n            \"type\": \"string\",\n            \"format\": \"email\",\n            \"example\": \"bentleycook+2kea95u7kchsvqnxkwe+2q0byi6qv4pt9uc7q5m+25qyyohtzg@boards.trello.com\"\n          },\n          \"idBoard\": {\n            \"type\": \"string\",\n            \"$ref\": \"#/components/schemas/TrelloID\",\n            \"example\": \"5abbe4b7ddc1b351ef961414\"\n          },\n          \"idChecklists\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"oneOf\": [\n                { \"$ref\": \"#/components/schemas/Checklist\" },\n                { \"$ref\": \"#/components/schemas/TrelloID\" }\n              ]\n            }\n          },\n          \"idLabels\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"oneOf\": [\n                { \"$ref\": \"#/components/schemas/Label\" },\n                { \"$ref\": \"#/components/schemas/TrelloID\" }\n              ]\n            }\n          },\n          \"idList\": {\n            \"type\": \"string\",\n            \"$ref\": \"#/components/schemas/TrelloID\",\n            \"example\": \"5abbe4b7ddc1b351ef961415\"\n          },\n          \"idMembers\": {\n            \"type\": \"array\",\n            \"items\": { \"oneOf\": [{ \"$ref\": \"#/components/schemas/TrelloID\" }] }\n          },\n          \"idMembersVoted\": {\n            \"type\": \"array\",\n            \"items\": { \"oneOf\": [{ \"$ref\": \"#/components/schemas/TrelloID\" }] }\n          },\n          \"idShort\": { \"type\": \"integer\" },\n          \"idAttachmentCover\": {\n            \"type\": \"string\",\n            \"$ref\": \"#/components/schemas/TrelloID\",\n            \"example\": \"5abbe4b7ddc1b351ef961415\",\n            \"nullable\": true\n          },\n          \"labels\": {\n            \"type\": \"array\",\n            \"items\": { \"oneOf\": [{ \"$ref\": \"#/components/schemas/TrelloID\" }] }\n          },\n          \"limits\": { \"type\": \"object\", \"$ref\": \"#/components/schemas/Limits\" },\n          \"locationName\": { \"type\": \"string\", \"nullable\": true },\n          \"manualCoverAttachment\": { \"type\": \"boolean\", \"example\": false },\n          \"name\": { \"type\": \"string\", \"example\": \"👋 What? Why? How?\" },\n          \"pos\": { \"type\": \"number\", \"format\": \"float\", \"example\": 65535 },\n          \"shortLink\": { \"type\": \"string\", \"example\": \"H0TZyzbK\" },\n          \"shortUrl\": {\n            \"type\": \"string\",\n            \"format\": \"url\",\n            \"example\": \"https://trello.com/c/H0TZyzbK\"\n          },\n          \"subscribed\": { \"type\": \"boolean\", \"example\": false },\n          \"url\": {\n            \"type\": \"string\",\n            \"format\": \"url\",\n            \"example\": \"https://trello.com/c/H0TZyzbK/4-%F0%9F%91%8B-what-why-how\"\n          },\n          \"cover\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"idAttachment\": {\n                \"type\": \"string\",\n                \"$ref\": \"#/components/schemas/TrelloID\",\n                \"nullable\": true\n              },\n              \"color\": {\n                \"$ref\": \"#/components/schemas/Color\",\n                \"nullable\": true\n              },\n              \"idUploadedBackground\": { \"type\": \"boolean\", \"nullable\": true },\n              \"size\": { \"type\": \"string\", \"enum\": [\"normal\"] },\n              \"brightness\": { \"type\": \"string\", \"enum\": [\"light\", \"dark\"] },\n              \"isTemplate\": { \"type\": \"boolean\", \"example\": false }\n            }\n          }\n        }\n      },\n      \"CardFields\": {\n        \"type\": \"string\",\n        \"enum\": [\n          \"id\",\n          \"address\",\n          \"badges\",\n          \"checkItemStates\",\n          \"closed\",\n          \"coordinates\",\n          \"creationMethod\",\n          \"dueComplete\",\n          \"dateLastActivity\",\n          \"desc\",\n          \"descData\",\n          \"due\",\n          \"dueReminder\",\n          \"email\",\n          \"idBoard\",\n          \"idChecklists\",\n          \"idLabels\",\n          \"idList\",\n          \"idMembers\",\n          \"idMembersVoted\",\n          \"idShort\",\n          \"idAttachmentCover\",\n          \"labels\",\n          \"limits\",\n          \"locationName\",\n          \"manualCoverAttachment\",\n          \"name\",\n          \"pos\",\n          \"shortLink\",\n          \"shortUrl\",\n          \"subscribed\",\n          \"url\",\n          \"cover\",\n          \"isTemplate\"\n        ],\n        \"description\": \"The fields on a Card.\"\n      },\n      \"ClaimableOrganizations\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"organizations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"name\": { \"type\": \"string\", \"example\": \"organization_name\" },\n                \"displayName\": {\n                  \"type\": \"string\",\n                  \"example\": \"Organization Name\"\n                },\n                \"activeMembershipCount\": { \"type\": \"number\", \"example\": 5 },\n                \"idActiveAdmins\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n                },\n                \"products\": {\n                  \"type\": \"array\",\n                  \"items\": { \"type\": \"number\", \"format\": \"integer\" }\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"$ref\": \"#/components/schemas/TrelloID\",\n                  \"example\": \"617abd5995eae45169a11059\"\n                },\n                \"logoUrl\": {\n                  \"type\": \"string\",\n                  \"nullable\": true,\n                  \"example\": null\n                },\n                \"dateLastActive\": {\n                  \"type\": \"string\",\n                  \"nullable\": true,\n                  \"example\": \"2019-08-22T18:15:53.546Z\",\n                  \"format\": \"date\",\n                  \"description\": \"The date of the most recent activity on any of the boards in the workspace. If the workspace has no boards, or the boards have no activity, this value will be null.\"\n                }\n              }\n            }\n          },\n          \"claimableCount\": { \"type\": \"number\", \"example\": 2 }\n        }\n      },\n      \"CustomEmoji\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"$ref\": \"#/components/schemas/TrelloID\",\n            \"example\": \"5900ac11ed55d6d2c355c5d6\"\n          },\n          \"url\": {\n            \"type\": \"string\",\n            \"format\": \"url\",\n            \"example\": \"https://trello-emoji.s3.amazonaws.com/5589c3ea49b40cedc28cf70e/b40d9925f4e75495104b5e560881d8e4/chorizo.png\"\n          },\n          \"name\": { \"type\": \"string\", \"example\": \"chorizo\" }\n        }\n      },\n      \"CustomField\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"$ref\": \"#/components/schemas/TrelloID\",\n            \"example\": \"5ab10be237846c43015f108e\"\n          },\n          \"idModel\": {\n            \"type\": \"string\",\n            \"example\": \"586e8f681d4fe9b06a928307\"\n          },\n          \"modelType\": {\n            \"type\": \"string\",\n            \"enum\": [\"card\", \"board\", \"member\"],\n            \"example\": \"board\"\n          },\n          \"fieldGroup\": {\n            \"type\": \"string\",\n            \"example\": \"f6177ba6839d6fff0f73922c1cea105e793fda8a1433d466104dacc0b7c56955\"\n          },\n          \"display\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"cardFront\": { \"type\": \"boolean\", \"example\": true },\n              \"name\": { \"type\": \"string\", \"example\": \"Priority 🏔\" },\n              \"pos\": { \"type\": \"string\", \"example\": \"98304,\" },\n              \"options\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"$ref\": \"#/components/schemas/TrelloID\",\n                      \"example\": \"5ab10be237846c43015f1091\"\n                    },\n                    \"idCustomField\": {\n                      \"$ref\": \"#/components/schemas/TrelloID\",\n                      \"example\": \"5ab10be237846c43015f108e\"\n                    },\n                    \"value\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"text\": { \"type\": \"string\", \"example\": \"High\" }\n                      }\n                    },\n                    \"color\": { \"type\": \"string\", \"example\": \"red\" },\n                    \"pos\": { \"type\": \"number\", \"example\": 16384 }\n                  }\n                }\n              }\n            }\n          },\n          \"type\": { \"type\": \"string\", \"example\": \"list\" }\n        }\n      },\n      \"CustomFieldItems\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": { \"$ref\": \"#/components/schemas/TrelloID\" },\n          \"value\": {\n            \"type\": \"object\",\n            \"properties\": { \"checked\": { \"type\": \"string\", \"example\": \"true\" } }\n          },\n          \"idCustomField\": {\n            \"$ref\": \"#/components/schemas/TrelloID\",\n            \"example\": \"5b080fd8017bd1653b5480fa\"\n          },\n          \"idModel\": {\n            \"$ref\": \"#/components/schemas/TrelloID\",\n            \"example\": \"5b080ff194611b41aaaa9570\"\n          },\n          \"modelType\": {\n            \"type\": \"string\",\n            \"enum\": [\"card\", \"board\", \"member\"],\n            \"example\": \"card\"\n          }\n        }\n      },\n      \"CustomSticker\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": { \"$ref\": \"#/components/schemas/TrelloID\" },\n          \"url\": { \"type\": \"string\", \"format\": \"url\" },\n          \"scaled\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n              }\n            }\n          }\n        }\n      },\n      \"Emoji\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"trello\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"unified\": { \"type\": \"string\", \"example\": \"1F600\" },\n                \"name\": { \"type\": \"string\", \"example\": \"GRINNING FACE\" },\n                \"native\": { \"type\": \"string\", \"example\": \"😀\" },\n                \"shortName\": { \"type\": \"string\", \"example\": \"grinning\" },\n                \"shortNames\": {\n                  \"type\": \"array\",\n                  \"items\": { \"type\": \"string\", \"example\": \"grinning\\\"\" }\n                },\n                \"text\": { \"type\": \"string\", \"example\": \":)\" },\n                \"texts\": {\n                  \"type\": \"string\",\n                  \"nullable\": true,\n                  \"example\": null\n                },\n                \"category\": { \"type\": \"string\", \"example\": \"Smileys \u0026 People\" },\n                \"sheetX\": { \"type\": \"number\", \"example\": 30 },\n                \"sheetY\": { \"type\": \"number\", \"example\": 24 },\n                \"tts\": { \"type\": \"string\", \"example\": \"grinning face\" },\n                \"keywords\": {\n                  \"type\": \"array\",\n                  \"items\": { \"type\": \"string\", \"example\": \"face\" }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"Enterprise\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"$ref\": \"#/components/schemas/TrelloID\",\n            \"example\": \"59c15d19566e197b23665901\"\n          },\n          \"name\": { \"type\": \"string\", \"example\": \"bentley_test\" },\n          \"displayName\": {\n            \"type\": \"string\",\n            \"example\": \"Bentley's Test Enterprise!\"\n          },\n          \"logoHash\": { \"type\": \"string\", \"nullable\": true, \"example\": null },\n          \"logoUrl\": { \"type\": \"string\", \"nullable\": true, \"example\": null },\n          \"prefs\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"ssoOnly\": { \"type\": \"boolean\", \"example\": false },\n              \"signup\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"banner\": { \"type\": \"string\" },\n                  \"bannerHtml\": {\n                    \"type\": \"string\",\n                    \"example\": \"\u003cp\u003eHello\u003c/p\u003e\\n\"\n                  }\n                }\n              },\n              \"mandatoryTransferDate\": {\n                \"type\": \"string\",\n                \"format\": \"date\",\n                \"nullable\": true,\n                \"example\": null\n              },\n              \"brandingColor\": { \"type\": \"string\" },\n              \"autoJoinOrganizations\": { \"type\": \"boolean\", \"example\": false },\n              \"notifications\": { \"type\": \"object\" },\n              \"maxMembers\": {\n                \"type\": \"number\",\n                \"nullable\": true,\n                \"example\": null\n              }\n            }\n          },\n          \"organizationPrefs\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"boardVisibilityRestrict\": { \"type\": \"object\" },\n              \"boardDeleteRestrict\": { \"type\": \"object\" },\n              \"attachmentRestrictions\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\",\n                  \"enum\": [\n                    \"computer\",\n                    \"trello\",\n                    \"google-drive\",\n                    \"box\",\n                    \"onedrive\",\n                    \"link\"\n                  ]\n                }\n              }\n            }\n          },\n          \"ssoActivationFailed\": { \"type\": \"boolean\" },\n          \"idAdmins\": {\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          \"enterpriseDomains\": {\n            \"type\": \"array\",\n            \"items\": { \"type\": \"string\", \"format\": \"url\" }\n          },\n          \"isRealEnterprise\": { \"type\": \"boolean\", \"example\": true },\n          \"pluginWhitelistingEnabled\": {\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          \"idOrganizations\": {\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          \"products\": {\n            \"type\": \"array\",\n            \"items\": { \"type\": \"number\", \"format\": \"integer\" }\n          },\n          \"licenses\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"maxMembers\": {\n                \"type\": \"number\",\n                \"nullable\": true,\n                \"format\": \"integer\",\n                \"example\": null\n              },\n              \"totalMembers\": {\n                \"type\": \"number\",\n                \"format\": \"integer\",\n                \"example\": 5\n              },\n              \"relatedEnterprises\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": { \"type\": \"string\", \"example\": \"enterprise_name\" },\n                    \"displayName\": {\n                      \"type\": \"string\",\n                      \"example\": \"My Test Enterprise!\"\n                    },\n                    \"count\": {\n                      \"type\": \"number\",\n                      \"example\": 5,\n                      \"format\": \"integer\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"domains\": {\n            \"type\": \"array\",\n            \"items\": { \"type\": \"string\", \"format\": \"url\" }\n          },\n          \"dateOrganizationPrefsLastUpdated\": {\n            \"type\": \"string\",\n            \"example\": \"2019-08-22T18:15:53.546Z\",\n            \"format\": \"date\"\n          },\n          \"idp\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"requestSigned\": { \"type\": \"boolean\", \"example\": false },\n              \"certificate\": {\n                \"type\": \"string\",\n                \"nullable\": true,\n                \"example\": null\n              },\n              \"loginUrl\": {\n                \"type\": \"string\",\n                \"format\": \"url\",\n                \"nullable\": true,\n                \"example\": null\n              }\n            }\n          }\n        }\n      },\n      \"EnterpriseAdmin\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"$ref\": \"#/components/schemas/TrelloID\",\n            \"example\": \"5dced8665015383ed5ca248c\"\n          },\n          \"fullName\": { \"type\": \"string\", \"example\": \"Bob Loblaw\" },\n          \"username\": { \"type\": \"string\", \"example\": \"bobloblaw\" }\n        }\n      },\n      \"EnterpriseAuditLog\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"idAction\": {\n            \"$ref\": \"#/components/schemas/TrelloID\",\n            \"example\": \"5dced8665015383ed5ca248c\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"example\": \"addOrganizationToEnterprise\"\n          },\n          \"date\": {\n            \"type\": \"string\",\n            \"format\": \"date\",\n            \"example\": \"2018-04-26T17:03:25.155Z\"\n          },\n          \"memberCreator\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"$ref\": \"#/components/schemas/TrelloID\",\n                \"example\": \"5bc79d4206526d2279c1e6ea\"\n              },\n              \"username\": { \"type\": \"string\", \"example\": \"bobloblaw\" },\n              \"fullName\": { \"type\": \"string\", \"example\": \"Bob Loblaw (Trello)\" }\n            }\n          },\n          \"organization\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"enterpriseJoinRequest\": {\n                \"type\": \"object\",\n                \"nullable\": true,\n                \"properties\": {\n                  \"idEnterprise\": {\n                    \"$ref\": \"#/components/schemas/TrelloID\",\n                    \"example\": \"617ac9070293e6612650e0ca\"\n                  },\n                  \"idMember\": {\n                    \"$ref\": \"#/components/schemas/TrelloID\",\n                    \"example\": \"5bc79d4206526d2279c1e6ea\"\n                  },\n                  \"date\": {\n                    \"type\": \"string\",\n                    \"format\": \"date\",\n                    \"example\": \"2018-04-26T17:03:25.155Z\"\n                  }\n                }\n              },\n              \"id\": {\n                \"$ref\": \"#/components/schemas/TrelloID\",\n                \"example\": \"617ac9070293e6612650e0ca\"\n              },\n              \"name\": { \"type\": \"string\", \"example\": \"organization name\" }\n            }\n          },\n          \"member\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"$ref\": \"#/components/schemas/TrelloID\",\n                \"example\": \"5bc79d4206526d2279c1e6ea\"\n              },\n              \"username\": { \"type\": \"string\", \"example\": \"bentleycook\" },\n              \"fullName\": { \"type\": \"string\", \"example\": \"Bentley Cook\" }\n            }\n          }\n        }\n      },\n      \"Export\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"$ref\": \"#/components/schemas/TrelloID\",\n            \"example\": \"5dced8665015383ed5ca248c\"\n          },\n          \"status\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"attempts\": { \"type\": \"number\", \"example\": 0 },\n              \"finished\": { \"type\": \"boolean\", \"example\": false },\n              \"stage\": { \"type\": \"string\", \"example\": \"Export_queued\" }\n            }\n          },\n          \"startedAt\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"example\": \"2019-11-15T16:55:02.000Z\"\n          },\n          \"size\": { \"type\": \"string\", \"nullable\": true, \"example\": null },\n          \"exportUrl\": { \"type\": \"string\", \"nullable\": true, \"example\": null }\n        }\n      },\n      \"TrelloID\": {\n        \"type\": \"string\",\n        \"pattern\": \"^[0-9a-fA-F]{24}$\",\n        \"example\": \"5abbe4b7ddc1b351ef961414\"\n      },\n      \"ViewFilter\": {\n        \"type\": \"string\",\n        \"enum\": [\"all\", \"closed\", \"none\", \"open\"]\n      },\n      \"Color\": {\n        \"type\": \"string\",\n        \"enum\": [\n          \"yellow\",\n          \"purple\",\n          \"blue\",\n          \"red\",\n          \"green\",\n          \"orange\",\n          \"black\",\n          \"sky\",\n          \"pink\",\n          \"lime\"\n        ],\n        \"nullable\": true\n      },\n      \"CardAging\": { \"type\": \"string\", \"enum\": [\"pirate\", \"regular\"] },\n      \"ImageDescriptor\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"width\": {\n            \"description\": \"The width of the image.\",\n            \"type\": \"integer\",\n            \"example\": 100\n          },\n          \"height\": {\n            \"description\": \"The height of the image.\",\n            \"type\": \"integer\",\n            \"example\": 64\n          },\n          \"url\": {\n            \"description\": \"The URL of the image.\",\n            \"format\": \"url\",\n            \"type\": \"string\",\n            \"example\": \"https://trello-backgrounds.s3.amazonaws.com/SharedBackground/100x64/abc/photo-123.jpg\"\n          }\n        }\n      },\n      \"Label\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"description\": \"The ID of the label.\",\n            \"type\": \"string\",\n            \"$ref\": \"#/components/schemas/TrelloID\"\n          },\n          \"idBoard\": {\n            \"type\": \"string\",\n            \"description\": \"The ID of the board the label is on.\",\n            \"$ref\": \"#/components/schemas/TrelloID\",\n            \"example\": \"5abbe4b7ddc1b351ef961414\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The name displayed for the label.\",\n            \"example\": \"Overdue\",\n            \"nullable\": true,\n            \"minLength\": 0,\n            \"maxLength\": 16384\n          },\n          \"color\": {\n            \"type\": \"string\",\n            \"$ref\": \"#/components/schemas/Color\",\n            \"description\": \"The color of the label. Null means no color and the label will not be shown on the front of Cards.\"\n          }\n        }\n      },\n      \"ListFields\": { \"type\": \"string\", \"enum\": [\"id\"] },\n      \"TrelloList\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": { \"$ref\": \"#/components/schemas/TrelloID\" },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The name of the list\",\n            \"example\": \"Things to buy today\"\n          },\n          \"closed\": { \"type\": \"boolean\" },\n          \"pos\": { \"type\": \"number\" },\n          \"softLimit\": { \"type\": \"string\" },\n          \"idBoard\": { \"type\": \"string\" },\n          \"subscribed\": { \"type\": \"boolean\" },\n          \"limits\": { \"$ref\": \"#/components/schemas/Limits\" }\n        }\n      },\n      \"LimitsObject\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"status\": { \"type\": \"string\", \"enum\": [\"ok\", \"warning\"] },\n          \"disableAt\": { \"type\": \"number\", \"example\": 36000 },\n          \"warnAt\": { \"type\": \"number\", \"example\": 32400 }\n        }\n      },\n      \"Limits\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"attachments\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"perBoard\": {\n                \"type\": \"object\",\n                \"$ref\": \"#/components/schemas/LimitsObject\"\n              }\n            }\n          }\n        }\n      },\n      \"MemberFields\": { \"type\": \"string\", \"enum\": [\"id\"] },\n      \"Member\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": { \"$ref\": \"#/components/schemas/TrelloID\" },\n          \"activityBlocked\": { \"type\": \"boolean\", \"example\": false },\n          \"avatarHash\": {\n            \"type\": \"string\",\n            \"example\": \"fc8faaaee46666a4eb8b626c08933e16\"\n          },\n          \"avatarUrl\": {\n            \"type\": \"string\",\n            \"format\": \"url\",\n            \"example\": \"https://trello-avatars.s3.amazonaws.com/fc8faaaee46666a4eb8b626c08933e16\"\n          },\n          \"bio\": {\n            \"type\": \"string\",\n            \"example\": \"👋 I'm a developer advocate at Trello!\"\n          },\n          \"bioData\": {\n            \"type\": \"object\",\n            \"properties\": { \"emoji\": { \"type\": \"object\" } }\n          },\n          \"confirmed\": { \"type\": \"boolean\", \"example\": true },\n          \"fullName\": { \"type\": \"string\", \"example\": \"Bentley Cook\" },\n          \"idEnterprise\": {\n            \"type\": \"string\",\n            \"$ref\": \"#/components/schemas/TrelloID\"\n          },\n          \"idEnterprisesDeactivated\": {\n            \"type\": \"array\",\n            \"items\": { \"type\": \"string\" }\n          },\n          \"idMemberReferrer\": {\n            \"$ref\": \"#/components/schemas/TrelloID\",\n            \"nullable\": true,\n            \"example\": null\n          },\n          \"idPremOrgsAdmin\": {\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          \"initials\": { \"type\": \"string\", \"example\": \"BC\" },\n          \"memberType\": {\n            \"type\": \"string\",\n            \"enum\": [\"normal\", \"ghost\"],\n            \"example\": \"normal\"\n          },\n          \"nonPublic\": { \"type\": \"object\" },\n          \"nonPublicAvailable\": { \"type\": \"boolean\", \"example\": false },\n          \"products\": { \"type\": \"array\", \"items\": { \"type\": \"integer\" } },\n          \"url\": {\n            \"type\": \"string\",\n            \"format\": \"url\",\n            \"example\": \"https://trello.com/bentleycook\"\n          },\n          \"username\": { \"type\": \"string\", \"example\": \"bentleycook\" },\n          \"status\": {\n            \"type\": \"string\",\n            \"enum\": [\"disconnected\"],\n            \"example\": \"disconnected\"\n          },\n          \"aaEmail\": {\n            \"type\": \"string\",\n            \"format\": \"email\",\n            \"nullable\": true,\n            \"example\": null\n          },\n          \"aaEnrolledDate\": {\n            \"type\": \"string\",\n            \"example\": null,\n            \"nullable\": true\n          },\n          \"aaId\": { \"type\": \"string\", \"example\": null, \"nullable\": true },\n          \"avatarSource\": {\n            \"type\": \"string\",\n            \"enum\": [\"gravatar\", \"upload\"],\n            \"example\": \"gravatar\"\n          },\n          \"email\": { \"type\": \"string\", \"example\": \"bcook@atlassian.com\" },\n          \"gravatarHash\": {\n            \"type\": \"string\",\n            \"example\": \"0a1e804f6e35a65ae5e1f7ef4c92471c\"\n          },\n          \"idBoards\": {\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          \"idOrganizations\": {\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          \"idEnterprisesAdmin\": {\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          \"limits\": { \"$ref\": \"#/components/schemas/LimitsObject\" },\n          \"loginTypes\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"enum\": [\"password\", \"saml\"],\n              \"example\": \"password\"\n            }\n          },\n          \"marketingOptIn\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"optedIn\": { \"type\": \"boolean\", \"example\": false },\n              \"date\": {\n                \"type\": \"string\",\n                \"format\": \"date\",\n                \"example\": \"2018-04-26T17:03:25.155Z\"\n              }\n            }\n          },\n          \"messagesDismissed\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"name\": { \"type\": \"string\", \"example\": \"ad-security-features\" },\n              \"count\": { \"type\": \"string\", \"example\": 4 },\n              \"lastDismissed\": {\n                \"type\": \"string\",\n                \"format\": \"date\",\n                \"example\": \"2019-03-11T20:19:46.809Z\"\n              },\n              \"_id\": {\n                \"$ref\": \"#/components/schemas/TrelloID\",\n                \"example\": \"5995d44573d197eada632a32\"\n              }\n            }\n          },\n          \"oneTimeMessagesDismissed\": {\n            \"type\": \"array\",\n            \"items\": { \"type\": \"string\" }\n          },\n          \"prefs\": { \"$ref\": \"#/components/schemas/MemberPrefs\" },\n          \"trophies\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } },\n          \"uploadedAvatarHash\": {\n            \"type\": \"string\",\n            \"example\": \"dac3ad49ff117829dd63a79bb2ea3426\"\n          },\n          \"uploadedAvatarUrl\": {\n            \"type\": \"string\",\n            \"format\": \"url\",\n            \"example\": \"https://trello-avatars.s3.amazonaws.com/dac3ad49ff117829dd63a79bb2ea3426\"\n          },\n          \"premiumFeatures\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } },\n          \"isAaMastered\": { \"type\": \"boolean\", \"example\": false },\n          \"ixUpdate\": { \"type\": \"number\", \"example\": \"48427\" },\n          \"idBoardsPinned\": {\n            \"type\": \"array\",\n            \"nullable\": true,\n            \"items\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        }\n      },\n      \"MemberPrefs\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"timezoneInfo\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"offsetCurrent\": { \"type\": \"integer\", \"example\": 360 },\n              \"timezoneCurrent\": { \"type\": \"string\", \"example\": \"CST\" },\n              \"offsetNext\": { \"type\": \"integer\", \"example\": 300 },\n              \"dateNext\": {\n                \"type\": \"string\",\n                \"format\": \"date\",\n                \"example\": \"2020-03-08T08:00:00.000Z\"\n              },\n              \"timezoneNext\": { \"type\": \"string\", \"example\": \"CDT\" }\n            }\n          },\n          \"privacy\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"fullName\": {\n                \"type\": \"string\",\n                \"enum\": [\"public\", \"private\", \"collaborator\"],\n                \"example\": \"public\"\n              },\n              \"avatar\": {\n                \"type\": \"string\",\n                \"enum\": [\"public\", \"private\", \"collaborator\"],\n                \"example\": \"public\"\n              }\n            }\n          },\n          \"sendSummaries\": { \"type\": \"boolean\", \"example\": true },\n          \"minutesBetweenSummaries\": { \"type\": \"integer\", \"example\": 60 },\n          \"minutesBeforeDeadlineToNotify\": {\n            \"type\": \"integer\",\n            \"example\": 1440\n          },\n          \"colorBlind\": { \"type\": \"boolean\", \"example\": true },\n          \"locale\": { \"type\": \"string\", \"example\": \"en-AU\" },\n          \"timezone\": { \"type\": \"string\", \"example\": \"America/Chicago\" },\n          \"twoFactor\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"enabled\": { \"type\": \"boolean\", \"example\": true },\n              \"needsNewBackups\": { \"type\": \"boolean\", \"example\": false }\n            }\n          }\n        }\n      },\n      \"Memberships\": {\n        \"type\": \"object\",\n        \"description\": \"\",\n        \"properties\": { \"id\": { \"$ref\": \"#/components/schemas/TrelloID\" } }\n      },\n      \"NotificationFields\": {\n        \"type\": \"string\",\n        \"enum\": [\n          \"id\",\n          \"unread\",\n          \"type\",\n          \"date\",\n          \"dateRead\",\n          \"data\",\n          \"card\",\n          \"board\",\n          \"idMemberCreator\",\n          \"idAction\",\n          \"reactions\"\n        ]\n      },\n      \"Notification\": {\n        \"properties\": {\n          \"id\": { \"type\": \"string\", \"example\": \"5dc591ac425f2a223aba0a8e\" },\n          \"unread\": { \"type\": \"boolean\", \"example\": true },\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [\"cardDueSoon\"],\n            \"example\": \"cardDueSoon\"\n          },\n          \"date\": { \"type\": \"string\", \"example\": \"2019-11-08T16:02:52.763Z\" },\n          \"dateRead\": { \"type\": \"string\", \"example\": null },\n          \"data\": { \"type\": \"string\", \"example\": null },\n          \"card\": { \"type\": \"object\", \"$ref\": \"#/components/schemas/Card\" },\n          \"board\": { \"type\": \"object\", \"$ref\": \"#/components/schemas/Board\" },\n          \"idMemberCreator\": {\n            \"$ref\": \"#/components/schemas/TrelloID\",\n            \"nullable\": true,\n            \"example\": null\n          },\n          \"idAction\": {\n            \"$ref\": \"#/components/schemas/TrelloID\",\n            \"nullable\": true,\n            \"example\": null\n          },\n          \"reactions\": { \"type\": \"array\", \"example\": [] }\n        }\n      },\n      \"OrganizationFields\": { \"type\": \"string\", \"enum\": [\"id\", \"name\"] },\n      \"Organization\": {\n        \"type\": \"object\",\n        \"properties\": { \"id\": { \"$ref\": \"#/components/schemas/TrelloID\" } }\n      },\n      \"PendingOrganizations\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"$ref\": \"#/components/schemas/TrelloID\",\n            \"example\": \"617ac9070293e6612650e0ca\"\n          },\n          \"idMember\": {\n            \"$ref\": \"#/components/schemas/TrelloID\",\n            \"example\": \"5589c3ea49b40cedc28cf70e\"\n          },\n          \"memberRequestor\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\",\n                \"$ref\": \"#/components/schemas/TrelloID\",\n                \"example\": \"59cd149051aa57a706962996\"\n              },\n              \"fullName\": { \"type\": \"string\", \"example\": \"Bob Loblaw (Trello)\" }\n            }\n          },\n          \"date\": {\n            \"type\": \"string\",\n            \"format\": \"date\",\n            \"example\": \"2018-10-17T19:10:14.808Z\"\n          },\n          \"displayName\": { \"type\": \"string\", \"example\": \"Organization Name\" },\n          \"membershipCount\": { \"type\": \"number\", \"example\": 2 },\n          \"logoUrl\": { \"type\": \"string\", \"nullable\": true, \"example\": null },\n          \"transferability\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"transferrable\": { \"type\": \"boolean\", \"example\": true },\n              \"newBillableMembers\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"$ref\": \"#/components/schemas/TrelloID\",\n                      \"example\": \"5ab10be237846c43015f1091\"\n                    },\n                    \"fullName\": { \"type\": \"string\", \"example\": \"Bob Loblaw\" },\n                    \"username\": { \"type\": \"string\", \"example\": \"bobloblaw\" },\n                    \"initials\": { \"type\": \"string\", \"example\": \"BL\" },\n                    \"avatarHash\": {\n                      \"type\": \"string\",\n                      \"example\": \"fc8faaaee46666a4eb8b626c08933e16\"\n                    }\n                  }\n                }\n              },\n              \"restrictedMembers\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"$ref\": \"#/components/schemas/TrelloID\",\n                      \"example\": \"5ab10be237846c43015f1091\"\n                    },\n                    \"fullName\": { \"type\": \"string\", \"example\": \"Bob Loblaw\" },\n                    \"username\": { \"type\": \"string\", \"example\": \"bobloblaw\" },\n                    \"initials\": { \"type\": \"string\", \"example\": \"BL\" },\n                    \"avatarHash\": {\n                      \"type\": \"string\",\n                      \"example\": \"fc8faaaee46666a4eb8b626c08933e16\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"Plugin\": {\n        \"type\": \"object\",\n        \"properties\": { \"id\": { \"$ref\": \"#/components/schemas/TrelloID\" } }\n      },\n      \"PluginData\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"$ref\": \"#/components/schemas/TrelloID\",\n            \"example\": \"5c487f39294cab6ac1d6b305\"\n          },\n          \"idPlugin\": {\n            \"$ref\": \"#/components/schemas/TrelloID\",\n            \"example\": \"55a5d915446f517774210003\"\n          },\n          \"scope\": {\n            \"type\": \"string\",\n            \"enum\": [\"member\", \"board\", \"organization\", \"card\"],\n            \"example\": \"organization\"\n          },\n          \"idModel\": {\n            \"$ref\": \"#/components/schemas/TrelloID\",\n            \"example\": \"586e8d7b1af892b26d5b76b1\"\n          },\n          \"value\": {\n            \"type\": \"string\",\n            \"example\": \"{\\\"token\\\":\\\"S=s458:U=bda7cda:E=16fd2e21f55:C=1687b30f2c0:P=185:A=it-team-0604:V=2:H=3b0f3bac9c2a2af766202ebb9530a4a5\\\"}\"\n          },\n          \"access\": {\n            \"type\": \"string\",\n            \"enum\": [\"private\", \"shared\"],\n            \"example\": \"private\"\n          }\n        }\n      },\n      \"PluginListing\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"$ref\": \"#/components/schemas/TrelloID\",\n            \"example\": \"5a7cd2f8f99c517f58da1579\"\n          },\n          \"name\": { \"type\": \"string\", \"example\": \"Attachment Section Example\" },\n          \"locale\": { \"type\": \"string\", \"example\": \"en-US\" },\n          \"description\": {\n            \"type\": \"string\",\n            \"example\": \"The [Glitch](https://glitch.com) Power-Up allows you to...\"\n          },\n          \"overview\": { \"type\": \"string\", \"example\": \"\" }\n        }\n      },\n      \"Prefs\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"permissionLevel\": { \"type\": \"string\", \"enum\": [\"org\", \"board\"] },\n          \"hideVotes\": { \"type\": \"boolean\" },\n          \"voting\": { \"type\": \"string\", \"enum\": [\"disabled\", \"enabled\"] },\n          \"comments\": { \"type\": \"string\" },\n          \"invitations\": { \"enum\": [\"admins\", \"members\"] },\n          \"selfJoin\": { \"type\": \"boolean\" },\n          \"cardCovers\": { \"type\": \"boolean\" },\n          \"isTemplate\": { \"type\": \"boolean\" },\n          \"cardAging\": { \"$ref\": \"#/components/schemas/CardAging\" },\n          \"calendarFeedEnabled\": { \"type\": \"boolean\" },\n          \"background\": { \"$ref\": \"#/components/schemas/TrelloID\" },\n          \"backgroundImage\": { \"type\": \"string\", \"format\": \"uri\" },\n          \"backgroundImageScaled\": {\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"#/components/schemas/ImageDescriptor\" }\n          },\n          \"backgroundTile\": { \"type\": \"boolean\" },\n          \"backgroundBrightness\": { \"type\": \"string\", \"example\": \"dark\" },\n          \"backgroundBottomColor\": { \"type\": \"string\", \"example\": \"#1e2e00\" },\n          \"backgroundTopColor\": { \"type\": \"string\", \"example\": \"#ffffff\" },\n          \"canBePublic\": { \"type\": \"boolean\" },\n          \"canBeEnterprise\": { \"type\": \"boolean\" },\n          \"canBeOrg\": { \"type\": \"boolean\" },\n          \"canBePrivate\": { \"type\": \"boolean\" },\n          \"canInvite\": { \"type\": \"boolean\" }\n        }\n      },\n      \"SavedSearch\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"$ref\": \"#/components/schemas/TrelloID\",\n            \"example\": \"5589b47349b40cedc28ceae2\"\n          },\n          \"name\": { \"type\": \"string\", \"example\": \"My Cards\" },\n          \"query\": { \"type\": \"string\", \"example\": \"@me\" },\n          \"pos\": {\n            \"$ref\": \"#/components/schemas/posStringOrNumber\",\n            \"example\": 1638\n          }\n        }\n      },\n      \"Tag\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"$ref\": \"#/components/schemas/TrelloID\",\n            \"example\": \"58dd6dcaf8b86744d3cb4cde\"\n          },\n          \"name\": { \"type\": \"string\", \"example\": \"My Collection\" }\n        }\n      },\n      \"TokenPermission\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"idModel\": {\n            \"oneOf\": [\n              { \"$ref\": \"#/components/schemas/TrelloID\" },\n              { \"type\": \"string\", \"enum\": [\"*\"] }\n            ]\n          },\n          \"modelType\": {\n            \"type\": \"string\",\n            \"enum\": [\"board\", \"member\", \"organization\", \"enterprise\"]\n          },\n          \"read\": { \"type\": \"boolean\" },\n          \"write\": { \"type\": \"boolean\" }\n        }\n      },\n      \"TokenFields\": {\n        \"type\": \"string\",\n        \"enum\": [\n          \"identifier\",\n          \"idMember\",\n          \"dateCreated\",\n          \"dateExpires\",\n          \"permissions\"\n        ]\n      },\n      \"Token\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"$ref\": \"#/components/schemas/TrelloID\",\n            \"example\": \"5da728c55235b443c5b97181\"\n          },\n          \"identifier\": { \"type\": \"string\", \"example\": \"App Name\" },\n          \"idMember\": {\n            \"$ref\": \"#/components/schemas/TrelloID\",\n            \"example\": \"5589c3ea49b40cedc28cf70e\"\n          },\n          \"dateCreated\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"example\": \"2019-10-16T14:27:17.304Z\"\n          },\n          \"dateExpires\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"example\": null,\n            \"nullable\": true\n          },\n          \"permissions\": {\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"#/components/schemas/TokenPermission\" }\n          }\n        }\n      },\n      \"TransferrableOrganization\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"transferrable\": { \"type\": \"boolean\", \"example\": true },\n          \"newBillableMembers\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"$ref\": \"#/components/schemas/TrelloID\",\n                  \"example\": \"5ab10be237846c43015f1091\"\n                },\n                \"fullName\": { \"type\": \"string\", \"example\": \"Bob Loblaw\" },\n                \"username\": { \"type\": \"string\", \"example\": \"bobloblaw\" },\n                \"initials\": { \"type\": \"string\", \"example\": \"BL\" },\n                \"avatarHash\": {\n                  \"type\": \"string\",\n                  \"example\": \"fc8faaaee46666a4eb8b626c08933e16\"\n                }\n              }\n            }\n          },\n          \"restrictedMembers\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"$ref\": \"#/components/schemas/TrelloID\",\n                  \"example\": \"5ab10be237846c43015f1091\"\n                },\n                \"fullName\": { \"type\": \"string\", \"example\": \"Bob Loblaw\" },\n                \"username\": { \"type\": \"string\", \"example\": \"bobloblaw\" },\n                \"initials\": { \"type\": \"string\", \"example\": \"BL\" },\n                \"avatarHash\": {\n                  \"type\": \"string\",\n                  \"example\": \"fc8faaaee46666a4eb8b626c08933e16\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"Webhook\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"$ref\": \"#/components/schemas/TrelloID\",\n            \"example\": \"58dd6dcaf8b86744d3cb4cde\"\n          },\n          \"description\": { \"type\": \"string\", \"example\": \"Board Webhook\" },\n          \"idModel\": {\n            \"$ref\": \"#/components/schemas/TrelloID\",\n            \"example\": \"59cd149051aa57a706962996\"\n          },\n          \"callbackURL\": {\n            \"type\": \"string\",\n            \"format\": \"url\",\n            \"example\": \"https://mywebhookurl.com/?type=board\"\n          },\n          \"active\": { \"type\": \"boolean\", \"example\": true },\n          \"consecutiveFailures\": { \"type\": \"number\", \"example\": 0 },\n          \"firstConsecutiveFailDate\": {\n            \"type\": \"string\",\n            \"format\": \"date\",\n            \"nullable\": true,\n            \"example\": null\n          }\n        }\n      },\n      \"Error\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"code\": { \"type\": \"string\" },\n          \"message\": { \"type\": \"string\" }\n        },\n        \"required\": [\"code\", \"message\"]\n      }\n    },\n    \"responses\": {\n      \"NotFound\": {\n        \"description\": \"The specified resource was not found\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": { \"$ref\": \"#/components/schemas/Error\" }\n          }\n        }\n      },\n      \"Unauthorized\": {\n        \"description\": \"Unauthorized\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": { \"$ref\": \"#/components/schemas/Error\" }\n          }\n        }\n      }\n    }\n  },\n  \"security\": [{ \"oauth1\": [], \"APIKey\": [], \"APIToken\": [] }],\n  \"paths\": {\n    \"/actions/{id}\": {\n      \"parameters\": [\n        {\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"The ID of the Action\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        }\n      ],\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get an Action\",\n        \"description\": \"Get an Action\",\n        \"operationId\": \"get-actions-id\",\n        \"parameters\": [\n          {\n            \"name\": \"display\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": true }\n          },\n          {\n            \"name\": \"entities\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          },\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of action [fields](/cloud/trello/guides/rest-api/object-definitions/#action-object)\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"all\" }\n          },\n          {\n            \"name\": \"member\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": true }\n          },\n          {\n            \"name\": \"member_fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of member [fields](/cloud/trello/guides/rest-api/object-definitions/)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"avatarHash,fullName,initials,username\"\n            }\n          },\n          {\n            \"name\": \"memberCreator\",\n            \"in\": \"query\",\n            \"description\": \"Whether to include the member object for the creator of the action\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": true }\n          },\n          {\n            \"name\": \"memberCreator_fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of member [fields](/cloud/trello/guides/rest-api/object-definitions/)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"avatarHash,fullName,initials,username\"\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      },\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Update an Action\",\n        \"description\": \"Update a specific Action. Only comment actions can be updated. Used to edit the content of a comment.\",\n        \"operationId\": \"put-actions-id\",\n        \"parameters\": [\n          {\n            \"name\": \"text\",\n            \"in\": \"query\",\n            \"description\": \"The new text for the comment\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      },\n      \"delete\": {\n        \"tags\": [],\n        \"summary\": \"Delete an Action\",\n        \"description\": \"Delete a specific action. Only comment actions can be deleted.\",\n        \"operationId\": \"delete-actions-id\",\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/actions/{id}/{field}\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get a specific field on an Action\",\n        \"description\": \"Get a specific property of an action\",\n        \"operationId\": \"get-actions-id-field\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the Action\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"field\",\n            \"in\": \"path\",\n            \"description\": \"An action field\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/ActionFields\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/Action\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/actions/{id}/board\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get the Board for an Action\",\n        \"description\": \"Get the Board for an Action\",\n        \"operationId\": \"get-actions-id-board\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the action\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of board fields\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/BoardFields\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/Board\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/actions/{id}/card\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get the Card for an Action\",\n        \"description\": \"Get the card for an action\",\n        \"operationId\": \"get-actions-id-card\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the action\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of card fields\",\n            \"required\": false,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/CardFields\",\n              \"default\": \"all\"\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/Card\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/actions/{id}/list\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get the List for an Action\",\n        \"description\": \"Get the List for an Action\",\n        \"operationId\": \"get-actions-id-list\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the action\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of list fields\",\n            \"required\": false,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/ListFields\",\n              \"default\": \"all\"\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/TrelloList\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/actions/{id}/member\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get the Member of an Action\",\n        \"description\": \"Gets the member of an action (not the creator)\",\n        \"operationId\": \"get-actions-id-member\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the Action\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of member fields\",\n            \"required\": false,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/MemberFields\",\n              \"default\": \"all\"\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/Member\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/actions/{id}/memberCreator\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get the Member Creator of an Action\",\n        \"description\": \"Get the Member who created the Action\",\n        \"operationId\": \"get-actions-id-membercreator\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the Action\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of member fields\",\n            \"required\": false,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/MemberFields\",\n              \"default\": \"all\"\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/Member\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/actions/{id}/organization\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get the Organization of an Action\",\n        \"description\": \"Get the Organization of an Action\",\n        \"operationId\": \"get-actions-id-organization\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the action\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of organization fields\",\n            \"required\": false,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/OrganizationFields\",\n              \"default\": \"all\"\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/Organization\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/actions/{id}/text\": {\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Update a Comment Action\",\n        \"description\": \"Update a comment action\",\n        \"operationId\": \"put-actions-id-text\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the action to update\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"value\",\n            \"in\": \"query\",\n            \"description\": \"The new text for the comment\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/actions/{idAction}/reactions\": {\n      \"parameters\": [\n        {\n          \"name\": \"idAction\",\n          \"in\": \"path\",\n          \"description\": \"The ID of the action\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        }\n      ],\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get Action's Reactions\",\n        \"description\": \"List reactions for an action\",\n        \"operationId\": \"get-actions-idaction-reactions\",\n        \"parameters\": [\n          {\n            \"name\": \"member\",\n            \"in\": \"query\",\n            \"description\": \"Whether to load the member as a nested resource. See [Members Nested Resource](/cloud/trello/guides/rest-api/nested-resources/#members-nested-resource)\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": true }\n          },\n          {\n            \"name\": \"emoji\",\n            \"in\": \"query\",\n            \"description\": \"Whether to load the emoji as a nested resource.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": true }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      },\n      \"post\": {\n        \"tags\": [],\n        \"summary\": \"Create Reaction for Action\",\n        \"description\": \"Adds a new reaction to an action\",\n        \"operationId\": \"post-actions-idaction-reactions\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"shortName\": {\n                    \"type\": \"string\",\n                    \"description\": \"The primary `shortName` of the emoji to add. See [/emoji](#emoji)\"\n                  },\n                  \"skinVariation\": {\n                    \"type\": \"string\",\n                    \"description\": \"The `skinVariation` of the emoji to add. See [/emoji](#emoji)\"\n                  },\n                  \"native\": {\n                    \"type\": \"string\",\n                    \"description\": \"The emoji to add as a native unicode emoji. See [/emoji](#emoji)\"\n                  },\n                  \"unified\": {\n                    \"type\": \"string\",\n                    \"description\": \"The `unified` value of the emoji to add. See [/emoji](#emoji)\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/actions/{idAction}/reactions/{id}\": {\n      \"parameters\": [\n        {\n          \"name\": \"idAction\",\n          \"in\": \"path\",\n          \"description\": \"The ID of the Action\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        },\n        {\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"The ID of the reaction\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        }\n      ],\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get Action's Reaction\",\n        \"description\": \"Get information for a reaction\",\n        \"operationId\": \"get-actions-idaction-reactions-id\",\n        \"parameters\": [\n          {\n            \"name\": \"member\",\n            \"in\": \"query\",\n            \"description\": \"Whether to load the member as a nested resource. See [Members Nested Resource](/cloud/trello/guides/rest-api/nested-resources/#members-nested-resource)\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": true }\n          },\n          {\n            \"name\": \"emoji\",\n            \"in\": \"query\",\n            \"description\": \"Whether to load the emoji as a nested resource.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": true }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      },\n      \"delete\": {\n        \"tags\": [],\n        \"summary\": \"Delete Action's Reaction\",\n        \"description\": \"Deletes a reaction\",\n        \"operationId\": \"delete-actions-idaction-reactions-id\",\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/actions/{idAction}/reactionsSummary\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"List Action's summary of Reactions\",\n        \"description\": \"List a summary of all reactions for an action\",\n        \"operationId\": \"get-actions-idaction-reactionsummary\",\n        \"parameters\": [\n          {\n            \"name\": \"idAction\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the action\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/applications/{key}/compliance\": {\n      \"parameters\": [\n        {\n          \"name\": \"key\",\n          \"in\": \"path\",\n          \"required\": true,\n          \"schema\": { \"type\": \"string\" }\n        }\n      ],\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get Application's compliance data\",\n        \"description\": \"\",\n        \"operationId\": \"applications-key-compliance\",\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/batch\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Batch Requests\",\n        \"description\": \"Make up to 10 GET requests in a single, batched API call.\",\n        \"operationId\": \"get-batch\",\n        \"parameters\": [\n          {\n            \"name\": \"urls\",\n            \"in\": \"query\",\n            \"description\": \"A list of API routes. Maximum of 10 routes allowed. The routes should begin with a forward slash and should not include the API version number - e.g. \\\"urls=/members/trello,/cards/[cardId]\\\"\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/boards/{id}/memberships\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get Memberships of a Board\",\n        \"description\": \"Get information about the memberships users have to the board.\",\n        \"operationId\": \"get-boards-id-memberships\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the board\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"filter\",\n            \"in\": \"query\",\n            \"description\": \"One of `admins`, `all`, `none`, `normal`\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"all\",\n              \"enum\": [\"admins\", \"all\", \"none\", \"normal\"]\n            }\n          },\n          {\n            \"name\": \"activity\",\n            \"in\": \"query\",\n            \"description\": \"Works for premium organizations only.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          },\n          {\n            \"name\": \"orgMemberType\",\n            \"in\": \"query\",\n            \"description\": \"Shows the type of member to the org the user is. For instance, an org admin will have a `orgMemberType` of `admin`.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          },\n          {\n            \"name\": \"member\",\n            \"in\": \"query\",\n            \"description\": \"Determines whether to include a [nested member object](/cloud/trello/guides/rest-api/nested-resources/).\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          },\n          {\n            \"name\": \"member_fields\",\n            \"in\": \"query\",\n            \"description\": \"Fields to show if `member=true`. Valid values: [nested member resource fields](/cloud/trello/guides/rest-api/nested-resources/).\",\n            \"required\": false,\n            \"style\": \"form\",\n            \"explode\": false,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/MemberFields\",\n              \"default\": \"fullname,username\"\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/Memberships\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/boards/{id}\": {\n      \"parameters\": [\n        {\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        }\n      ],\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get a Board\",\n        \"description\": \"Request a single board.\",\n        \"operationId\": \"get-boards-id\",\n        \"parameters\": [\n          {\n            \"name\": \"actions\",\n            \"in\": \"query\",\n            \"description\": \"This is a nested resource. Read more about actions as nested resources [here](/cloud/trello/guides/rest-api/nested-resources/).\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"all\" }\n          },\n          {\n            \"name\": \"boardStars\",\n            \"in\": \"query\",\n            \"description\": \"Valid values are one of: `mine` or `none`.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"none\" }\n          },\n          {\n            \"name\": \"cards\",\n            \"in\": \"query\",\n            \"description\": \"This is a nested resource. Read more about cards as nested resources [here](/cloud/trello/guides/rest-api/nested-resources/).\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"none\" }\n          },\n          {\n            \"name\": \"card_pluginData\",\n            \"in\": \"query\",\n            \"description\": \"Use with the `cards` param to include card pluginData with the response\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          },\n          {\n            \"name\": \"checklists\",\n            \"in\": \"query\",\n            \"description\": \"This is a nested resource. Read more about checklists as nested resources [here](/cloud/trello/guides/rest-api/nested-resources/).\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"none\" }\n          },\n          {\n            \"name\": \"customFields\",\n            \"in\": \"query\",\n            \"description\": \"This is a nested resource. Read more about custom fields as nested resources [here](#custom-fields-nested-resource).\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          },\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"The fields of the board to be included in the response. Valid values: all or a comma-separated list of: closed, dateLastActivity, dateLastView, desc, descData, idMemberCreator, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed, url\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"name,desc,descData,closed,idOrganization,pinned,url,shortUrl,prefs,labelNames\"\n            }\n          },\n          {\n            \"name\": \"labels\",\n            \"in\": \"query\",\n            \"description\": \"This is a nested resource. Read more about labels as nested resources [here](/cloud/trello/guides/rest-api/nested-resources/).\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"lists\",\n            \"in\": \"query\",\n            \"description\": \"This is a nested resource. Read more about lists as nested resources [here](/cloud/trello/guides/rest-api/nested-resources/).\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"open\" }\n          },\n          {\n            \"name\": \"members\",\n            \"in\": \"query\",\n            \"description\": \"This is a nested resource. Read more about members as nested resources [here](/cloud/trello/guides/rest-api/nested-resources/).\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"none\" }\n          },\n          {\n            \"name\": \"memberships\",\n            \"in\": \"query\",\n            \"description\": \"This is a nested resource. Read more about memberships as nested resources [here](/cloud/trello/guides/rest-api/nested-resources/).\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"none\" }\n          },\n          {\n            \"name\": \"pluginData\",\n            \"in\": \"query\",\n            \"description\": \"Determines whether the pluginData for this board should be returned. Valid values: true or false.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          },\n          {\n            \"name\": \"organization\",\n            \"in\": \"query\",\n            \"description\": \"This is a nested resource. Read more about organizations as nested resources [here](/cloud/trello/guides/rest-api/nested-resources/).\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          },\n          {\n            \"name\": \"organization_pluginData\",\n            \"in\": \"query\",\n            \"description\": \"Use with the `organization` param to include organization pluginData with the response\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          },\n          {\n            \"name\": \"myPrefs\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          },\n          {\n            \"name\": \"tags\",\n            \"in\": \"query\",\n            \"description\": \"Also known as collections, tags, refer to the collection(s) that a Board belongs to.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/Board\" }\n              }\n            }\n          },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/Error\" }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Update a Board\",\n        \"description\": \"Update an existing board by id\",\n        \"operationId\": \"put-boards-id\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"The new name for the board. 1 to 16384 characters long.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"desc\",\n            \"in\": \"query\",\n            \"description\": \"A new description for the board, 0 to 16384 characters long\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"closed\",\n            \"in\": \"query\",\n            \"description\": \"Whether the board is closed\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\" }\n          },\n          {\n            \"name\": \"subscribed\",\n            \"in\": \"query\",\n            \"description\": \"Whether the acting user is subscribed to the board\",\n            \"required\": false,\n            \"explode\": false,\n            \"style\": \"form\",\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"idOrganization\",\n            \"in\": \"query\",\n            \"description\": \"The id of the Workspace the board should be moved to\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"prefs/permissionLevel\",\n            \"in\": \"query\",\n            \"description\": \"One of: org, private, public\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"prefs/selfJoin\",\n            \"in\": \"query\",\n            \"description\": \"Whether Workspace members can join the board themselves\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\" }\n          },\n          {\n            \"name\": \"prefs/cardCovers\",\n            \"in\": \"query\",\n            \"description\": \"Whether card covers should be displayed on this board\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\" }\n          },\n          {\n            \"name\": \"prefs/hideVotes\",\n            \"in\": \"query\",\n            \"description\": \"Determines whether the Voting Power-Up should hide who voted on cards or not.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\" }\n          },\n          {\n            \"name\": \"prefs/invitations\",\n            \"in\": \"query\",\n            \"description\": \"Who can invite people to this board. One of: admins, members\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"prefs/voting\",\n            \"in\": \"query\",\n            \"description\": \"Who can vote on this board. One of disabled, members, observers, org, public\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"prefs/comments\",\n            \"in\": \"query\",\n            \"description\": \"Who can comment on cards on this board. One of: disabled, members, observers, org, public\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"prefs/background\",\n            \"in\": \"query\",\n            \"description\": \"The id of a custom background or one of: blue, orange, green, red, purple, pink, lime, sky, grey\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"prefs/cardAging\",\n            \"in\": \"query\",\n            \"description\": \"One of: pirate, regular\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"prefs/calendarFeedEnabled\",\n            \"in\": \"query\",\n            \"description\": \"Determines whether the calendar feed is enabled or not.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\" }\n          },\n          {\n            \"name\": \"labelNames/green\",\n            \"in\": \"query\",\n            \"description\": \"Name for the green label. 1 to 16384 characters long\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"labelNames/yellow\",\n            \"in\": \"query\",\n            \"description\": \"Name for the yellow label. 1 to 16384 characters long\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"labelNames/orange\",\n            \"in\": \"query\",\n            \"description\": \"Name for the orange label. 1 to 16384 characters long\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"labelNames/red\",\n            \"in\": \"query\",\n            \"description\": \"Name for the red label. 1 to 16384 characters long\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"labelNames/purple\",\n            \"in\": \"query\",\n            \"description\": \"Name for the purple label. 1 to 16384 characters long\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"labelNames/blue\",\n            \"in\": \"query\",\n            \"description\": \"Name for the blue label. 1 to 16384 characters long\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      },\n      \"delete\": {\n        \"tags\": [],\n        \"summary\": \"Delete a Board\",\n        \"description\": \"Delete a board.\",\n        \"operationId\": \"delete-boards-id\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The id of the board to delete\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/boards/{id}/{field}\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get a field on a Board\",\n        \"description\": \"Get a single, specific field on a board\",\n        \"operationId\": \"get-boards-id-field\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the board.\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"field\",\n            \"in\": \"path\",\n            \"description\": \"The field you'd like to receive. Valid values: closed, dateLastActivity, dateLastView, desc, descData, idMemberCreator, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed, url.\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/boards/{boardId}/actions\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get Actions of a Board\",\n        \"description\": \"\",\n        \"operationId\": \"get-boards-id-actions\",\n        \"parameters\": [\n          {\n            \"name\": \"boardId\",\n            \"in\": \"path\",\n            \"description\": \"\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"filter\",\n            \"in\": \"query\",\n            \"description\": \"A comma-separated list of [action types](https://developer.atlassian.com/cloud/trello/guides/rest-api/action-types/).\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/boards/{id}/cards/{idCard}\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get a Card on a Board\",\n        \"description\": \"Get a single Card on a Board.\",\n        \"operationId\": \"get-boards-id-cards-idcard\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the board\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"idCard\",\n            \"in\": \"path\",\n            \"description\": \"The id the card to retrieve.\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/boards/{boardId}/boardStars\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get boardStars on a Board\",\n        \"description\": \"\",\n        \"operationId\": \"get-boards-id-boardstars\",\n        \"parameters\": [\n          {\n            \"name\": \"boardId\",\n            \"in\": \"path\",\n            \"description\": \"\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"filter\",\n            \"in\": \"path\",\n            \"description\": \"Valid values: mine, none\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\", \"default\": \"mine\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"oneOf\": [{ \"$ref\": \"#/components/schemas/BoardStars\" }]\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/boards/{id}/checklists\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get Checklists on a Board\",\n        \"description\": \"Get all of the checklists on a Board.\",\n        \"operationId\": \"boards-id-checklists\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the board\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/boards/{id}/cards\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get Cards on a Board\",\n        \"description\": \"Get all of the open Cards on a Board.\",\n        \"operationId\": \"get-boards-id-cards\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/boards/{id}/cards/{filter}\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get filtered Cards on a Board\",\n        \"description\": \"Get the Cards on a Board that match a given filter.\",\n        \"operationId\": \"get-boards-id-cards-filter\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of the Board\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"filter\",\n            \"in\": \"path\",\n            \"description\": \"Valid Values: all, closed, none, open, visible.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"all\", \"closed\", \"none\", \"open\", \"visible\"]\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/boards/{id}/customFields\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get Custom Fields for Board\",\n        \"description\": \"Get the Custom Field Definitions that exist on a board.\",\n        \"operationId\": \"get-boards-id-customfields\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the board\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"#/components/schemas/CustomField\" }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/boards/{id}/labels\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get Labels on a Board\",\n        \"description\": \"Get all of the Labels on a Board.\",\n        \"operationId\": \"get-boards-id-labels\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the Board.\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"The fields to be returned for the Labels.\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/Label\" }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"The number of Labels to be returned.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 50,\n              \"minimum\": 0,\n              \"maximum\": 1000\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      },\n      \"post\": {\n        \"tags\": [],\n        \"summary\": \"Create a Label on a Board\",\n        \"description\": \"Create a new Label on a Board.\",\n        \"operationId\": \"post-boards-id-labels\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The id of the board to update\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"The name of the label to be created. 1 to 16384 characters long.\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"color\",\n            \"in\": \"query\",\n            \"description\": \"Sets the color of the new label. Valid values are a label color or `null`.\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/boards/{id}/lists\": {\n      \"parameters\": [\n        {\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"The ID of the board\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        }\n      ],\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get Lists on a Board\",\n        \"description\": \"Get the Lists on a Board\",\n        \"operationId\": \"get-boards-id-lists\",\n        \"parameters\": [\n          {\n            \"name\": \"cards\",\n            \"in\": \"query\",\n            \"description\": \"Filter to apply to Cards.\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/ViewFilter\" }\n          },\n          {\n            \"name\": \"card_fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of card [fields](/cloud/trello/guides/rest-api/object-definitions/#card-object)\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"all\" }\n          },\n          {\n            \"name\": \"filter\",\n            \"in\": \"query\",\n            \"description\": \"Filter to apply to Lists\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/ViewFilter\" }\n          },\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of list [fields](/cloud/trello/guides/rest-api/object-definitions/)\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"all\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"#/components/schemas/TrelloList\" }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [],\n        \"summary\": \"Create a List on a Board\",\n        \"description\": \"Create a new List on a Board.\",\n        \"operationId\": \"post-boards-id-lists\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"The name of the list to be created. 1 to 16384 characters long.\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"pos\",\n            \"in\": \"query\",\n            \"description\": \"Determines the position of the list. Valid values: `top`, `bottom`, or a positive number.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"top\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/TrelloList\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/boards/{id}/lists/{filter}\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get filtered Lists on a Board\",\n        \"description\": \"\",\n        \"operationId\": \"get-boards-id-lists-filter\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the board\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"filter\",\n            \"in\": \"path\",\n            \"description\": \"One of `all`, `closed`, `none`, `open`\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/ViewFilter\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/boards/{id}/members\": {\n      \"parameters\": [\n        {\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"The ID of the board\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        }\n      ],\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get the Members of a Board\",\n        \"description\": \"Get the Members for a board\",\n        \"operationId\": \"get-boards-id-members\",\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      },\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Invite Member to Board via email\",\n        \"description\": \"Invite a Member to a Board via their email address.\",\n        \"operationId\": \"put-boards-id-members\",\n        \"parameters\": [\n          {\n            \"name\": \"email\",\n            \"in\": \"query\",\n            \"description\": \"The email address of a user to add as a member of the board.\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\", \"format\": \"email\" }\n          },\n          {\n            \"name\": \"type\",\n            \"in\": \"query\",\n            \"description\": \"Valid values: admin, normal, observer. Determines what type of member the user being added should be of the board.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"normal\",\n              \"enum\": [\"admin\", \"normal\", \"observer\"]\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"fullName\": {\n                    \"type\": \"string\",\n                    \"description\": \"The full name of the user to as a member of the board. Must have a length of at least 1 and cannot begin nor end with a space.\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/boards/{id}/members/{idMember}\": {\n      \"parameters\": [\n        {\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"The id of the board to update\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        },\n        {\n          \"name\": \"idMember\",\n          \"in\": \"path\",\n          \"description\": \"The id of the member to add to the board.\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        }\n      ],\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Add a Member to a Board\",\n        \"description\": \"Add a member to the board.\",\n        \"operationId\": \"put-boards-id-members-idmember\",\n        \"parameters\": [\n          {\n            \"name\": \"type\",\n            \"in\": \"query\",\n            \"description\": \"One of: admin, normal, observer. Determines the type of member this user will be on the board.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"admin\", \"normal\", \"observer\"]\n            }\n          },\n          {\n            \"name\": \"allowBillableGuest\",\n            \"in\": \"query\",\n            \"description\": \"Optional param that allows organization admins to add multi-board guests onto a board.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      },\n      \"delete\": {\n        \"tags\": [],\n        \"summary\": \"Remove Member from Board\",\n        \"description\": \"\",\n        \"operationId\": \"boardsidmembersidmember\",\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/boards/{id}/memberships/{idMembership}\": {\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Update Membership of Member on a Board\",\n        \"description\": \"Update an existing board by id\",\n        \"operationId\": \"put-boards-id-memberships-idmembership\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The id of the board to update\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"idMembership\",\n            \"in\": \"path\",\n            \"description\": \"The id of a membership that should be added to this board.\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"type\",\n            \"in\": \"query\",\n            \"description\": \"One of: admin, normal, observer. Determines the type of member that this membership will be to this board.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"admin\", \"normal\", \"observer\"]\n            }\n          },\n          {\n            \"name\": \"member_fields\",\n            \"in\": \"query\",\n            \"description\": \"Valid values: all, avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username\",\n            \"required\": false,\n            \"explode\": false,\n            \"style\": \"form\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"fullName, username\",\n              \"enum\": [\n                \"all\",\n                \"avatarHash\",\n                \"bio\",\n                \"bioData\",\n                \"confirmed\",\n                \"fullName\",\n                \"idPremOrgsAdmin\",\n                \"initials\",\n                \"memberType\",\n                \"products\",\n                \"status\",\n                \"url\",\n                \"username\"\n              ]\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/boards/{id}/myPrefs/emailPosition\": {\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Update emailPosition Pref on a Board\",\n        \"description\": \"Update emailPosition Pref on a Board\",\n        \"operationId\": \"put-boards-id-myprefs-emailposition\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The id of the board to update\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"value\",\n            \"in\": \"query\",\n            \"description\": \"Valid values: bottom, top. Determines the position of the email address.\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\", \"enum\": [\"bottom\", \"top\"] }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/boards/{id}/myPrefs/idEmailList\": {\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Update idEmailList Pref on a Board\",\n        \"description\": \"Change the default list that email-to-board cards are created in.\",\n        \"operationId\": \"put-boards-id-myprefs-idemaillist\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The id of the board to update\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"value\",\n            \"in\": \"query\",\n            \"description\": \"The id of an email list.\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/boards/{id}/myPrefs/showListGuide\": {\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Update showListGuide Pref on a Board\",\n        \"operationId\": \"put-boards-id-myPrefs-showlistguide\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The id of the board to update\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"value\",\n            \"in\": \"query\",\n            \"description\": \"Determines whether to show the list guide.\",\n            \"required\": true,\n            \"schema\": { \"type\": \"boolean\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/boards/{id}/myPrefs/showSidebar\": {\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Update showSidebar Pref on a Board\",\n        \"operationId\": \"put-boards-id-myPrefs-showsidebar\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The id of the board to update\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"value\",\n            \"in\": \"query\",\n            \"description\": \"Determines whether to show the side bar.\",\n            \"required\": true,\n            \"schema\": { \"type\": \"boolean\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/boards/{id}/myPrefs/showSidebarActivity\": {\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Update showSidebarActivity Pref on a Board\",\n        \"operationId\": \"put-boards-id-myPrefs-showsidebaractivity\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The id of the board to update\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"value\",\n            \"in\": \"query\",\n            \"description\": \"Determines whether to show sidebar activity.\",\n            \"required\": true,\n            \"schema\": { \"type\": \"boolean\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/boards/{id}/myPrefs/showSidebarBoardActions\": {\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Update showSidebarBoardActions Pref on a Board\",\n        \"operationId\": \"put-boards-id-myPrefs-showsidebarboardactions\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The id of the board to update\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"value\",\n            \"in\": \"query\",\n            \"description\": \"Determines whether to show the sidebar board actions.\",\n            \"required\": true,\n            \"schema\": { \"type\": \"boolean\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/boards/{id}/myPrefs/showSidebarMembers\": {\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Update showSidebarMembers Pref on a Board\",\n        \"operationId\": \"put-boards-id-myPrefs-showsidebarmembers\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The id of the board to update\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"value\",\n            \"in\": \"query\",\n            \"description\": \"Determines whether to show members of the board in the sidebar.\",\n            \"required\": true,\n            \"schema\": { \"type\": \"boolean\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/boards/\": {\n      \"post\": {\n        \"tags\": [],\n        \"summary\": \"Create a Board\",\n        \"description\": \"Create a new board.\",\n        \"operationId\": \"post-boards\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"The new name for the board. 1 to 16384 characters long.\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\", \"maxLength\": 16384, \"minLength\": 1 }\n          },\n          {\n            \"name\": \"defaultLabels\",\n            \"in\": \"query\",\n            \"description\": \"Determines whether to use the default set of labels.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": true }\n          },\n          {\n            \"name\": \"defaultLists\",\n            \"in\": \"query\",\n            \"description\": \"Determines whether to add the default set of lists to a board (To Do, Doing, Done). It is ignored if `idBoardSource` is provided.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": true }\n          },\n          {\n            \"name\": \"desc\",\n            \"in\": \"query\",\n            \"description\": \"A new description for the board, 0 to 16384 characters long\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"minLength\": 0, \"maxLength\": 16384 }\n          },\n          {\n            \"name\": \"idOrganization\",\n            \"in\": \"query\",\n            \"description\": \"The id or name of the Workspace the board should belong to.\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"idBoardSource\",\n            \"in\": \"query\",\n            \"description\": \"The id of a board to copy into the new board.\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"keepFromSource\",\n            \"in\": \"query\",\n            \"description\": \"To keep cards from the original board pass in the value `cards`\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"none\",\n              \"enum\": [\"cards\", \"none\"]\n            }\n          },\n          {\n            \"name\": \"powerUps\",\n            \"in\": \"query\",\n            \"description\": \"The Power-Ups that should be enabled on the new board. One of: `all`, `calendar`, `cardAging`, `recap`, `voting`.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"all\", \"calendar\", \"cardAging\", \"recap\", \"voting\"]\n            }\n          },\n          {\n            \"name\": \"prefs_permissionLevel\",\n            \"in\": \"query\",\n            \"description\": \"The permissions level of the board. One of: `org`, `private`, `public`.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"private\",\n              \"enum\": [\"org\", \"private\", \"public\"]\n            }\n          },\n          {\n            \"name\": \"prefs_voting\",\n            \"in\": \"query\",\n            \"description\": \"Who can vote on this board. One of `disabled`, `members`, `observers`, `org`, `public`.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"disabled\",\n              \"enum\": [\"disabled\", \"members\", \"observers\", \"org\", \"public\"]\n            }\n          },\n          {\n            \"name\": \"prefs_comments\",\n            \"in\": \"query\",\n            \"description\": \"Who can comment on cards on this board. One of: `disabled`, `members`, `observers`, `org`, `public`.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"members\",\n              \"enum\": [\"disabled\", \"members\", \"observers\", \"org\", \"public\"]\n            }\n          },\n          {\n            \"name\": \"prefs_invitations\",\n            \"in\": \"query\",\n            \"description\": \"Determines what types of members can invite users to join. One of: `admins`, `members`.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"members\",\n              \"enum\": [\"members\", \"admins\"]\n            }\n          },\n          {\n            \"name\": \"prefs_selfJoin\",\n            \"in\": \"query\",\n            \"description\": \"Determines whether users can join the boards themselves or whether they have to be invited.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": true }\n          },\n          {\n            \"name\": \"prefs_cardCovers\",\n            \"in\": \"query\",\n            \"description\": \"Determines whether card covers are enabled.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": true }\n          },\n          {\n            \"name\": \"prefs_background\",\n            \"in\": \"query\",\n            \"description\": \"The id of a custom background or one of: `blue`, `orange`, `green`, `red`, `purple`, `pink`, `lime`, `sky`, `grey`.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"blue\",\n              \"enum\": [\n                \"blue\",\n                \"orange\",\n                \"green\",\n                \"red\",\n                \"purple\",\n                \"pink\",\n                \"lime\",\n                \"sky\",\n                \"grey\"\n              ]\n            }\n          },\n          {\n            \"name\": \"prefs_cardAging\",\n            \"in\": \"query\",\n            \"description\": \"Determines the type of card aging that should take place on the board if card aging is enabled. One of: `pirate`, `regular`.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"regular\",\n              \"enum\": [\"pirate\", \"regular\"]\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/boards/{id}/calendarKey/generate\": {\n      \"post\": {\n        \"tags\": [],\n        \"summary\": \"Create a calendarKey for a Board\",\n        \"description\": \"Create a new board.\",\n        \"operationId\": \"post-boards-id-calendarkey-generate\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The id of the board to update\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/boards/{id}/emailKey/generate\": {\n      \"post\": {\n        \"tags\": [],\n        \"summary\": \"Create a emailKey for a Board\",\n        \"description\": \"\",\n        \"operationId\": \"post-boards-id-emailkey-generate\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The id of the board to update\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/boards/{id}/idTags\": {\n      \"post\": {\n        \"tags\": [],\n        \"summary\": \"Create a Tag for a Board\",\n        \"operationId\": \"post-boards-id-idtags\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The id of the board to update\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"value\",\n            \"in\": \"query\",\n            \"description\": \"The id of a tag from the organization to which this board belongs.\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/boards/{id}/markedAsViewed\": {\n      \"post\": {\n        \"tags\": [],\n        \"summary\": \"Mark Board as viewed\",\n        \"description\": \"\",\n        \"operationId\": \"post-boards-id-markedasviewed\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The id of the board to update\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/boards/{id}/boardPlugins\": {\n      \"parameters\": [\n        {\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"The ID of the Board\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        }\n      ],\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get Enabled Power-Ups on Board\",\n        \"description\": \"Get the enabled Power-Ups on a board\",\n        \"operationId\": \"get-boards-id-boardplugins\",\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"#/components/schemas/Plugin\" }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [],\n        \"summary\": \"Enable a Power-Up on a Board\",\n        \"description\": \"Enable a Power-Up on a Board\",\n        \"operationId\": \"post-boards-id-boardplugins\",\n        \"parameters\": [\n          {\n            \"name\": \"idPlugin\",\n            \"in\": \"query\",\n            \"description\": \"The ID of the Power-Up to enable\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": true,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/boards/{id}/boardPlugins/{idPlugin}\": {\n      \"delete\": {\n        \"tags\": [],\n        \"summary\": \"Disable a Power-Up on a Board\",\n        \"description\": \"Disable a Power-Up on a board\",\n        \"operationId\": \"delete-boards-id-boardplugins\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the board\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"idPlugin\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the Power-Up to disable\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": true,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/boards/{id}/plugins\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get Power-Ups on a Board\",\n        \"description\": \"List the Power-Ups on a board\",\n        \"operationId\": \"get-board-id-plugins\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the board\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"filter\",\n            \"in\": \"query\",\n            \"description\": \"One of: `enabled` or `available`\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"enabled\",\n              \"enum\": [\"enabled\", \"available\"]\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/Plugin\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/cards\": {\n      \"post\": {\n        \"tags\": [],\n        \"summary\": \"Create a new Card\",\n        \"description\": \"Create a new card\",\n        \"operationId\": \"post-cards\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"The name for the card\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"desc\",\n            \"in\": \"query\",\n            \"description\": \"The description for the card\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"pos\",\n            \"in\": \"query\",\n            \"description\": \"The position of the new card. `top`, `bottom`, or a positive float\",\n            \"required\": false,\n            \"schema\": {\n              \"oneOf\": [\n                { \"type\": \"string\", \"enum\": [\"top\", \"bottom\"] },\n                { \"type\": \"number\", \"format\": \"float\", \"minimum\": 0 }\n              ]\n            }\n          },\n          {\n            \"name\": \"due\",\n            \"in\": \"query\",\n            \"description\": \"A due date for the card\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"format\": \"date\" }\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"The start date of a card, or `null`\",\n            \"required\": false,\n            \"schema\": { \"nullable\": true, \"type\": \"string\", \"format\": \"date\" }\n          },\n          {\n            \"name\": \"dueComplete\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\" }\n          },\n          {\n            \"name\": \"idList\",\n            \"in\": \"query\",\n            \"description\": \"The ID of the list the card should be created in\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"idMembers\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of member IDs to add to the card\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"oneOf\": [{ \"$ref\": \"#/components/schemas/TrelloID\" }]\n              }\n            }\n          },\n          {\n            \"name\": \"idLabels\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of label IDs to add to the card\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"oneOf\": [{ \"$ref\": \"#/components/schemas/TrelloID\" }]\n              }\n            }\n          },\n          {\n            \"name\": \"urlSource\",\n            \"in\": \"query\",\n            \"description\": \"A URL starting with `http://` or `https://`\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"format\": \"url\" }\n          },\n          {\n            \"name\": \"fileSource\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"format\": \"binary\" }\n          },\n          {\n            \"name\": \"mimeType\",\n            \"in\": \"query\",\n            \"description\": \"The mimeType of the attachment. Max length 256\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"idCardSource\",\n            \"in\": \"query\",\n            \"description\": \"The ID of a card to copy into the new card\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"keepFromSource\",\n            \"in\": \"query\",\n            \"description\": \"If using `idCardSource` you can specify which properties to copy over. `all` or comma-separated list of: `attachments,checklists,customFields,comments,due,start,labels,members,start,stickers`\",\n            \"required\": false,\n            \"style\": \"form\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"all\",\n              \"enum\": [\n                \"all\",\n                \"attachments\",\n                \"checklists\",\n                \"comments\",\n                \"customFields\",\n                \"due\",\n                \"start\",\n                \"labels\",\n                \"members\",\n                \"start\",\n                \"stickers\"\n              ]\n            }\n          },\n          {\n            \"name\": \"address\",\n            \"in\": \"query\",\n            \"description\": \"For use with/by the Map View\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"locationName\",\n            \"in\": \"query\",\n            \"description\": \"For use with/by the Map View\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"coordinates\",\n            \"in\": \"query\",\n            \"description\": \"For use with/by the Map View. Should take the form latitude,longitude\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/Card\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/cards/{id}\": {\n      \"parameters\": [\n        {\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"The ID of the Card\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        }\n      ],\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get a Card\",\n        \"description\": \"Get a card by its ID\",\n        \"operationId\": \"get-cards-id\",\n        \"parameters\": [\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of [fields](/cloud/trello/guides/rest-api/object-definitions/). **Defaults**: `badges, checkItemStates, closed, dateLastActivity, desc, descData, due, start, email, idBoard, idChecklists, idLabels, idList, idMembers, idShort, idAttachmentCover, manualCoverAttachment, labels, name, pos, shortUrl, url`\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"actions\",\n            \"in\": \"query\",\n            \"description\": \"See the [Actions Nested Resource](/cloud/trello/guides/rest-api/nested-resources/#actions-nested-resource)\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"attachments\",\n            \"in\": \"query\",\n            \"description\": \"`true`, `false`, or `cover`\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"oneOf\": [\n                { \"type\": \"string\", \"enum\": [\"cover\"] },\n                { \"type\": \"boolean\" }\n              ],\n              \"default\": false\n            }\n          },\n          {\n            \"name\": \"attachment_fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of attachment [fields](/cloud/trello/guides/rest-api/object-definitions/)\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"all\" }\n          },\n          {\n            \"name\": \"members\",\n            \"in\": \"query\",\n            \"description\": \"Whether to return member objects for members on the card\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          },\n          {\n            \"name\": \"member_fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of member [fields](/cloud/trello/guides/rest-api/object-definitions/). **Defaults**: `avatarHash, fullName, initials, username`\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"membersVoted\",\n            \"in\": \"query\",\n            \"description\": \"Whether to return member objects for members who voted on the card\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          },\n          {\n            \"name\": \"memberVoted_fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of member [fields](/cloud/trello/guides/rest-api/object-definitions/). **Defaults**: `avatarHash, fullName, initials, username`\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"checkItemStates\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          },\n          {\n            \"name\": \"checklists\",\n            \"in\": \"query\",\n            \"description\": \"Whether to return the checklists on the card. `all` or `none`\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"none\" }\n          },\n          {\n            \"name\": \"checklist_fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of `idBoard,idCard,name,pos`\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"all\" }\n          },\n          {\n            \"name\": \"board\",\n            \"in\": \"query\",\n            \"description\": \"Whether to return the board object the card is on\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          },\n          {\n            \"name\": \"board_fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of board [fields](/cloud/trello/guides/rest-api/object-definitions/#board-object). **Defaults**: `name, desc, descData, closed, idOrganization, pinned, url, prefs`\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"list\",\n            \"in\": \"query\",\n            \"description\": \"See the [Lists Nested Resource](/cloud/trello/guides/rest-api/nested-resources/)\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          },\n          {\n            \"name\": \"pluginData\",\n            \"in\": \"query\",\n            \"description\": \"Whether to include pluginData on the card with the response\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          },\n          {\n            \"name\": \"stickers\",\n            \"in\": \"query\",\n            \"description\": \"Whether to include sticker models with the response\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          },\n          {\n            \"name\": \"sticker_fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of sticker [fields](/cloud/trello/guides/rest-api/object-definitions/)\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"all\" }\n          },\n          {\n            \"name\": \"customFieldItems\",\n            \"in\": \"query\",\n            \"description\": \"Whether to include the customFieldItems\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/Card\" }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Update a Card\",\n        \"description\": \"Update a card\",\n        \"operationId\": \"put-cards-id\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"The new name for the card\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"desc\",\n            \"in\": \"query\",\n            \"description\": \"The new description for the card\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"closed\",\n            \"in\": \"query\",\n            \"description\": \"Whether the card should be archived (closed: true)\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\" }\n          },\n          {\n            \"name\": \"idMembers\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of member IDs\",\n            \"required\": false,\n            \"explode\": false,\n            \"style\": \"form\",\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"idAttachmentCover\",\n            \"in\": \"query\",\n            \"description\": \"The ID of the image attachment the card should use as its cover, or null for none\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"idList\",\n            \"in\": \"query\",\n            \"description\": \"The ID of the list the card should be in\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"idLabels\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of label IDs\",\n            \"required\": false,\n            \"explode\": false,\n            \"style\": \"form\",\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"idBoard\",\n            \"in\": \"query\",\n            \"description\": \"The ID of the board the card should be on\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"pos\",\n            \"in\": \"query\",\n            \"description\": \"The position of the card in its list. `top`, `bottom`, or a positive float\",\n            \"required\": false,\n            \"schema\": {\n              \"oneOf\": [\n                { \"type\": \"string\", \"enum\": [\"top\", \"bottom\"] },\n                { \"type\": \"number\", \"format\": \"float\" }\n              ]\n            }\n          },\n          {\n            \"name\": \"due\",\n            \"in\": \"query\",\n            \"description\": \"When the card is due, or `null`\",\n            \"required\": false,\n            \"schema\": { \"nullable\": true, \"type\": \"string\", \"format\": \"date\" }\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"The start date of a card, or `null`\",\n            \"required\": false,\n            \"schema\": { \"nullable\": true, \"type\": \"string\", \"format\": \"date\" }\n          },\n          {\n            \"name\": \"dueComplete\",\n            \"in\": \"query\",\n            \"description\": \"Whether the due date should be marked complete\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\" }\n          },\n          {\n            \"name\": \"subscribed\",\n            \"in\": \"query\",\n            \"description\": \"Whether the member is should be subscribed to the card\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\" }\n          },\n          {\n            \"name\": \"address\",\n            \"in\": \"query\",\n            \"description\": \"For use with/by the Map View\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"locationName\",\n            \"in\": \"query\",\n            \"description\": \"For use with/by the Map View\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"coordinates\",\n            \"in\": \"query\",\n            \"description\": \"For use with/by the Map View. Should be latitude,longitude\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"cover\",\n            \"in\": \"query\",\n            \"description\": \"Updates the card's cover\\n\\n| Option | Values | About |\\n |--------|--------|-------|\\n | color | `pink`, `yellow`, `lime`, `blue`, `black`, `orange`, `red`, `purple`, `sky`, `green` | Makes the cover a solid color . |\\n | brightness | `dark`, `light` | Determines whether the text on the cover should be dark or light.\\n | url | An unsplash URL: https://images.unsplash.com | Used if making an image the cover. Only Unsplash URLs work.\\n | idAttachment | ID of an attachment on the card | Used if setting an attached image as the cover. |\\n | size | `normal`, `full` | Determines whether to show the card name on the cover, or below it. |\\n \\n `brightness` can be sent alongside any of the other parameters, but all of the other parameters are mutually exclusive; you can not have the cover be a `color` and an `idAttachment` at the same time. \\n \\n On the brightness options, setting it to light will make the text on the card cover dark:\\n ![](/cloud/trello/images/rest/cards/cover-brightness-dark.png)\\n \\n And vice versa, setting it to dark will make the text on the card cover light: \\n ![](/cloud/trello/images/rest/cards/cover-brightness-light.png) \",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"value\": {\n                  \"type\": \"object\",\n                  \"description\": \"An object containing information regarding the card's cover \\n `brightness` can be sent alongside any of the other parameters, but all of the other parameters are mutually exclusive; you can not have the cover be a color and an `idAttachment` at the same time.\",\n                  \"properties\": {\n                    \"color\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"pink\",\n                        \"yellow\",\n                        \"lime\",\n                        \"blue\",\n                        \"black\",\n                        \"orange\",\n                        \"red\",\n                        \"purple\",\n                        \"sky\",\n                        \"green\"\n                      ],\n                      \"description\": \"One of: `pink, yellow, lime, blue, black, orange, red, purple, sky, green`\",\n                      \"example\": \"pink\"\n                    },\n                    \"brightness\": {\n                      \"type\": \"string\",\n                      \"enum\": [\"dark\", \"light\"],\n                      \"description\": \"Determines whether the text on the cover should be dark or light. Setting it to `light` will make the text on the card cover dark. And vice versa, setting it to dark will make the text on the card cover light\"\n                    },\n                    \"url\": {\n                      \"type\": \"string\",\n                      \"format\": \"url\",\n                      \"description\": \"Used if making an image the cover. Only Unsplash URLs (https://images.unsplash.com/) work.\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/Card\" }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [],\n        \"summary\": \"Delete a Card\",\n        \"description\": \"Delete a Card\",\n        \"operationId\": \"delete-cards-id\",\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/cards/{id}/{field}\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get a field on a Card\",\n        \"description\": \"Get a specific property of a card\",\n        \"operationId\": \"get-cards-id-field\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the Card\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"field\",\n            \"in\": \"path\",\n            \"description\": \"The desired field.\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/CardFields\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/Card\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/cards/{id}/actions\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get Actions on a Card\",\n        \"description\": \"List the Actions on a Card\",\n        \"operationId\": \"get-cards-id-actions\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the Card\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"filter\",\n            \"in\": \"query\",\n            \"description\": \"A comma-separated list of [action types](https://developer.atlassian.com/cloud/trello/guides/rest-api/action-types/).\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"commentCard, updateCard:idList\"\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"The page of results for actions. Each page of results has 50 actions.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"number\", \"maximum\": 19, \"default\": 0 }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"#/components/schemas/Action\" }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/cards/{id}/attachments\": {\n      \"parameters\": [\n        {\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"The ID of the Card\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        }\n      ],\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get Attachments on a Card\",\n        \"description\": \"List the attachments on a card\",\n        \"operationId\": \"get-cards-id-attachments\",\n        \"parameters\": [\n          {\n            \"name\": \"fields\",\n            \"in\": \"path\",\n            \"description\": \"`all` or a comma-separated list of attachment [fields](/cloud/trello/guides/rest-api/object-definitions/)\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\", \"default\": \"all\" }\n          },\n          {\n            \"name\": \"filter\",\n            \"in\": \"path\",\n            \"description\": \"Use `cover` to restrict to just the cover attachment\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\", \"default\": \"false\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"oneOf\": [{ \"$ref\": \"#/components/schemas/Attachment\" }]\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [],\n        \"summary\": \"Create Attachment On Card\",\n        \"description\": \"Create an Attachment to a Card\",\n        \"operationId\": \"post-cards-id-attachments\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"The name of the attachment. Max length 256.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"file\",\n            \"in\": \"query\",\n            \"description\": \"The file to attach, as multipart/form-data\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"format\": \"binary\" }\n          },\n          {\n            \"name\": \"mimeType\",\n            \"in\": \"query\",\n            \"description\": \"The mimeType of the attachment. Max length 256\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"url\",\n            \"in\": \"query\",\n            \"description\": \"A URL to attach. Must start with `http://` or `https://`\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"setCover\",\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"boolean\", \"default\": false },\n            \"description\": \"Determines whether to use the new attachment as a cover for the Card.\"\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"oneOf\": [{ \"$ref\": \"#/components/schemas/Attachment\" }]\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/cards/{id}/attachments/{idAttachment}\": {\n      \"parameters\": [\n        {\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"The ID of the Card\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        },\n        {\n          \"name\": \"idAttachment\",\n          \"in\": \"path\",\n          \"description\": \"The ID of the Attachment\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        }\n      ],\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get an Attachment on a Card\",\n        \"description\": \"Get a specific Attachment on a Card.\",\n        \"operationId\": \"get-cards-id-attachments-idattachment\",\n        \"parameters\": [\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"The Attachment fields to be included in the response.\",\n            \"required\": false,\n            \"style\": \"form\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"anyOf\": [{ \"$ref\": \"#/components/schemas/AttachmentFields\" }]\n              },\n              \"default\": [\"all\"]\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"oneOf\": [{ \"$ref\": \"#/components/schemas/Attachment\" }]\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [],\n        \"summary\": \"Delete an Attachment on a Card\",\n        \"description\": \"Delete an Attachment\",\n        \"operationId\": \"deleted-cards-id-attachments-idattachment\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the Card\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"idAttachment\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the attachment to delete\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/cards/{id}/board\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get the Board the Card is on\",\n        \"description\": \"Get the board a card is on\",\n        \"operationId\": \"get-cards-id-board\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the Card\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of board [fields](/cloud/trello/guides/rest-api/object-definitions/#board-object)\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"all\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/cards/{id}/checkItemStates\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get checkItems on a Card\",\n        \"description\": \"Get the completed checklist items on a card\",\n        \"operationId\": \"get-cards-id-checkitemstates\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the Card\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of: `idCheckItem`, `state`\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"all\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/cards/{id}/checklists\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get Checklists on a Card\",\n        \"description\": \"Get the checklists on a card\",\n        \"operationId\": \"get-cards-id-checklists\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the Card\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"checkItems\",\n            \"in\": \"query\",\n            \"description\": \"`all` or `none`\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"all\", \"none\"],\n              \"default\": \"all\"\n            }\n          },\n          {\n            \"name\": \"checkItem_fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of: `name,nameData,pos,state,type`\",\n            \"required\": false,\n            \"explode\": false,\n            \"style\": \"form\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"name,nameData,pos,state\",\n              \"enum\": [\"name\", \"nameData\", \"pos\", \"state\", \"type\"]\n            }\n          },\n          {\n            \"name\": \"filter\",\n            \"in\": \"query\",\n            \"description\": \"`all` or `none`\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"all\",\n              \"enum\": [\"all\", \"none\"]\n            }\n          },\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"explode\": false,\n            \"style\": \"form\",\n            \"description\": \"`all` or a comma-separated list of: `idBoard,idCard,name,pos`\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"all\",\n              \"enum\": [\"all\", \"name\", \"nameData\", \"pos\", \"state\", \"type\"]\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      },\n      \"post\": {\n        \"tags\": [],\n        \"summary\": \"Create Checklist on a Card\",\n        \"description\": \"Create a new checklist on a card\",\n        \"operationId\": \"post-cards-id-checklists\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the Card\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"The name of the checklist\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"idChecklistSource\",\n            \"in\": \"query\",\n            \"description\": \"The ID of a source checklist to copy into the new one\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"pos\",\n            \"in\": \"query\",\n            \"description\": \"The position of the checklist on the card. One of: `top`, `bottom`, or a positive number.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/cards/{id}/checkItem/{idCheckItem}\": {\n      \"parameters\": [\n        {\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"The ID of the Card\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        },\n        {\n          \"name\": \"idCheckItem\",\n          \"in\": \"path\",\n          \"description\": \"The ID of the checkitem\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        }\n      ],\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get checkItem on a Card\",\n        \"description\": \"Get a specific checkItem on a card\",\n        \"operationId\": \"get-cards-id-checkitem-idcheckitem\",\n        \"parameters\": [\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of `name,nameData,pos,state,type`\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"name,nameData,pos,state\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      },\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Update a checkItem on a Card\",\n        \"description\": \"Update an item in a checklist on a card.\",\n        \"operationId\": \"put-cards-id-checkitem-idcheckitem\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"The new name for the checklist item\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"state\",\n            \"in\": \"query\",\n            \"description\": \"One of: `complete`, `incomplete`\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"enum\": [\"complete\", \"incomplete\"] }\n          },\n          {\n            \"name\": \"idChecklist\",\n            \"in\": \"query\",\n            \"description\": \"The ID of the checklist this item is in\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"pos\",\n            \"in\": \"query\",\n            \"description\": \"`top`, `bottom`, or a positive float\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/posStringOrNumber\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      },\n      \"delete\": {\n        \"tags\": [],\n        \"summary\": \"Delete checkItem on a Card\",\n        \"description\": \"Delete a checklist item\",\n        \"operationId\": \"delete-cards-id-checkitem-idcheckitem\",\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/cards/{id}/list\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get the List of a Card\",\n        \"description\": \"Get the list a card is in\",\n        \"operationId\": \"get-cards-id-list\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the Card\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of list [fields](/cloud/trello/guides/rest-api/object-definitions/)\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"all\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/cards/{id}/members\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get the Members of a Card\",\n        \"description\": \"Get the members on a card\",\n        \"operationId\": \"get-cards-id-members\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the Card\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of member [fields](/cloud/trello/guides/rest-api/object-definitions/)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"avatarHash,fullName,initials,username\"\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/cards/{id}/membersVoted\": {\n      \"parameters\": [\n        {\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"The ID of the Card\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        }\n      ],\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get Members who have voted on a Card\",\n        \"description\": \"Get the members who have voted on a card\",\n        \"operationId\": \"get-cards-id-membersvoted\",\n        \"parameters\": [\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of member [fields](/cloud/trello/guides/rest-api/object-definitions/)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"avatarHash,fullName,initials,username\"\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      },\n      \"post\": {\n        \"tags\": [],\n        \"summary\": \"Add Member vote to Card\",\n        \"description\": \"Vote on the card for a given member.\",\n        \"operationId\": \"cardsidmembersvoted-1\",\n        \"parameters\": [\n          {\n            \"name\": \"value\",\n            \"in\": \"query\",\n            \"description\": \"The ID of the member to vote 'yes' on the card\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/cards/{id}/pluginData\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get pluginData on a Card\",\n        \"description\": \"Get any shared pluginData on a card.\",\n        \"operationId\": \"get-cards-id-plugindata\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the Card\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/cards/{id}/stickers\": {\n      \"parameters\": [\n        {\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"The ID of the Card\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        }\n      ],\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get Stickers on a Card\",\n        \"description\": \"Get the stickers on a card\",\n        \"operationId\": \"get-cards-id-stickers\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the Card\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of sticker [fields](/cloud/trello/guides/rest-api/object-definitions/)\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"all\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      },\n      \"post\": {\n        \"tags\": [],\n        \"summary\": \"Add a Sticker to a Card\",\n        \"description\": \"Add a sticker to a card\",\n        \"operationId\": \"post-cards-id-stickers\",\n        \"parameters\": [\n          {\n            \"name\": \"image\",\n            \"in\": \"query\",\n            \"description\": \"For custom stickers, the id of the sticker. For default stickers, the string identifier (like 'taco-cool', see below)\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"top\",\n            \"in\": \"query\",\n            \"description\": \"The top position of the sticker, from -60 to 100\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"number\",\n              \"format\": \"float\",\n              \"minimum\": -60,\n              \"maximum\": 100\n            }\n          },\n          {\n            \"name\": \"left\",\n            \"in\": \"query\",\n            \"description\": \"The left position of the sticker, from -60 to 100\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"number\",\n              \"format\": \"float\",\n              \"minimum\": -60,\n              \"maximum\": 100\n            }\n          },\n          {\n            \"name\": \"zIndex\",\n            \"in\": \"query\",\n            \"description\": \"The z-index of the sticker\",\n            \"required\": true,\n            \"schema\": { \"type\": \"integer\" }\n          },\n          {\n            \"name\": \"rotate\",\n            \"in\": \"query\",\n            \"description\": \"The rotation of the sticker\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"number\",\n              \"format\": \"float\",\n              \"default\": 0,\n              \"minimum\": 0,\n              \"maximum\": 360\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/cards/{id}/stickers/{idSticker}\": {\n      \"parameters\": [\n        {\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"The ID of the Card\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        },\n        {\n          \"name\": \"idSticker\",\n          \"in\": \"path\",\n          \"description\": \"The ID of the sticker\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        }\n      ],\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get a Sticker on a Card\",\n        \"description\": \"Get a specific sticker on a card\",\n        \"operationId\": \"get-cards-id-stickers-idsticker\",\n        \"parameters\": [\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of sticker [fields](/cloud/trello/guides/rest-api/object-definitions/)\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"all\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      },\n      \"delete\": {\n        \"tags\": [],\n        \"summary\": \"Delete a Sticker on a Card\",\n        \"description\": \"Remove a sticker from the card\",\n        \"operationId\": \"delete-cards-id-stickers-idsticker\",\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      },\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Update a Sticker on a Card\",\n        \"description\": \"Update a sticker on a card\",\n        \"operationId\": \"put-cards-id-stickers-idsticker\",\n        \"parameters\": [\n          {\n            \"name\": \"top\",\n            \"in\": \"query\",\n            \"description\": \"The top position of the sticker, from -60 to 100\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"number\",\n              \"format\": \"float\",\n              \"minimum\": -60,\n              \"maximum\": 100\n            }\n          },\n          {\n            \"name\": \"left\",\n            \"in\": \"query\",\n            \"description\": \"The left position of the sticker, from -60 to 100\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"number\",\n              \"format\": \"float\",\n              \"minimum\": -60,\n              \"maximum\": 100\n            }\n          },\n          {\n            \"name\": \"zIndex\",\n            \"in\": \"query\",\n            \"description\": \"The z-index of the sticker\",\n            \"required\": true,\n            \"schema\": { \"type\": \"integer\" }\n          },\n          {\n            \"name\": \"rotate\",\n            \"in\": \"query\",\n            \"description\": \"The rotation of the sticker\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"number\",\n              \"format\": \"float\",\n              \"default\": 0,\n              \"minimum\": 0,\n              \"maximum\": 360\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/cards/{id}/actions/{idAction}/comments\": {\n      \"parameters\": [\n        {\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"The ID of the Card\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        },\n        {\n          \"name\": \"idAction\",\n          \"in\": \"path\",\n          \"description\": \"The ID of the comment action to update\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        }\n      ],\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Update Comment Action on a Card\",\n        \"description\": \"Update an existing comment\",\n        \"operationId\": \"put-cards-id-actions-idaction-comments\",\n        \"parameters\": [\n          {\n            \"name\": \"text\",\n            \"in\": \"query\",\n            \"description\": \"The new text for the comment\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      },\n      \"delete\": {\n        \"tags\": [],\n        \"summary\": \"Delete a comment on a Card\",\n        \"description\": \"Delete a comment\",\n        \"operationId\": \"delete-cards-id-actions-id-comments\",\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/cards/{idCard}/customField/{idCustomField}/item\": {\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Update Custom Field item on Card\",\n        \"description\": \"Setting, updating, and removing the value for a Custom Field on a card. For more details on updating custom fields check out the [Getting Started With Custom Fields](/cloud/trello/guides/rest-api/getting-started-with-custom-fields/)\",\n        \"operationId\": \"put-cards-idcard-customfield-idcustomfield-item\",\n        \"parameters\": [\n          {\n            \"name\": \"idCard\",\n            \"in\": \"path\",\n            \"description\": \"ID of the card that the Custom Field value should be set/updated for\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"idCustomField\",\n            \"in\": \"path\",\n            \"description\": \"ID of the Custom Field on the card.\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"oneOf\": [\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"value\": {\n                        \"type\": \"object\",\n                        \"description\": \"An object containing the key and value to set for the card's Custom Field value. The key used to set the value should match the type of Custom Field defined.\",\n                        \"properties\": {\n                          \"text\": { \"type\": \"string\" },\n                          \"checked\": { \"type\": \"boolean\" },\n                          \"date\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\",\n                            \"example\": \"2018-03-13T16:00:00.000Z\"\n                          },\n                          \"number\": { \"type\": \"number\" }\n                        }\n                      }\n                    }\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"idValue\": {\n                        \"$ref\": \"#/components/schemas/TrelloID\",\n                        \"description\": \"The ID of the option for the list type Custom Field\"\n                      }\n                    }\n                  }\n                ]\n              }\n            }\n          }\n        },\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/cards/{id}/customFieldItems\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get Custom Field Items for a Card\",\n        \"description\": \"Get the custom field items for a card.\",\n        \"operationId\": \"get-cards-id-customfielditems\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the Card\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"#/components/schemas/CustomFieldItems\" }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/cards/{id}/actions/comments\": {\n      \"post\": {\n        \"tags\": [],\n        \"summary\": \"Add a new comment to a Card\",\n        \"description\": \"Add a new comment to a card\",\n        \"operationId\": \"post-cards-id-actions-comments\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the Card\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"text\",\n            \"in\": \"query\",\n            \"description\": \"The comment\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/Action\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/cards/{id}/idLabels\": {\n      \"post\": {\n        \"tags\": [],\n        \"summary\": \"Add a Label to a Card\",\n        \"description\": \"Add a label to a card\",\n        \"operationId\": \"post-cards-id-idlabels\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the Card\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"value\",\n            \"in\": \"query\",\n            \"description\": \"The ID of the label to add\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/cards/{id}/idMembers\": {\n      \"post\": {\n        \"tags\": [],\n        \"summary\": \"Add a Member to a Card\",\n        \"description\": \"Add a member to a card\",\n        \"operationId\": \"post-cards-id-idmembers\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the Card\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"value\",\n            \"in\": \"query\",\n            \"description\": \"The ID of the Member to add to the card\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/cards/{id}/labels\": {\n      \"post\": {\n        \"tags\": [],\n        \"summary\": \"Create a new Label on a Card\",\n        \"description\": \"Create a new label for the board and add it to the given card.\",\n        \"operationId\": \"post-cards-id-labels\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the Card\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"color\",\n            \"in\": \"query\",\n            \"description\": \"A valid label color or `null`. See [labels](/cloud/trello/guides/rest-api/object-definitions/)\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"A name for the label\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/cards/{id}/markAssociatedNotificationsRead\": {\n      \"post\": {\n        \"tags\": [],\n        \"summary\": \"Mark a Card's Notifications as read\",\n        \"description\": \"Mark notifications about this card as read\",\n        \"operationId\": \"post-cards-id-markassociatednotificationsread\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the Card\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/cards/{id}/idLabels/{idLabel}\": {\n      \"delete\": {\n        \"tags\": [],\n        \"summary\": \"Remove a Label from a Card\",\n        \"description\": \"Remove a label from a card\",\n        \"operationId\": \"delete-cards-id-idlabels-idlabel\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the Card\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"idLabel\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the label to remove\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/cards/{id}/idMembers/{idMember}\": {\n      \"delete\": {\n        \"tags\": [],\n        \"summary\": \"Remove a Member from a Card\",\n        \"description\": \"Remove a member from a card\",\n        \"operationId\": \"delete-id-idmembers-idmember\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the Card\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"idMember\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the member to remove from the card\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/cards/{id}/membersVoted/{idMember}\": {\n      \"delete\": {\n        \"tags\": [],\n        \"summary\": \"Remove a Member's Vote on a Card\",\n        \"description\": \"Remove a member's vote from a card\",\n        \"operationId\": \"delete-cards-id-membersvoted-idmember\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the Card\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"idMember\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the member whose vote to remove\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}\": {\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Update Checkitem on Checklist on Card\",\n        \"description\": \"Update an item in a checklist on a card.\",\n        \"operationId\": \"put-cards-idcard-checklist-idchecklist-checkitem-idcheckitem\",\n        \"parameters\": [\n          {\n            \"name\": \"idCard\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the Card\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"idCheckItem\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the checklist item to update\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"pos\",\n            \"in\": \"query\",\n            \"description\": \"`top`, `bottom`, or a positive float\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/posStringOrNumber\" }\n          },\n          {\n            \"name\": \"idChecklist\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the item to update.\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/CheckItem\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/cards/{id}/checklists/{idChecklist}\": {\n      \"delete\": {\n        \"tags\": [],\n        \"summary\": \"Delete a Checklist on a Card\",\n        \"description\": \"Delete a checklist from a card\",\n        \"operationId\": \"delete-cards-id-checklists-idchecklist\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the Card\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"idChecklist\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the checklist to delete\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/checklists\": {\n      \"post\": {\n        \"tags\": [],\n        \"summary\": \"Create a Checklist\",\n        \"description\": \"\",\n        \"operationId\": \"post-checklists\",\n        \"parameters\": [\n          {\n            \"name\": \"idCard\",\n            \"in\": \"query\",\n            \"description\": \"The ID of the Card that the checklist should be added to.\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"The name of the checklist. Should be a string of length 1 to 16384.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"maxLength\": 16384, \"minLength\": 1 }\n          },\n          {\n            \"name\": \"pos\",\n            \"in\": \"query\",\n            \"description\": \"The position of the checklist on the card. One of: `top`, `bottom`, or a positive number.\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/posStringOrNumber\" }\n          },\n          {\n            \"name\": \"idChecklistSource\",\n            \"in\": \"query\",\n            \"description\": \"The ID of a checklist to copy into the new checklist.\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/checklists/{id}\": {\n      \"parameters\": [\n        {\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"ID of a checklist.\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        }\n      ],\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get a Checklist\",\n        \"description\": \"\",\n        \"operationId\": \"get-checklists-id\",\n        \"parameters\": [\n          {\n            \"name\": \"cards\",\n            \"in\": \"query\",\n            \"description\": \"Valid values: `all`, `closed`, `none`, `open`, `visible`. Cards is a nested resource. The additional query params available are documented at [Cards Nested Resource](/cloud/trello/guides/rest-api/nested-resources/#cards-nested-resource).\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"none\",\n              \"enum\": [\"all\", \"closed\", \"none\", \"open\", \"visible\"]\n            }\n          },\n          {\n            \"name\": \"checkItems\",\n            \"in\": \"query\",\n            \"description\": \"The check items on the list to return. One of: `all`, `none`.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"all\", \"none\"],\n              \"default\": \"all\"\n            }\n          },\n          {\n            \"name\": \"checkItem_fields\",\n            \"in\": \"query\",\n            \"description\": \"The fields on the checkItem to return if checkItems are being returned. `all` or a comma-separated list of: `name`, `nameData`, `pos`, `state`, `type`\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"name, nameData, pos, state\",\n              \"enum\": [\"all\", \"name\", \"nameData\", \"pos\", \"state\", \"type\"]\n            }\n          },\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of checklist [fields](/cloud/trello/guides/rest-api/object-definitions/)\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"all\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      },\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Update a Checklist\",\n        \"description\": \"Update an existing checklist.\",\n        \"operationId\": \"put-checlists-id\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"Name of the new checklist being created. Should be length of 1 to 16384.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"pos\",\n            \"in\": \"query\",\n            \"description\": \"Determines the position of the checklist on the card. One of: `top`, `bottom`, or a positive number.\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/posStringOrNumber\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      },\n      \"delete\": {\n        \"tags\": [],\n        \"summary\": \"Delete a Checklist\",\n        \"description\": \"Delete a checklist\",\n        \"operationId\": \"delete-checklists-id\",\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/checklists/{id}/{field}\": {\n      \"parameters\": [\n        {\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"ID of a checklist.\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        },\n        {\n          \"name\": \"field\",\n          \"in\": \"path\",\n          \"description\": \"Field to update.\",\n          \"required\": true,\n          \"schema\": { \"type\": \"string\", \"enum\": [\"name\", \"pos\"] }\n        }\n      ],\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get field on a Checklist\",\n        \"description\": \"\",\n        \"operationId\": \"get-checklists-id-field\",\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      },\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Update field on a Checklist\",\n        \"description\": \"\",\n        \"operationId\": \"put-checklists-id-field\",\n        \"parameters\": [\n          {\n            \"name\": \"value\",\n            \"in\": \"query\",\n            \"description\": \"The value to change the checklist name to. Should be a string of length 1 to 16384.\",\n            \"required\": true,\n            \"schema\": {\n              \"oneOf\": [\n                { \"$ref\": \"#/components/schemas/posStringOrNumber\" },\n                { \"$ref\": \"#/components/schemas/TrelloID\" }\n              ]\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/checklists/{id}/board\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get the Board the Checklist is on\",\n        \"description\": \"\",\n        \"operationId\": \"get-checklists-id-board\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of a checklist.\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of board [fields](/cloud/trello/guides/rest-api/object-definitions/)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"all\", \"name\"],\n              \"default\": \"all\"\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/checklists/{id}/cards\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get the Card a Checklist is on\",\n        \"description\": \"\",\n        \"operationId\": \"get-checklists-id-cards\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of a checklist.\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/checklists/{id}/checkItems\": {\n      \"parameters\": [\n        {\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"ID of a checklist.\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        }\n      ],\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get Checkitems on a Checklist\",\n        \"description\": \"\",\n        \"operationId\": \"get-checklists-id-checkitems\",\n        \"parameters\": [\n          {\n            \"name\": \"filter\",\n            \"in\": \"query\",\n            \"description\": \"One of: `all`, `none`.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"all\",\n              \"enum\": [\"all\", \"none\"]\n            }\n          },\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"One of: `all`, `name`, `nameData`, `pos`, `state`, `type`.\",\n            \"required\": false,\n            \"explode\": false,\n            \"style\": \"form\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"name, nameData, pos, state\",\n              \"enum\": [\"all\", \"name\", \"nameData\", \"pos\", \"state\", \"type\"]\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      },\n      \"post\": {\n        \"tags\": [],\n        \"summary\": \"Create Checkitem on Checklist\",\n        \"description\": \"\",\n        \"operationId\": \"post-checklists-id-checkitems\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"The name of the new check item on the checklist. Should be a string of length 1 to 16384.\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\", \"maxLength\": 16384, \"minLength\": 1 }\n          },\n          {\n            \"name\": \"pos\",\n            \"in\": \"query\",\n            \"description\": \"The position of the check item in the checklist. One of: `top`, `bottom`, or a positive number.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"bottom\",\n              \"$ref\": \"#/components/schemas/posStringOrNumber\"\n            }\n          },\n          {\n            \"name\": \"checked\",\n            \"in\": \"query\",\n            \"description\": \"Determines whether the check item is already checked when created.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/checklists/{id}/checkItems/{idCheckItem}\": {\n      \"parameters\": [\n        {\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"ID of a checklist.\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        },\n        {\n          \"name\": \"idCheckItem\",\n          \"in\": \"path\",\n          \"description\": \"ID of the check item to retrieve.\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        }\n      ],\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get a Checkitem on a Checklist\",\n        \"description\": \"\",\n        \"operationId\": \"get-checklists-id-checkitems-idcheckitem\",\n        \"parameters\": [\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"One of: `all`, `name`, `nameData`, `pos`, `state`, `type`.\",\n            \"required\": false,\n            \"style\": \"form\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"name, nameData, pos, state\",\n              \"enum\": [\"all\", \"name\", \"nameData\", \"pos\", \"state\", \"type\"]\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      },\n      \"delete\": {\n        \"tags\": [],\n        \"summary\": \"Delete Checkitem from Checklist\",\n        \"description\": \"Remove an item from a checklist\",\n        \"operationId\": \"delete-checklists-id-checkitems-idcheckitem\",\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/customFields\": {\n      \"post\": {\n        \"tags\": [],\n        \"summary\": \"Create a new Custom Field on a Board\",\n        \"description\": \"Create a new Custom Field on a board.\",\n        \"operationId\": \"post-customfields\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\"idModel\", \"modelType\", \"name\", \"type\", \"pos\"],\n                \"properties\": {\n                  \"idModel\": {\n                    \"$ref\": \"#/components/schemas/TrelloID\",\n                    \"description\": \"The ID of the model for which the Custom Field is being defined. This should always be the ID of a board.\"\n                  },\n                  \"modelType\": {\n                    \"enum\": [\"board\"],\n                    \"type\": \"string\",\n                    \"description\": \"The type of model that the Custom Field is being defined on. This should always be `board`.\"\n                  },\n                  \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"The name of the Custom Field\"\n                  },\n                  \"type\": {\n                    \"enum\": [\"checkbox\", \"list\", \"number\", \"text\", \"date\"],\n                    \"type\": \"string\",\n                    \"description\": \"The type of Custom Field to create.\"\n                  },\n                  \"options\": {\n                    \"type\": \"string\",\n                    \"description\": \"If the type is `checkbox` \"\n                  },\n                  \"pos\": {\n                    \"$ref\": \"#/components/schemas/posStringOrNumber\",\n                    \"description\": \"\"\n                  },\n                  \"display_cardFront\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"Whether this Custom Field should be shown on the front of Cards\",\n                    \"default\": true\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/CustomField\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/customFields/{id}\": {\n      \"parameters\": [\n        {\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"ID of the Custom Field.\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        }\n      ],\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get a Custom Field\",\n        \"description\": \"\",\n        \"operationId\": \"get-customfields-id\",\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/CustomField\" }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Update a Custom Field definition\",\n        \"description\": \"Update a Custom Field definition.\",\n        \"operationId\": \"put-customfields-id\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"The name of the Custom Field\"\n                  },\n                  \"pos\": { \"$ref\": \"#/components/schemas/posStringOrNumber\" },\n                  \"display/cardFront\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"Whether to display this custom field on the front of cards\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/CustomField\" }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [],\n        \"summary\": \"Delete a Custom Field definition\",\n        \"description\": \"Delete a Custom Field from a board.\",\n        \"operationId\": \"delete-customfields-id\",\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/customFields/{id}/options\": {\n      \"parameters\": [\n        {\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"ID of the customfield.\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        }\n      ],\n      \"post\": {\n        \"tags\": [],\n        \"summary\": \"Add Option to Custom Field dropdown\",\n        \"description\": \"Add an option to a dropdown Custom Field\",\n        \"operationId\": \"get-customfields-id-options\",\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      },\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get Options of Custom Field drop down\",\n        \"description\": \"Get the options of a drop down Custom Field\",\n        \"operationId\": \"post-customfields-id-options\",\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/customFields/{id}/options/{idCustomFieldOption}\": {\n      \"parameters\": [\n        {\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"ID of the customfielditem.\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        },\n        {\n          \"name\": \"idCustomFieldOption\",\n          \"in\": \"path\",\n          \"description\": \"ID of the customfieldoption to retrieve.\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        }\n      ],\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get Option of Custom Field dropdown\",\n        \"description\": \"Retrieve a specific, existing Option on a given dropdown-type Custom Field\",\n        \"operationId\": \"get-customfields-options-idcustomfieldoption\",\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      },\n      \"delete\": {\n        \"tags\": [],\n        \"summary\": \"Delete Option of Custom Field dropdown\",\n        \"description\": \"Delete an option from a Custom Field dropdown.\",\n        \"operationId\": \"delete-customfields-options-idcustomfieldoption\",\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/emoji\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"List available Emoji\",\n        \"description\": \"List available Emoji\",\n        \"operationId\": \"emoji\",\n        \"parameters\": [\n          {\n            \"name\": \"locale\",\n            \"in\": \"query\",\n            \"description\": \"The locale to return emoji descriptions and names in. Defaults to the logged in member's locale.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"spritesheets\",\n            \"in\": \"query\",\n            \"description\": \"`true` to return spritesheet URLs in the response\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          }\n        ],\n        \"deprecated\": false,\n        \"security\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/Emoji\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/enterprises/{id}\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get an Enterprise\",\n        \"description\": \"Get an enterprise by its ID.\",\n        \"operationId\": \"get-enterprises-id\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of the enterprise to retrieve.\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of: `id`, `name`, `displayName`, `prefs`, `ssoActivationFailed`, `idAdmins`, `idMembers` (Note that the members array returned will be paginated if `members` is 'normal' or 'admins'. Pagination can be controlled with member_startIndex, etc, but the API response will not contain the total available result count or pagination status data. Read the SCIM documentation [here]() for more information on filtering), `idOrganizations`, `products`, `userTypes`, `idMembers`, `idOrganizations`\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"all\" }\n          },\n          {\n            \"name\": \"members\",\n            \"in\": \"query\",\n            \"description\": \"One of: `none`, `normal`, `admins`, `owners`, `all`\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"none\" }\n          },\n          {\n            \"name\": \"member_fields\",\n            \"in\": \"query\",\n            \"description\": \"One of: `avatarHash`, `fullName`, `initials`, `username`\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"avatarHash, fullName, initials, username\"\n            }\n          },\n          {\n            \"name\": \"member_filter\",\n            \"in\": \"query\",\n            \"description\": \"Pass a [SCIM-style query](/cloud/trello/scim/) to filter members. This takes precedence over the all/normal/admins value of members. If any of the member_* args are set, the member array will be paginated.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"none\" }\n          },\n          {\n            \"name\": \"member_sort\",\n            \"in\": \"query\",\n            \"description\": \"This parameter expects a [SCIM-style](/cloud/trello/scim/) sorting value prefixed by a `-` to sort descending. If no `-` is prefixed, it will be sorted ascending. Note that the members array returned will be paginated if `members` is 'normal' or 'admins'. Pagination can be controlled with member_startIndex, etc, but the API response will not contain the total available result count or pagination status data.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"member_sortBy\",\n            \"in\": \"query\",\n            \"description\": \"Deprecated: Please use member_sort. This parameter expects a [SCIM-style sorting value](/cloud/trello/scim/). Note that the members array returned will be paginated if `members` is `normal` or `admins`. Pagination can be controlled with `member_startIndex`, etc, and the API response's header will contain the total count and pagination state.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"none\" }\n          },\n          {\n            \"name\": \"member_sortOrder\",\n            \"in\": \"query\",\n            \"description\": \"Deprecated: Please use member_sort. One of: `ascending`, `descending`, `asc`, `desc`\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"id\" }\n          },\n          {\n            \"name\": \"member_startIndex\",\n            \"in\": \"query\",\n            \"description\": \"Any integer between 0 and 100.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"format\": \"int32\", \"default\": \"1\" }\n          },\n          {\n            \"name\": \"member_count\",\n            \"in\": \"query\",\n            \"description\": \"0 to 100\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"format\": \"int32\", \"default\": \"10\" }\n          },\n          {\n            \"name\": \"organizations\",\n            \"in\": \"query\",\n            \"description\": \"One of: `none`, `members`, `public`, `all`\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"none\" }\n          },\n          {\n            \"name\": \"organization_fields\",\n            \"in\": \"query\",\n            \"description\": \"Any valid value that the [nested organization field resource]() accepts.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"none\" }\n          },\n          {\n            \"name\": \"organization_paid_accounts\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          },\n          {\n            \"name\": \"organization_memberships\",\n            \"in\": \"query\",\n            \"description\": \"Comma-seperated list of: `me`, `normal`, `admin`, `active`, `deactivated`\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"none\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/Enterprise\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/enterprises/{id}/auditlog\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get auditlog data for an Enterprise\",\n        \"description\": \"Returns an array of Actions related to the Enterprise object. Used for populating data sent to Google Sheets from an Enterprise's audit log page: https://trello.com/e/{enterprise_name}/admin/auditlog. An Enterprise admin token is required for this route.\",\n        \"operationId\": \"get-enterprises-id-auditlog\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"#/components/schemas/EnterpriseAuditLog\" }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/enterprises/{id}/admins\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get Enterprise admin Members\",\n        \"description\": \"Get an enterprise's admin members.\",\n        \"operationId\": \"get-enterprises-id-admins\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of the enterprise to retrieve.\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"Any valid value that the [nested member field resource]() accepts.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"fullName, userName\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/EnterpriseAdmin\" }\n              }\n            }\n          },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/Error\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/enterprises/{id}/signupUrl\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get signupUrl for Enterprise\",\n        \"description\": \"Get the signup URL for an enterprise.\",\n        \"operationId\": \"get-enterprises-id-signupurl\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of the enterprise to retrieve.\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"authenticate\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          },\n          {\n            \"name\": \"confirmationAccepted\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          },\n          {\n            \"name\": \"returnUrl\",\n            \"in\": \"query\",\n            \"description\": \"Any valid URL.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"url\",\n              \"default\": null,\n              \"nullable\": true\n            }\n          },\n          {\n            \"name\": \"tosAccepted\",\n            \"in\": \"query\",\n            \"description\": \"Designates whether the user has seen/consented to the Trello ToS prior to being redirected to the enterprise signup page/their IdP.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": { \"signupUrl\": { \"type\": \"string\" } }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/enterprises/{id}/members\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get Members of Enterprise\",\n        \"description\": \"Get the members of an enterprise.\",\n        \"operationId\": \"get-enterprises-id-members\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of the Enterprise to retrieve.\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"A comma-seperated list of valid [member fields](member).\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"avatarHash, fullName, initials, username\"\n            }\n          },\n          {\n            \"name\": \"filter\",\n            \"in\": \"query\",\n            \"description\": \"Pass a [SCIM-style query](/cloud/trello/scim/) to filter members. This takes precedence over the all/normal/admins value of members. If any of the below member_* args are set, the member array will be paginated.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"nullable\": true }\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"This parameter expects a [SCIM-style](/cloud/trello/scim/) sorting value prefixed by a `-` to sort descending. If no `-` is prefixed, it will be sorted ascending. Note that the members array returned will be paginated if `members` is 'normal' or 'admins'. Pagination can be controlled with member_startIndex, etc, but the API response will not contain the total available result count or pagination status data.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"sortBy\",\n            \"in\": \"query\",\n            \"description\": \"Deprecated: Please use `sort` instead. This parameter expects a [SCIM-style](/cloud/trello/scim/) sorting value. Note that the members array returned will be paginated if `members` is 'normal' or 'admins'. Pagination can be controlled with member_startIndex, etc, but the API response will not contain the total available result count or pagination status data.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"sortOrder\",\n            \"in\": \"query\",\n            \"description\": \"Deprecated: Please use `sort` instead. One of: `ascending`, `descending`, `asc`, `desc`.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"ascending\", \"descending\", \"asc\", \"desc\"],\n              \"default\": null,\n              \"nullable\": true\n            }\n          },\n          {\n            \"name\": \"startIndex\",\n            \"in\": \"query\",\n            \"description\": \"Any integer between 0 and 9999.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"minimum\": 0,\n              \"maximum\": 9999\n            }\n          },\n          {\n            \"name\": \"count\",\n            \"in\": \"query\",\n            \"description\": \"[SCIM-style filter](/cloud/trello/scim/).\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"none\" }\n          },\n          {\n            \"name\": \"organization_fields\",\n            \"in\": \"query\",\n            \"description\": \"Any valid value that the [nested organization field resource](/cloud/trello/guides/rest-api/nested-resources/) accepts.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"displayName\" }\n          },\n          {\n            \"name\": \"board_fields\",\n            \"in\": \"query\",\n            \"description\": \"Any valid value that the [nested board resource](/cloud/trello/guides/rest-api/nested-resources/) accepts.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"name\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"#/components/schemas/Member\" }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/enterprises/{id}/members/{idMember}\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get a Member of Enterprise\",\n        \"description\": \"Get a specific member of an enterprise by ID.\",\n        \"operationId\": \"get-enterprises-id-members-idmember\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of the enterprise to retrieve.\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"idMember\",\n            \"in\": \"path\",\n            \"description\": \"An ID of a member resource.\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"A comma separated list of any valid values that the [nested member field resource]() accepts.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"avatarHash, fullName, initials, username\"\n            }\n          },\n          {\n            \"name\": \"organization_fields\",\n            \"in\": \"query\",\n            \"description\": \"Any valid value that the [nested organization field resource](/cloud/trello/guides/rest-api/nested-resources/) accepts.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"displayName\" }\n          },\n          {\n            \"name\": \"board_fields\",\n            \"in\": \"query\",\n            \"description\": \"Any valid value that the [nested board resource](/cloud/trello/guides/rest-api/nested-resources/) accepts.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"name\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/Member\" }\n              }\n            }\n          },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/Error\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/enterprises/{id}/transferrable/organization/{idOrganization}\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get whether an organization can be transferred to an enterprise.\",\n        \"description\": \"Get whether an organization can be transferred to an enterprise.\",\n        \"operationId\": \"get-enterprises-id-transferrable-organization-idOrganization\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of the Enterprise to retrieve.\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"idOrganization\",\n            \"in\": \"path\",\n            \"description\": \"An ID of an Organization resource.\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TransferrableOrganization\"\n                }\n              }\n            }\n          },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/Error\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/enterprises/{id}/claimableOrganizations\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get ClaimableOrganizations of an Enterprise\",\n        \"description\": \"Get the Workspaces that are claimable by the enterprise by ID. Can optionally query for workspaces based on activeness/ inactiveness.\",\n        \"operationId\": \"get-enterprises-id-claimableOrganizations\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of the enterprise to retrieve\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Limits the number of workspaces to be sorted\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\" }\n          },\n          {\n            \"name\": \"cursor\",\n            \"in\": \"query\",\n            \"description\": \"Specifies the sort order to return matching documents\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"Name of the enterprise to retrieve workspaces for\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"activeSince\",\n            \"in\": \"query\",\n            \"description\": \"Date in YYYY-MM-DD format indicating the date to search up to for activeness\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"inactiveSince\",\n            \"in\": \"query\",\n            \"description\": \"Date in YYYY-MM-DD format indicating the date to search up to for inactiveness\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ClaimableOrganizations\"\n                }\n              }\n            }\n          },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"default\": {\n            \"description\": \"Unexpected erorr\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/Error\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/enterprises/{id}/pendingOrganizations\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get PendingOrganizations of an Enterprise\",\n        \"description\": \"Get the Workspaces that are pending for the enterprise by ID.\",\n        \"operationId\": \"get-enterprises-id-pendingOrganizations\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of the enterprise to retrieve\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/PendingOrganizations\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"default\": {\n            \"description\": \"Unexpected erorr\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/Error\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/enterprises/{id}/tokens\": {\n      \"post\": {\n        \"tags\": [],\n        \"summary\": \"Create an auth Token for an Enterprise.\",\n        \"description\": \"Create an auth Token for an Enterprise.\",\n        \"operationId\": \"post-enterprises-id-tokens\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of the enterprise to retrieve.\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"expiration\",\n            \"in\": \"query\",\n            \"description\": \"One of: `1hour`, `1day`, `30days`, `never`\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"none\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/enterprises/{id}/organizations\": {\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Transfer an Organization to an Enterprise.\",\n        \"description\": \"Transfer an organization to an enterprise.\",\n        \"operationId\": \"put-enterprises-id-organizations\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of the Enterprise to retrieve.\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"idOrganization\",\n            \"in\": \"query\",\n            \"description\": \"ID of Organization to be transferred to Enterprise.\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"anyOf\": [{ \"$ref\": \"#/components/schemas/Organization\" }]\n                  }\n                }\n              }\n            }\n          },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/Error\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/enterprises/{id}/members/{idMember}/licensed\": {\n      \"put\": {\n        \"summary\": \"Update a Member's licensed status\",\n        \"description\": \"This endpoint is used to update whether the provided Member should use one of the Enterprise's available licenses or not.\",\n        \"operationId\": \"put-enterprises-id-members-idmember-licensed\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of the Enterprise.\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"idMember\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the Member\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"value\",\n            \"in\": \"query\",\n            \"description\": \"Boolean value to determine whether the user should be given an Enterprise license (true) or not (false).\",\n            \"required\": true,\n            \"schema\": { \"type\": \"boolean\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/Member\" }\n              }\n            }\n          },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/Error\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/enterprises/{id}/members/{idMember}/deactivated\": {\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Deactivate a Member of an Enterprise.\",\n        \"description\": \"Deactivate a Member of an Enterprise.\",\n        \"operationId\": \"enterprises-id-members-idMember-deactivated\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of the enterprise to retrieve.\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"idMember\",\n            \"in\": \"path\",\n            \"description\": \"ID of the Member to deactive.\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"value\",\n            \"in\": \"query\",\n            \"description\": \"Determines whether the user is deactivated or not.\",\n            \"required\": true,\n            \"schema\": { \"type\": \"boolean\" }\n          },\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"A comma separated list of any valid values that the [nested member field resource]() accepts.\",\n            \"required\": false,\n            \"explode\": false,\n            \"style\": \"form\",\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/MemberFields\",\n              \"default\": \"avatarHash, fullName, initials, username\"\n            }\n          },\n          {\n            \"name\": \"organization_fields\",\n            \"in\": \"query\",\n            \"description\": \"Any valid value that the [nested organization resource](/cloud/trello/guides/rest-api/nested-resources/) accepts.\",\n            \"required\": false,\n            \"explode\": false,\n            \"style\": \"form\",\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/OrganizationFields\",\n              \"default\": \"displayName\"\n            }\n          },\n          {\n            \"name\": \"board_fields\",\n            \"in\": \"query\",\n            \"description\": \"Any valid value that the [nested board resource](/cloud/trello/guides/rest-api/nested-resources/) accepts.\",\n            \"required\": false,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/BoardFields\",\n              \"default\": \"name\"\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/enterprises/{id}/admins/{idMember}\": {\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Update Member to be admin of Enterprise\",\n        \"description\": \"Make Member an admin of Enterprise.\",\n        \"operationId\": \"put-enterprises-id-admins-idmember\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of the enterprise to retrieve.\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"idMember\",\n            \"in\": \"path\",\n            \"description\": \"ID of member to be made an admin of enterprise.\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      },\n      \"delete\": {\n        \"tags\": [],\n        \"summary\": \"Remove a Member as admin from Enterprise.\",\n        \"description\": \"Remove a member as admin from an enterprise.\",\n        \"operationId\": \"enterprises-id-organizations-idmember\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of the Enterprise to retrieve.\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"idMember\",\n            \"in\": \"path\",\n            \"description\": \"ID of the member to be removed as an admin from enterprise.\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/enterprises/{id}/organizations/{idOrg}\": {\n      \"delete\": {\n        \"tags\": [],\n        \"summary\": \"Delete an Organization from an Enterprise.\",\n        \"description\": \"Remove an organization from an enterprise.\",\n        \"operationId\": \"delete-enterprises-id-organizations-idorg\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of the enterprise to retrieve.\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"idOrg\",\n            \"in\": \"path\",\n            \"description\": \"ID of the organization to be removed from the enterprise.\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/labels/{id}\": {\n      \"parameters\": [\n        {\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"The ID of the Label\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        }\n      ],\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get a Label\",\n        \"description\": \"Get information about a single Label.\",\n        \"operationId\": \"get-labels-id\",\n        \"parameters\": [\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"all or a comma-separated list of [fields](/cloud/trello/guides/rest-api/object-definitions/)\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"all\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      },\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Update a Label\",\n        \"description\": \"Update a label by ID.\",\n        \"operationId\": \"put-labels-id\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"The new name for the label\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"color\",\n            \"in\": \"query\",\n            \"description\": \"The new color for the label. See: [fields](/cloud/trello/guides/rest-api/object-definitions/) for color options\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/Color\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      },\n      \"delete\": {\n        \"tags\": [],\n        \"summary\": \"Delete a Label\",\n        \"description\": \"Delete a label by ID.\",\n        \"operationId\": \"delete-labels-id\",\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/labels/{id}/{field}\": {\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Update a field on a label\",\n        \"description\": \"Update a field on a label.\",\n        \"operationId\": \"put-labels-id-field\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The id of the label\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"field\",\n            \"in\": \"path\",\n            \"description\": \"The field on the Label to update.\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\", \"enum\": [\"color\", \"name\"] }\n          },\n          {\n            \"name\": \"value\",\n            \"in\": \"query\",\n            \"description\": \"The new value for the field.\",\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" },\n            \"required\": true\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/labels\": {\n      \"post\": {\n        \"tags\": [],\n        \"summary\": \"Create a Label\",\n        \"description\": \"Create a new Label on a Board.\",\n        \"operationId\": \"post-labels\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"Name for the label\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"color\",\n            \"in\": \"query\",\n            \"description\": \"The color for the label.\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/Color\" }\n          },\n          {\n            \"name\": \"idBoard\",\n            \"in\": \"query\",\n            \"description\": \"The ID of the Board to create the Label on.\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/lists/{id}\": {\n      \"parameters\": [\n        {\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"The ID of the list\",\n          \"required\": true,\n          \"schema\": { \"type\": \"string\" }\n        }\n      ],\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get a List\",\n        \"description\": \"Get information about a List\",\n        \"operationId\": \"get-lists-id\",\n        \"parameters\": [\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"style\": \"form\",\n            \"explode\": false,\n            \"description\": \"`all` or a comma separated list of List field names.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"name,closed,idBoard,pos\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      },\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Update a List\",\n        \"description\": \"Update the properties of a List\",\n        \"operationId\": \"put-lists-id\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"New name for the list\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"closed\",\n            \"in\": \"query\",\n            \"description\": \"Whether the list should be closed (archived)\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\" }\n          },\n          {\n            \"name\": \"idBoard\",\n            \"in\": \"query\",\n            \"description\": \"ID of a board the list should be moved to\",\n            \"required\": false,\n            \"explode\": false,\n            \"style\": \"form\",\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"pos\",\n            \"in\": \"query\",\n            \"description\": \"New position for the list: `top`, `bottom`, or a positive floating point number\",\n            \"required\": false,\n            \"schema\": {\n              \"oneOf\": [\n                { \"type\": \"number\", \"format\": \"float\" },\n                { \"type\": \"string\", \"enum\": [\"top\", \"bottom\"] }\n              ]\n            }\n          },\n          {\n            \"name\": \"subscribed\",\n            \"in\": \"query\",\n            \"description\": \"Whether the active member is subscribed to this list\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/lists\": {\n      \"post\": {\n        \"tags\": [],\n        \"summary\": \"Create a new List\",\n        \"description\": \"Create a new List on a Board\",\n        \"operationId\": \"post-lists\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"Name for the list\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"idBoard\",\n            \"in\": \"query\",\n            \"description\": \"The long ID of the board the list should be created on\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"idListSource\",\n            \"in\": \"query\",\n            \"description\": \"ID of the List to copy into the new List\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"pos\",\n            \"in\": \"query\",\n            \"description\": \"Position of the list. `top`, `bottom`, or a positive floating point number\",\n            \"required\": false,\n            \"schema\": {\n              \"oneOf\": [\n                { \"type\": \"number\", \"format\": \"float\" },\n                { \"type\": \"string\", \"enum\": [\"top\", \"bottom\"] }\n              ]\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/lists/{id}/archiveAllCards\": {\n      \"post\": {\n        \"tags\": [],\n        \"summary\": \"Archive all Cards in List\",\n        \"description\": \"Archive all cards in a list\",\n        \"operationId\": \"post-lists-id-archiveallcards\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the list\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/lists/{id}/moveAllCards\": {\n      \"post\": {\n        \"tags\": [],\n        \"summary\": \"Move all Cards in List\",\n        \"description\": \"Move all Cards in a List\",\n        \"operationId\": \"post-lists-id-moveallcards\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the list\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"idBoard\",\n            \"in\": \"query\",\n            \"description\": \"The ID of the board the cards should be moved to\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"idList\",\n            \"in\": \"query\",\n            \"description\": \"The ID of the list that the cards should be moved to\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/lists/{id}/closed\": {\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Archive or unarchive a list\",\n        \"description\": \"Archive or unarchive a list\",\n        \"operationId\": \"put-lists-id-closed\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the list\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"value\",\n            \"in\": \"query\",\n            \"description\": \"Set to true to close (archive) the list\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/lists/{id}/idBoard\": {\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Move List to Board\",\n        \"description\": \"Move a List to a different Board\",\n        \"operationId\": \"put-id-idboard\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the list\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"value\",\n            \"in\": \"query\",\n            \"description\": \"The ID of the board to move the list to\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/lists/{id}/{field}\": {\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Update a field on a List\",\n        \"description\": \"Rename a list\",\n        \"operationId\": \"put-lists-id-field\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the list\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"field\",\n            \"in\": \"path\",\n            \"description\": \"The field on the List to be updated\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"name\", \"pos\", \"subscribed\"]\n            }\n          },\n          {\n            \"name\": \"value\",\n            \"in\": \"query\",\n            \"description\": \"The new value for the field\",\n            \"required\": false,\n            \"schema\": {\n              \"oneOf\": [\n                {\n                  \"type\": \"string\",\n                  \"description\": \"The new name for the List\"\n                },\n                {\n                  \"type\": \"number\",\n                  \"format\": \"float\",\n                  \"description\": \"The new position for the List\"\n                },\n                {\n                  \"type\": \"string\",\n                  \"enum\": [\"top\", \"bottom\"],\n                  \"description\": \"The new position for the List\"\n                },\n                { \"type\": \"boolean\" }\n              ]\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/lists/{id}/actions\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get Actions for a List\",\n        \"description\": \"Get the Actions on a List\",\n        \"operationId\": \"get-lists-id-actions\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the list\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"filter\",\n            \"in\": \"query\",\n            \"description\": \"A comma-separated list of [action types](https://developer.atlassian.com/cloud/trello/guides/rest-api/action-types/).\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/lists/{id}/board\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get the Board a List is on\",\n        \"description\": \"Get the board a list is on\",\n        \"operationId\": \"get-lists-id-board\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the list\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of board [fields](/cloud/trello/guides/rest-api/object-definitions/#board-object)\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"all\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/lists/{id}/cards\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get Cards in a List\",\n        \"description\": \"List the cards in a list\",\n        \"operationId\": \"get-lists-id-cards\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the list\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"#/components/schemas/Card\" }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/members/{id}\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get a Member\",\n        \"description\": \"Get a member\",\n        \"operationId\": \"get-members=id\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID or username of the member\",\n            \"required\": true,\n            \"schema\": {\n              \"oneOf\": [\n                { \"$ref\": \"#/components/schemas/TrelloID\" },\n                { \"type\": \"string\" }\n              ]\n            }\n          },\n          {\n            \"name\": \"actions\",\n            \"in\": \"query\",\n            \"description\": \"See the [Actions Nested Resource](/cloud/trello/guides/rest-api/nested-resources/#actions-nested-resource)\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"boards\",\n            \"in\": \"query\",\n            \"description\": \"See the [Boards Nested Resource](/cloud/trello/guides/rest-api/nested-resources/#boards-nested-resource)\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"boardBackgrounds\",\n            \"in\": \"query\",\n            \"description\": \"One of: `all`, `custom`, `default`, `none`, `premium`\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"all\", \"custom\", \"default\", \"none\", \"premium\"],\n              \"default\": \"none\"\n            }\n          },\n          {\n            \"name\": \"boardsInvited\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of: closed, members, open, organization, pinned, public, starred, unpinned\",\n            \"required\": false,\n            \"schema\": {\n              \"enum\": [\n                \"closed\",\n                \"members\",\n                \"open\",\n                \"organization\",\n                \"pinned\",\n                \"public\",\n                \"starred\",\n                \"unpinned\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"boardsInvited_fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of board [fields](/cloud/trello/guides/rest-api/object-definitions/)\",\n            \"required\": false,\n            \"style\": \"form\",\n            \"explode\": false,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/BoardFields\",\n              \"default\": \"name,closed,idOrganization,pinned\"\n            }\n          },\n          {\n            \"name\": \"boardStars\",\n            \"in\": \"query\",\n            \"description\": \"Whether to return the boardStars or not\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          },\n          {\n            \"name\": \"cards\",\n            \"in\": \"query\",\n            \"description\": \"See the [Cards Nested Resource](/cloud/trello/guides/rest-api/nested-resources/#cards-nested-resource) for additional options\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"none\" }\n          },\n          {\n            \"name\": \"customBoardBackgrounds\",\n            \"in\": \"query\",\n            \"description\": \"`all` or `none`\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"all\", \"none\"],\n              \"default\": \"none\"\n            }\n          },\n          {\n            \"name\": \"customEmoji\",\n            \"in\": \"query\",\n            \"description\": \"`all` or `none`\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"all\", \"none\"],\n              \"default\": \"none\"\n            }\n          },\n          {\n            \"name\": \"customStickers\",\n            \"in\": \"query\",\n            \"description\": \"`all` or `none`\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"all\", \"none\"],\n              \"default\": \"none\"\n            }\n          },\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of member [fields](/cloud/trello/guides/rest-api/object-definitions/)\",\n            \"required\": false,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/MemberFields\",\n              \"default\": \"all\"\n            }\n          },\n          {\n            \"name\": \"notifications\",\n            \"in\": \"query\",\n            \"description\": \"See the [Notifications Nested Resource](/cloud/trello/guides/rest-api/nested-resources/#notifications-nested-resource)\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"organizations\",\n            \"in\": \"query\",\n            \"description\": \"One of: `all`, `members`, `none`, `public`\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"all\", \"members\", \"none\", \"public\"],\n              \"default\": \"none\"\n            }\n          },\n          {\n            \"name\": \"organization_fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of organization [fields](/cloud/trello/guides/rest-api/object-definitions/)\",\n            \"required\": false,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/OrganizationFields\",\n              \"default\": \"all\"\n            }\n          },\n          {\n            \"name\": \"organization_paid_account\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          },\n          {\n            \"name\": \"organizationsInvited\",\n            \"in\": \"query\",\n            \"description\": \"One of: `all`, `members`, `none`, `public`\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"all\", \"members\", \"none\", \"public\"],\n              \"default\": \"none\"\n            }\n          },\n          {\n            \"name\": \"organizationsInvited_fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of organization [fields](/cloud/trello/guides/rest-api/object-definitions/)\",\n            \"required\": false,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/OrganizationFields\",\n              \"default\": \"all\"\n            }\n          },\n          {\n            \"name\": \"paid_account\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          },\n          {\n            \"name\": \"savedSearches\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          },\n          {\n            \"name\": \"tokens\",\n            \"in\": \"query\",\n            \"description\": \"`all` or `none`\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"all\", \"none\"],\n              \"default\": \"none\"\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"oneOf\": [{ \"$ref\": \"#/components/schemas/Member\" }]\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Update a Member\",\n        \"description\": \"Update a Member\",\n        \"operationId\": \"put-members-id\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID or username of the member\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"fullName\",\n            \"in\": \"query\",\n            \"description\": \"New name for the member. Cannot begin or end with a space.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"initials\",\n            \"in\": \"query\",\n            \"description\": \"New initials for the member. 1-4 characters long.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"maxLength\": 4, \"minLength\": 1 }\n          },\n          {\n            \"name\": \"username\",\n            \"in\": \"query\",\n            \"description\": \"New username for the member. At least 3 characters long, only lowercase letters, underscores, and numbers. Must be unique.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"bio\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"avatarSource\",\n            \"in\": \"query\",\n            \"description\": \"One of: `gravatar`, `none`, `upload`\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"gravatar\", \"none\", \"upload\"]\n            }\n          },\n          {\n            \"name\": \"prefs/colorBlind\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\" }\n          },\n          {\n            \"name\": \"prefs/locale\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"prefs/minutesBetweenSummaries\",\n            \"in\": \"query\",\n            \"description\": \"`-1` for disabled, `1`, or `60`\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"format\": \"int32\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"oneOf\": [{ \"$ref\": \"#/components/schemas/Member\" }]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/members/{id}/{field}\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get a field on a Member\",\n        \"description\": \"Get a particular property of a member\",\n        \"operationId\": \"get-members-id-field\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID or username of the member\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"field\",\n            \"in\": \"path\",\n            \"description\": \"One of the member [fields](/cloud/trello/guides/rest-api/object-definitions/)\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/MemberFields\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"oneOf\": [{ \"$ref\": \"#/components/schemas/Member\" }]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/members/{id}/actions\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get a Member's Actions\",\n        \"description\": \"List the actions for a member\",\n        \"operationId\": \"get-members-id-actions\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID or username of the member\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"filter\",\n            \"in\": \"query\",\n            \"description\": \"A comma-separated list of [action types](https://developer.atlassian.com/cloud/trello/guides/rest-api/action-types/).\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"oneOf\": [{ \"$ref\": \"#/components/schemas/Member\" }]\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/members/{id}/boardBackgrounds\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get Member's custom Board backgrounds\",\n        \"description\": \"Get a member's custom board backgrounds\",\n        \"operationId\": \"get-members-id-boardbackgrounds\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID or username of the member\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"filter\",\n            \"in\": \"query\",\n            \"description\": \"One of: `all`, `custom`, `default`, `none`, `premium`\",\n            \"required\": false,\n            \"schema\": {\n              \"enum\": [\"all\", \"custom\", \"default\", \"none\", \"premium\"],\n              \"type\": \"string\",\n              \"default\": \"all\"\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"oneOf\": [\n                      { \"$ref\": \"#/components/schemas/BoardBackground\" }\n                    ]\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [],\n        \"summary\": \"Upload new boardBackground for Member\",\n        \"description\": \"Upload a new boardBackground\",\n        \"operationId\": \"post-members-id-boardbackgrounds-1\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID or username of the member\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"file\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\", \"format\": \"binary\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"oneOf\": [\n                      { \"$ref\": \"#/components/schemas/BoardBackground\" }\n                    ]\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/members/{id}/boardBackgrounds/{idBackground}\": {\n      \"parameters\": [\n        {\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"The ID or username of the member\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        },\n        {\n          \"name\": \"idBackground\",\n          \"in\": \"path\",\n          \"description\": \"The ID of the board background\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        }\n      ],\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get a boardBackground of a Member\",\n        \"description\": \"Get a member's board background\",\n        \"operationId\": \"get-members-id-boardbackgrounds-idbackground\",\n        \"parameters\": [\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of: `brightness`, `fullSizeUrl`, `scaled`, `tile`\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"all\",\n              \"enum\": [\"all\", \"brightness\", \"fullSizeUrl\", \"scaled\", \"tile\"]\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BoardBackground\" }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Update a Member's custom Board background\",\n        \"description\": \"Update a board background\",\n        \"operationId\": \"put-members-id-boardbackgrounds-idbackground\",\n        \"parameters\": [\n          {\n            \"name\": \"brightness\",\n            \"in\": \"query\",\n            \"description\": \"One of: `dark`, `light`, `unknown`\",\n            \"required\": false,\n            \"schema\": { \"enum\": [\"dark\", \"light\", \"unknown\"], \"type\": \"string\" }\n          },\n          {\n            \"name\": \"tile\",\n            \"in\": \"query\",\n            \"description\": \"Whether the background should be tiled\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BoardBackground\" }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [],\n        \"summary\": \"Delete a Member's custom Board background\",\n        \"description\": \"Delete a board background\",\n        \"operationId\": \"delete-members-id-boardbackgrounds-idbackground\",\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/members/{id}/boardStars\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get a Member's boardStars\",\n        \"description\": \"List a member's board stars\",\n        \"operationId\": \"get-members-id-boardstars\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID or username of the member\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      },\n      \"post\": {\n        \"tags\": [],\n        \"summary\": \"Create Star for Board\",\n        \"description\": \"Star a new board on behalf of a Member\",\n        \"operationId\": \"post-members-id-boardstars\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID or username of the member\",\n            \"required\": true,\n            \"schema\": {\n              \"oneOf\": [\n                { \"$ref\": \"#/components/schemas/TrelloID\" },\n                { \"type\": \"string\" }\n              ]\n            }\n          },\n          {\n            \"name\": \"idBoard\",\n            \"in\": \"query\",\n            \"description\": \"The ID of the board to star\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"pos\",\n            \"in\": \"query\",\n            \"description\": \"The position of the newly starred board. `top`, `bottom`, or a positive float.\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/posStringOrNumber\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"#/components/schemas/BoardStars\" }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/members/{id}/boardStars/{idStar}\": {\n      \"parameters\": [\n        {\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"The ID or username of the member\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        },\n        {\n          \"name\": \"idStar\",\n          \"in\": \"path\",\n          \"description\": \"The ID of the board star\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        }\n      ],\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get a boardStar of Member\",\n        \"description\": \"Get a specific boardStar\",\n        \"operationId\": \"get-members-id-boardstars-idstar\",\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BoardStars\" }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Update the position of a boardStar of Member\",\n        \"description\": \"Update the position of a starred board\",\n        \"operationId\": \"put-members-id-boardstars-idstar\",\n        \"parameters\": [\n          {\n            \"name\": \"pos\",\n            \"in\": \"query\",\n            \"description\": \"New position for the starred board. `top`, `bottom`, or a positive float.\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/posStringOrNumber\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      },\n      \"delete\": {\n        \"tags\": [],\n        \"summary\": \"Delete Star for Board\",\n        \"description\": \"Unstar a board\",\n        \"operationId\": \"delete-members-id-boardstars-idstar\",\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/members/{id}/boards\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get Boards that Member belongs to\",\n        \"description\": \"Lists the boards that the user is a member of.\",\n        \"operationId\": \"get-members-id-boards\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID or username of the member\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"filter\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of: `closed`, `members`, `open`, `organization`, `public`, `starred`\",\n            \"required\": false,\n            \"schema\": {\n              \"enum\": [\n                \"all\",\n                \"closed\",\n                \"members\",\n                \"open\",\n                \"organization\",\n                \"public\",\n                \"starred\"\n              ],\n              \"type\": \"string\",\n              \"default\": \"all\"\n            }\n          },\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of board [fields](/cloud/trello/guides/rest-api/object-definitions/)\",\n            \"required\": false,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/BoardFields\",\n              \"default\": \"all\"\n            }\n          },\n          {\n            \"name\": \"lists\",\n            \"in\": \"query\",\n            \"description\": \"Which lists to include with the boards. One of: `all`, `closed`, `none`, `open`\",\n            \"required\": false,\n            \"schema\": {\n              \"enum\": [\"all\", \"closed\", \"none\", \"open\"],\n              \"type\": \"string\",\n              \"default\": \"none\"\n            }\n          },\n          {\n            \"name\": \"organization\",\n            \"in\": \"query\",\n            \"description\": \"Whether to include the Organization object with the Boards\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          },\n          {\n            \"name\": \"organization_fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of organization [fields](/cloud/trello/guides/rest-api/object-definitions/)\",\n            \"explode\": false,\n            \"style\": \"form\",\n            \"required\": false,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/OrganizationFields\",\n              \"default\": \"name,displayName\"\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"#/components/schemas/Board\" }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/members/{id}/boardsInvited\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get Boards the Member has been invited to\",\n        \"description\": \"Get the boards the member has been invited to\",\n        \"operationId\": \"get-members-id-boardsinvited\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID or username of the member\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of board [fields](/cloud/trello/guides/rest-api/object-definitions/)\",\n            \"required\": false,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/BoardFields\",\n              \"default\": \"all\"\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"#/components/schemas/Board\" }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/members/{id}/cards\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get Cards the Member is on\",\n        \"description\": \"Gets the cards a member is on\",\n        \"operationId\": \"get-members-id-cards\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID or username of the member\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"filter\",\n            \"in\": \"query\",\n            \"description\": \"One of: `all`, `closed`, `none`, `open`, `visible`\",\n            \"required\": false,\n            \"schema\": {\n              \"enum\": [\"all\", \"closed\", \"none\", \"open\", \"visible\"],\n              \"type\": \"string\",\n              \"default\": \"visible\"\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"#/components/schemas/Card\" }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/members/{id}/customBoardBackgrounds\": {\n      \"parameters\": [\n        {\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"The ID or username of the member\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        }\n      ],\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get a Member's custom Board Backgrounds\",\n        \"description\": \"Get a member's custom board backgrounds\",\n        \"operationId\": \"get-members-id-customboardbackgrounds\",\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"#/components/schemas/BoardBackground\" }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [],\n        \"summary\": \"Create a new custom Board Background\",\n        \"description\": \"Upload a new custom board background\",\n        \"operationId\": \"membersidcustomboardbackgrounds-1\",\n        \"parameters\": [\n          {\n            \"name\": \"file\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\", \"format\": \"binary\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BoardBackground\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/members/{id}/customBoardBackgrounds/{idBackground}\": {\n      \"parameters\": [\n        {\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"The ID or username of the member\",\n          \"required\": true,\n          \"schema\": {\n            \"oneOf\": [\n              { \"$ref\": \"#/components/schemas/TrelloID\" },\n              { \"type\": \"string\" }\n            ]\n          }\n        },\n        {\n          \"name\": \"idBackground\",\n          \"in\": \"path\",\n          \"description\": \"The ID of the custom background\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        }\n      ],\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get custom Board Background of Member\",\n        \"description\": \"Get a specific custom board background\",\n        \"operationId\": \"get-members-id-customboardbackgrounds-idbackground\",\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BoardBackground\" }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Update custom Board Background of Member\",\n        \"description\": \"Update a specific custom board background\",\n        \"operationId\": \"put-members-id-customboardbackgrounds-idbackground\",\n        \"parameters\": [\n          {\n            \"name\": \"brightness\",\n            \"in\": \"query\",\n            \"description\": \"One of: `dark`, `light`, `unknown`\",\n            \"required\": false,\n            \"schema\": { \"enum\": [\"dark\", \"light\", \"unknown\"], \"type\": \"string\" }\n          },\n          {\n            \"name\": \"tile\",\n            \"in\": \"query\",\n            \"description\": \"Whether to tile the background\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BoardBackground\" }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [],\n        \"summary\": \"Delete custom Board Background of Member\",\n        \"description\": \"Delete a specific custom board background\",\n        \"operationId\": \"delete-members-id-customboardbackgrounds-idbackground\",\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/members/{id}/customEmoji\": {\n      \"parameters\": [\n        {\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"The ID or username of the member\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        }\n      ],\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get a Member's customEmojis\",\n        \"description\": \"Get a Member's uploaded custom Emojis\",\n        \"operationId\": \"get-members-id-customemoji\",\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"#/components/schemas/CustomEmoji\" }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [],\n        \"summary\": \"Create custom Emoji for Member\",\n        \"description\": \"Create a new custom Emoji\",\n        \"operationId\": \"post-members-id-customemoji\",\n        \"parameters\": [\n          {\n            \"name\": \"file\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\", \"format\": \"binary\" }\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"Name for the emoji. 2 - 64 characters\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\", \"minLength\": 2, \"maxLength\": 64 }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/CustomEmoji\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/members/{id}/customEmoji/{idEmoji}\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get a Member's custom Emoji\",\n        \"description\": \"Get a Member's custom Emoji\",\n        \"operationId\": \"membersidcustomemojiidemoji\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID or username of the member\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"idEmoji\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the custom emoji\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of `name`, `url`\",\n            \"required\": false,\n            \"explode\": false,\n            \"style\": \"form\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"name\", \"url\", \"all\"],\n              \"default\": \"all\"\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/CustomEmoji\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/members/{id}/customStickers\": {\n      \"parameters\": [\n        {\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"The ID or username of the member\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        }\n      ],\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get Member's custom Stickers\",\n        \"description\": \"Get a Member's uploaded stickers\",\n        \"operationId\": \"get-members-id-customstickers\",\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"#/components/schemas/CustomSticker\" }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [],\n        \"summary\": \"Create custom Sticker for Member\",\n        \"description\": \"Upload a new custom sticker\",\n        \"operationId\": \"post-members-id-customstickers\",\n        \"parameters\": [\n          {\n            \"name\": \"file\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\", \"format\": \"binary\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/CustomSticker\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/members/{id}/customStickers/{idSticker}\": {\n      \"parameters\": [\n        {\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"The ID or username of the member\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        },\n        {\n          \"name\": \"idSticker\",\n          \"in\": \"path\",\n          \"description\": \"The ID of the uploaded sticker\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        }\n      ],\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get a Member's custom Sticker\",\n        \"description\": \"Get a Member's custom Sticker\",\n        \"operationId\": \"get-members-id-customstickers-idsticker\",\n        \"parameters\": [\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of `scaled`, `url`\",\n            \"required\": false,\n            \"explode\": false,\n            \"style\": \"form\",\n            \"schema\": {\n              \"enum\": [\"scaled\", \"url\", \"all\"],\n              \"type\": \"string\",\n              \"default\": \"all\"\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/CustomSticker\" }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [],\n        \"summary\": \"Delete a Member's custom Sticker\",\n        \"description\": \"Delete a Member's custom Sticker\",\n        \"operationId\": \"delete-members-id-customstickers-idsticker\",\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/members/{id}/notifications\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get Member's Notifications\",\n        \"description\": \"Get a member's notifications\",\n        \"operationId\": \"get-members-id-notifications\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID or username of the member\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"entities\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          },\n          {\n            \"name\": \"display\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          },\n          {\n            \"name\": \"filter\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"all\" }\n          },\n          {\n            \"name\": \"read_filter\",\n            \"in\": \"query\",\n            \"description\": \"One of: `all`, `read`, `unread`\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"all\" }\n          },\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of notification [fields](/cloud/trello/guides/rest-api/object-definitions/)\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"all\" }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Max 1000\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"format\": \"int32\", \"default\": \"50\" }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"Max 100\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"format\": \"int32\", \"default\": \"0\" }\n          },\n          {\n            \"name\": \"before\",\n            \"in\": \"query\",\n            \"description\": \"A notification ID\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"since\",\n            \"in\": \"query\",\n            \"description\": \"A notification ID\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"memberCreator\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": true }\n          },\n          {\n            \"name\": \"memberCreator_fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of member [fields](/cloud/trello/guides/rest-api/object-definitions/)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"avatarHash,fullName,initials,username\"\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"#/components/schemas/Notification\" }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/members/{id}/organizations\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get Member's Organizations\",\n        \"description\": \"Get a member's Workspaces\",\n        \"operationId\": \"get-members-id-organizations\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID or username of the member\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"filter\",\n            \"in\": \"query\",\n            \"description\": \"One of: `all`, `members`, `none`, `public` (Note: `members` filters to only private Workspaces)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"all\",\n              \"enum\": [\"all\", \"members\", \"none\", \"public\"]\n            }\n          },\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of organization [fields](/cloud/trello/guides/rest-api/object-definitions/)\",\n            \"required\": false,\n            \"explode\": false,\n            \"style\": \"form\",\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/OrganizationFields\",\n              \"default\": \"all\"\n            }\n          },\n          {\n            \"name\": \"paid_account\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"#/components/schemas/Organization\" }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/members/{id}/organizationsInvited\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get Organizations a Member has been invited to\",\n        \"description\": \"Get a member's Workspaces they have been invited to\",\n        \"operationId\": \"get-members-id-organizationsinvited\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID or username of the member\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of organization [fields](/cloud/trello/guides/rest-api/object-definitions/)\",\n            \"required\": false,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/OrganizationFields\",\n              \"default\": \"all\"\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"#/components/schemas/Organization\" }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/members/{id}/savedSearches\": {\n      \"parameters\": [\n        {\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"The ID or username of the member\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        }\n      ],\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get Member's saved searched\",\n        \"description\": \"List the saved searches of a Member\",\n        \"operationId\": \"get-members-id-savedsearches\",\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"#/components/schemas/SavedSearch\" }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [],\n        \"summary\": \"Create saved Search for Member\",\n        \"description\": \"Create a saved search\",\n        \"operationId\": \"post-members-id-savedsearches\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"The name for the saved search\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"query\",\n            \"in\": \"query\",\n            \"description\": \"The search query\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"pos\",\n            \"in\": \"query\",\n            \"description\": \"The position of the saved search. `top`, `bottom`, or a positive float.\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/posStringOrNumber\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/SavedSearch\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/members/{id}/savedSearches/{idSearch}\": {\n      \"parameters\": [\n        {\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"The ID or username of the member\",\n          \"required\": true,\n          \"schema\": { \"type\": \"string\" }\n        },\n        {\n          \"name\": \"idSearch\",\n          \"in\": \"path\",\n          \"description\": \"The ID of the saved search to delete\",\n          \"required\": true,\n          \"schema\": { \"type\": \"string\" }\n        }\n      ],\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get a saved search\",\n        \"description\": \"Get a saved search\",\n        \"operationId\": \"get-members-id-savedsearches-idsearch\",\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/SavedSearch\" }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Update a saved search\",\n        \"description\": \"Update a saved search\",\n        \"operationId\": \"put-members-id-savedsearches-idsearch\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"The new name for the saved search\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"query\",\n            \"in\": \"query\",\n            \"description\": \"The new search query\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"pos\",\n            \"in\": \"query\",\n            \"description\": \"New position for saves search. `top`, `bottom`, or a positive float.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/SavedSearch\" }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [],\n        \"summary\": \"Delete a saved search\",\n        \"description\": \"Delete a saved search\",\n        \"operationId\": \"delete-members-id-savedsearches-idsearch\",\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/members/{id}/tokens\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get Member's Tokens\",\n        \"description\": \"List a members app tokens\",\n        \"operationId\": \"get-members-id-tokens\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID or username of the member\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"webhooks\",\n            \"in\": \"query\",\n            \"description\": \"Whether to include webhooks\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"#/components/schemas/Token\" }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/members/{id}/avatar\": {\n      \"post\": {\n        \"tags\": [],\n        \"summary\": \"Create Avatar for Member\",\n        \"description\": \"Create a new avatar for a member\",\n        \"operationId\": \"membersidavatar\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID or username of the member\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"file\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\", \"format\": \"binary\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/members/{id}/oneTimeMessagesDismissed\": {\n      \"post\": {\n        \"tags\": [],\n        \"summary\": \"Dismiss a message for Member\",\n        \"description\": \"Dismiss a message\",\n        \"operationId\": \"post-members-id-onetimemessagesdismissed\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID or username of the member\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"value\",\n            \"in\": \"query\",\n            \"description\": \"The message to dismiss\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/notifications/{id}\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get a Notification\",\n        \"description\": \"\",\n        \"operationId\": \"get-notifications-id\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the notification\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"board\",\n            \"in\": \"query\",\n            \"description\": \"Whether to include the board object\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          },\n          {\n            \"name\": \"board_fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of board [fields](/cloud/trello/guides/rest-api/object-definitions/)\",\n            \"required\": false,\n            \"style\": \"form\",\n            \"explode\": false,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/BoardFields\",\n              \"default\": \"name\"\n            }\n          },\n          {\n            \"name\": \"card\",\n            \"in\": \"query\",\n            \"description\": \"Whether to include the card object\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          },\n          {\n            \"name\": \"card_fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of card [fields](/cloud/trello/guides/rest-api/object-definitions/)\",\n            \"required\": false,\n            \"style\": \"form\",\n            \"explode\": false,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/CardFields\",\n              \"default\": \"name\"\n            }\n          },\n          {\n            \"name\": \"display\",\n            \"in\": \"query\",\n            \"description\": \"Whether to include the display object with the results\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          },\n          {\n            \"name\": \"entities\",\n            \"in\": \"query\",\n            \"description\": \"Whether to include the entities object with the results\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          },\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of notification [fields](/cloud/trello/guides/rest-api/object-definitions/)\",\n            \"required\": false,\n            \"style\": \"form\",\n            \"explode\": false,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/NotificationFields\",\n              \"default\": \"all\"\n            }\n          },\n          {\n            \"name\": \"list\",\n            \"in\": \"query\",\n            \"description\": \"Whether to include the list object\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          },\n          {\n            \"name\": \"member\",\n            \"in\": \"query\",\n            \"description\": \"Whether to include the member object\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": true }\n          },\n          {\n            \"name\": \"member_fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of member [fields](/cloud/trello/guides/rest-api/object-definitions/)\",\n            \"required\": false,\n            \"style\": \"form\",\n            \"explode\": false,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/MemberFields\",\n              \"default\": \"avatarHash,fullName,initials,username\"\n            }\n          },\n          {\n            \"name\": \"memberCreator\",\n            \"in\": \"query\",\n            \"description\": \"Whether to include the member object of the creator\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": true }\n          },\n          {\n            \"name\": \"memberCreator_fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of member [fields](/cloud/trello/guides/rest-api/object-definitions/)\",\n            \"required\": false,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/MemberFields\",\n              \"default\": \"avatarHash,fullName,initials,username\"\n            }\n          },\n          {\n            \"name\": \"organization\",\n            \"in\": \"query\",\n            \"description\": \"Whether to include the organization object\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          },\n          {\n            \"name\": \"organization_fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of organization [fields](/cloud/trello/guides/rest-api/object-definitions/)\",\n            \"required\": false,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/OrganizationFields\",\n              \"default\": \"displayName\"\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"oneOf\": [{ \"$ref\": \"#/components/schemas/Notification\" }]\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Update a Notification's read status\",\n        \"description\": \"Update the read status of a notification\",\n        \"operationId\": \"put-notifications-id\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the notification\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"unread\",\n            \"in\": \"query\",\n            \"description\": \"Whether the notification should be marked as read or not\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"oneOf\": [{ \"$ref\": \"#/components/schemas/Notification\" }]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/notifications/{id}/{field}\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get a field of a Notification\",\n        \"description\": \"Get a specific property of a notification\",\n        \"operationId\": \"get-notifications-id-field\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the notification\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"field\",\n            \"in\": \"path\",\n            \"description\": \"A notification [field](/cloud/trello/guides/rest-api/object-definitions/)\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/NotificationFields\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"oneOf\": [{ \"$ref\": \"#/components/schemas/Notification\" }]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/notifications/all/read\": {\n      \"post\": {\n        \"tags\": [],\n        \"summary\": \"Mark all Notifications as read\",\n        \"description\": \"Mark all notifications as read\",\n        \"operationId\": \"post-notifications-all-read\",\n        \"parameters\": [\n          {\n            \"name\": \"read\",\n            \"in\": \"query\",\n            \"description\": \"Boolean to specify whether to mark as read or unread (defaults to `true`, marking as read)\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": true }\n          },\n          {\n            \"name\": \"ids\",\n            \"in\": \"query\",\n            \"explode\": false,\n            \"style\": \"form\",\n            \"description\": \"A comma-seperated list of IDs. Allows specifying an array of notification IDs to change the read state for. This will become useful as we add grouping of notifications to the UI, with a single button to mark all notifications in the group as read/unread.\",\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"oneOf\": [{ \"$ref\": \"#/components/schemas/Notification\" }]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/notifications/{id}/unread\": {\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Update Notification's read status\",\n        \"description\": \"Update Notification's read status\",\n        \"operationId\": \"put-notifications-id-unread\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the notification\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"value\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"oneOf\": [{ \"$ref\": \"#/components/schemas/Notification\" }]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/notifications/{id}/board\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get the Board a Notification is on\",\n        \"description\": \"Get the board a notification is associated with\",\n        \"operationId\": \"get-notifications-id-board\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the notification\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of board[fields](/cloud/trello/guides/rest-api/object-definitions/)\",\n            \"explode\": false,\n            \"style\": \"form\",\n            \"required\": false,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/BoardFields\",\n              \"default\": \"all\"\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"oneOf\": [{ \"$ref\": \"#/components/schemas/Board\" }]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/notifications/{id}/card\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get the Card a Notification is on\",\n        \"description\": \"Get the card a notification is associated with\",\n        \"operationId\": \"get-notifications-id-card\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the notification\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"explode\": false,\n            \"style\": \"form\",\n            \"description\": \"`all` or a comma-separated list of card [fields](/cloud/trello/guides/rest-api/object-definitions/)\",\n            \"required\": false,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/CardFields\",\n              \"default\": \"all\"\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"oneOf\": [{ \"$ref\": \"#/components/schemas/Card\" }] }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/notifications/{id}/list\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get the List a Notification is on\",\n        \"description\": \"Get the list a notification is associated with\",\n        \"operationId\": \"get-notifications-id-list\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the notification\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of list [fields](/cloud/trello/guides/rest-api/object-definitions/)\",\n            \"required\": false,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/ListFields\",\n              \"default\": \"all\"\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"oneOf\": [{ \"$ref\": \"#/components/schemas/TrelloList\" }]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/notifications/{id}/member\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get the Member a Notification is about (not the creator)\",\n        \"description\": \"Get the member (not the creator) a notification is about\",\n        \"operationId\": \"notificationsidmember\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the notification\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of member [fields](/cloud/trello/guides/rest-api/object-definitions/)\",\n            \"required\": false,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/MemberFields\",\n              \"default\": \"all\"\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"oneOf\": [{ \"$ref\": \"#/components/schemas/Member\" }]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/notifications/{id}/memberCreator\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get the Member who created the Notification\",\n        \"description\": \"Get the member who created the notification\",\n        \"operationId\": \"get-notifications-id-membercreator\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the notification\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of member [fields](/cloud/trello/guides/rest-api/object-definitions/)\",\n            \"required\": false,\n            \"explode\": false,\n            \"style\": \"form\",\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/MemberFields\",\n              \"default\": \"all\"\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"oneOf\": [{ \"$ref\": \"#/components/schemas/Member\" }]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/notifications/{id}/organization\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get a Notification's associated Organization\",\n        \"description\": \"Get the organization a notification is associated with\",\n        \"operationId\": \"get-notifications-id-organization\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the notification\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of organization [fields](/cloud/trello/guides/rest-api/object-definitions/)\",\n            \"required\": false,\n            \"explode\": false,\n            \"style\": \"form\",\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/OrganizationFields\",\n              \"default\": \"all\"\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"oneOf\": [{ \"$ref\": \"#/components/schemas/Organization\" }]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/organizations\": {\n      \"post\": {\n        \"tags\": [],\n        \"summary\": \"Create a new Organization\",\n        \"description\": \"Create a new Workspace\",\n        \"operationId\": \"post-organizations\",\n        \"parameters\": [\n          {\n            \"name\": \"displayName\",\n            \"in\": \"query\",\n            \"description\": \"The name to display for the Organization\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"desc\",\n            \"in\": \"query\",\n            \"description\": \"The description for the organizations\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"A string with a length of at least 3. Only lowercase letters, underscores, and numbers are allowed. Must be unique.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"minLength\": 3 }\n          },\n          {\n            \"name\": \"website\",\n            \"in\": \"query\",\n            \"description\": \"A URL starting with `http://` or `https://`\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"format\": \"url\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"oneOf\": [{ \"$ref\": \"#/components/schemas/Organization\" }]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/organizations/{id}\": {\n      \"parameters\": [\n        {\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"The ID or name of the Organization\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        }\n      ],\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get an Organization\",\n        \"description\": \"\",\n        \"operationId\": \"get-organizations-id\",\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/Organization\" }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Update an Organization\",\n        \"description\": \"Update an organization\",\n        \"operationId\": \"put-organizations-id\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"A new name for the organization. At least 3 lowercase letters, underscores, and numbers. Must be unique\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"displayName\",\n            \"in\": \"query\",\n            \"description\": \"A new displayName for the organization. Must be at least 1 character long and not begin or end with a space.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"desc\",\n            \"in\": \"query\",\n            \"description\": \"A new description for the organization\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"website\",\n            \"in\": \"query\",\n            \"description\": \"A URL starting with `http://`, `https://`, or `null`\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"prefs/associatedDomain\",\n            \"in\": \"query\",\n            \"description\": \"The Google Apps domain to link this org to.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"prefs/externalMembersDisabled\",\n            \"in\": \"query\",\n            \"description\": \"Whether non-workspace members can be added to boards inside the Workspace\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\" }\n          },\n          {\n            \"name\": \"prefs/googleAppsVersion\",\n            \"in\": \"query\",\n            \"description\": \"`1` or `2`\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"format\": \"int32\" }\n          },\n          {\n            \"name\": \"prefs/boardVisibilityRestrict/org\",\n            \"in\": \"query\",\n            \"description\": \"Who on the Workspace can make Workspace visible boards. One of `admin`, `none`, `org`\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"prefs/boardVisibilityRestrict/private\",\n            \"in\": \"query\",\n            \"description\": \"Who can make private boards. One of: `admin`, `none`, `org`\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"prefs/boardVisibilityRestrict/public\",\n            \"in\": \"query\",\n            \"description\": \"Who on the Workspace can make public boards. One of: `admin`, `none`, `org`\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"prefs/orgInviteRestrict\",\n            \"in\": \"query\",\n            \"description\": \"An email address with optional wildcard characters. (E.g. `subdomain.*.trello.com`)\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"prefs/permissionLevel\",\n            \"in\": \"query\",\n            \"description\": \"Whether the Workspace page is publicly visible. One of: `private`, `public`\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/Organization\" }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [],\n        \"summary\": \"Delete an Organization\",\n        \"description\": \"Delete an Organization\",\n        \"operationId\": \"delete-organizations-id\",\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/organizations/{id}/{field}\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get field on Organization\",\n        \"description\": \"\",\n        \"operationId\": \"get-organizations-id-field\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID or name of the organization\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"field\",\n            \"in\": \"path\",\n            \"description\": \"An organization [field](/cloud/trello/guides/rest-api/object-definitions/)\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/OrganizationFields\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/Organization\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/organizations/{id}/actions\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get Actions for Organization\",\n        \"description\": \"List the actions on a Workspace\",\n        \"operationId\": \"get-organizations-id-actions\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID or name of the organization\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"#/components/schemas/Action\" }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/organizations/{id}/boards\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get Boards in an Organization\",\n        \"description\": \"List the boards in a Workspace\",\n        \"operationId\": \"get-organizations-id-boards\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID or name of the organization\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"filter\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of: `open`, `closed`, `members`, `organization`, `public`\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"all\",\n              \"enum\": [\n                \"all\",\n                \"open\",\n                \"closed\",\n                \"members\",\n                \"organization\",\n                \"public\"\n              ]\n            }\n          },\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of board [fields](/cloud/trello/guides/rest-api/object-definitions/)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"all\",\n              \"$ref\": \"#/components/schemas/BoardFields\"\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"oneOf\": [{ \"$ref\": \"#/components/schemas/Board\" }]\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/organizations/{id}/exports\": {\n      \"parameters\": [\n        {\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"The ID or name of the Workspace\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        }\n      ],\n      \"post\": {\n        \"tags\": [],\n        \"summary\": \"Create Export for Organizations\",\n        \"description\": \"Kick off CSV export for an organization\",\n        \"operationId\": \"post-organizations-id-exports\",\n        \"parameters\": [\n          {\n            \"name\": \"attachments\",\n            \"in\": \"query\",\n            \"description\": \"Whether the CSV should include attachments or not.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": true }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/Export\" }\n              }\n            }\n          }\n        }\n      },\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Retrieve Organization's Exports\",\n        \"description\": \"Retrieve the exports that exist for the given organization\",\n        \"operationId\": \"get-organizations-id-exports\",\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"#/components/schemas/Export\" }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/organizations/{id}/members\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get the Members of an Organization\",\n        \"description\": \"List the members in a Workspace\",\n        \"operationId\": \"get-organizations-id-members\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID or name of the Organization\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"oneOf\": [{ \"$ref\": \"#/components/schemas/Member\" }]\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Update an Organization's Members\",\n        \"description\": \"\",\n        \"operationId\": \"put-organizations-id-members\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID or name of the organization\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"email\",\n            \"in\": \"query\",\n            \"description\": \"An email address\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\", \"format\": \"email\" }\n          },\n          {\n            \"name\": \"fullName\",\n            \"in\": \"query\",\n            \"description\": \"Name for the member, at least 1 character not beginning or ending with a space\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\", \"minLength\": 1 }\n          },\n          {\n            \"name\": \"type\",\n            \"in\": \"query\",\n            \"description\": \"One of: `admin`, `normal`\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"normal\",\n              \"enum\": [\"admin\", \"normal\"]\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/organizations/{id}/memberships\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get Memberships of an Organization\",\n        \"description\": \"List the memberships of a Workspace\",\n        \"operationId\": \"get-organizations-id-memberships\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID or name of the organization\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"filter\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of: `active`, `admin`, `deactivated`, `me`, `normal`\",\n            \"required\": false,\n            \"style\": \"form\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"all\",\n              \"enum\": [\"all\", \"active\", \"admin\", \"deactivated\", \"me\", \"normal\"]\n            }\n          },\n          {\n            \"name\": \"member\",\n            \"in\": \"query\",\n            \"description\": \"Whether to include the Member objects with the Memberships\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"oneOf\": [{ \"$ref\": \"#/components/schemas/Memberships\" }]\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/organizations/{id}/memberships/{idMembership}\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get a Membership of an Organization\",\n        \"description\": \"Get a single Membership for an Organization\",\n        \"operationId\": \"get-organizations-id-memberships-idmembership\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID or name of the organization\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"idMembership\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the membership to load\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"member\",\n            \"in\": \"query\",\n            \"description\": \"Whether to include the Member object in the response\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"oneOf\": [{ \"$ref\": \"#/components/schemas/Memberships\" }]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/organizations/{id}/pluginData\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get the pluginData Scoped to Organization\",\n        \"description\": \"Get organization scoped pluginData on this Workspace\",\n        \"operationId\": \"get-organizations-id-plugindata\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID or name of the organization\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"oneOf\": [{ \"$ref\": \"#/components/schemas/PluginData\" }]\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/organizations/{id}/tags\": {\n      \"parameters\": [\n        {\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"The ID or name of the Organization\",\n          \"required\": true,\n          \"schema\": {\n            \"oneOf\": [\n              { \"type\": \"string\" },\n              { \"$ref\": \"#/components/schemas/TrelloID\" }\n            ]\n          }\n        }\n      ],\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get Tags of an Organization\",\n        \"description\": \"List the organization's collections\",\n        \"operationId\": \"get-organizations-id-tags\",\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"oneOf\": [{ \"$ref\": \"#/components/schemas/Tag\" }] }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [],\n        \"summary\": \"Create a Tag in Organization\",\n        \"description\": \"Create a Tag in an Organization\",\n        \"operationId\": \"post-organizations-id-tags\",\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"oneOf\": [{ \"$ref\": \"#/components/schemas/Tag\" }] }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/organizations/{id}/members/{idMember}\": {\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Update a Member of an Organization\",\n        \"description\": \"Add a member to a Workspace or update their member type.\",\n        \"operationId\": \"put-organizations-id-members-idmember\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID or name of the organization\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"idMember\",\n            \"in\": \"path\",\n            \"description\": \"The ID or username of the member to update\",\n            \"required\": true,\n            \"schema\": {\n              \"oneOf\": [\n                { \"type\": \"string\" },\n                { \"$ref\": \"#/components/schemas/TrelloID\" }\n              ]\n            }\n          },\n          {\n            \"name\": \"type\",\n            \"in\": \"query\",\n            \"description\": \"One of: `admin`, `normal`\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\", \"enum\": [\"admin\", \"normal\"] }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"oneOf\": [{ \"$ref\": \"#/components/schemas/Member\" }]\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [],\n        \"summary\": \"Remove a Member from an Organization\",\n        \"description\": \"Remove a member from a Workspace\",\n        \"operationId\": \"delete-organizations-id-members\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID or name of the organization\",\n            \"required\": true,\n            \"schema\": {\n              \"oneOf\": [\n                { \"$ref\": \"#/components/schemas/TrelloID\" },\n                { \"type\": \"string\", \"description\": \"Name of the organization\" }\n              ]\n            }\n          },\n          {\n            \"name\": \"idMember\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the Member to remove from the Workspace\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/organizations/{id}/members/{idMember}/deactivated\": {\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Deactivate or reactivate a member of an Organization\",\n        \"description\": \"Deactivate or reactivate a member of a Workspace\",\n        \"operationId\": \"put-organizations-id-members-idmember-deactivated\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID or name of the organization\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"idMember\",\n            \"in\": \"path\",\n            \"description\": \"The ID or username of the member to update\",\n            \"required\": true,\n            \"schema\": {\n              \"oneOf\": [\n                { \"$ref\": \"#/components/schemas/TrelloID\" },\n                { \"type\": \"string\" }\n              ]\n            }\n          },\n          {\n            \"name\": \"value\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"required\": true,\n            \"schema\": { \"type\": \"boolean\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/organizations/{id}/logo\": {\n      \"post\": {\n        \"tags\": [],\n        \"summary\": \"Update logo for an Organization\",\n        \"description\": \"Set the logo image for a Workspace\",\n        \"operationId\": \"post-organizations-id-logo\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID or name of the Workspace\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"file\",\n            \"in\": \"query\",\n            \"description\": \"Image file for the logo\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"format\": \"binary\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"oneOf\": [{ \"$ref\": \"#/components/schemas/Organization\" }]\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [],\n        \"summary\": \"Delete Logo for Organization\",\n        \"description\": \"Delete a the logo from a Workspace\",\n        \"operationId\": \"delete-organizations-id-logo\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID or name of the organization\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/organizations/{id}/members/{idMember}/all\": {\n      \"delete\": {\n        \"tags\": [],\n        \"summary\": \"Remove a Member from an Organization and all Organization Boards\",\n        \"description\": \"Remove a member from a Workspace and from all Workspace boards\",\n        \"operationId\": \"organizations-id-members-idmember-all\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID or name of the organization\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"idMember\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the member to remove from the Workspace\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/organizations/{id}/prefs/associatedDomain\": {\n      \"delete\": {\n        \"tags\": [],\n        \"summary\": \"Remove the associated Google Apps domain from a Workspace\",\n        \"description\": \"Remove the associated Google Apps domain from a Workspace\",\n        \"operationId\": \"delete-organizations-id-prefs-associateddomain\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID or name of the organization\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/organizations/{id}/prefs/orgInviteRestrict\": {\n      \"delete\": {\n        \"tags\": [],\n        \"summary\": \"Delete the email domain restriction on who can be invited to the Workspace\",\n        \"description\": \"Remove the email domain restriction on who can be invited to the Workspace\",\n        \"operationId\": \"delete-organizations-id-prefs-orginviterestrict\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID or name of the organization\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/organizations/{id}/tags/{idTag}\": {\n      \"delete\": {\n        \"tags\": [],\n        \"summary\": \"Delete an Organization's Tag\",\n        \"description\": \"Delete an organization's tag\",\n        \"operationId\": \"delete-organizations-id-tags-idtag\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID or name of the organization\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"idTag\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the tag to delete\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/organizations/{id}/newBillableGuests/{idBoard}\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get Organizations new billable guests\",\n        \"description\": \"Used to check whether the given board has new billable guests on it.\",\n        \"operationId\": \"get-organizations-id-newbillableguests-idboard\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID or name of the organization\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"idBoard\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the board to check for new billable guests.\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/plugins/{id}/\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get a Plugin\",\n        \"description\": \"Get plugins\",\n        \"operationId\": \"get-plugins-id\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID or name of the organization\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/Plugin\" }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Update a Plugin\",\n        \"description\": \"Update a Plugin\",\n        \"operationId\": \"put-plugins-id\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID or name of the organization\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/Plugin\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/plugins/{idPlugin}/listing\": {\n      \"post\": {\n        \"tags\": [],\n        \"summary\": \"Create a Listing for Plugin\",\n        \"description\": \"Create a new listing for a given locale for your Power-Up\",\n        \"operationId\": \"post-plugins-idplugin-listing\",\n        \"parameters\": [\n          {\n            \"name\": \"idPlugin\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the Power-Up for which you are creating a new listing.\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"description\": {\n                    \"type\": \"string\",\n                    \"description\": \"The description to show for the given locale\"\n                  },\n                  \"locale\": {\n                    \"type\": \"string\",\n                    \"description\": \"The locale that this listing should be displayed for.\"\n                  },\n                  \"overview\": {\n                    \"type\": \"string\",\n                    \"description\": \"The overview to show for the given locale.\"\n                  },\n                  \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"The name to use for the given locale.\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/PluginListing\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/plugins/{id}/compliance/memberPrivacy\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get Plugin's Member privacy compliance\",\n        \"description\": \"\",\n        \"operationId\": \"get-plugins-id-compliance-memberprivacy\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the Power-Up\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/plugins/{idPlugin}/listings/{idListing}\": {\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Updating Plugin's Listing\",\n        \"description\": \"Update an existing listing for your Power-Up\",\n        \"operationId\": \"put-plugins-idplugin-listings-idlisting\",\n        \"parameters\": [\n          {\n            \"name\": \"idPlugin\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the Power-Up whose listing is being updated.\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"idListing\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the existing listing for the Power-Up that is being updated.\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"description\": {\n                    \"type\": \"string\",\n                    \"description\": \"The description to show for the given locale\"\n                  },\n                  \"locale\": {\n                    \"type\": \"string\",\n                    \"description\": \"The locale that this listing should be displayed for.\"\n                  },\n                  \"overview\": {\n                    \"type\": \"string\",\n                    \"description\": \"The overview to show for the given locale.\"\n                  },\n                  \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"The name to use for the given locale.\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/PluginListing\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/search\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Search Trello\",\n        \"description\": \"Find what you're looking for in Trello\",\n        \"operationId\": \"get-search\",\n        \"parameters\": [\n          {\n            \"name\": \"query\",\n            \"in\": \"query\",\n            \"description\": \"The search query with a length of 1 to 16384 characters\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\", \"maxLength\": 16834, \"minLength\": 1 }\n          },\n          {\n            \"name\": \"idBoards\",\n            \"in\": \"query\",\n            \"description\": \"`mine` or a comma-separated list of Board IDs\",\n            \"required\": false,\n            \"style\": \"form\",\n            \"explode\": false,\n            \"schema\": {\n              \"oneOf\": [\n                { \"type\": \"string\", \"enum\": [\"mine\"] },\n                { \"$ref\": \"#/components/schemas/TrelloID\" }\n              ]\n            }\n          },\n          {\n            \"name\": \"idOrganizations\",\n            \"in\": \"query\",\n            \"description\": \"A comma-separated list of Organization IDs\",\n            \"required\": false,\n            \"style\": \"form\",\n            \"explode\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"idCards\",\n            \"in\": \"query\",\n            \"description\": \"A comma-separated list of Card IDs\",\n            \"required\": false,\n            \"style\": \"form\",\n            \"explode\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"modelTypes\",\n            \"in\": \"query\",\n            \"description\": \"What type or types of Trello objects you want to search. all or a comma-separated list of: `actions`, `boards`, `cards`, `members`, `organizations`\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"all\" }\n          },\n          {\n            \"name\": \"board_fields\",\n            \"in\": \"query\",\n            \"style\": \"form\",\n            \"explode\": false,\n            \"description\": \"all or a comma-separated list of: `closed`, `dateLastActivity`, `dateLastView`, `desc`, `descData`, `idOrganization`, `invitations`, `invited`, `labelNames`, `memberships`, `name`, `pinned`, `powerUps`, `prefs`, `shortLink`, `shortUrl`, `starred`, `subscribed`, `url`\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"name,idOrganization\" }\n          },\n          {\n            \"name\": \"boards_limit\",\n            \"in\": \"query\",\n            \"description\": \"The maximum number of boards returned. Maximum: 1000\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"maximum\": 1000, \"default\": 10 }\n          },\n          {\n            \"name\": \"board_organization\",\n            \"in\": \"query\",\n            \"description\": \"Whether to include the parent organization with board results\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          },\n          {\n            \"name\": \"card_fields\",\n            \"in\": \"query\",\n            \"description\": \"all or a comma-separated list of: `badges`, `checkItemStates`, `closed`, `dateLastActivity`, `desc`, `descData`, `due`, `email`, `idAttachmentCover`, `idBoard`, `idChecklists`, `idLabels`, `idList`, `idMembers`, `idMembersVoted`, `idShort`, `labels`, `manualCoverAttachment`, `name`, `pos`, `shortLink`, `shortUrl`, `subscribed`, `url`\",\n            \"required\": false,\n            \"style\": \"form\",\n            \"explode\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"all\" }\n          },\n          {\n            \"name\": \"cards_limit\",\n            \"in\": \"query\",\n            \"description\": \"The maximum number of cards to return. Maximum: 1000\",\n            \"style\": \"form\",\n            \"explode\": false,\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"maximum\": 1000, \"default\": 10 }\n          },\n          {\n            \"name\": \"cards_page\",\n            \"in\": \"query\",\n            \"description\": \"The page of results for cards. Maximum: 100\",\n            \"required\": false,\n            \"schema\": { \"type\": \"number\", \"maximum\": 100, \"default\": 0 }\n          },\n          {\n            \"name\": \"card_board\",\n            \"in\": \"query\",\n            \"description\": \"Whether to include the parent board with card results\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          },\n          {\n            \"name\": \"card_list\",\n            \"in\": \"query\",\n            \"description\": \"Whether to include the parent list with card results\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          },\n          {\n            \"name\": \"card_members\",\n            \"in\": \"query\",\n            \"description\": \"Whether to include member objects with card results\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          },\n          {\n            \"name\": \"card_stickers\",\n            \"in\": \"query\",\n            \"description\": \"Whether to include sticker objects with card results\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          },\n          {\n            \"name\": \"card_attachments\",\n            \"in\": \"query\",\n            \"description\": \"Whether to include attachment objects with card results. A boolean value (true or false) or cover for only card cover attachments.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"false\" }\n          },\n          {\n            \"name\": \"organization_fields\",\n            \"in\": \"query\",\n            \"description\": \"all or a comma-separated list of billableMemberCount, desc, descData, displayName, idBoards, invitations, invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products, url, website\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"default\": \"name,displayName\" }\n          },\n          {\n            \"name\": \"organizations_limit\",\n            \"in\": \"query\",\n            \"description\": \"The maximum number of Workspaces to return. Maximum 1000\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"format\": \"int32\", \"default\": \"10\" }\n          },\n          {\n            \"name\": \"member_fields\",\n            \"in\": \"query\",\n            \"description\": \"all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"avatarHash,fullName,initials,username,confirmed\"\n            }\n          },\n          {\n            \"name\": \"members_limit\",\n            \"in\": \"query\",\n            \"description\": \"The maximum number of members to return. Maximum 1000\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"format\": \"int32\", \"default\": \"10\" }\n          },\n          {\n            \"name\": \"partial\",\n            \"in\": \"query\",\n            \"description\": \"By default, Trello searches for each word in your query against exactly matching words within Member content. Specifying partial to be true means that we will look for content that starts with any of the words in your query.  If you are looking for a Card titled \\\"My Development Status Report\\\", by default you would need to search for \\\"Development\\\". If you have partial enabled, you will be able to search for \\\"dev\\\" but not \\\"velopment\\\".\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"oneOf\": [\n                      { \"$ref\": \"#/components/schemas/Member\" },\n                      { \"$ref\": \"#/components/schemas/Card\" },\n                      { \"$ref\": \"#/components/schemas/Board\" },\n                      { \"$ref\": \"#/components/schemas/Organization\" }\n                    ]\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/search/members/\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Search for Members\",\n        \"description\": \"Search for Trello members.\",\n        \"operationId\": \"get-search-members\",\n        \"parameters\": [\n          {\n            \"name\": \"query\",\n            \"in\": \"query\",\n            \"description\": \"Search query 1 to 16384 characters long\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\", \"maxLength\": 16394, \"minLength\": 1 }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"The maximum number of results to return. Maximum of 20.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 8,\n              \"maximum\": 20\n            }\n          },\n          {\n            \"name\": \"idBoard\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"idOrganization\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"onlyOrgMembers\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"#/components/schemas/Member\" }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/tokens/{token}\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get a Token\",\n        \"description\": \"Retrieve information about a token.\",\n        \"operationId\": \"get-tokens-token\",\n        \"parameters\": [\n          {\n            \"name\": \"token\",\n            \"in\": \"path\",\n            \"description\": \"\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of `dateCreated`, `dateExpires`, `idMember`, `identifier`, `permissions`\",\n            \"required\": false,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/TokenFields\",\n              \"default\": \"all\"\n            }\n          },\n          {\n            \"name\": \"webhooks\",\n            \"in\": \"query\",\n            \"description\": \"Determines whether to include webhooks.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\", \"default\": false }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/Token\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/tokens/{token}/member\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get Token's Member\",\n        \"description\": \"Retrieve information about a token's owner by token.\",\n        \"operationId\": \"get-tokens-token-member\",\n        \"parameters\": [\n          {\n            \"name\": \"token\",\n            \"in\": \"path\",\n            \"description\": \"\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"description\": \"`all` or a comma-separated list of valid fields for [Member Object](/cloud/trello/guides/rest-api/object-definitions/).\",\n            \"required\": false,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/MemberFields\",\n              \"default\": \"all\"\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/Member\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/tokens/{token}/webhooks\": {\n      \"parameters\": [\n        {\n          \"name\": \"token\",\n          \"in\": \"path\",\n          \"description\": \"\",\n          \"required\": true,\n          \"schema\": { \"type\": \"string\" }\n        }\n      ],\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get Webhooks for Token\",\n        \"description\": \"Retrieve all webhooks created with a Token.\",\n        \"operationId\": \"get-tokens-token-webhooks\",\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"#/components/schemas/Webhook\" }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [],\n        \"summary\": \"Create Webhooks for Token\",\n        \"description\": \"Create a new webhook for a Token.\",\n        \"operationId\": \"post-tokens-token-webhooks\",\n        \"parameters\": [\n          {\n            \"name\": \"description\",\n            \"in\": \"query\",\n            \"description\": \"A description to be displayed when retrieving information about the webhook.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"callbackURL\",\n            \"in\": \"query\",\n            \"description\": \"The URL that the webhook should POST information to.\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\", \"format\": \"url\" }\n          },\n          {\n            \"name\": \"idModel\",\n            \"in\": \"query\",\n            \"description\": \"ID of the object to create a webhook on.\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/Webhook\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/tokens/{token}/webhooks/{idWebhook}\": {\n      \"parameters\": [\n        {\n          \"name\": \"token\",\n          \"in\": \"path\",\n          \"description\": \"\",\n          \"required\": true,\n          \"schema\": { \"type\": \"string\" }\n        },\n        {\n          \"name\": \"idWebhook\",\n          \"in\": \"path\",\n          \"description\": \"ID of the [Webhooks](ref:webhooks) to retrieve.\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        }\n      ],\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get a Webhook belonging to a Token\",\n        \"description\": \"Retrieve a webhook created with a Token.\",\n        \"operationId\": \"get-tokens-token-webhooks-idwebhook\",\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/Webhook\" }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [],\n        \"summary\": \"Delete a Webhook created by Token\",\n        \"description\": \"Delete a webhook created with given token.\",\n        \"operationId\": \"delete-tokens-token-webhooks-idwebhook\",\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      },\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Update a Webhook created by Token\",\n        \"description\": \"Update a Webhook created by Token\",\n        \"operationId\": \"tokenstokenwebhooks-1\",\n        \"parameters\": [\n          {\n            \"name\": \"description\",\n            \"in\": \"query\",\n            \"description\": \"A description to be displayed when retrieving information about the webhook.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"callbackURL\",\n            \"in\": \"query\",\n            \"description\": \"The URL that the webhook should `POST` information to.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"format\": \"url\" }\n          },\n          {\n            \"name\": \"idModel\",\n            \"in\": \"query\",\n            \"description\": \"ID of the object that the webhook is on.\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/tokens/{token}/\": {\n      \"delete\": {\n        \"tags\": [],\n        \"summary\": \"Delete a Token\",\n        \"description\": \"Delete a token.\",\n        \"operationId\": \"delete-token\",\n        \"parameters\": [\n          {\n            \"name\": \"token\",\n            \"in\": \"path\",\n            \"description\": \"\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/webhooks/\": {\n      \"post\": {\n        \"tags\": [],\n        \"summary\": \"Create a Webhook\",\n        \"description\": \"Create a new webhook.\",\n        \"operationId\": \"post-webhooks\",\n        \"parameters\": [\n          {\n            \"name\": \"description\",\n            \"in\": \"query\",\n            \"description\": \"A string with a length from `0` to `16384`.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"maxLength\": 16384, \"minLength\": 0 }\n          },\n          {\n            \"name\": \"callbackURL\",\n            \"in\": \"query\",\n            \"description\": \"A valid URL that is reachable with a `HEAD` and `POST` request.\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\", \"format\": \"url\" }\n          },\n          {\n            \"name\": \"idModel\",\n            \"in\": \"query\",\n            \"description\": \"ID of the model to be monitored\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"active\",\n            \"in\": \"query\",\n            \"description\": \"Determines whether the webhook is active and sending `POST` requests.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/Webhook\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/webhooks/{id}\": {\n      \"parameters\": [\n        {\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"ID of the webhook to retrieve.\",\n          \"required\": true,\n          \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n        }\n      ],\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get a Webhook\",\n        \"description\": \"Get a webhook by ID.\",\n        \"operationId\": \"get-webhooks-id\",\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/Webhook\" }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [],\n        \"summary\": \"Update a Webhook\",\n        \"description\": \"Update a webhook by ID.\",\n        \"operationId\": \"put-webhooks-id\",\n        \"parameters\": [\n          {\n            \"name\": \"description\",\n            \"in\": \"query\",\n            \"description\": \"A string with a length from `0` to `16384`.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"maxLength\": 16384, \"minLength\": 0 }\n          },\n          {\n            \"name\": \"callbackURL\",\n            \"in\": \"query\",\n            \"description\": \"A valid URL that is reachable with a `HEAD` and `POST` request.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"format\": \"url\" }\n          },\n          {\n            \"name\": \"idModel\",\n            \"in\": \"query\",\n            \"description\": \"ID of the model to be monitored\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"active\",\n            \"in\": \"query\",\n            \"description\": \"Determines whether the webhook is active and sending `POST` requests.\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\" }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/Webhook\" }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [],\n        \"summary\": \"Delete a Webhook\",\n        \"description\": \"Delete a webhook by ID.\",\n        \"operationId\": \"delete-webhooks-id\",\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    },\n    \"/webhooks/{id}/{field}\": {\n      \"get\": {\n        \"tags\": [],\n        \"summary\": \"Get a field on a Webhook\",\n        \"description\": \"Get a field on a Webhook\",\n        \"operationId\": \"webhooksidfield\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of the webhook.\",\n            \"required\": true,\n            \"schema\": { \"$ref\": \"#/components/schemas/TrelloID\" }\n          },\n          {\n            \"name\": \"field\",\n            \"in\": \"path\",\n            \"description\": \"Field to retrieve. One of: `active`, `callbackURL`, `description`, `idModel`\",\n            \"required\": true,\n            \"schema\": {\n              \"enum\": [\n                \"active\",\n                \"callbackURL\",\n                \"description\",\n                \"idModel\",\n                \"consecutiveFailures\",\n                \"firstConsecutiveFailDate\"\n              ],\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"deprecated\": false,\n        \"responses\": { \"200\": { \"description\": \"Success\" } }\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/chainjet/platform@e2f11798433d537a6d63c18ac444f6b6e5360bb2/-/blob/schemas/openapi3/trello-1.json",
			"externalURLs": [
				{
					"url": "https://github.com/chainjet/platform/blob/e2f11798433d537a6d63c18ac444f6b6e5360bb2/schemas/openapi3/trello-1.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/actions/{idAction}/reactions\": get: operation \"get-actions-idaction-reactions\": security: parse security scheme \"oauth1\": http: at 13:19: invalid \"scheme\": \"oauth1\""
}