{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ULCA-IN/ulca"
		},
		"file": {
			"name": "ulca-consolidated-schema-contract.yml",
			"size": 0,
			"path": "specs/consolidated/ulca-consolidated-schema-contract.yml",
			"byteSize": 59322,
			"content": "openapi: 3.0.0\ninfo:\n  title: Unified Language Contribution API (ULCA) documentation\n  description: 'The ULCA API documentation defines a core set of interfaces that enables users and communities to contribute AI/ML datasets to build a large, open Indic languages resource ecosystem. The dataset contributions are primarily geared toward the area of NLP, ASR/TTS and OCR. The documentation proposes core set of interfaces where various AI based models can be hosted, referenced and benchmarked. The interfaces enables entire community to participate, collaborate and track key benchmark parameters.'\n  contact:\n    name: ekstep foundation\n    email: contact@ekstep.org\n  version: 0.7.0\nservers:\n  - url: /ulca\npaths:\n  /v0.2/dataset/corpus/submit:\n    post:\n      tags:\n        - 'dataset, core-api'\n      summary: 'to starts submission of dataset creation process, the submission goes through stage life-cycle before it gets contributed to the ecosystem'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DatasetSubmitRequest'\n        required: true\n      responses:\n        '200':\n          description: On successful completion of the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpSuccessResponse'\n        '400':\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n      security:\n        - authToken: []\n  /v0.2/dataset/corpus/label:\n    post:\n      tags:\n        - 'dataset, core-api'\n      summary: 'to submit referenced dataset or additional label in the dataset, primarily to enhance existing dataset by adding additional attribute(s) thus increasing existing dataset quality and coverage.'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReferenceDatasetRequest'\n        required: true\n      responses:\n        '200':\n          description: On successful completion of the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpSuccessResponse'\n        '400':\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n      security:\n        - authToken: []\n  /v0.2/dataset/corpus/status-check:\n    post:\n      tags:\n        - 'dataset, core-api'\n      summary: 'check the status of submitted dataset request, user can track the status by using the provided acknowledgment identifier'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DatasetStatusRequest'\n        required: true\n      responses:\n        '200':\n          description: On successful completion of the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpSuccessResponse'\n        '400':\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n  /v0.2/dataset/statistics/search:\n    post:\n      tags:\n        - 'dataset, core-api'\n      summary: 'to query analytical information for the available datasets, primarily used to get statistical count of records count present in the ULCA ecosystem. The queries can be done based upon the PARAMS like languages, domain, etc.'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DatasetSearchRequest'\n        required: true\n      responses:\n        '200':\n          description: On successful completion of the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpSuccessResponse'\n        '400':\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n  /v0.2/dataset/ingest:\n    post:\n      tags:\n        - 'dataset, peripheral-api'\n      summary: peripheral internal api that will actually transform the ingested dataset and push to the store after running business flow pertaining to individual dataset validation flow.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DatasetIngestRequest'\n        required: true\n      responses:\n        '200':\n          description: On successful completion of the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpSuccessResponse'\n        '400':\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n      security:\n        - authToken: []\n  /v0.2/model/submit:\n    post:\n      tags:\n        - 'model, core-api'\n      summary: 'submit model to ULCA, from here benchmarking would be next stop'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ModelSubmitRequest'\n        required: true\n      responses:\n        '200':\n          description: On successful completion of the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpSuccessResponse'\n        '400':\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n      security:\n        - authToken: []\n  /v0.2/model/status-check:\n    post:\n      tags:\n        - 'model, core-api'\n      summary: check the status of submitted model\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ModelStatusRequest'\n        required: true\n      responses:\n        '200':\n          description: On successful completion of the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpSuccessResponse'\n        '400':\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n  /v0.2/model/search:\n    post:\n      tags:\n        - 'model, core-api'\n      summary: to query analytical information for the available model for a task that is define at ULCA\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ModelSearchRequest'\n        required: true\n      responses:\n        '200':\n          description: On successful completion of the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpSuccessResponse'\n        '400':\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n  /v0.2/model/try-me:\n    post:\n      tags:\n        - 'model, core-api'\n      summary: to provide any interface to try out the model\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ModelTryMeRequest'\n        required: true\n      responses:\n        '200':\n          description: On successful completion of the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpSuccessResponse'\n        '400':\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n  /v0.2/model/benchmark/start:\n    post:\n      tags:\n        - 'model, core-api'\n      summary: 'starts the benchmarking process of the submitted model, benchmarking can be done on all available benchmark or on the user supplied subset. Benchmarking can be a long running operation, status-check should be used to'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ModelBenchmarkRequest'\n        required: true\n      responses:\n        '200':\n          description: On successful completion of the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpSuccessResponse'\n        '400':\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n  /v0.2/model/benchmark/status-check:\n    post:\n      tags:\n        - 'model, core-api'\n      summary: returns the benchmark progress status check.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ModelBenchmarkStatusRequest'\n        required: true\n      responses:\n        '200':\n          description: On successful completion of the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpSuccessResponse'\n        '400':\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n  /v0.2/model/benchmark/publish:\n    post:\n      tags:\n        - 'model, core-api'\n      summary: starts the benchmark publishing process of the submitted model\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ModelBenchmarkPublishRequest'\n        required: true\n      responses:\n        '200':\n          description: On successful completion of the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpSuccessResponse'\n        '400':\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n  /v0.2/model/benchmark/detailed-result:\n    post:\n      tags:\n        - 'model, core-api'\n      summary: returns the record level score of the mentioned metric\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ModelBenchmarkDetailResultRequest'\n        required: true\n      responses:\n        '200':\n          description: On successful completion of the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpSuccessResponse'\n        '400':\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\ncomponents:\n  schemas:\n    DatasetSubmitRequest:\n      allOf:\n        - $ref: '#/components/schemas/Dataset'\n        - type: object\n      type: object\n      description: request to submit the dataset\n      required:\n        - type\n      properties:\n        type:\n          description: one of the defined possible values\n          $ref: '#/components/schemas/DatasetType'\n    ReferenceDatasetRequest:\n      allOf:\n        - $ref: '#/components/schemas/Dataset'\n        - type: object\n      required:\n        - type\n        - referenceDatasetId\n      type: object\n      properties:\n        type:\n          description: one of the defined possible values\n          $ref: '#/components/schemas/DatasetType'\n        referenceDatasetId:\n          type: string\n          description: original dataset identifier from which referenced dataset is drived.\n          format: uuidv4\n    DatasetSubmitResponse:\n      type: object\n      properties:\n        acknowlegmentId:\n          type: string\n          description: 'auto generated identifier to identify the internal representation, user can check the status of dataset stage using this acknowlegment identifier'\n          format: uuidv4\n        timestamp:\n          type: string\n          format: datetime\n          description: dataset submission timestamp\n      description: 'uploaded dataset goes through series of validation checks, automated or human-in-the-loop before it gets listed'\n    DatasetSearchRequest:\n      required:\n        - criterions\n        - groupby\n        - type\n      type: object\n      properties:\n        type:\n          description: one of the defined possible values\n          $ref: '#/components/schemas/DatasetType'\n        criterions:\n          type: array\n          description: comma separted system defined tags\n          items:\n            $ref: '#/components/schemas/SearchParams'\n        groupby:\n          type: array\n          description: groupby based upon the entity\n          items:\n            $ref: '#/components/schemas/SearchParams'\n            minItems: 1\n        starttime:\n          type: string\n          description: start of timestamp\n          format: datetime\n        endtime:\n          type: string\n          description: end of timestamp\n          format: datetime\n    DatasetSearchResponse:\n      required:\n        - data\n      type: object\n      properties:\n        data:\n          type: array\n          description: collection of value and label\n          items:\n            $ref: '#/components/schemas/DataPoint'\n    DatasetStatusRequest:\n      type: object\n      required:\n        - acknowlegmentId\n      properties:\n        acknowlegmentId:\n          type: string\n          description: provided acknowledgment identifier at the time of dataset submission\n    \n    DatasetStatusResponse:\n      type: object\n      required:\n        - acknowledgmentId\n        - status\n        - progress\n      properties:\n        acknowlegmentId:\n          type: string\n          description: user provided identifier\n        dataset:\n          type: object\n          description: uploaded dataset and its system representation\n          $ref: '#/components/schemas/Dataset'\n        status:\n          type: string\n          description: status of each stage\n          enum:\n            - in-progress\n            - status-with-errors\n            - success\n            - failed\n        progress:\n          type: object\n          description: detailed for the dataset as it can be longer running operation\n          $ref: '#/components/schemas/DatasetProgressInformation'\n    \n    DatasetIngestRequest:\n      type: object\n      required:\n        - acknowlegmentId\n        - params\n        - rows\n      properties:\n        acknowlegmentId:\n          type: string\n          description: the acknowlegment identifier should be same as returned to the user in the body of DatasetSubmitResponse.\n          format: uuidv4\n        referenceDatasetId:\n          type: string\n          description: original dataset identifier from which referenced dataset is drived.\n          format: uuidv4\n        params:\n          type: object\n          oneOf:\n            - $ref: '#/components/schemas/ParallelDatasetParamsSchema'\n            - $ref: '#/components/schemas/MonolingualParamsSchema'\n            - $ref: '#/components/schemas/ASRParamsSchema'\n            - $ref: '#/components/schemas/DocumentOCRParamsSchema'\n        rows:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/ParallelDatasetRowSchema'\n              - $ref: '#/components/schemas/MonolingualRowSchema'\n              - $ref: '#/components/schemas/ASRRowSchema'\n              - $ref: '#/components/schemas/DocumentOCRRowSchema'\n            minItems: 100\n    ModelSubmitRequest:\n      type: object\n      description: starting the workflow for model life-cycle\n      properties:\n        model:\n          $ref: '#/components/schemas/Model'\n    ModelSubmitResponse:\n      type: object\n      description: 'ULCA will acknowledge the submission, however model is not published yet'\n      properties:\n        acknowlegmentId:\n          type: string\n          description: auto generated identifier to identify the internal submission\n          format: uuidv4\n        timestamp:\n          type: string\n          format: datetime\n          description: submission timestamp\n    ModelStatusRequest:\n      type: object\n      required:\n        - acknowlegmentId\n      properties:\n        acknowlegmentId:\n          type: string\n          description: provided acknowledgment identifier at the time of submission\n    ModelStatusResponse:\n      type: object\n      required:\n        - acknowledgmentId\n        - contributor\n        - timelines\n      properties:\n        acknowlegmentId:\n          type: string\n          description: ULCA provided identifier\n        contributor:\n          type: object\n          description: submitter of the dataset\n          $ref: '#/components/schemas/Contributor'\n        timelines:\n          type: array\n          items:\n            $ref: '#/components/schemas/Timeline'\n    ModelSearchRequest:\n      required:\n        - criterions\n        - groupby\n        - type\n      type: object\n      properties:\n        type:\n          description: one of the defined possible values\n          $ref: '#/components/schemas/ModelTask'\n        criterions:\n          type: array\n          description: comma separted system defined tags\n          items:\n            $ref: '#/components/schemas/SearchParams'\n        groupby:\n          type: array\n          description: groupby based upon the entity\n          items:\n            $ref: '#/components/schemas/SearchParams'\n            minItems: 1\n        starttime:\n          type: string\n          description: start of timestamp\n          format: datetime\n        endtime:\n          type: string\n          description: end of timestamp\n          format: datetime\n    ModelSearchResponse:\n      required:\n        - data\n      type: object\n      properties:\n        data:\n          type: array\n          description: collection of model\n          items:\n            $ref: '#/components/schemas/Model'\n    ModelTryMeRequest:\n      type: object\n      properties:\n        modelId:\n          type: string\n          description: model identifier allocated by ULCA\n        requestSchema:\n          type: object\n          oneOf:\n            - $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/translation-schemas.yml#/components/schemas/TranslateRequest'\n            - $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/audio-schema.yml#/components/schemas/SpeechRecognitionRequest'\n            - $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/document-ocr-schema.yml#/components/schemas/DocumentOCRRequest'\n    ModelTryMeResponse:\n      type: object\n      properties:\n        modelId:\n          type: string\n          description: model identifier allocated by ULCA\n        requestSchema:\n          type: object\n          oneOf:\n            - $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/translation-schemas.yml#/components/schemas/TranslateResponse'\n            - $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/audio-schema.yml#/components/schemas/SpeechRecognitionResult'\n            - $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/document-ocr-schema.yml#/components/schemas/DocumentOCRResponse'\n    ModelBenchmarkRequest:\n      type: object\n      properties:\n        modelId:\n          type: string\n          description: model identifier allocated by ULCA\n        benchmarks:\n          type: array\n          description: you can run benchmarking on subset of available benchmarks\n          items:\n            $ref: '#/components/schemas/Benchmarks'\n    ModelBenchmarkStatusRequest:\n      type: object\n      required:\n        - acknowlegmentId\n      properties:\n        acknowlegmentId:\n          type: string\n          description: provided acknowledgment identifier at the time of starting benchmark operation\n    ModelBenchmarkResponse:\n      type: object\n      properties:\n        acknowlegmentId:\n          type: string\n          description: ULCA provided identifier\n        timestamp:\n          type: string\n          format: datetime\n          description: submission timestamp\n        status:\n          type: string\n          enum:\n            - in-progress\n            - completed\n        results:\n          oneOf:\n            - $ref: '#/components/schemas/TranslationBenchmarkResult'\n            - $ref: '#/components/schemas/DocumentLayoutBenchmarkResult'\n            - $ref: '#/components/schemas/DocumentOCRBenchmarkResult'\n            - $ref: '#/components/schemas/ASRBenchmarkResult'\n    ModelBenchmarkPublishRequest:\n      type: object\n      properties:\n        modelId:\n          type: string\n          description: identifier provided by ULCA system\n        results:\n          oneOf:\n            - $ref: '#/components/schemas/TranslationBenchmarkResult'\n            - $ref: '#/components/schemas/DocumentLayoutBenchmarkResult'\n            - $ref: '#/components/schemas/DocumentOCRBenchmarkResult'\n            - $ref: '#/components/schemas/ASRBenchmarkResult'\n    ModelBenchmarkPublishResponse:\n      type: object\n      properties:\n        modelId:\n          type: string\n          description: identifier provided by ULCA system\n        results:\n          oneOf:\n            - $ref: '#/components/schemas/TranslationBenchmarkResult'\n            - $ref: '#/components/schemas/DocumentLayoutBenchmarkResult'\n            - $ref: '#/components/schemas/DocumentOCRBenchmarkResult'\n            - $ref: '#/components/schemas/ASRBenchmarkResult'\n    ModelBenchmarkDetailResultRequest:\n      type: object\n      properties:\n        modelId:\n          type: string\n          description: identifier provided by ULCA system\n    ModelBenchmarkDetailResultResponse:\n      type: object\n      properties:\n        modelId:\n          type: string\n          description: identifier provided by ULCA system\n        results:\n          oneOf:\n            - $ref: '#/components/schemas/TranslationBenchmarkResult'\n            - $ref: '#/components/schemas/DocumentLayoutBenchmarkResult'\n            - $ref: '#/components/schemas/DocumentOCRBenchmarkResult'\n            - $ref: '#/components/schemas/ASRBenchmarkResult'\n    \n    HttpSuccessResponse:\n      type: object\n      properties:\n        ok:\n          type: boolean\n          description: request successful indicator.\n        why:\n          type: string\n          description: Response message.\n        status:\n          type: object\n          description: status code as returned\n          oneOf:\n            - $ref: '#/components/schemas/StatusCode'\n        data:\n          type: object\n          description: response object based upon the submitted request\n          oneOf:\n            - $ref: '#/components/schemas/ModelSubmitResponse'\n            - $ref: '#/components/schemas/ModelStatusResponse'\n            - $ref: '#/components/schemas/ModelSearchResponse'\n            - $ref: '#/components/schemas/ModelBenchmarkResponse'\n            - $ref: '#/components/schemas/ModelBenchmarkPublishResponse'\n            - $ref: '#/components/schemas/ModelBenchmarkDetailResultResponse'\n            - $ref: '#/components/schemas/ModelTryMeResponse'\n            - $ref: '#/components/schemas/DatasetSubmitResponse'\n            - $ref: '#/components/schemas/DatasetStatusResponse'\n            - $ref: '#/components/schemas/DatasetSearchResponse'\n            \n    HttpErrorResponse:\n      type: object\n      properties:\n        ok:\n          type: boolean\n          description: request successful indicator.\n        why:\n          type: string\n          description: Response message.\n        status:\n          type: object\n          description: status code as returned\n          oneOf:\n            - $ref: '#/components/schemas/StatusCode'\n  \n    LanguagePair:\n      type: object\n      description: language pair, make targetLanguage null to reuse the object to indicate single language\n      required:\n        - sourceLanguage\n      properties:\n        sourceLanguageName:\n          type: string\n          description: human name associated with the language code\n        sourceLanguage:\n          type: string\n          description: Indic language code, iso-639-1, iso 639-2\n          enum:\n          - en\n          - hi\n          - mr\n          - ta\n          - te\n          - kn\n          - gu\n          - pa\n          - bn\n          - ml\n          - as\n          - brx\n          - doi\n          - ks\n          - kok\n          - mai\n          - mni\n          - ne\n          - or\n          - sd\n          - si\n          - ur\n          - sat\n          - lus\n          - njz\n          - pnr\n          - kha\n          - grt\n          - sa\n        targetLanguageName:\n          type: string\n          description: human name associated with the language code\n        targetLanguage:\n          type: string\n          description: Indic language code, iso-639-1, iso 639-2\n          enum:\n          - en\n          - hi\n          - mr\n          - ta\n          - te\n          - kn\n          - gu\n          - pa\n          - bn\n          - ml\n          - as\n          - brx\n          - doi\n          - ks\n          - kok\n          - mai\n          - mni\n          - ne\n          - or\n          - sd\n          - si\n          - ur\n          - sat\n          - lus\n          - njz\n          - pnr\n          - kha\n          - grt\n          - sa\n    \n    LanguagePairs:\n        type: array\n        items:\n          $ref: '#/components/schemas/LanguagePair'\n          minItems: 1\n    \n    Domain:\n        type: array\n        description: This attribute defines that `relevant business area` \n        example: [\"news\", \"legal\"]\n        items:\n          type: string\n          enum:\n          - general\n          - news\n          - education\n          - legal\n          - government-press-release\n          - healthcare\n          - agriculture\n          - automobile\n          - tourism\n          - financial\n          - movies\n          - subtitles\n          - sports\n          - technology\n          - lifestyle\n          - entertainment\n            \n    \n    License:\n      type: string\n      description: license under which information is published.\n      example: 'cc-by-4.0'\n      enum:\n      - cc-by-4.0\n      - mit\n      - gpl-3.0\n      - bsd-3-clause\n      - cc-by-nd-2.0\n      - private-commerical\n      - unknown-license\n  \n    Contributor:\n      required:\n      - name\n      type: object\n      properties:\n        name:\n          maxLength: 50\n          minLength: 5\n          type: string\n          description: human name of the contributor\n        oauthId:\n          $ref: '#/components/schemas/OAuthIdentity'\n        aboutMe:\n          type: string\n          description: describing the contributor\n    \n    OAuthIdentity:\n      type: object\n      properties:\n        identifier:\n          type: string\n          description: system identification for the contributor\n          format: uuidv4\n        oauthId:\n          type: string\n          description: popular social network identifier, typically identifier returned after auth\n        provider:\n          type: string\n          description: user authentication provider\n          enum:\n          - custom\n          - github\n          - facebook\n          - instagram\n          - google\n          - yahoo\n    \n    Source:\n      type: array\n      description: various sources, url from where the information is collected.\n      example: [\"https://main.sci.gov.in\"]\n      items:\n        type: string\n        minItems: 1\n        maxItems: 10\n  \n  \n    CollectionMethod:\n      type: array\n      description: various collection methods user have used to create the dataset\n      example: [\"web-scrapping-machine-readable\", \"algorithm-auto-aligned\"]\n      items:\n        type: string\n        minItems: 1\n        maxItems: 10\n        enum:\n        - web-scrapping-machine-readable\n        - web-scrapping-ocr\n        - manual-human-translated\n        - algorithm-auto-aligned\n        - algorithm-back-translated\n        - human-validated\n        - phone-recording\n        - crowd-sourced\n\n    DataPoint:\n      required:\n      - label\n      - value\n      type: object\n      properties:\n        label:\n          type: string\n          description: string value to show\n        value:\n          type: number\n          description: numeric value of the data point\n        internalLabel:\n          type: string\n          description: internal representation of the label\n\n    ImageFormat:\n      type: string\n      description: image file format description\n      example: \"png\"\n      enum:\n      - jpeg\n      - bmp\n      - png\n      - tiff\n    \n    ImageTextType:\n      type: string\n      description: type of image on which text area is annotated.\n      example: \"scene-text\"\n      enum:\n      - scene-text\n      - typewriter-typed-text\n      - computer-typed-text\n      - handwritten-text          \n    \n    ImageDPI:\n      type: string\n      description: dpi of the image file\n      example: \"300_dpi\"\n      enum:\n      - 300_dpi\n      - 72_dpi\n    \n    AudioFormat:\n      type: string\n      description: audio format of the audio file\n      example: \"flac\"\n      enum:\n      - wav\n      - pcm\n      - mp3\n      - flac\n    \n    AudioChannel:\n      type: string\n      description: number of channel in the audio\n      example: \"stereo\"\n      enum:\n      - mono\n      - stereo\n    \n    AudioSampleRate:\n      type: string\n      description: sample rate of the audio file\n      example: \"44khz\"\n      enum:\n      - 44khz\n      - 22khz\n      - 8khz\n    \n    AudioBitsPerSample:\n      type: string\n      description: number of bits per sample\n      example: \"sixteen\"\n      enum:\n      - sixteen\n      - eight\n          \n    NumberOfSpeakers:\n      type: number\n      description: number of speakers in the recorded audio file\n      minimum: 1\n      example: 3\n          \n    NumberOfHoursPerGenders:\n      type: array\n      items:\n        $ref: '#/components/schemas/NumberOfHoursPerGender'\n        minItems: 1\n    \n    NumberOfHoursPerGender:\n      type: object\n      properties:\n        value:\n          type: number\n          description: number of hours per gender\n          minimum: 1\n        gender:\n          type: string\n          description: gender description\n          enum:\n            - male\n            - female\n            - others\n\n    DatasetDirectory:\n      type: object\n      required: \n        - data\n        - params\n      description: The object defines the physical structure of the uploaded dataset file. The dataset data and its respective parameters has to be present in an individual directory/folder. The dataset data should have name 'data.json' or 'data.csv', similarly the associated parameters should have name 'params.json' or 'params.csv'. Dataset data file should adhere to 'dataSchema' described in the properties, similarly the parameter of the dataset should adhere to 'paramSchema'. Non compliant will result in rejection of the submission.\n      properties:\n        data:\n          type: object\n          default: data.json\n          $ref: '#/components/schemas/DatasetFile'\n          description: name and file attributes of data file\n        dataSchema:\n          type: object\n          $ref: '#/components/schemas/DatasetDataRowSchema'\n        params:\n          type: object\n          default: params.json\n          $ref: '#/components/schemas/DatasetFile'\n          description: name and file attributes of params file\n        paramSchema:\n          type: object\n          $ref: '#/components/schemas/DatasetParamsSchema'\n    \n    DatasetDirectories:\n      type: object\n      description: The object represents a compressed file that can contains multiple 'DatasetDirectory' object.\n      properties:\n        datasetFiles:\n          type: array\n          items:\n            $ref: '#/components/schemas/DatasetDirectory'\n            minItems: 1\n  \n    DatasetParamsSchema:\n      type: object\n      description: the dataset params.json/.csv file should follow this schema\n      properties:\n        params: \n          type: object\n          oneOf:\n            - $ref: '#/components/schemas/ParallelDatasetParamsSchema'\n            - $ref: '#/components/schemas/MonolingualParamsSchema'\n            - $ref: '#/components/schemas/ASRParamsSchema'\n            - $ref: '#/components/schemas/DocumentOCRParamsSchema'\n    \n    DatasetDataRowSchema:\n      type: object\n      description: the dataset data.json/.csv file should follow this schema\n      properties:\n        data:\n          type: object\n          oneOf:\n            - $ref: '#/components/schemas/ParallelDatasetRowSchema'\n            - $ref: '#/components/schemas/MonolingualRowSchema'\n            - $ref: '#/components/schemas/ASRRowSchema'\n            - $ref: '#/components/schemas/DocumentOCRRowSchema'\n    \n    DatasetCommonParamsSchema:\n      type: object\n      description: common parameters or attributes of dataset that is primarily same across the supported dataset.\n      required:\n        - languages\n        - collectionSource\n        - domain\n        - collectionMethod\n        - license\n        - submitter\n        - contributors\n      properties:\n        version:\n          type: string\n          default: 1.0\n          description: params schema version\n        languages:\n          $ref: '#/components/schemas/LanguagePair'\n        collectionSource:\n          $ref: '#/components/schemas/Source'\n        domain:\n          $ref: '#/components/schemas/Domain'\n        collectionMethod:\n          $ref: '#/components/schemas/CollectionMethod'\n        license:\n          $ref: '#/components/schemas/License'\n        submitter:\n          $ref: '#/components/schemas/Contributor'\n        contributors:\n          type: array\n          description: users' or teams' who are part of the dataset curation exercise.\n          items:\n            $ref: '#/components/schemas/Contributor'\n\n    ParallelDatasetParamsSchema:\n      allOf:\n        - $ref: '#/components/schemas/DatasetCommonParamsSchema'\n        - type: object\n      type: object\n      properties:\n        targetValidated:\n          $ref: '#/components/schemas/TargetTextValidated'\n        alignmentMethod:\n          $ref: '#/components/schemas/TextAlignmentMethod'\n\n    ParallelDatasetRowSchema:\n      required:\n        - sourceText\n        - targetText\n      type: object\n      properties:\n        sourceText:\n          type: string\n          description: textual data in source language\n        targetText:\n          type: string\n          description: textual data in target language\n        validatedTargetText:\n          type: string\n          description: textual data after annotator has validate the target sentence\n        alignmentScore:\n          maximum: 1\n          minimum: 0.5\n          type: number\n          description: algorithm score secured for the sentence pair\n        \n      description: the schema of data file uploaded should adhere to this specified structure.\n  \n    MonolingualParamsSchema:\n      allOf:\n        - $ref: '#/components/schemas/DatasetCommonParamsSchema'\n        - type: object\n      type: object\n    \n    MonolingualRowSchema:\n      required:\n        - text\n      type: object\n      description: the schema defines the column/attribute name of the data file uploaded.\n      properties:\n        text:\n          type: string\n          description: textual data in source language\n  \n    ASRParamsSchema:\n      allOf:\n        - $ref: '#/components/schemas/DatasetCommonParamsSchema'\n        - type: object\n      type: object\n      properties:\n        format:\n          $ref: '#/components/schemas/AudioFormat'\n        channel:\n          $ref: '#/components/schemas/AudioChannel'\n        samplingRate:\n          $ref: '#/components/schemas/AudioSampleRate'\n        bitsPerSample:\n          $ref: '#/components/schemas/AudioBitsPerSample'\n        numberOfSpeakers:\n          $ref: '#/components/schemas/NumberOfSpeakers'\n        numberOfHoursPerGender:\n          $ref: '#/components/schemas/NumberOfHoursPerGenders'\n    \n    ASRRowSchema:\n      required:\n        - audioFilename\n        - text\n      type: object\n      description: the schema defines the column name present in physical file that is being pointed by dataFilename key.\n      properties:\n        audioFilename:\n          type: string\n          description: filename of the audio file\n        text:\n          type: string\n          description: textual output of the audio\n        snr:\n          type: string\n          description: SNR information\n  \n    DocumentOCRParamsSchema:\n      allOf:\n        - $ref: '#/components/schemas/DatasetCommonParamsSchema'\n        - type: object\n      required:\n        - ocrtype\n        - format\n        - dpi\n        - imageTextType\n        - schema\n      type: object\n      properties:\n        ocrtype:\n          $ref: '#/components/schemas/DocumentOCRDatasetType'\n        format:\n          $ref: '#/components/schemas/ImageFormat'\n        dpi:\n          $ref: '#/components/schemas/ImageDPI'\n        imageTextType:\n          $ref: '#/components/schemas/ImageTextType'\n\n    DocumentOCRRowSchema:\n      required:\n        - imageFilename\n        - boundingBox\n      type: object\n      description: the schema defines the column name present in physical file that is being pointed by dataFilename key.\n      properties:\n        imageFilename:\n          type: string\n          description: filename of the image file\n        boundingBox:\n          $ref: '#/components/schemas/BoundingBox'\n        layoutClass:\n          type: string\n          enum:\n            - paragraph\n            - line\n            - word\n            - table\n            - table-cell\n            - header\n            - footer\n            - subscript\n            - superscript\n            - inline-image\n            - background-image\n            - watermark\n            - signature\n            - list-bullets\n            - caption\n        groundTruth:\n          type: string\n          description: text data present in boundingbox\n    \n    DatasetFile:\n      type: object\n      description: represent the physical file attributes\n      required:\n        - filename\n        - fileType\n      properties:\n        filename:\n          type: string\n          description: name of the file\n          enum:\n            - data\n            - params\n        fileType:\n          type: string\n          description: file format\n          enum:\n            - json\n            - csv\n    \n    Dataset:\n      required:\n        - description\n        - datasetFileId\n      type: object\n      description: describes the dataset schema\n      properties:\n        datasetId:\n          type: string\n          description: unique identification of the dataset. This will be auto-generated value once the submitted dataset is validated by the system\n          format: uuid4\n        count:\n          minimum: 100\n          type: number\n          description: actual number of unique records present under a dataset. The count can/will vary from the original submitted dataset because of validation stage.\n        description:\n          maxLength: 200\n          minLength: 50\n          type: string\n          description: describes the purpose and usage of the dataset so that other user can get benefit out of it.\n          example: contribution from team Anuvaad for government press release domain\n        datasetFileId:\n          $ref: '#/components/schemas/DatasetFileIdentifier'\n        submittedOn:\n          type: string\n          description: timestamp when dataset is uploaded\n          format: datetime\n        validatedOn:\n          type: string\n          description: timestamp when dataset is validated\n          format: datetime\n        publishedOn:\n          type: string\n          description: timestamp when dataset got listed\n          format: datetime\n    \n    Timeline:\n      type: object\n      required:\n        - stage\n        - message\n        - timestamp\n        - status\n      description: stage life-cycle of dataset before it gets published or rejected\n      properties:\n        stage:\n          oneOf:\n            - $ref: '#/components/schemas/ProcessStage'\n          description: life-cycle of model and its benchmark\n        message:\n          type: string\n          description: human readable message attached for each stage change\n        timestamp:\n          type: string\n          format: datetime\n          description: timestamp of stage changes\n        status:\n          type: string\n          description: status of each stage\n          enum:\n            - in-progress\n            - status-with-errors\n            - success\n            - failed\n    \n    SearchParams:\n      type: object\n      properties:\n        key:\n          type: string\n          enum:\n            - languages\n            - domain\n            - collectionMethod\n            - collectionSource\n        params:\n          type: object\n          oneOf:\n            - $ref: '#/components/schemas/Domain'\n            - $ref: '#/components/schemas/LanguagePair'\n            - $ref: '#/components/schemas/Source'\n            - $ref: '#/components/schemas/CollectionMethod'\n\n    DatasetFileIdentifier:\n      type: object\n      required:\n        - fileId\n        - datasetFormatType\n      description: the identifier object retuned when compressed dataset file is uploaded. https://raw.githubusercontent.com/tus/tus-resumable-upload-protocol/master/OpenAPI/openapi3.yaml\n      properties:\n        fileId:\n          type: string\n          format: uuidv4\n          description: upload identifier returned by the file upload service\n        datasetFormatType:\n          type: string\n          enum:\n            - json\n            - csv\n        timestamp:\n          type: string\n          format: datetime\n          description: upload completed timestamp\n        format:\n          type: string\n          description: supported file compression format\n          enum:\n            - tar_gz\n            - zip\n  \n    TargetTextValidated:\n      type: object\n      properties:\n        value:\n          type: string\n          enum:\n          - text-validated\n    \n    TextAlignmentMethod:\n      type: object\n      properties:\n        value:\n          type: string\n          enum:\n          - LABSE\n          - LASER\n          - FAISS\n    \n    BoundingBox:\n      type: object\n      properties:\n        vertices:\n          minLength: 4\n          type: array\n          items:\n            $ref: '#/components/schemas/Vertex'\n      description: array of vertex with clockwise coordinate arrangement\n    \n    Vertex:\n      type: object\n      properties:\n        x:\n          type: number\n          description: x-coordinate\n        y:\n          type: number\n          description: y-coordinate\n    \n    DocumentOCRDatasetType:\n      type: object\n      properties:\n        value:\n          type: string\n          description: various option of ocr type\n          enum:\n          - layout-dataset-type\n          - ocr-dataset-type\n          - character-dataset-type\n          \n    DatasetType:\n      type: string\n      description: supported dataset type under language initiatives\n      enum:\n        - parallel-corpus\n        - monolingual-corpus\n        - asr-corpus\n        - document-ocr-corpus\n    \n    StatusCode:\n      required:\n      - code\n      - message\n      type: object\n      properties:\n        code:\n          type: string\n          description: status code as encountered in the processing life-cycle\n          enum:\n            - insufficent-dataset-rows-provided\n            - searched-query-not-supported\n            - missing-mandatory-parameters\n            - authorization-failed\n            - schema-validation-failed\n            - object-validation-failed\n            - benchmark-failed\n            - invalid-callback-url\n        message:\n          type: string\n          description: human understandable format\n    \n    Model:\n      type: object\n      required: \n        - modelId\n        - name\n        - description\n        - task\n        - languages\n        - domain\n        - license\n        - submiter\n        - contributors\n        - inferenceEndPoint\n        - stage\n        - trainingDataset\n        \n      properties:\n        modelId:\n          type: string\n          description: system generated unique identification of model\n          format: uuidv4\n        name:\n          type: string\n          description: model name that you want your users to see\n        description:\n          type: string\n          description: brief description about model, its goal, basically something sweet about it\n          minLength: 50\n          maxLength: 200\n          example: Speech recognition model for classroom lecture\n        task:\n          type: object\n          description: what kind of task model achieves\n          $ref: '#/components/schemas/ModelTask'\n        languages:\n          type: object\n          description: what all languages it supports\n          $ref: '#/components/schemas/LanguagePairs'\n        license:\n          type: object\n          $ref: '#/components/schemas/License'\n        domain:\n          description: what domain your model cater to and its only search purposes.\n          $ref: '#/components/schemas/Domain'\n        submitter:\n          $ref: '#/components/schemas/Contributor'\n        contributors:\n          type: array\n          description: users' or teams' who are part of the dataset curation exercise.\n          items:\n            $ref: '#/components/schemas/Contributor'\n        inferenceEndPoint:\n          type: object\n          description: hosted location of model. Model can be hosted on submitter's infrastructure and must following respective API contract so that UMCA can make API callback to execute benchmarks\n          $ref: '#/components/schemas/InferenceAPIEndPoint'\n        fileUploadEndPoint:\n          type: object\n          description: hosted location of model. Model can be hosted on submitter's infrastructure and must following respective API contract so that UMCA can make API callback to execute benchmarks\n          $ref: '#/components/schemas/FileUploadAPIEndPoint'\n        benchmarksPerformance:\n          type: object\n          description: ULCA will execute various benchmarks on the model, it holds all benchmarking score that model has received.\n          oneOf:\n            - $ref: '#/components/schemas/TranslationBenchmarkResult'\n            - $ref: '#/components/schemas/DocumentLayoutBenchmarkResult'\n            - $ref: '#/components/schemas/DocumentOCRBenchmark'\n            - $ref: '#/components/schemas/ASRBenchmarkResult'\n        stage:\n          description: after submission model goes through a process before it gets listed.\n          $ref: '#/components/schemas/ProcessStage'\n        trainingDataset:\n          $ref: '#/components/schemas/TrainingDataset'\n  \n    InferenceAPIEndPoint:\n      type: object\n      description: hosted location defines the end point of the model inference. \n      required: \n        - callbackUrl\n        - schema\n      properties:\n        callbackUrl:\n          type: string\n          format: url\n        schema:\n          type: object\n          oneOf:\n            - $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/translation-schemas.yml#/components/schemas/TranslateRequest'\n            - $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/audio-schema.yml#/components/schemas/SpeechRecognitionRequest'\n            - $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/document-ocr-schema.yml#/components/schemas/DocumentOCRRequest'\n            \n    FileUploadAPIEndPoint:\n      type: object\n      description: hosted location defines the end point of the model inference. \n      required: \n        - callbackUrl\n        - schema\n      properties:\n        callbackUrl:\n          type: string\n          format: url\n        schema:\n          type: object\n          oneOf:\n            - $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/file-upload-schema.yml#/components/schemas/FileUploadRequest'\n    \n    Benchmarks:\n      type: array\n      items:\n        oneOf:\n          - $ref: '#/components/schemas/TranslationBenchmark'\n          - $ref: '#/components/schemas/DocumentLayoutBenchmark'\n          - $ref: '#/components/schemas/DocumentOCRBenchmark'\n          - $ref: '#/components/schemas/ASRBenchmark'\n        minLength: 1\n  \n    Benchmark:\n      type: object\n      description: the benchmark dataset for model task.\n      required: \n        - name\n        - description\n        - domain\n      properties:\n        benchmarkId:\n          type: string\n          description: auto-generated unique identification of benchmark data\n          format: uuid4\n        name:\n          type: string\n          description: name of the benchmark\n        description:\n          type: string\n          description: description of the benchmark including how it has been curated\n          minLength: 50\n          maxLength: 200\n          example: benchmark sentences for government press release domain\n        domain:\n          type: object\n          $ref: '#/components/schemas/Domain'\n        createdOn:\n          type: string\n          description: timestamp when benchmark is created\n          format: datetime\n        submittedOn:\n          type: string\n          description: timestamp when benchmark is submitted/published\n          format: datetime\n    \n    TranslationBenchmark:\n      allOf:\n        - $ref: '#/components/schemas/Benchmark'\n        - type: object\n      type: object\n      description: Translation benchmark representation\n      properties:\n        languages:\n          type: object\n          $ref: '#/components/schemas/LanguagePair'\n        score:\n          type: array\n          items:\n            $ref: '#/components/schemas/TranslationBenchmarkMetric'\n            minItems: 1\n    \n    DocumentLayoutBenchmark:\n      allOf:\n        - $ref: '#/components/schemas/Benchmark'\n        - type: object\n      type: object\n      description: Document layout benchmark representation\n      properties:\n        score:\n          type: array\n          items:\n            $ref: '#/components/schemas/DocumentLayoutBenchmarkMetric'\n            minItems: 1\n            \n    DocumentOCRBenchmark:\n      allOf:\n        - $ref: '#/components/schemas/Benchmark'\n        - type: object\n      type: object\n      description: Document layout benchmark representation\n      properties:\n        languages:\n          type: object\n          $ref: '#/components/schemas/LanguagePair'\n        score:\n          type: array\n          items:\n            $ref: '#/components/schemas/DocumentOCRBenchmarkMetric'\n            minItems: 1\n    \n    ASRBenchmark:\n      allOf:\n        - $ref: '#/components/schemas/Benchmark'\n        - type: object\n      type: object\n      description: Document layout benchmark representation\n      properties:\n        languages:\n          type: object\n          $ref: '#/components/schemas/LanguagePair'\n        score:\n          type: array\n          items:\n            $ref: '#/components/schemas/ASRBenchmarkMetric'\n            minItems: 1\n    \n    TranslationBenchmarkMetric:\n      type: object\n      description: translation benchmark score\n      required: \n        - metricName\n        - score\n      properties:\n        metricName:\n          type: string\n          description: the automatic evaluation metric name\n          enum: \n            - bleu\n            - sacrebleu\n            - meteor\n            - lepor\n        score:\n          type: number\n          description: is the score as per defined metric for this benchmark.\n          \n    ASRBenchmarkMetric:\n      type: object\n      description: ASR/TTS benchmark score\n      required: \n        - metricName\n        - score\n      properties:\n        metricName:\n          type: string\n          description: the automatic evaluation metric name\n          enum: \n            - wer\n            - cer\n        score:\n          type: number\n          description: is the score as per defined metric for this benchmark.\n    \n    DocumentLayoutBenchmarkMetric:\n      type: object\n      description: ASR/TTS benchmark score\n      required: \n        - metricName\n        - score\n      properties:\n        metricName:\n          type: string\n          description: the automatic evaluation metric name\n          enum: \n            - precision\n            - recall\n            - h1-mean\n        score:\n          type: number\n          description: is the score as per defined metric for this benchmark.\n          \n    DocumentOCRBenchmarkMetric:\n      type: object\n      description: ASR/TTS benchmark score\n      required: \n        - metricName\n        - score\n      properties:\n        metricName:\n          type: string\n          description: the automatic evaluation metric name\n          enum: \n            - wer\n            - cer\n        score:\n          type: number\n          description: is the score as per defined metric for this benchmark.\n  \n    TranslationIndividualBenchmarkResult:\n      allOf:\n        - $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/translation-schemas.yml#/components/schemas/Sentence'\n        - type: object\n      type: object\n      properties:\n        scores:\n          type: array\n          description: score calculated for each metric mentioned in selected benchmark\n          items:\n            $ref: '#/components/schemas/TranslationBenchmarkMetric'\n            minItems: 1\n  \n    TranslationBenchmarkResult:\n      type: object\n      description: describes the translation benchmark result\n      properties:\n        benchmarkId:\n          type: string\n          description: auto-generated unique identification of benchmark data\n          format: uuid4\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/TranslationIndividualBenchmarkResult'\n        summaries:\n          type: array\n          items:\n            $ref: '#/components/schemas/TranslationBenchmarkMetric'\n            minItems: 1\n  \n    DocumentLayoutIndividualPageBenchmarkResult:\n      type: object\n      properties:\n        class:\n          type: string\n          description: supported type of document layout \n        scores:\n          type: array\n          description: score calculated for each metric mentioned in selected benchmark\n          items:\n            $ref: '#/components/schemas/DocumentLayoutBenchmarkMetric'\n            minItems: 1\n    \n    DocumentLayoutBenchmarkResult:\n      type: object\n      description: describes the document layout benchmark result\n      properties:\n        benchmarkId:\n          type: string\n          description: auto-generated unique identification of benchmark data\n          format: uuid4\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/DocumentLayoutIndividualPageBenchmarkResult'\n        summaries:\n          type: array\n          items:\n            $ref: '#/components/schemas/DocumentLayoutBenchmarkMetric'\n            minItems: 1\n    \n    DocumentOCRIndividualPageBenchmarkResult:\n      type: object\n      properties:\n        scores:\n          type: array\n          description: score calculated for each metric mentioned in selected benchmark\n          items:\n            $ref: '#/components/schemas/DocumentOCRBenchmarkMetric'\n            minItems: 1\n    \n    DocumentOCRBenchmarkResult:\n      type: object\n      description: describes the document ocr benchmark result\n      properties:\n        benchmarkId:\n          type: string\n          description: auto-generated unique identification of benchmark data\n          format: uuid4\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/DocumentOCRIndividualPageBenchmarkResult'\n        summaries:\n          type: array\n          items:\n            $ref: '#/components/schemas/DocumentOCRBenchmarkMetric'\n            minItems: 1\n    \n    ASRIndividualBenchmarkResult:\n      allOf:\n        - $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/audio-schema.yml#/components/schemas/SpeechRecognitionResult'\n        - type: object\n      type: object\n      properties:\n        scores:\n          type: array\n          description: score calculated for each metric mentioned in selected benchmark\n          items:\n            $ref: '#/components/schemas/ASRBenchmarkMetric'\n            minItems: 1\n      \n    ASRBenchmarkResult:\n      type: object\n      description: describes the document ocr benchmark result\n      properties:\n        benchmarkId:\n          type: string\n          description: auto-generated unique identification of benchmark data\n          format: uuid4\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/ASRIndividualBenchmarkResult'\n        summaries:\n          type: array\n          items:\n            $ref: '#/components/schemas/ASRBenchmarkMetric'\n            minItems: 1\n  \n    ModelTask:\n      type: object\n      description: the category of model under which it has been released or trained\n      properties:\n        type:\n          type: string\n          enum: \n            - translation\n            - tts\n            - asr\n            - document-layout\n            - ocr\n\n    ProcessStage:\n      type: string\n      description: various life-cycle stage of model when benchmarking\n      enum:\n        - submitted\n        - benchmarked\n        - published\n        \n    TrainingDataset:\n      type: object\n      description: training dataset metadata used to train the model\n      required: \n        - description\n      properties:\n        datasetId:\n          type: string\n          description: dataset identifier that has been exported from ULCA system, passing this information makes your model enriched with further information for the community\n        description:\n          type: string\n          description: explain your dataset that you have used for training your model\n          \n    DatasetProgressInformation:\n      type: object\n      description: informs the progress for every submitted records in the dataset.\n      properties:\n        totalRecordCount:\n          type: integer\n          description: total number of records count submitted\n        validaatedRecordCount:\n          type: integer\n          description: how many records have validated\n        failedRecordCount:\n          type: integer\n          description: how many records failed the valdiation\n        validationReportId:\n          type: string\n          description: download why the records failed the validation\n          format: uuid4\n        \n    \n  securitySchemes:\n    authToken:\n      type: apiKey\n      description: token issued by authenticating the user\n      name: auth-token\n      in: header",
			"canonicalURL": "/github.com/ULCA-IN/ulca@8cab1c6955a2e727d8d573356122edc0ea02948d/-/blob/specs/consolidated/ulca-consolidated-schema-contract.yml",
			"externalURLs": [
				{
					"url": "https://github.com/ULCA-IN/ulca/blob/8cab1c6955a2e727d8d573356122edc0ea02948d/specs/consolidated/ulca-consolidated-schema-contract.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"ModelBenchmarkPublishResponse\": resolve \"#/components/schemas/ModelBenchmarkPublishResponse\": property \"results\": oneOf: $ref: resolve \"#/components/schemas/TranslationBenchmarkResult\": property \"results\": items: $ref: resolve \"#/components/schemas/TranslationIndividualBenchmarkResult\": allOf: at specs/consolidated/ulca-consolidated-schema-contract.yml:1733:17: $ref: resolve \"https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/translation-schemas.yml#/components/schemas/Sentence\": get \"https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/translation-schemas.yml\": https: bad HTTP code 404 (Not Found)"
}