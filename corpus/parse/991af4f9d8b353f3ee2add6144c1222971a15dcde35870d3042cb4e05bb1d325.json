{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/HorizenOfficial/Sidechains-SDK"
		},
		"file": {
			"name": "sidechainApi.yaml",
			"size": 0,
			"path": "sdk/src/main/resources/api/sidechainApi.yaml",
			"byteSize": 64299,
			"content": "openapi: \"3.0.0\"\n\ninfo:\n  version: \"1.0\"\n  title: Sidechain Node API spec\n  description: API docs for Sidechain node.\n\ntags:\n  - name: block\n    description: Sidechain block operations\n  - name: transaction\n    description: Sidechain transaction operations\n  - name: wallet\n    description: Sidechain wallet operations\n  - name: node\n    description: Sidechain node operations\n  - name: mainchain\n    description: Sidechain mainchain operations\n\npaths:\n\n  # Sidechain block operations\n  /block/findById:\n    post:\n      tags:\n        - block\n      summary: find block by id\n      description: return a single block\n      operationId: getBlock\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - blockId\n              properties:\n                blockId:\n                  description: ID of block to return\n                  type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      blockHex:\n                        type: string\n                      block:\n                        $ref: '#/components/schemas/SidechainBlock'\n                  error:\n                    $ref: '#/components/schemas/SidechainApiErrorResponse'\n        default:\n          description: any kind of http error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SidechainApiError'\n\n  /block/findLastIds:\n    post:\n      tags:\n        - block\n      summary: find last block ids\n      description: Returns an array of number last sidechain block ids\n      operationId: getLastBlockIds\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - number\n              properties:\n                number:\n                  description: The number of block ids to return\n                  type: integer\n                  format: int32\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      lastBlockIds:\n                        type: array\n                        items:\n                          type: string\n                  error:\n                    $ref: '#/components/schemas/SidechainApiErrorResponse'\n        default:\n          description: any kind of http error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SidechainApiError'\n\n  /block/findIdByHeight:\n    post:\n      tags:\n        - block\n      summary: find a block id by height\n      description: Return a sidechain block Id by its height in a blockchain\n      operationId: getBlockIdByHeight\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - height\n              properties:\n                height:\n                  description: The height, in a blockchain, of the block to return\n                  type: integer\n                  format: int32\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      blockId:\n                        type: string\n                  error:\n                    $ref: '#/components/schemas/SidechainApiErrorResponse'\n        default:\n          description: any kind of http error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SidechainApiError'\n\n  /block/best:\n    post:\n      tags:\n        - block\n      summary: find the best block\n      description: Return here best sidechain block id and height in active chain\n      operationId: getBestBlockInfo\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      block:\n                        $ref: '#/components/schemas/SidechainBlock'\n                      height:\n                        type: integer\n                        format: int64\n                  error:\n                    $ref: '#/components/schemas/SidechainApiErrorResponse'\n        default:\n          description: any kind of http error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SidechainApiError'\n\n  /block/getFeePayments:\n    post:\n      tags:\n        - block\n      summary: get the list of forgers fee payments paid after the given block was applied\n      description: Returns the list of ZenBoxes that represents the forgers fee payments paid after the given block was applied.\n      operationId: getFeePayments\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                result:\n                  type: object\n                  properties:\n                    feePayemnts:\n                      type: array\n                      items:\n                        $ref: '#/components/schemas/Box'\n                error:\n                  $ref: '#/components/schemas/SidechainApiErrorResponse'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      feePayments:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/Box'\n                  error:\n                    $ref: '#/components/schemas/SidechainApiErrorResponse'\n        default:\n          description: any kind of http error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SidechainApiError'\n\n  /block/startForging:\n    post:\n      tags:\n        - block\n      summary: Start forging\n      description: Start forging\n      operationId: startForging\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      result:\n                        type: string\n                  error:\n                    $ref: '#/components/schemas/SidechainApiErrorResponse'\n        default:\n          description: any kind of http error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SidechainApiError'\n\n  /block/stopForging:\n    post:\n      tags:\n        - block\n      summary: Stop forging\n      description: Stop forging\n      operationId: stopForging\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      result:\n                        type: string\n                  error:\n                    $ref: '#/components/schemas/SidechainApiErrorResponse'\n        default:\n          description: any kind of http error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SidechainApiError'\n\n  /block/generate:\n    post:\n      tags:\n        - block\n      summary: try to generate new block by epoch and slot number\n      description: Returns id of generated sidechain block\n      operationId: generateBlockForEpochNumberAndSlot\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - number\n              properties:\n                epochNumber:\n                  description: Epoch number\n                  type: integer\n                  format: int32\n                slotNumber:\n                  description: Slot number\n                  type: integer\n                  format: int32\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      blockId:\n                        type: string\n                  error:\n                    $ref: '#/components/schemas/SidechainApiErrorResponse'\n        default:\n          description: any kind of http error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SidechainApiError'\n\n  /block/forgingInfo:\n    post:\n      tags:\n        - block\n      summary: Get forging info\n      description: Get forging info\n      operationId: getForgingInfo\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      consensusSecondsInSlot:\n                        type: integer\n                        format: int32\n                      consensusSlotsInEpoch:\n                        type: integer\n                        format: int32\n                      bestEpochNumber:\n                        type: integer\n                        format: int32\n                      bestSlotNumber:\n                        type: integer\n                        format: int32\n                  error:\n                    $ref: '#/components/schemas/SidechainApiErrorResponse'\n        default:\n          description: any kind of http error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SidechainApiError'\n\n  # Sidechain transaction operations\n  /transaction/allTransactions:\n    post:\n      tags:\n        - transaction\n      summary: find all transactions in memory pool\n      description: Returns an array of transaction ids if formatMemPool=false, otherwise a JSONObject for each transaction\n      operationId: getMemoryPool\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                format:\n                  type: boolean\n                  default: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      transactions:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/Transaction'\n                      transactionIds:\n                        type: array\n                        items:\n                          type: string\n                  error:\n                    $ref: '#/components/schemas/SidechainApiErrorResponse'\n        default:\n          description: any kind of http error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SidechainApiError'\n\n  /transaction/findById:\n    post:\n      tags:\n        - transaction\n      summary: find transaction in memory pool, or in a block or in full blockchain\n      description:  \"All the possible behaviours are:\\n\n      1) blockHash set -\u003e Search in block referenced by blockHash (do not care about txIndex parameter)\\n\n      2) blockHash not set, txIndex = true -\u003e Search in memory pool, if not found, search in the whole blockchain\\n\n      3) blockHash not set, txIndex = false -\u003e Search in memory pool\"\n      operationId: getRawTransaction\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - transactionId\n              properties:\n                transactionId:\n                  type: string\n                blockHash:\n                  type: string\n                  default: \"\"\n                transactionIndex:\n                  type: boolean\n                  default: false\n                format:\n                  type: boolean\n                  default: false\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      transaction:\n                        $ref: '#/components/schemas/Transaction'\n                      transactionBytes:\n                        type: string\n                  error:\n                    $ref: '#/components/schemas/SidechainApiErrorResponse'\n        default:\n          description: any kind of http error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SidechainApiError'\n\n  /transaction/decodeTransactionBytes:\n    post:\n      tags:\n        - transaction\n      summary: a human readable representation of the trasanction\n      description: Return a JSON representation of a transaction given its byte serialization\n      operationId: decodeRawTransaction\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - transactionBytes\n              properties:\n                transactionBytes:\n                  type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      transaction:\n                        $ref: '#/components/schemas/Transaction'\n                  error:\n                    $ref: '#/components/schemas/SidechainApiErrorResponse'\n        default:\n          description: any kind of http error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SidechainApiError'\n\n  /transaction/createCoreTransaction:\n    post:\n      tags:\n        - transaction\n      summary: create and sign a Sidechain core transaction\n      description: Create and sign a Sidechain core transaction, specifying inputs and outputs. Return the new transaction as a hex string if format = false, otherwise its JSON representation.\n      operationId: createCoreTransaction\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - transactionInputs\n                - regularOutputs\n                - withdrawalRequests\n                - forgerOutputs\n              properties:\n                transactionInputs:\n                  type: array\n                  items:\n                    type: object\n                    required:\n                      - boxId\n                    properties:\n                      boxId:\n                        type: string\n                        description: coin box id in hex\n                regularOutputs:\n                  type: array\n                  items:\n                    type: object\n                    required:\n                      - publicKey\n                      - value\n                    properties:\n                      publicKey:\n                        type: string\n                      value:\n                        type: integer\n                        format: int64\n                withdrawalRequests:\n                  type: array\n                  items:\n                    type: object\n                    required:\n                     - mainchainAddress\n                     - value\n                    properties:\n                      mainchainAddress:\n                        type: string\n                        description: base58check - Horizen pay to pubkeyhash address\n                      value:\n                        type: integer\n                        format: int64\n                forgerOutputs:\n                  type: array\n                  items:\n                    type: object\n                    required:\n                      - publicKey\n                      - vrfPubKey\n                      - value\n                    properties:\n                      publicKey:\n                        type: string\n                      blockSignPublicKey:\n                        type: string\n                      vrfPubKey:\n                        type: string\n                      value:\n                        type: integer\n                        format: int64\n                format:\n                  type: boolean\n                  default: false\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      transaction:\n                        $ref: '#/components/schemas/Transaction'\n                      transactionBytes:\n                        type: string\n                  error:\n                    $ref: '#/components/schemas/SidechainApiErrorResponse'\n        default:\n          description: any kind of http error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SidechainApiError'\n\n  /transaction/createCoreTransactionSimplified:\n    post:\n      tags:\n        - transaction\n      summary: create and sign a Sidechain core transaction\n      description: Create and sign a Sidechain core transaction, specifying outputs and fee. Return the new transaction as a hex string if format = false, otherwise its JSON representation.\n      operationId: createCoreTransactionSimplified\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - regularOutputs\n                - withdrawalRequests\n                - forgerOutputs\n                - fee\n              properties:\n                regularOutputs:\n                  type: array\n                  items:\n                    type: object\n                    required:\n                      - publicKey\n                      - value\n                    properties:\n                      publicKey:\n                        type: string\n                      value:\n                        type: integer\n                        format: int64\n                withdrawalRequests:\n                  type: array\n                  items:\n                    type: object\n                    required:\n                     - mainchainAddress\n                     - value\n                    properties:\n                      mainchainAddress:\n                        type: string\n                        description: base58check - Horizen pay to pubkeyhash address\n                      value:\n                        type: integer\n                        format: int64\n                forgerOutputs:\n                  type: array\n                  items:\n                    type: object\n                    required:\n                      - publicKey\n                      - vrfPubKey\n                      - value\n                    properties:\n                      publicKey:\n                        type: string\n                      blockSignPublicKey:\n                        type: string\n                      vrfPubKey:\n                        type: string\n                      value:\n                        type: integer\n                        format: int64\n                fee:\n                  type: integer\n                  format: int64\n                format:\n                  type: boolean\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      transaction:\n                        $ref: '#/components/schemas/Transaction'\n                      transactionBytes:\n                        type: string\n                  error:\n                    $ref: '#/components/schemas/SidechainApiErrorResponse'\n        default:\n          description: any kind of http error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SidechainApiError'\n\n  /transaction/sendCoinsToAddress:\n    post:\n      tags:\n        - transaction\n      summary: send a transaction\n      description: Create and sign a regular transaction, specifying outputs and fee. Then validate and send the transaction. Then return the id of the transaction\n      operationId: sendCoinsToAddress\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - transactionOutputs\n              properties:\n                outputs:\n                  type: array\n                  items:\n                    type: object\n                    required:\n                      - publicKey\n                      - value\n                    properties:\n                      publicKey:\n                        type: string\n                      value:\n                        type: integer\n                        format: int64\n                fee:\n                  type: integer\n                  format: int64\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      transactionId:\n                        type: string\n                  error:\n                    $ref: '#/components/schemas/SidechainApiErrorResponse'\n        default:\n          description: any kind of http error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SidechainApiError'\n\n  /transaction/withdrawCoins:\n    post:\n      tags:\n        - transaction\n      summary: send a transaction\n      description: Create and sign a regular transaction, specifying withdrawal outputs and fee. Then validate and send the transaction. Then return the id of the transaction\n      operationId: withdrawCoins\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - outputs\n              properties:\n                outputs:\n                  type: array\n                  items:\n                    type: object\n                    required:\n                      - mainchainAddress\n                      - value\n                    properties:\n                      mainchainAddress:\n                        type: string\n                        description: base58check - Horizen pay to pubkeyhash address\n                      value:\n                        type: integer\n                        format: int64\n                fee:\n                  type: integer\n                  format: int64\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      transactionId:\n                        type: string\n                  error:\n                    $ref: '#/components/schemas/SidechainApiErrorResponse'\n        default:\n          description: any kind of http error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SidechainApiError'\n\n  /transaction/makeForgerStake:\n    post:\n      tags:\n        - transaction\n      summary: create transaction with forger stake\n      description: Create and sign a Sidechain core transaction, specifying forger stake outputs and fee. Then validate and send the transaction. Then return the id of the transaction\n      operationId: makeForgerStake\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - outputs\n              properties:\n                outputs:\n                  type: array\n                  items:\n                    type: object\n                    required:\n                      - publicKey\n                      - value\n                      - vrfPubKey\n                    properties:\n                      publicKey:\n                        type: string\n                      blockSignPublicKey:\n                        type: string\n                      vrfPubKey:\n                        type: string\n                      value:\n                        type: integer\n                        format: int64\n                fee:\n                  type: integer\n                  format: int64\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      transactionId:\n                        type: string\n                  error:\n                    $ref: '#/components/schemas/SidechainApiErrorResponse'\n        default:\n          description: any kind of http error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SidechainApiError'\n\n  /transaction/spendForgingStake:\n    post:\n      tags:\n        - transaction\n      summary: create and sign sidechain core transaction\n      description: Create and sign sidechain core transaction, specifying inputs and outputs. Return the new transaction as a hex string if format = false, otherwise its JSON representation.\n      operationId: spendForgingStake\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - transactionInputs\n                - regularOutputs\n                - forgerOutputs\n              properties:\n                transactionInputs:\n                  type: array\n                  items:\n                    type: object\n                    required:\n                      - boxId\n                    properties:\n                      boxId:\n                        type: string\n                        description: id of ForgerBox\n                regularOutputs:\n                  type: array\n                  items:\n                    type: object\n                    required:\n                      - publicKey\n                      - value\n                    properties:\n                      publicKey:\n                        type: string\n                      value:\n                        type: integer\n                        format: int64\n                forgerOutputs:\n                  type: array\n                  items:\n                    type: object\n                    required:\n                      - publicKey\n                      - vrfPubKey\n                      - value\n                    properties:\n                      publicKey:\n                        type: string\n                      blockSignPublicKey:\n                        type: string\n                      vrfPubKey:\n                        type: string\n                      value:\n                        type: integer\n                        format: int64\n                format:\n                  type: boolean\n                  default: false\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      transaction:\n                        $ref: '#/components/schemas/Transaction'\n                      transactionBytes:\n                        type: string\n                  error:\n                    $ref: '#/components/schemas/SidechainApiErrorResponse'\n        default:\n          description: any kind of http error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SidechainApiError'\n\n  /transaction/sendTransaction:\n    post:\n      tags:\n        - transaction\n      summary: send a transaction\n      description: Validate and send a transaction, given its serialization as input. Then return the id of the transaction\n      operationId: sendRawTransaction\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - transactionBytes\n              properties:\n                transactionBytes:\n                  type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      transactionId:\n                        type: string\n                  error:\n                    $ref: '#/components/schemas/SidechainApiErrorResponse'\n        default:\n          description: any kind of http error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SidechainApiError'\n\n  # Sidechain wallet operations\n  /wallet/allBoxes:\n    post:\n      tags:\n        - wallet\n      summary: find all boxes\n      description: Return all boxes, excluding those which ids are included in excludeBoxIds list\n      operationId: getAllBoxes\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                boxTypeClass:\n                  description: Filter boxes of a given type\n                  type: string\n                excludeBoxIds:\n                  type: array\n                  items:\n                    type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      boxes:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/Box'\n                  error:\n                    $ref: '#/components/schemas/SidechainApiErrorResponse'\n        default:\n          description: any kind of http error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SidechainApiError'\n\n  /wallet/coinsBalance:\n    post:\n      tags:\n        - wallet\n      summary: the global balance of coins boxes\n      description: Return the global balance for all types of coins boxes\n      operationId: getCoinsBalance\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      balance:\n                        type: integer\n                        format: int64\n                  error:\n                    $ref: '#/components/schemas/SidechainApiErrorResponse'\n        default:\n          description: any kind of http error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SidechainApiError'\n\n  /wallet/balanceOfType:\n      post:\n        tags:\n          - wallet\n        summary: the total balance of boxes of given type\n        description: Return the global balance for given type of boxes\n        operationId: getBalance\n        requestBody:\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  boxType:\n                    description: Filter balance for given box type\n                    type: string\n        responses:\n          '200':\n            description: successful operation\n            content:\n              application/json:\n                schema:\n                  type: object\n                  properties:\n                    result:\n                      type: object\n                      properties:\n                        balance:\n                          type: integer\n                          format: int64\n                    error:\n                      $ref: '#/components/schemas/SidechainApiErrorResponse'\n          default:\n            description: any kind of http error\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/SidechainApiError'\n\n  /wallet/createPrivateKey25519:\n    post:\n      tags:\n        - wallet\n      summary: new 25519 secret\n      description: Create new secret and return corresponding address (public key)\n      operationId: createPrivateKey25519\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      proposition:\n                        $ref: '#/components/schemas/Proposition'\n                  error:\n                    $ref: '#/components/schemas/SidechainApiErrorResponse'\n        default:\n          description: any kind of http error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SidechainApiError'\n\n  /wallet/createVrfSecret:\n    post:\n      tags:\n        - wallet\n      summary: new Vrf secret\n      description: Create new Vrf secret and return corresponding public key\n      operationId: createVrfSecret\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      proposition:\n                        $ref: '#/components/schemas/Proposition'\n                  error:\n                    $ref: '#/components/schemas/SidechainApiErrorResponse'\n        default:\n          description: any kind of http error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SidechainApiError'\n\n  /wallet/allPublicKeys:\n    post:\n      tags:\n        - wallet\n      summary: find all public keys\n      description: Returns the list of all wallet’s propositions (public keys)\n      operationId: getPropositions\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                proptype:\n                  description: Filter propositions of the given type\n                  type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      propositions:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/Proposition'\n                  error:\n                    $ref: '#/components/schemas/SidechainApiErrorResponse'\n        default:\n          description: any kind of http error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SidechainApiError'\n\n  # Sidechain node operations\n  /node/allPeers:\n    post:\n      tags:\n        - node\n      summary: find all peers node\n      description: Returns the list of all sidechain node peers\n      operationId: allPeers\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      peers:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/SidechainPeerNode'\n                  error:\n                    $ref: '#/components/schemas/SidechainApiErrorResponse'\n        default:\n          description: any kind of http error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SidechainApiError'\n\n  /node/connect:\n    post:\n      tags:\n        - node\n      summary: connect to a node\n      description: Send the request to connect to a sidechain node\n      operationId: connect\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - host\n                - port\n              properties:\n                host:\n                  type: string\n                port:\n                  type: integer\n                  format: int32\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      connectedTo:\n                        type: string\n                  error:\n                    $ref: '#/components/schemas/SidechainApiErrorResponse'\n        default:\n          description: any kind of http error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SidechainApiError'\n\n  /node/connectedPeers:\n    post:\n      tags:\n        - node\n      summary: find all connected peers node\n      description: Returns the list of all connected sidechain node peers\n      operationId: connectedPeers\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      peers:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/SidechainPeerNode'\n                  error:\n                    $ref: '#/components/schemas/SidechainApiErrorResponse'\n        default:\n          description: any kind of http error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SidechainApiError'\n\n  /node/blacklistedPeers:\n    post:\n      tags:\n        - node\n      summary: find all blacklisted peers node\n      description: Returns the list of all blacklisted sidechain node peers\n      operationId: blacklistedPeers\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    $ref: '#/components/schemas/BlacklistedPeersNode'\n                  error:\n                    $ref: '#/components/schemas/SidechainApiErrorResponse'\n        default:\n          description: any kind of http error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SidechainApiError'\n\n  /node/stop:\n    post:\n      tags:\n        - node\n      summary: stop the node\n      description: stop the node in a gracefully way\n      operationId: stop\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                  error:\n                    $ref: '#/components/schemas/SidechainApiErrorResponse'\n        default:\n          description: any kind of http error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SidechainApiError'\n  # Mainchain references info\n  /mainchain/bestBlockReferenceInfo:\n    post:\n      tags:\n        - mainchain\n      summary: find the best MC block header which has already been included in a SC block\n      description: \"Returns the best MC block header which has already been included in a SC block. Returns:\\n\n        1) Mainchain block reference hash with the most height; \\n\n        2) Its height in mainchain; \\n\n        3) Sidechain block ID which contains this MC block reference.\"\n      operationId: bestBlockReferenceInfo\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      blockReferenceInfo:\n                        $ref: '#/components/schemas/MainchainBlockInfo'\n                      blockHex:\n                        type: string\n                  error:\n                    $ref: '#/components/schemas/SidechainApiErrorResponse'\n        default:\n          description: any kind of http error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SidechainApiError'\n\n  /mainchain/genesisBlockReferenceInfo:\n    post:\n      tags:\n        - mainchain\n      summary: \"\"\n      description: \"\"\n      operationId: genesisBlockReferenceInfo\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      blockReferenceInfo:\n                        $ref: '#/components/schemas/MainchainBlockInfo'\n                      blockHex:\n                        type: string\n                  error:\n                    $ref: '#/components/schemas/SidechainApiErrorResponse'\n        default:\n          description: any kind of http error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SidechainApiError'\n\n  /mainchain/blockReferenceInfoBy:\n    post:\n      tags:\n        - mainchain\n      summary: \"\"\n      description: \"\"\n      operationId: blockReferenceInfoBy\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                hash:\n                  type: string\n                height:\n                  type: integer\n                  format: int32\n                format:\n                  type: boolean\n                  default: false\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      blocReferencekInfo:\n                        $ref: '#/components/schemas/MainchainBlockInfo'\n                      blockHex:\n                        type: string\n                  error:\n                    $ref: '#/components/schemas/SidechainApiErrorResponse'\n        default:\n          description: any kind of http error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SidechainApiError'\n\n  /mainchain/blockReferenceByHash:\n    post:\n      tags:\n        - mainchain\n      summary: \"\"\n      description: \"\"\n      operationId: blockReferenceByHash\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - hash\n              properties:\n                hash:\n                  type: string\n                format:\n                  type: boolean\n                  default: false\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      blockReference:\n                        $ref: '#/components/schemas/MainchainBlock'\n                      blockHex:\n                        type: string\n                  error:\n                    $ref: '#/components/schemas/SidechainApiErrorResponse'\n        default:\n          description: any kind of http error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SidechainApiError'\n\n  #Certificate Submitter operations\n  /submitter/isCertGenerationActive:\n    post:\n      tags:\n        - submitter\n      summary: returns if certificate generation is in progress\n      description: returns if certificate generation is in progress\n      operationId: isCertGenerationActive\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      state:\n                        type: boolean\n                        description: True or False depending on generation status\n                  error:\n                    $ref: '#/components/schemas/SidechainApiErrorResponse'\n        default:\n          description: any kind of http error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SidechainApiError'\n\n  /submitter/isCertificateSubmitterEnabled:\n    post:\n      tags:\n        - submitter\n      summary: returns if certificate submitter is enabled\n      description: returns if certificate submitter is enabled, so will automatically try to create and send certificate during the submission window.\n      operationId: isCertificateSubmitterEnabled\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      enabled:\n                        type: boolean\n                        description: True or False depends on submitter status\n                  error:\n                    $ref: '#/components/schemas/SidechainApiErrorResponse'\n        default:\n          description: any kind of http error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SidechainApiError'\n\n  /submitter/enableCertificateSubmitter:\n    post:\n      tags:\n        - submitter\n      summary: enables automatic certificate submission\n      description: enables automatic certificate submission\n      operationId: enableCertificateSubmitter\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                  error:\n                    $ref: '#/components/schemas/SidechainApiErrorResponse'\n        default:\n          description: any kind of http error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SidechainApiError'\n\n  /submitter/disableCertificateSubmitter:\n    post:\n      tags:\n        - submitter\n      summary: disables automatic certificate submission\n      description: disables automatic certificate submission\n      operationId: disableCertificateSubmitter\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                  error:\n                    $ref: '#/components/schemas/SidechainApiErrorResponse'\n        default:\n          description: any kind of http error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SidechainApiError'\n\n  /submitter/isCertificateSignerEnabled:\n    post:\n      tags:\n        - submitter\n      summary: returns if certificate signing option is enabled\n      description: returns if certificate signing is enabled, so will automatically try to sign certificate and broadcast the signature to the network.\n      operationId: isCertificateSignerEnabled\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      enabled:\n                        type: boolean\n                        description: True or False depends on submitter status\n                  error:\n                    $ref: '#/components/schemas/SidechainApiErrorResponse'\n        default:\n          description: any kind of http error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SidechainApiError'\n\n  /submitter/enableCertificateSigner:\n    post:\n      tags:\n        - submitter\n      summary: enables automatic certificate signing\n      description: enables automatic certificate signing\n      operationId: enableCertificateSigner\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                  error:\n                    $ref: '#/components/schemas/SidechainApiErrorResponse'\n        default:\n          description: any kind of http error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SidechainApiError'\n\n  /submitter/disableCertificateSigner:\n    post:\n      tags:\n        - submitter\n      summary: disables automatic certificate signing\n      description: disables automatic certificate signing\n      operationId: disableCertificateSigner\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                  error:\n                    $ref: '#/components/schemas/SidechainApiErrorResponse'\n        default:\n          description: any kind of http error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SidechainApiError'\n\n  # Ceased Sidechain Withdrawal operations\n  /csw/hasCeased:\n    post:\n      tags:\n        - csw\n      summary: returns current status of the Sidechain\n      description: returns current status of the Sidechain\n      operationId: hasCeased\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      state:\n                        type: boolean\n                        description: True or False depending if Sidechain is ceased\n                  error:\n                    $ref: '#/components/schemas/SidechainApiErrorResponse'\n        default:\n          description: any kind of http error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SidechainApiError'\n\n  /csw/generateCswProof:\n    post:\n      tags:\n        - csw\n      summary: generates csw proof\n      description: try to generate csw proof and return current status of this operation\n      operationId: generateCswProof\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - boxId\n              properties:\n                boxId:\n                  type: string\n                  description: coin box id in hex\n                receiverAddress:\n                  type: string\n                  description: Horizen transparent address\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      state:\n                        type: string\n                        description: short description of current proof generation state\n                      description:\n                        type: string\n                        description: full description of current proof generation state\n                  error:\n                    $ref: '#/components/schemas/SidechainApiErrorResponse'\n        default:\n          description: any kind of http error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SidechainApiError'\n\n  /csw/cswInfo:\n    post:\n      tags:\n        - csw\n      summary: csw information\n      description: retrieves information about csw proof for given box id\n      operationId: cswInfo\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - boxId\n              properties:\n                boxId:\n                  type: string\n                  description: coin box id in hex\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      cswInfo:\n                        $ref: '#/components/schemas/CswInfo'\n                  error:\n                    $ref: '#/components/schemas/SidechainApiErrorResponse'\n        default:\n          description: any kind of http error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SidechainApiError'\n\n  /csw/cswBoxIds:\n    post:\n      tags:\n        - csw\n      summary: return list of available box ids for csw\n      description: return list of available box ids for csw\n      operationId: cswBoxIds\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      cswBoxIds:\n                        type: array\n                        items:\n                          type: string\n                  error:\n                    $ref: '#/components/schemas/SidechainApiErrorResponse'\n        default:\n          description: any kind of http error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SidechainApiError'\n\n  /csw/nullifier:\n    post:\n      tags:\n        - csw\n      summary: retrieves nullifier\n      description: retrieves nullifier for given box id\n      operationId: nullifier\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - boxId\n              properties:\n                boxId:\n                  type: string\n                  description: coin box id in hex\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      nullifier:\n                        type: String\n                        description: nullifier for given box id\n                  error:\n                    $ref: '#/components/schemas/SidechainApiErrorResponse'\n        default:\n          description: any kind of http error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SidechainApiError'\n\ncomponents:\n  schemas:\n    # Objects\n    SidechainApiError:\n      description: A SidechainApiError represents an HTTP error.\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        reason:\n          type: string\n        detail:\n          type: string\n\n    SidechainApiErrorResponse:\n      description: A SidechainApiErrorResponse represents a business logic error, not HTTP error.\n      type: object\n      properties:\n        code:\n          type: string\n        description:\n          type: string\n        detail:\n          type: string\n\n    BlacklistedPeersNode:\n      type: object\n      properties:\n        addresses:\n          type: array\n          items:\n            type: string\n\n    SidechainPeerNode:\n      type: object\n      properties:\n        address:\n          type: string\n        lastSeen:\n          type: integer\n          format: int64\n        name:\n          type: string\n        connectionType:\n          type: string\n\n    Proposition:\n      type: object\n      properties:\n        publicKey:\n          type: string\n\n    Signature25519:\n      type: object\n      properties:\n        signature:\n          type: string\n\n    MainchainHeader:\n      type: object\n      properties:\n        mainchainHeaderBytes:\n          type: string\n        version:\n          type: integer\n          format: int32\n        hashPrevBlock:\n          type: string\n        hashMerkleRoot:\n          type: string\n        hashReserved:\n          type: string\n        hashSCMerkleRootsMap:\n          type: string\n        time:\n          type: integer\n          format: int64\n        bits:\n          type: integer\n          format: int64\n        nonce:\n          type: string\n        solution:\n          type: string\n\n    MC2SCAggregatedTransaction:\n      type: object\n      properties:\n        id:\n          type: string\n        fee:\n          type: integer\n          format: int64\n        timestamp:\n          type: integer\n          format: int64\n        mc2scTransactionsMerkleRootHash:\n          type: string\n        newBoxes:\n          type: array\n          items:\n            $ref: '#/components/schemas/Box'\n        typeName:\n          type: string\n        isCustom:\n          type: boolean\n\n    Box:\n      type: object\n      properties:\n        id:\n          type: string\n        proposition:\n          $ref: '#/components/schemas/Proposition'\n        value:\n          type: integer\n          format: int64\n        nonce:\n          type: integer\n          format: int64\n        typeName:\n          type: string\n        isCustom:\n          type: boolean\n\n    MainchainBlock:\n      type: object\n      properties:\n        header:\n          $ref: '#/components/schemas/MainchainHeader'\n        sidechainRelatedAggregatedTransaction:\n          $ref: '#/components/schemas/MC2SCAggregatedTransaction'\n        merkleRoots:\n          type: array\n          items:\n            type: object\n            properties:\n              key:\n                type: string\n              value:\n                type: string\n\n    Transaction:\n      type: object\n\n    MainchainBlockInfo:\n      type: object\n      properties:\n        hash:\n          type: string\n        parentHash:\n          type: string\n        height:\n          type: integer\n          format: int64\n        sidechainBlockId:\n          type: string\n\n    SidechainBlock:\n      type: object\n      properties:\n        id:\n          type: string\n        parentId:\n          type: string\n        timestamp:\n          type: integer\n          format: int64\n        mainchainBlocks:\n          type: array\n          items:\n            $ref: '#/components/schemas/MainchainBlock'\n        sidechainTransactions:\n          type: array\n          items:\n            $ref: '#/components/schemas/Transaction'\n        forgerPublicKey:\n          $ref: '#/components/schemas/Proposition'\n        signature:\n          $ref: '#/components/schemas/Signature25519'\n\n    CswInfo:\n      type: object\n      properties:\n        cswType:\n          type: string\n        amount:\n          type: integer\n        scId:\n          type: string\n        nullifier:\n          type: string\n        proofInfo:\n          $ref: '#/components/schemas/CswProofInfo'\n        activeCertData:\n          type: string\n        ceasingCumScTxCommTree:\n          type: string\n\n    CswProofInfo:\n      type: object\n      properties:\n        status:\n          type: string\n        scProof:\n          type: string\n        receiverAddress:\n          type: string\n",
			"canonicalURL": "/github.com/HorizenOfficial/Sidechains-SDK@ad65bc080e3308d5340cba0f2ae2f9bd53953a3d/-/blob/sdk/src/main/resources/api/sidechainApi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/HorizenOfficial/Sidechains-SDK/blob/ad65bc080e3308d5340cba0f2ae2f9bd53953a3d/sdk/src/main/resources/api/sidechainApi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/csw/nullifier\": at 1:13543: post: operation \"nullifier\": at 1:13551: responses: 200: at 1:13823: at 1:13834: content: application/json: at 1:13854: schema: at 1:13864: parse schema: property \"result\": at 1:13954: parse schema: property \"nullifier\": at 1:13981: parse schema: unexpected schema type: \"String\""
}