{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/regulaforensics/FaceSDK-web-openapi"
		},
		"file": {
			"name": "detect.yml",
			"size": 0,
			"path": "detect.yml",
			"byteSize": 5477,
			"content": "openapi: 3.0.3\n\n\npaths:\n  /detect:\n    parameters:\n      - $ref: './common.yml#/components/parameters/x-request'\n    post:\n      tags:\n        - matching\n      summary: \"Detect facial coordinates\"\n      operationId: detect\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DetectRequest\"\n      responses:\n        200:\n          description: \"Successful operation; the coordinates of the detected faces are returned.\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DetectResponse\"\n        403:\n          $ref: \"./common.yml#/components/responses/BadLicense\"\n\ncomponents:\n  schemas:\n    DetectRequest:\n      type: object\n      properties:\n        tag:\n          type: string\n          description: \"Session identificator.\"\n        processParam:\n          $ref: \"./common.yml#/components/schemas/ProcessParam\"\n        image:\n          $ref: \"./common.yml#/components/schemas/ImageData\"\n        thumbnails:\n          description: \"Whether to return the cropped portrains with the detected faces.\"\n          type: boolean\n          default: false\n        attributes:\n          description: \"Whether to evaluate attributes, such as age and emotions.\"\n          type: boolean\n          default: false\n        onlyCentralFace:\n          description: \"Whether to detect the only central face (true) or all the faces (false).\"\n          type: boolean\n          default: false\n\n    DetectResponse:\n      allOf:\n        - $ref: './common.yml#/components/schemas/FaceSDKResult'\n        - type: object\n          properties:\n            results:\n              $ref: '#/components/schemas/DetectResult'\n\n    DetectResult:\n      type: object\n      required:\n        - detections\n      properties:\n        detections:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Detection\"\n        detectorType:\n          description: \"Internal.\"\n          type: integer\n        landmarksType:\n          description: \"Internal.\"\n          type: integer\n        scenario:\n          description: \"Scenario from Request processParam.\"\n          $ref: \"./common.yml#/components/schemas/FaceQualityScenarios\"\n        timer:\n          type: float\n          description: \"The total time taken for the detection.\"\n          example: 0.84793560000000001\n\n    Detection:\n      type: object\n      required:\n        - landmarks\n        - roi\n      properties:\n        crop:\n          description: \"Base64 of the aligned and cropped portrait. Returned if align is set.\"\n          $ref: \"./common.yml#/components/schemas/ImageData\"\n        attributes:\n          type: object\n          additionalProperties: true\n          example:\n            age: adult\n            emotion: smile\n        landmarks:\n          description: \"Absolute coordinates (x,y) of five points of each detected face: left eye, right eye, nose, left point of lips, right point of lips.\"\n          type: array\n          items:\n            description: \"Cartesian points. First element - X-axis coordinate. Second element - Y-axis coordinate.\"\n            type: array\n            items:\n              type: number\n              example: [ x, y ]\n          example: [ [ x, y ] ]\n        quality:\n          type: object\n          description: \"Field for checking the portrait quality. If it is not mentioned, no quality check is performed.\"\n          properties:\n            nonCompliant:\n              type: array\n              description: \"The array of all the non-compliant assessment characteristics.\"\n              items:\n                $ref: \"./common.yml#/components/schemas/FaceQualityConfigName\"\n              example: [\"ImageWidthToHeight\", \"Yaw\"]\n            detailsGroups:\n              description: \"The array of the assessment results for each group of characteristics.\"\n              type: array\n              items:\n                $ref: \"./common.yml#/components/schemas/QualityDetailsGroups\"\n            details:\n              type: array\n              description: \"The array of the assessment characteristics that were set in the request.\"\n              items:\n                $ref: \"./common.yml#/components/schemas/QualityDetail\"\n\n            score:\n              type: float\n              description: \"Returns the estimated portrait quality assessment result,\n               a number from 0 to 1, where 1 is for absolute compliance.\"\n              example: -1.0\n            timer:\n              type: float\n              description: \"The total time the quality assessment has taken.\"\n              example: 0.42036411166191101\n        roi:\n          $ref: \"./common.yml#/components/schemas/FaceRectangular\"\n        thumbnail:\n          $ref: \"./common.yml#/components/schemas/Thumbnail\"\n\n    FaceAttribute:\n      description: \"Face attributes for evaluation.\"\n      type: string\n      enum:\n        - Age\n        - Emotion\n        - EyeLeft\n        - EyeRight\n        - Smile\n        - Glasses\n        - HeadCovering\n        - ForeheadCovering\n        - Mouth\n        - MedicalMask\n        - Occlusion\n        - StrongMakeup\n        - Headphones\n      x-enum-varnames:\n        - AGE\n        - EMOTION\n        - EYE_LEFT\n        - EYE_RIGHT\n        - SMILE\n        - GLASSES\n        - HEAD_COVERING\n        - FOREHEAD_COVERING\n        - MOUTH\n        - MEDICAL_MASK\n        - OCCLUSION\n        - STRONG_MAKEUP\n        - HEADPHONES\n",
			"canonicalURL": "/github.com/regulaforensics/FaceSDK-web-openapi@07562373dd6f7af9e538c70e3f173d614c30b163/-/blob/detect.yml",
			"externalURLs": [
				{
					"url": "https://github.com/regulaforensics/FaceSDK-web-openapi/blob/07562373dd6f7af9e538c70e3f173d614c30b163/detect.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"DetectRequest\": resolve \"#/components/schemas/DetectRequest\": property \"processParam\": $ref: resolve \"./common.yml#/components/schemas/ProcessParam\": property \"quality\": $ref: resolve \"#/components/schemas/QualityRequest\": property \"config\": $ref: resolve \"#/components/schemas/QualityConfigList\": items: $ref: resolve \"#/components/schemas/QualityConfig\": property \"range\": items: at https://raw.githubusercontent.com/regulaforensics/FaceSDK-web-openapi/07562373dd6f7af9e538c70e3f173d614c30b163/common.yml:115:19: type: unexpected schema type: \"float\""
}