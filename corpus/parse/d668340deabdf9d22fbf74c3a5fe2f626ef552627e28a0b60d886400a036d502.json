{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/endafarrell/sanic-openapi3e"
		},
		"file": {
			"name": "expected_spec_for_medium_sized_app_00.yml",
			"size": 0,
			"path": "tests/openapi3e/expected_spec_for_medium_sized_app_00.yml",
			"byteSize": 9062,
			"content": "openapi: 3.0.2\ninfo:\n  title: API\n  version: v1.0.0\n  description: Description\npaths:\n  /41/test_id/{an_id}:\n    get:\n      tags:\n      - Tag 1\n      operationId: testId\n      parameters:\n      - name: an_id\n        description: An ID\n        in: path\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          $ref: '#/components/responses/200'\n        '400':\n          $ref: '#/components/responses/400'\n        '404':\n          $ref: '#/components/responses/404'\n        '500':\n          $ref: '#/components/responses/500'\n  /47/test_id_min/{an_id}:\n    get:\n      operationId: testIdMin\n      parameters:\n      - name: an_id\n        description: An ID\n        in: path\n        required: true\n        schema:\n          $ref: '#/components/schemas/int.min4'\n      responses:\n        '200':\n          description: You got a 200!\n          headers:\n            x-prize:\n              description: free money\n              required: false\n              allowEmptyValue: false\n              explode: false\n              allowReserved: false\n        '400':\n          $ref: '#/components/responses/400'\n        '404':\n          $ref: '#/components/responses/404'\n        '500':\n          $ref: '#/components/responses/500'\n  /55/test_id_examples/{an_id}:\n    get:\n      summary: A path with parameter examples\n      description: 'Unfortunately, the swagger UIs do not show the examples, but you\n        can see them here:\n\n\n        * `{''small'': Example({\"description\": \"Desc: Numbers less than ten\", \"summary\":\n        \"A small number\", \"value\": 7})}`,\n\n        * `{''big'': Example({\"description\": \"Desc: Numbers more than one million!\",\n        \"summary\": \"A big number\", \"value\": 123456789})}`'\n      operationId: testIdExamples\n      parameters:\n      - name: an_id\n        description: An ID\n        in: path\n        required: true\n        schema:\n          minimum: 4\n          type: integer\n          description: 'Minimum value: 4'\n          format: int32\n        examples:\n          small:\n            summary: A small number\n            description: 'Desc: Numbers less than ten'\n            value: 7\n          big:\n            summary: A big number\n            description: 'Desc: Numbers more than one million!'\n            value: 123456789\n      responses:\n        '200':\n          $ref: '#/components/responses/200'\n        '400':\n          $ref: '#/components/responses/400'\n        '404':\n          $ref: '#/components/responses/404'\n        '500':\n          $ref: '#/components/responses/500'\n  /74/test_path__deprecated/{an_id}/{another}:\n    get:\n      summary: A path with parameter examples\n      description: This should be marked as being deprecated\n      operationId: pathDeprecated\n      parameters:\n      - name: an_id\n        description: An ID\n        in: path\n        required: true\n        schema:\n          minimum: 4\n          type: integer\n          description: 'Minimum value: 4'\n          format: int32\n        examples:\n          small:\n            summary: A small number\n            description: 'Desc: Numbers less than ten'\n            value: 7\n          big:\n            summary: A big number\n            description: 'Desc: Numbers more than one million!'\n            value: 123456789\n      - name: another\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/200'\n        '400':\n          $ref: '#/components/responses/400'\n        '404':\n          $ref: '#/components/responses/404'\n        '500':\n          $ref: '#/components/responses/500'\n      deprecated: true\n  /90/test_parameter__deprecated/{an_id}:\n    get:\n      summary: A path deprecated parameter\n      description: The parameter should be marked as deprecated\n      operationId: paramDeprecated\n      parameters:\n      - name: an_id\n        description: An ID\n        in: path\n        required: true\n        deprecated: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          $ref: '#/components/responses/200'\n        '400':\n          $ref: '#/components/responses/400'\n        '404':\n          $ref: '#/components/responses/404'\n        '500':\n          $ref: '#/components/responses/500'\n  /109/some_ids:\n    get:\n      operationId: testSomeIds\n      parameters:\n      - name: ids\n        description: Some IDs\n        in: query\n        required: true\n        schema:\n          enum:\n          - 1\n          - 3\n          - 5\n          - 7\n          - 11\n          - 13\n          type: array\n          items:\n            type: integer\n      responses:\n        '200':\n          $ref: '#/components/responses/200'\n        '400':\n          $ref: '#/components/responses/400'\n        '404':\n          $ref: '#/components/responses/404'\n        '500':\n          $ref: '#/components/responses/500'\n  /123/post_some_ids:\n    post:\n      operationId: testPostSomeIds\n      parameters:\n      - name: ids\n        description: Some IDs\n        in: query\n        required: true\n        schema:\n          enum:\n          - 1\n          - 3\n          - 5\n          - 7\n          - 11\n          - 13\n          type: array\n          items:\n            type: integer\n      responses:\n        '200':\n          $ref: '#/components/responses/200'\n        '400':\n          $ref: '#/components/responses/400'\n        '404':\n          $ref: '#/components/responses/404'\n        '500':\n          $ref: '#/components/responses/500'\n  /137/put_some_ids:\n    put:\n      operationId: testPutSomeIds\n      parameters:\n      - name: ids\n        description: Some IDs\n        in: query\n        required: true\n        schema:\n          enum:\n          - 1\n          - 3\n          - 5\n          - 7\n          - 11\n          - 13\n          type: array\n          items:\n            type: integer\n      responses:\n        '200':\n          $ref: '#/components/responses/200'\n        '400':\n          $ref: '#/components/responses/400'\n        '404':\n          $ref: '#/components/responses/404'\n        '500':\n          $ref: '#/components/responses/500'\n  /151/options_some_ids:\n    options:\n      operationId: testOptionsSomeIds\n      parameters:\n      - name: ids\n        description: Some IDs\n        in: query\n        required: true\n        schema:\n          enum:\n          - 1\n          - 3\n          - 5\n          - 7\n          - 11\n          - 13\n          type: array\n          items:\n            type: integer\n      responses:\n        '200':\n          $ref: '#/components/responses/200'\n        '400':\n          $ref: '#/components/responses/400'\n        '404':\n          $ref: '#/components/responses/404'\n        '500':\n          $ref: '#/components/responses/500'\n  /165/delete_some_ids:\n    delete:\n      operationId: testDeleteSomeIds\n      parameters:\n      - name: ids\n        description: Some IDs\n        in: query\n        required: true\n        schema:\n          enum:\n          - 1\n          - 3\n          - 5\n          - 7\n          - 11\n          - 13\n          type: array\n          items:\n            type: integer\n      responses:\n        '200':\n          $ref: '#/components/responses/200'\n        '400':\n          $ref: '#/components/responses/400'\n        '404':\n          $ref: '#/components/responses/404'\n        '500':\n          $ref: '#/components/responses/500'\n  /179/head_some_ids:\n    head:\n      operationId: testHeadSomeIds\n      parameters:\n      - name: ids\n        description: Some IDs\n        in: query\n        required: true\n        schema:\n          enum:\n          - 1\n          - 3\n          - 5\n          - 7\n          - 11\n          - 13\n          type: array\n          items:\n            type: integer\n      responses:\n        '200':\n          $ref: '#/components/responses/200'\n        '400':\n          $ref: '#/components/responses/400'\n        '404':\n          $ref: '#/components/responses/404'\n        '500':\n          $ref: '#/components/responses/500'\n  /194/patch_some_ids:\n    patch:\n      operationId: testPatchSomeIds\n      parameters:\n      - name: ids\n        description: Some IDs\n        in: query\n        required: true\n        schema:\n          enum:\n          - 1\n          - 3\n          - 5\n          - 7\n          - 11\n          - 13\n          type: array\n          items:\n            type: integer\n      responses:\n        '200':\n          $ref: '#/components/responses/200'\n        '400':\n          $ref: '#/components/responses/400'\n        '404':\n          $ref: '#/components/responses/404'\n        '500':\n          $ref: '#/components/responses/500'\ncomponents:\n  schemas:\n    int.min4:\n      description: 'Minimum: 4'\n      format: int32\n      minimum: 4\n      title: int.min4\n      type: integer\n    str.min4:\n      description: A string of len \u003e= 4\n      minimum: 4\n      title: str.min4\n      type: string\n  responses:\n    '200':\n      description: OK\n    '400':\n      description: Bad Request\n    '404':\n      description: Not Found\n    '500':\n      description: Internal Server Error\ntags:\n- name: Tag 1\n  description: A tag desc\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /47/test_id_min/{an_id}: get: operation \"testIdMin\": responses: 200: headers: x-prize: header MUST contain either a schema property, or a content property"
}