{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Devolutions/devolutions-gateway"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "devolutions-gateway/doc/api.yaml",
			"byteSize": 5668,
			"content": "---\nopenapi: 3.0.3\ninfo:\n  title: devolutions-gateway\n  description: Protocol-aware fine-grained relay server\n  contact:\n    name: Devolutions Inc.\n    email: \"\"\n  license:\n    name: MIT/Apache-2.0\n  version: 2022.2.2\npaths:\n  /jet/diagnostics/clock:\n    get:\n      tags:\n        - \"crate::http::controllers::diagnostics\"\n      summary: \"Retrieves server's clock in order to diagnose clock drifting.\"\n      description: \"Retrieves server's clock in order to diagnose clock drifting.\\n\\nClock drift is an issue for token validation because of claims such as `nbf` and `exp`.\\n\"\n      operationId: get_clock\n      responses:\n        \"200\":\n          description: \"Server's clock\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GatewayClock\"\n      deprecated: false\n  /jet/diagnostics/configuration:\n    get:\n      tags:\n        - \"crate::http::controllers::diagnostics\"\n      summary: Retrieves configuration.\n      description: \"Retrieves configuration.\\n\"\n      operationId: get_configuration\n      parameters:\n        - name: scope_token\n          in: header\n          description: Scope token for gateway.diagnostics.read\n          required: true\n          deprecated: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Service configuration\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GatewayConfiguration\"\n        \"400\":\n          description: Bad request\n        \"401\":\n          description: Invalid or missing authorization token\n        \"403\":\n          description: Insufficient permissions\n      deprecated: false\n      security:\n        - scope_token:\n            - gateway.diagnostics.read\n  /jet/diagnostics/logs:\n    get:\n      tags:\n        - \"crate::http::controllers::diagnostics\"\n      summary: Retrieves latest logs.\n      description: \"Retrieves latest logs.\\n\"\n      operationId: get_logs\n      parameters:\n        - name: scope_token\n          in: header\n          description: Scope token for gateway.diagnostics.read\n          required: true\n          deprecated: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Latest logs\n          content:\n            text/plain:\n              schema:\n                type: string\n        \"400\":\n          description: Bad request\n        \"401\":\n          description: Invalid or missing authorization token\n        \"403\":\n          description: Insufficient permissions\n        \"500\":\n          description: Failed to retrieve logs\n      deprecated: false\n      security:\n        - scope_token:\n            - gateway.diagnostics.read\n  /jet/health:\n    get:\n      tags:\n        - \"crate::http::controllers::health\"\n      summary: Performs a health check\n      description: \"Performs a health check\\n\"\n      operationId: get_health\n      responses:\n        \"200\":\n          description: Healthy message\n          content:\n            text/plain:\n              schema:\n                type: string\n      deprecated: false\n  /jet/sessions:\n    get:\n      tags:\n        - \"crate::http::controllers::sessions\"\n      summary: Lists running sessions\n      description: \"Lists running sessions\\n\"\n      operationId: get_sessions\n      parameters:\n        - name: scope_token\n          in: header\n          description: Scope token for gateway.sessions.read\n          required: true\n          deprecated: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Running sessions\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/SessionInfo\"\n        \"400\":\n          description: Bad request\n        \"401\":\n          description: Invalid or missing authorization token\n        \"403\":\n          description: Insufficient permissions\n      deprecated: false\n      security:\n        - scope_token:\n            - gateway.sessions.read\ncomponents:\n  schemas:\n    ConnectionMode:\n      type: string\n      enum:\n        - rdv\n        - fwd\n    GatewayClock:\n      type: object\n      required:\n        - timestamp_secs\n        - timestamp_millis\n      properties:\n        timestamp_millis:\n          type: integer\n          format: int64\n        timestamp_secs:\n          type: integer\n          format: int64\n    GatewayConfiguration:\n      type: object\n      required:\n        - hostname\n        - version\n        - listeners\n      properties:\n        hostname:\n          type: string\n        listeners:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ListenerConfig\"\n        version:\n          type: string\n    ListenerConfig:\n      type: object\n      required:\n        - internal_url\n        - external_url\n      properties:\n        external_url:\n          type: string\n        internal_url:\n          type: string\n    SessionInfo:\n      type: object\n      required:\n        - association_id\n        - application_protocol\n        - recording_policy\n        - filtering_policy\n        - start_timestamp\n        - connection_mode\n      properties:\n        application_protocol:\n          type: string\n        association_id:\n          type: string\n          format: uuid\n        connection_mode:\n          $ref: \"#/components/schemas/ConnectionMode\"\n        destination_host:\n          type: string\n        filtering_policy:\n          type: boolean\n        recording_policy:\n          type: boolean\n        start_timestamp:\n          type: string\n          format: date-time\n\n",
			"canonicalURL": "/github.com/Devolutions/devolutions-gateway@f9b66c11f57028a54bbce22be443e07736d6890b/-/blob/devolutions-gateway/doc/api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Devolutions/devolutions-gateway/blob/f9b66c11f57028a54bbce22be443e07736d6890b/devolutions-gateway/doc/api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/jet/diagnostics/configuration\": get: operation \"get_configuration\": security: at 1:2560: unknown security schema \"scope_token\""
}