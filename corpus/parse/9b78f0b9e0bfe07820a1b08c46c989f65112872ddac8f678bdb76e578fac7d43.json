{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/HXL-CPLP/Auxilium-Humanitarium-API"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "api/UN/CODV2API/eng/openapi.yaml",
			"byteSize": 27944,
			"content": "# FILE:            api/UN/CODV2API/eng/openapi.yaml\n# LICENSE:         Unlicense\n#\n# ONLINE VERSION:  https://editor.swagger.io/?url=https://hapi.etica.ai/api/UN/CODV2API/eng/openapi.yaml\n#\n# README FIRST!:   This file uses OpenAPI syntax (https://www.openapis.org/),\n#                  a de facto non-proprietary industry standard to document\n#                  APIs.\n#                  Consider as starting point:\n#                    - Use this online editor https://editor.swagger.io/\n#                    - Check this https://openapi.tools/ for compatible tools\n\n\nopenapi: 3.0.3\n# NOTE: the current file, as 2021-05-01, uses OpenAPI 3.0 because 3.1 still too\n#       new (released 2021-02-15). But some comments already consider future\n#       upgrade.\n# @see https://spec.openapis.org/oas/v3.0.3\n# @see https://spec.openapis.org/oas/v3.1.0\n\ninfo:\n  title: UN OCHA COD Version 2 API (English)\n  description: |\n\n    This resource, using [OpenAPI 3.0 specification](https://www.openapis.org/)\n    and [dedicated to public domain](https://unlicense.org/), is an\n    [HXL-CPLP volunteers user group](https://github.com/HXL-CPLP) initiative\n    to document the [COD Version 2 API](https://beta.itos.uga.edu/CODV2API/) in\n    Portuguese language. Use of resource (recommended: see\n    [Open API Tools](https://openapi.tools/)) to make integrations and\n    translations to other natural languages.\n\n    **Important:** HXL-CPLP, translators, volunteers or third-party\n    projects using the OpenAPI file are not affiliated with the API providers.\n    Use of public domain like licenses (when viable) on derived work is\n    encouraged.\n\n    ## About the API\n\n    The API is built for humanitarian information management. Some\n    [UN OCHA](https://www.unocha.org/) activities are encapsulated in this\n    tool with respect to Common Operational Datasets maintenance.\n    Find metadata and location information and gazeteer type output for the\n    CODs compatible for applications and for visualizations.\n    The scope of the data varies but comprises enhanced CODs processed in\n    OCHA workflows for roughly 50 countries (as shown in the\n    [COD dashboard](https://cod.unocha.org/)) in the humanitarian support\n    sphere. For more information see the\n    [About page](https://beta.itos.uga.edu/CODV2API/Home/About).\n    Enjoy and comments welcome at ocha-fis-data@un.org.\n\n    ## What are CODs?\n    Common Operational Datasets (CODs) are authoritative reference datasets\n    needed to support operations and decision-making for all actors in a\n    humanitarian response. CODs are 'best available' datasets that ensure\n    consistency and simplify the discovery and exchange of key data for the\n    humanitarian community.\n\n  version: \"2\"\n\n  # termsOfService copied from \"Privacy\" link at https://beta.itos.uga.edu/CODV2API/Home/About\n  termsOfService: https://eits.uga.edu/access_and_security/infosec/pols_regs/policies/privacy/\n  license:\n    name: Several license types\n    url: https://data.humdata.org/about/license\n  contact:\n    name: OCHA Field Information Services\n    url: https://data.humdata.org/user/ocha-fis-data\n    email: ocha-fis-data@un.org\n\nservers:\n  - url: https://beta.itos.uga.edu/CODV2API/api/v1\n    description: COD Version 2 API production server\n\ntags:\n - name: \"COD API\"\n   description: |\n      **COD API Metadata, Downloads, Services and General**.\n      Themes for the COD at the system level.\n      For instance, Administrative Boundary or Population Statistics\n\n - name: Themes\n   description: |\n      Themes for the COD at the system level.\n      For instance, Administrative Boundary or Population Statistics\n\n - name: Versions\n   description: |\n      Version for the COD at the country level.\n\n - name: Lookup\n   description: |\n      Look up for the COD contents at the system level.\n      JSON results are returned in what are commonly refererred to as\n      Gazeteer format.\n\n\n# NOTE: for maintainers, the Team Digitale have a few references about OpenAPI\n#       and CKAN. For example, the file\n# https://github.com/teamdigitale/api-openapi-samples/blob/master/external-apis/api.daf.teamdigitale.it.yaml.src\npaths:\n\n  # NOTE: the will not be documented here\n  # /current:\n\n  /locations:\n    get:\n      tags: [ \"COD API\" ]\n      # description: \u003e\n      #   List available locations(with metadata about each such as preferred name,\n      #   iso codes, etc.) and lists of themes available in each location Returns:\n      #   location name, iso_3, themes\n      responses:\n        '200':\n          description: \u003e\n            List available locations(with metadata about each such as preferred\n            name, iso codes, etc.) and lists of themes available in each\n            location Returns: location name, iso_3, themes\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/LocationMetadataReply'\n\n  /locations/{pCode}:\n    parameters:\n      - $ref: '#/components/parameters/pCodePathParam'\n\n    get:\n      tags: [ \"COD API\" ]\n      # description: \u003e\n      #   List available locations(with metadata about each such as preferred name,\n      #   iso codes, etc.) and lists of themes available in each location Returns:\n      #   location name, iso_3, themes\n\n      responses:\n        '200':\n          description: \u003e\n            List available locations(with metadata about each such as preferred\n            name, iso codes, etc.) and lists of themes available in each\n            location Returns: location name, iso_3, themes\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/LocationMetadataReply'\n        '500':\n          $ref: '#/components/schemas/Error500GenericReply'\n\n  # TODO: this endpint needs testing\n  # TODO: this endpint needs documentation\n  /themes/cod-ab/locations/{pCode}/versions/current:\n    parameters:\n      - $ref: '#/components/parameters/pCodePathParam'\n    get:\n      tags: [ \"COD API\" ]\n      responses:\n        '200':\n          description: \u003e\n            List available locations(with metadata about each such as preferred\n            name, iso codes, etc.) and lists of themes available in each\n            location Returns: location name, iso_3, themes\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/LocationMetadataReply'\n        '500':\n          $ref: '#/components/schemas/Error500GenericReply'\n\n  # https://beta.itos.uga.edu/CODV2API/Help/Api/GET-api-v1-themes-cod-ab-locations-pCode-versions-versionId\n  /themes/cod-ab/locations/{pCode}/versions/{versionId}:\n    parameters:\n      - $ref: '#/components/parameters/pCodePathParam'\n      - $ref: '#/components/parameters/versionIdPathParam'\n    get:\n      tags: [ \"COD API\" ]\n      responses:\n        '200':\n          description: \u003e\n            Provides metadata about a specific COD-AB version (number of\n            levels, level names, notes about levels, number of units within\n            each level, availability of geometry, version dates, etc.) with\n            URLs to various downloadables and services.\n\n            example: /api/v1/themes/cod-ab/locations/GUI/versions/0.4\n          content:\n            application/json:\n              # TODO: add exact response type\n              schema:\n                type: string\n        '500':\n          $ref: '#/components/schemas/Error500GenericReply'\n\n  # https://beta.itos.uga.edu/CODV2API/Help/Api/GET-api-v1-themes-cod-ab-locations-pCode\n  /themes/cod-ab/locations/{pCode}:\n    parameters:\n      - $ref: '#/components/parameters/pCodeNeedsFixPathParam'\n    get:\n      tags: [ \"COD API\" ]\n      responses:\n        '200':\n          description: \u003e\n            Provides metadata about all COD-AB versions at a location\n            ( input iso location returns admin0 pcode, name, version number,\n            valid_from and valid_to with comments). The parameter takes unique\n            location identfier which is a string data type.\n            An /api/v1/themes/cod-ab/locations/sdn/\n\n            example: /api/v1/themes/cod-ab/locations/sdn/ JSON\n          content:\n            application/json:\n              # TODO: add exact response schema type (see example)\n              schema:\n                type: string\n              example:\n                {\n                  \"AllVersionsAtLocation\": [\n                    {\n                      \"admin0Pcode\": \"sdn\",\n                      \"admin0Name_ref\": \" Sudan\",\n                      \"version\": \"Latest\",\n                      \"valid_from\": \"2020-08-31T00:00:00\",\n                      \"valid_to\": \"2021-08-31T00:00:00\",\n                      \"comments\": null\n                    },\n                    {\n                      \"admin0Pcode\": \"sdn\",\n                      \"admin0Name_ref\": \" Sudan\",\n                      \"version\": \"Latest\",\n                      \"valid_from\": \"2020-08-31T00:00:00\",\n                      \"valid_to\": \"2021-08-31T00:00:00\",\n                      \"comments\": null\n                    }\n                  ]\n                }\n        '500':\n          $ref: '#/components/schemas/Error500GenericReply'\n  # https://beta.itos.uga.edu/CODV2API/Help/Api/GET-api-v1-themes-cod-ab-locations-pCode-versions-current-level-z-x-y.pbf\n  \n  # TODO: discover some z b y that would allow test the result.\n  /themes/cod-ab/locations/{pCode}/versions/current/{level}/{z}/{x}/{y}.pbf:\n    parameters:\n      - $ref: '#/components/parameters/pCodeNeedsFixPathParam'\n      - name: \"level\"\n        in: path\n        description: \"Individual level (1 of 0-n)\"\n        required: true\n        schema:\n          type: string\n        example: \"1\"\n      - name: \"z\"\n        in: path\n        description: \"(FIXME: add description)\"\n        required: true\n        schema:\n          type: string\n        example: \"1\"\n      - name: \"x\"\n        in: path\n        description: \"(FIXME: add description)\"\n        required: true\n        schema:\n          type: string\n        example: \"1\"\n      - name: \"y\"\n        in: path\n        description: \"(FIXME: add description)\"\n        required: true\n        schema:\n          type: string\n        example: \"1\"\n    get:\n      tags: [ \"COD API\" ]\n      responses:\n        '200':\n          description: \u003e\n            Retrieve the vector tiles in protobuf (.pbf) format for input\n            country (Pcode) and individual level ( 1 of 0-n). pbf\n\n          content:\n            application/json:\n              # TODO: add exact response schema type (see example)\n              schema:\n                type: string\n        '500':\n          $ref: '#/components/schemas/Error500GenericReply'\n\n        # FIXME: the https://beta.itos.uga.edu/CODV2API/api/v1/themes/cod-ab/locations/SDN/versions/current/1/1/1/1.pbf\n        #        return 200 OK (not something like HTTP/1.1 400 Bad Request)\n        #        and it's content is text/html, not someting like JSON.\n        #            HTTP/1.1 200 OK\n        #            Content-Type: text/html; charset=utf-8\n        #      \n        #            Cannot GET /services/postgis/sdn_adm1/wkb_geometry/vector-tiles/1/1/1.pbf?fields=admin0name_en,admin0pcode,admin1name_en,admin1pcode\n\n  # https://beta.itos.uga.edu/CODV2API/Help/Api/GET-api-v1-themes-cod-ab-locations-pCode-versions-current-format-level\n  /themes/cod-ab/locations/{pCode}/versions/current/{format}/{level}:\n    parameters:\n      - $ref: '#/components/parameters/pCodeNeedsFixPathParam'\n      - $ref: '#/components/parameters/formatParam'\n      - $ref: '#/components/parameters/levelParam'\n    get:\n      tags: [ \"COD API\" ]\n      responses:\n        '200':\n          description: \u003e\n            Downloads of COD data in various formats for current versions of COD Countries\n\n            - {pCode} example: SYR\n              - For a list of country pCode(s) available for administrative\n                boundaries: check out the themes results from the api:\n                /themes\n            - {level} example: 2\n              - For levels, check out the list of levels available for each\n                COD country: at /themes/cod-ab/locations/SYR/versions/current\n            - {format} examples: SHP, vectortiles, Geodatabase, Geoservice, XLSX, CSV, geoJSON\n              - Note that shapefiles (\"SHP\" format) are downloaded for all\n                levels (administrative boundary designations) since they are\n                packaged that way. However Vector tiles,\n              - NEW!!!! are downloaded for the respective level as they are\n                available. For the list of available vector tiles, check out the\n                github and search for the .mbtiles term or column in the\n                spreadsheet: [service deployment status](https://github.com/UGA-ITOSHumanitarianGIS/mapservicedoc/blob/master/Data/AWSDeploymentURLlist.xlsx).\n\n            FIXME 2021-05-04 07:53 UTC:\n            - This does not work \"geoJSON\"\n              - https://beta.itos.uga.edu/CODV2API/api/v1/themes/cod-ab/locations/SYR/versions/current/geoJSON/2\n            - This works \"json\"\n              - https://beta.itos.uga.edu/CODV2API/api/v1/themes/cod-ab/locations/SYR/versions/current/json/2\n\n            TODO: 2021-05-05 07:57 UTC:\n             - Document an example using getJSON / TopoJSON. use as references\n               - https://github.com/topojson/topojson-specification\n               - https://tools.ietf.org/html/rfc7946\n\n          content:\n            # application/json:\n            #   # TODO: add exact response type\n            #   schema:\n            #     type: string\n\n            ## GeoJSON _________________________________________________________\n            # RFC: The GeoJSON Format\n            # https://tools.ietf.org/html/rfc7946#section-12\n            # https://github.com/DataCurationNetwork/data-primers/issues/16\n            application/geo+json:\n              # TODO: add exact response type\n              schema:\n                type: string\n\n            ## XLSX ____________________________________________________________\n            # https://developer.mozilla.org/pt-BR/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\n            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:\n              schema:\n                type: string\n                format: binary\n\n            ### Vectortiles ____________________________________________________\n            # - https://en.wikipedia.org/wiki/Vector_tiles\n            # - https://github.com/mapbox/vector-tile-spec\n            #   - https://github.com/mapbox/vector-tile-spec/blob/master/2.1/README.md#22-multipurpose-internet-mail-extensions-mime\n            application/vnd.mapbox-vector-tile:\n              schema:\n                type: string\n                format: binary\n\n            ### SHP ____________________________________________________________\n            # - https://en.wikipedia.org/wiki/Shapefile\n            #   - Wikipedia says:\n            #     - \"x-gis/x-shapefile\"\n            # - https://www.iana.org/assignments/media-types/media-types.xhtml\n            #   - IANA says:\n            #     - \"application/vnd.shp\"\n            #       - https://www.iana.org/assignments/media-types/application/vnd.shp\n            #     - \"application/vnd.shx\"\n            #       - https://www.iana.org/assignments/media-types/application/vnd.shx\n            #     - \"application/vnd.dbf\"\n            #       - https://www.iana.org/assignments/media-types/application/vnd.dbf\n            application/vnd.shp:\n              schema:\n                type: string\n                format: binary\n\n            ### CSV ____________________________________________________________\n            # - https://tools.ietf.org/html/rfc4180\n            text/csv:\n              schema:\n                type: string\n\n            ### Geodatabase ____________________________________________________\n            # TODO: Geodatabase (review)\n            # - https://community.esri.com/t5/arcgis-runtime-sdk-for-qt/attachment-content-type-is-incorrect-when-adding-to/td-p/593526\n            # - https://www.digipres.org/formats/mime-types/#text/xml\n            # - https://www.digipres.org/formats/sources/fdd/formats/#fdd000295\n            text/xml:\n              schema:\n                type: string\n\n            ### Geoservice _____________________________________________________\n            # TODO: review Geoservice. But seems that is a redirection to\n            #       ArcGIS, like\n            #       - https://beta.itos.uga.edu/CODV2API/api/v1/themes/cod-ab/locations/SYR/versions/current/geoservice/2\n            #         - https://gistmaps.itos.uga.edu/arcgis/rest/services/V00_0/SYR_pcode/MapServer\n\n\n        '500':\n          $ref: '#/components/schemas/Error500GenericReply'\n\n  # https://beta.itos.uga.edu/CODV2API/Help/Api/GET-api-v1-Themes\n  # NOTE: Changed from \"themes\" to \"/themes\"\n  /themes:\n    get:\n      tags: [ \"Themes\" ]\n      responses:\n        '200':\n          description: \u003e\n            Retrieve Theme information in the system.\n          content:\n            application/json:\n              schema:\n                type: string\n                # TODO: Create specific schema\n\n              example:\n                [\n                  {\n                    \"theme_name\": \"Administrative Boundary\",\n                    \"comment\": \"\",\n                    \"countries\": [\n                      \"mli\",\n                      \"per\",\n                      \"\",\n                      \"kdn\",\n                      \"tls\",\n                    ],\n                    \"Total\": 157\n                  },\n                  {\n                    \"theme_name\": \"Population Statistics\",\n                    \"comment\": \"\",\n                    \"countries\": [\n                      \"ton\",\n                      \"ecu\",\n                      \"bgd\",\n                      \"tha\",\n                      \"ssd\",\n                    ],\n                    \"Total\": 5\n                  }\n                ]\n  # https://beta.itos.uga.edu/CODV2API/Help/Api/GET-api-v1-themes-themeId\n  # FIXME (2021-05-04 08:50 UTC):\n  #   This entrypoint is returning not countries at all at this moment.\n  #   (but is returning something)\n  /themes/{themeId}:\n    parameters:\n      - $ref: '#/components/parameters/themeIdParam'\n    get:\n      tags: [ \"Themes\" ]\n      responses:\n        '200':\n          description: \u003e\n            1 is Administrative Boundary.\n            2 is Population Statistics\n          content:\n            application/json:\n              schema:\n                type: string\n                # TODO: Create specific schema\n\n              example:\n                {\n                  \"theme_name\": null,\n                  \"comment\": null,\n                  \"countries\": [],\n                  \"Total\": 0\n                }\n\n  # https://beta.itos.uga.edu/CODV2API/Help/Api/GET-api-Version-id\n  # FIXME: This is returning 404 not found. Needs testing.\n  # {\n  #   \"$id\": \"1\",\n  #   \"message\": \"No HTTP resource was found that matches the request URI 'http://beta.itos.uga.edu/CODV2API/api/v1/Version/2'.\"\n  # }\n  /Version/{id}:\n    parameters:\n      - name: id\n        in: path\n        description: \"(TODO: ADD SHORT DESCRIPTION)\"\n        required: true\n        schema:\n          type: string\n        example: \"1\"\n    get:\n      tags: [ \"Versions\" ]\n      responses:\n        '200':\n          description: \u003e\n            Service Level List available versions of the API.\n          content:\n            application/json:\n              # TODO: Create specific schema\n              schema:\n                type: string\n\n  # https://beta.itos.uga.edu/CODV2API/Areas/HelpPage/Views/Help/~~/Help/Api/GET-api-Versions\n  # FIXME: this is returning 404\n  /Versions:\n    get:\n      tags: [ \"Versions\" ]\n      responses:\n        '200':\n          description: \u003e\n            Service Level List available versions of the API.\n          content:\n            application/json:\n              # TODO: Create specific schema\n              schema:\n                type: string\n\n  # https://beta.itos.uga.edu/CODV2API/Help/Api/GET-api-v1-themes-cod-ab-Lookup-latlng-latlong-wkid-level\n  /themes/cod-ab/Lookup/latlng/{latlong}/{wkid}/{level}:\n    parameters:\n      - $ref: '#/components/parameters/latlongParam'\n      - $ref: '#/components/parameters/wkidParam'\n      - $ref: '#/components/parameters/levelParam'\n    get:\n      tags: [ \"Lookup\" ]\n      responses:\n        '200':\n          description: \u003e\n            Retrieve location by level and latlng parameter with wkid units\n            meters and World Mercator projection. If no levels are entered,\n            all levels are returned. If no version is specified, the current\n            version is returned.\n            \n            Returns: Names and Pcodes\n          content:\n            application/json:\n              # TODO: Create specific schema\n              schema:\n                type: string\n\n              example:\n                [\n                  {\n                    \"admin0Name_ref\": \"Null\",\n                    \"admin0Pcode\": \"BF\",\n                    \"admin0Name_local\": \"Burkina Faso\",\n                    \"admin1Name_ref\": \"Null\",\n                    \"admin1Pcode\": \"BF50\",\n                    \"admin1Name_local\": \"Centre-Ouest\",\n                    \"admin2Name_ref\": \"Null\",\n                    \"admin2Pcode\": \"BF5001\",\n                    \"admin2Name_local\": \"Boulkiemdé\",\n                    \"status\": \"OK\"\n                  }\n                ]\n\n  # https://beta.itos.uga.edu/CODV2API/Help/Api/GET-api-v1-themes-cod-ab-lookup-level-iso2\n  /themes/cod-ab/lookup/{level}/{iso2}:\n    parameters:\n      - $ref: '#/components/parameters/levelParam'\n      - $ref: '#/components/parameters/iso2Param'\n    get:\n      tags: [ \"Lookup\" ]\n      responses:\n        '200':\n          description: \u003e\n            Retrieve place names and Pcodes based on level and country Pcode\n            (i.e. BF for Burkina Faso) If no levels are entered, all places are\n            returned. If no version is specified, the current version is\n            returned.\n            Returns: Names and Pcodes\n          content:\n            application/json:\n              # TODO: Create specific schema\n              schema:\n                type: string\n\n              example:\n                [\n                  {\n                    \"admin0Name_ref\": \"Null\",\n                    \"admin0Pcode\": \"HN\",\n                    \"admin0Name_local\": \"Honduras\",\n                    \"admin1Name_ref\": \"Null\",\n                    \"admin1Pcode\": \"HN11\",\n                    \"admin1Name_local\": \"Islas de La Bahia\",\n                    \"admin2Name_ref\": \"Null\",\n                    \"admin2Pcode\": \"HN1102\",\n                    \"admin2Name_local\": \"Guanaja\",\n                    \"status\": \"OK\"\n                  },\n                  {\n                    \"admin0Name_ref\": \"Null\",\n                    \"admin0Pcode\": \"HN\",\n                    \"admin0Name_local\": \"Honduras\",\n                    \"admin1Name_ref\": \"Null\",\n                    \"admin1Pcode\": \"HN11\",\n                    \"admin1Name_local\": \"Islas de La Bahia\",\n                    \"admin2Name_ref\": \"Null\",\n                    \"admin2Pcode\": \"HN1103\",\n                    \"admin2Name_local\": \"Jose Santos Guardiola\",\n                    \"status\": \"OK\"\n                  }\n                ]\n\ncomponents:\n  schemas:\n    LocationMetadataReply:\n      # https://beta.itos.uga.edu/CODV2API/Help/Api/GET-api-v1-locations\n      # title: |\n      #   List available locations (with metadata about each such as preferred\n      #   name, iso codes, etc.) and lists of themes available in each location\n      #   Returns: location name, iso_3, themes.\n      type: object\n      required:\n        - location_iso\n        - location_name\n        - Themes\n      properties:\n        location_iso:\n          type: string\n          minLength: 3\n          maxLength: 3\n        location_name:\n          type: string\n        Themes:\n          type: array\n          items:\n            enum:\n              - \"Administrative Boundary\"\n              - \"Population Statistics\"\n        status:\n          type: string\n          enum:\n            - OK\n            # TODO: ask when is not OK?\n        total:\n          type: number\n  \n    Error500GenericReply:\n      type: object\n      required:\n        - $id\n        - message\n      properties:\n        \"$id\":\n          type: string\n        message:\n          type: string\n      example:\n        {\n          \"$id\": \"1\",\n          \"message\": \"An error has occurred.\"\n        }\n\n  parameters:\n    pCodePathParam:\n      name: pCode\n      in: path\n      description: \"P-code (Place Code) is (TODO: ADD SHORT DESCRIPTION)\"\n      required: true\n      schema:\n        type: string\n      example: \"HN01\"\n\n    # FIXME: the https://beta.itos.uga.edu/CODV2API/Help/Api/GET-api-v1-themes-cod-ab-locations-pCode\n    #        says its a P-Code, but seems to be an ISO3 country code. We\n    #        need to check this.\n    pCodeNeedsFixPathParam:\n      name: pCode\n      in: path\n      description: \"(TODO: ADD SHORT DESCRIPTION)\"\n      required: true\n      schema:\n        type: string\n      example: \"SDN\"\n      # https://beta.itos.uga.edu/CODV2API/Help/Api/GET-api-v1-themes-cod-ab-locations-pCode-versions-current-format-level\n      # example: \"SYR\"\n\n    versionIdPathParam:\n      name: versionId\n      in: path\n      description: \"(TODO: ADD SHORT DESCRIPTION)\"\n      required: true\n      schema:\n        type: integer\n\n    formatParam:\n      name: format\n      in: path\n      description: |\n        Examples: SHP, vectortiles, Geodatabase, Geoservice, XLSX, CSV, geoJSON\n\n        - Note that shapefiles (\"SHP\" format) are downloaded for all\n          levels (administrative boundary designations) since they are\n          packaged that way. However Vector tiles,\n        - NEW!!!! are downloaded for the respective level as they are\n          available. For the list of available vector tiles, check out the\n          github and search for the .mbtiles term or column in the\n          spreadsheet: [service deployment status](https://github.com/UGA-ITOSHumanitarianGIS/mapservicedoc/blob/master/Data/AWSDeploymentURLlist.xlsx).\n\n      required: true\n      schema:\n        type: string\n        example: geoJSON\n        enum:\n          - SHP\n          - vectortiles\n          - Geodatabase\n          - Geoservice\n          - XLSX\n          - CSV\n          - geoJSON\n\n    levelParam:\n      name: level\n      in: path\n      description: |\n        Example: 2\n        For levels, check out the list of levels available for each COD country:\n        at /themes/cod-ab/locations/SYR/versions/current\n      required: true\n      schema:\n        type: string\n        example: \"2\"\n        enum:\n          - \"1\"\n          - \"2\"\n          - \"3\"\n          - \"4\" # TODO: check if 4 exists\n          - \"5\" # TODO: check if 5 exists\n\n    themeIdParam:\n      name: themeId\n      in: path\n      description: |\n        1 is Administrative Boundary.\n        2 is Population Statistics\n      required: true\n      schema:\n        type: string\n        example: \"2\"\n        enum:\n          - \"1\" # Administrative Boundary.\n          - \"2\" # Population Statistics\n\n    wkidParam:\n      name: wkid\n      in: path\n      description: |\n        (TODO: add wkid short description)\n      required: true\n      schema:\n        type: string\n        example: \"4326\"\n\n    latlongParam:\n      name: latlong\n      in: path\n      description: |\n        (TODO: add wkid short description)\n      required: true\n      schema:\n        type: string\n        example: \"-2.33,12.34\"\n\n    iso2Param:\n      name: iso2\n      in: path\n      description: |\n        country iso2 (i.e. BF for Burkina Faso)\n      required: true\n      schema:\n        type: string\n        example: \"HN\"\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /locations/{pCode}: get: responses: 500: resolve \"#/components/schemas/Error500GenericReply\" reference: invalid response reference: \"#/components/schemas/Error500GenericReply\""
}