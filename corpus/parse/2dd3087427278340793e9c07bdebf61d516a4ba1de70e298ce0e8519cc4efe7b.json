{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/edgexfoundry/device-sdk-go"
		},
		"file": {
			"name": "device-sdk.yaml",
			"size": 0,
			"path": "openapi/v2/device-sdk.yaml",
			"byteSize": 53552,
			"content": "openapi: 3.0.0\ninfo:\n  title: EdgeX Foundry - Device Service API\n  description: This is the definition of the API for Device services in the EdgeX Foundry IOT microservice platform. Device Services are responsible for obtaining Readings from target devices, and for writing values (settings) to them.\n  version: 2.3.0\n\nservers:\n  - url: http://0:49999/api/v2\n    description: URL for local development and testing\n\ncomponents:\n  schemas:\n    AutoEvent:\n      description: \"Identifies a resource which will be read automatically by the device service.\"\n      type: object\n      properties:\n        interval:\n          description: \"Specifies a time interval between reading requests. This may be in a combination of hours, minutes, seconds and milliseconds (h/m/s/ms)\"\n          type: string\n          example: \"1m30s\"\n        onChange:\n          description: \"If true, new Events will only be generated if successive readings differ in value.\"\n          type: boolean\n        sourceName:\n          description: \"SourceName indicates the name of the resource or device command in the device profile which describes the event to generate\"\n          type: string\n      required:\n        - sourceName\n        - frequency\n    NewBaseReading:\n      description: \"A base reading type containing common properties from which more specific reading types inherit. This definition should not be implemented but is used elsewhere to indicate support for a mixed list of simple/binary readings in a single event.\"\n      type: object\n      properties:\n        device:\n          description: \"The name of the device from which the reading originated\"\n          type: string\n        origin:\n          description: \"A Unix timestamp indicating when the reading was originated at the source device (can support nanoseconds)\"\n          type: integer\n    BaseRequest:\n      description: \"Defines basic properties which all use-case specific request DTO instances should support.\"\n      type: object\n      properties:\n        requestId:\n          description: \"Uniquely identifies this request. For implementation, recommend this value be generated by the type's constructor.\"\n          type: string\n          format: uuid\n          example: \"e6e8a2f4-eb14-4649-9e2b-175247911369\"\n        apiVersion:\n          description: \"A version number shows the API version in DTOs.\"\n          type: string\n          example: \"v2\"\n    NewBinaryReading:\n      description: \"An event reading for a binary data type\"\n      allOf:\n        - $ref: '#/components/schemas/NewBaseReading'\n        - type: object\n          properties:\n            binaryValue:\n              description: \"The value of the reading will be found in this property as a byte array\"\n              type: string\n              format: binary\n            mediaType:\n              description: \"E.g. MIME Type, indicates what the content type of the binaryValue property is.\"\n              type: string\n    BaseResponse:\n      description: \"Defines basic properties which all use-case specific response DTO instances should support\"\n      type: object\n      properties:\n        apiVersion:\n          description: \"A version number shows the API version in DTOs.\"\n          type: string\n          example: \"v2\"\n        requestId:\n          description: \"Uniquely identifies the request that resulted in this response.\"\n          type: string\n          format: uuid\n          example: \"e6e8a2f4-eb14-4649-9e2b-175247911369\"\n        statusCode:\n          description: \"A numeric code signifying the operational status of the response.\"\n          type: integer\n        message:\n          description: \"A field that can contain a free-form message, such as an error message.\"\n          type: string\n    Device:\n      description: \"A device is an IoT object represented in EdgeX.\"\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n          description: \"The unique identifier of the device\"\n        created:\n          type: integer\n          description: \"A Unix timestamp indicating when the object was initially persisted to a database\"\n        modified:\n          type: integer\n          description: \"A Unix timestamp indicating when the object was last modified\"\n        name:\n          type: string\n          description: \"The name of the device\"\n        description:\n          type: string\n          description: \"A free-format descriptive field for additional device information\"\n        adminState:\n          type: string\n          enum: [LOCKED, UNLOCKED]\n          description: \"Administrative state of the device, allowing it to be locked for policy reasons\"\n        operatingState:\n          type: string\n          enum: [UP, DOWN, UNKNOWN]\n          description: \"Operating state of the device, indicating whether it is currently responsive\"\n        lastConnected:\n          type: integer\n          description: \"Time (milliseconds) that the device last provided any feedback or responded to any request\"\n        lastReported:\n          type: integer\n          description: \"Time (milliseconds) that the device reported data to the core microservice\"\n        labels:\n          type: array\n          items:\n            type: string\n          description: \"Other labels applied to the device to help with searching\"\n        location:\n          type: object\n          description: \"Device service specific location information\"\n        serviceId:\n          type: string\n          description: \"Associated device service referenced by id\"\n        serviceName:\n          type: string\n          description: \"Associated device service referenced by name\"\n        profileId:\n          type: string\n          description: \"Associated device profile referenced by id\"\n        profileName:\n          type: string\n          description: \"Associated device profile referenced by name\"\n        autoEvents:\n          type: array\n          items:\n            $ref: '#/components/schemas/AutoEvent'\n          description: \"Events which the service should generate automatically from this device.\"\n        protocols:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/ProtocolProperties'\n    DeviceProfile:\n      description: \"A profile defining a class of device to be onboarded, including its capabilities and data format.\"\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n          description: ID uniquely identifies the device profile, a UUID for example\n        name:\n          type: string\n          description: Non-database identifier (must be unique)\n        description:\n          type: string\n          description: Description.\n        created:\n          type: integer\n          description: Created is a timestamp indicating when the entity was created.\n        modified:\n          type: integer\n          description: Modified is a timestamp indicating when the entity was last modified.\n        manufacturer:\n          type: string\n          description: Manufacturer of the device\n        model:\n          type: string\n          description: Model of the device\n        labels:\n          type: array\n          description: Labels used to search for groups of profiles\n          items:\n            type: string\n        deviceResources:\n          type: array\n          items:\n            $ref: '#/components/schemas/DeviceResource'\n        deviceCommands:\n          type: array\n          items:\n            $ref: '#/components/schemas/DeviceCommand'\n    UpdateDeviceService:\n      description: \"A DeviceService is responsible for proxying connectivity between a set of devices and the EdgeX Foundry core services.\"\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n          description: ID uniquely identifies the device, a UUID for example\n        name:\n          type: string\n          description: Non-database identifier(must be unique)\n        labels:\n          type: array\n          description: tags or other labels applied to the device service for search or other identification needs\n          items:\n            type: string\n        baseAddress:\n          type: string\n          description: BaseAddress is a fully qualified URI, e.g. \u003cprotocol\u003e:\\\\\u003chostname\u003e:\u003cport\u003e/\u003coptional path\u003e\n        adminState:\n          type: string\n          enum: [LOCKED, UNLOCKED]\n          description: Device Service Admin State\n    DeviceResource:\n      description: \"DeviceResource represents a value on a device that can be read or written.\"\n      type: object\n      properties:\n        description:\n          type: string\n        name:\n          type: string\n        isHidden:\n          type: boolean\n          description: \"Indicate the visibility of the DeviceResource via a CoreCommand.\"\n        tag:\n          type: string\n        properties:\n          $ref: '#/components/schemas/ResourceProperties'\n        attributes:\n          type: object\n          description: Each Device Service should define required and optional keys\n          additionalProperties:\n            type: string\n      required:\n        - name\n    BaseReading:\n      description: \"A base reading type containing common properties from which more specific reading types inherit. This definition should not be implemented but is used elsewhere to indicate support for a mixed list of simple/binary readings in a single event.\"\n      type: object\n      properties:\n        apiVersion:\n          description: \"A version number shows the API version in DTOs.\"\n          type: string\n        id:\n          description: \"The unique identifier for the reading\"\n          type: string\n          format: uuid\n        created:\n          description: \"A Unix timestamp indicating when (if) the reading was initially persisted to a database.\"\n          type: integer\n        origin:\n          description: \"A Unix timestamp indicating when the reading was originated at the source device (can support nanoseconds)\"\n          type: integer\n        deviceName:\n          description: \"The name of the device from which the reading originated\"\n          type: string\n        resourceName:\n          description: \"The device resource name for the reading\"\n          type: string\n        profileName:\n          description: \"The device profile name for the reading\"\n          type: string\n        valueType:\n          description: \"Indicates the datatype of the value property\"\n          type: string\n      required:\n        - deviceName\n        - resourceName\n        - profileName\n        - origin\n        - valueType\n    SimpleReading:\n      description: \"An event reading for a simple data type\"\n      allOf:\n        - $ref: '#/components/schemas/BaseReading'\n        - type: object\n          properties:\n            value:\n              description: \"A string representation of the reading's value\"\n              type: string\n      required:\n        - value\n    BinaryReading:\n      description: \"An event reading for a binary data type\"\n      allOf:\n        - $ref: '#/components/schemas/BaseReading'\n        - type: object\n          properties:\n            binaryValue:\n              description: \"If the value of the reading is binary, it will be found in this property as a byte array\"\n              type: string\n              format: byte\n            mediaType:\n              description: \"E.g. MIME Type, indicates what the content type of the binaryValue property is if it's populated.\"\n              type: string\n          required:\n            - binaryValue\n            - mediaType\n    Event:\n      description: \"A discrete event containing one or more readings\"\n      properties:\n        apiVersion:\n          description: \"A version number shows the API version in DTOs.\"\n          type: string\n        id:\n          description: \"The unique identifier for the event\"\n          type: string\n          format: uuid\n        deviceName:\n          description: \"The name of the device from which the event originated\"\n          type: string\n        profileName:\n          description: \"The name of the device profile from which the event originated\"\n          type: string\n        created:\n          description: \"A Unix timestamp indicating when (if) the event was initially persisted to a database.\"\n          type: integer\n        origin:\n          description: \"A Unix timestamp indicating when the event was originated at the source device (can support nanoseconds)\"\n          type: integer\n        readings:\n          description: \"One or more readings captured at the time of the event\"\n          type: array\n          items:\n            $ref: '#/components/schemas/SimpleReading'\n        tags:\n          description: \"List of zero or more Tags attached to the Event which give more context to the Event\"\n          title: tags\n          type: object\n          example: {\n            \"Gateway-id\": \"HoustonStore-000123\",\n            \"Latitude\": \"29.630771\",\n            \"Longitude\": \"-95.377603\",\n          }\n      required:\n        - id\n        - deviceName\n        - profileName\n        - origin\n        - readings\n    EventResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n      description: \"A response type for returning an Event to the caller.\"\n      type: object\n      properties:\n        event:\n          $ref: '#/components/schemas/Event'\n    ErrorResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n      description: \"A response type for returning a generic error to the caller.\"\n      type: object\n    ConfigResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n      description: \"Provides a response containing the configuration for the targeted service.\"\n      type: object\n      properties:\n        serviceName:\n          description: \"Outputs the name of the service the response is from\"\n          type: string\n        config:\n          description: \"An object containing the service''s configuration. Please refer to Core Data''s configuration documentation for more details at [EdgeX Foundry Documentation](https://docs.edgexfoundry.org).\"\n          type: object\n    MetricsResponse:\n      allOf:\n      - $ref: '#/components/schemas/BaseResponse'\n      description: \"A response from the /metrics endpoint providing memory and cpu utilization stats.\"\n      type: object\n      properties:\n        serviceName:\n          description: \"Outputs the name of the service the response is from\"\n          type: string\n        metrics:\n          type: object\n          properties:\n            memAlloc:\n              description: \"Alloc is bytes of allocated heap objects which is a uint64 type integer.\"\n              type: integer\n            memFrees:\n              description: \"Frees is the cumulative count of heap objects freed which is a uint64 type integer.\"\n              type: integer\n            memLiveObjects:\n              description: \"The uint64 type integer of live objects is Mallocs - Frees.\"\n              type: integer\n            memMallocs:\n              description: \"The cumulative count of heap objects allocated which is a uint64 type integer.\"\n              type: integer\n            memSys:\n              description: \"The total bytes of memory obtained from the OS which is a uint64 type integer.\"\n              type: integer\n            memTotalAlloc:\n              description: \"Cumulative bytes allocated for heap objects which is a uint64 type integer.\"\n              type: integer\n            cpuBusyAvg:\n              description: \"A uint8 type integer indicates the average level of CPU utilization\"\n              type: number\n    NewDeviceRequest:\n      allOf:\n        - $ref: '#/components/schemas/BaseRequest'\n      description: \"Notification that a new device associated with this device service has been created.\"\n      type: object\n      properties:\n        device:\n          $ref: '#/components/schemas/Device'\n      required:\n        - device\n    NewProfileRequest:\n      allOf:\n        - $ref: '#/components/schemas/BaseRequest'\n      description: \"Notification that a new device profile has been created.\"\n      type: object\n      properties:\n        profile:\n          $ref: '#/components/schemas/DeviceProfile'\n      required:\n        - profile\n    NewProvisionWatcherRequest:\n      allOf:\n        - $ref: '#/components/schemas/BaseRequest'\n      description: \"Notification that a new provision watcher associated with this device service has been created.\"\n      type: object\n      properties:\n        provisionWatcher:\n          $ref: '#/components/schemas/ProvisionWatcher'\n      required:\n        - provisionWatcher\n    NewEventResponse:\n      description: \"A discrete event containing one or more readings\"\n      properties:\n        apiVersion:\n          description: \"A version number shows the API version in DTOs.\"\n          type: string\n          example: \"v2\"\n        device:\n          description: \"The name of the device from which the event originated\"\n          type: string\n        origin:\n          description: \"A Unix timestamp indicating when the event was originated at the source device (can support nanoseconds)\"\n          type: integer\n        readings:\n          description: \"One or more readings captured at the time of the event\"\n          type: array\n          items:\n            $ref: '#/components/schemas/NewBaseReading'\n    PingResponse:\n      description: \"A response from the /ping endpoint indicating that the service is functioning.\"\n      allOf:\n      - $ref: '#/components/schemas/BaseResponse'\n      type: object\n      properties:\n        timestamp:\n          description: \"Outputs the current server timestamp in RFC1123 format\"\n          example: \"Mon, 02 Jan 2006 15:04:05 MST\"\n          type: string\n        serviceName:\n          description: \"Outputs the name of the service the response is from\"\n          type: string\n    DeviceCommand:\n      description: \"Defines read/write capabilities native to the device\"\n      type: object\n      properties:\n        name:\n          type: string\n        isHidden:\n          type: boolean\n          description: \"Indicate the visibility of the DeviceCommand via a CoreCommand.\"\n        readWrite:\n          type: string\n          description: \"Read/Write Permissions set for this DeviceCommand. The value can be R, W, or RW. R enables GET command, and W enables SET command in the Core Command Service.\"\n        resourceOperations:\n          type: array\n          items:\n            $ref: '#/components/schemas/ResourceOperation'\n      required:\n        - name\n        - readWrite\n        - resourceOperations\n    ResourceProperties:\n      description: \"Defines constraints with regard to the range of acceptable values assigned to an event reading and defined as a property within a device profile.\"\n      type: object\n      properties:\n        valueType:\n          type: string\n          description: \"ValueDescriptor Type of property after transformations. Optional: uint8, uint16, uint32, uint64, int8, int16, int32, int64, float32, float64, bool, string, binary, uint8array, uint16array, uint32array, uint64array, int8array, int16array, int32array, int64array, float32array, float64array, boolarray.\"\n        readWrite:\n          type: string\n          description: \"Read/Write Permissions set for this ResourceProperties. The value can be R, W, or RW. R enables GET command, and W enables SET command in the Core Command Service.\"\n        units:\n          type: string\n          description: A string which describes the measurement units associated with a property value  Examples include \"deg/s\", \"degreesFarenheit\", \"G\", or \"% Relative Humidity\"\n        minimum:\n          type: string\n          description: Minimum value that can be get/set from this property\n        maximum:\n          type: string\n          description: Maximum value that can be get/set from this property\n        defaultValue:\n          type: string\n          description: Default value set to this property if no argument is passed. If present, should be compatible with the Type field\n        mask:\n          type: string\n          description: Mask to be applied prior to get/set of property. Only valid where Type is one of the integer types.\n        shift:\n          type: string\n          description: Shift to be applied after masking, prior to get/set of property. Only valid where Type is one of the integer types\n        scale:\n          type: string\n          description: Multiplicative factor to be applied after shifting, prior to get/set of property. Only valid where Type is one of the integer or float types\n        offset:\n          type: string\n          description: Additive factor to be applied after multiplying, prior to get/set of property. Only valid where Type is one of the integer or float types\n        base:\n          type: string\n          description: 'Base for property to be applied to, leave 0 for no power operation (i.e. base ^ property: 2 ^ 10). Only valid where Type is one of the integer or float types.'\n        assertion:\n          type: string\n          description: Required value of the property, set for checking error state.  Failing an assertion condition will mark the device with an error state\n        mediaType:\n          type: string\n          description: A string value used to indicate the type of binary data if Type=binary\n      required:\n        - valueType\n        - readWrite\n    ProtocolProperties:\n      description: \"The properties required to address a device via a particular protocol.\"\n      example: {\"Host\":\"floor4.hq.acme.com\", \"Port\":\"8080\"}\n      type: object\n      additionalProperties:\n        type: string\n    ProvisionWatcher:\n      description: \"A Provision Watcher assigns a subset of discoverable devices to a specified device service, and specifies the device profile which should be used with them, and their initial adminState. The subset is defined by the Identifiers and BlockingIdentifiers, which are matched against a discovered device's protocol properties - the subset contains only devices which match all of the Identifiers and none of the BlockingIdentifiers.\"\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n          description: \"The unique identifier for the provision watcher\"\n        name:\n          type: string\n          description: \"The name of the provision watcher\"\n        created:\n          type: integer\n          description: \"A Unix timestamp indicating when the object was initially persisted to a database\"\n        modified:\n          type: integer\n          description: \"A Unix timestamp indicating when the object was last modified\"\n        labels:\n          type: array\n          description: \"Labels applied to the provision watcher to help with searching\"\n          items:\n            type: string\n        identifiers:\n          type: object\n          additionalProperties:\n            type: string\n          description: \"Properties of a new device which must match in order for this provision watcher to match the new device\"\n        blockingIdentifiers:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              type: string\n          description: \"Properties of a new device which must not match in order for this provision watcher to match the new device\"\n        serviceName:\n          type: string\n          description: \"The device service to which to associate devices which match this watcher\"\n        profileName:\n          type: string\n          description: \"The device profile to which to associate devices which match this watcher\"\n        adminState:\n          type: string\n          enum: [LOCKED, UNLOCKED]\n          description: \"The initial administrative state to apply to devices which match this watcher\"\n        autoEvents:\n          type: array\n          description: \"Autoevents that allow device service to automatically start generating data from new devices\"\n          items:\n            $ref: '#/components/schemas/AutoEvent'\n    ResourceOperation:\n      description: \"Defines an operation of which a device is capable.\"\n      type: object\n      properties:\n        deviceResource:\n          type: string\n          description: The replacement of Object field. Must name a DeviceResource in this profile\n        defaultValue:\n          type: string\n          description: If present, should be compatible with the Type field of the named DeviceResource\n        mappings:\n          type: object\n          description: Only valid where the Type of the named DeviceResource is String\n          additionalProperties:\n            type: string\n      required:\n        - deviceResource\n    NewSimpleReading:\n      description: \"An event reading for a simple data type\"\n      allOf:\n        - $ref: '#/components/schemas/NewBaseReading'\n        - type: object\n          properties:\n            floatEncoding:\n              description: \"Indicates how a float value is encoded, if the value property contains a float.\"\n              type: string\n            valueType:\n              description: \"Indicates the datatype of the value property\"\n              type: string\n            value:\n              description: \"A string representation of the reading's value\"\n              type: string\n    SecretRequest:\n      allOf:\n        - $ref: '#/components/schemas/BaseRequest'\n      description: Defines the secret data to be stored\n      type: object\n      properties:\n        path:\n          description: Specifies the location within the secret to store\n          type: string\n          example: \"credentials\"\n        secretData:\n          description: A list of the key/value pairs of secret data to store\n          type: array\n          items:\n            $ref: '#/components/schemas/SecretDataKeyValue'\n      required:\n        - path\n        - secretData\n    SecretDataKeyValue:\n      description: Defines a key/value pair of the secret data\n      type: object\n      properties:\n        key:\n          description: The key to identify the secret\n          type: string\n          example: \"username\"\n        value:\n          description: The value of the secret\n          type: string\n          example: \"mqtt-user\"\n      required:\n        - key\n        - value\n    SettingRequest:\n      description: \"Defines new values to be written to device resources, as part of an actuation (put) command to a device\"\n      additionalProperties:\n        type: string\n      title: Setting\n      type: object\n      example: {\"AHU-TargetTemperature\": \"28.5\", \"AHU-TargetBand\": \"4.0\"}\n    UpdateDeviceRequest:\n      allOf:\n        - $ref: '#/components/schemas/BaseRequest'\n      description: \"Notification that an existing device associated with this device service has been updated.\"\n      type: object\n      properties:\n        device:\n          $ref: '#/components/schemas/Device'\n      required:\n        - device\n    UpdateProfileRequest:\n      allOf:\n        - $ref: '#/components/schemas/BaseRequest'\n      description: \"Notification that an existing device profile has been updated.\"\n      type: object\n      properties:\n        profile:\n          $ref: '#/components/schemas/DeviceProfile'\n      required:\n        - profile\n    UpdateProvisionWatcherRequest:\n      allOf:\n        - $ref: '#/components/schemas/BaseRequest'\n      description: \"Notification that an existing provision watcher associated with this device service has been updated.\"\n      type: object\n      properties:\n        provisionWatcher:\n          $ref: '#/components/schemas/ProvisionWatcher'\n      required:\n        - provisionWatcher\n    UpdateDeviceServiceRequest:\n      allOf:\n        - $ref: '#/components/schemas/BaseRequest'\n      description: \"A request to update an existing device service definition. 'id' and 'name' must be populated in order to identify the service. Any other property that is populated in the request will be updated. Empty/blank properties will not be considered.\"\n      type: object\n      properties:\n        service:\n          $ref: '#/components/schemas/UpdateDeviceService'\n      required:\n        - service\n    VersionResponse:\n      description: \"A response returned from the /version endpoint whose purpose is to report out the latest version supported by the service.\"\n      allOf:\n      - $ref: '#/components/schemas/BaseResponse'\n      type: object\n      properties:\n        version:\n          description: \"The latest version supported by the service.\"\n          type: string\n        sdk_version:\n          description: \"The version of the SDK with which the service was built.\"\n          type: string\n        serviceName:\n          description: \"Outputs the name of the service the response is from\"\n          type: string\n\n  parameters:\n    correlatedRequestHeader:\n      in: header\n      name: X-Correlation-ID\n      description: \"A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.\"\n      schema:\n        type: string\n        format: uuid\n      required: true\n      example: \"14a42ea6-c394-41c3-8bcd-a29b9f5e6835\"\n\n  headers:\n    correlatedResponseHeader:\n      description: \"A response header that returns the unique correlation ID used to initiate the request.\"\n      schema:\n        type: string\n        format: uuid\n      required: true\n      example: \"14a42ea6-c394-41c3-8bcd-a29b9f5e6835\"\n\n\npaths:\n  /callback/device:\n    parameters:\n      - $ref: '#/components/parameters/correlatedRequestHeader'\n    post:\n      description: \"This call is used by core-metadata to inform the device service of the creation of a new Device\"\n      responses:\n        '200':\n          description: \"Callback successful\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BaseResponse'\n        '400':\n          description: Invalid callback request.\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: Internal server error.\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NewDeviceRequest'\n        required: true\n    put:\n      description: \"This call is used by core-metadata to inform the device service that a Device's characteristics have been updated\"\n      responses:\n        '200':\n          description: \"Callback successful\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BaseResponse'\n        '400':\n          description: Invalid callback request.\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: The device doesn't exist.\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: Internal server error.\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateDeviceRequest'\n        required: true\n\n  /callback/device/name/{name}:\n    parameters:\n      - $ref: '#/components/parameters/correlatedRequestHeader'\n      - name: name\n        in: path\n        required: true\n        schema:\n          type: string\n        description: \"The unique name of a device\"\n    delete:\n      description: \"This call is used by core-metadata to inform the device service that a Device has been deleted\"\n      responses:\n        '200':\n          description: \"Callback successful\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BaseResponse'\n        '404':\n          description: No device exists for the ID provided.\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: Internal server error.\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /callback/profile:\n    parameters:\n      - $ref: '#/components/parameters/correlatedRequestHeader'\n    put:\n      description: \"This call is used by core-metadata to inform the device service that a Device Profile has been updated\"\n      responses:\n        '200':\n          description: \"Callback successful\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BaseResponse'\n        '400':\n          description: Invalid callback request.\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: The device profile doesn't exist.\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: Internal server error.\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateProfileRequest'\n        required: true\n\n  /callback/watcher:\n    parameters:\n      - $ref: '#/components/parameters/correlatedRequestHeader'\n    post:\n      description: \"This call is used by core-metadata to inform the device service of the creation of a new Provision Watcher\"\n      responses:\n        '200':\n          description: \"Callback successful\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BaseResponse'\n        '400':\n          description: Invalid callback request.\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: Internal server error.\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NewProvisionWatcherRequest'\n        required: true\n    put:\n      description: \"This call is used by core-metadata to inform the device service that a Provision Watcher's characteristics have been updated\"\n      responses:\n        '200':\n          description: \"Callback successful\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BaseResponse'\n        '400':\n          description: Invalid callback request.\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: The provision watcher doesn't exist.\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: Internal server error.\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateProvisionWatcherRequest'\n        required: true\n\n  /callback/service:\n    parameters:\n      - $ref: '#/components/parameters/correlatedRequestHeader'\n    put:\n      description: \"This call is used by core-metadata to inform the device service that its characteristics have been updated\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateDeviceServiceRequest'\n        required: true\n      responses:\n        '200':\n          description: \"Callback successful\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BaseResponse'\n        '400':\n          description: Invalid callback request.\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: The device doesn't exist.\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: Internal server error.\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /callback/watcher/name/{name}:\n    parameters:\n      - $ref: '#/components/parameters/correlatedRequestHeader'\n      - name: name\n        in: path\n        required: true\n        schema:\n          type: string\n        description: \"The unique name of a provision watcher\"\n    delete:\n      description: \"This call is used by core-metadata to inform the device service that a Provision Watcher has been deleted\"\n      responses:\n        '200':\n          description: \"Callback successful\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BaseResponse'\n        '404':\n          description: No provision watcher exists for the ID provided.\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: Internal server error.\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /device/name/{name}/{command}:\n    get:\n      description: Request the device/sensor by its name to return the current (or in some cases new) event/reading values for the command or device resource specified. The device service may have cached the latest event/reading for the sensor(s) or it may immediate request new event/reading values depending on the implementation and the device(s)/sensor(s) capability.\n      parameters:\n        - $ref: '#/components/parameters/correlatedRequestHeader'\n        - in: path\n          name: name\n          required: true\n          schema:\n            type: string\n          example: sensor01\n          description: \"A name uniquely identifying a device.\"\n        - in: path\n          name: command\n          required: true\n          schema:\n            type: string\n          example: command01\n          description: \"A name uniquely identifying a command.\"\n        - in: query\n          name: ds-pushevent\n          schema:\n            type: string\n            enum:\n              - yes\n              - no\n            default: no\n          example: yes\n          description: \"If set to yes, a successful GET will result in an event being pushed to the EdgeX system\"\n        - in: query\n          name: ds-returnevent\n          schema:\n            type: string\n            enum:\n              - yes\n              - no\n            default: yes\n          example: no\n          description: \"If set to no, there will be no Event returned in the http response\"\n      responses:\n        '200':\n          description: String as returned by the device/sensor through the device service.\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/EventResponse'\n        '404':\n          description: If no device exists by the name provided or the command is unknown.\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '405':\n          description: If the requested command exists but not for GET, or the resource is marked as write-only.\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '423':\n          description: If the device or service is locked (admin state) or disabled (operating state).\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: The device driver is unable to process the request, or too many values were returned.\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    put:\n      description: Request the actuator by its name to trigger a action or set a current value for the command or device resource specified.\n      parameters:\n        - $ref: '#/components/parameters/correlatedRequestHeader'\n        - in: path\n          name: name\n          required: true\n          schema:\n            type: string\n          example: sensor\n        - in: path\n          name: command\n          required: true\n          schema:\n            type: string\n          example: allValues\n      responses:\n        '200':\n          description: The PUT command was successful.\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BaseResponse'\n        '404':\n          description: If no device exists for the name provided or the command is unknown.\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '405':\n          description: If the requested command exists but not for PUT, or the resource is marked as read-only.\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '423':\n          description: If the device or service is locked (admin state) or disabled (operating state).\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: The device driver is unable to process the request.\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SettingRequest'\n        required: true\n\n  /secret:\n    parameters:\n      - $ref: '#/components/parameters/correlatedRequestHeader'\n    post:\n      summary: Stores a secret to the secure Secret Store\n      requestBody:\n        content:\n          application/json:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/SecretRequest'\n        required: true\n      responses:\n        '201':\n          description: \"Created\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BaseResponse'\n        '400':\n          description: \"Invalid request.\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \"An unexpected error happened on the server.\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /validate/device:\n    post:\n      summary: Run the device-specific validation for a Device's Properties.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NewDeviceRequest'\n        required: true\n      responses:\n        '200':\n          description: Validation succeed or validator implicitly not implemented\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BaseResponse'\n        '400':\n          description: Invalid validation request.\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: Validation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /discovery:\n    post:\n      description: Run the discovery request for a Device Service. No request body is required.\n      responses:\n        '202':\n          description: The service is running the discovery request.\n        '423':\n          description: The service is disabled or administratively locked.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: An unexpected error occurred on the server\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '501':\n          description: The device driver does not implement discovery.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '503':\n          description: Discovery is disabled by configuration.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /config:\n    get:\n      summary: \"Returns the current configuration of the service.\"\n      responses:\n        '200':\n          description: \"OK\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConfigResponse'\n        '500':\n          description: Interval Server Error\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /metrics:\n    get:\n      summary: \"An endpoint that can be used to obtain CPU/Memory usage stats for a given service.\"\n      responses:\n        '200':\n          description: \"OK\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MetricsResponse'\n        '500':\n          description: Interval Server Error\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /ping:\n    get:\n      summary: \"A simple 'ping' endpoint that can be used as a service healthcheck\"\n      responses:\n        '200':\n          description: \"OK\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PingResponse'\n        '500':\n          description: Interval Server Error\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /version:\n    get:\n      summary: \"A simple 'version' endpoint that will return the current version of the service\"\n      responses:\n        '200':\n          description: \"OK\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VersionResponse'\n        '500':\n          description: Interval Server Error\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /device/name/{name}/{command}: get: parameters: parse parameter \"ds-pushevent\": schema: parse enum values: parse value \"true\": expected type \"string\", got \"bool\""
}