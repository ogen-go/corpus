{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/osamhack2020/Web_SpecialForces_SpecialWarrior"
		},
		"file": {
			"name": "specialforces.v1.yaml",
			"path": "reference/specialforces.v1.yaml",
			"content": "openapi: 3.0.0\ninfo:\n  title: SpecialForces API Documentation\n  version: '1.0'\n  contact:\n    name: Seong Cheol Park\n    url: '-'\n    email: gorae02@gmail.com\n  description: |-\n    Special Forces API documentation\n\n    \u003e\n    모든 API는 로그인 시 발급되는 access_token을 이용해 액세스 하여야 하며,\u003cbr\u003e\n    access_token이 없거나, 유효하지 않을 시 401 에러와 오류 메시지를 반환합니다.\n\n    \u003e Changelog\u003cbr\u003e\n    2020-10-07 warrior 테이블에 name(이름) 필드 추가\u003cbr\u003e\n    2020-10-10 heartrate 테이블 및 API 추가\u003cbr\u003e\n    2020-10-13 find_afflication API 구현 완료, 유저정보 가져오기 API 응답에 unit_full_name 추가, 문서 오류 수정(minor)\u003cbr\u003e\n    2020-10-17 몸무게, 키 FLOAT 로 수정, add_exercise_profile 에 exercise_time 단위 초로 변경\u003cbr\u003e\n    2020-10-22 Token Refresh 추가(로그인 API 확인)\n    2020-10-24 전우목록을 같은 소속에서만 받아오도록 변경, 전우 요청,거절 API 제거\n\n    \u003e 운동 종류\u003cbr\u003e\n    {\u003cbr\u003e\n    0: 팔굽\u003cbr\u003e\n    1: 윗몸\u003cbr\u003e\n    2: 뜀뛰기\u003cbr\u003e\n    3: 벤치프레스\u003cbr\u003e\n    4: 렛풀다운 \u003cbr\u003e\n    5: 레그 익스텐션 \u003cbr\u003e\n    6: 레그 프레스 \u003cbr\u003e\n    7: 케이블 크로스오버\u003cbr\u003e\n    }\nservers:\n  - url: 'https://spefor.ml'\npaths:\n  /api/v1/auth/login:\n    post:\n      summary: Login API\n      operationId: post-api-v1-auth-login\n      responses:\n        '200':\n          description: 토큰 정보 응답\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  access_token:\n                    type: string\n                  expires_in:\n                    type: integer\n                  token_type:\n                    type: string\n                  scope: {}\n                  refresh_token:\n                    type: string\n              examples:\n                로그인 응답:\n                  value:\n                    access_token: 3acfb3bea5cefc3aecc0b25f50b9539b6f5df3dc\n                    expires_in: 3600\n                    token_type: Bearer\n                    scope: null\n                    refresh_token: 636b6291c0398a16244f08b3fae42a4b277342ab\n                리프레쉬 응답:\n                  value:\n                    access_token: 25a06b36216e14db7d1896ceb33e9af73ccc880b\n                    expires_in: 3600\n                    token_type: Bearer\n                    scope: null\n                    refresh_token: 3c5efac745fdeec275191f4fd575eea8d52f9434\n      description: 로그인 / 리프레쉬\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                grant_type:\n                  type: string\n                  description: password/refresh_token 중 선택\n                client_id:\n                  type:\n                    - string\n                    - 'null'\n                  description: 리프레쉬 시에는 불필요\n                user_id:\n                  type: string\n                  description: 리프레쉬 시에는 불필요\n                password:\n                  type: string\n                  description: 리프레쉬 시에는 불필요\n                refresh_token:\n                  type:\n                    - string\n                    - 'null'\n                  description: 리프레쉬 시에만 필요\n              required:\n                - grant_type\n                - client_id\n                - user_id\n                - password\n                - refresh_token\n            examples:\n              로그인 예제:\n                value:\n                  grant_type: password\n                  client_id: app\n                  user_id: someuser\n                  password: verystrongpassword\n              리프레쉬 예제:\n                value:\n                  grant_type: refresh_token\n                  client_id: app\n                  refresh_token: 636b6291c0398a16244f08b3fae42a4b277342ab\n        description: |\n          \u003e앱에서 Login 요청 시 grant_type=\"password\", client_id=\"app\" 입니다.\u003cbr\u003e\n          Content-Type 에 유의하시기 바랍니다.(application/json)\n\n          \u003eRefresh 요청 시 grant_type=\"refresh_token\", refresh_token=\"{{ Refresh_Token }}\" 입니다\n      parameters: []\n      security: []\n      tags:\n        - 멤버\n  /api/v1/test/testapi:\n    get:\n      summary: API 접근 테스트 API\n      tags:\n        - 테스트\n      responses:\n        '200':\n          description: API 접근 성공\n          headers: {}\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n              examples:\n                example-1:\n                  value:\n                    success: true\n                    message: API 접근 성공!\n        '401':\n          description: Unauthorized (접근 권한 없음 - Token Invalid)\n      operationId: get-api-v1-test-testapi\n      description: API 사용 테스트\n  /api/v1/test/testconnection:\n    get:\n      summary: 서버 접속 테스트 API\n      tags:\n        - 테스트\n      responses:\n        '200':\n          description: 서버 접속 성공\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n              examples:\n                example-1:\n                  value:\n                    success: true\n                    message: server all good!\n      operationId: get-api-v1-test-test2\n      description: 서버 접속 테스트 API\n      security: []\n    parameters: []\n  /api/v1/member/register:\n    parameters: []\n    post:\n      summary: 회원가입 API\n      operationId: post-api-v1-member-register\n      responses:\n        '200':\n          description: 회원가입 성공\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n              examples:\n                example-1:\n                  value:\n                    success: true\n                    message: ''\n          headers: {}\n        '400':\n          description: '회원가입 실패(중복, 생략등의 이유)'\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n              examples:\n                example-1:\n                  value:\n                    success: false\n                    message: 소속은(는) 공백일 수 없습니다\n      description: |-\n        회원가입 API\n\n        계급은 class 입니다 0: 이병, 1:일병, 2:상병, 3:병장\n\n        \u003e 2020-10-07 이름 추가했습니다\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                user_id:\n                  type: string\n                password:\n                  type: string\n                class:\n                  type: integer\n                  description: |-\n                    계급입니다.\n                    입력되지 않을 시 자동으로 이병(기본값 0)\n                cadre_flag:\n                  type: boolean\n                  description: |-\n                    간부 여부입니다.\n                    입력되지 않을 시 자동으로 병사(기본값 false)\n                army_num:\n                  type: string\n                unit_id:\n                  type: integer\n                name:\n                  type: string\n                  description: 이름\n                email:\n                  type: string\n                phone:\n                  type: string\n              required:\n                - user_id\n                - password\n                - army_num\n                - unit_id\n                - name\n                - email\n                - phone\n            examples:\n              example-1:\n                value:\n                  user_id: someuser\n                  password: verystrongpassword\n                  class: 1\n                  cadre_flag: false\n                  army_num: 20-00000000\n                  unit_id: 8839\n                  name: 나야나\n                  email: em@i.l\n                  phone: 010-0000-0000\n        description: 회원가입 요청\n      security: []\n      tags:\n        - 멤버\n  /api/v1/member/find_afflication:\n    post:\n      summary: 부대 검색 API\n      tags:\n        - 멤버\n      responses:\n        '200':\n          description: OK\n          headers: {}\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  result:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        unit_full_name:\n                          type: string\n                        unit_id:\n                          type: string\n              examples:\n                example-1:\n                  value:\n                    success: true\n                    result:\n                      - unit_full_name: 지상작전사령부 정보통신여단 제112통신대대 1중대\n                        unit_id: '1'\n                      - unit_full_name: 지상작전사령부 정보통신여단 제112통신대대 2중대\n                        unit_id: '2'\n                      - unit_full_name: 지상작전사령부 정보통신여단 제112통신대대 3중대\n                        unit_id: '3'\n                      - unit_full_name: 지상작전사령부 정보통신여단 제112통신대대 본부중대\n                        unit_id: '4'\n                example-2:\n                  value:\n                    success: true\n                    result:\n                      - unit_full_name: 지상작전사령부 정보통신여단 제112통신대대 2중대\n                        unit_id: '2'\n      operationId: post-api-v1-member-findafflication\n      description: 부대를 substring 으로 검색하여 결과를 반환합니다\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                substring:\n                  type: string\n              required:\n                - substring\n            examples:\n              example-1:\n                value:\n                  substring: 정보통신여단\n              example-2:\n                value:\n                  substring: 2중대\n      security: []\n    parameters: []\n  /api/v1/exercise/add_exercise_profile:\n    post:\n      summary: 운동 프로필 추가 API\n      operationId: post-api-v1-exercise-add_exercise_profile\n      responses:\n        '200':\n          description: 처리결과 반환\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n              examples: {}\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n                    minLength: 1\n                required:\n                  - success\n                  - message\n              examples:\n                example-1:\n                  value:\n                    success: false\n                    message: 입력 된 기록이 없습니다\n        '':\n          content:\n            application/json:\n              schema:\n                type: object\n      description: |\n        자신의 아이디에 (오늘의) 운동 프로필을 추가합니다. 지난 날짜는 추가할 수 없습니다.\n        \u003e !! exercise_weight, exercise_count, exercise_time 중 하나는 입력해야 합니다.\n\n        \u003e운동 종류는 ___/exercise/get_exercises 에서 가져올 수 있음. 실 데이터는 Overview 참고\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                exercise_id:\n                  type: integer\n                  description: 운동 종류 코드입니다\n                exercise_weight:\n                  type: integer\n                exercise_count:\n                  type: integer\n                exercise_time:\n                  type: integer\n                  description: 초 단위\n              required:\n                - exercise_id\n            examples:\n              example-1:\n                value:\n                  exercise_id: 0\n                  exercise_weight: 0\n                  exercise_count: 100\n                  exercise_time: 30\n        description: |-\n          1번 예제\n          \u003e 오늘 윗몸일으키기 100개, 30분 동안 함\n      tags:\n        - 운동\n    parameters: []\n  /api/v1/profile/set_weight:\n    post:\n      summary: 체중 입력 API\n      operationId: post-api-v1-profile-setweight\n      responses:\n        '200':\n          description: 처리 결과 반환\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n              examples:\n                example-1:\n                  value:\n                    success: true\n                    message: ''\n      description: |-\n        자신의 체중을 입력합니다. \u003cbr\u003e\n        \u003e체중 기입일 ~ 미기입기간 ~ 기입일 사이는 현재 입력하는 체중으로 채워집니다.\u003cbr\u003e 예) 7월 15일, 7월 20일에 180kg 입력했다면, 7/15 ~ 7/20은 180kg.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                weight:\n                  type: integer\n              required:\n                - weight\n            examples:\n              example-1:\n                value:\n                  weight: 180\n        description: 체중 입력\n      tags:\n        - 프로필\n    parameters: []\n  /api/v1/profile/set_sleeptime:\n    parameters: []\n    post:\n      summary: 수면시간 입력 API\n      operationId: post-api-v1-profile-set_sleeptime\n      responses:\n        '200':\n          description: 처리 결과 반환\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n              examples:\n                example-1:\n                  value:\n                    success: true\n                    message: ''\n      description: 수면 시간 입력 API입니다. 수면 시간을 입력받아 오늘의 profile에 저장합니다.\n      tags:\n        - 프로필\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                sleep_time:\n                  type: integer\n                  description: 분단위\n            examples:\n              example-1:\n                value:\n                  sleep_time: 480\n  /api/v1/friend/get_friend_list:\n    get:\n      summary: 전우 목록 API\n      tags:\n        - 전우\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  result:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        user_id:\n                          type: string\n              examples:\n                example-1:\n                  value:\n                    success: true\n                    result:\n                      - user_id: skyinpus\n                      - user_id: somefriend\n                      - user_id: someone\n                      - user_id: testaccount\n      operationId: get-api-friend-list\n      description: 자신의 전우 목록을 리스팅합니다\n    parameters: []\n  /api/v1/member/get_userinfo:\n    get:\n      summary: 유저 정보 API\n      tags:\n        - 멤버\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  result:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        user_id:\n                          type: string\n                        password:\n                          type: string\n                        cadre_flag:\n                          type: string\n                        admin_flag:\n                          type: string\n                        class:\n                          type: string\n                        army_num:\n                          type: string\n                        unit_id:\n                          type: string\n                        name:\n                          type: string\n                        email:\n                          type: string\n                        phone:\n                          type: string\n                        created_at:\n                          type: string\n                        accessed_at:\n                          type: string\n                        unit_full_name:\n                          type: string\n                          description: 소속된 부대명\n              examples:\n                example-1:\n                  value:\n                    success: true\n                    result:\n                      - user_id: qwe\n                        password: 056eafe7cf52220de2df36845b8ed170c67e23e3\n                        cadre_flag: '1'\n                        admin_flag: '0'\n                        class: '0'\n                        army_num: qwe\n                        unit_id: '123'\n                        name: 김철수\n                        email: qwe\n                        phone: qwe\n                        created_at: '2020-10-07 19:35:41'\n                        accessed_at: '2020-10-07 23:54:22'\n        '':\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  result:\n                    type: array\n                    items:\n                      required:\n                        - user_id\n                        - class\n                        - army_num\n                        - unit_id\n                        - email\n                        - phone\n                        - created_at\n                      properties:\n                        user_id:\n                          type: string\n                        class:\n                          type: integer\n                        army_num:\n                          type: string\n                        unit_id:\n                          type: integer\n                        name:\n                          type: string\n                        email:\n                          type: string\n                        phone:\n                          type: string\n                        created_at:\n                          type: string\n                required:\n                  - success\n                  - result\n              examples:\n                example-1:\n                  value:\n                    success: true\n                    result:\n                      - user_id: string\n                        class: 0\n                        army_num: string\n                        unit_id: 123\n                        email: string\n                        phone: string\n                        created_at: '2020-09-29 23:44:40'\n      operationId: get-api-v1-member-get_userinfo\n      description: |-\n        유저의 정보를 반환하는 API 입니다. \n\n        주로 로그인 직후에 유저 정보를 받아오거나, 유저 정보를 갱신할 필요가 있을 때 사용합니다.\n\n        \u003e2020-10-07 이름추가\n    parameters: []\n  /api/v1/exercise/get_exercise_ids:\n    get:\n      summary: 운동 종목 모두 가져오기 API\n      tags:\n        - 운동\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  result:\n                    type: array\n                    items:\n                      type: string\n              examples:\n                example-1:\n                  value:\n                    success: true\n                    result:\n                      - exercise_id: '0'\n                        exercise_name: 팔굽혀펴기\n                        exercise_part: ''\n                      - exercise_id: '1'\n                        exercise_name: 윗몸일으키기\n                        exercise_part: ''\n                      - exercise_id: '2'\n                        exercise_name: 뜀뛰기\n                        exercise_part: ''\n                      - exercise_id: '3'\n                        exercise_name: 벤치프레스\n                        exercise_part: ''\n                      - exercise_id: '4'\n                        exercise_name: 렛풀다운\n                        exercise_part: ''\n                      - exercise_id: '5'\n                        exercise_name: 레그 익스텐션\n                        exercise_part: ''\n                      - exercise_id: '6'\n                        exercise_name: 레그 프레스\n                        exercise_part: ''\n                      - exercise_id: '7'\n                        exercise_name: 케이블 크로스오버\n                        exercise_part: ''\n        '':\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  result:\n                    type: array\n                    uniqueItems: true\n                    minItems: 1\n                    items:\n                      required:\n                        - exercise_id\n                        - exercise_name\n                        - exercise_part\n                      properties:\n                        exercise_id:\n                          type: string\n                          minLength: 1\n                        exercise_name:\n                          type: string\n                          minLength: 1\n                        exercise_part:\n                          type: string\n                required:\n                  - success\n                  - result\n              examples:\n                example-1:\n                  value:\n                    success: true\n                    result:\n                      - exercise_id: '0'\n                        exercise_name: 팔굽혀펴기\n                        exercise_part: ''\n                      - exercise_id: '1'\n                        exercise_name: 윗몸일으키기\n                        exercise_part: ''\n                      - exercise_id: '2'\n                        exercise_name: 뜀뛰기\n                        exercise_part: ''\n                      - exercise_id: '3'\n                        exercise_name: 벤치프레스\n                        exercise_part: ''\n                      - exercise_id: '4'\n                        exercise_name: 렛풀다운\n                        exercise_part: ''\n                      - exercise_id: '5'\n                        exercise_name: 레그 익스텐션\n                        exercise_part: ''\n                      - exercise_id: '6'\n                        exercise_name: 레그 프레스\n                        exercise_part: ''\n                      - exercise_id: '7'\n                        exercise_name: 케이블 크로스오버\n                        exercise_part: ''\n          description: 결과\n      operationId: get-api-v1-exercise-get_exercises_ids\n      description: 가능한 운동(종목) 정보 을 모두 가져옵니다.\n    parameters: []\n  /api/v1/profile/set_height:\n    post:\n      summary: 신장 입력 API\n      operationId: post-api-v1-profile-set_height\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n                required:\n                  - success\n                  - message\n              examples:\n                example-1:\n                  value:\n                    success: true\n                    message: ''\n      tags:\n        - 프로필\n      description: 신장 입력(cm)\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                height:\n                  type: integer\n            examples:\n              example-1:\n                value:\n                  height: 180\n  /api/v1/profile/set_calorie:\n    post:\n      summary: 칼로리 입력 API\n      operationId: post-api-v1-profile-set_calorie\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n                required:\n                  - success\n                  - message\n              examples:\n                example-1:\n                  value:\n                    success: true\n                    message: ''\n      tags:\n        - 프로필\n      description: 칼로리 입력 (kcal)\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                calorie:\n                  type: integer\n            examples:\n              example-1:\n                value:\n                  calorie: 2200\n  /api/v1/profile/get_profile:\n    post:\n      summary: 일일 프로필 가져오기 API\n      operationId: post-api-v1-profile-get_profile\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  result:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        profile_id:\n                          type: integer\n                        user_id:\n                          type: string\n                        date:\n                          type: string\n                          description: YYYY-MM-DD\n                        weight:\n                          type:\n                            - 'null'\n                            - number\n                          description: float\n                        height:\n                          type:\n                            - 'null'\n                            - number\n                          description: float\n                        calorie:\n                          type:\n                            - 'null'\n                            - number\n                          description: float\n                        sleep_time:\n                          type:\n                            - 'null'\n                            - number\n                          description: 'float, minute'\n                        heartrate_average:\n                          type:\n                            - integer\n                            - 'null'\n              examples:\n                example-1:\n                  value:\n                    success: true\n                    result:\n                      - profile_id: 19\n                        user_id: string\n                        date: '2020-10-06'\n                        weight: 3\n                        height: null\n                        calorie: null\n                        sleep_time: null\n                        heartrate_average: null\n                example-2:\n                  value:\n                    success: true\n                    result:\n                      - profile_id: 16\n                        user_id: string\n                        date: '2020-10-05'\n                        weight: 3\n                        height: 190\n                        calorie: 2200\n                        sleep_time: 240\n                        heartrate_average: null\n                example-3:\n                  value:\n                    success: true\n                    result:\n                      - profile_id: 42\n                        user_id: string\n                        date: '2020-10-10'\n                        weight: null\n                        height: null\n                        calorie: null\n                        sleep_time: null\n                        heartrate_average: 120\n      description: 오늘 혹은 지정한 날짜의 일일 프로필을 가져옵니다.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                date:\n                  type: string\n                  description: '기본값 오늘(Today), YYYY-MM-DD'\n            examples:\n              example-1:\n                value: {}\n              example-2:\n                value:\n                  date: '2020-10-05'\n        description: date를 입력하지 않으면 자동으로 오늘의 일일 프로필을 가져옵니다\n      tags:\n        - 프로필\n  /api/v1/profile/get_sleeptime_data:\n    get:\n      summary: 수면시간 데이터 가져오기 API\n      tags:\n        - 프로필\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  result:\n                    type: array\n                    description: 결과\n                    items:\n                      type: object\n                      properties:\n                        profile_id:\n                          type: integer\n                        date:\n                          type: string\n                        sleep_time:\n                          type: integer\n                  min_max_avg:\n                    type: array\n                    description: '최소,최대,평균'\n                    items:\n                      type: object\n                      properties:\n                        min:\n                          type: integer\n                        max:\n                          type: integer\n                        average:\n                          type: integer\n              examples:\n                example-1:\n                  value:\n                    success: true\n                    result:\n                      - profile_id: 7\n                        date: '2020-10-04'\n                        sleep_time: 360\n                      - profile_id: 16\n                        date: '2020-10-05'\n                        sleep_time: 240\n                      - profile_id: 19\n                        date: '2020-10-06'\n                        sleep_time: 220\n                    min_max_avg:\n                      - min: 220\n                        max: 360\n                        average: 273\n      operationId: get-api-v1-profile-get_sleeptime_data\n      description: '수면시간을 일별로 30일치를 가져옵니다. (데이터들의 최소,최대,평균이 함께 제공됩니다)'\n  /api/v1/profile/get_weight_data:\n    get:\n      summary: 체중 데이터 가져오기 API\n      tags:\n        - 프로필\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  result:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        profile_id:\n                          type: integer\n                        date:\n                          type: string\n                          minLength: 1\n                        weight:\n                          type: integer\n                  min_max_avg:\n                    type: array\n                    uniqueItems: true\n                    minItems: 1\n                    items:\n                      type: object\n                      properties:\n                        min:\n                          type: integer\n                        max:\n                          type: integer\n                        average:\n                          type: integer\n              examples:\n                example-1:\n                  value:\n                    success: true\n                    result:\n                      - profile_id: 7\n                        date: '2020-10-04'\n                        weight: 30\n                      - profile_id: 16\n                        date: '2020-10-05'\n                        weight: 31\n                      - profile_id: 19\n                        date: '2020-10-06'\n                        weight: 32\n                    min_max_avg:\n                      - min: 30\n                        max: 32\n                        average: 31\n      operationId: get-api-v1-profile-get_weight_data\n      description: |-\n        체중을 일별로 30일치를 가져옵니다. (데이터들의 최소,최대,평균이 함께 제공됩니다)\n        \u003e입력① ~ 다음입력② 사이의 체중은 ①로 유지됩니다. (회의내용)\u003cbr\u003e\n        Ex) 2020-10-01 30kg 입력, 2020-10-06 40kg 입력시\u003cbr\u003e\n        2020-10-01 ~ 2020-10-05 -\u003e 30kg\u003cbr\u003e2020-10-06 -\u003e 40kg \n  /api/v1/exercise/get_exercise_profile_data:\n    post:\n      summary: 운동 프로필 가져오기 API\n      operationId: post-api-v1-exercise-get_exercise_profile_data\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  result:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        exercise_profile_id:\n                          type: integer\n                        exercise_id:\n                          type: integer\n                          description: 운동 종류입니다\n                        exercise_weight:\n                          type: integer\n                        exercise_count:\n                          type: integer\n                        exercise_time:\n                          type: integer\n                          description: in minutes\n                        profile_id:\n                          type: string\n                        user_id:\n                          type: string\n                        created_at:\n                          type: string\n              examples:\n                example-1:\n                  value:\n                    success: true\n                    result:\n                      - exercise_profile_id: 2\n                        exercise_id: 0\n                        exercise_weight: 0\n                        exercise_count: 500\n                        exercise_time: 0\n                        profile_id: 42\n                        user_id: string\n                        created_at: '2020-10-10'\n                      - exercise_profile_id: '3'\n                        exercise_id: '0'\n                        exercise_weight: '0'\n                        exercise_count: '500'\n                        exercise_time: '0'\n                        profile_id: '42'\n                        user_id: string\n                        created_at: '2020-10-10'\n                      - exercise_profile_id: '4'\n                        exercise_id: '0'\n                        exercise_weight: '0'\n                        exercise_count: '500'\n                        exercise_time: '0'\n                        profile_id: '42'\n                        user_id: string\n                        created_at: '2020-10-10'\n                      - exercise_profile_id: '5'\n                        exercise_id: '0'\n                        exercise_weight: '0'\n                        exercise_count: '500'\n                        exercise_time: '0'\n                        profile_id: '42'\n                        user_id: string\n                        created_at: '2020-10-10'\n                      - exercise_profile_id: '7'\n                        exercise_id: '0'\n                        exercise_weight: '0'\n                        exercise_count: '400'\n                        exercise_time: '0'\n                        profile_id: '42'\n                        user_id: string\n                        created_at: '2020-10-10'\n      description: 지정한 날짜의 운동 프로필을 가져옵니다.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                date:\n                  type: string\n                  description: 기본값 오늘\n            examples:\n              example-1:\n                value: {}\n              example-2:\n                value:\n                  date: '2020-10-10'\n        description: date 기본값은 오늘입니다.(미지정시 오늘)\n      tags:\n        - 운동\n  /api/v1/heartrate/get_heartrate_profile_by_date:\n    post:\n      summary: 날짜로 심박수 가져오기 API\n      operationId: post-api-v1-heartrate-get_heartrate_profile_by_date\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  result:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        date:\n                          type: string\n                        result:\n                          type: array\n                          items:\n                            type: object\n                            properties:\n                              heartrate_profile_id:\n                                type: string\n                              heartrate:\n                                type: string\n                              profile_id:\n                                type: string\n                              user_id:\n                                type: string\n                              created_at:\n                                type: string\n                        min_max_avg:\n                          type: array\n                          items:\n                            type: object\n                            properties:\n                              min:\n                                type: string\n                              max:\n                                type: string\n                              average:\n                                type: string\n              examples:\n                example-1:\n                  value:\n                    success: true\n                    result:\n                      - date: '2020-10-10'\n                        result:\n                          - heartrate_profile_id: '1'\n                            heartrate: '80'\n                            profile_id: '42'\n                            user_id: string\n                            created_at: '2020-10-10 22:56:57'\n                          - heartrate_profile_id: '2'\n                            heartrate: '90'\n                            profile_id: '42'\n                            user_id: string\n                            created_at: '2020-10-10 23:05:03'\n                          - heartrate_profile_id: '3'\n                            heartrate: '100'\n                            profile_id: '42'\n                            user_id: string\n                            created_at: '2020-10-10 23:05:06'\n                        min_max_avg:\n                          - min: '80'\n                            max: '100'\n                            average: '90'\n      description: |-\n        지정된 날짜의 모든 심박수 데이터를 가져옵니다.\n\n        그 날의 최대, 최소, 평균이 포함되어 있습니다.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                date:\n                  type: string\n                  description: YYYY-mm-dd (기본값 오늘)\n        description: ''\n      tags:\n        - 심박수\n  /api/v1/heartrate/add_heartrate_profile:\n    parameters: []\n    post:\n      summary: 심박수 프로필 추가 API\n      operationId: post-api-v1-heartrate-add_heartrate_profile\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n      description: 오늘 일일 프로필에 심박수 프로필을 추가합니다.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                heartrate:\n                  type: integer\n                  description: |\n                    심박수\n              required:\n                - heartrate\n      tags:\n        - 심박수\n  /api/v1/heartrate/get_heartrate_profile_data:\n    get:\n      summary: 심박수 프로필 30일치 가져오기 API\n      tags:\n        - 심박수\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  result:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        date:\n                          type: string\n                        result:\n                          type: array\n                          items:\n                            type: object\n                            properties:\n                              heartrate_profile_id:\n                                type: string\n                              heartrate:\n                                type: string\n                              profile_id:\n                                type: string\n                              user_id:\n                                type: string\n                              created_at:\n                                type: string\n                        min_max_avg:\n                          type: array\n                          items:\n                            type: object\n                            properties:\n                              min:\n                                type: string\n                              max:\n                                type: string\n                              average:\n                                type: string\n              examples:\n                example-1:\n                  value:\n                    success: true\n                    result:\n                      - date: '2020-10-10'\n                        result:\n                          - heartrate_profile_id: '1'\n                            heartrate: '80'\n                            profile_id: '42'\n                            user_id: string\n                            created_at: '2020-10-10 22:56:57'\n                          - heartrate_profile_id: '2'\n                            heartrate: '90'\n                            profile_id: '42'\n                            user_id: string\n                            created_at: '2020-10-10 23:05:03'\n                          - heartrate_profile_id: '3'\n                            heartrate: '100'\n                            profile_id: '42'\n                            user_id: string\n                            created_at: '2020-10-10 23:05:06'\n                        min_max_avg:\n                          - min: '80'\n                            max: '100'\n                            average: '90'\n      operationId: get-api-v1-heartrate-get_heartrate_profile_data\n      description: 일별로 30일치 가져오기\ncomponents:\n  schemas: {}\n  securitySchemes:\n    access_token:\n      type: http\n      scheme: bearer\n      description: API 접근 시 필요\n    user credentials:\n      type: oauth2\n      flows:\n        password:\n          tokenUrl: ''\n          refreshUrl: ''\n          scopes: {}\n      description: ''\nsecurity:\n  - access_token: []\ntags:\n  - name: 멤버\n  - name: 테스트\n  - name: 프로필\n  - name: 전우\n  - name: 운동\n  - name: 심박수\n"
		}
	},
	"Error": "callback: json: cannot unmarshal array into Go struct field Schema.type of type string"
}