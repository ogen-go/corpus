{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/cavoke-project/cavoke"
		},
		"file": {
			"name": "schema.yaml",
			"size": 0,
			"path": ".postman/schemas/schema.yaml",
			"byteSize": 7866,
			"content": "openapi: 3.0.0\ninfo:\n  version: '0.0.3'\n  title: 'cavoke'\nservers:\n  - url: 'localhost:8080'\npaths:\n  /health:\n    get:\n      summary: 'Simple health check'\n      operationId: health\n      responses:\n        '200':\n          description: 'OK'\n          content:\n            text/plain:\n              schema:\n                type: string\n                example: OK\n\n  /games/list:\n    get:\n      summary: 'List available games to play'\n      operationId: listGames\n      responses:\n        '200':\n          description: 'List of available games as metadata'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/GameInfo\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /games/{game_id}/get_config:\n    get:\n      summary: 'Get GameInfo of specific game'\n      operationId: configGame\n      parameters:\n        - in: path\n          name: game_id\n          schema:\n            $ref: '#/components/schemas/GameId'\n          required: true\n          description: 'String id of the game to get'\n          example: tictactoe\n      responses:\n        '200':\n          description: 'Config of an existing game'\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GameInfo\"\n        '404':\n          description: 'No such game'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /games/{game_id}/get_client:\n    get:\n      summary: 'Download QML client zip of a game'\n      operationId: downloadClient\n      parameters:\n        - in: path\n          name: game_id\n          schema:\n            $ref: '#/components/schemas/GameId'\n          required: true\n          description: 'String id of the game to get'\n          example: 'tictactoe'\n      responses:\n        '200':\n          description: 'Client zip file of an existing game'\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        '404':\n          description: 'No such game'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /sessions/create:\n    post:\n      summary: 'Create a game from requested game'\n      operationId: createSession\n      parameters:\n        - in: query\n          name: game_id\n          schema:\n            $ref: '#/components/schemas/GameId'\n          required: true\n          description: 'String id of the game to get'\n          example: tictactoe\n        - in: query\n          name: user_id\n          schema:\n            $ref: '#/components/schemas/UserId'\n          required: true\n          description: 'User id'\n          example: c84d0d6e-547a-4e3a-92ba-5a6ff6c3d51f\n      responses:\n        '200':\n          description: 'Created successfully'\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  game_id:\n                    $ref: '#/components/schemas/GameId'\n                  session_id:\n                    $ref: '#/components/schemas/SessionId'\n        '400':\n          description: 'Bad request'\n        '404':\n          description: 'No game with such game id'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n  /play/{session_id}/send_move:\n    post:\n      summary: 'Send a move from QML game'\n      operationId: sendMove\n      parameters:\n        - in: path\n          name: session_id\n          schema:\n            $ref: '#/components/schemas/SessionId'\n          required: true\n          example: 83896dd5-6f03-4805-8cf1-03ce6bd6077f\n        - in: query\n          name: user_id\n          schema:\n            $ref: '#/components/schemas/UserId'\n          required: true\n          description: 'User id'\n          example: c84d0d6e-547a-4e3a-92ba-5a6ff6c3d51f\n      requestBody:\n        description: Game move data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GameMove'\n      responses:\n        '200':\n          description: 'Move accepted'\n\n        '404':\n          description: 'No such session / no such user'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /play/{session_id}/get_update:\n    get:\n      summary: 'Try get an update from QML game'\n      operationId: getUpdate\n      tags:\n        - play\n      parameters:\n        - in: path\n          name: session_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: 'UUID of a game session (room to game pair)'\n        - in: query\n          name: user_id\n          schema:\n            $ref: '#/components/schemas/UserId'\n          required: true\n          description: 'User id'\n          example: c84d0d6e-547a-4e3a-92ba-5a6ff6c3d51f\n        - in: query\n          name: offset\n          schema:\n            type: integer\n            format: int32\n          example: 32\n          description: 'Only get updates after this id (by default 0, so returns all updates throught the game)'\n      responses:\n        '200':\n          description: 'List updates (in an ascending order of ids)'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/GameUpdate\"\n        '404':\n          description: 'No such session / no such user'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\ncomponents:\n  schemas:\n    GameId:\n      type: string\n      example: tictactoe\n    GameInfo:\n      type: object\n      required:\n        - id\n        - display_name\n        - description\n        - players_num\n      properties:\n        id:\n          $ref: '#/components/schemas/GameId'\n        display_name:\n          type: string\n        description:\n          type: string\n        players_num:\n          type: integer\n          format: int32\n    Error:\n      type: object\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          format: int32\n          example: 31\n        message:\n          type: string\n          example: 'Something went wrong'\n    GameMove:\n      type: object\n      properties:\n        move:\n          type: string\n          description: 'Any information about the move supplied by QML. May be any string (e.g. JSON)'\n      required:\n        - user_id\n        - move\n    GameUpdate:\n      type: object\n      properties:\n        user_id:\n          type: string\n          format: uuid\n          example: c84d0d6e-547a-4e3a-92ba-5a6ff6c3d51f\n        update:\n          type: string\n          description: \"Any information about the update supplied by app's logic. May be any string (e.g. JSON)\"\n          example: '{\"action\": \"x_move\", x: 0, y: 2}'\n        id:\n          type: integer\n          format: int32\n          example: 1\n      required:\n        - user_id\n        - update\n    SessionId:\n      type: string\n      format: uuid\n      example: 83896dd5-6f03-4805-8cf1-03ce6bd6077f\n  securitySchemes:\n    BasicAuth:\n      type: http\n      scheme: basic\n# security:\n#  - BasicAuth: []"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /play/{session_id}/send_move: post: operation \"sendMove\": parameters: parse parameter \"user_id\": schema: parse schema: resolve \"#/components/schemas/UserId\": find schema: resolve \"#/components/schemas/UserId\": can't find value for \"components/schemas/UserId\""
}