{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/thoth-station/jupyterlab-requirements"
		},
		"file": {
			"name": "jupyterlab_requirements.yaml",
			"size": 0,
			"path": "jupyterlab_requirements/dependency_management/jupyterlab_requirements.yaml",
			"byteSize": 14627,
			"content": "# jupyterlab-requirements\n# Copyright(C) 2021 Francesco Murdaca\n#\n# This program is free software: you can redistribute it and / or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n---\ninfo:\n  contact:\n    name: Thoth\n    url: \"https://github.com/thoth-station/jupyterlab-requirements\"\n  description: \"The API for the Jupyterlab Requirements extensions.\"\n  title: \"Jupyterlab Requirements API\"\n  version: \"0.8.0\"\nopenapi: \"3.0.0\"\nbasePath: \"/jupyterlab_requirements\"\npaths:\n  /jupyterlab_requirements.yaml:\n    get:\n      tags:\n      - API\n      summary: Get API information (yaml).\n      responses:\n        200:\n          description: Returns a swagger specification in yaml.\n          content:\n            text/x-yaml:\n              schema:\n                type: string\n        500:\n          description: Unexpected error.\n\n  /thoth/resolution:\n    post:\n      tags: [\"Thoth Resolution Engine\"]\n      summary: Submit request to Thoth advise\n      parameters:\n        - name: \"kernel_name\"\n          description: \"Jupyter Kernel name where advise will be requested.\"\n          required: true\n          type: \"string\"\n        - name: \"thoth_timeout\"\n          description: \"Timeout for Thoth Resolution Engine.\"\n          required: true\n          type: \"integer\"\n        - name: \"notebook_content\"\n          description: \"Jupyter Notebook content for Thoth advise.\"\n          required: true\n          type: \"string\"\n        - name: \"thoth_config\"\n          description: \"Thoth configuration file to be submitted to Thoth.\"\n          required: true\n          type: \"string\"\n        - name: \"requirements\"\n          description: \"Requirements to be submitted to Thoth for advise.\"\n          required: true\n          type: \"string\"\n      responses:\n        \"202\":\n          description: \"Redirect long running task\"\n    get:\n      tags: [\"Thoth Resolution Engine\"]\n      summary: \"Get long running task result for thoth resolution\"\n      produces:\n        - \"application/json\"\n      parameters:\n        - name: \"taskId\"\n          in: \"path\"\n          description: \"Task ID\"\n          required: true\n          type: \"integer\"\n      responses:\n        \"200\":\n          description: \"Successful execution of the task - returns its result\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThothAdvise'\n        \"202\":\n          description: \"Task still running\"\n        \"404\":\n          description: \"Task not found\"\n        \"500\":\n          description: \"An error occurred when executing the task\"\n\n  /thoth/config:\n    post:\n      tags: [\"Thoth Resolution Engine\"]\n      summary: Handle Thoth config.\n      parameters:\n        - name: \"kernel_name\"\n          description: \"Jupyter Kernel name where advise will be requested.\"\n          required: true\n          type: \"string\"\n      responses:\n        \"200\":\n          description: Thoth Config.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThothConfig\"\n\n  /thoth/invectio:\n    post:\n      tags: [\"Thoth Resolution Engine\"]\n      summary: Receive analysis from thoth invectio.\n      parameters:\n        - name: \"notebook_content\"\n          description: \"Notebook content.\"\n          required: true\n          type: \"string\"\n      responses:\n        \"200\":\n          description: Invectio libraries gathered.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThothInvectio\"\n\n  /pipenv:\n    post:\n      tags: [\"Pipenv Resolution Engine\"]\n      summary: Lock dependencies with Pipenv Resolution Engine\n      parameters:\n        - name: \"kernel_name\"\n          description: \"Jupyter Kernel name where advise will be requested.\"\n          required: true\n          type: \"string\"\n        - name: \"requirements\"\n          description: \"Requirements to be submitted to Thoth for advise.\"\n          required: true\n          type: \"string\"\n      responses:\n        \"202\":\n          description: \"Redirect long running task\"\n    get:\n      tags: [\"Pipenv Resolution Engine\"]\n      summary: \"Get long running task result for pipenv resolution\"\n      produces:\n        - \"application/json\"\n      parameters:\n        - name: \"taskId\"\n          in: \"path\"\n          description: \"Task ID\"\n          required: true\n          type: \"integer\"\n      responses:\n        \"200\":\n          description: \"Successful execution of the task - returns its result\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PipenvResult'\n        \"202\":\n          description: \"Task still running\"\n        \"404\":\n          description: \"Task not found\"\n        \"500\":\n          description: \"An error occurred when executing the task\"\n\n  /kernel/install:\n    post:\n      tags: [\"Kernel actions\"]\n      summary: Install dependencies with micropipenv.\n      parameters:\n        - name: \"kernel_name\"\n          description: \"Jupyter Kernel name where advise will be requested.\"\n          required: true\n          type: \"string\"\n        - name: \"resolution_engine\"\n          description: \"Resolution engine used to lock dependencies.\"\n          required: true\n          type: \"string\"\n      responses:\n        \"202\":\n          description: \"Redirect long running task\"\n    get:\n      tags: [\"Kernel actions\"]\n      summary: \"Get status of installation with micropipenv.\"\n      produces:\n        - \"application/json\"\n      parameters:\n        - name: \"taskId\"\n          in: \"path\"\n          description: \"Task ID\"\n          required: true\n          type: \"integer\"\n      responses:\n        \"200\":\n          description: \"Successful execution of the task - returns its result\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PipenvResult'\n        \"202\":\n          description: \"Task still running\"\n        \"404\":\n          description: \"Task not found\"\n        \"500\":\n          description: \"An error occurred when executing the task\"\n\n  /kernel/packages:\n    post:\n      tags: [\"Kernel actions\"]\n      summary: Receive analysis from thoth invectio.\n      parameters:\n        - name: \"kernel_name\"\n          description: \"Kernel name.\"\n          required: true\n          type: \"string\"\n      responses:\n        \"200\":\n          description: Packages installed in the kernel.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KernelPackages\"\n\n  /kernel/python:\n    get:\n      tags: [\"Kernel actions\"]\n      summary: Discover python version in the kernel.\n      responses:\n        \"200\":\n          description: Python version in the kernel.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KernelPython\"\n\n  /kernel/create:\n    post:\n      tags: [\"Kernel actions\"]\n      summary: Create kernel using virtualenv.\n      parameters:\n        - name: \"kernel_name\"\n          description: \"Kernel name.\"\n          required: true\n          type: \"string\"\n      responses:\n        \"200\":\n          description: Created kernel.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KernelCreated\"\n\n    get:\n      tags: [\"Kernel actions\"]\n      summary: Get available jupyter kernels.\n      responses:\n        \"200\":\n          description: List of kernels.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/JupyterKernelList\"\n\n    delete:\n      tags: [\"Kernel actions\"]\n      summary: Delete kernel from Jupyter and host.\n      parameters:\n        - name: \"kernel_name\"\n          description: \"Kernel name.\"\n          required: true\n          type: \"string\"\n      responses:\n        \"200\":\n          description: Delete kernel.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KernelDeleted\"\n\n  /file/directory:\n    get:\n      tags: [\"File handler\"]\n      summary: Discover root directory for the project.\n      responses:\n        \"200\":\n          description: Path of the root directory discovered.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FileDirectory\"\n\n  /file/dependencies:\n    post:\n      tags: [\"File handler\"]\n      summary: Store requirements files to disk.\n      parameters:\n        - name: \"kernel_name\"\n          description: \"Jupyter Kernel name where dependency files will be stored.\"\n          required: true\n          type: \"string\"\n        - name: \"requirements\"\n          description: \"Pipfile.\"\n          required: true\n          type: \"string\"\n        - name: \"requirements_lock\"\n          description: \"Pipfile.lock.\"\n          required: true\n          type: \"string\"\n        - name: \"complete_path\"\n          description: \"Complete path used for root directory.\"\n          required: true\n          type: \"string\"\n        - name: \"path_to_store\"\n          description: \"Path added to the complete path where files are actually stored.\"\n          required: true\n          type: \"string\"\n      responses:\n        \"200\":\n          description: Created kernel.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FileStored\"\n\n  /tasks/{taskId}:\n    get:\n      tags:\n        - \"Task\"\n      summary: \"Get long running task result\"\n      produces:\n        - \"application/json\"\n      parameters:\n        - name: \"taskId\"\n          in: \"path\"\n          description: \"Task ID\"\n          required: true\n          type: \"integer\"\n      responses:\n        \"200\":\n          description: \"Successful execution of the task - returns its result\"\n        \"202\":\n          description: \"Task still running\"\n        \"404\":\n          description: \"Task not found\"\n        \"500\":\n          description: \"An error occurred when executing the task\"\n    delete:\n      tags:\n        - \"Task\"\n      summary: \"Stop the long running task\"\n      parameters:\n        - name: \"taskId\"\n          in: \"path\"\n          description: \"ID of the order that needs to be deleted\"\n          required: true\n          type: \"integer\"\n      responses:\n        \"204\":\n          description: \"Task cancelled\"\n        \"404\":\n          description: \"Task not found\"\n\ncomponents:\n  schemas:\n    ThothAdvise:\n      description: Thoth advise response.\n      required:\n        - thoth_analysis_id\n        - requirements\n        - requirements_lock\n        - error\n        - error_msg\n        - stack_info\n        - justifications\n      type: object\n      properties:\n        thoth_analysis_id:\n          type: string\n          description: Thoth Analysis ID.\n        requirements:\n          type: string\n          description: Pipfile.\n        requirements_lock:\n          type: string\n          description: Pipfile.lock.\n        error:\n          type: boolean\n          description: Error present in thoth adviser answer.\n        error_msg:\n          type: string\n          description: Error message present only if error is true, otherwise empty string.\n        stack_info:\n          type: string\n          description: Stack info from Thoth results.\n        justifications:\n          type: string\n          description: Justifications from Thoth results.\n\n    ThothConfig:\n      type: object\n      description: Response when request for thoth config is run.\n\n    ThothInvectio:\n      description: Gathered libraries from thoth invectio.\n      type: object\n      properties:\n        gathered_libraries:\n          type: array\n          description: List of gathered libraries using invectio.\n          items:\n            type: string\n            description: Package identified by invectio.\n\n    KernelPackages:\n      description: Packages installed in the kernel.\n      type: object\n      properties:\n        gathered_libraries:\n          type: array\n          description: List of installed packages in the kernel (pip list).\n          items:\n            type: string\n            description: Package identified in the kernel.\n\n    KernelPython:\n      description: Python version discovered in the Kernel.\n      type: string\n\n    KernelCreated:\n      description: Created kernel in virtualenv.\n      type: object\n      properties:\n        data:\n          type: string\n          description: Message after kernel was created.\n\n    JupyterKernelList:\n      description: Jupyter kernels available in the host.\n      type: object\n      properties:\n        gathered_libraries:\n          type: array\n          description: List of jupyter kernel (jupyter kernelspec list).\n          items:\n            type: string\n            description: Kernel name identified.\n\n    KernelDeleted:\n      description: Deleted kernel in jupyter and host.\n      type: object\n      properties:\n        data:\n          type: string\n          description: Message after kernel was deleted.\n\n    FileDirectory:\n      description: Path for the root directory.\n      type: string\n\n    FileStored:\n      description: Store dependencies files in the kernel.\n      type: object\n      properties:\n        message:\n          type: string\n          description: Message after files are stored.\n\n    PipenvResult:\n      description: Pipenv response.\n      required:\n        - requirements_lock\n        - error\n        - error_msg\n      type: object\n      properties:\n        requirements_lock:\n          type: string\n          description: Pipfile.lock.\n        error:\n          type: boolean\n          description: Error present in pipenv resolution\n        error_msg:\n          type: string\n          description: Error message present only if error is true, otherwise empty string.\n\n    InstallHanlderResult:\n      description: Install handler result.\n      required:\n        - message\n        - kernel_name\n        - error\n      type: object\n      properties:\n        message:\n          type: string\n          description: Message related to installation.\n        kernel_name:\n          type: string\n          description: Name of the kernel where dependencies are installed.\n        error:\n          type: boolean\n          description: Error present in thoth adviser answer.\n"
		}
	},
	"Error": "parse: parse spec: paths: /pipenv: post: operation \"\": parameters: parse parameter \"kernel_name\": unsupported parameter type \"\""
}