{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/tatumio/tatum-blockchain-connector"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "egld-connector/module/openapi.yaml",
			"byteSize": 147069,
			"content": "openapi: 3.0.0\nservers:\n  - url: 'https://api-eu1.tatum.io'\ninfo:\n  version: 1.0.0\n  title: Tatum Elrond Network (EGLD) API\ntags:\n  - description: |\n      \u003cp\u003eElrond (EGLD) is a distributed transactional computation protocol which relies on a sharded state architecture and a secure Proof of Stake consensus mechanism.\n      \u003cbr/\u003e\n      Tatum supports 2 chains:\n      \u003cul\u003e\u003cli\u003eMainnet - a regular live chain\n      \u003cli\u003eDevnet - a chain used for testing purposes. Coins on the test chain have no value and can be obtained from\n      a faucet, e.g. \u003ca target=\"_blank\" href=\"https://r3d4.fr/elrond/devnet/index.php\"\u003ehttps://r3d4.fr/elrond/devnet/\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/p\u003e\n    name: Blockchain / Elrond Network (EGLD)\npaths:\n  /v3/egld/wallet:\n    get:\n      description: |\n        \u003ch4\u003e1 credit per API call.\u003c/h4\u003e\u003cbr/\u003e\n        \u003cp\u003eThe Elrond Address format is bech32, specified by the BIP 0173. The address always starts with an erd1. It is very convenient and secure, since it can generate 2^31 addresses from 1 mnemonic phrase.\n        Mnemonic phrase consists of 24 special words in defined order and can restore access to all generated addresses and private keys.\n        \u003cbr/\u003e\n        Each address is identified by 3 main values:\n        \u003cul\u003e\u003cli\u003ePrivate Key - your secret value, which should never be revealed\u003c/li\u003e\n        \u003cli\u003ePublic Key - public address to be published\u003c/li\u003e\n        \u003cli\u003eDerivation index - index of generated address\u003c/li\u003e\u003c/ul\u003e\n        \u003c/p\u003e\n        \u003cp\u003eTatum follows BIP44 specification and generates for EGLD wallet with derivation path m'/44'/508'/0'/0'.\n        More about BIP44 HD wallets can be found here - \u003ca target=\"_blank\" href=\"https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki\"\u003ehttps://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki\u003c/a\u003e.\n        Generate BIP44 compatible EGLD wallet.\u003c/p\u003e\n      operationId: EgldGenerateWallet\n      parameters:\n        - description: \"Mnemonic to use for generation of private key.\"\n          in: query\n          name: mnemonic\n          required: false\n          schema:\n            type: string\n            maxLength: 500\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  mnemonic:\n                    type: string\n                    description: Mnemonic to use for generation of private key\n                    example: \"quantum tobacco key they maid mean crime youth chief jungle mind design broken tilt bus shoulder leaf good forward erupt split divert bread kitten\"\n          description: OK\n        400: \u0026API400\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error400\"\n          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.\n        401: \u0026API401\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/Error401NotActive\"\n                  - $ref: \"#/components/schemas/Error401Invalid\"\n          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.\n        500: \u0026API500\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error500\"\n          description: Internal server error. There was an error on the server during the processing of the request.\n      security:\n        - X-Api-Key: [ ]\n      x-code-samples:\n      summary: Generate EGLD wallet\n      tags:\n        - Blockchain / Elrond Network (EGLD)\n  /v3/egld/address/{mnemonic}/{index}:\n    get:\n      description: |\n        \u003ch4\u003e1 credit per API call.\u003c/h4\u003e\u003cbr/\u003e\n        \u003cp\u003eGenerate EGLD account deposit address from mnemonic phrase. Deposit address is generated for the specific\n        index - each mnemonic phrase can generate up to 2^31 addresses starting from index 0 until 2^31.\u003c/p\u003e\n      operationId: EgldGenerateAddress\n      parameters:\n        - description: \"Mnemonic to use for generation of address.\"\n          in: path\n          name: mnemonic\n          required: true\n          schema:\n            type: string\n            example: \"quantum tobacco key they maid mean crime youth chief jungle mind design broken tilt bus shoulder leaf good forward erupt split divert bread kitten\"\n        - description: \"Derivation index of desired address to be generated.\"\n          in: path\n          name: index\n          required: true\n          example: 1\n          schema:\n            type: number\n            example: 0\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  address:\n                    type: string\n                    description: EGLD address\n                    example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq7\n          description: OK\n        400:\n          \u003c\u003c: *API400\n        401:\n          \u003c\u003c: *API401\n        500:\n          \u003c\u003c: *API500\n      security:\n        - X-Api-Key: [ ]\n      x-code-samples:\n      summary: Generate EGLD account address from mnemonic\n      tags:\n        - Blockchain / Elrond Network (EGLD)\n  /v3/egld/wallet/priv:\n    post:\n      description: |\n        \u003ch4\u003e1 credit per API call.\u003c/h4\u003e\u003cbr/\u003e\n        \u003cp\u003eGenerate private key of address from mnemonic for given derivation path index. Private key is generated for the specific index - each mnemonic\n        can generate up to 2^31 private keys starting from index 0 until 2^31.\u003c/p\u003e\n      operationId: EgldGenerateAddressPrivateKey\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PrivKeyRequest\"\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PrivKey\"\n          description: OK\n        400:\n          \u003c\u003c: *API400\n        401:\n          \u003c\u003c: *API401\n        500:\n          \u003c\u003c: *API500\n      security:\n        - X-Api-Key: [ ]\n      x-code-samples:\n      summary: Generate EGLD private key\n      tags:\n        - Blockchain / Elrond Network (EGLD)\n  /v3/egld/node/{xApiKey}/*:\n    post:\n      description: |\n        \u003ch4\u003e2 credits per API call.\u003c/h4\u003e\u003cbr/\u003e\n        \u003cp\u003eUse this endpoint URL as a http-based driver to connect directly to the EGLD node provided by Tatum.\n        To learn more about EGLD, please visit \u003ca href=\"https://docs.elrond.com/sdk-and-tools/rest-api/nodes/\" target=\"_blank\"\u003eEGLD developer's guide.\u003c/a\u003e\u003c/p\u003e\n      operationId: EgldNodePost\n      parameters:\n        - description: \"Tatum X-API-Key used for authorization.\"\n          in: path\n          name: xApiKey\n          required: true\n          schema:\n            type: string\n            example: /v3/egld/node/asdlkfjnqunalkwjf124387ad/transaction/cost\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              description: Any valid method content body.\n              example: { \"version\": 1,\"chainId\": \"D\",\"nonce\": 42,\"value\": \"100000000000000000\",\"receiver\": \"erd1cux02zersde0l7hhklzhywcxk4u9n4py5tdxyx7vrvhnza2r4gmq4vw35r\",\"sender\": \"erd1njqj2zggfup4nl83x0nfgqjkjserm7mjyxdx5vzkm8k0gkh40ezqtfz9lg\",\"gasPrice\": 1000000000,\"gasLimit\": 70000,\"data\": \"food for cats\",\"signature\": \"93207c579bf57be03add632b0e1624a73576eeda8a1687e0fa286f03eb1a17ffb125ccdb008a264c402f074a360442c7a034e237679322f62268b614e926d10f\" }\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: object\n                description: Any valid response.\n          description: OK\n        400:\n          \u003c\u003c: *API400\n        401:\n          \u003c\u003c: *API401\n        500:\n          \u003c\u003c: *API500\n      x-code-samples:\n      summary: Node HTTP driver\n      tags:\n        - Blockchain / Elrond Network (EGLD)\n    get:\n      description: |\n        \u003ch4\u003e2 credits per API call.\u003c/h4\u003e\u003cbr/\u003e\n        \u003cp\u003eUse this endpoint URL as a http-based driver to connect directly to the EGLD node provided by Tatum.\n        To learn more about EGLD, please visit \u003ca href=\"https://docs.elrond.com/sdk-and-tools/rest-api/nodes/\" target=\"_blank\"\u003eEGLD developer's guide.\u003c/a\u003e\u003c/p\u003e\n      operationId: EgldNodeGet\n      parameters:\n        - description: \"Tatum X-API-Key used for authorization.\"\n          in: path\n          name: xApiKey\n          required: true\n          schema:\n            type: string\n            example: /v3/egld/node/asdlkfjnqunalkwjf12341kljl/network/config\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: object\n                description: Any valid response.\n                example: { \"config\": { \"erd_chain_id\": \"1\",\"erd_denomination\": 18,\"erd_gas_per_data_byte\": 1500,\"erd_latest_tag_software_version\": \"v1.1.0.0\",\"erd_meta_consensus_group_size\": 400,\"erd_min_gas_limit\": 50000,\"erd_min_gas_price\": 1000000000,\"erd_min_transaction_version\": 1,\"erd_num_metachain_nodes\": 400,\"erd_num_nodes_in_shard\": 400,\"erd_num_shards_without_meta\": 3,\"erd_round_duration\": 6000,\"erd_shard_consensus_group_size\": 63,\"erd_start_time\": 1596117600 } }\n          description: OK\n        400:\n          \u003c\u003c: *API400\n        401:\n          \u003c\u003c: *API401\n        500:\n          \u003c\u003c: *API500\n      x-code-samples:\n      summary: Node HTTP driver\n      tags:\n        - Blockchain / Elrond Network (EGLD)\n  /v3/egld/block/current:\n    get:\n      description: \"\u003ch4\u003e1 credit per API call.\u003c/h4\u003e\u003cbr/\u003e\n        \u003cp\u003eGet EGLD current block number. This is the number of the latest block in the blockchain.\u003c/p\u003e\"\n      operationId: EGldGetCurrentBlock\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: number\n                description: Current block number\n                example: 649127\n          description: OK\n        401:\n          \u003c\u003c: *API401\n        500:\n          \u003c\u003c: *API500\n      security:\n        - X-Api-Key: [ ]\n      x-code-samples:\n      summary: Get current block number\n      tags:\n        - Blockchain / Elrond Network (EGLD)\n  /v3/egld/block/{hash}:\n    get:\n      description: \"\u003ch4\u003e1 credit per API call.\u003c/h4\u003e\u003cbr/\u003e\n        \u003cp\u003eGet EGLD block by block hash or block number. \u003ca href='https://docs.elrond.com/sdk-and-tools/rest-api/blocks/' target='_blank'\u003e EGLD docs \u003c/a\u003e\u003c/p\u003e\"\n      operationId: EgldGetBlock\n      parameters:\n        - description: \"Block hash or nonce\"\n          in: path\n          name: hash\n          required: true\n          schema:\n            type: string\n            example: a6f2ac15a6b1bafdde9afff2297cef49c4c523c516f8ee12fed54be070e9512b\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EgldBlock\"\n          description: OK\n        400:\n          \u003c\u003c: *API400\n        401:\n          \u003c\u003c: *API401\n        500:\n          \u003c\u003c: *API500\n      security:\n        - X-Api-Key: [ ]\n      x-code-samples:\n      summary: Get EGLD block by hash\n      tags:\n        - Blockchain / Elrond Network (EGLD)\n  /v3/egld/account/balance/{address}:\n    get:\n      description: \"\u003ch4\u003e1 credit per API call.\u003c/h4\u003e\u003cbr/\u003e\n        \u003cp\u003eGet account balance in EGLD.\u003c/p\u003e\"\n      operationId: EgldGetBalance\n      parameters:\n        - description: \"Account address\"\n          in: path\n          name: address\n          required: true\n          schema:\n            type: string\n            example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq7\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  balance:\n                    type: string\n                    description: Balance in EGLD\n                    example: \"10.52\"\n          description: OK\n        400:\n          \u003c\u003c: *API400\n        401:\n          \u003c\u003c: *API401\n        500:\n          \u003c\u003c: *API500\n      security:\n        - X-Api-Key: [ ]\n      x-code-samples:\n      summary: Get EGLD Account balance\n      tags:\n        - Blockchain / Elrond Network (EGLD)\n  /v3/egld/transaction/{hash}:\n    get:\n      description: \"\u003ch4\u003e1 credit per API call.\u003c/h4\u003e\u003cbr/\u003e\n        \u003cp\u003eGet EGLD transaction by transaction hash. Detail result please find here \u003ca href='https://docs.elrond.com/sdk-and-tools/rest-api/transactions/#get-transaction' target='_blank'\u003e EGLD docs \u003c/a\u003e\u003c/p\u003e\"\n      operationId: EgldGetTransaction\n      parameters:\n        - description: \"Transaction hash\"\n          in: path\n          name: hash\n          required: true\n          schema:\n            type: string\n            example: 99996224823736c1e9b8484ed74c1573049478f871d6f94b86811fb1c7b2addd\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EgldTx\"\n          description: OK\n        400:\n          \u003c\u003c: *API400\n        401:\n          \u003c\u003c: *API401\n        403:\n          description: Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/Error403EgldBroadcast\"\n                  - $ref: \"#/components/schemas/Error403EgldGasCalculation\"\n                  - $ref: \"#/components/schemas/Error403EgldTxHash\"\n                  - $ref: \"#/components/schemas/Error403EgldTxSign\"\n        500:\n          \u003c\u003c: *API500\n      security:\n        - X-Api-Key: [ ]\n      x-code-samples:\n      summary: Get EGLD Transaction\n      tags:\n        - Blockchain / Elrond Network (EGLD)\n  /v3/egld/transaction/address/{address}:\n    get:\n      description: |\n        \u003ch4\u003e1 credit per API call.\u003c/h4\u003e\u003cbr/\u003e\n        \u003cp\u003eThis endpoint allows one to retrieve the latest 20 transactions sent from an address.\u003c/p\u003e\n      operationId: EgldGetTransactionAddress\n      parameters:\n        - description: \"address\"\n          in: path\n          name: address\n          required: true\n          schema:\n            type: string\n            maxLength: 62\n            minLength: 62\n            example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq7\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: array\n                description: List of transactions sent from an address.\n                items:\n                  type: object\n          description: OK\n        400:\n          \u003c\u003c: *API400\n        401:\n          \u003c\u003c: *API401\n        500:\n          \u003c\u003c: *API500\n      security:\n        - X-Api-Key: [ ]\n      x-code-samples:\n      summary: Get count of outgoing EGLD transactions\n      tags:\n        - Blockchain / Elrond Network (EGLD)\n  /v3/egld/transaction/count/{address}:\n    get:\n      description: |\n        \u003ch4\u003e1 credit per API call.\u003c/h4\u003e\u003cbr/\u003e\n        \u003cp\u003eGet a number of outgoing EGLD transactions for the address. When a transaction is sent, there can be multiple outgoing transactions,\n        which are not yet processed by the blockchain. To distinguish between them, there is a counter called a nonce, which represents\n        the order of the transaction in the list of outgoing transactions.\u003c/p\u003e\n      operationId: EgldGetTransactionCount\n      parameters:\n        - description: \"address\"\n          in: path\n          name: address\n          required: true\n          schema:\n            type: string\n            maxLength: 62\n            minLength: 62\n            example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq7\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: number\n                example: 5\n                description: Number of transactions, that were made from this address. Can be used as a nonce parameter in send transaction calls.\n          description: OK\n        400:\n          \u003c\u003c: *API400\n        401:\n          \u003c\u003c: *API401\n        500:\n          \u003c\u003c: *API500\n      security:\n        - X-Api-Key: [ ]\n      x-code-samples:\n      summary: Get count of outgoing EGLD transactions\n      tags:\n        - Blockchain / Elrond Network (EGLD)\n  /v3/egld/transaction:\n    post:\n      description: |\n        \u003ch4\u003e2 credits per API call.\u003c/h4\u003e\u003cbr/\u003e\n        \u003cp\u003eSend EGLD from account to account.\u003cbr/\u003e\u003cbr/\u003e\n        This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.\n        No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and loss of funds. In this method, it is possible to enter privateKey\n        or signatureId. PrivateKey should be used only for quick development on devnet versions of blockchain when there is no risk of losing funds. In production,\n        \u003ca href=\"https://github.com/tatumio/tatum-kms\" target=\"_blank\"\u003eTatum KMS\u003c/a\u003e should be used for the highest security standards, and signatureId should be present in the request.\n        Alternatively, using the Tatum client library for supported languages.\n        \u003c/p\u003e\n      operationId: EgldBlockchainTransfer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: \"#/components/schemas/TransferEgldBlockchain\"\n                - $ref: \"#/components/schemas/TransferEgldBlockchainKMS\"\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/TransactionHashKMS\"\n                  - $ref: \"#/components/schemas/SignatureId\"\n          description: OK\n        400:\n          \u003c\u003c: *API400\n        401:\n          \u003c\u003c: *API401\n        403:\n          description: Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/Error403EgldBroadcast\"\n                  - $ref: \"#/components/schemas/Error403EgldGasCalculation\"\n                  - $ref: \"#/components/schemas/Error403EgldTxHash\"\n                  - $ref: \"#/components/schemas/Error403EgldTxSign\"\n        500:\n          \u003c\u003c: *API500\n      security:\n        - X-Api-Key: [ ]\n      x-code-samples:\n      summary: Send EGLD from account to account\n      tags:\n        - Blockchain / Elrond Network (EGLD)\n    # /v3/egld/gas:\n    #   post:\n    #     description: |\n    #       \u003ch4\u003e2 credits per API call.\u003c/h4\u003e\u003cbr/\u003e\n    #       \u003cp\u003eEstimate gasLimit and gasPrice of the EGLD transaction. Gas limit is obtained from \u003ca href=\"https://gateway.elrond.com/transaction/cost\" target=\"_blank\"\u003ehttps://gateway.elrond.com/transaction/cost\u003c/a\u003e.\n    #       Gas price is obtained from \u003ca href=\"https://gateway.elrond.com/network/config\" target=\"_blank\"\u003ehttps://gateway.elrond.com/network/config\u003c/a\u003e.\n    #       \u003c/p\u003e\n    #     operationId: EgldEstimateGas\n    #     requestBody:\n    #       content:\n    #         application/json:\n    #           schema:\n    #             $ref: \"#/components/schemas/TransactionFeeEgldBlockchain\"\n    #       required: true\n    #     responses:\n    #       200:\n    #         content:\n    #           application/json:\n    #             schema:\n    #               type: object\n    #               required:\n    #                 - gasLimit\n    #                 - gasPrice\n    #               properties:\n    #                 gasLimit:\n    #                   type: string\n    #                   description: Gas limit for transaction in gas price.\n    #                   example: \"77000\"\n    #                 gasPrice:\n    #                   type: string\n    #                   description: Gas price.\n    #                   example: \"1000000000\"\n    #         description: OK\n    #       400:\n    #         \u003c\u003c: *API400\n    #       401:\n    #         \u003c\u003c: *API401\n    #       403:\n    #         description: Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.\n    #         content:\n    #           application/json:\n    #             schema:\n    #               oneOf:\n    #                 - $ref: \"#/components/schemas/Error403EgldGasCalculation\"\n    #       500:\n    #         \u003c\u003c: *API500\n    #     security:\n    #       - X-Api-Key: [ ]\n    #     x-code-samples:\n    #     summary: Estimate EGLD transaction fees\n    #     tags:\n    #       - Blockchain / Elrond Network (EGLD)\n    # /v3/egld/esdt/{method}:\n    #   post:\n    #     description: |\n    #       \u003ch4\u003e2 credits per API call.\u003c/h4\u003e\u003cbr/\u003e\n    #       \u003cp\u003eWorking with a Elrond Standard Digital Token.\n    #       For read operations, data is returned, for write operations, transaction Id of the associated transaction is returned.\u003cbr/\u003e\u003cbr/\u003e\n\n    #       Detail information please find here \u003ca href=\"https://docs.elrond.com/developers/esdt-tokens/\" target=\"_blank\"\u003e Elrond DOCS \u003c/a\u003e.\u003cbr/\u003e\u003cbr/\u003e\n\n    #       This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.\n    #       No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and loss of funds. In this method, it is possible to enter privateKey\n    #       or signatureId. PrivateKey should be used only for quick development on devnet versions of blockchain when there is no risk of losing funds. In production,\n    #       \u003ca href=\"https://github.com/tatumio/tatum-kms\" target=\"_blank\"\u003eTatum KMS\u003c/a\u003e should be used for the highest security standards, and signatureId should be present in the request.\n    #       Alternatively, using the Tatum client library for supported languages.\u003c/p\u003e\n    #     operationId: EgldBlockchainEsdt\n    #     parameters:\n    #       - description: method\n    #         in: path\n    #         name: method\n    #         required: true\n    #         schema:\n    #           type: string\n    #           example: mint\n    #           enum:\n    #             - deploy\n    #             - mint\n    #             - burn\n    #             - pause\n    #             - role\n    #             - freeze\n    #             - wipe\n    #             - owner\n    #             - control\n    #             - transfer\n    #     requestBody:\n    #       content:\n    #         application/json:\n    #           schema:\n    #             oneOf:\n    #               - $ref: \"#/components/schemas/CallEgldSCDeployMethod\"\n    #               - $ref: \"#/components/schemas/CallEgldSCDeployMethodKMS\"\n    #               - $ref: \"#/components/schemas/CallEgldSCMintMethod\"\n    #               - $ref: \"#/components/schemas/CallEgldSCMintMethodKMS\"\n    #               - $ref: \"#/components/schemas/CallEgldSCBurnMethod\"\n    #               - $ref: \"#/components/schemas/CallEgldSCBurnMethodKMS\"\n    #               - $ref: \"#/components/schemas/CallEgldSCPauseMethod\"\n    #               - $ref: \"#/components/schemas/CallEgldSCPauseMethodKMS\"\n    #               - $ref: \"#/components/schemas/CallEgldSCRoleMethod\"\n    #               - $ref: \"#/components/schemas/CallEgldSRoleMethodKMS\"\n    #               - $ref: \"#/components/schemas/CallEgldSCFreezeMethod\"\n    #               - $ref: \"#/components/schemas/CallEgldSCFreezeMethodKMS\"\n    #               - $ref: \"#/components/schemas/CallEgldSCWipeMethod\"\n    #               - $ref: \"#/components/schemas/CallEgldSCWipeMethodKMS\"\n    #               - $ref: \"#/components/schemas/CallEgldSCOwnerMethod\"\n    #               - $ref: \"#/components/schemas/CallEgldSCOwnerMethodKMS\"\n    #               - $ref: \"#/components/schemas/CallEgldSCControlMethod\"\n    #               - $ref: \"#/components/schemas/CallEgldSCControlMethodKMS\"\n    #               - $ref: \"#/components/schemas/CallEgldSCTransferMethod\"\n    #               - $ref: \"#/components/schemas/CallEgldSCTransferMethodKMS\"\n    #       required: true\n    #     responses:\n    #       200:\n    #         content:\n    #           application/json:\n    #             schema:\n    #               oneOf:\n    #                 - $ref: \"#/components/schemas/TransactionHashKMS\"\n    #                 - $ref: \"#/components/schemas/SignatureId\"\n    #                 - $ref: \"#/components/schemas/Data\"\n    #         description: OK\n    #       400:\n    #         \u003c\u003c: *API400\n    #       401:\n    #         \u003c\u003c: *API401\n    #       403:\n    #         description: Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.\n    #         content:\n    #           application/json:\n    #             schema:\n    #               oneOf:\n    #                 - $ref: \"#/components/schemas/Error403EgldBroadcast\"\n    #                 - $ref: \"#/components/schemas/Error403EgldGasCalculation\"\n    #                 - $ref: \"#/components/schemas/Error403EgldTxHash\"\n    #                 - $ref: \"#/components/schemas/Error403EgldTxSign\"\n    #       500:\n    #         \u003c\u003c: *API500\n    #     security:\n    #       - X-Api-Key: [ ]\n    #     x-code-samples:\n    #     summary: Working with a Smart Contract.\n    #     tags:\n    #       - Blockchain / Elrond Network (EGLD)\n    # /v3/egld/nft/{method}:\n    #   post:\n    #     description: |\n    #       \u003ch4\u003e2 credits per API call.\u003c/h4\u003e\u003cbr/\u003e\n    #       \u003cp\u003eWorking with a NFT/SFT.\n    #       For read operations, data is returned, for write operations, transaction Id of the associated transaction is returned.\u003cbr/\u003e\u003cbr/\u003e\n\n    #       Detail information please find here \u003ca href=\"https://docs.elrond.com/developers/nft-tokens/\" target=\"_blank\"\u003e Elrond DOCS \u003c/a\u003e.\u003cbr/\u003e\u003cbr/\u003e\n\n    #       This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.\n    #       No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and loss of funds. In this method, it is possible to enter privateKey\n    #       or signatureId. PrivateKey should be used only for quick development on devnet versions of blockchain when there is no risk of losing funds. In production,\n    #       \u003ca href=\"https://github.com/tatumio/tatum-kms\" target=\"_blank\"\u003eTatum KMS\u003c/a\u003e should be used for the highest security standards, and signatureId should be present in the request.\n    #       Alternatively, using the Tatum client library for supported languages.\u003c/p\u003e\n    #     operationId: EgldBlockchainNft\n    #     parameters:\n    #       - description: method\n    #         in: path\n    #         name: method\n    #         required: true\n    #         schema:\n    #           type: string\n    #           example: freeze\n    #           enum:\n    #             - deploy\n    #             - create\n    #             - role-transfer\n    #             - stop-create\n    #             - add\n    #             - freeze\n    #             - wipe\n    #             - burn\n    #             - control\n    #             - transfer\n    #     requestBody:\n    #       content:\n    #         application/json:\n    #           schema:\n    #             oneOf:\n    #               - $ref: \"#/components/schemas/CallEgldNFTDeployMethod\"\n    #               - $ref: \"#/components/schemas/CallEgldNFTDeployMethodKMS\"\n    #               - $ref: \"#/components/schemas/CallEgldNFTCreateMethod\"\n    #               - $ref: \"#/components/schemas/CallEgldNFTCreateMethodKMS\"\n    #               - $ref: \"#/components/schemas/CallEgldNFTRoleTransferethod\"\n    #               - $ref: \"#/components/schemas/CallEgldNFTRoleTransferethodKMS\"\n    #               - $ref: \"#/components/schemas/CallEgldNFTStopCreateMethod\"\n    #               - $ref: \"#/components/schemas/CallEgldNFTStopCreateMethodKMS\"\n    #               - $ref: \"#/components/schemas/CallEgldNFTAddMethod\"\n    #               - $ref: \"#/components/schemas/CallEgldNFTAddMethodKMS\"\n    #               - $ref: \"#/components/schemas/CallEgldNFTFreezeMethod\"\n    #               - $ref: \"#/components/schemas/CallEgldNFTFreezeMethodKMS\"\n    #               - $ref: \"#/components/schemas/CallEgldNFTWipeMethod\"\n    #               - $ref: \"#/components/schemas/CallEgldNFTWipeMethodKMS\"\n    #               - $ref: \"#/components/schemas/CallEgldNFTBurnMethod\"\n    #               - $ref: \"#/components/schemas/CallEgldNFTBurnMethodKMS\"\n    #               - $ref: \"#/components/schemas/CallEgldSCControlMethod\"\n    #               - $ref: \"#/components/schemas/CallEgldSCControlMethodKMS\"\n    #               - $ref: \"#/components/schemas/CallEgldNFTTransferMethod\"\n    #               - $ref: \"#/components/schemas/CallEgldNFTTransferMethodKMS\"\n    #       required: true\n    #     responses:\n    #       200:\n    #         content:\n    #           application/json:\n    #             schema:\n    #               oneOf:\n    #                 - $ref: \"#/components/schemas/TransactionHashKMS\"\n    #                 - $ref: \"#/components/schemas/SignatureId\"\n    #                 - $ref: \"#/components/schemas/Data\"\n    #         description: OK\n    #       400:\n    #         \u003c\u003c: *API400\n    #       401:\n    #         \u003c\u003c: *API401\n    #       403:\n    #         description: Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.\n    #         content:\n    #           application/json:\n    #             schema:\n    #               oneOf:\n    #                 - $ref: \"#/components/schemas/Error403EgldBroadcast\"\n    #                 - $ref: \"#/components/schemas/Error403EgldGasCalculation\"\n    #                 - $ref: \"#/components/schemas/Error403EgldTxHash\"\n    #                 - $ref: \"#/components/schemas/Error403EgldTxSign\"\n    #       500:\n    #         \u003c\u003c: *API500\n    #     security:\n    #       - X-Api-Key: [ ]\n    #     x-code-samples:\n    #     summary: Working with a NFT/SFT\n    #     tags:\n    #       - Blockchain / Elrond Network (EGLD)\n  /v3/egld/broadcast:\n    post:\n      description: |\n        \u003ch4\u003e2 credits per API call.\u003c/h4\u003e\u003cbr/\u003e\n        \u003cp\u003eBroadcast signed transaction to EGLD blockchain. This method is used internally from Tatum KMS or Tatum client libraries.\n        It is possible to create custom signing mechanism and use this method only for broadcasting data to the blockchian.\u003c/p\u003e\n      operationId: EgldBroadcast\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BroadcastKMS\"\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TransactionHashKMS\"\n          description: OK\n        400:\n          \u003c\u003c: *API400\n        401:\n          \u003c\u003c: *API401\n        403:\n          description: Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403EgldBroadcast\"\n        500:\n          \u003c\u003c: *API500\n      security:\n        - X-Api-Key: [ ]\n      x-code-samples:\n      summary: Broadcast signed EGLD transaction\n      tags:\n        - Blockchain / Elrond Network (EGLD)\ncomponents:\n  securitySchemes:\n    X-Api-Key:\n      description: |\n        To maintain the highest security level, Tatum requires X-API-Key HTTP header.\n        This X-API-Key represents identification of the plan and can be used by 1 developer or per environment.\n        Each X-API-Key is bound to the test or production blockchains.\n      in: header\n      name: x-api-key\n      type: apiKey\n  schemas:\n    EgldBlock:\n      type: object\n      properties:\n        nonce:\n          description: The block height.\n          type: number\n          example: 5440076\n        round:\n          description: The round number.\n          type: number\n          example: 186582\n        hash:\n          description: Hash of the block.\n          type: string\n          example: bd2de3618929b696807f6ef8a619f93d29d639aec9277f9c6f8569a8487141b1\n        prevBlockHash:\n          description: Hash of the previous block.\n          type: string\n          example: 2a11aad21e933be58200839ff875f0ca7e955b8c483a0e117cb92409e5d2a5da\n        epoch:\n          description: An epoch is a sequence of consecutive rounds during which the configuration of the network does not change (currently aprox. 24 hrs in length).\n          type: number\n          example: 18\n        numTxs:\n          description: Number of transactions in current block.\n          type: number\n          example: 8\n        shardBlocks:\n          description: Array of shard blocks\n          type: array\n          items:\n            $ref: \"#/components/schemas/EgldShardBlock\"\n        transactions:\n          description: Array of transactions.\n          type: array\n          items:\n            $ref: \"#/components/schemas/EgldTx\"\n    EgldShardBlock:\n      type: object\n      properties:\n        hash:\n          description: The block hash.\n          type: string\n          example: a6f2ac15a6b1bafdde9afff2297cef49c4c523c516f8ee12fed54be070e9512b\n        nonce:\n          description: The block height.\n          type: number\n          example: 5440070\n        shard:\n          description: The shard number.\n          type: number\n          example: 1\n    EgldTx:\n      type: object\n      properties:\n        type:\n          type: string\n          description: Type of transaction.\n          example:\n        nonce:\n          type: number\n          description: Nonce of the transaction.\n          example: 2\n        round:\n          type: number\n          description: The round number.\n          example: 186580\n        epoch:\n          type: number\n          description: An epoch is a sequence of consecutive rounds during which the configuration of the network does not change (currently aprox. 24 hrs in length).\n          example: 12\n        value:\n          type: string\n          description: Transferred value.\n          example: \"1000000000000000000\"\n        receiver:\n          type: string\n          description: Address of the receiver.\n          example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq7\n        sender:\n          type: string\n          description: Address of the sender.\n          example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq1\n        gasPrice:\n          type: number\n          description: Gas price provided by the sender\n          example: 1000000000\n        gasLimit:\n          type: number\n          description: Gas provided by the sender\n          example: 70000\n        data:\n          type: string\n          description: Data field in transaction.\n          example: \"Zm9yIHRlc3Rz\"\n        signature:\n          type: string\n          description: Signature of the transaction.\n          example: c6ab10b401f14b122caf9d2ef80d532b986aa82b589dac77d77929da27ae2382c6ab10b401f14b122caf9d2ef80d532b986aa82b589dac77d77929da27ae238\n        sourceShard:\n          type: number\n          description: Source shard.\n          example: 2\n        destinationShard:\n          type: number\n          description: Destination shard.\n          example: 1\n        blockNonce:\n          type: number\n          description: Nonce of block which contains current transaction.\n          example: 186535\n        blockHash:\n          type: string\n          description: Hash of block which contains current transaction.\n          example: bd2de3618929b696807f6ef8a619f93d29d639aec9277f9c6f8569a8487141b1\n        miniblockHash:\n          type: string\n          description: Miniblock hash.\n          example: 7cb0a10cf9e9ec9ff719ffe99349db3feac3ec217b6de62f6cf7756647194bbf\n        timestamp:\n          type: number\n          description: The unix timestamp for when the block was collated.\n          example: 1569600592\n        status:\n          type: string\n          description: Status of the transaction.\n          example: \"Success\"\n        hyperblockNonce:\n          type: number\n          description: Nonce of the hyperblockwhere this transaction was in.\n          example: 123321\n        hyperblockHash:\n          type: string\n          description: Hash of the hyperblock where this transaction was in.\n          example: 715224f1f7d8330e3837500d1f82431954e30db6149f3ee4644d0950576d8dfe\n    Error403EgldBroadcast:\n      properties:\n        errorCode:\n          description: egld.broadcast.failed\n          example: egld.broadcast.failed\n          type: string\n        message:\n          description: Unable to broadcast transaction due to ${error}.\n          example: Unable to broadcast transaction due to ${error}.\n          type: string\n        statusCode:\n          description: \"403\"\n          example: 403\n          type: number\n      required:\n        - errorCode\n        - message\n        - statusCode\n      type: object\n    Error403EgldTxHash:\n      properties:\n        errorCode:\n          description: egld.transaction.hash\n          example: egld.transaction.hash\n          type: string\n        message:\n          description: Unable to calculate transaction hash. ${error}\n          example: Unable to calculate transaction hash. ${error}\n          type: string\n        statusCode:\n          description: \"403\"\n          example: 403\n          type: number\n      required:\n        - errorCode\n        - message\n        - statusCode\n      type: object\n    Error403EgldTxSign:\n      properties:\n        errorCode:\n          description: egld.transaction.sign\n          example: egld.transaction.sign\n          type: string\n        message:\n          description: Unable to sign transaction. ${error}\n          example: Unable to sign transaction. ${error}\n          type: string\n        statusCode:\n          description: \"403\"\n          example: 403\n          type: number\n      required:\n        - errorCode\n        - message\n        - statusCode\n      type: object\n    Error403EgldGasCalculation:\n      properties:\n        errorCode:\n          description: egld.transaction.gas\n          example: egld.transaction.gas\n          type: string\n        message:\n          description: Unable to calculate gas limit for transaction. ${error}\n          example: Unable to calculate gas limit for transaction. ${error}\n          type: string\n        statusCode:\n          description: \"403\"\n          example: 403\n          type: number\n      required:\n        - errorCode\n        - message\n        - statusCode\n      type: object\n\n    # TransactionFeeEgldBlockchain:\n    #   type: object\n    #   properties:\n    #     nonce:\n    #       type: number\n    #       description: Nonce of the transaction.\n    #       example: 2\n    #     sender:\n    #       description: Account address of the sender\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq7\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     receiver:\n    #       description: Account address of the receiver or smart contract\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     value:\n    #       type: number\n    #       description: Value to be sent.\n    #       example: 0\n    #     data:\n    #       type: string\n    #       description: Additinal data, that will be passed to blockchain transaction.\n    #       example: Hello world\n    #     chainID:\n    #       type: string\n    #       description: Chain identifier (1 - mainnet, D - devnet).\n    #       example: D\n    #       enum:\n    #         - 1\n    #         - D\n    #         - T\n    #     version:\n    #       type: number\n    #       description: Version of transaction.\n    #       example: 1\n    #   required:\n    #     - nonce\n    #     - sender\n    #     - receiver\n    #     - value\n    #     - chainID\n    #     - version\n    TransferEgldBlockchain:\n      type: object\n      properties:\n        from:\n          description: Account address of the sender\n          example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq7\n          maxLength: 62\n          minLength: 62\n          type: string\n        to:\n          description: Account address of the receiver or smart contract\n          example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n          maxLength: 62\n          minLength: 62\n          type: string\n        amount:\n          type: string\n          description: Value to be sent.\n          example: \"0\"\n        fee:\n          description: Custom defined fee. If not present, it will be calculated automatically.\n          type: object\n          properties:\n            gasLimit:\n              type: string\n              description: Gas limit for transaction. If transfer to a smart contract, then 500000 + an appropriate amount for the method call\n              example: \"500000\"\n              pattern: ^[+]?\\d+$\n            gasPrice:\n              type: string\n              description: Gas price.\n              example: \"1000000000\"\n              pattern: ^[+]?\\d+$\n        data:\n          description: Additinal data, that will be passed to blockchain transaction as data property.\n          type: string\n          example: Hello world\n          # ### This will be used for token transfer example\n          # type: object\n          # required:\n          #   - service\n          #   - tokenId\n          #   - value\n          # properties:\n          #   service:\n          #     type: string\n          #     description: Service name\n          #     example: ESDTTransfer\n          #   tokenId:\n          #     type: string\n          #     description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.\n          #     example: ALC-6258d2\n          #   value:\n          #     type: number\n          #     description: Value to transfer\n          #     example: 5\n          #   methodName:\n          #     type: string\n          #     description: Name of method to call\n          #   arguments:\n          #     type: array\n          #     description: Arguments of the method\n          #     items:\n          #       type: string\n        fromPrivateKey:\n          type: string\n          maxLength: 64\n          minLength: 64\n          example: 0cd8e6217b4a218807b858ffb508483cdcdadbb7a21196727f764a510a692760\n          description: Private key of sender address. Private key, or signature Id must be present.\n      required:\n        - fromPrivateKey\n    TransferEgldBlockchainKMS:\n      type: object\n      properties:\n        from:\n          description: Account address of the sender\n          example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq7\n          maxLength: 62\n          minLength: 62\n          type: string\n        to:\n          description: Account address of the receiver or smart contract\n          example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n          maxLength: 62\n          minLength: 62\n          type: string\n        amount:\n          type: string\n          description: Value to be sent.\n          example: \"0\"\n        fee:\n          description: Custom defined fee. If not present, it will be calculated automatically.\n          type: object\n          properties:\n            gasLimit:\n              type: string\n              description: Gas limit for transaction.\n              example: \"500000\"\n              pattern: ^[+]?\\d+$\n            gasPrice:\n              type: string\n              description: Gas price.\n              example: \"1000000000\"\n              pattern: ^[+]?\\d+$\n        data:\n          description: Additinal data, that will be passed to blockchain transaction as data property.\n          type: string\n          example: Hello world\n          # ### This will be used for token transfer example\n          # type: object\n          # required:\n          #   - service\n          #   - tokenId\n          #   - value\n          # properties:\n          #   service:\n          #     type: string\n          #     description: Service name\n          #     example: ESDTTransfer\n          #   tokenId:\n          #     type: string\n          #     description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.\n          #     example: ALC-6258d2\n          #   value:\n          #     type: number\n          #     description: Value to transfer\n          #     example: 5\n          #   methodName:\n          #     type: string\n          #     description: Name of method to call\n          #   arguments:\n          #     type: array\n          #     description: Arguments of the method\n          #     items:\n          #       type: string\n        index:\n          type: number\n          minimum: 0\n          description: If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.\n        signatureId:\n          type: string\n          minLength: 36\n          maxLength: 36\n          format: uuid\n          example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83\n          description: Identifier of the private key associated in signing application. Private key, or signature Id must be present.\n      required:\n        - signatureId\n        - from\n\n    # CallEgldSCDeployMethod:\n    #   type: object\n    #   properties:\n    #     from:\n    #       description: Account address of the token manager\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     amount:\n    #       type: number\n    #       description: Value to be sent. The issuance cost to be 0.05 EGLD\n    #       example: 0.05\n    #     fee:\n    #       description: Custom defined fee. If not present, it will be calculated automatically.\n    #       type: object\n    #       properties:\n    #         gasLimit:\n    #           type: string\n    #           description: Gas limit for transaction.\n    #           example: \"60000000\"\n    #           pattern: ^[+]?\\d+$\n    #         gasPrice:\n    #           type: string\n    #           description: Gas price.\n    #           example: \"1000000000\"\n    #           pattern: ^[+]?\\d+$\n    #     data:\n    #       type: object\n    #       description: Additinal data, that will be passed to blockchain transaction as data property.\n    #       required:\n    #         - service\n    #         - tokenName\n    #         - tokenTicker\n    #         - initialSupply\n    #         - decimals\n    #       properties:\n    #         service:\n    #           type: string\n    #           description: Service name\n    #           example: issue\n    #         tokenName:\n    #           type: string\n    #           maxLength: 20\n    #           minLength: 3\n    #           description: Token name\n    #           example: MyTokenNo1\n    #         tokenTicker:\n    #           type: string\n    #           maxLength: 10\n    #           minLength: 3\n    #           description: While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.\n    #           example: ALC\n    #         initialSupply:\n    #           type: number\n    #           description: Initial supply\n    #           example: 4091\n    #         decimals:\n    #           type: number\n    #           description: Number of decimals\n    #           example: 6\n    #         properties:\n    #           type: object\n    #           description: Detail information please find here \u003ca href=\"https://docs.elrond.com/developers/esdt-tokens/\" target=\"_blank\"\u003e Elrond DOCS \u003c/a\u003e.\n    #           properties:\n    #             canFreeze:\n    #               type: boolean\n    #               example: true\n    #             canWipe:\n    #               type: boolean\n    #               example: true\n    #             canPause:\n    #               type: boolean\n    #               example: true\n    #             canMint:\n    #               type: boolean\n    #               example: true\n    #             canBurn:\n    #               type: boolean\n    #               example: true\n    #             canChangeOwner:\n    #               type: boolean\n    #               example: true\n    #             canUpgrade:\n    #               type: boolean\n    #               example: true\n    #             canAddSpecialRoles:\n    #               type: boolean\n    #               example: true\n    #     fromPrivateKey:\n    #       type: string\n    #       maxLength: 64\n    #       minLength: 64\n    #       example: 0cd8e6217b4a218807b858ffb508483cdcdadbb7a21196727f764a510a692760\n    #       description: Private key of sender address. Private key, or signature Id must be present.\n    #   required:\n    #     - fromPrivateKey\n    # CallEgldSCDeployMethodKMS:\n    #   type: object\n    #   properties:\n    #     from:\n    #       description: Account address of the token manager\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     amount:\n    #       type: number\n    #       description: Value to be sent. The issuance cost to be 0.05 EGLD.\n    #       example: 0.05\n    #     fee:\n    #       description: Custom defined fee. If not present, it will be calculated automatically.\n    #       type: object\n    #       properties:\n    #         gasLimit:\n    #           type: string\n    #           description: Gas limit for transaction.\n    #           example: \"60000000\"\n    #           pattern: ^[+]?\\d+$\n    #         gasPrice:\n    #           type: string\n    #           description: Gas price.\n    #           example: \"1000000000\"\n    #           pattern: ^[+]?\\d+$\n    #     data:\n    #       type: object\n    #       description: Additinal data, that will be passed to blockchain transaction as data property.\n    #       required:\n    #         - service\n    #         - tokenName\n    #         - tokenTicker\n    #         - initialSupply\n    #         - decimals\n    #       properties:\n    #         service:\n    #           type: string\n    #           description: Service name\n    #           example: issue\n    #         tokenName:\n    #           type: string\n    #           maxLength: 20\n    #           minLength: 3\n    #           description: Token name\n    #           example: MyTokenNo1\n    #         tokenTicker:\n    #           type: string\n    #           maxLength: 10\n    #           minLength: 3\n    #           description: While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.\n    #           example: ALC\n    #         initialSupply:\n    #           type: number\n    #           description: Initial supply\n    #           example: 4091\n    #         decimals:\n    #           type: number\n    #           description: Number of decimals\n    #           example: 6\n    #         properties:\n    #           type: object\n    #           description: Detail information please find here \u003ca href=\"https://docs.elrond.com/developers/esdt-tokens/\" target=\"_blank\"\u003e Elrond DOCS \u003c/a\u003e.\n    #           properties:\n    #             canFreeze:\n    #               type: boolean\n    #               example: true\n    #             canWipe:\n    #               type: boolean\n    #               example: true\n    #             canPause:\n    #               type: boolean\n    #               example: true\n    #             canMint:\n    #               type: boolean\n    #               example: true\n    #             canBurn:\n    #               type: boolean\n    #               example: true\n    #             canChangeOwner:\n    #               type: boolean\n    #               example: true\n    #             canUpgrade:\n    #               type: boolean\n    #               example: true\n    #             canAddSpecialRoles:\n    #               type: boolean\n    #               example: true\n    #     index:\n    #       type: number\n    #       minimum: 0\n    #       description: If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.\n    #     signatureId:\n    #       type: string\n    #       minLength: 36\n    #       maxLength: 36\n    #       format: uuid\n    #       example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83\n    #       description: Identifier of the private key associated in signing application. Private key, or signature Id must be present.\n    #   required:\n    #     - signatureId\n    #     - from\n    # CallEgldSCMintMethod:\n    #   type: object\n    #   properties:\n    #     from:\n    #       description: Account address of the token manager\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     amount:\n    #       type: number\n    #       description: Value to be sent.\n    #       example: 0\n    #     fee:\n    #       description: Custom defined fee. If not present, it will be calculated automatically.\n    #       type: object\n    #       properties:\n    #         gasLimit:\n    #           type: string\n    #           description: Gas limit for transaction.\n    #           example: \"60000000\"\n    #           pattern: ^[+]?\\d+$\n    #         gasPrice:\n    #           type: string\n    #           description: Gas price.\n    #           example: \"1000000000\"\n    #           pattern: ^[+]?\\d+$\n    #     data:\n    #       type: object\n    #       description: Additinal data, that will be passed to blockchain transaction as data property.\n    #       required:\n    #         - service\n    #         - tokenId\n    #         - supply\n    #       properties:\n    #         service:\n    #           type: string\n    #           description: Service name. This operation requires that the option canMint is set to true for the token.\n    #           example: mint\n    #         tokenId:\n    #           type: string\n    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.\n    #           example: ALC-6258d2\n    #           maxLength: 17\n    #           minLength: 10\n    #         supply:\n    #           type: number\n    #           description: New supply.\n    #           example: 10\n    #     fromPrivateKey:\n    #       type: string\n    #       maxLength: 64\n    #       minLength: 64\n    #       example: 0cd8e6217b4a218807b858ffb508483cdcdadbb7a21196727f764a510a692760\n    #       description: Private key of sender address. Private key, or signature Id must be present.\n    #   required:\n    #     - fromPrivateKey\n    # CallEgldSCMintMethodKMS:\n    #   type: object\n    #   properties:\n    #     from:\n    #       description: Account address of the token manager\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     amount:\n    #       type: number\n    #       description: Value to be sent.\n    #       example: 0\n    #     fee:\n    #       description: Custom defined fee. If not present, it will be calculated automatically.\n    #       type: object\n    #       properties:\n    #         gasLimit:\n    #           type: string\n    #           description: Gas limit for transaction.\n    #           example: \"60000000\"\n    #           pattern: ^[+]?\\d+$\n    #         gasPrice:\n    #           type: string\n    #           description: Gas price.\n    #           example: \"1000000000\"\n    #           pattern: ^[+]?\\d+$\n    #     data:\n    #       type: object\n    #       description: Additinal data, that will be passed to blockchain transaction as data property.\n    #       required:\n    #         - service\n    #         - tokenId\n    #         - supply\n    #       properties:\n    #         service:\n    #           type: string\n    #           description: Service name. This operation requires that the option canMint is set to true for the token.\n    #           example: mint\n    #         tokenId:\n    #           type: string\n    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.\n    #           example: ALC-6258d2\n    #           maxLength: 17\n    #           minLength: 10\n    #         supply:\n    #           type: number\n    #           description: New supply.\n    #           example: 10\n    #     index:\n    #       type: number\n    #       minimum: 0\n    #       description: If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.\n    #     signatureId:\n    #       type: string\n    #       minLength: 36\n    #       maxLength: 36\n    #       format: uuid\n    #       example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83\n    #       description: Identifier of the private key associated in signing application. Private key, or signature Id must be present.\n    #   required:\n    #     - signatureId\n    #     - from\n    # CallEgldSCBurnMethod:\n    #   type: object\n    #   properties:\n    #     from:\n    #       description: Account address of a token holder\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     amount:\n    #       type: number\n    #       description: Value to be sent.\n    #       example: 0\n    #     fee:\n    #       description: Custom defined fee. If not present, it will be calculated automatically.\n    #       type: object\n    #       properties:\n    #         gasLimit:\n    #           type: string\n    #           description: Gas limit for transaction.\n    #           example: \"60000000\"\n    #           pattern: ^[+]?\\d+$\n    #         gasPrice:\n    #           type: string\n    #           description: Gas price.\n    #           example: \"1000000000\"\n    #           pattern: ^[+]?\\d+$\n    #     data:\n    #       type: object\n    #       description: Additinal data, that will be passed to blockchain transaction as data property.\n    #       required:\n    #         - service\n    #         - tokenId\n    #         - supply\n    #       properties:\n    #         service:\n    #           type: string\n    #           description: Service name. This operation requires that the option canBurn is set to true for the token.\n    #           example: burn\n    #         tokenId:\n    #           type: string\n    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.\n    #           example: ALC-6258d2\n    #           maxLength: 17\n    #           minLength: 10\n    #         supply:\n    #           type: number\n    #           description: Supply to burn.\n    #           example: 10\n    #     fromPrivateKey:\n    #       type: string\n    #       maxLength: 64\n    #       minLength: 64\n    #       example: 0cd8e6217b4a218807b858ffb508483cdcdadbb7a21196727f764a510a692760\n    #       description: Private key of sender address. Private key, or signature Id must be present.\n    #   required:\n    #     - fromPrivateKey\n    # CallEgldSCBurnMethodKMS:\n    #   type: object\n    #   properties:\n    #     from:\n    #       description: Account address of a token holder\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     amount:\n    #       type: number\n    #       description: Value to be sent.\n    #       example: 0\n    #     fee:\n    #       description: Custom defined fee. If not present, it will be calculated automatically.\n    #       type: object\n    #       properties:\n    #         gasLimit:\n    #           type: string\n    #           description: Gas limit for transaction.\n    #           example: \"60000000\"\n    #           pattern: ^[+]?\\d+$\n    #         gasPrice:\n    #           type: string\n    #           description: Gas price.\n    #           example: \"1000000000\"\n    #           pattern: ^[+]?\\d+$\n    #     data:\n    #       type: object\n    #       description: Additinal data, that will be passed to blockchain transaction as data property.\n    #       required:\n    #         - service\n    #         - tokenId\n    #         - supply\n    #       properties:\n    #         service:\n    #           type: string\n    #           description: Service name. This operation requires that the option canBurn is set to true for the token.\n    #           example: burn\n    #         tokenId:\n    #           type: string\n    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.\n    #           example: ALC-6258d2\n    #           maxLength: 17\n    #           minLength: 10\n    #         supply:\n    #           type: number\n    #           description: Supply to burn.\n    #           example: 10\n    #     index:\n    #       type: number\n    #       minimum: 0\n    #       description: If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.\n    #     signatureId:\n    #       type: string\n    #       minLength: 36\n    #       maxLength: 36\n    #       format: uuid\n    #       example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83\n    #       description: Identifier of the private key associated in signing application. Private key, or signature Id must be present.\n    #   required:\n    #     - signatureId\n    #     - from\n    # CallEgldSCPauseMethod:\n    #   type: object\n    #   properties:\n    #     from:\n    #       description: Account address of the token manager\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     amount:\n    #       type: number\n    #       description: Value to be sent.\n    #       example: 0\n    #     fee:\n    #       description: Custom defined fee. If not present, it will be calculated automatically.\n    #       type: object\n    #       properties:\n    #         gasLimit:\n    #           type: string\n    #           description: Gas limit for transaction.\n    #           example: \"60000000\"\n    #           pattern: ^[+]?\\d+$\n    #         gasPrice:\n    #           type: string\n    #           description: Gas price.\n    #           example: \"1000000000\"\n    #           pattern: ^[+]?\\d+$\n    #     data:\n    #       type: object\n    #       description: Additinal data, that will be passed to blockchain transaction as data property.\n    #       required:\n    #         - service\n    #         - tokenId\n    #       properties:\n    #         service:\n    #           type: string\n    #           description: Service name. This operation requires that the option canPause is set to true for the token.\n    #           example: pause\n    #           enum:\n    #             - pause\n    #             - unPause\n    #         tokenId:\n    #           type: string\n    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.\n    #           example: ALC-6258d2\n    #           maxLength: 17\n    #           minLength: 10\n    #     fromPrivateKey:\n    #       type: string\n    #       maxLength: 64\n    #       minLength: 64\n    #       example: 0cd8e6217b4a218807b858ffb508483cdcdadbb7a21196727f764a510a692760\n    #       description: Private key of sender address. Private key, or signature Id must be present.\n    #   required:\n    #     - fromPrivateKey\n    # CallEgldSCPauseMethodKMS:\n    #   type: object\n    #   properties:\n    #     from:\n    #       description: Account address of the token manager\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     amount:\n    #       type: number\n    #       description: Value to be sent.\n    #       example: 0\n    #     fee:\n    #       description: Custom defined fee. If not present, it will be calculated automatically.\n    #       type: object\n    #       properties:\n    #         gasLimit:\n    #           type: string\n    #           description: Gas limit for transaction.\n    #           example: \"60000000\"\n    #           pattern: ^[+]?\\d+$\n    #         gasPrice:\n    #           type: string\n    #           description: Gas price.\n    #           example: \"1000000000\"\n    #           pattern: ^[+]?\\d+$\n    #     data:\n    #       type: object\n    #       description: Additinal data, that will be passed to blockchain transaction as data property.\n    #       required:\n    #         - service\n    #         - tokenId\n    #       properties:\n    #         service:\n    #           type: string\n    #           description: Service name. This operation requires that the option canPause is set to true for the token.\n    #           example: pause\n    #           enum:\n    #             - pause\n    #             - unPause\n    #         tokenId:\n    #           type: string\n    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.\n    #           example: ALC-6258d2\n    #           maxLength: 17\n    #           minLength: 10\n    #     index:\n    #       type: number\n    #       minimum: 0\n    #       description: If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.\n    #     signatureId:\n    #       type: string\n    #       minLength: 36\n    #       maxLength: 36\n    #       format: uuid\n    #       example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83\n    #       description: Identifier of the private key associated in signing application. Private key, or signature Id must be present.\n    #   required:\n    #     - signatureId\n    #     - from\n    # CallEgldSCFreezeMethod:\n    #   type: object\n    #   properties:\n    #     from:\n    #       description: Account address of the token manager\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     amount:\n    #       type: number\n    #       description: Value to be sent.\n    #       example: 0\n    #     fee:\n    #       description: Custom defined fee. If not present, it will be calculated automatically.\n    #       type: object\n    #       properties:\n    #         gasLimit:\n    #           type: string\n    #           description: Gas limit for transaction.\n    #           example: \"60000000\"\n    #           pattern: ^[+]?\\d+$\n    #         gasPrice:\n    #           type: string\n    #           description: Gas price.\n    #           example: \"1000000000\"\n    #           pattern: ^[+]?\\d+$\n    #     data:\n    #       type: object\n    #       description: Additinal data, that will be passed to blockchain transaction as data property.\n    #       required:\n    #         - service\n    #         - tokenId\n    #         - account\n    #       properties:\n    #         service:\n    #           type: string\n    #           description: Service name. This operation requires that the option canFreeze is set to true for the token.\n    #           example: freeze\n    #           enum:\n    #             - freeze\n    #             - unFreeze\n    #         tokenId:\n    #           type: string\n    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.\n    #           example: ALC-6258d2\n    #           maxLength: 17\n    #           minLength: 10\n    #         account:\n    #           description: Account address of freeze/unfreeze\n    #           example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #           maxLength: 62\n    #           minLength: 62\n    #           type: string\n    #     fromPrivateKey:\n    #       type: string\n    #       maxLength: 64\n    #       minLength: 64\n    #       example: 0cd8e6217b4a218807b858ffb508483cdcdadbb7a21196727f764a510a692760\n    #       description: Private key of sender address. Private key, or signature Id must be present.\n    #   required:\n    #     - fromPrivateKey\n    # CallEgldSCFreezeMethodKMS:\n    #   type: object\n    #   properties:\n    #     from:\n    #       description: Account address of the token manager\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     amount:\n    #       type: number\n    #       description: Value to be sent.\n    #       example: 0\n    #     fee:\n    #       description: Custom defined fee. If not present, it will be calculated automatically.\n    #       type: object\n    #       properties:\n    #         gasLimit:\n    #           type: string\n    #           description: Gas limit for transaction.\n    #           example: \"60000000\"\n    #           pattern: ^[+]?\\d+$\n    #         gasPrice:\n    #           type: string\n    #           description: Gas price.\n    #           example: \"1000000000\"\n    #           pattern: ^[+]?\\d+$\n    #     data:\n    #       type: object\n    #       description: Additinal data, that will be passed to blockchain transaction as data property.\n    #       required:\n    #         - service\n    #         - tokenId\n    #         - account\n    #       properties:\n    #         service:\n    #           type: string\n    #           description: Service name. This operation requires that the option canFreeze is set to true for the token.\n    #           example: freeze\n    #           enum:\n    #             - freeze\n    #             - unFreeze\n    #         tokenId:\n    #           type: string\n    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.\n    #           example: ALC-6258d2\n    #           maxLength: 17\n    #           minLength: 10\n    #         account:\n    #           description: Account address of freeze/unfreeze\n    #           example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #           maxLength: 62\n    #           minLength: 62\n    #           type: string\n    #     index:\n    #       type: number\n    #       minimum: 0\n    #       description: If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.\n    #     signatureId:\n    #       type: string\n    #       minLength: 36\n    #       maxLength: 36\n    #       format: uuid\n    #       example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83\n    #       description: Identifier of the private key associated in signing application. Private key, or signature Id must be present.\n    #   required:\n    #     - signatureId\n    #     - from\n    # CallEgldSCWipeMethod:\n    #   type: object\n    #   properties:\n    #     from:\n    #       description: Account address of the token manager\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     amount:\n    #       type: number\n    #       description: Value to be sent.\n    #       example: 0\n    #     fee:\n    #       description: Custom defined fee. If not present, it will be calculated automatically.\n    #       type: object\n    #       properties:\n    #         gasLimit:\n    #           type: string\n    #           description: Gas limit for transaction.\n    #           example: \"60000000\"\n    #           pattern: ^[+]?\\d+$\n    #         gasPrice:\n    #           type: string\n    #           description: Gas price.\n    #           example: \"1000000000\"\n    #           pattern: ^[+]?\\d+$\n    #     data:\n    #       type: object\n    #       description: Additinal data, that will be passed to blockchain transaction as data property.\n    #       required:\n    #         - service\n    #         - tokenId\n    #         - account\n    #       properties:\n    #         service:\n    #           type: string\n    #           description: Service name. The Account must have been frozen beforehand, and 'wipe' must be done by the token manager.\n    #           example: wipe\n    #         tokenId:\n    #           type: string\n    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.\n    #           example: ALC-6258d2\n    #           maxLength: 17\n    #           minLength: 10\n    #         account:\n    #           description: Account address of wipe\n    #           example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #           maxLength: 62\n    #           minLength: 62\n    #           type: string\n    #     fromPrivateKey:\n    #       type: string\n    #       maxLength: 64\n    #       minLength: 64\n    #       example: 0cd8e6217b4a218807b858ffb508483cdcdadbb7a21196727f764a510a692760\n    #       description: Private key of sender address. Private key, or signature Id must be present.\n    #   required:\n    #     - fromPrivateKey\n    # CallEgldSCWipeMethodKMS:\n    #   type: object\n    #   properties:\n    #     from:\n    #       description: Account address of the token manager\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     amount:\n    #       type: number\n    #       description: Value to be sent.\n    #       example: 0\n    #     fee:\n    #       description: Custom defined fee. If not present, it will be calculated automatically.\n    #       type: object\n    #       properties:\n    #         gasLimit:\n    #           type: string\n    #           description: Gas limit for transaction.\n    #           example: \"60000000\"\n    #           pattern: ^[+]?\\d+$\n    #         gasPrice:\n    #           type: string\n    #           description: Gas price.\n    #           example: \"1000000000\"\n    #           pattern: ^[+]?\\d+$\n    #     data:\n    #       type: object\n    #       description: Additinal data, that will be passed to blockchain transaction as data property.\n    #       required:\n    #         - service\n    #         - tokenId\n    #         - account\n    #       properties:\n    #         service:\n    #           type: string\n    #           description: Service name. The Account must have been frozen beforehand, and 'wipe' must be done by the token manager.\n    #           example: wipe\n    #         tokenId:\n    #           type: string\n    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.\n    #           example: ALC-6258d2\n    #           maxLength: 17\n    #           minLength: 10\n    #         account:\n    #           description: Account address of wipe\n    #           example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #           maxLength: 62\n    #           minLength: 62\n    #           type: string\n    #     index:\n    #       type: number\n    #       minimum: 0\n    #       description: If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.\n    #     signatureId:\n    #       type: string\n    #       minLength: 36\n    #       maxLength: 36\n    #       format: uuid\n    #       example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83\n    #       description: Identifier of the private key associated in signing application. Private key, or signature Id must be present.\n    #   required:\n    #     - signatureId\n    #     - from\n    # CallEgldSCRoleMethod:\n    #   type: object\n    #   properties:\n    #     from:\n    #       description: Address of the ESDT manager\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     amount:\n    #       type: number\n    #       description: Value to be sent.\n    #       example: 0\n    #     fee:\n    #       description: Custom defined fee. If not present, it will be calculated automatically.\n    #       type: object\n    #       properties:\n    #         gasLimit:\n    #           type: string\n    #           description: Gas limit for transaction.\n    #           example: \"60000000\"\n    #           pattern: ^[+]?\\d+$\n    #         gasPrice:\n    #           type: string\n    #           description: Gas price.\n    #           example: \"1000000000\"\n    #           pattern: ^[+]?\\d+$\n    #     data:\n    #       type: object\n    #       description: Additinal data, that will be passed to blockchain transaction as data property.\n    #       required:\n    #         - service\n    #         - tokenId\n    #         - account\n    #         - role\n    #       properties:\n    #         service:\n    #           type: string\n    #           description: Service name. Only applicable if canAddSpecialRoles property is true.\n    #           example: setSpecialRole\n    #           enum:\n    #             - setSpecialRole\n    #             - unSetSpecialRole\n    #         tokenId:\n    #           type: string\n    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.\n    #           example: ALC-6258d2\n    #           maxLength: 17\n    #           minLength: 10\n    #         account:\n    #           description: Account to assign/remove the role(s)\n    #           example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #           maxLength: 62\n    #           minLength: 62\n    #           type: string\n    #         role:\n    #           type: array\n    #           description: Role name\n    #           items:\n    #             type: string\n    #             enum:\n    #               - ESDTRoleLocalMint\n    #               - ESDTRoleLocalBurn\n    #               - ESDTRoleNFTCreate\n    #               - ESDTRoleNFTBurn\n    #               - ESDTRoleNFTAddQuantity\n    #     fromPrivateKey:\n    #       type: string\n    #       maxLength: 64\n    #       minLength: 64\n    #       example: 0cd8e6217b4a218807b858ffb508483cdcdadbb7a21196727f764a510a692760\n    #       description: Private key of sender address. Private key, or signature Id must be present.\n    #   required:\n    #     - fromPrivateKey\n    # CallEgldSRoleMethodKMS:\n    #   type: object\n    #   properties:\n    #     from:\n    #       description: Address of the ESDT manager\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     amount:\n    #       type: number\n    #       description: Value to be sent.\n    #       example: 0\n    #     fee:\n    #       description: Custom defined fee. If not present, it will be calculated automatically.\n    #       type: object\n    #       properties:\n    #         gasLimit:\n    #           type: string\n    #           description: Gas limit for transaction.\n    #           example: \"60000000\"\n    #           pattern: ^[+]?\\d+$\n    #         gasPrice:\n    #           type: string\n    #           description: Gas price.\n    #           example: \"1000000000\"\n    #           pattern: ^[+]?\\d+$\n    #     data:\n    #       type: object\n    #       description: Additinal data, that will be passed to blockchain transaction as data property.\n    #       required:\n    #         - service\n    #         - tokenId\n    #         - account\n    #         - role\n    #       properties:\n    #         service:\n    #           type: string\n    #           description: Service name. Only applicable if canAddSpecialRoles property is true.\n    #           example: setSpecialRole\n    #           enum:\n    #             - setSpecialRole\n    #             - unSetSpecialRole\n    #         tokenId:\n    #           type: string\n    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.\n    #           example: ALC-6258d2\n    #           maxLength: 17\n    #           minLength: 10\n    #         account:\n    #           description: Account to assign/remove the role(s)\n    #           example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #           maxLength: 62\n    #           minLength: 62\n    #           type: string\n    #         role:\n    #           type: array\n    #           description: Role name\n    #           items:\n    #             type: string\n    #             enum:\n    #               - ESDTRoleLocalMint\n    #               - ESDTRoleLocalBurn\n    #               - ESDTRoleNFTCreate\n    #               - ESDTRoleNFTBurn\n    #               - ESDTRoleNFTAddQuantity\n    #     index:\n    #       type: number\n    #       minimum: 0\n    #       description: If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.\n    #     signatureId:\n    #       type: string\n    #       minLength: 36\n    #       maxLength: 36\n    #       format: uuid\n    #       example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83\n    #       description: Identifier of the private key associated in signing application. Private key, or signature Id must be present.\n    #   required:\n    #     - signatureId\n    #     - from\n    # CallEgldSCOwnerMethod:\n    #   type: object\n    #   properties:\n    #     from:\n    #       description: Account address of the token manager\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     amount:\n    #       type: number\n    #       description: Value to be sent.\n    #       example: 0\n    #     fee:\n    #       description: Custom defined fee. If not present, it will be calculated automatically.\n    #       type: object\n    #       properties:\n    #         gasLimit:\n    #           type: string\n    #           description: Gas limit for transaction.\n    #           example: \"60000000\"\n    #           pattern: ^[+]?\\d+$\n    #         gasPrice:\n    #           type: string\n    #           description: Gas price.\n    #           example: \"1000000000\"\n    #           pattern: ^[+]?\\d+$\n    #     data:\n    #       type: object\n    #       description: Additinal data, that will be passed to blockchain transaction as data property.\n    #       required:\n    #         - service\n    #         - tokenId\n    #         - account\n    #         - role\n    #       properties:\n    #         service:\n    #           type: string\n    #           description: Service name. Only applicable if canChangeOwner property is true.\n    #           example: transferOwnership\n    #         tokenId:\n    #           type: string\n    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.\n    #           example: ALC-6258d2\n    #           maxLength: 17\n    #           minLength: 10\n    #         account:\n    #           description: Account to assign/remove the role(s)\n    #           example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #           maxLength: 62\n    #           minLength: 62\n    #           type: string\n    #     fromPrivateKey:\n    #       type: string\n    #       maxLength: 64\n    #       minLength: 64\n    #       example: 0cd8e6217b4a218807b858ffb508483cdcdadbb7a21196727f764a510a692760\n    #       description: Private key of sender address. Private key, or signature Id must be present.\n    #   required:\n    #     - fromPrivateKey\n    # CallEgldSCOwnerMethodKMS:\n    #   type: object\n    #   properties:\n    #     from:\n    #       description: Account address of the token manager\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     amount:\n    #       type: number\n    #       description: Value to be sent.\n    #       example: 0\n    #     fee:\n    #       description: Custom defined fee. If not present, it will be calculated automatically.\n    #       type: object\n    #       properties:\n    #         gasLimit:\n    #           type: string\n    #           description: Gas limit for transaction.\n    #           example: \"60000000\"\n    #           pattern: ^[+]?\\d+$\n    #         gasPrice:\n    #           type: string\n    #           description: Gas price.\n    #           example: \"1000000000\"\n    #           pattern: ^[+]?\\d+$\n    #     data:\n    #       type: object\n    #       description: Additinal data, that will be passed to blockchain transaction as data property.\n    #       required:\n    #         - service\n    #         - tokenId\n    #         - account\n    #         - role\n    #       properties:\n    #         service:\n    #           type: string\n    #           description: Service name. Only applicable if canChangeOwner property is true.\n    #           example: transferOwnership\n    #         tokenId:\n    #           type: string\n    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.\n    #           example: ALC-6258d2\n    #           maxLength: 17\n    #           minLength: 10\n    #         account:\n    #           description: Account to assign/remove the role(s)\n    #           example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #           maxLength: 62\n    #           minLength: 62\n    #           type: string\n    #     index:\n    #       type: number\n    #       minimum: 0\n    #       description: If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.\n    #     signatureId:\n    #       type: string\n    #       minLength: 36\n    #       maxLength: 36\n    #       format: uuid\n    #       example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83\n    #       description: Identifier of the private key associated in signing application. Private key, or signature Id must be present.\n    #   required:\n    #     - signatureId\n    #     - from\n    # CallEgldSCControlMethod:\n    #   type: object\n    #   properties:\n    #     from:\n    #       description: Account address of the token manager\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     amount:\n    #       type: number\n    #       description: Value to be sent.\n    #       example: 0\n    #     fee:\n    #       description: Custom defined fee. If not present, it will be calculated automatically.\n    #       type: object\n    #       properties:\n    #         gasLimit:\n    #           type: string\n    #           description: Gas limit for transaction.\n    #           example: \"60000000\"\n    #           pattern: ^[+]?\\d+$\n    #         gasPrice:\n    #           type: string\n    #           description: Gas price.\n    #           example: \"1000000000\"\n    #           pattern: ^[+]?\\d+$\n    #     data:\n    #       type: object\n    #       description: Additinal data, that will be passed to blockchain transaction as data property.\n    #       required:\n    #         - service\n    #         - tokenId\n    #         - properties\n    #       properties:\n    #         service:\n    #           type: string\n    #           description: The manager of an ESDT token may individually change any of the properties of the token.\n    #           example: controlChanges\n    #         tokenId:\n    #           type: string\n    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.\n    #           example: ALC-6258d2\n    #           maxLength: 17\n    #           minLength: 10\n    #         properties:\n    #           type: object\n    #           description: Detail information please find here \u003ca href=\"https://docs.elrond.com/developers/esdt-tokens/\" target=\"_blank\"\u003e Elrond DOCS \u003c/a\u003e.\n    #           properties:\n    #             propertyName:\n    #               type: boolean\n    #               description: Change 'propertyName' to real property name, for example 'canFreeze'.\n    #               example: true\n    #     fromPrivateKey:\n    #       type: string\n    #       maxLength: 64\n    #       minLength: 64\n    #       example: 0cd8e6217b4a218807b858ffb508483cdcdadbb7a21196727f764a510a692760\n    #       description: Private key of sender address. Private key, or signature Id must be present.\n    #   required:\n    #     - fromPrivateKey\n    # CallEgldSCControlMethodKMS:\n    #   type: object\n    #   properties:\n    #     from:\n    #       description: Account address of the token manager\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     amount:\n    #       type: number\n    #       description: Value to be sent.\n    #       example: 0\n    #     fee:\n    #       description: Custom defined fee. If not present, it will be calculated automatically.\n    #       type: object\n    #       properties:\n    #         gasLimit:\n    #           type: string\n    #           description: Gas limit for transaction.\n    #           example: \"60000000\"\n    #           pattern: ^[+]?\\d+$\n    #         gasPrice:\n    #           type: string\n    #           description: Gas price.\n    #           example: \"1000000000\"\n    #           pattern: ^[+]?\\d+$\n    #     data:\n    #       type: object\n    #       description: Additinal data, that will be passed to blockchain transaction as data property.\n    #       required:\n    #         - service\n    #         - tokenId\n    #         - properties\n    #       properties:\n    #         service:\n    #           type: string\n    #           description: The manager of an ESDT token may individually change any of the properties of the token.\n    #           example: controlChanges\n    #         tokenId:\n    #           type: string\n    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.\n    #           example: ALC-6258d2\n    #           maxLength: 17\n    #           minLength: 10\n    #         properties:\n    #           type: object\n    #           description: Detail information please find here \u003ca href=\"https://docs.elrond.com/developers/esdt-tokens/\" target=\"_blank\"\u003e Elrond DOCS \u003c/a\u003e.\n    #           properties:\n    #             propertyName:\n    #               type: boolean\n    #               description: Change 'propertyName' to real property name, for example 'canFreeze'.\n    #               example: true\n    #     index:\n    #       type: number\n    #       minimum: 0\n    #       description: If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.\n    #     signatureId:\n    #       type: string\n    #       minLength: 36\n    #       maxLength: 36\n    #       format: uuid\n    #       example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83\n    #       description: Identifier of the private key associated in signing application. Private key, or signature Id must be present.\n    #   required:\n    #     - signatureId\n    #     - from\n    # CallEgldSCTransferMethod:\n    #   type: object\n    #   properties:\n    #     from:\n    #       description: Account address of the sender\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     to:\n    #       description: Account address of the receiver\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     amount:\n    #       type: number\n    #       description: Value to be sent.\n    #       example: 0\n    #     fee:\n    #       description: Custom defined fee. If not present, it will be calculated automatically.\n    #       type: object\n    #       properties:\n    #         gasLimit:\n    #           type: string\n    #           description: Gas limit for transaction.\n    #           example: \"60000000\"\n    #           pattern: ^[+]?\\d+$\n    #         gasPrice:\n    #           type: string\n    #           description: Gas price.\n    #           example: \"1000000000\"\n    #           pattern: ^[+]?\\d+$\n    #     data:\n    #       type: object\n    #       description: Additinal data, that will be passed to blockchain transaction as data property.\n    #       required:\n    #         - service\n    #         - tokenId\n    #         - nonce\n    #         - quantity\n    #         - to\n    #       properties:\n    #         service:\n    #           type: string\n    #           description: Service name\n    #           example: ESDTTransfer\n    #         tokenId:\n    #           type: string\n    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.\n    #           example: ALC-6258d2\n    #           maxLength: 17\n    #           minLength: 10\n    #         nonce:\n    #           type: number\n    #           description: The nonce after the NFT creation\n    #           example: 5\n    #         quantity:\n    #           type: number\n    #           description: Quantity to transfer\n    #           example: 9\n    #         to:\n    #           type: string\n    #           description: Destination address\n    #           example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq7\n    #         methodName:\n    #           type: string\n    #           description: Name of method to call\n    #         arguments:\n    #           type: array\n    #           description: Arguments of the method\n    #           items:\n    #             type: string\n    #     fromPrivateKey:\n    #       type: string\n    #       maxLength: 64\n    #       minLength: 64\n    #       example: 0cd8e6217b4a218807b858ffb508483cdcdadbb7a21196727f764a510a692760\n    #       description: Private key of sender address. Private key, or signature Id must be present.\n    #   required:\n    #     - fromPrivateKey\n    # CallEgldSCTransferMethodKMS:\n    #   type: object\n    #   properties:\n    #     from:\n    #       description: Account address of the sender\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     to:\n    #       description: Account address of the receiver\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     amount:\n    #       type: number\n    #       description: Value to be sent.\n    #       example: 0\n    #     fee:\n    #       description: Custom defined fee. If not present, it will be calculated automatically.\n    #       type: object\n    #       properties:\n    #         gasLimit:\n    #           type: string\n    #           description: Gas limit for transaction.\n    #           example: \"60000000\"\n    #           pattern: ^[+]?\\d+$\n    #         gasPrice:\n    #           type: string\n    #           description: Gas price.\n    #           example: \"1000000000\"\n    #           pattern: ^[+]?\\d+$\n    #     data:\n    #       type: object\n    #       description: Additinal data, that will be passed to blockchain transaction as data property.\n    #       required:\n    #         - service\n    #         - tokenId\n    #         - nonce\n    #         - quantity\n    #         - to\n    #       properties:\n    #         service:\n    #           type: string\n    #           description: Service name\n    #           example: ESDTTransfer\n    #         tokenId:\n    #           type: string\n    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.\n    #           example: ALC-6258d2\n    #           maxLength: 17\n    #           minLength: 10\n    #         nonce:\n    #           type: number\n    #           description: The nonce after the NFT creation\n    #           example: 5\n    #         quantity:\n    #           type: number\n    #           description: Quantity to transfer\n    #           example: 9\n    #         to:\n    #           type: string\n    #           description: Destination address\n    #           example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq7\n    #         methodName:\n    #           type: string\n    #           description: Name of method to call\n    #         arguments:\n    #           type: array\n    #           description: Arguments of the method\n    #           items:\n    #             type: string\n    #     index:\n    #       type: number\n    #       minimum: 0\n    #       description: If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.\n    #     signatureId:\n    #       type: string\n    #       minLength: 36\n    #       maxLength: 36\n    #       format: uuid\n    #       example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83\n    #       description: Identifier of the private key associated in signing application. Private key, or signature Id must be present.\n    #   required:\n    #     - signatureId\n    #     - from\n\n    # CallEgldNFTDeployMethod:\n    #   type: object\n    #   properties:\n    #     from:\n    #       description: Account address of the token manager\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     amount:\n    #       type: number\n    #       description: Value to be sent. The issuance cost to be 0.05 EGLD\n    #       example: 0.05\n    #     fee:\n    #       description: Custom defined fee. If not present, it will be calculated automatically.\n    #       type: object\n    #       properties:\n    #         gasLimit:\n    #           type: string\n    #           description: Gas limit for transaction.\n    #           example: \"60000000\"\n    #           pattern: ^[+]?\\d+$\n    #         gasPrice:\n    #           type: string\n    #           description: Gas price.\n    #           example: \"1000000000\"\n    #           pattern: ^[+]?\\d+$\n    #     data:\n    #       type: object\n    #       description: Additinal data, that will be passed to blockchain transaction as data property.\n    #       required:\n    #         - service\n    #         - tokenName\n    #         - tokenTicker\n    #       properties:\n    #         service:\n    #           type: string\n    #           description: Service name\n    #           example: issueNonFungible\n    #           enum:\n    #             - issueNonFungible\n    #             - issueSemiFungible\n    #         tokenName:\n    #           type: string\n    #           maxLength: 20\n    #           minLength: 3\n    #           description: Token name\n    #           example: MyTokenNo1\n    #         tokenTicker:\n    #           type: string\n    #           maxLength: 10\n    #           minLength: 3\n    #           description: While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.\n    #           example: ALC\n    #         properties:\n    #           type: object\n    #           description: Detail information please find here \u003ca href=\"https://docs.elrond.com/developers/nft-tokens/\" target=\"_blank\"\u003e Elrond DOCS \u003c/a\u003e.\n    #           properties:\n    #             canFreeze:\n    #               type: boolean\n    #               example: true\n    #             canWipe:\n    #               type: boolean\n    #               example: true\n    #             canPause:\n    #               type: boolean\n    #               example: true\n    #             canTransferNFTCreateRole:\n    #               type: boolean\n    #               example: true\n    #     fromPrivateKey:\n    #       type: string\n    #       maxLength: 64\n    #       minLength: 64\n    #       example: 0cd8e6217b4a218807b858ffb508483cdcdadbb7a21196727f764a510a692760\n    #       description: Private key of sender address. Private key, or signature Id must be present.\n    #   required:\n    #     - fromPrivateKey\n    # CallEgldNFTDeployMethodKMS:\n    #   type: object\n    #   properties:\n    #     from:\n    #       description: Account address of the token manager\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     amount:\n    #       type: number\n    #       description: Value to be sent. The issuance cost to be 0.05 EGLD\n    #       example: 0.05\n    #     fee:\n    #       description: Custom defined fee. If not present, it will be calculated automatically.\n    #       type: object\n    #       properties:\n    #         gasLimit:\n    #           type: string\n    #           description: Gas limit for transaction.\n    #           example: \"60000000\"\n    #           pattern: ^[+]?\\d+$\n    #         gasPrice:\n    #           type: string\n    #           description: Gas price.\n    #           example: \"1000000000\"\n    #           pattern: ^[+]?\\d+$\n    #     data:\n    #       type: object\n    #       description: Additinal data, that will be passed to blockchain transaction as data property.\n    #       required:\n    #         - service\n    #         - tokenName\n    #         - tokenTicker\n    #       properties:\n    #         service:\n    #           type: string\n    #           description: Service name\n    #           example: issueNonFungible\n    #           enum:\n    #             - issueNonFungible\n    #             - issueSemiFungible\n    #         tokenName:\n    #           type: string\n    #           maxLength: 20\n    #           minLength: 3\n    #           description: Token name\n    #           example: MyTokenNo1\n    #         tokenTicker:\n    #           type: string\n    #           maxLength: 10\n    #           minLength: 3\n    #           description: While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.\n    #           example: ALC\n    #         properties:\n    #           type: object\n    #           description: Detail information please find here \u003ca href=\"https://docs.elrond.com/developers/nft-tokens/\" target=\"_blank\"\u003e Elrond DOCS \u003c/a\u003e.\n    #           properties:\n    #             canFreeze:\n    #               type: boolean\n    #               example: true\n    #             canWipe:\n    #               type: boolean\n    #               example: true\n    #             canPause:\n    #               type: boolean\n    #               example: true\n    #             canTransferNFTCreateRole:\n    #               type: boolean\n    #               example: true\n    #     index:\n    #       type: number\n    #       minimum: 0\n    #       description: If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.\n    #     signatureId:\n    #       type: string\n    #       minLength: 36\n    #       maxLength: 36\n    #       format: uuid\n    #       example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83\n    #       description: Identifier of the private key associated in signing application. Private key, or signature Id must be present.\n    #   required:\n    #     - signatureId\n    #     - from\n    # CallEgldNFTCreateMethod:\n    #   type: object\n    #   properties:\n    #     from:\n    #       description: Address with ESDTRoleNFTCreate role\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     to:\n    #       description: Is same as sender account address.\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     amount:\n    #       type: number\n    #       description: Value to be sent.\n    #       example: 0\n    #     fee:\n    #       description: Custom defined fee. If not present, it will be calculated automatically.\n    #       type: object\n    #       properties:\n    #         gasLimit:\n    #           type: string\n    #           description: Gas limit for transaction.\n    #           example: \"60000000\"\n    #           pattern: ^[+]?\\d+$\n    #         gasPrice:\n    #           type: string\n    #           description: Gas price.\n    #           example: \"1000000000\"\n    #           pattern: ^[+]?\\d+$\n    #     data:\n    #       type: object\n    #       description: Additinal data, that will be passed to blockchain transaction as data property.\n    #       required:\n    #         - service\n    #         - tokenId\n    #         - nftName\n    #         - quantity\n    #         - royalties\n    #         - uri\n    #         - to\n    #       properties:\n    #         service:\n    #           type: string\n    #           description: Service name\n    #           example: ESDTNFTCreate\n    #         tokenId:\n    #           type: string\n    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.\n    #           example: ALC-6258d2\n    #           maxLength: 17\n    #           minLength: 10\n    #         nftName:\n    #           type: string\n    #           description: NTF/SFT token name\n    #           example: Beautiful song\n    #         quantity:\n    #           type: number\n    #           description: The quantity of the token. If NFT, it must be 1\n    #           example: 1\n    #         royalties:\n    #           type: number\n    #           description: Allows the creator to receive royalties in %\n    #           example: 5\n    #           minimum: 0\n    #           maximum: 100\n    #         hash:\n    #           type: string\n    #           description: Field that should contain the hash of the NFT metadata.\n    #           example: 715224f1f7d8330e3837500d1f82431954e30db6149f3ee4644d0950576d8dfe\n    #         attributes:\n    #           type: string\n    #           description: Field that should contain a set of attributes in the format desired by the creator\n    #         uri:\n    #           type: array\n    #           description: URL to a media file or something similar.\n    #           minLength: 1\n    #           items:\n    #             type: string\n    #     fromPrivateKey:\n    #       type: string\n    #       maxLength: 64\n    #       minLength: 64\n    #       example: 0cd8e6217b4a218807b858ffb508483cdcdadbb7a21196727f764a510a692760\n    #       description: Private key of sender address. Private key, or signature Id must be present.\n    #   required:\n    #     - fromPrivateKey\n    # CallEgldNFTCreateMethodKMS:\n    #   type: object\n    #   properties:\n    #     from:\n    #       description: Address with ESDTRoleNFTCreate role\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     to:\n    #       description: Is same as sender account address.\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     amount:\n    #       type: number\n    #       description: Value to be sent.\n    #       example: 0\n    #     fee:\n    #       description: Custom defined fee. If not present, it will be calculated automatically.\n    #       type: object\n    #       properties:\n    #         gasLimit:\n    #           type: string\n    #           description: Gas limit for transaction.\n    #           example: \"60000000\"\n    #           pattern: ^[+]?\\d+$\n    #         gasPrice:\n    #           type: string\n    #           description: Gas price.\n    #           example: \"1000000000\"\n    #           pattern: ^[+]?\\d+$\n    #     data:\n    #       type: object\n    #       description: Additinal data, that will be passed to blockchain transaction as data property.\n    #       required:\n    #         - service\n    #         - tokenId\n    #         - nftName\n    #         - quantity\n    #         - royalties\n    #         - uri\n    #         - to\n    #       properties:\n    #         service:\n    #           type: string\n    #           description: Service name\n    #           example: ESDTNFTCreate\n    #         tokenId:\n    #           type: string\n    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.\n    #           example: ALC-6258d2\n    #           maxLength: 17\n    #           minLength: 10\n    #         nftName:\n    #           type: string\n    #           description: NTF/SFT token name\n    #           example: Beautiful song\n    #         quantity:\n    #           type: number\n    #           description: The quantity of the token. If NFT, it must be 1\n    #           example: 1\n    #         royalties:\n    #           type: number\n    #           description: Allows the creator to receive royalties in %\n    #           example: 5\n    #           minimum: 0\n    #           maximum: 100\n    #         hash:\n    #           type: string\n    #           description: Field that should contain the hash of the NFT metadata.\n    #           example: 715224f1f7d8330e3837500d1f82431954e30db6149f3ee4644d0950576d8dfe\n    #         attributes:\n    #           type: string\n    #           description: Field that should contain a set of attributes in the format desired by the creator\n    #         uri:\n    #           type: array\n    #           description: URL to a media file or something similar.\n    #           minLength: 1\n    #           items:\n    #             type: string\n    #     index:\n    #       type: number\n    #       minimum: 0\n    #       description: If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.\n    #     signatureId:\n    #       type: string\n    #       minLength: 36\n    #       maxLength: 36\n    #       format: uuid\n    #       example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83\n    #       description: Identifier of the private key associated in signing application. Private key, or signature Id must be present.\n    #   required:\n    #     - signatureId\n    #     - from\n    # CallEgldNFTRoleTransferethod:\n    #   type: object\n    #   properties:\n    #     from:\n    #       description: Address of the current creation role owner\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     amount:\n    #       type: number\n    #       description: Value to be sent.\n    #       example: 0\n    #     fee:\n    #       description: Custom defined fee. If not present, it will be calculated automatically.\n    #       type: object\n    #       properties:\n    #         gasLimit:\n    #           type: string\n    #           description: Gas limit for transaction. (60000000 + length of Data field in bytes * 1500)\n    #           example: \"66000000\"\n    #           pattern: ^[+]?\\d+$\n    #         gasPrice:\n    #           type: string\n    #           description: Gas price.\n    #           example: \"1000000000\"\n    #           pattern: ^[+]?\\d+$\n    #     data:\n    #       type: object\n    #       description: Additinal data, that will be passed to blockchain transaction as data property.\n    #       required:\n    #         - service\n    #         - tokenId\n    #         - from\n    #         - to\n    #       properties:\n    #         service:\n    #           type: string\n    #           description: Service name\n    #           example: transferNFTCreateRole\n    #         tokenId:\n    #           type: string\n    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.\n    #           example: ALC-6258d2\n    #           maxLength: 17\n    #           minLength: 10\n    #         from:\n    #           type: string\n    #           description: The address to transfer the role from\n    #           example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq7\n    #         to:\n    #           type: string\n    #           description: The address to transfer the role to\n    #           example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #     fromPrivateKey:\n    #       type: string\n    #       maxLength: 64\n    #       minLength: 64\n    #       example: 0cd8e6217b4a218807b858ffb508483cdcdadbb7a21196727f764a510a692760\n    #       description: Private key of sender address. Private key, or signature Id must be present.\n    #   required:\n    #     - fromPrivateKey\n    # CallEgldNFTRoleTransferethodKMS:\n    #   type: object\n    #   properties:\n    #     from:\n    #       description: Address of the current creation role owner\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     amount:\n    #       type: number\n    #       description: Value to be sent.\n    #       example: 0\n    #     fee:\n    #       description: Custom defined fee. If not present, it will be calculated automatically.\n    #       type: object\n    #       properties:\n    #         gasLimit:\n    #           type: string\n    #           description: Gas limit for transaction. (60000000 + length of Data field in bytes * 1500)\n    #           example: \"66000000\"\n    #           pattern: ^[+]?\\d+$\n    #         gasPrice:\n    #           type: string\n    #           description: Gas price.\n    #           example: \"1000000000\"\n    #           pattern: ^[+]?\\d+$\n    #     data:\n    #       type: object\n    #       description: Additinal data, that will be passed to blockchain transaction as data property.\n    #       required:\n    #         - service\n    #         - tokenId\n    #         - from\n    #         - to\n    #       properties:\n    #         service:\n    #           type: string\n    #           description: Service name\n    #           example: transferNFTCreateRole\n    #         tokenId:\n    #           type: string\n    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.\n    #           example: ALC-6258d2\n    #           maxLength: 17\n    #           minLength: 10\n    #         from:\n    #           type: string\n    #           description: The address to transfer the role from\n    #           example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq7\n    #         to:\n    #           type: string\n    #           description: The address to transfer the role to\n    #           example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #     index:\n    #       type: number\n    #       minimum: 0\n    #       description: If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.\n    #     signatureId:\n    #       type: string\n    #       minLength: 36\n    #       maxLength: 36\n    #       format: uuid\n    #       example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83\n    #       description: Identifier of the private key associated in signing application. Private key, or signature Id must be present.\n    #   required:\n    #     - signatureId\n    #     - from\n    # CallEgldNFTStopCreateMethod:\n    #   type: object\n    #   properties:\n    #     from:\n    #       description: Account address of the token manager\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     amount:\n    #       type: number\n    #       description: Value to be sent.\n    #       example: 0\n    #     fee:\n    #       description: Custom defined fee. If not present, it will be calculated automatically.\n    #       type: object\n    #       properties:\n    #         gasLimit:\n    #           type: string\n    #           description: Gas limit for transaction.\n    #           example: \"66000000\"\n    #           pattern: ^[+]?\\d+$\n    #         gasPrice:\n    #           type: string\n    #           description: Gas price.\n    #           example: \"1000000000\"\n    #           pattern: ^[+]?\\d+$\n    #     data:\n    #       type: object\n    #       description: Additinal data, that will be passed to blockchain transaction as data property.\n    #       required:\n    #         - service\n    #         - tokenId\n    #       properties:\n    #         service:\n    #           type: string\n    #           description: Service name\n    #           example: stopNFTCreate\n    #         tokenId:\n    #           type: string\n    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.\n    #           example: ALC-6258d2\n    #           maxLength: 17\n    #           minLength: 10\n    #     fromPrivateKey:\n    #       type: string\n    #       maxLength: 64\n    #       minLength: 64\n    #       example: 0cd8e6217b4a218807b858ffb508483cdcdadbb7a21196727f764a510a692760\n    #       description: Private key of sender address. Private key, or signature Id must be present.\n    #   required:\n    #     - fromPrivateKey\n    # CallEgldNFTStopCreateMethodKMS:\n    #   type: object\n    #   properties:\n    #     from:\n    #       description: Account address of the token manager\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     amount:\n    #       type: number\n    #       description: Value to be sent.\n    #       example: 0\n    #     fee:\n    #       description: Custom defined fee. If not present, it will be calculated automatically.\n    #       type: object\n    #       properties:\n    #         gasLimit:\n    #           type: string\n    #           description: Gas limit for transaction.\n    #           example: \"66000000\"\n    #           pattern: ^[+]?\\d+$\n    #         gasPrice:\n    #           type: string\n    #           description: Gas price.\n    #           example: \"1000000000\"\n    #           pattern: ^[+]?\\d+$\n    #     data:\n    #       type: object\n    #       description: Additinal data, that will be passed to blockchain transaction as data property.\n    #       required:\n    #         - service\n    #         - tokenId\n    #       properties:\n    #         service:\n    #           type: string\n    #           description: Service name\n    #           example: stopNFTCreate\n    #         tokenId:\n    #           type: string\n    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.\n    #           example: ALC-6258d2\n    #           maxLength: 17\n    #           minLength: 10\n    #     index:\n    #       type: number\n    #       minimum: 0\n    #       description: If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.\n    #     signatureId:\n    #       type: string\n    #       minLength: 36\n    #       maxLength: 36\n    #       format: uuid\n    #       example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83\n    #       description: Identifier of the private key associated in signing application. Private key, or signature Id must be present.\n    #   required:\n    #     - signatureId\n    #     - from\n    # CallEgldNFTAddMethod:\n    #   type: object\n    #   properties:\n    #     from:\n    #       description: Account address that has ESDTRoleNFTAddQuantity role\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     to:\n    #       description: Same as 'from'\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     amount:\n    #       type: number\n    #       description: Value to be sent.\n    #       example: 0\n    #     fee:\n    #       description: Custom defined fee. If not present, it will be calculated automatically.\n    #       type: object\n    #       properties:\n    #         gasLimit:\n    #           type: string\n    #           description: Gas limit for transaction.\n    #           example: \"10000000\"\n    #           pattern: ^[+]?\\d+$\n    #         gasPrice:\n    #           type: string\n    #           description: Gas price.\n    #           example: \"1000000000\"\n    #           pattern: ^[+]?\\d+$\n    #     data:\n    #       type: object\n    #       description: Additinal data, that will be passed to blockchain transaction as data property.\n    #       required:\n    #         - service\n    #         - tokenId\n    #         - nonce\n    #         - quantity\n    #       properties:\n    #         service:\n    #           type: string\n    #           description: Service name. This function will not work for NFTs, because in that case the quantity cannot be higher than 1.\n    #           example: ESDTNFTAddQuantity\n    #         tokenId:\n    #           type: string\n    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.\n    #           example: ALC-6258d2\n    #           maxLength: 17\n    #           minLength: 10\n    #         nonce:\n    #           type: number\n    #           description: NFT nonce\n    #           example: 124\n    #         quantity:\n    #           type: number\n    #           description: Quantity to add\n    #           example: 1\n    #     fromPrivateKey:\n    #       type: string\n    #       maxLength: 64\n    #       minLength: 64\n    #       example: 0cd8e6217b4a218807b858ffb508483cdcdadbb7a21196727f764a510a692760\n    #       description: Private key of sender address. Private key, or signature Id must be present.\n    #   required:\n    #     - fromPrivateKey\n    # CallEgldNFTAddMethodKMS:\n    #   type: object\n    #   properties:\n    #     from:\n    #       description: Account address that has ESDTRoleNFTAddQuantity role\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     to:\n    #       description: Same as 'from'\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     amount:\n    #       type: number\n    #       description: Value to be sent.\n    #       example: 0\n    #     fee:\n    #       description: Custom defined fee. If not present, it will be calculated automatically.\n    #       type: object\n    #       properties:\n    #         gasLimit:\n    #           type: string\n    #           description: Gas limit for transaction.\n    #           example: \"10000000\"\n    #           pattern: ^[+]?\\d+$\n    #         gasPrice:\n    #           type: string\n    #           description: Gas price.\n    #           example: \"1000000000\"\n    #           pattern: ^[+]?\\d+$\n    #     data:\n    #       type: object\n    #       description: Additinal data, that will be passed to blockchain transaction as data property.\n    #       required:\n    #         - service\n    #         - tokenId\n    #         - nonce\n    #         - quantity\n    #       properties:\n    #         service:\n    #           type: string\n    #           description: Service name. This function will not work for NFTs, because in that case the quantity cannot be higher than 1.\n    #           example: ESDTNFTAddQuantity\n    #         tokenId:\n    #           type: string\n    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.\n    #           example: ALC-6258d2\n    #           maxLength: 17\n    #           minLength: 10\n    #         nonce:\n    #           type: number\n    #           description: NFT nonce\n    #           example: 124\n    #         quantity:\n    #           type: number\n    #           description: Quantity to add\n    #           example: 1\n    #     index:\n    #       type: number\n    #       minimum: 0\n    #       description: If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.\n    #     signatureId:\n    #       type: string\n    #       minLength: 36\n    #       maxLength: 36\n    #       format: uuid\n    #       example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83\n    #       description: Identifier of the private key associated in signing application. Private key, or signature Id must be present.\n    #   required:\n    #     - signatureId\n    #     - from\n    # CallEgldNFTBurnMethod:\n    #   type: object\n    #   properties:\n    #     from:\n    #       description: Account address that has ESDTRoleNFTBurn role\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     to:\n    #       description: Same as 'from'\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     amount:\n    #       type: number\n    #       description: Value to be sent.\n    #       example: 0\n    #     fee:\n    #       description: Custom defined fee. If not present, it will be calculated automatically.\n    #       type: object\n    #       properties:\n    #         gasLimit:\n    #           type: string\n    #           description: Gas limit for transaction.\n    #           example: \"10000000\"\n    #           pattern: ^[+]?\\d+$\n    #         gasPrice:\n    #           type: string\n    #           description: Gas price.\n    #           example: \"1000000000\"\n    #           pattern: ^[+]?\\d+$\n    #     data:\n    #       type: object\n    #       description: Additinal data, that will be passed to blockchain transaction as data property.\n    #       required:\n    #         - service\n    #         - tokenId\n    #         - nonce\n    #         - quantity\n    #       properties:\n    #         service:\n    #           type: string\n    #           description: Service name.\n    #           example: ESDTNFTBurn\n    #         tokenId:\n    #           type: string\n    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.\n    #           example: ALC-6258d2\n    #           maxLength: 17\n    #           minLength: 10\n    #         nonce:\n    #           type: number\n    #           description: NFT nonce\n    #           example: 124\n    #         quantity:\n    #           type: number\n    #           description: Quantity to burn\n    #           example: 1\n    #     fromPrivateKey:\n    #       type: string\n    #       maxLength: 64\n    #       minLength: 64\n    #       example: 0cd8e6217b4a218807b858ffb508483cdcdadbb7a21196727f764a510a692760\n    #       description: Private key of sender address. Private key, or signature Id must be present.\n    #   required:\n    #     - fromPrivateKey\n    # CallEgldNFTBurnMethodKMS:\n    #   type: object\n    #   properties:\n    #     from:\n    #       description: Account address that has ESDTRoleNFTBurn role\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     to:\n    #       description: Same as 'from'\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     amount:\n    #       type: number\n    #       description: Value to be sent.\n    #       example: 0\n    #     fee:\n    #       description: Custom defined fee. If not present, it will be calculated automatically.\n    #       type: object\n    #       properties:\n    #         gasLimit:\n    #           type: string\n    #           description: Gas limit for transaction.\n    #           example: \"10000000\"\n    #           pattern: ^[+]?\\d+$\n    #         gasPrice:\n    #           type: string\n    #           description: Gas price.\n    #           example: \"1000000000\"\n    #           pattern: ^[+]?\\d+$\n    #     data:\n    #       type: object\n    #       description: Additinal data, that will be passed to blockchain transaction as data property.\n    #       required:\n    #         - service\n    #         - tokenId\n    #         - nonce\n    #         - quantity\n    #       properties:\n    #         service:\n    #           type: string\n    #           description: Service name.\n    #           example: ESDTNFTBurn\n    #         tokenId:\n    #           type: string\n    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.\n    #           example: ALC-6258d2\n    #           maxLength: 17\n    #           minLength: 10\n    #         nonce:\n    #           type: number\n    #           description: NFT nonce\n    #           example: 124\n    #         quantity:\n    #           type: number\n    #           description: Quantity to burn\n    #           example: 1\n    #     index:\n    #       type: number\n    #       minimum: 0\n    #       description: If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.\n    #     signatureId:\n    #       type: string\n    #       minLength: 36\n    #       maxLength: 36\n    #       format: uuid\n    #       example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83\n    #       description: Identifier of the private key associated in signing application. Private key, or signature Id must be present.\n    #   required:\n    #     - signatureId\n    #     - from\n    # CallEgldNFTFreezeMethod:\n    #   type: object\n    #   properties:\n    #     from:\n    #       description: Account address of the token manager\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     amount:\n    #       type: number\n    #       description: Value to be sent.\n    #       example: 0\n    #     fee:\n    #       description: Custom defined fee. If not present, it will be calculated automatically.\n    #       type: object\n    #       properties:\n    #         gasLimit:\n    #           type: string\n    #           description: Gas limit for transaction.\n    #           example: \"60000000\"\n    #           pattern: ^[+]?\\d+$\n    #         gasPrice:\n    #           type: string\n    #           description: Gas price.\n    #           example: \"1000000000\"\n    #           pattern: ^[+]?\\d+$\n    #     data:\n    #       type: object\n    #       description: Additinal data, that will be passed to blockchain transaction as data property.\n    #       required:\n    #         - service\n    #         - tokenId\n    #         - nonce\n    #         - account\n    #       properties:\n    #         service:\n    #           type: string\n    #           description: Service name.\n    #           example: freezeSingleNFT\n    #         tokenId:\n    #           type: string\n    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.\n    #           example: ALC-6258d2\n    #           maxLength: 17\n    #           minLength: 10\n    #         nonce:\n    #           type: number\n    #           description: NFT nonce\n    #           example: 124\n    #         account:\n    #           type: string\n    #           description: Account address to freeze\n    #           example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq7\n    #     fromPrivateKey:\n    #       type: string\n    #       maxLength: 64\n    #       minLength: 64\n    #       example: 0cd8e6217b4a218807b858ffb508483cdcdadbb7a21196727f764a510a692760\n    #       description: Private key of sender address. Private key, or signature Id must be present.\n    #   required:\n    #     - fromPrivateKey\n    # CallEgldNFTFreezeMethodKMS:\n    #   type: object\n    #   properties:\n    #     from:\n    #       description: Account address of the token manager\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     amount:\n    #       type: number\n    #       description: Value to be sent.\n    #       example: 0\n    #     fee:\n    #       description: Custom defined fee. If not present, it will be calculated automatically.\n    #       type: object\n    #       properties:\n    #         gasLimit:\n    #           type: string\n    #           description: Gas limit for transaction.\n    #           example: \"60000000\"\n    #           pattern: ^[+]?\\d+$\n    #         gasPrice:\n    #           type: string\n    #           description: Gas price.\n    #           example: \"1000000000\"\n    #           pattern: ^[+]?\\d+$\n    #     data:\n    #       type: object\n    #       description: Additinal data, that will be passed to blockchain transaction as data property.\n    #       required:\n    #         - service\n    #         - tokenId\n    #         - nonce\n    #         - account\n    #       properties:\n    #         service:\n    #           type: string\n    #           description: Service name.\n    #           example: freezeSingleNFT\n    #         tokenId:\n    #           type: string\n    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.\n    #           example: ALC-6258d2\n    #           maxLength: 17\n    #           minLength: 10\n    #         nonce:\n    #           type: number\n    #           description: NFT nonce\n    #           example: 124\n    #         account:\n    #           type: string\n    #           description: Account address to freeze\n    #           example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq7\n    #     index:\n    #       type: number\n    #       minimum: 0\n    #       description: If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.\n    #     signatureId:\n    #       type: string\n    #       minLength: 36\n    #       maxLength: 36\n    #       format: uuid\n    #       example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83\n    #       description: Identifier of the private key associated in signing application. Private key, or signature Id must be present.\n    #   required:\n    #     - signatureId\n    #     - from\n    # CallEgldNFTWipeMethod:\n    #   type: object\n    #   properties:\n    #     from:\n    #       description: Account address of the token manager\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     amount:\n    #       type: number\n    #       description: Value to be sent.\n    #       example: 0\n    #     fee:\n    #       description: Custom defined fee. If not present, it will be calculated automatically.\n    #       type: object\n    #       properties:\n    #         gasLimit:\n    #           type: string\n    #           description: Gas limit for transaction.\n    #           example: \"60000000\"\n    #           pattern: ^[+]?\\d+$\n    #         gasPrice:\n    #           type: string\n    #           description: Gas price.\n    #           example: \"1000000000\"\n    #           pattern: ^[+]?\\d+$\n    #     data:\n    #       type: object\n    #       description: Additinal data, that will be passed to blockchain transaction as data property.\n    #       required:\n    #         - service\n    #         - tokenId\n    #         - nonce\n    #         - account\n    #       properties:\n    #         service:\n    #           type: string\n    #           description: Service name. The Account must have been frozen beforehand, and 'wipe' must be done by the token manager.\n    #           example: wipeSingleNFT\n    #         tokenId:\n    #           type: string\n    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.\n    #           example: ALC-6258d2\n    #           maxLength: 17\n    #           minLength: 10\n    #         nonce:\n    #           type: number\n    #           description: NFT nonce\n    #           example: 124\n    #         account:\n    #           description: Account address of wipe\n    #           example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #           maxLength: 62\n    #           minLength: 62\n    #           type: string\n    #     fromPrivateKey:\n    #       type: string\n    #       maxLength: 64\n    #       minLength: 64\n    #       example: 0cd8e6217b4a218807b858ffb508483cdcdadbb7a21196727f764a510a692760\n    #       description: Private key of sender address. Private key, or signature Id must be present.\n    #   required:\n    #     - fromPrivateKey\n    # CallEgldNFTWipeMethodKMS:\n    #   type: object\n    #   properties:\n    #     from:\n    #       description: Account address of the token manager\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     amount:\n    #       type: number\n    #       description: Value to be sent.\n    #       example: 0\n    #     fee:\n    #       description: Custom defined fee. If not present, it will be calculated automatically.\n    #       type: object\n    #       properties:\n    #         gasLimit:\n    #           type: string\n    #           description: Gas limit for transaction.\n    #           example: \"60000000\"\n    #           pattern: ^[+]?\\d+$\n    #         gasPrice:\n    #           type: string\n    #           description: Gas price.\n    #           example: \"1000000000\"\n    #           pattern: ^[+]?\\d+$\n    #     data:\n    #       type: object\n    #       description: Additinal data, that will be passed to blockchain transaction as data property.\n    #       required:\n    #         - service\n    #         - tokenId\n    #         - nonce\n    #         - account\n    #       properties:\n    #         service:\n    #           type: string\n    #           description: Service name. The Account must have been frozen beforehand, and 'wipe' must be done by the token manager.\n    #           example: wipeSingleNFT\n    #         tokenId:\n    #           type: string\n    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.\n    #           example: ALC-6258d2\n    #           maxLength: 17\n    #           minLength: 10\n    #         nonce:\n    #           type: number\n    #           description: NFT nonce\n    #           example: 124\n    #         account:\n    #           description: Account address of wipe\n    #           example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #           maxLength: 62\n    #           minLength: 62\n    #           type: string\n    #     index:\n    #       type: number\n    #       minimum: 0\n    #       description: If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.\n    #     signatureId:\n    #       type: string\n    #       minLength: 36\n    #       maxLength: 36\n    #       format: uuid\n    #       example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83\n    #       description: Identifier of the private key associated in signing application. Private key, or signature Id must be present.\n    #   required:\n    #     - signatureId\n    #     - from\n    # CallEgldNFTTransferMethod:\n    #   type: object\n    #   properties:\n    #     from:\n    #       description: Account address of the sender\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     to:\n    #       description: Same as sender\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     amount:\n    #       type: number\n    #       description: Value to be sent.\n    #       example: 0\n    #     fee:\n    #       description: Custom defined fee. If not present, it will be calculated automatically.\n    #       type: object\n    #       properties:\n    #         gasLimit:\n    #           type: string\n    #           description: Gas limit for transaction. 1000000 + length of Data field in bytes * 1500 or 1000000 + extra for smart contract call\n    #           example: \"1500000\"\n    #           pattern: ^[+]?\\d+$\n    #         gasPrice:\n    #           type: string\n    #           description: Gas price.\n    #           example: \"1000000000\"\n    #           pattern: ^[+]?\\d+$\n    #     data:\n    #       type: object\n    #       description: Additinal data, that will be passed to blockchain transaction as data property.\n    #       required:\n    #         - service\n    #         - tokenId\n    #         - nonce\n    #         - quantity\n    #         - to\n    #       properties:\n    #         service:\n    #           type: string\n    #           description: Service name.\n    #           example: ESDTNFTTransfer\n    #         tokenId:\n    #           type: string\n    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.\n    #           example: ALC-6258d2\n    #           maxLength: 17\n    #           minLength: 10\n    #         nonce:\n    #           type: number\n    #           description: NFT nonce\n    #           example: 124\n    #         quantity:\n    #           type: number\n    #           description: Quantity to transfer\n    #           example: 1\n    #         account:\n    #           type: string\n    #           description: Destination address\n    #           example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq7\n    #         methodName:\n    #           type: string\n    #           description: Name of method to call\n    #         arguments:\n    #           type: array\n    #           description: Arguments of the method\n    #           items:\n    #             type: string\n    #     fromPrivateKey:\n    #       type: string\n    #       maxLength: 64\n    #       minLength: 64\n    #       example: 0cd8e6217b4a218807b858ffb508483cdcdadbb7a21196727f764a510a692760\n    #       description: Private key of sender address. Private key, or signature Id must be present.\n    #   required:\n    #     - fromPrivateKey\n    # CallEgldNFTTransferMethodKMS:\n    #   type: object\n    #   properties:\n    #     from:\n    #       description: Account address of the sender\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     to:\n    #       description: Same as sender\n    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6\n    #       maxLength: 62\n    #       minLength: 62\n    #       type: string\n    #     amount:\n    #       type: number\n    #       description: Value to be sent.\n    #       example: 0\n    #     fee:\n    #       description: Custom defined fee. If not present, it will be calculated automatically.\n    #       type: object\n    #       properties:\n    #         gasLimit:\n    #           type: string\n    #           description: Gas limit for transaction. 1000000 + length of Data field in bytes * 1500 or 1000000 + extra for smart contract call\n    #           example: \"1500000\"\n    #           pattern: ^[+]?\\d+$\n    #         gasPrice:\n    #           type: string\n    #           description: Gas price.\n    #           example: \"1000000000\"\n    #           pattern: ^[+]?\\d+$\n    #     data:\n    #       type: object\n    #       description: Additinal data, that will be passed to blockchain transaction as data property.\n    #       required:\n    #         - service\n    #         - tokenId\n    #         - nonce\n    #         - quantity\n    #         - to\n    #       properties:\n    #         service:\n    #           type: string\n    #           description: Service name.\n    #           example: ESDTNFTTransfer\n    #         tokenId:\n    #           type: string\n    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.\n    #           example: ALC-6258d2\n    #           maxLength: 17\n    #           minLength: 10\n    #         nonce:\n    #           type: number\n    #           description: NFT nonce\n    #           example: 124\n    #         quantity:\n    #           type: number\n    #           description: Quantity to transfer\n    #           example: 1\n    #         account:\n    #           type: string\n    #           description: Destination address\n    #           example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq7\n    #         methodName:\n    #           type: string\n    #           description: Name of method to call\n    #         arguments:\n    #           type: array\n    #           description: Arguments of the method\n    #           items:\n    #             type: string\n    #     index:\n    #       type: number\n    #       minimum: 0\n    #       description: If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.\n    #     signatureId:\n    #       type: string\n    #       minLength: 36\n    #       maxLength: 36\n    #       format: uuid\n    #       example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83\n    #       description: Identifier of the private key associated in signing application. Private key, or signature Id must be present.\n    #   required:\n    #     - signatureId\n    #     - from\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /v3/egld/transaction/count/{address}: get: operation \"EgldGetTransactionCount\": responses: 400: content: \"application/json\": schema: parse schema: resolve \"#/components/schemas/Error400\": find schema: resolve \"#/components/schemas/Error400\": can't find value for \"components/schemas/Error400\""
}