{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/supabase/supabase"
		},
		"file": {
			"name": "api_v0_openapi_deparsed.json",
			"size": 0,
			"path": "spec/transforms/api_v0_openapi_deparsed.json",
			"byteSize": 68968,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"paths\": {\n    \"/v1/projects\": {\n      \"get\": {\n        \"operationId\": \"getProjects\",\n        \"summary\": \"List all projects\",\n        \"description\": \"Returns a list of all projects you've previously created.\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"id\": {\n                        \"type\": \"string\"\n                      },\n                      \"organization_id\": {\n                        \"type\": \"string\"\n                      },\n                      \"name\": {\n                        \"type\": \"string\"\n                      },\n                      \"region\": {\n                        \"type\": \"string\"\n                      },\n                      \"created_at\": {\n                        \"type\": \"string\"\n                      },\n                      \"database\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"host\": {\n                            \"type\": \"string\"\n                          },\n                          \"version\": {\n                            \"type\": \"string\"\n                          }\n                        },\n                        \"required\": [\"host\", \"version\"]\n                      }\n                    },\n                    \"required\": [\"id\", \"organization_id\", \"name\", \"region\", \"created_at\"]\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\"projects\"],\n        \"security\": [\n          {\n            \"bearer\": []\n          }\n        ]\n      },\n      \"post\": {\n        \"operationId\": \"createProject\",\n        \"summary\": \"Create a project\",\n        \"parameters\": [],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"db_pass\": {\n                    \"type\": \"string\"\n                  },\n                  \"name\": {\n                    \"type\": \"string\"\n                  },\n                  \"organization_id\": {\n                    \"type\": \"string\"\n                  },\n                  \"plan\": {\n                    \"type\": \"string\",\n                    \"enum\": [\"free\", \"pro\"]\n                  },\n                  \"region\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"us-east-1\",\n                      \"us-west-1\",\n                      \"ap-southeast-1\",\n                      \"ap-northeast-1\",\n                      \"ap-northeast-2\",\n                      \"ap-southeast-2\",\n                      \"eu-west-1\",\n                      \"eu-west-2\",\n                      \"eu-west-3\",\n                      \"eu-central-1\",\n                      \"ca-central-1\",\n                      \"ap-south-1\",\n                      \"sa-east-1\"\n                    ]\n                  },\n                  \"kps_enabled\": {\n                    \"type\": \"boolean\"\n                  }\n                },\n                \"required\": [\"db_pass\", \"name\", \"organization_id\", \"plan\", \"region\"]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"organization_id\": {\n                      \"type\": \"string\"\n                    },\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"region\": {\n                      \"type\": \"string\"\n                    },\n                    \"created_at\": {\n                      \"type\": \"string\"\n                    },\n                    \"database\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"host\": {\n                          \"type\": \"string\"\n                        },\n                        \"version\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"required\": [\"host\", \"version\"]\n                    }\n                  },\n                  \"required\": [\"id\", \"organization_id\", \"name\", \"region\", \"created_at\"]\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\"projects\"],\n        \"security\": [\n          {\n            \"bearer\": []\n          }\n        ]\n      }\n    },\n    \"/v1/organizations\": {\n      \"get\": {\n        \"operationId\": \"getOrganizations\",\n        \"summary\": \"List all organizations\",\n        \"description\": \"Returns a list of organizations that you currently belong to.\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"id\": {\n                        \"type\": \"string\"\n                      },\n                      \"name\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"required\": [\"id\", \"name\"]\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Unexpected error listing organizations\"\n          }\n        },\n        \"tags\": [\"organizations\"],\n        \"security\": [\n          {\n            \"bearer\": []\n          }\n        ]\n      },\n      \"post\": {\n        \"operationId\": \"createOrganization\",\n        \"summary\": \"Create an organization\",\n        \"parameters\": [],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"required\": [\"name\"]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"name\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"required\": [\"id\", \"name\"]\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Unexpected error creating an organization\"\n          }\n        },\n        \"tags\": [\"organizations\"],\n        \"security\": [\n          {\n            \"bearer\": []\n          }\n        ]\n      }\n    },\n    \"/v1/projects/{ref}/functions\": {\n      \"post\": {\n        \"operationId\": \"createFunction\",\n        \"summary\": \"Create a function\",\n        \"description\": \"Creates a function and adds it to the specified project.\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": {\n              \"minLength\": 20,\n              \"maxLength\": 20,\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"slug\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"schema\": {\n              \"pattern\": \"/^[A-Za-z0-9_-]+$/\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"name\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"verify_jwt\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"import_map\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"slug\": {\n                    \"type\": \"string\",\n                    \"pattern\": \"/^[A-Za-z0-9_-]+$/\"\n                  },\n                  \"name\": {\n                    \"type\": \"string\"\n                  },\n                  \"body\": {\n                    \"type\": \"string\"\n                  },\n                  \"verify_jwt\": {\n                    \"type\": \"boolean\"\n                  }\n                },\n                \"required\": [\"slug\", \"name\", \"body\"]\n              }\n            },\n            \"application/vnd.denoland.eszip\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"slug\": {\n                    \"type\": \"string\",\n                    \"pattern\": \"/^[A-Za-z0-9_-]+$/\"\n                  },\n                  \"name\": {\n                    \"type\": \"string\"\n                  },\n                  \"body\": {\n                    \"type\": \"string\"\n                  },\n                  \"verify_jwt\": {\n                    \"type\": \"boolean\"\n                  }\n                },\n                \"required\": [\"slug\", \"name\", \"body\"]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"slug\": {\n                      \"type\": \"string\"\n                    },\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"enum\": [\"ACTIVE\", \"REMOVED\", \"THROTTLED\"],\n                      \"type\": \"string\"\n                    },\n                    \"version\": {\n                      \"type\": \"number\"\n                    },\n                    \"created_at\": {\n                      \"type\": \"number\"\n                    },\n                    \"updated_at\": {\n                      \"type\": \"number\"\n                    },\n                    \"verify_jwt\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"import_map\": {\n                      \"type\": \"boolean\"\n                    }\n                  },\n                  \"required\": [\n                    \"id\",\n                    \"slug\",\n                    \"name\",\n                    \"status\",\n                    \"version\",\n                    \"created_at\",\n                    \"updated_at\"\n                  ]\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"\"\n          },\n          \"500\": {\n            \"description\": \"Failed to create project's function\"\n          }\n        },\n        \"tags\": [\"functions\"],\n        \"security\": [\n          {\n            \"apiKeyHeader\": [],\n            \"apiKeyParam\": []\n          },\n          {\n            \"bearer\": []\n          }\n        ]\n      },\n      \"get\": {\n        \"operationId\": \"getFunctions\",\n        \"summary\": \"List all functions\",\n        \"description\": \"Returns all functions you've previously added to the specified project.\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": {\n              \"minLength\": 20,\n              \"maxLength\": 20,\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"id\": {\n                        \"type\": \"string\"\n                      },\n                      \"slug\": {\n                        \"type\": \"string\"\n                      },\n                      \"name\": {\n                        \"type\": \"string\"\n                      },\n                      \"status\": {\n                        \"enum\": [\"ACTIVE\", \"REMOVED\", \"THROTTLED\"],\n                        \"type\": \"string\"\n                      },\n                      \"version\": {\n                        \"type\": \"number\"\n                      },\n                      \"created_at\": {\n                        \"type\": \"number\"\n                      },\n                      \"updated_at\": {\n                        \"type\": \"number\"\n                      },\n                      \"verify_jwt\": {\n                        \"type\": \"boolean\"\n                      },\n                      \"import_map\": {\n                        \"type\": \"boolean\"\n                      }\n                    },\n                    \"required\": [\n                      \"id\",\n                      \"slug\",\n                      \"name\",\n                      \"status\",\n                      \"version\",\n                      \"created_at\",\n                      \"updated_at\"\n                    ]\n                  }\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"\"\n          },\n          \"500\": {\n            \"description\": \"Failed to retrieve project's functions\"\n          }\n        },\n        \"tags\": [\"functions\"],\n        \"security\": [\n          {\n            \"apiKeyHeader\": [],\n            \"apiKeyParam\": []\n          },\n          {\n            \"bearer\": []\n          }\n        ]\n      }\n    },\n    \"/v1/projects/{ref}/functions/{function_slug}\": {\n      \"get\": {\n        \"operationId\": \"getFunction\",\n        \"summary\": \"Retrieve a function\",\n        \"description\": \"Retrieves a function with the specified slug and project.\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": {\n              \"minLength\": 20,\n              \"maxLength\": 20,\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"function_slug\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Function slug\",\n            \"schema\": {\n              \"pattern\": \"/^[A-Za-z0-9_-]+$/\",\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"slug\": {\n                      \"type\": \"string\"\n                    },\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"enum\": [\"ACTIVE\", \"REMOVED\", \"THROTTLED\"],\n                      \"type\": \"string\"\n                    },\n                    \"version\": {\n                      \"type\": \"number\"\n                    },\n                    \"created_at\": {\n                      \"type\": \"number\"\n                    },\n                    \"updated_at\": {\n                      \"type\": \"number\"\n                    },\n                    \"verify_jwt\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"import_map\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"body\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"required\": [\n                    \"id\",\n                    \"slug\",\n                    \"name\",\n                    \"status\",\n                    \"version\",\n                    \"created_at\",\n                    \"updated_at\"\n                  ]\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"\"\n          },\n          \"500\": {\n            \"description\": \"Failed to retrieve function with given slug\"\n          }\n        },\n        \"tags\": [\"functions\"],\n        \"security\": [\n          {\n            \"apiKeyHeader\": [],\n            \"apiKeyParam\": []\n          },\n          {\n            \"bearer\": []\n          }\n        ]\n      },\n      \"patch\": {\n        \"operationId\": \"updateFunction\",\n        \"summary\": \"Update a function\",\n        \"description\": \"Updates a function with the specified slug and project.\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": {\n              \"minLength\": 20,\n              \"maxLength\": 20,\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"function_slug\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Function slug\",\n            \"schema\": {\n              \"pattern\": \"/^[A-Za-z0-9_-]+$/\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"slug\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"schema\": {\n              \"pattern\": \"/^[A-Za-z0-9_-]+$/\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"name\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"verify_jwt\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"import_map\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\"\n                  },\n                  \"body\": {\n                    \"type\": \"string\"\n                  },\n                  \"verify_jwt\": {\n                    \"type\": \"boolean\"\n                  }\n                }\n              }\n            },\n            \"application/vnd.denoland.eszip\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\"\n                  },\n                  \"body\": {\n                    \"type\": \"string\"\n                  },\n                  \"verify_jwt\": {\n                    \"type\": \"boolean\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"slug\": {\n                      \"type\": \"string\"\n                    },\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"enum\": [\"ACTIVE\", \"REMOVED\", \"THROTTLED\"],\n                      \"type\": \"string\"\n                    },\n                    \"version\": {\n                      \"type\": \"number\"\n                    },\n                    \"created_at\": {\n                      \"type\": \"number\"\n                    },\n                    \"updated_at\": {\n                      \"type\": \"number\"\n                    },\n                    \"verify_jwt\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"import_map\": {\n                      \"type\": \"boolean\"\n                    }\n                  },\n                  \"required\": [\n                    \"id\",\n                    \"slug\",\n                    \"name\",\n                    \"status\",\n                    \"version\",\n                    \"created_at\",\n                    \"updated_at\"\n                  ]\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"\"\n          },\n          \"500\": {\n            \"description\": \"Failed to update function with given slug\"\n          }\n        },\n        \"tags\": [\"functions\"],\n        \"security\": [\n          {\n            \"apiKeyHeader\": [],\n            \"apiKeyParam\": []\n          },\n          {\n            \"bearer\": []\n          }\n        ]\n      },\n      \"delete\": {\n        \"operationId\": \"deleteFunction\",\n        \"summary\": \"Delete a function\",\n        \"description\": \"Deletes a function with the specified slug from the specified project.\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": {\n              \"minLength\": 20,\n              \"maxLength\": 20,\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"function_slug\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Function slug\",\n            \"schema\": {\n              \"pattern\": \"/^[A-Za-z0-9_-]+$/\",\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\"\n          },\n          \"403\": {\n            \"description\": \"\"\n          },\n          \"500\": {\n            \"description\": \"Failed to delete function with given slug\"\n          }\n        },\n        \"tags\": [\"functions\"],\n        \"security\": [\n          {\n            \"apiKeyHeader\": [],\n            \"apiKeyParam\": []\n          },\n          {\n            \"bearer\": []\n          }\n        ]\n      }\n    },\n    \"/v1/projects/{ref}/functions/{function_slug}/body\": {\n      \"get\": {\n        \"operationId\": \"getFunctionBody\",\n        \"summary\": \"Retrieve a function body\",\n        \"description\": \"Retrieves a function body for the specified slug and project.\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": {\n              \"minLength\": 20,\n              \"maxLength\": 20,\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"function_slug\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Function slug\",\n            \"schema\": {\n              \"pattern\": \"/^[A-Za-z0-9_-]+$/\",\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\"\n          },\n          \"403\": {\n            \"description\": \"\"\n          },\n          \"500\": {\n            \"description\": \"Failed to retrieve function body with given slug\"\n          }\n        },\n        \"tags\": [\"functions\"],\n        \"security\": [\n          {\n            \"apiKeyHeader\": [],\n            \"apiKeyParam\": []\n          },\n          {\n            \"bearer\": []\n          }\n        ]\n      }\n    },\n    \"/v1/projects/{ref}/secrets\": {\n      \"get\": {\n        \"operationId\": \"getSecrets\",\n        \"summary\": \"List all secrets\",\n        \"description\": \"Returns all secrets you've previously added to the specified project.\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": {\n              \"minLength\": 20,\n              \"maxLength\": 20,\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"name\": {\n                        \"type\": \"string\"\n                      },\n                      \"value\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"required\": [\"name\", \"value\"]\n                  }\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"\"\n          },\n          \"500\": {\n            \"description\": \"Failed to retrieve project's secrets\"\n          }\n        },\n        \"tags\": [\"secrets\"],\n        \"security\": [\n          {\n            \"apiKeyHeader\": [],\n            \"apiKeyParam\": []\n          },\n          {\n            \"bearer\": []\n          }\n        ]\n      },\n      \"post\": {\n        \"operationId\": \"createSecrets\",\n        \"summary\": \"Bulk create secrets\",\n        \"description\": \"Creates multiple secrets and adds them to the specified project.\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": {\n              \"minLength\": 20,\n              \"maxLength\": 20,\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"value\": {\n                      \"type\": \"string\",\n                      \"pattern\": \"/^(?!SUPABASE_).*/\"\n                    }\n                  },\n                  \"required\": [\"name\", \"value\"]\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\"\n          },\n          \"403\": {\n            \"description\": \"\"\n          },\n          \"500\": {\n            \"description\": \"Failed to create project's secrets\"\n          }\n        },\n        \"tags\": [\"secrets\"],\n        \"security\": [\n          {\n            \"apiKeyHeader\": [],\n            \"apiKeyParam\": []\n          },\n          {\n            \"bearer\": []\n          }\n        ]\n      },\n      \"delete\": {\n        \"operationId\": \"deleteSecrets\",\n        \"summary\": \"Bulk delete secrets\",\n        \"description\": \"Deletes all secrets with the given names from the specified project\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": {\n              \"minLength\": 20,\n              \"maxLength\": 20,\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"\"\n          },\n          \"500\": {\n            \"description\": \"Failed to delete secrets with given names\"\n          }\n        },\n        \"tags\": [\"secrets\"],\n        \"security\": [\n          {\n            \"apiKeyHeader\": [],\n            \"apiKeyParam\": []\n          },\n          {\n            \"bearer\": []\n          }\n        ]\n      }\n    },\n    \"/v1/projects/{ref}/postgrest\": {\n      \"get\": {\n        \"operationId\": \"getPostgRESTConfig\",\n        \"summary\": \"Gets project's postgrest config\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": {\n              \"minLength\": 20,\n              \"maxLength\": 20,\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"max_rows\": {\n                      \"type\": \"integer\"\n                    },\n                    \"db_schema\": {\n                      \"type\": \"string\"\n                    },\n                    \"db_extra_search_path\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"required\": [\"max_rows\", \"db_schema\", \"db_extra_search_path\"]\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"\"\n          },\n          \"500\": {\n            \"description\": \"Failed to retrieve project's postgrest config\"\n          }\n        },\n        \"tags\": [\"services\"],\n        \"security\": [\n          {\n            \"bearer\": []\n          }\n        ]\n      },\n      \"patch\": {\n        \"operationId\": \"updatePostgRESTConfig\",\n        \"summary\": \"Updates project's postgrest config\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": {\n              \"minLength\": 20,\n              \"maxLength\": 20,\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"max_rows\": {\n                    \"type\": \"integer\",\n                    \"minimum\": 0,\n                    \"maximum\": 1000000\n                  },\n                  \"db_extra_search_path\": {\n                    \"type\": \"string\"\n                  },\n                  \"db_schema\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"max_rows\": {\n                      \"type\": \"integer\"\n                    },\n                    \"db_schema\": {\n                      \"type\": \"string\"\n                    },\n                    \"db_extra_search_path\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"required\": [\"max_rows\", \"db_schema\", \"db_extra_search_path\"]\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"\"\n          },\n          \"500\": {\n            \"description\": \"Failed to update project's postgrest config\"\n          }\n        },\n        \"tags\": [\"services\"],\n        \"security\": [\n          {\n            \"bearer\": []\n          }\n        ]\n      }\n    },\n    \"/v1/projects/{ref}/custom-hostname\": {\n      \"get\": {\n        \"operationId\": \"getCustomHostnameConfig\",\n        \"summary\": \"Gets project's custom hostname config\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": {\n              \"minLength\": 20,\n              \"maxLength\": 20,\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"enum\": [\n                        \"1_not_started\",\n                        \"2_initiated\",\n                        \"3_challenge_verified\",\n                        \"4_origin_setup_completed\",\n                        \"5_services_reconfigured\"\n                      ],\n                      \"type\": \"string\"\n                    },\n                    \"custom_hostname\": {\n                      \"type\": \"string\"\n                    },\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  },\n                  \"required\": [\"status\", \"custom_hostname\", \"data\"]\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"\"\n          },\n          \"500\": {\n            \"description\": \"Failed to retrieve project's custom hostname config\"\n          }\n        },\n        \"tags\": [\"custom hostname (beta)\"],\n        \"security\": [\n          {\n            \"bearer\": []\n          }\n        ]\n      },\n      \"delete\": {\n        \"operationId\": \"removeCustomHostnameConfig\",\n        \"summary\": \"Deletes a project's custom hostname configuration\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": {\n              \"minLength\": 20,\n              \"maxLength\": 20,\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\"\n          },\n          \"403\": {\n            \"description\": \"\"\n          },\n          \"500\": {\n            \"description\": \"Failed to delete project custom hostname configuration\"\n          }\n        },\n        \"tags\": [\"custom hostname (beta)\"],\n        \"security\": [\n          {\n            \"bearer\": []\n          }\n        ]\n      }\n    },\n    \"/v1/projects/{ref}/custom-hostname/initialize\": {\n      \"post\": {\n        \"operationId\": \"createCustomHostnameConfig\",\n        \"summary\": \"Updates project's custom hostname configuration\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": {\n              \"minLength\": 20,\n              \"maxLength\": 20,\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"custom_hostname\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"required\": [\"custom_hostname\"]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"enum\": [\n                        \"1_not_started\",\n                        \"2_initiated\",\n                        \"3_challenge_verified\",\n                        \"4_origin_setup_completed\",\n                        \"5_services_reconfigured\"\n                      ],\n                      \"type\": \"string\"\n                    },\n                    \"custom_hostname\": {\n                      \"type\": \"string\"\n                    },\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  },\n                  \"required\": [\"status\", \"custom_hostname\", \"data\"]\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"\"\n          },\n          \"500\": {\n            \"description\": \"Failed to update project custom hostname configuration\"\n          }\n        },\n        \"tags\": [\"custom hostname (beta)\"],\n        \"security\": [\n          {\n            \"bearer\": []\n          }\n        ]\n      }\n    },\n    \"/v1/projects/{ref}/custom-hostname/reverify\": {\n      \"post\": {\n        \"operationId\": \"reverify\",\n        \"summary\": \"Attempts to verify the DNS configuration for project's custom hostname configuration\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": {\n              \"minLength\": 20,\n              \"maxLength\": 20,\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"enum\": [\n                        \"1_not_started\",\n                        \"2_initiated\",\n                        \"3_challenge_verified\",\n                        \"4_origin_setup_completed\",\n                        \"5_services_reconfigured\"\n                      ],\n                      \"type\": \"string\"\n                    },\n                    \"custom_hostname\": {\n                      \"type\": \"string\"\n                    },\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  },\n                  \"required\": [\"status\", \"custom_hostname\", \"data\"]\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"\"\n          },\n          \"500\": {\n            \"description\": \"Failed to verify project custom hostname configuration\"\n          }\n        },\n        \"tags\": [\"custom hostname (beta)\"],\n        \"security\": [\n          {\n            \"bearer\": []\n          }\n        ]\n      }\n    },\n    \"/v1/projects/{ref}/custom-hostname/activate\": {\n      \"post\": {\n        \"operationId\": \"activate\",\n        \"summary\": \"Activates a custom hostname for a project.\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": {\n              \"minLength\": 20,\n              \"maxLength\": 20,\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"enum\": [\n                        \"1_not_started\",\n                        \"2_initiated\",\n                        \"3_challenge_verified\",\n                        \"4_origin_setup_completed\",\n                        \"5_services_reconfigured\"\n                      ],\n                      \"type\": \"string\"\n                    },\n                    \"custom_hostname\": {\n                      \"type\": \"string\"\n                    },\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  },\n                  \"required\": [\"status\", \"custom_hostname\", \"data\"]\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"\"\n          },\n          \"500\": {\n            \"description\": \"Failed to activate project custom hostname configuration\"\n          }\n        },\n        \"tags\": [\"custom hostname (beta)\"],\n        \"security\": [\n          {\n            \"bearer\": []\n          }\n        ]\n      }\n    },\n    \"/v1/projects/{ref}/pgsodium\": {\n      \"get\": {\n        \"operationId\": \"getConfig\",\n        \"summary\": \"Gets project's pgsodium config\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": {\n              \"minLength\": 20,\n              \"maxLength\": 20,\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"root_key\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"required\": [\"root_key\"]\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"\"\n          },\n          \"500\": {\n            \"description\": \"Failed to retrieve project's pgsodium config\"\n          }\n        },\n        \"tags\": [\"pgsodium (beta)\"],\n        \"security\": [\n          {\n            \"bearer\": []\n          }\n        ]\n      },\n      \"put\": {\n        \"operationId\": \"updateConfig\",\n        \"summary\": \"Updates project's pgsodium config. Updating the root_key can cause all data encrypted with the older key to become inaccessible.\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": {\n              \"minLength\": 20,\n              \"maxLength\": 20,\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"root_key\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"required\": [\"root_key\"]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"root_key\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"required\": [\"root_key\"]\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"\"\n          },\n          \"500\": {\n            \"description\": \"Failed to update project's pgsodium config\"\n          }\n        },\n        \"tags\": [\"pgsodium (beta)\"],\n        \"security\": [\n          {\n            \"bearer\": []\n          }\n        ]\n      }\n    },\n    \"/v1/projects/{ref}/types/typescript\": {\n      \"get\": {\n        \"operationId\": \"getTypescriptTypes\",\n        \"summary\": \"Generate TypeScript types\",\n        \"description\": \"Returns the TypeScript types of your schema for use with supabase-js.\",\n        \"parameters\": [\n          {\n            \"name\": \"included_schemas\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"schema\": {\n              \"default\": \"public\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": {\n              \"minLength\": 20,\n              \"maxLength\": 20,\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"types\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"required\": [\"types\"]\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"\"\n          },\n          \"500\": {\n            \"description\": \"Failed to generate TypeScript types\"\n          }\n        },\n        \"tags\": [\"projects\"],\n        \"security\": [\n          {\n            \"apiKeyHeader\": [],\n            \"apiKeyParam\": []\n          },\n          {\n            \"bearer\": []\n          }\n        ]\n      }\n    },\n    \"/v1/projects/{ref}/network-bans/retrieve\": {\n      \"post\": {\n        \"operationId\": \"getNetworkBans\",\n        \"summary\": \"Gets project's network bans\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": {\n              \"minLength\": 20,\n              \"maxLength\": 20,\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"banned_ipv4_addresses\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  },\n                  \"required\": [\"banned_ipv4_addresses\"]\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"\"\n          },\n          \"500\": {\n            \"description\": \"Failed to retrieve project's network bans\"\n          }\n        },\n        \"tags\": [\"network bans (beta)\"],\n        \"security\": [\n          {\n            \"bearer\": []\n          }\n        ]\n      }\n    },\n    \"/v1/projects/{ref}/network-bans\": {\n      \"delete\": {\n        \"operationId\": \"removeNetworkBan\",\n        \"summary\": \"Remove network bans.\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": {\n              \"minLength\": 20,\n              \"maxLength\": 20,\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"ipv4_addresses\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                },\n                \"required\": [\"ipv4_addresses\"]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\"\n          },\n          \"403\": {\n            \"description\": \"\"\n          },\n          \"500\": {\n            \"description\": \"Failed to remove network bans.\"\n          }\n        },\n        \"tags\": [\"network bans (beta)\"],\n        \"security\": [\n          {\n            \"bearer\": []\n          }\n        ]\n      }\n    },\n    \"/v1/projects/{ref}/network-restrictions\": {\n      \"get\": {\n        \"operationId\": \"getNetworkRestrictions\",\n        \"summary\": \"Gets project's network restrictions\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": {\n              \"minLength\": 20,\n              \"maxLength\": 20,\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"entitlement\": {\n                      \"enum\": [\"disallowed\", \"allowed\"],\n                      \"type\": \"string\"\n                    },\n                    \"config\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"dbAllowedCidrs\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      },\n                      \"required\": [\"dbAllowedCidrs\"]\n                    },\n                    \"status\": {\n                      \"enum\": [\"stored\", \"applied\"],\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"required\": [\"entitlement\", \"config\", \"status\"]\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"\"\n          },\n          \"500\": {\n            \"description\": \"Failed to retrieve project's network restrictions\"\n          }\n        },\n        \"tags\": [\"network restrictions (beta)\"],\n        \"security\": [\n          {\n            \"bearer\": []\n          }\n        ]\n      }\n    },\n    \"/v1/projects/{ref}/network-restrictions/apply\": {\n      \"post\": {\n        \"operationId\": \"applyNetworkRestrictions\",\n        \"summary\": \"Updates project's network restrictions\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": {\n              \"minLength\": 20,\n              \"maxLength\": 20,\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"dbAllowedCidrs\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                },\n                \"required\": [\"dbAllowedCidrs\"]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"entitlement\": {\n                      \"enum\": [\"disallowed\", \"allowed\"],\n                      \"type\": \"string\"\n                    },\n                    \"config\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"dbAllowedCidrs\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      },\n                      \"required\": [\"dbAllowedCidrs\"]\n                    },\n                    \"status\": {\n                      \"enum\": [\"stored\", \"applied\"],\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"required\": [\"entitlement\", \"config\", \"status\"]\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"\"\n          },\n          \"500\": {\n            \"description\": \"Failed to update project network restrictions\"\n          }\n        },\n        \"tags\": [\"network restrictions (beta)\"],\n        \"security\": [\n          {\n            \"bearer\": []\n          }\n        ]\n      }\n    },\n    \"/v1/projects/{ref}/vanity-subdomain\": {\n      \"get\": {\n        \"operationId\": \"getVanitySubdomainConfig\",\n        \"summary\": \"Gets current vanity subdomain config\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": {\n              \"minLength\": 20,\n              \"maxLength\": 20,\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"enum\": [\"not-used\", \"custom-domain-used\", \"active\"]\n                    },\n                    \"custom_domain\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"required\": [\"status\"]\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"\"\n          },\n          \"500\": {\n            \"description\": \"Failed to get project vanity subdomain configuration\"\n          }\n        },\n        \"tags\": [\"vanity subdomain (beta)\"],\n        \"security\": [\n          {\n            \"bearer\": []\n          }\n        ]\n      },\n      \"delete\": {\n        \"operationId\": \"removeVanitySubdomainConfig\",\n        \"summary\": \"Deletes a project's vanity subdomain configuration\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": {\n              \"minLength\": 20,\n              \"maxLength\": 20,\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\"\n          },\n          \"403\": {\n            \"description\": \"\"\n          },\n          \"500\": {\n            \"description\": \"Failed to delete project vanity subdomain configuration\"\n          }\n        },\n        \"tags\": [\"vanity subdomain (beta)\"],\n        \"security\": [\n          {\n            \"bearer\": []\n          }\n        ]\n      }\n    },\n    \"/v1/projects/{ref}/vanity-subdomain/check-availability\": {\n      \"post\": {\n        \"operationId\": \"checkVanitySubdomainAvailability\",\n        \"summary\": \"Checks vanity subdomain availability\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": {\n              \"minLength\": 20,\n              \"maxLength\": 20,\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"vanity_subdomain\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"required\": [\"vanity_subdomain\"]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"available\": {\n                      \"type\": \"boolean\"\n                    }\n                  },\n                  \"required\": [\"available\"]\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"\"\n          },\n          \"500\": {\n            \"description\": \"Failed to check project vanity subdomain configuration\"\n          }\n        },\n        \"tags\": [\"vanity subdomain (beta)\"],\n        \"security\": [\n          {\n            \"bearer\": []\n          }\n        ]\n      }\n    },\n    \"/v1/projects/{ref}/vanity-subdomain/activate\": {\n      \"post\": {\n        \"operationId\": \"activateVanitySubdomainPlease\",\n        \"summary\": \"Activates a vanity subdomain for a project.\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": {\n              \"minLength\": 20,\n              \"maxLength\": 20,\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"vanity_subdomain\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"required\": [\"vanity_subdomain\"]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"custom_domain\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"required\": [\"custom_domain\"]\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"\"\n          },\n          \"500\": {\n            \"description\": \"Failed to activate project vanity subdomain configuration\"\n          }\n        },\n        \"tags\": [\"vanity subdomain (beta)\"],\n        \"security\": [\n          {\n            \"bearer\": []\n          }\n        ]\n      }\n    }\n  },\n  \"info\": {\n    \"title\": \"Supabase API (v1)\",\n    \"description\": \"\",\n    \"version\": \"1.0.0\",\n    \"contact\": {}\n  },\n  \"tags\": [\n    {\n      \"name\": \"organizations\",\n      \"description\": \"Organization endpoints\"\n    },\n    {\n      \"name\": \"projects\",\n      \"description\": \"Project endpoints\"\n    }\n  ],\n  \"servers\": [],\n  \"components\": {\n    \"securitySchemes\": {\n      \"bearer\": {\n        \"scheme\": \"bearer\",\n        \"bearerFormat\": \"JWT\",\n        \"type\": \"http\"\n      }\n    },\n    \"schemas\": {\n      \"DatabaseResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"host\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"host\", \"version\"]\n      },\n      \"ProjectResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"organization_id\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"region\": {\n            \"type\": \"string\"\n          },\n          \"created_at\": {\n            \"type\": \"string\"\n          },\n          \"database\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"host\": {\n                \"type\": \"string\"\n              },\n              \"version\": {\n                \"type\": \"string\"\n              }\n            },\n            \"required\": [\"host\", \"version\"]\n          }\n        },\n        \"required\": [\"id\", \"organization_id\", \"name\", \"region\", \"created_at\"]\n      },\n      \"CreateProjectBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"db_pass\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"organization_id\": {\n            \"type\": \"string\"\n          },\n          \"plan\": {\n            \"type\": \"string\",\n            \"enum\": [\"free\", \"pro\"]\n          },\n          \"region\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"us-east-1\",\n              \"us-west-1\",\n              \"ap-southeast-1\",\n              \"ap-northeast-1\",\n              \"ap-northeast-2\",\n              \"ap-southeast-2\",\n              \"eu-west-1\",\n              \"eu-west-2\",\n              \"eu-west-3\",\n              \"eu-central-1\",\n              \"ca-central-1\",\n              \"ap-south-1\",\n              \"sa-east-1\"\n            ]\n          },\n          \"kps_enabled\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"required\": [\"db_pass\", \"name\", \"organization_id\", \"plan\", \"region\"]\n      },\n      \"OrganizationResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"id\", \"name\"]\n      },\n      \"CreateOrganizationBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"name\"]\n      },\n      \"CreateFunctionBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"slug\": {\n            \"type\": \"string\",\n            \"pattern\": \"/^[A-Za-z0-9_-]+$/\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"body\": {\n            \"type\": \"string\"\n          },\n          \"verify_jwt\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"required\": [\"slug\", \"name\", \"body\"]\n      },\n      \"FunctionResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"slug\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"enum\": [\"ACTIVE\", \"REMOVED\", \"THROTTLED\"],\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"number\"\n          },\n          \"created_at\": {\n            \"type\": \"number\"\n          },\n          \"updated_at\": {\n            \"type\": \"number\"\n          },\n          \"verify_jwt\": {\n            \"type\": \"boolean\"\n          },\n          \"import_map\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"required\": [\"id\", \"slug\", \"name\", \"status\", \"version\", \"created_at\", \"updated_at\"]\n      },\n      \"FunctionSlugResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"slug\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"enum\": [\"ACTIVE\", \"REMOVED\", \"THROTTLED\"],\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"number\"\n          },\n          \"created_at\": {\n            \"type\": \"number\"\n          },\n          \"updated_at\": {\n            \"type\": \"number\"\n          },\n          \"verify_jwt\": {\n            \"type\": \"boolean\"\n          },\n          \"import_map\": {\n            \"type\": \"boolean\"\n          },\n          \"body\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"id\", \"slug\", \"name\", \"status\", \"version\", \"created_at\", \"updated_at\"]\n      },\n      \"UpdateFunctionBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"body\": {\n            \"type\": \"string\"\n          },\n          \"verify_jwt\": {\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"SecretResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"value\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"name\", \"value\"]\n      },\n      \"CreateSecretBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"value\": {\n            \"type\": \"string\",\n            \"pattern\": \"/^(?!SUPABASE_).*/\"\n          }\n        },\n        \"required\": [\"name\", \"value\"]\n      },\n      \"PostgrestConfigResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"max_rows\": {\n            \"type\": \"integer\"\n          },\n          \"db_schema\": {\n            \"type\": \"string\"\n          },\n          \"db_extra_search_path\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"max_rows\", \"db_schema\", \"db_extra_search_path\"]\n      },\n      \"UpdatePostgrestConfigBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"max_rows\": {\n            \"type\": \"integer\",\n            \"minimum\": 0,\n            \"maximum\": 1000000\n          },\n          \"db_extra_search_path\": {\n            \"type\": \"string\"\n          },\n          \"db_schema\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"UpdateCustomHostnameResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"status\": {\n            \"enum\": [\n              \"1_not_started\",\n              \"2_initiated\",\n              \"3_challenge_verified\",\n              \"4_origin_setup_completed\",\n              \"5_services_reconfigured\"\n            ],\n            \"type\": \"string\"\n          },\n          \"custom_hostname\": {\n            \"type\": \"string\"\n          },\n          \"data\": {\n            \"type\": \"object\"\n          }\n        },\n        \"required\": [\"status\", \"custom_hostname\", \"data\"]\n      },\n      \"UpdateCustomHostnameBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"custom_hostname\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"custom_hostname\"]\n      },\n      \"PgsodiumConfigResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"root_key\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"root_key\"]\n      },\n      \"UpdatePgsodiumConfigBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"root_key\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"root_key\"]\n      },\n      \"TypescriptResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"types\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"types\"]\n      },\n      \"NetworkBanResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"banned_ipv4_addresses\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"required\": [\"banned_ipv4_addresses\"]\n      },\n      \"RemoveNetworkBanRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"ipv4_addresses\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"required\": [\"ipv4_addresses\"]\n      },\n      \"NetworkRestrictionsRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"dbAllowedCidrs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"required\": [\"dbAllowedCidrs\"]\n      },\n      \"NetworkRestrictionsResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"entitlement\": {\n            \"enum\": [\"disallowed\", \"allowed\"],\n            \"type\": \"string\"\n          },\n          \"config\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"dbAllowedCidrs\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"required\": [\"dbAllowedCidrs\"]\n          },\n          \"status\": {\n            \"enum\": [\"stored\", \"applied\"],\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"entitlement\", \"config\", \"status\"]\n      },\n      \"VanitySubdomainConfigResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"status\": {\n            \"type\": \"string\",\n            \"enum\": [\"not-used\", \"custom-domain-used\", \"active\"]\n          },\n          \"custom_domain\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"status\"]\n      },\n      \"VanitySubdomainBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"vanity_subdomain\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"vanity_subdomain\"]\n      },\n      \"SubdomainAvailabilityResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"available\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"required\": [\"available\"]\n      },\n      \"ActivateVanitySubdomainResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"custom_domain\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"custom_domain\"]\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/supabase/supabase@3d774b3b7bcdcb410e25726d832467584ebea686/-/blob/spec/transforms/api_v0_openapi_deparsed.json",
			"externalURLs": [
				{
					"url": "https://github.com/supabase/supabase/blob/3d774b3b7bcdcb410e25726d832467584ebea686/spec/transforms/api_v0_openapi_deparsed.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/v1/projects/{ref}/functions\": get: operation \"getFunctions\": security: at spec/transforms/api_v0_openapi_deparsed.json:501:13: unknown security scheme \"apiKeyHeader\""
}