{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/PaloAltoNetworks/gaia"
		},
		"file": {
			"name": "cloudgraph.json",
			"size": 0,
			"path": "openapi3_autogen/cloudgraph.json",
			"byteSize": 3637,
			"content": "{\n  \"openapi\": \"3.0.3\",\n  \"components\": {\n    \"schemas\": {\n      \"cloudgraph\": {\n        \"description\": \"Returns a data structure representing the graph of all cloud nodes and their\\nconnections in a particular namespace.\",\n        \"properties\": {\n          \"internalEdges\": {\n            \"additionalProperties\": {\n              \"$ref\": \"./cloudgraphedge#/components/schemas/cloudgraphedge\"\n            },\n            \"description\": \"The edges of the map.\",\n            \"readOnly\": true,\n            \"type\": \"object\"\n          },\n          \"nodes\": {\n            \"additionalProperties\": {\n              \"$ref\": \"./cloudgraphnode#/components/schemas/cloudgraphnode\"\n            },\n            \"description\": \"Refers to the nodes of the map.\",\n            \"readOnly\": true,\n            \"type\": \"object\"\n          },\n          \"paths\": {\n            \"description\": \"The set of paths from the given source to the given destination. Only provided\\nwhen the query type is NetworkPath.\",\n            \"items\": {\n              \"items\": {\n                \"type\": \"object\"\n              },\n              \"type\": \"array\"\n            },\n            \"readOnly\": true,\n            \"type\": \"array\"\n          },\n          \"publicEdges\": {\n            \"additionalProperties\": {\n              \"$ref\": \"./cloudgraphedge#/components/schemas/cloudgraphedge\"\n            },\n            \"description\": \"The edges of the map.\",\n            \"readOnly\": true,\n            \"type\": \"object\"\n          },\n          \"query\": {\n            \"$ref\": \"./cloudnetworkquery#/components/schemas/cloudnetworkquery\"\n          },\n          \"sourceDestinationMap\": {\n            \"additionalProperties\": {\n              \"additionalProperties\": true,\n              \"type\": \"object\"\n            },\n            \"description\": \"The set of destinations that have been discovered based on the query and their\\nassociated verdicts.\",\n            \"readOnly\": true,\n            \"type\": \"object\"\n          }\n        },\n        \"type\": \"object\"\n      }\n    }\n  },\n  \"info\": {\n    \"contact\": {\n      \"email\": \"dev@aporeto.com\",\n      \"name\": \"Aporeto Inc.\",\n      \"url\": \"go.aporeto.io/api\"\n    },\n    \"license\": {\n      \"name\": \"TODO\"\n    },\n    \"termsOfService\": \"https://localhost/TODO\",\n    \"title\": \"cloudgraph\",\n    \"version\": \"1.0\"\n  },\n  \"paths\": {\n    \"/cloudgraphs\": {\n      \"post\": {\n        \"description\": \"Creates a cloud dependency graph based on ingested data and the required\\nparameters.\",\n        \"operationId\": \"create-a-new-cloudgraph\",\n        \"parameters\": [\n          {\n            \"description\": \"If set to true, neocna will be used regardless of whether tenant is set to use neocna.\",\n            \"in\": \"query\",\n            \"name\": \"neocna\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/cloudgraph\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/cloudgraph\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"pcn/infrastructure\",\n          \"yeul\"\n        ]\n      }\n    }\n  },\n  \"tags\": [\n    {\n      \"description\": \"This tag is for group 'pcn/infrastructure'\",\n      \"name\": \"pcn/infrastructure\"\n    },\n    {\n      \"description\": \"This tag is for package 'yeul'\",\n      \"name\": \"yeul\"\n    }\n  ]\n}\n",
			"canonicalURL": "/github.com/PaloAltoNetworks/gaia@e32ff0fc074e1f80a114e9da2fe81e3a34edfb66/-/blob/openapi3_autogen/cloudgraph.json",
			"externalURLs": [
				{
					"url": "https://github.com/PaloAltoNetworks/gaia/blob/e32ff0fc074e1f80a114e9da2fe81e3a34edfb66/openapi3_autogen/cloudgraph.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"cloudgraph\": resolve \"#/components/schemas/cloudgraph\": property \"internalEdges\": additionalProperties: at openapi3_autogen/cloudgraph.json:10:23: $ref: resolve \"./cloudgraphedge#/components/schemas/cloudgraphedge\": get \"https://raw.githubusercontent.com/PaloAltoNetworks/gaia/e32ff0fc074e1f80a114e9da2fe81e3a34edfb66/openapi3_autogen/cloudgraphedge\": https: bad HTTP code 404 (Not Found)"
}