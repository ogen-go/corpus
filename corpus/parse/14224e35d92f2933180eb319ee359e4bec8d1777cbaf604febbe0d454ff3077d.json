{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/apache/skywalking"
		},
		"file": {
			"name": "productAPI-v1.yaml",
			"size": 0,
			"path": "oap-server/server-starter/src/main/resources/openapi-definitions/serviceA/productAPI-v1.yaml",
			"byteSize": 6634,
			"content": "# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n#\n# Add some `Specification Extensions` for SkyWalking config in the OpenAPI definition documents, otherwise, all configs are default:\n#   `${METHOD}` is a reserved placeholder which represents the HTTP method eg. `POST/GET...`\n#   `${PATH}` is a reserved placeholder which represents the path eg. `/products/{id}`.\n#\n#   | Extension Name | Required | Description | Default Value |\n#   |-----|-----|-----|-----|\n#   | x-sw-service-name | false | The service name to which these endpoints belong | The directory name which the definition documents belong to|\n#   | x-sw-endpoint-name-match-rule | false | The rule used to match the endpoint.| `${METHOD}:${PATH}` |\n#   | x-sw-endpoint-name-format | false | The endpoint name after grouping.| `${METHOD}:${PATH}` |\n#\n#   These extensions are under `OpenAPI Object`. For example, the document below has a full custom config:\n#\n#``` yaml\n#openapi: 3.0.0\n#x-sw-service-name: serviceB\n#x-sw-endpoint-name-match-rule: \"\u003c${METHOD}\u003e:${PATH}\"\n#x-sw-endpoint-name-format: \"\u003c${METHOD}\u003e:${PATH}\"\n#\n#info:\n#  description: OpenAPI definition for SkyWalking test.\n#  version: v2\n#  title: Product API\n#  ...\n#```\n#\n#   We highly recommend using the default config, the custom config (`x-sw-endpoint-name-match-rule/x-sw-endpoint-name-format`) would be considered as part of the match rules (regex pattern).\n#   We provide some cases in `org.apache.skywalking.oap.server.core.config.group.openapi.EndpointGroupingRuleReader4OpenapiTest`, you could validate your custom config as well.\n\n\n###################################################\n# This is only a example using the default config.#\n###################################################\n\n\n#openapi: 3.0.0\n#\n#info:\n#  description: OpenAPI definition for SkyWalking test.\n#  version: v1\n#  title: Product API\n#\n#tags:\n#  - name: product\n#    description: product\n#  - name: relatedProducts\n#    description: Related Products\n#\n#paths:\n#  /products:\n#    get:\n#      tags:\n#        - product\n#      summary: Get all products list\n#      description: Get all products list.\n#      operationId: getProducts\n#      responses:\n#        \"200\":\n#          description: Success\n#          content:\n#            application/json:\n#              schema:\n#                type: array\n#                items:\n#                  $ref: \"#/components/schemas/Product\"\n#  /products/{id}:\n#    get:\n#      tags:\n#        - product\n#      summary: Get product details\n#      description: Get product details with the given id.\n#      operationId: getProduct\n#      parameters:\n#        - name: id\n#          in: path\n#          description: Product id\n#          required: true\n#          schema:\n#            type: integer\n#            format: int64\n#      responses:\n#        \"200\":\n#          description: successful operation\n#          content:\n#            application/json:\n#              schema:\n#                $ref: \"#/components/schemas/ProductDetails\"\n#        \"400\":\n#          description: Invalid product id\n#    post:\n#      tags:\n#        - product\n#      summary: Update product details\n#      description: Update product details with the given id.\n#      operationId: updateProduct\n#      parameters:\n#        - name: id\n#          in: path\n#          description: Product id\n#          required: true\n#          schema:\n#            type: integer\n#            format: int64\n#        - name: name\n#          in: query\n#          description: Product name\n#          required: true\n#          schema:\n#            type: string\n#      responses:\n#        \"200\":\n#          description: successful operation\n#    delete:\n#      tags:\n#        - product\n#      summary: Delete product details\n#      description: Delete product details with the given id.\n#      operationId: deleteProduct\n#      parameters:\n#        - name: id\n#          in: path\n#          description: Product id\n#          required: true\n#          schema:\n#            type: integer\n#            format: int64\n#      responses:\n#        \"200\":\n#          description: successful operation\n#  /products/{id}/relatedProducts:\n#    get:\n#      tags:\n#        - relatedProducts\n#      summary: Get related products\n#      description: Get related products with the given product id.\n#      operationId: getRelatedProducts\n#      parameters:\n#        - name: id\n#          in: path\n#          description: Product id\n#          required: true\n#          schema:\n#            type: integer\n#            format: int64\n#      responses:\n#        \"200\":\n#          description: successful operation\n#          content:\n#            application/json:\n#              schema:\n#                $ref: \"#/components/schemas/RelatedProducts\"\n#        \"400\":\n#          description: Invalid product id\n#\n#components:\n#  schemas:\n#    Product:\n#      type: object\n#      description: Product id and name\n#      properties:\n#        id:\n#          type: integer\n#          format: int64\n#          description: Product id\n#        name:\n#          type: string\n#          description: Product name\n#      required:\n#        - id\n#        - name\n#    ProductDetails:\n#      type: object\n#      description: Product details\n#      properties:\n#        id:\n#          type: integer\n#          format: int64\n#          description: Product id\n#        name:\n#          type: string\n#          description: Product name\n#        description:\n#          type: string\n#          description: Product description\n#      required:\n#        - id\n#        - name\n#    RelatedProducts:\n#      type: object\n#      description: Related Products\n#      properties:\n#        id:\n#          type: integer\n#          format: int32\n#          description: Product id\n#        relatedProducts:\n#          type: array\n#          description: List of related products\n#          items:\n#            $ref: \"#/components/schemas/Product\"",
			"canonicalURL": "/github.com/apache/skywalking@bfb90f6c884d543e0bbc182dec2a7e00554f1b1d/-/blob/oap-server/server-starter/src/main/resources/openapi-definitions/serviceA/productAPI-v1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/apache/skywalking/blob/bfb90f6c884d543e0bbc182dec2a7e00554f1b1d/oap-server/server-starter/src/main/resources/openapi-definitions/serviceA/productAPI-v1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse version: invalid version: invalid major version: strconv.Atoi: parsing \"\": invalid syntax"
}