{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/AgnostiqHQ/covalent"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "covalent_results/openapi.yaml",
			"byteSize": 9291,
			"content": "openapi: 3.0.2\ninfo:\n  title: Covalent Results Service API\n  version: 0.1.0\npaths:\n  /api/v0/workflow/results:\n    get:\n      tags:\n        - Workflow\n      summary: Get Results\n      description: Return JSON serialized result objects from the database\n      operationId: get_results_api_v0_workflow_results_get\n      parameters:\n        - required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/ResultFormats\"\n            default: json\n          name: format\n          in: query\n      responses:\n        \"200\":\n          description: Return JSON serialized result objects from the database\n          content:\n            application/json:\n              schema:\n                title: Response 200 Get Results Api V0 Workflow Results Get\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Result\"\n        \"422\":\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n    post:\n      tags:\n        - Workflow\n      summary: Insert Result\n      description: Submit pickled result file\n      operationId: insert_result_api_v0_workflow_results_post\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              $ref: \"#/components/schemas/Body_insert_result_api_v0_workflow_results_post\"\n        required: true\n      responses:\n        \"200\":\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InsertResultResponse\"\n        \"422\":\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n    delete:\n      tags:\n        - Workflow\n      summary: Delete Result\n      operationId: delete_result_api_v0_workflow_results_delete\n      parameters:\n        - required: false\n          schema:\n            title: Dispatch Ids\n            type: array\n            items:\n              type: string\n            default: []\n          name: dispatch_ids\n          in: query\n      responses:\n        \"200\":\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeleteResultResponse\"\n        \"422\":\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n  /api/v0/workflow/results/{dispatch_id}:\n    get:\n      tags:\n        - Workflow\n      summary: Get Result\n      description: Get a result object as pickle file\n      operationId: get_result_api_v0_workflow_results__dispatch_id__get\n      parameters:\n        - required: true\n          schema:\n            title: Dispatch Id\n            type: string\n          name: dispatch_id\n          in: path\n        - required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/ResultFormats\"\n            default: binary\n          name: format\n          in: query\n      responses:\n        \"200\":\n          description: Return binary content of file.\n          content:\n            application/octet-stream: {}\n        \"404\":\n          description: Result was not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPExceptionSchema\"\n        \"422\":\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n    put:\n      tags:\n        - Workflow\n      summary: Update Result\n      description: Update a result object's task\n      operationId: update_result_api_v0_workflow_results__dispatch_id__put\n      parameters:\n        - required: true\n          schema:\n            title: Dispatch Id\n            type: string\n          name: dispatch_id\n          in: path\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              $ref: \"#/components/schemas/Body_update_result_api_v0_workflow_results__dispatch_id__put\"\n        required: true\n      responses:\n        \"200\":\n          description: Return message indicating success of updating task\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateResultResponse\"\n        \"404\":\n          description: Result was not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPExceptionSchema\"\n        \"422\":\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\ncomponents:\n  schemas:\n    Body_insert_result_api_v0_workflow_results_post:\n      title: Body_insert_result_api_v0_workflow_results_post\n      required:\n        - result_pkl_file\n      type: object\n      properties:\n        result_pkl_file:\n          title: Result Pkl File\n          type: string\n          format: binary\n    Body_update_result_api_v0_workflow_results__dispatch_id__put:\n      title: Body_update_result_api_v0_workflow_results__dispatch_id__put\n      required:\n        - task\n      type: object\n      properties:\n        task:\n          title: Task\n          type: string\n          format: binary\n    DeleteResultResponse:\n      title: DeleteResultResponse\n      required:\n        - deleted\n        - failed\n      type: object\n      properties:\n        deleted:\n          title: Deleted\n          type: array\n          items:\n            type: string\n        failed:\n          title: Failed\n          type: array\n          items:\n            type: string\n    Graph:\n      title: Graph\n      required:\n        - nodes\n        - links\n      type: object\n      properties:\n        nodes:\n          title: Nodes\n          type: array\n          items:\n            $ref: \"#/components/schemas/Node\"\n        links:\n          title: Links\n          type: array\n          items:\n            $ref: \"#/components/schemas/Link\"\n    HTTPExceptionSchema:\n      title: HTTPExceptionSchema\n      required:\n        - detail\n      type: object\n      properties:\n        detail:\n          title: Detail\n          type: string\n    HTTPValidationError:\n      title: HTTPValidationError\n      type: object\n      properties:\n        detail:\n          title: Detail\n          type: array\n          items:\n            $ref: \"#/components/schemas/ValidationError\"\n    InsertResultResponse:\n      title: InsertResultResponse\n      required:\n        - dispatch_id\n      type: object\n      properties:\n        dispatch_id:\n          title: Dispatch Id\n          type: string\n    Link:\n      title: Link\n      required:\n        - edge_name\n        - param_type\n        - source\n        - target\n      type: object\n      properties:\n        edge_name:\n          title: Edge Name\n          type: string\n        param_type:\n          title: Param Type\n          type: string\n        source:\n          title: Source\n          type: integer\n        target:\n          title: Target\n          type: integer\n    Node:\n      title: Node\n      required:\n        - name\n        - start_time\n        - end_time\n        - status\n        - stdout\n        - stderr\n        - id\n      type: object\n      properties:\n        name:\n          title: Name\n          type: string\n        start_time:\n          title: Start Time\n          type: string\n          format: date-time\n        end_time:\n          title: End Time\n          type: string\n          format: date-time\n        status:\n          title: Status\n          type: string\n        output:\n          title: Output\n        error:\n          title: Error\n          type: string\n        stdout:\n          title: Stdout\n          type: string\n        stderr:\n          title: Stderr\n          type: string\n        id:\n          title: Id\n          type: integer\n    Result:\n      title: Result\n      required:\n        - dispatch_id\n        - results_dir\n        - status\n        - graph\n      type: object\n      properties:\n        dispatch_id:\n          title: Dispatch Id\n          type: string\n        results_dir:\n          title: Results Dir\n          type: string\n        status:\n          title: Status\n          type: string\n        graph:\n          $ref: \"#/components/schemas/Graph\"\n    ResultFormats:\n      title: ResultFormats\n      enum:\n        - binary\n        - json\n      type: string\n      description: An enumeration.\n    UpdateResultResponse:\n      title: UpdateResultResponse\n      required:\n        - response\n      type: object\n      properties:\n        response:\n          title: Response\n          type: string\n    ValidationError:\n      title: ValidationError\n      required:\n        - loc\n        - msg\n        - type\n      type: object\n      properties:\n        loc:\n          title: Location\n          type: array\n          items:\n            type: string\n        msg:\n          title: Message\n          type: string\n        type:\n          title: Error Type\n          type: string\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /api/v0/workflow/results: get: operation \"get_results_api_v0_workflow_results_get\": parameters: parse parameter \"format\": schema: parse default: unexpected type: \"\""
}