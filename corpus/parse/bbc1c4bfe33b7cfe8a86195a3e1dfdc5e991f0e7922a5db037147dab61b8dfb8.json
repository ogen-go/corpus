{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/synergatika/synergy-api"
		},
		"file": {
			"name": "API.yaml",
			"size": 0,
			"path": "definition/API.yaml",
			"byteSize": 89273,
			"content": "openapi: \"3.0.0\"\r\n\r\ninfo:\r\n  version: Draft\r\n  title: Synergy API\r\n  description: \"\"\r\n  license:\r\n    name: MIT\r\n\r\nservers:\r\n  - url: http://localhost:3000 #http://api.synergatika.gr\r\n\r\npaths:\r\n  # Paths: Authentication\r\n  /auth/authenticate:\r\n    post:\r\n      summary: \"Authenticate users\"\r\n      operationId: authAuthenticate\r\n      tags:\r\n        - authentication\r\n      requestBody:\r\n        $ref: '#/components/requestBodies/AuthenticationRequestBody'\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Authenticate'\r\n        '202':\r\n         $ref: '#/components/responses/Verification_Required'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '404':\r\n          $ref: '#/components/responses/Not_Found'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /auth/auto-register/member:\r\n    post:\r\n      summary: \"Auto-Register new user (only as member)\"\r\n      operationId: authRegister\r\n      tags:\r\n        - authentication\r\n      requestBody:\r\n        $ref: '#/components/requestBodies/RegisterRequestBody'\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Email_Sent'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '404':\r\n          $ref: '#/components/responses/Not_Found'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /auth/register/member:\r\n    post:\r\n      summary: \"Register/Invite a new member (only for admins or partners)\"\r\n      operationId: authRegisterMember\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - authentication\r\n      requestBody:\r\n        $ref: '#/components/requestBodies/RegisterMemberRequestBody'\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Email_Sent'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '403':\r\n          $ref: '#/components/responses/Forbidden'\r\n        '404':\r\n          $ref: '#/components/responses/Not_Found'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /auth/register/partner:\r\n    post:\r\n      summary: \"Register/Invite a new partner (only for partners)\"\r\n      operationId: authRegisterPartner\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - authentication\r\n      requestBody:\r\n        $ref: '#/components/requestBodies/RegisterPartnerRequestBody'\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Email_Sent'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '403':\r\n          $ref: '#/components/responses/Forbidden'\r\n        '404':\r\n          $ref: '#/components/responses/Not_Found'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /auth/set_pass/{email}:\r\n    put:\r\n      summary: \"An invited user changes the password\"\r\n      operationId: changePassMiddle\r\n      tags:\r\n        - authentication\r\n      parameters:\r\n          - $ref: '#/components/parameters/email'\r\n      requestBody:\r\n        $ref: '#/components/requestBodies/ChangePassInRequestBody'\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Updated'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '404':\r\n          $ref: '#/components/responses/Not_Found'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /auth/change_pass:\r\n    put:\r\n      summary: \"A logged in user changes the password\"\r\n      operationId: changePassInside\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - authentication\r\n      requestBody:\r\n        $ref: '#/components/requestBodies/ChangePassInRequestBody'\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Updated'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '404':\r\n          $ref: '#/components/responses/Not_Found'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /auth/verify_email/{email}:\r\n    get:\r\n      summary: \"Ask for email validation\"\r\n      operationId: askVerification\r\n      parameters:\r\n        - $ref: '#/components/parameters/email'\r\n      tags:\r\n        - authentication\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Email_Sent'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '404':\r\n          $ref: '#/components/responses/Not_Found'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n  /auth/verify_email:\r\n    post:\r\n      summary: \"Checks if link is valid and verify email\"\r\n      operationId: checkVerification\r\n      tags:\r\n        - authentication\r\n      requestBody:\r\n        $ref: '#/components/requestBodies/CheckTokenRequestBody'\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Created'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '404':\r\n          $ref: '#/components/responses/Not_Found'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /auth/forgot_pass/{email}:\r\n    get:\r\n      summary: \"Ask for password restoration\"\r\n      operationId: askRestoration\r\n      parameters:\r\n        - $ref: '#/components/parameters/email'\r\n      tags:\r\n        - authentication\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Email_Sent'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '404':\r\n          $ref: '#/components/responses/Not_Found'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n  /auth/forgot_pass:\r\n    post:\r\n      summary: \"Checks if link is valid and procced\"\r\n      operationId: checkRestoration\r\n      tags:\r\n        - authentication\r\n      requestBody:\r\n        $ref: '#/components/requestBodies/CheckTokenRequestBody'\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Updated'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '404':\r\n          $ref: '#/components/responses/Not_Found'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n    put:\r\n      summary: \"A no logged in user changes the password\"\r\n      operationId: changePassOutside\r\n      tags:\r\n        - authentication\r\n      requestBody:\r\n        $ref: '#/components/requestBodies/ChangePassOutRequestBody'\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Updated'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '404':\r\n          $ref: '#/components/responses/Not_Found'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /auth/check_identifier/{identifier}:\r\n    get:\r\n      summary: \"Check if email or card is linked to any account\"\r\n      operationId: checkIdentifier\r\n      parameters:\r\n        - $ref: '#/components/parameters/identifier'\r\n      tags:\r\n        - authentication\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Registration_Status'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '403':\r\n          $ref: '#/components/responses/Forbidden'\r\n        '404':\r\n          $ref: '#/components/responses/Not_Found'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /auth/link_email/{card}:\r\n    put:\r\n      summary: \"Check if email or card is linked to any account\"\r\n      operationId: linkEmail\r\n      parameters:\r\n        - $ref: '#/components/parameters/card'\r\n      requestBody:\r\n        $ref: '#/components/requestBodies/EmailRequestBody'\r\n      tags:\r\n        - authentication\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Email_Sent'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '403':\r\n          $ref: '#/components/responses/Forbidden'\r\n        '404':\r\n          $ref: '#/components/responses/Not_Found'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /auth/link_card/{email}:\r\n    put:\r\n      summary: \"Check if email or card is linked to any account\"\r\n      operationId: linkCard\r\n      parameters:\r\n        - $ref: '#/components/parameters/email'\r\n      requestBody:\r\n        $ref: '#/components/requestBodies/CardRequestBody'\r\n      tags:\r\n        - authentication\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Updated'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '403':\r\n          $ref: '#/components/responses/Forbidden'\r\n        '404':\r\n          $ref: '#/components/responses/Not_Found'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  # Paths: Profile \u0026 Partner\r\n  /profile:\r\n    get:\r\n      summary: \"Read user's profile info (only for members)\"\r\n      operationId: readUserProfile\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - profile\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Member'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n    put:\r\n      summary: \"Update user's profile info (only for members)\"\r\n      operationId: updateUserProfile\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - profile\r\n      requestBody:\r\n        $ref: '#/components/requestBodies/MemberRequestBody'\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Member'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /partners/public/{offset}:\r\n    get:\r\n      summary: \"Read all partners' info (not require login)\"\r\n      operationId: readAllPartners\r\n      parameters:\r\n        - $ref: '#/components/parameters/offset'\r\n      tags:\r\n        - partners\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Partners'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /partners/{partner_id_slug}:\r\n    get:\r\n      summary: \"Read partner's info (not require login)\"\r\n      operationId: readPartnerInfo\r\n      parameters:\r\n          - $ref: '#/components/parameters/partner_id_slug'\r\n      tags:\r\n        - partners\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Partner'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n  /partners/{partner_id}:\r\n    put:\r\n      summary: \"Update partner's info\"\r\n      operationId: updatePartnerInfo\r\n      security:\r\n        - bearerAuth: []\r\n      parameters:\r\n        - $ref: '#/components/parameters/partner_id'\r\n      tags:\r\n        - partners\r\n      requestBody:\r\n        $ref: '#/components/requestBodies/PartnerRequestBody'\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Partner'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '403':\r\n          $ref: '#/components/responses/Forbidden'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  # Paths: Loyalty\r\n  /loyalty/earn/{_to}:\r\n    post:\r\n      summary: \"\"\r\n      operationId: earnPoints\r\n      parameters:\r\n        - $ref: '#/components/parameters/_to'\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - loyalty\r\n      requestBody:\r\n        $ref: '#/components/requestBodies/LoyaltyEarnPointsRequestBody'\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Updated'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '403':\r\n          $ref: '#/components/responses/Forbidden'\r\n        '404':\r\n          $ref: '#/components/responses/Not_Found'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /loyalty/redeem{_to}:\r\n    post:\r\n      summary: \"\"\r\n      operationId: redeemPoints\r\n      parameters:\r\n        - $ref: '#/components/parameters/_to'\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - loyalty\r\n      requestBody:\r\n        $ref: '#/components/requestBodies/LoyaltyRedeemPointsRequestBody'\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Updated'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '403':\r\n          $ref: '#/components/responses/Forbidden'\r\n        '404':\r\n          $ref: '#/components/responses/Not_Found'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /loyalty/redeem/{partner_id}/{offer_id}/{_to}:\r\n    post:\r\n      summary: \"\"\r\n      operationId: redeemOffer\r\n      parameters:\r\n        - $ref: '#/components/parameters/_to'\r\n        - $ref: '#/components/parameters/partner_id'\r\n        - $ref: '#/components/parameters/offer_id'\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - loyalty\r\n      requestBody:\r\n        $ref: '#/components/requestBodies/LoyaltyRedeemOfferRequestBody'\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Updated'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '403':\r\n          $ref: '#/components/responses/Forbidden'\r\n        '404':\r\n          $ref: '#/components/responses/Not_Found'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /loyalty/balance:\r\n    get:\r\n      summary: \"\"\r\n      operationId: readBalance\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - loyalty\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Balance'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /loyalty/balance/{_to}:\r\n    get:\r\n      summary: \"\"\r\n      operationId: readBalanceBypartner\r\n      parameters:\r\n        - $ref: '#/components/parameters/_to'\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - loyalty\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Balance'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '403':\r\n          $ref: '#/components/responses/Forbidden'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /loyalty/badge:\r\n    get:\r\n      summary: \"\"\r\n      operationId: readActivity\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - loyalty\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Activity'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /loyalty/badge/{_to}:\r\n    get:\r\n      summary: \"\"\r\n      operationId: readActivityBypartner\r\n      parameters:\r\n        - $ref: '#/components/parameters/_to'\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - loyalty\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Activity'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '403':\r\n          $ref: '#/components/responses/Forbidden'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /loyalty/transactions/{offset}:\r\n    get:\r\n      summary: \"\"\r\n      operationId: readLoyaltyTransactions\r\n      parameters:\r\n        - $ref: '#/components/parameters/offset'\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - loyalty\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/LoyaltyTransactions'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  # Paths: Loyalty - Offers\r\n  /loyalty/offers/public/{offset}:\r\n    get:\r\n      summary: \"Read Offers from every store\"\r\n      operationId: readAllOffers\r\n      parameters:\r\n        - $ref: '#/components/parameters/offset'\r\n      tags:\r\n        - loyalty\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Offers'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /loyalty/offers:\r\n    post:\r\n      summary: \"Create a new offer\"\r\n      operationId: createOffer\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - loyalty\r\n      requestBody:\r\n        $ref: '#/components/requestBodies/OfferRequestBody'\r\n      responses:\r\n        '201':\r\n          $ref: '#/components/responses/Created'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '403':\r\n          $ref: '#/components/responses/Forbidden'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /loyalty/offers/public/{partner_id_slug}/{offset}:\r\n    get:\r\n      summary: \"Read Offers for a specific store\"\r\n      operationId: readOffersByStore\r\n      parameters:\r\n        - $ref: '#/components/parameters/partner_id_slug'\r\n        - $ref: '#/components/parameters/offset'\r\n      tags:\r\n        - loyalty\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Offers'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /loyalty/offers/{partner_id_slug}/{offer_id_slug}:\r\n    get:\r\n      summary: \"Read a specific Offer\"\r\n      operationId: readOffer\r\n      parameters:\r\n        - $ref: '#/components/parameters/partner_id_slug'\r\n        - $ref: '#/components/parameters/offer_id_slug'\r\n      tags:\r\n        - loyalty\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Offer'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /loyalty/offers/{partner_id}/{offer_id}:\r\n    put:\r\n      summary: \"Update an Offer\"\r\n      operationId: updateOffer\r\n      security:\r\n        - bearerAuth: []\r\n      parameters:\r\n        - $ref: '#/components/parameters/partner_id'\r\n        - $ref: '#/components/parameters/offer_id'\r\n      tags:\r\n        - loyalty\r\n      requestBody:\r\n        $ref: '#/components/requestBodies/OfferRequestBody'\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Updated'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '403':\r\n          $ref: '#/components/responses/Forbidden'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n    delete:\r\n      summary: \"Delete an Offer\"\r\n      operationId: deleteOffer\r\n      security:\r\n        - bearerAuth: []\r\n      parameters:\r\n        - $ref: '#/components/parameters/partner_id'\r\n        - $ref: '#/components/parameters/offer_id'\r\n      tags:\r\n        - loyalty\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Updated'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '403':\r\n          $ref: '#/components/responses/Forbidden'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  # Paths: Community - Posts \u0026 Events\r\n  /community/public/{offset}:\r\n    get:\r\n      summary: \"Read public Posts and Events from every store\"\r\n      operationId: readPublicPostsAndEvents\r\n      parameters:\r\n        - $ref: '#/components/parameters/offset'\r\n      tags:\r\n        - community\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/PostsEvents'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /community/private/{offset}:\r\n    get:\r\n      summary: \"Read private Posts and Events from every store\"\r\n      operationId: readPrivatePostsAndEvents\r\n      parameters:\r\n        - $ref: '#/components/parameters/offset'\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - community\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/PostsEvents'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /community/public/{partner_id_slug}/{offset}:\r\n    get:\r\n      summary: \"Read public Posts and Events for a specific store\"\r\n      operationId: readPublicPostsAndEventsByStore\r\n      parameters:\r\n        - $ref: '#/components/parameters/partner_id_slug'\r\n        - $ref: '#/components/parameters/offset'\r\n      tags:\r\n        - community\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/PostsEvents'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /community/private/{partner_id_slug}/{offset}:\r\n    get:\r\n      summary: \"Read private posts and events for a specific store\"\r\n      operationId: readPrivatePostsAndEventsByStore\r\n      security:\r\n        - bearerAuth: []\r\n      parameters:\r\n        - $ref: '#/components/parameters/partner_id_slug'\r\n        - $ref: '#/components/parameters/offset'\r\n      tags:\r\n        - community\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/PostsEvents'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /posts/private/{offset}:\r\n    get:\r\n      summary: \"Read private Posts from every store\"\r\n      operationId: readPrivatePosts\r\n      parameters:\r\n        - $ref: '#/components/parameters/offset'\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - community\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Posts'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /posts/public/{offset}:\r\n    get:\r\n      summary: \"Read Offers from every store\"\r\n      operationId: readPublicPosts\r\n      parameters:\r\n        - $ref: '#/components/parameters/offset'\r\n      tags:\r\n        - loyalty\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Posts'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /posts:\r\n    post:\r\n      summary: \"Create a new Post\"\r\n      operationId: createPost\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - community\r\n      requestBody:\r\n        $ref: '#/components/requestBodies/PostRequestBody'\r\n      responses:\r\n        '201':\r\n          $ref: '#/components/responses/Created'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '403':\r\n          $ref: '#/components/responses/Forbidden'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /posts/public/{partner_id_slug}/{offset}:\r\n    get:\r\n      summary: \"Read public Posts for a specific store\"\r\n      operationId: readPublicPostsByStore\r\n      parameters:\r\n        - $ref: '#/components/parameters/partner_id_slug'\r\n        - $ref: '#/components/parameters/offset'\r\n      tags:\r\n        - community\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Posts'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /posts/private/{partner_id_slug}/{offset}:\r\n    get:\r\n      summary: \"Read private Posts for a specific store\"\r\n      operationId: readPrivatePostsByStore\r\n      security:\r\n        - bearerAuth: []\r\n      parameters:\r\n        - $ref: '#/components/parameters/partner_id_slug'\r\n        - $ref: '#/components/parameters/offset'\r\n      tags:\r\n        - community\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Posts'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /posts/{partner_id_slug}/{post_id_slug}:\r\n   get:\r\n      summary: \"Read a specific Post\"\r\n      operationId: readPost\r\n      security:\r\n        - bearerAuth: []\r\n      parameters:\r\n        - $ref: '#/components/parameters/partner_id_slug'\r\n        - $ref: '#/components/parameters/post_id_slug'\r\n      tags:\r\n        - community\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Post'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /posts/{partner_id}/{post_id}:\r\n    put:\r\n      summary: \"Update a Post or an Event\"\r\n      operationId: updatePost\r\n      security:\r\n        - bearerAuth: []\r\n      parameters:\r\n        - $ref: '#/components/parameters/partner_id'\r\n        - $ref: '#/components/parameters/post_id'\r\n      tags:\r\n        - community\r\n      requestBody:\r\n        $ref: '#/components/requestBodies/OfferRequestBody'\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Updated'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '403':\r\n          $ref: '#/components/responses/Forbidden'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n    delete:\r\n      summary: \"Delete a Post or an Event\"\r\n      operationId: deletePost\r\n      security:\r\n        - bearerAuth: []\r\n      parameters:\r\n        - $ref: '#/components/parameters/partner_id'\r\n        - $ref: '#/components/parameters/post_id'\r\n      tags:\r\n        - community\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Updated'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '403':\r\n          $ref: '#/components/responses/Forbidden'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /events/private/{offset}:\r\n    get:\r\n      summary: \"Read private Events from every store\"\r\n      operationId: readPrivateEvents\r\n      parameters:\r\n        - $ref: '#/components/parameters/offset'\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - community\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Events'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /events/public/{offset}:\r\n    get:\r\n      summary: \"Read Events from every store\"\r\n      operationId: readPublicEvents\r\n      parameters:\r\n        - $ref: '#/components/parameters/offset'\r\n      tags:\r\n        - loyalty\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Events'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /events:\r\n    post:\r\n      summary: \"Create a new Event\"\r\n      operationId: createEvent\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - community\r\n      requestBody:\r\n        $ref: '#/components/requestBodies/EventRequestBody'\r\n      responses:\r\n        '201':\r\n          $ref: '#/components/responses/Created'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '403':\r\n          $ref: '#/components/responses/Forbidden'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /events/public/{partner_id_slug}/{offset}:\r\n    get:\r\n      summary: \"Read public Posts for a specific store\"\r\n      operationId: readPublicEventsByStore\r\n      parameters:\r\n        - $ref: '#/components/parameters/partner_id_slug'\r\n        - $ref: '#/components/parameters/offset'\r\n      tags:\r\n        - community\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Events'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /events/private/{partner_id_slug}/{offset}:\r\n    get:\r\n      summary: \"Read private Posts for a specific store\"\r\n      operationId: readPrivateEventsByStore\r\n      security:\r\n        - bearerAuth: []\r\n      parameters:\r\n        - $ref: '#/components/parameters/partner_id_slug'\r\n        - $ref: '#/components/parameters/offset'\r\n      tags:\r\n        - community\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Events'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /events/{partner_id_slug}/{event_id_slug}:\r\n   get:\r\n      summary: \"Read a specific Event\"\r\n      operationId: readEvent\r\n      security:\r\n        - bearerAuth: []\r\n      parameters:\r\n        - $ref: '#/components/parameters/partner_id_slug'\r\n        - $ref: '#/components/parameters/event_id_slug'\r\n      tags:\r\n        - community\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Event'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /events/{partner_id}/{event_id}:\r\n    put:\r\n      summary: \"Update a Event\"\r\n      operationId: updateEvent\r\n      security:\r\n        - bearerAuth: []\r\n      parameters:\r\n        - $ref: '#/components/parameters/partner_id'\r\n        - $ref: '#/components/parameters/event_id'\r\n      tags:\r\n        - community\r\n      requestBody:\r\n        $ref: '#/components/requestBodies/OfferRequestBody'\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Updated'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '403':\r\n          $ref: '#/components/responses/Forbidden'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n    delete:\r\n      summary: \"Delete an Event\"\r\n      operationId: deleteEvent\r\n      security:\r\n        - bearerAuth: []\r\n      parameters:\r\n        - $ref: '#/components/parameters/partner_id'\r\n        - $ref: '#/components/parameters/event_id'\r\n      tags:\r\n        - community\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Updated'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '403':\r\n          $ref: '#/components/responses/Forbidden'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  # Paths: Microfund\r\n  /microcredit/earn/{partner_id}/{campaign_id}/{_to}:\r\n    post:\r\n      summary: \"\"\r\n      operationId: earnTokensByPartner\r\n      parameters:\r\n        - $ref: '#/components/parameters/_to'\r\n        - $ref: '#/components/parameters/partner_id'\r\n        - $ref: '#/components/parameters/campaign_id'\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - microcredit\r\n      requestBody:\r\n        $ref: '#/components/requestBodies/MicrocreditEarnRequestBody'\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Created'\r\n        '400':\r\n          $ref: '#/components/responses/Not_Found'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '403':\r\n          $ref: '#/components/responses/Forbidden'\r\n        '404':\r\n          $ref: '#/components/responses/Not_Found'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /microcredit/earn/{partner_id}/{campaign_id}:\r\n    post:\r\n      summary: \"\"\r\n      operationId: earnTokens\r\n      parameters:\r\n        - $ref: '#/components/parameters/partner_id'\r\n        - $ref: '#/components/parameters/campaign_id'\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - microcredit\r\n      requestBody:\r\n        $ref: '#/components/requestBodies/MicrocreditEarnRequestBody'\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Created'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '403':\r\n          $ref: '#/components/responses/Forbidden'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /microcredit/redeem/{partner_id}/{campaign_id}:\r\n    post:\r\n      summary: \"\"\r\n      operationId: redeemTokens\r\n      parameters:\r\n        - $ref: '#/components/parameters/partner_id'\r\n        - $ref: '#/components/parameters/campaign_id'\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - microcredit\r\n      requestBody:\r\n        $ref: '#/components/requestBodies/MicrocreditRedeemRequestBody'\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Created'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '403':\r\n          $ref: '#/components/responses/Forbidden'\r\n        '404':\r\n          $ref: '#/components/responses/Not_Found'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /microcredit/confirm/{partner_id}/{campaign_id}/{support_id}:\r\n    put:\r\n      summary: \"Update Support's status (order, confirmation)\"\r\n      operationId: confirmSupportPayment\r\n      parameters:\r\n        - $ref: '#/components/parameters/partner_id'\r\n        - $ref: '#/components/parameters/campaign_id'\r\n        - $ref: '#/components/parameters/support_id'\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - microcredit\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Updated'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /microcredit/transactions/{offset}:\r\n    get:\r\n      summary: \"\"\r\n      operationId: readMicrocreditTransactions\r\n      parameters:\r\n        - $ref: '#/components/parameters/offset'\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - loyalty\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/MicrocreditTransactions'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /microcredit/badge:\r\n    get:\r\n      summary: \"\"\r\n      operationId: readActivity\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - loyalty\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Activity'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n          \r\n  # Paths: Microfund - Campaigns\r\n  /microcredit/campaigns/public/{offset}:\r\n    get:\r\n      summary: \"Read Public Campaigns from every store\"\r\n      operationId: readAllPublicMicrocreditCampaigns\r\n      parameters:\r\n        - $ref: '#/components/parameters/offset'\r\n      tags:\r\n        - microcredit\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Campaigns'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /microcredit/campaigns/private/{offset}:\r\n    get:\r\n      summary: \"Read Private Campaigns from every store\"\r\n      operationId: readAllPrivateMicrocreditCampaigns\r\n      parameters:\r\n        - $ref: '#/components/parameters/offset'\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - microcredit\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Campaigns'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /microcredit/campaigns:\r\n    post:\r\n      summary: \"Create a new Microcredit Campaign\"\r\n      operationId: createMicrocreditCampaign\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - microcredit\r\n      requestBody:\r\n        $ref: '#/components/requestBodies/CampaignRequestBody'\r\n      responses:\r\n        '201':\r\n          $ref: '#/components/responses/Created'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '403':\r\n          $ref: '#/components/responses/Forbidden'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /microcredit/campaigns/public/{partner_id_slug}/{offset}:\r\n    get:\r\n      summary: \"Read Public Campaigns from every store\"\r\n      operationId: readPublicMicrocreditCampaignsByStore\r\n      parameters:\r\n        - $ref: '#/components/parameters/partner_id_slug'\r\n        - $ref: '#/components/parameters/offset'\r\n      tags:\r\n        - microcredit\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Campaigns'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /microcredit/campaigns/private/{partner_id_slug}/{offset}:\r\n    get:\r\n      summary: \"Read Private Campaigns from every store\"\r\n      operationId: readPrivateMicrocreditCampaignsByStore\r\n      parameters:\r\n        - $ref: '#/components/parameters/partner_id_slug'\r\n        - $ref: '#/components/parameters/offset'\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - microcredit\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Campaigns'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /microcredit/campaigns/{partner_id_slug}/{campaign_id_slug}:\r\n    get:\r\n      summary: \"Read a Campaign\"\r\n      operationId: readAMicrocreditCampaign\r\n      parameters:\r\n        - $ref: '#/components/parameters/partner_id_slug'\r\n        - $ref: '#/components/parameters/campaign_id_slug'\r\n      tags:\r\n        - microcredit\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Campaign'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /microcredit/campaigns/{partner_id}/{campaign_id}:\r\n    put:\r\n      summary: \"Update a Microcredit Campaign\"\r\n      operationId: updateMicrocreditCampaign\r\n      security:\r\n        - bearerAuth: []\r\n      parameters:\r\n        - $ref: '#/components/parameters/partner_id'\r\n        - $ref: '#/components/parameters/campaign_id'\r\n      tags:\r\n        - microfund\r\n      requestBody:\r\n        $ref: '#/components/requestBodies/CampaignRequestBody'\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Updated'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '403':\r\n          $ref: '#/components/responses/Forbidden'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n    delete:\r\n      summary: \"Delete a Microcredit Campaign\"\r\n      operationId: deleteMicrocreditCampaign\r\n      security:\r\n        - bearerAuth: []\r\n      parameters:\r\n        - $ref: '#/components/parameters/partner_id'\r\n        - $ref: '#/components/parameters/campaign_id'\r\n      tags:\r\n        - microcredit\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Updated'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '403':\r\n          $ref: '#/components/responses/Forbidden'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /microcredit/campaigns/{partner_id}/{campaign_id}/publish:\r\n    put:\r\n      summary: \"Publish a Microcredit Campaign\"\r\n      operationId: publishMicrocreditCampaign\r\n      security:\r\n        - bearerAuth: []\r\n      parameters:\r\n        - $ref: '#/components/parameters/partner_id'\r\n        - $ref: '#/components/parameters/campaign_id'\r\n      tags:\r\n        - microcredit\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Updated'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '403':\r\n          $ref: '#/components/responses/Forbidden'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /microcredit/supports:\r\n    get:\r\n      summary: \"Read a All Backer's Supports\"\r\n      operationId: readAllBackerSupports\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - microcredit\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Supports'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '403':\r\n          $ref: '#/components/responses/Forbidden'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /microcredit/supports/{partner_id}/{campaign_id}:\r\n    get:\r\n      summary: \"Read All Supports for a Campaign\"\r\n      operationId: readAllSupportsByCampaign\r\n      parameters:\r\n        - $ref: '#/components/parameters/partner_id'\r\n        - $ref: '#/components/parameters/campaign_id'\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - microcredit\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Supports'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /microcredit/supports/{partner_id}/{campaign_id}/{_to}:\r\n    get:\r\n      summary: \"Read All Backer's Supports for a Campaign\"\r\n      operationId: readBackerSupportsByCampaign\r\n      parameters:\r\n        - $ref: '#/components/parameters/partner_id'\r\n        - $ref: '#/components/parameters/campaign_id'\r\n        - $ref: '#/components/parameters/_to'\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - microcredit\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Updated'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  # Paths: Content\r\n  /content:\r\n    get:\r\n      summary: \"Read Content\"\r\n      operationId: readContent\r\n      tags:\r\n        - content\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Contents'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n    post:\r\n      summary: \"Create a new Content\"\r\n      operationId: createContent\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - content\r\n      requestBody:\r\n        $ref: '#/components/requestBodies/ContentRequestBody'\r\n      responses:\r\n        '201':\r\n          $ref: '#/components/responses/Created'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '403':\r\n          $ref: '#/components/responses/Forbidden'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\n  /content/{content_id_name}:\r\n    get:\r\n      summary: \"Read Content By Id Or Name\"\r\n      operationId: readContentByIdOrName\r\n      parameters:\r\n        - $ref: '#/components/parameters/content_id_name'\r\n      tags:\r\n        - content\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Content'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n    put:\r\n      summary: \"Update Content\"\r\n      operationId: updateContent\r\n      parameters:\r\n        - $ref: '#/components/parameters/content_id_name'\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - content\r\n      requestBody:\r\n        $ref: '#/components/requestBodies/ContentRequestBody'\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/Updated'\r\n        '400':\r\n          $ref: '#/components/responses/Bad_Request'\r\n        '401':\r\n          $ref: '#/components/responses/Unauthorized'\r\n        '403':\r\n          $ref: '#/components/responses/Forbidden'\r\n        '422':\r\n          $ref: '#/components/responses/Unprocessable_Entity'\r\n\r\ncomponents:\r\n  parameters:\r\n    identifier:\r\n      in: path\r\n      name: identifier\r\n      schema:\r\n        type: string\r\n      required: true\r\n      description: \"Member's email or card\"\r\n    email:\r\n      in: path\r\n      name: email\r\n      schema:\r\n        type: string\r\n        format: email\r\n      required: true\r\n      description: \"Email for user's verification/restoration or Card linking\"\r\n    card:\r\n      in: path\r\n      name: card\r\n      schema:\r\n        type: string\r\n      required: true\r\n      description: \"Card for Email Linking\"\r\n    _to:\r\n      in: path\r\n      name: _to\r\n      schema:\r\n        type: string\r\n      required: true\r\n      description: \"Email/Card of Member\"\r\n    offset:\r\n      in: path\r\n      name: offset\r\n      schema:\r\n        type: string\r\n      required: true\r\n      description: \"Results per Page/Page Number/All or Active\"\r\n    partner_id:\r\n      in: path\r\n      name: partner_id\r\n      schema:\r\n        type: string\r\n        format: uuid\r\n      required: true\r\n      description: \"ID of the selected store\"\r\n    partner_id_slug:\r\n      in: path\r\n      name: partner_id_slug\r\n      schema:\r\n        type: string\r\n      required: true\r\n      description: \"ID or Slug of the selected store\"\r\n    offer_id:\r\n      in: path\r\n      name: offer_id\r\n      schema:\r\n        type: string\r\n        format: uuid\r\n      required: true\r\n      description: \"ID of the selected offer\"\r\n    offer_id_slug:\r\n      in: path\r\n      name: offer_id_slug\r\n      schema:\r\n        type: string\r\n      required: true\r\n      description: \"ID or Slug of the selected offer\"\r\n    post_id:\r\n      in: path\r\n      name: post_id\r\n      schema:\r\n        type: string\r\n        format: uuid\r\n      required: true\r\n      description: \"ID of the selected post\"\r\n    post_id_slug:\r\n      in: path\r\n      name: post_id_slug\r\n      schema:\r\n        type: string\r\n      required: true\r\n      description: \"ID or Slug of the selected post\"\r\n    event_id:\r\n      in: path\r\n      name: event_id\r\n      schema:\r\n        type: string\r\n        format: uuid\r\n      required: true\r\n      description: \"ID of the selected event\"\r\n    event_id_slug:\r\n      in: path\r\n      name: event_id_slug\r\n      schema:\r\n        type: string\r\n      required: true\r\n      description: \"ID or Slug of the selected post\"\r\n    campaign_id:\r\n      in: path\r\n      name: campaign_id\r\n      schema:\r\n        type: string\r\n        format: uuid\r\n      required: true\r\n      description: \"ID of the selected campaign\"\r\n    campaign_id_slug:\r\n      in: path\r\n      name: campaign_id_slug\r\n      schema:\r\n        type: string\r\n      required: true\r\n      description: \"ID or Slug of the selected campaign\"\r\n    support_id:\r\n      in: path\r\n      name: support_id\r\n      schema:\r\n        type: string\r\n        format: uuid\r\n      required: true\r\n      description: \"ID of the selected support\"\r\n    content_id_name:\r\n      in: path\r\n      name: content_id_name\r\n      schema:\r\n        type: string\r\n      required: true\r\n      description: \"ID or Name of the selected content\"\r\n\r\n  requestBodies:\r\n    # Auth\r\n    AuthenticationRequestBody:\r\n      description: \"\"\r\n      required: true\r\n      content:\r\n        application/json:\r\n          schema:\r\n            $ref: '#/components/schemas/AuthenticationDto'\r\n    RegisterRequestBody:\r\n      description: \"\"\r\n      required: true\r\n      content:\r\n        application/json:\r\n          schema:\r\n            $ref: '#/components/schemas/RegisterDto'\r\n    RegisterMemberRequestBody:\r\n      description: \"\"\r\n      required: true\r\n      content:\r\n        application/json:\r\n          schema:\r\n            $ref: '#/components/schemas/RegisterMemberDto'\r\n    RegisterpartnerRequestBody:\r\n      description: \"\"\r\n      required: true\r\n      content:\r\n        application/json:\r\n          schema:\r\n            $ref: '#/components/schemas/RegisterPartnerDto'\r\n    ChangePassInRequestBody:\r\n      description: \"\"\r\n      required: true\r\n      content:\r\n        application/json:\r\n          schema:\r\n            $ref: '#/components/schemas/ChangePassInDto'\r\n    CheckTokenRequestBody:\r\n      description: \"\"\r\n      required: true\r\n      content:\r\n        application/json:\r\n          schema:\r\n            $ref: '#/components/schemas/CheckTokenDto'\r\n    ChangePassOutRequestBody:\r\n      description: \"\"\r\n      required: true\r\n      content:\r\n        application/json:\r\n          schema:\r\n            $ref: '#/components/schemas/ChangePassOutDto'\r\n    EmailRequestBody:\r\n      description: \"\"\r\n      required: true\r\n      content:\r\n        application/json:\r\n          schema:\r\n            $ref: '#/components/schemas/EmailDto'\r\n    CardRequestBody:\r\n      description: \"\"\r\n      required: true\r\n      content:\r\n        application/json:\r\n          schema:\r\n            $ref: '#/components/schemas/CardDto'\r\n    # Profile \u0026 Partner\r\n    MemberRequestBody:\r\n      description: \"\"\r\n      required: true\r\n      content:\r\n        multipart/form-data:\r\n        # application/x-www-form-urlencoded: # application/json:\r\n          schema:\r\n            $ref: '#/components/schemas/MemberDto'\r\n    PartnerRequestBody:\r\n      description: \"\"\r\n      required: true\r\n      content:\r\n        multipart/form-data:\r\n        # application/x-www-form-urlencoded: # application/json:\r\n          schema:\r\n            $ref: '#/components/schemas/PartnerDto'\r\n\r\n    # Loyalty\r\n    LoyaltyEarnPointsRequestBody:\r\n      description: \"\"\r\n      required: true\r\n      content:\r\n        application/json:\r\n          schema:\r\n            $ref: '#/components/schemas/LoyaltyEarnPointsDto'\r\n\r\n    LoyaltyRedeemPointsRequestBody:\r\n      description: \"\"\r\n      required: true\r\n      content:\r\n        application/json:\r\n          schema:\r\n            $ref: '#/components/schemas/LoyaltyRedeemPointsDto'\r\n\r\n    LoyaltyRedeemOfferRequestBody:\r\n      description: \"\"\r\n      required: true\r\n      content:\r\n        application/json:\r\n          schema:\r\n            $ref: '#/components/schemas/LoyaltyRedeemOfferDto'\r\n\r\n    OfferRequestBody:\r\n      description: \"\"\r\n      required: true\r\n      content:\r\n        multipart/form-data: #application/json:\r\n          schema:\r\n            $ref: '#/components/schemas/OfferDto'\r\n\r\n    # Community\r\n    PostRequestBody:\r\n      description: \"\"\r\n      required: true\r\n      content:\r\n        multipart/form-data: #application/json:\r\n          schema:\r\n            $ref: '#/components/schemas/PostDto'\r\n\r\n    EventRequestBody:\r\n      description: \"\"\r\n      required: true\r\n      content:\r\n        multipart/form-data: #application/json:\r\n          schema:\r\n            $ref: '#/components/schemas/EventDto'\r\n\r\n    # Microfund\r\n    MicrocreditEarnRequestBody:\r\n      description: \"\"\r\n      required: true\r\n      content:\r\n        application/json:\r\n          schema:\r\n            $ref: '#/components/schemas/MicrocreditEarnTokensDto'\r\n\r\n    MicrocreditRedeemRequestBody:\r\n      description: \"\"\r\n      required: true\r\n      content:\r\n        application/json:\r\n          schema:\r\n            $ref: '#/components/schemas/MicrocreditRedeemTokensDto'\r\n\r\n    CampaignRequestBody:\r\n      description: \"\"\r\n      required: true\r\n      content:\r\n        multipart/form-data: #application/json:\r\n          schema:\r\n            $ref: '#/components/schemas/CampaignDto'\r\n\r\n    # Content\r\n    ContentRequestBody:\r\n      description: \"\"\r\n      required: true\r\n      content:\r\n        application/json:\r\n          schema:\r\n            $ref: '#/components/schemas/ContentDto'\r\n\r\n  responses:\r\n    # Auth\r\n    Authenticate:\r\n      description: Expected response to a valid request\r\n      content:\r\n        application/json:\r\n          schema:\r\n            type: object\r\n            properties:\r\n              user:\r\n                $ref: '#/components/schemas/User'\r\n              token:\r\n                $ref: '#/components/schemas/TokenData'\r\n    Verification_Required:\r\n      description: Expected response to a valid request\r\n      content:\r\n        application/json:\r\n          schema:\r\n            type: object\r\n            properties:\r\n              data:\r\n                type: object\r\n                properties:\r\n                  action:\r\n                    type: string\r\n                    enum: ['need_password_verification', 'need_email_verification']\r\n              code:\r\n                type: number\r\n    Registration_Status:\r\n      description: Expected response to a valid request\r\n      content:\r\n        application/json:\r\n          schema:\r\n            type: object\r\n            properties:\r\n              data:\r\n                type: object\r\n                properties:\r\n                  status:\r\n                    type: string\r\n                    enum: ['email_none', 'email_both', 'email_no_card', 'card_none', 'card_both', 'card_no_email']\r\n              code:\r\n                type: number\r\n    # Profile \u0026 Partner\r\n    Member:\r\n      description: Expected response to a valid request\r\n      content:\r\n        application/json:\r\n          schema:\r\n            type: object\r\n            properties:\r\n              data:\r\n                $ref: '#/components/schemas/Member'\r\n              code:\r\n                type: number\r\n                default: 200\r\n\r\n\r\n    Partner:\r\n      description: Expected response to a valid request\r\n      content:\r\n        application/json:\r\n          schema:\r\n            type: object\r\n            properties:\r\n              data:\r\n                $ref: \"#/components/schemas/Partner\"\r\n              code:\r\n                type: number\r\n                default: 200\r\n    Partners:\r\n      description: Expected response to a valid request\r\n      content:\r\n        application/json:\r\n          schema:\r\n            type: object\r\n            properties:\r\n              data:\r\n                $ref: \"#/components/schemas/Partners\"\r\n              code:\r\n                type: number\r\n                default: 200\r\n\r\n    # Loyalty - Offers\r\n    Offer:\r\n      description: Expected response to a valid request\r\n      content:\r\n        application/json:\r\n          schema:\r\n            type: object\r\n            properties:\r\n              data:\r\n                $ref: \"#/components/schemas/Offer\"\r\n              code:\r\n                type: number\r\n                default: 200\r\n          example:\r\n            data:\r\n              - partner_id: \"3fa85f64-5717-4562-b3fc-2c963f66afa6\"\r\n                partner_name: \"partner 1\"\r\n                partner_imageURL: \"www.images/assets/partner1.png\"\r\n                offer_id: \"45454564-5rte7-4ert62-b3fc-c9rtret3f6r9\"\r\n                createdAt: \"2019-09-10\"\r\n                cost: 1000\r\n                description: \"Get 10% discount\"\r\n                expiresAt: \"2019-11-15\"\r\n    Offers:\r\n      description: Expected response to a valid request\r\n      content:\r\n        application/json:\r\n          schema:\r\n            type: object\r\n            properties:\r\n              data:\r\n                $ref: \"#/components/schemas/Offers\"\r\n              code:\r\n                type: number\r\n                default: 200\r\n          example:\r\n            data:\r\n              - partner_id: \"3fa85f64-5717-4562-b3fc-2c963f66afa6\"\r\n                partner_name: \"partner 1\"\r\n                partner_imageURL: \"www.images/assets/partner1.png\"\r\n                offer_id: \"45454564-5rte7-4ert62-b3fc-c9rtret3f6r9\"\r\n                createdAt: \"2019-09-10\"\r\n                cost: 1000\r\n                description: \"Get 10% discount\"\r\n                expiresAt: \"2019-11-15\"\r\n              - partner_id: \"67a85f64-5r717-4562-b3fc-2c963f66afa6\"\r\n                partner_name: \"partner 2\"\r\n                partner_imageURL: \"www.images/assets/partner2.png\"\r\n                offer_id: \"55454564-5rre7-4ert62-b3fc-c9rtret3f6r9\"\r\n                createdAt: \"2019-09-15\"\r\n                cost: 2000\r\n                description: \"1+1 Burger\"\r\n                expiresAt: \"2019-11-10\"\r\n            code: 200\r\n\r\n    Balance:\r\n      description: Expected response to a valid request\r\n      content:\r\n        application/json:\r\n          schema:\r\n            type: object\r\n            properties:\r\n              data:\r\n                $ref: \"#/components/schemas/Balance\"\r\n              code:\r\n                type: number\r\n                default: 200\r\n          example:\r\n            address: '0x2191eF87E392377ec08E7c08Eb105Ef5448eCED5'\r\n            points: 50\r\n    Activity:\r\n      description: Expected response to a valid request\r\n      content:\r\n        application/json:\r\n          schema:\r\n            type: object\r\n            properties:\r\n              data:\r\n                $ref: \"#/components/schemas/Activity\"\r\n              code:\r\n                type: number\r\n                default: 200\r\n          example:\r\n            amount: 500\r\n            stores: 1\r\n            transactions: 20\r\n            rate: 2\r\n            badge: 'Helper'\r\n\r\n    LoyaltyTransactions:\r\n      description: Expected response to a valid request\r\n      content:\r\n        application/json:\r\n          schema:\r\n            type: object\r\n            properties:\r\n              data:\r\n                $ref: \"#/components/schemas/LoyaltyTransactions\"\r\n              code:\r\n                type: number\r\n                default: 200\r\n\r\n    # Community\r\n    Post:\r\n      description: Expected response to a valid request\r\n      content:\r\n        application/json:\r\n          schema:\r\n            type: object\r\n            properties:\r\n              data:\r\n                $ref: \"#/components/schemas/Post\"\r\n              code:\r\n                type: number\r\n                default: 200\r\n          example:\r\n            data:\r\n              partner_id: \"3fa85f64-5717-4562-b3fc-2c963f66afa6\"\r\n              partner_name: \"partner 1\"\r\n              partner_slug: \"partner_1\"\r\n              partner_imageURL: \"www.images/assets/profile/partner1.png\"\r\n              post_id: \"45454564-5rte7-4ert62-b3fc-c9rtret3f6r9\"\r\n              post_slug: \"45454564-5rte7-4ert62-b3fc-c9rtret3f6r9\"\r\n              post_imageURL: \"www.images/assets/items/partner1_post1.png\"\r\n              title: \"And now it begins\"\r\n              subtitle: \"Some info\"\r\n              content: \"This is a public post\"\r\n              createdAt: \"2019-09-10\"\r\n            code: 200\r\n    Posts:\r\n      description: Expected response to a valid request\r\n      content:\r\n        application/json:\r\n          schema:\r\n            type: object\r\n            properties:\r\n              data:\r\n                $ref: \"#/components/schemas/Posts\"\r\n              code:\r\n                type: number\r\n                default: 200\r\n\r\n    Event:\r\n      description: Expected response to a valid request\r\n      content:\r\n        application/json:\r\n          schema:\r\n            type: object\r\n            properties:\r\n              data:\r\n                $ref: \"#/components/schemas/Event\"\r\n              code:\r\n                type: number\r\n                default: 200\r\n          example:\r\n            data:\r\n              partner_id: \"3fa85f64-5717-4562-b3fc-2c963f66afa6\"\r\n              partner_name: \"partner 1\"\r\n              partner_slug: \"partner_1\"\r\n              partner_imageURL: \"www.images/assets/profile/partner1.png\"\r\n              event_id: \"45454564-5rte7-4ert62-b3fc-c9rtret3f6r9\"\r\n              event_slug: \"come_to_party\"\r\n              event_imageURL: \"www.images/assets/items/partner1_event_1.png\"\r\n              title: \"Come to party\"\r\n              subtitle: \"Some info\"\r\n              description: \"This is a call to our community\"\r\n              location: \"My Street, My City\"\r\n              dateTime: 1583229710000\r\n              createdAt: \"2019-09-10\"\r\n            code: 200\r\n    Events:\r\n      description: Expected response to a valid request\r\n      content:\r\n        application/json:\r\n          schema:\r\n            type: object\r\n            properties:\r\n              data:\r\n                $ref: \"#/components/schemas/Events\"\r\n              code:\r\n                type: number\r\n                default: 200\r\n\r\n    PostsEvents:\r\n      description: Expected response to a valid request\r\n      content:\r\n        application/json:\r\n          schema:\r\n            type: object\r\n            properties:\r\n              data:\r\n                $ref: \"#/components/schemas/PostsEvents\"\r\n              code:\r\n                type: number\r\n                default: 200\r\n\r\n    # Microfund - Campaigns\r\n    Campaign:\r\n      description: Expected response to a valid request\r\n      content:\r\n        application/json:\r\n          schema:\r\n            type: object\r\n            properties:\r\n              data:\r\n                $ref: \"#/components/schemas/Campaign\"\r\n              code:\r\n                type: number\r\n                default: 200\r\n    Campaigns:\r\n      description: Expected response to a valid request\r\n      content:\r\n        application/json:\r\n          schema:\r\n            type: object\r\n            properties:\r\n              data:\r\n                $ref: \"#/components/schemas/Campaigns\"\r\n              code:\r\n                type: number\r\n                default: 200\r\n\r\n    Supports:\r\n      description: Expected response to a valid request\r\n      content:\r\n        application/json:\r\n          schema:\r\n            type: object\r\n            properties:\r\n              data:\r\n                $ref: \"#/components/schemas/Supports\"\r\n              code:\r\n                type: number\r\n                default: 200\r\n    Payment:\r\n      description: Expected response to a valid request\r\n      content:\r\n        application/json:\r\n          schema:\r\n            type: object\r\n            properties:\r\n              data:\r\n                $ref: \"#/components/schemas/Payment\"\r\n              code:\r\n                type: number\r\n                default: 200\r\n\r\n    MicrocreditTransactions:\r\n      description: Expected response to a valid request\r\n      content:\r\n        application/json:\r\n          schema:\r\n            type: object\r\n            properties:\r\n              data:\r\n                $ref: \"#/components/schemas/MicrocreditTransactions\"\r\n              code:\r\n                type: number\r\n                default: 200\r\n\r\n    # Content\r\n    Content:\r\n      description: Expected response to a valid request\r\n      content:\r\n        application/json:\r\n          schema:\r\n            type: object\r\n            properties:\r\n              data:\r\n                $ref: \"#/components/schemas/Content\"\r\n              code:\r\n                type: number\r\n                default: 200\r\n    Contents:\r\n      description: Expected response to a valid request\r\n      content:\r\n        application/json:\r\n          schema:\r\n            type: object\r\n            properties:\r\n              data:\r\n                $ref: \"#/components/schemas/Contents\"\r\n              code:\r\n                type: number\r\n                default: 200\r\n\r\n    # Create, Updated, Email Send, Error\r\n    Created:\r\n      description: Created (201)\r\n      content:\r\n        application/json:\r\n          schema:\r\n            $ref: \"#/components/schemas/Success\"\r\n          example:\r\n            code: 201\r\n            message: \"Campaign successfully created!\"\r\n    Updated:\r\n      description: Updated (200)\r\n      content:\r\n        application/json:\r\n          schema:\r\n            $ref: \"#/components/schemas/Success\"\r\n          example:\r\n            code: 200\r\n            message: \"User's Profile successfully updated!\"\r\n    Email_Sent:\r\n      description: Email Sent (200)\r\n      content:\r\n        application/json:\r\n          schema:\r\n            $ref: \"#/components/schemas/Success\"\r\n          example:\r\n            code: 200\r\n            message: \"An email has been sent. Follow the link to verify your address!\"\r\n\r\n    Bad_Request:\r\n      description: Bad Request (400)\r\n      content:\r\n        application/json:\r\n          schema:\r\n            $ref: \"#/components/schemas/Error\"\r\n          example:\r\n            code: 400\r\n            message: \"Something wrong happes!\"\r\n    Unauthorized:\r\n      description: Unauthorized (401)\r\n      content:\r\n        application/json:\r\n          schema:\r\n            $ref: \"#/components/schemas/Error\"\r\n          example:\r\n            code: 401\r\n            message: \"Something wrong happes!\"\r\n    Forbidden:\r\n      description: Forbidden (403)\r\n      content:\r\n        application/json:\r\n          schema:\r\n            $ref: \"#/components/schemas/Error\"\r\n          example:\r\n            code: 403\r\n            message: \"Something wrong happes!\"\r\n    Not_Found:\r\n      description: \"Not Found (404) -\r\n        Auth (/auth) ['Wrong Credentials', 'Wrong Token', 'User Exists', 'User has Email', 'User has Card']\r\n        Offer (/loaylty/offers/:partner_id/:offer_id) ['Offer does not Exist']\r\n        Post (/loaylty/offers/:partner_id/:post_id) ['Post does not Exist']\r\n        Event (/loaylty/offers/:partner_id/:event_id) ['Event does not Exist']\r\n        Loyalty (/loyalty) ['Uses does not Exist', 'Offer does not Exist', 'Not enough Tokens', 'Expired Offer']\"\r\n      content:\r\n        application/json:\r\n          schema:\r\n            $ref: \"#/components/schemas/Error\"\r\n          example:\r\n            code: 404\r\n            message: \"Something wrong happes!\"\r\n    Unprocessable_Entity:\r\n      description: \"422 Unprocessable Entity - [DB Error, Blockchain Error, Email Error]\"\r\n      content:\r\n        application/json:\r\n          schema:\r\n            $ref: \"#/components/schemas/Error\"\r\n          example:\r\n            code: 422\r\n            message: \"Something wrong happes!\"\r\n\r\n  schemas:\r\n    # Request - Auth\r\n    AuthenticationDto:\r\n      type: object\r\n      properties:\r\n        email:\r\n          type: string\r\n          format: email\r\n        password:\r\n          type: string\r\n          format: password\r\n      required:\r\n        - email\r\n        - password\r\n    RegisterDto:\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n        email:\r\n          type: string\r\n          format: email\r\n        password:\r\n          type: string\r\n          format: password\r\n      required:\r\n        - name\r\n        - email\r\n        - password\r\n    RegisterMemberDto:\r\n      type: object\r\n      properties:\r\n        card:\r\n          type: string\r\n        email:\r\n          type: string\r\n          format: email\r\n      minProperties: 1\r\n      maxProperties: 2\r\n    RegisterpartnerDto:\r\n      type: object\r\n      properties:\r\n        email:\r\n          type: string\r\n          format: email\r\n        name:\r\n          type: string\r\n        subtitle:\r\n          type: string\r\n        description:\r\n          type: string\r\n        imageURL:\r\n          type: string\r\n          format: binary\r\n        sector:\r\n          type: string\r\n          enum: [None, B2B Services \u0026 Other Goods and Services, Durables, Durables (Technology), Education, Food, Hotels, cafes and restaurants, Recreation and Culture]\r\n        phone:\r\n          type: number\r\n          format: int64\r\n        websiteURL:\r\n          type: string\r\n          format: uri\r\n        street:\r\n          type: string\r\n        postCode:\r\n          type: number\r\n          format: int64\r\n        city:\r\n          type: string\r\n        lat:\r\n          type: number\r\n          format: float\r\n        long:\r\n          type: number\r\n          format: float\r\n        nationalBank:\r\n          type: string\r\n        pireausBank:\r\n          type: string\r\n        eurobank:\r\n          type: string\r\n        alphaBank:\r\n          type: string\r\n        rtnerypal:\r\n          type: string\r\n        timetable:\r\n          type: string\r\n    ChangePassInDto:\r\n      type: object\r\n      properties:\r\n        oldPassword:\r\n          type: string\r\n          format: password\r\n        newPassword:\r\n          type: string\r\n          format: password\r\n      required:\r\n        - oldPassword\r\n        - newPassword\r\n    CheckTokenDto:\r\n      type: object\r\n      properties:\r\n        token:\r\n          type: string\r\n          format: uuid\r\n      required:\r\n        - token\r\n    ChangePassOutDto:\r\n      type: object\r\n      properties:\r\n        token:\r\n          type: string\r\n          format: uuid\r\n        newPassword:\r\n          type: string\r\n          format: password\r\n        verPassword:\r\n          type: string\r\n          format: password\r\n      required:\r\n        - token\r\n        - newPassword\r\n        - verPassword\r\n    EmailDto:\r\n      type: object\r\n      properties:\r\n        email:\r\n          type: string\r\n          format: email\r\n    CardDto:\r\n      type: object\r\n      properties:\r\n        card:\r\n          type: string\r\n\r\n    # Request - Profile \u0026 Partner\r\n    MemberDto:\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n        imageURL:\r\n          type: string\r\n          format: binary\r\n    PartnerDto:\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n        description:\r\n          type: string\r\n        imageURL:\r\n          type: string\r\n          format: binary\r\n        sector:\r\n          type: string\r\n          enum: [None, B2B Services \u0026 Other Goods and Services, Durables, Durables (Technology), Education, Food, Hotels, cafes and restaurants, Recreation and Culture]\r\n        phone:\r\n          type: number\r\n          format: int64\r\n        websiteURL:\r\n          type: string\r\n          format: uri\r\n        street:\r\n          type: string\r\n        postCode:\r\n          type: number\r\n          format: int64\r\n        city:\r\n          type: string\r\n        lat:\r\n          type: number\r\n          format: float\r\n        long:\r\n          type: number\r\n          format: float\r\n        nationalBank:\r\n          type: string\r\n        pireausBank:\r\n          type: string\r\n        eurobank:\r\n          type: string\r\n        alphaBank:\r\n          type: string\r\n        paypal:\r\n          type: string\r\n        timetable:\r\n          type: string\r\n      required:\r\n        - name\r\n        - imageURL\r\n        - sector\r\n        - street\r\n        - postCode\r\n        - city\r\n        - phone\r\n\r\n    # Request - Community\r\n    PostDto:\r\n          type: object\r\n          properties:\r\n            imageURL:\r\n              type: string\r\n              format: binary\r\n            title:\r\n              type: string\r\n            subtitle:\r\n              type: string\r\n            content:\r\n              type: string\r\n            access:\r\n              type: string\r\n              enum: [public, private, partners]\r\n\r\n    EventDto:\r\n          type: object\r\n          properties:\r\n            imageURL:\r\n              type: string\r\n              format: binary\r\n            title:\r\n              type: string\r\n            subtitle:\r\n              type: string\r\n            description:\r\n              type: string\r\n            access:\r\n              type: string\r\n              enum: [public, private, partners]\r\n            dateTime:\r\n              type: number\r\n            location:\r\n              type: string\r\n\r\n    # Request - Loyalty\r\n    OfferDto:\r\n      type: object\r\n      properties:\r\n        imageURL:\r\n          type: string\r\n          format: binary\r\n        title:\r\n          type: string\r\n        subtitle:\r\n          type: string\r\n        description:\r\n          type: string\r\n        cost:\r\n          type: number\r\n        expiresAt:\r\n          type: number\r\n\r\n    LoyaltyEarnPointsDto:\r\n      type: object\r\n      properties:\r\n        password:\r\n          type: string\r\n          format: password\r\n        _amount:\r\n          type: number\r\n\r\n    LoyaltyRedeemPointsDto:\r\n      type: object\r\n      properties:\r\n        password:\r\n          type: string\r\n          format: password\r\n        _points:\r\n          type: number\r\n\r\n    LoyaltyRedeemOfferDto:\r\n      type: object\r\n      properties:\r\n        password:\r\n          type: string\r\n          format: password\r\n        _points:\r\n          type: number\r\n        quantity:\r\n          type: number\r\n\r\n    # Request - Microfund\r\n    CampaignDto:\r\n      type: object\r\n      properties:\r\n        imageURL:\r\n          type: string\r\n          format: binary\r\n        title:\r\n          type: string\r\n        subtitle:\r\n          type: string\r\n        terms:\r\n          type: string\r\n        access:\r\n          type: string\r\n          enum: [public, private, partners]\r\n        description:\r\n          type: string\r\n        category:\r\n          type: string\r\n        quantitative:\r\n          type: boolean\r\n        stepAmount:\r\n          type: number\r\n        minAllowed:\r\n          type: number\r\n        maxAllowed:\r\n          type: number\r\n        maxAmount:\r\n          type: number\r\n        redeemStarts:\r\n          type: number\r\n        redeemEnds:\r\n          type: number\r\n        startsAt:\r\n          type: number\r\n        expiresAt:\r\n          type: number\r\n\r\n    MicrocreditEarnTokensDto:\r\n      type: object\r\n      properties:\r\n        _amount:\r\n          type: string\r\n          format: password\r\n        method:\r\n          type: string\r\n          enum: [nationalBank, pireausBank, eurobank, alphaBank, paypal, store]\r\n        paid:\r\n          type: boolean\r\n\r\n    MicrocreditRedeemTokensDto:\r\n      type: object\r\n      properties:\r\n        _tokens:\r\n          type: number\r\n\r\n    # Request - Content\r\n    ContentDto:\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n        el_title:\r\n          type: string\r\n        en_title:\r\n          type: string\r\n        el_content:\r\n          type: string\r\n        en_content:\r\n          type: string\r\n\r\n    # Response - Auth\r\n    TokenData:\r\n      type: object\r\n      properties:\r\n        token:\r\n          type: string\r\n          format: uuid\r\n        expiresIn:\r\n          type: string\r\n          format: date\r\n    User:\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: string\r\n          format: uuid\r\n        email:\r\n          type: string\r\n          format: email\r\n        name:\r\n          type: string\r\n        imageURL:\r\n          type: string\r\n          format: uri\r\n        access:\r\n          type: string\r\n          enum: [member, partner, admin]\r\n        email_verified:\r\n          type: boolean\r\n        pass_verified:\r\n          type: boolean\r\n\r\n    # Response - Profile \u0026 Partner\r\n    Member:\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: string\r\n          format: uuid\r\n        name:\r\n          type: string\r\n        imageURL:\r\n          type: string\r\n          format: uri\r\n        email:\r\n          type: string\r\n          format: email\r\n        createdAt:\r\n          type: string\r\n          format: date\r\n    Partner:\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: string\r\n          format: uuid\r\n        name:\r\n          type: string\r\n        imageURL:\r\n          type: string\r\n          format: uri\r\n        subtitle:\r\n          type: string\r\n        sector:\r\n          type: string\r\n          enum: [None, B2B Services \u0026 Other Goods and Services, Durables, Durables (Technology), Education, Food, Hotels, cafes and restaurants, Recreation and Culture]\r\n        email:\r\n          type: string\r\n          format: email\r\n        createdAt:\r\n          type: string\r\n          format: date\r\n        description:\r\n          type: string\r\n        timetable:\r\n          type: string\r\n        payments:\r\n          type: object\r\n          properties:\r\n            nationalBank:\r\n              type: number\r\n            pireausBank:\r\n              type: string\r\n            eurobank:\r\n              type: string\r\n            alphaBank:\r\n              type: string\r\n            paypal:\r\n              type: string\r\n        contact:\r\n          type: object\r\n          properties:\r\n            phone:\r\n              type: number\r\n              format: int64\r\n            websiteURL:\r\n              type: string\r\n              format: uri\r\n        address:\r\n          type: object\r\n          properties:\r\n            street:\r\n              type: string\r\n            postCode:\r\n              type: string\r\n            city:\r\n              type: string\r\n    Partners:\r\n      type: array\r\n      items:\r\n        $ref: \"#/components/schemas/Partner\"\r\n\r\n    # Response - Loyalty\r\n    Balance:\r\n      type: object\r\n      properties:\r\n        address:\r\n          type: string\r\n          format: address\r\n        points:\r\n          type: number\r\n\r\n    Activity:\r\n      type: object\r\n      properties:\r\n        amount:\r\n          type: string\r\n          format: address\r\n        stores:\r\n          type: number\r\n        transactions:\r\n          type: boolean\r\n        rate:\r\n          type: number\r\n        badge:\r\n          type: string\r\n          enum: [Supporter, Helper, One of Us]\r\n\r\n    LoyaltyTransaction:\r\n      type: object\r\n      properties:\r\n        _id:\r\n          type: string\r\n          format: uuid\r\n        type:\r\n          type: string\r\n          enum: [EarnPoints, RedeemPoints]\r\n        partner_id:\r\n          type: string\r\n          format: uuid\r\n          member_id:\r\n          type: string\r\n          format: uuid\r\n        data:\r\n          type: object\r\n          properties:\r\n            partner_name:\r\n              type: string\r\n            partner_email:\r\n              type: string\r\n              format: email\r\n            points:\r\n              type: number\r\n            amount:\r\n              type: number\r\n            offer_id:\r\n              type: string\r\n              format: uuid\r\n            offer_title:\r\n              type: string\r\n        tx:\r\n          type: string\r\n        createdAt:\r\n          type: string\r\n          format: date\r\n    LoyaltyTransactions:\r\n      type: array\r\n      items:\r\n        $ref: '#/components/schemas/LoyaltyTransaction'\r\n\r\n    Offer:\r\n      type: object\r\n      properties:\r\n        partner_id:\r\n          type: string\r\n          format: uuid\r\n        partner_name:\r\n          type: string\r\n        partner_slug:\r\n          type: string\r\n        partner_imageURL:\r\n          type: string\r\n          format: uri\r\n        offer_id:\r\n          type: string\r\n          format: uuid\r\n        title:\r\n          type: string\r\n        subtitle:\r\n          type: string\r\n        offer_slug:\r\n          type: string\r\n        imageURL:\r\n          type: string\r\n          format: uri\r\n        description:\r\n          type: string\r\n        cost:\r\n          type: number\r\n        expiresAt:\r\n          type: string\r\n          format: date\r\n        createdAt:\r\n          type: string\r\n          format: date\r\n    Offers:\r\n      type: array\r\n      items:\r\n        $ref: '#/components/schemas/Offer'\r\n\r\n    # Response - Community Post \u0026 Events\r\n    Post:\r\n      type: object\r\n      properties:\r\n        partner_id:\r\n          type: string\r\n          format: uuid\r\n        partner_name:\r\n          type: string\r\n        partner_slug:\r\n          type: string\r\n        partner_imageURL:\r\n          type: string\r\n          format: uri\r\n        post_id:\r\n          type: string\r\n          format: uuid\r\n        post_slug:\r\n          type: string\r\n          format: uri\r\n        post_imageURL:\r\n          type: string\r\n          format: uri\r\n        title:\r\n          type: string\r\n        subtitle:\r\n          type: string\r\n        content:\r\n          type: string\r\n        access:\r\n          type: string\r\n          enum: [public, private, partners]\r\n        createdAt:\r\n          type: string\r\n          format: date\r\n    Posts:\r\n      type: array\r\n      items:\r\n        $ref: '#/components/schemas/Post'\r\n\r\n    Event:\r\n      type: object\r\n      properties:\r\n        partner_id:\r\n          type: string\r\n          format: uuid\r\n        partner_name:\r\n          type: string\r\n        partner_slug:\r\n          type: string\r\n        partner_imageURL:\r\n          type: string\r\n          format: uri\r\n\r\n        event_id:\r\n          type: string\r\n          format: uuid\r\n        event_slug:\r\n          type: string\r\n          format: uri\r\n        event_imageURL:\r\n          type: string\r\n          format: uri\r\n        title:\r\n          type: string\r\n        subtitle:\r\n          type: string\r\n        content:\r\n          type: string\r\n        access:\r\n          type: string\r\n          enum: [public, private, partners]\r\n        dateTime:\r\n          type: number\r\n        location:\r\n          type: string\r\n        createdAt:\r\n          type: string\r\n          format: date\r\n    Events:\r\n      type: array\r\n      items:\r\n        $ref: '#/components/schemas/Event'\r\n\r\n    PostEvent:\r\n      type: object\r\n      properties:\r\n        partner_id:\r\n          type: string\r\n          format: uuid\r\n        partner_name:\r\n          type: string\r\n        partner_slug:\r\n          type: string\r\n        partner_imageURL:\r\n          type: string\r\n          format: uri\r\n\r\n        post_event_id:\r\n          type: string\r\n          format: uuid\r\n        post_event_slug:\r\n          type: string\r\n          format: uri\r\n        post_event_imageURL:\r\n          type: string\r\n          format: uri\r\n        type:\r\n          type: string\r\n          enum: [post, event]\r\n        title:\r\n          type: string\r\n        subtitle:\r\n          type: string\r\n        content:\r\n          type: string\r\n        access:\r\n          type: string\r\n          enum: [public, private, partners]\r\n        dateTime:\r\n          type: number\r\n        location:\r\n          type: string\r\n        createdAt:\r\n          type: string\r\n          format: date\r\n    PostsEvents:\r\n      type: array\r\n      items:\r\n        $ref: '#/components/schemas/PostEvent'\r\n\r\n    # Response - Microfund Campaigns\r\n    Campaign:\r\n      type: object\r\n      properties:\r\n        partner_id:\r\n          type: string\r\n          format: uuid\r\n        partner_name:\r\n          type: string\r\n        partner_slug:\r\n          type: string\r\n        partner_imageURL:\r\n          type: string\r\n          format: uri\r\n        partner_payments:\r\n          type: object\r\n          properties:\r\n            nationalBank:\r\n              type: string\r\n            pireausBank:\r\n              type: string\r\n            eurobank:\r\n              type: string\r\n            alphaBank:\r\n              type: string\r\n            paypal:\r\n              type: string\r\n        campaign_id:\r\n          type: string\r\n          format: uuid\r\n        campaign_slug:\r\n          type: string\r\n        campaign_imageURL:\r\n          type: string\r\n          format: uri\r\n        title:\r\n          type: string\r\n        subtitle:\r\n          type: string\r\n        terms:\r\n          type: string\r\n        description:\r\n          type: string\r\n        category:\r\n          type: string\r\n        access:\r\n          type: string\r\n          enum: [public, private, partners]\r\n        quantitative:\r\n          type: boolean\r\n        stepAmount:\r\n          type: number\r\n        minAllowed:\r\n          type: number\r\n        maxAllowed:\r\n          type: number\r\n        maxAmount:\r\n          type: number\r\n        redeemStarts:\r\n          type: number\r\n          format: Date\r\n        redeemEnds:\r\n          type: number\r\n          format: Date\r\n        startsAt:\r\n          type: number\r\n          format: Date\r\n        expiresAt:\r\n          type: number\r\n          format: Date\r\n        status:\r\n          type: string\r\n          enum: [draft, published]\r\n        confirmedTokens:\r\n          type: object\r\n          properties:\r\n            initialTokens:\r\n              type: number\r\n            redeemedTokens:\r\n              type: number\r\n        orderedTokens:\r\n          type: object\r\n          properties:\r\n            initialTokens:\r\n              type: number\r\n            redeemedTokens:\r\n              type: number\r\n        createdAt:\r\n          type: string\r\n          format: Date\r\n    Campaigns:\r\n      type: array\r\n      items:\r\n        $ref: '#/components/schemas/Campaign'\r\n\r\n    Support:\r\n      type: object\r\n      properties:\r\n        partner_id:\r\n          type: string\r\n          format: uuid\r\n        partner_payments:\r\n          type: object\r\n          properties:\r\n            nationalBank:\r\n              type: string\r\n            pireausBank:\r\n              type: string\r\n            eurobank:\r\n              type: string\r\n            alphaBank:\r\n              type: string\r\n            paypal:\r\n              type: string\r\n        campaign_id:\r\n          type: string\r\n          format: uuid\r\n        support_id:\r\n          type: string\r\n          format: uuid\r\n        backer_id:\r\n          type: string\r\n          format: uuid\r\n        payment_id:\r\n          type: string\r\n          format: uuid\r\n        initialTokens:\r\n          type: number\r\n        redeemedTokens:\r\n          type: number\r\n        method:\r\n          type: string\r\n          enum: [nationalBank, pireausBank, eurobank, alphaBank, paypal]\r\n        status:\r\n          type: string\r\n          enum: [order, confirmation]\r\n    Supports:\r\n      type: array\r\n      items:\r\n        $ref: '#/components/schemas/Support'\r\n\r\n    Payment:\r\n      type: object\r\n      properties:\r\n        support_id:\r\n          type: string\r\n          format: uuid\r\n        method:\r\n          type: string\r\n          enum: [store, nationalBank, pireausBank, eurobank, alphaBank, paypal]\r\n        status:\r\n          type: string\r\n          enum: [order, confirmation]\r\n        payment_id:\r\n          type: string\r\n          format: uuid\r\n        how:\r\n          type: string\r\n\r\n    MicrocreditTransaction:\r\n      type: object\r\n      properties:\r\n        _id:\r\n          type: string\r\n          format: uuid\r\n        type:\r\n          type: string\r\n          enum: [PromiseFund, ReceiveFund, RevertFund, SpendFund]\r\n        partner_id:\r\n          type: string\r\n          format: uuid\r\n        member_id:\r\n          type: string\r\n          format: uuid\r\n        data:\r\n          type: object\r\n          properties:\r\n              campaign_id:\r\n                type: string\r\n                format: uuid\r\n              campaign_title:\r\n                type: string\r\n              address:\r\n                type: string\r\n                format: address\r\n              support_id:\r\n                type: string\r\n                format: uuid\r\n              contractIndex:\r\n                type: number\r\n              tokens:\r\n                type: number\r\n        tx:\r\n          type: string\r\n        createdAt:\r\n          type: string\r\n          format: date\r\n    MicrocreditTransactions:\r\n      type: array\r\n      items:\r\n        $ref: '#/components/schemas/MicrocreditTransaction'\r\n\r\n    # Response - Content\r\n    Content:\r\n      type: object\r\n      properties:\r\n        _id:\r\n          type: string\r\n          format: uuid\r\n        name:\r\n          type: string\r\n        el_title:\r\n          type: string\r\n        en_title:\r\n          type: string\r\n        el_content:\r\n          type: string\r\n        en_content:\r\n          type: string\r\n    Contents:\r\n      type: array\r\n      items:\r\n        $ref: '#/components/schemas/Content'\r\n\r\n  # Response - Typical Responses (Success, Error)\r\n    Success:\r\n      type: object\r\n      properties:\r\n        code:\r\n          type: integer\r\n          format: int32\r\n        message:\r\n          type: string\r\n\r\n    Error:\r\n      type: object\r\n      properties:\r\n        code:\r\n          type: integer\r\n          format: int32\r\n        message:\r\n          type: string\r\n\r\n  securitySchemes:\r\n    bearerAuth:            # arbitrary name for the security scheme\r\n      type: http\r\n      scheme: bearer\r\n      bearerFormat: JWT    # optional, arbitrary value for documentation purposes\r\n",
			"canonicalURL": "/github.com/synergatika/synergy-api@c970dfe123170fbec199674655f6ead9d820dbf2/-/blob/definition/API.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/synergatika/synergy-api/blob/c970dfe123170fbec199674655f6ead9d820dbf2/definition/API.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"RegisterpartnerRequestBody\": parse content: application/json: schema: at 1:5534: parse schema: resolve \"#/components/schemas/RegisterPartnerDto\": find schema: resolve: can't find value for \"components/schemas/RegisterPartnerDto\""
}