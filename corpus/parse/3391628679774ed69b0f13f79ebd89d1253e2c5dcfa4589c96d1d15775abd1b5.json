{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "amazonaws.com-sqs-2012-11-05-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/amazonaws.com-sqs-2012-11-05-swagger.yaml",
			"byteSize": 206561,
			"content": "openapi: 3.0.0\ninfo:\n  version: 2012-11-05\n  x-release: v4\n  title: Amazon Simple Queue Service\n  description: <p>Welcome to the <i>Amazon Simple Queue Service API Reference</i>.</p>\n    <p>Amazon Simple Queue Service (Amazon SQS) is a reliable, highly-scalable\n    hosted queue for storing messages as they travel between applications or\n    microservices. Amazon SQS moves data between distributed application\n    components and helps you decouple these components.</p> <p>You can use <a\n    href=\"http://aws.amazon.com/tools/#sdk\">AWS SDKs</a> to access Amazon SQS\n    using your favorite programming language. The SDKs perform tasks such as the\n    following automatically:</p> <ul> <li> <p>Cryptographically sign your\n    service requests</p> </li> <li> <p>Retry requests</p> </li> <li> <p>Handle\n    error responses</p> </li> </ul> <p> <b>Additional Information</b> </p> <ul>\n    <li> <p> <a href=\"http://aws.amazon.com/sqs/\">Amazon SQS Product Page</a>\n    </p> </li> <li> <p> <i>Amazon Simple Queue Service Developer Guide</i> </p>\n    <ul> <li> <p> <a\n    href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-making-api-requests.html\">Making\n    API Requests</a> </p> </li> <li> <p> <a\n    href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-message-attributes.html\">Amazon\n    SQS Message Attributes</a> </p> </li> <li> <p> <a\n    href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html\">Amazon\n    SQS Dead-Letter Queues</a> </p> </li> </ul> </li> <li> <p> <a\n    href=\"http://docs.aws.amazon.com/cli/latest/reference/sqs/index.html\">Amazon\n    SQS in the <i>AWS CLI Command Reference</i> </a> </p> </li> <li> <p>\n    <i>Amazon Web Services General Reference</i> </p> <ul> <li> <p> <a\n    href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#sqs_region\">Regions\n    and Endpoints</a> </p> </li> </ul> </li> </ul>\n  x-logo:\n    url: https://twitter.com/awscloud/profile_image?size=original\n    backgroundColor: \"#FFFFFF\"\n  termsOfService: https://aws.amazon.com/service-terms/\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: https://github.com/mermade/aws2openapi\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: http://www.apache.org/licenses/\n  x-providerName: amazonaws.com\n  x-serviceName: sqs\n  x-origin:\n    - contentType: application/json\n      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/sqs-2012-11-05.normal.json\n      converter:\n        url: https://github.com/mermade/aws2openapi\n        version: 1.0.0\n      x-apisguru-direct: true\n  x-apiClientRegistration:\n    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: https://docs.aws.amazon.com/sqs/\nx-hasEquivalentPaths: true\nsecurity:\n  - hmac: []\npaths:\n  \"/{AccountNumber}/{QueueName}/#Action=AddPermission\":\n    get:\n      x-aws-operation-name: AddPermission\n      operationId: GET AddPermission\n      description: <p>Adds a permission to a queue for a specific <a\n        href=\"https://docs.aws.amazon.com/general/latest/gr/glos-chap.html#P\">principal</a>.\n        This allows sharing access to the queue.</p> <p>When you create a queue,\n        you have full control access rights for the queue. Only you, the owner\n        of the queue, can grant or deny permissions to the queue. For more\n        information about these permissions, see <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-writing-an-sqs-policy.html#write-messages-to-shared-queue\">Allow\n        Developers to Write Messages to a Shared Queue</a> in the <i>Amazon\n        Simple Queue Service Developer Guide</i>.</p> <note> <ul> <li> <p>\n        <code>AddPermission</code> generates a policy for you. You can use\n        <code> <a>SetQueueAttributes</a> </code> to upload your policy. For more\n        information, see <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-creating-custom-policies.html\">Using\n        Custom Policies with the Amazon SQS Access Policy Language</a> in the\n        <i>Amazon Simple Queue Service Developer Guide</i>.</p> </li> <li> <p>An\n        Amazon SQS policy can have a maximum of 7 actions.</p> </li> <li> <p>To\n        remove the ability to change queue permissions, you must deny permission\n        to the <code>AddPermission</code>, <code>RemovePermission</code>, and\n        <code>SetQueueAttributes</code> actions in your IAM policy.</p> </li>\n        </ul> </note> <p>Some actions take lists of parameters. These lists are\n        specified using the <code>param.n</code> notation. Values of\n        <code>n</code> are integers starting from 1. For example, a parameter\n        list with two elements looks like this:</p> <p>\n        <code>&amp;Attribute.1=first</code> </p> <p>\n        <code>&amp;Attribute.2=second</code> </p> <note> <p>Cross-account\n        permissions don't apply to this action. For more information, see <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-customer-managed-policy-examples.html#grant-cross-account-permissions-to-role-and-user-name\">Grant\n        Cross-Account Permissions to a Role and a User Name</a> in the <i>Amazon\n        Simple Queue Service Developer Guide</i>.</p> </note>\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: OverLimit\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/OverLimit\"\n      parameters:\n        - name: Label\n          in: query\n          required: true\n          description: The unique identification of the permission you're setting (for\n            example, <code>AliceSendMessage</code>). Maximum 80 characters.\n            Allowed characters include alphanumeric characters, hyphens\n            (<code>-</code>), and underscores (<code>_</code>).\n          schema:\n            type: string\n        - name: AWSAccountIds\n          in: query\n          required: true\n          description: The AWS account number of the <a\n            href=\"https://docs.aws.amazon.com/general/latest/gr/glos-chap.html#P\">principal</a>\n            who is given permission. The principal must have an AWS account, but\n            does not need to be signed up for Amazon SQS. For information about\n            locating the AWS account identification, see <a\n            href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-making-api-requests.html#sqs-api-request-authentication\">Your\n            AWS Identifiers</a> in the <i>Amazon Simple Queue Service Developer\n            Guide</i>.\n          schema:\n            type: array\n            items:\n              type: string\n        - name: Actions\n          in: query\n          required: true\n          description: '<p>The action the client wants to allow for the specified\n            principal. Valid values: the name of any action or\n            <code>*</code>.</p> <p>For more information about these actions, see\n            <a\n            href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-overview-of-managing-access.html\">Overview\n            of Managing Access Permissions to Your Amazon Simple Queue Service\n            Resource</a> in the <i>Amazon Simple Queue Service Developer\n            Guide</i>.</p> <p>Specifying <code>SendMessage</code>,\n            <code>DeleteMessage</code>, or <code>ChangeMessageVisibility</code>\n            for <code>ActionName.n</code> also grants permissions for the\n            corresponding batch versions of those actions:\n            <code>SendMessageBatch</code>, <code>DeleteMessageBatch</code>, and\n            <code>ChangeMessageVisibilityBatch</code>.</p>'\n          schema:\n            type: array\n            items:\n              type: string\n        - in: path\n          name: AccountNumber\n          required: true\n          description: The AWS account number\n          schema:\n            type: integer\n        - in: path\n          name: QueueName\n          required: true\n          description: The name of the queue\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - AddPermission\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2012-11-05\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    post:\n      x-aws-operation-name: AddPermission\n      operationId: POST AddPermission\n      description: <p>Adds a permission to a queue for a specific <a\n        href=\"https://docs.aws.amazon.com/general/latest/gr/glos-chap.html#P\">principal</a>.\n        This allows sharing access to the queue.</p> <p>When you create a queue,\n        you have full control access rights for the queue. Only you, the owner\n        of the queue, can grant or deny permissions to the queue. For more\n        information about these permissions, see <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-writing-an-sqs-policy.html#write-messages-to-shared-queue\">Allow\n        Developers to Write Messages to a Shared Queue</a> in the <i>Amazon\n        Simple Queue Service Developer Guide</i>.</p> <note> <ul> <li> <p>\n        <code>AddPermission</code> generates a policy for you. You can use\n        <code> <a>SetQueueAttributes</a> </code> to upload your policy. For more\n        information, see <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-creating-custom-policies.html\">Using\n        Custom Policies with the Amazon SQS Access Policy Language</a> in the\n        <i>Amazon Simple Queue Service Developer Guide</i>.</p> </li> <li> <p>An\n        Amazon SQS policy can have a maximum of 7 actions.</p> </li> <li> <p>To\n        remove the ability to change queue permissions, you must deny permission\n        to the <code>AddPermission</code>, <code>RemovePermission</code>, and\n        <code>SetQueueAttributes</code> actions in your IAM policy.</p> </li>\n        </ul> </note> <p>Some actions take lists of parameters. These lists are\n        specified using the <code>param.n</code> notation. Values of\n        <code>n</code> are integers starting from 1. For example, a parameter\n        list with two elements looks like this:</p> <p>\n        <code>&amp;Attribute.1=first</code> </p> <p>\n        <code>&amp;Attribute.2=second</code> </p> <note> <p>Cross-account\n        permissions don't apply to this action. For more information, see <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-customer-managed-policy-examples.html#grant-cross-account-permissions-to-role-and-user-name\">Grant\n        Cross-Account Permissions to a Role and a User Name</a> in the <i>Amazon\n        Simple Queue Service Developer Guide</i>.</p> </note>\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: OverLimit\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/OverLimit\"\n      parameters:\n        - in: path\n          name: AccountNumber\n          required: true\n          description: The AWS account number\n          schema:\n            type: integer\n        - in: path\n          name: QueueName\n          required: true\n          description: The name of the queue\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - AddPermission\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2012-11-05\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                Label:\n                  description: The unique identification of the permission you're setting\n                    (for example, <code>AliceSendMessage</code>). Maximum 80\n                    characters. Allowed characters include alphanumeric\n                    characters, hyphens (<code>-</code>), and underscores\n                    (<code>_</code>).\n                  type: string\n                AWSAccountIds:\n                  description: The AWS account number of the <a\n                    href=\"https://docs.aws.amazon.com/general/latest/gr/glos-chap.html#P\">principal</a>\n                    who is given permission. The principal must have an AWS\n                    account, but does not need to be signed up for Amazon SQS.\n                    For information about locating the AWS account\n                    identification, see <a\n                    href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-making-api-requests.html#sqs-api-request-authentication\">Your\n                    AWS Identifiers</a> in the <i>Amazon Simple Queue Service\n                    Developer Guide</i>.\n                  type: array\n                  items:\n                    type: string\n                Actions:\n                  description: '<p>The action the client wants to allow for the specified\n                    principal. Valid values: the name of any action or\n                    <code>*</code>.</p> <p>For more information about these\n                    actions, see <a\n                    href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-overview-of-managing-access.html\">Overview\n                    of Managing Access Permissions to Your Amazon Simple Queue\n                    Service Resource</a> in the <i>Amazon Simple Queue Service\n                    Developer Guide</i>.</p> <p>Specifying\n                    <code>SendMessage</code>, <code>DeleteMessage</code>, or\n                    <code>ChangeMessageVisibility</code> for\n                    <code>ActionName.n</code> also grants permissions for the\n                    corresponding batch versions of those actions:\n                    <code>SendMessageBatch</code>,\n                    <code>DeleteMessageBatch</code>, and\n                    <code>ChangeMessageVisibilityBatch</code>.</p>'\n                  type: array\n                  items:\n                    type: string\n              required:\n                - Label\n                - AWSAccountIds\n                - Actions\n  \"/{AccountNumber}/{QueueName}/#Action=ChangeMessageVisibility\":\n    get:\n      x-aws-operation-name: ChangeMessageVisibility\n      operationId: GET ChangeMessageVisibility\n      description: <p>Changes the visibility timeout of a specified message in a queue to a\n        new value. The default visibility timeout for a message is 30 seconds.\n        The minimum is 0 seconds. The maximum is 12 hours. For more information,\n        see <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html\">Visibility\n        Timeout</a> in the <i>Amazon Simple Queue Service Developer\n        Guide</i>.</p> <p>For example, you have a message with a visibility\n        timeout of 5 minutes. After 3 minutes, you call\n        <code>ChangeMessageVisibility</code> with a timeout of 10 minutes. You\n        can continue to call <code>ChangeMessageVisibility</code> to extend the\n        visibility timeout to the maximum allowed time. If you try to extend the\n        visibility timeout beyond the maximum, your request is rejected.</p>\n        <p>An Amazon SQS message has three basic states:</p> <ol> <li> <p>Sent\n        to a queue by a producer.</p> </li> <li> <p>Received from the queue by a\n        consumer.</p> </li> <li> <p>Deleted from the queue.</p> </li> </ol> <p>A\n        message is considered to be <i>stored</i> after it is sent to a queue by\n        a producer, but not yet received from the queue by a consumer (that is,\n        between states 1 and 2). There is no limit to the number of stored\n        messages. A message is considered to be <i>in flight</i> after it is\n        received from a queue by a consumer, but not yet deleted from the queue\n        (that is, between states 2 and 3). There is a limit to the number of\n        inflight messages.</p> <p>Limits that apply to inflight messages are\n        unrelated to the <i>unlimited</i> number of stored messages.</p> <p>For\n        most standard queues (depending on queue traffic and message backlog),\n        there can be a maximum of approximately 120,000 inflight messages\n        (received from a queue by a consumer, but not yet deleted from the\n        queue). If you reach this limit, Amazon SQS returns the\n        <code>OverLimit</code> error message. To avoid reaching the limit, you\n        should delete messages from the queue after they're processed. You can\n        also increase the number of queues you use to process your messages. To\n        request a limit increase, <a\n        href=\"https://console.aws.amazon.com/support/home#/case/create?issueType=service-limit-increase&amp;limitType=service-code-sqs\">file\n        a support request</a>.</p> <p>For FIFO queues, there can be a maximum of\n        20,000 inflight messages (received from a queue by a consumer, but not\n        yet deleted from the queue). If you reach this limit, Amazon SQS returns\n        no error messages.</p> <important> <p>If you attempt to set the\n        <code>VisibilityTimeout</code> to a value greater than the maximum time\n        left, Amazon SQS returns an error. Amazon SQS doesn't automatically\n        recalculate and increase the timeout to the maximum remaining time.</p>\n        <p>Unlike with a queue, when you change the visibility timeout for a\n        specific message the timeout value is applied immediately but isn't\n        saved in memory for that message. If you don't delete a message after it\n        is received, the visibility timeout for the message reverts to the\n        original timeout value (not to the value you set using the\n        <code>ChangeMessageVisibility</code> action) the next time the message\n        is received.</p> </important>\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: MessageNotInflight\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/MessageNotInflight\"\n        \"481\":\n          description: ReceiptHandleIsInvalid\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/ReceiptHandleIsInvalid\"\n      parameters:\n        - name: ReceiptHandle\n          in: query\n          required: true\n          description: The receipt handle associated with the message whose visibility\n            timeout is changed. This parameter is returned by the <code>\n            <a>ReceiveMessage</a> </code> action.\n          schema:\n            type: string\n        - name: VisibilityTimeout\n          in: query\n          required: true\n          description: \"The new value for the message's visibility timeout (in seconds).\n            Values values: <code>0</code> to <code>43200</code>. Maximum: 12\n            hours.\"\n          schema:\n            type: integer\n        - in: path\n          name: AccountNumber\n          required: true\n          description: The AWS account number\n          schema:\n            type: integer\n        - in: path\n          name: QueueName\n          required: true\n          description: The name of the queue\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ChangeMessageVisibility\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2012-11-05\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    post:\n      x-aws-operation-name: ChangeMessageVisibility\n      operationId: POST ChangeMessageVisibility\n      description: <p>Changes the visibility timeout of a specified message in a queue to a\n        new value. The default visibility timeout for a message is 30 seconds.\n        The minimum is 0 seconds. The maximum is 12 hours. For more information,\n        see <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html\">Visibility\n        Timeout</a> in the <i>Amazon Simple Queue Service Developer\n        Guide</i>.</p> <p>For example, you have a message with a visibility\n        timeout of 5 minutes. After 3 minutes, you call\n        <code>ChangeMessageVisibility</code> with a timeout of 10 minutes. You\n        can continue to call <code>ChangeMessageVisibility</code> to extend the\n        visibility timeout to the maximum allowed time. If you try to extend the\n        visibility timeout beyond the maximum, your request is rejected.</p>\n        <p>An Amazon SQS message has three basic states:</p> <ol> <li> <p>Sent\n        to a queue by a producer.</p> </li> <li> <p>Received from the queue by a\n        consumer.</p> </li> <li> <p>Deleted from the queue.</p> </li> </ol> <p>A\n        message is considered to be <i>stored</i> after it is sent to a queue by\n        a producer, but not yet received from the queue by a consumer (that is,\n        between states 1 and 2). There is no limit to the number of stored\n        messages. A message is considered to be <i>in flight</i> after it is\n        received from a queue by a consumer, but not yet deleted from the queue\n        (that is, between states 2 and 3). There is a limit to the number of\n        inflight messages.</p> <p>Limits that apply to inflight messages are\n        unrelated to the <i>unlimited</i> number of stored messages.</p> <p>For\n        most standard queues (depending on queue traffic and message backlog),\n        there can be a maximum of approximately 120,000 inflight messages\n        (received from a queue by a consumer, but not yet deleted from the\n        queue). If you reach this limit, Amazon SQS returns the\n        <code>OverLimit</code> error message. To avoid reaching the limit, you\n        should delete messages from the queue after they're processed. You can\n        also increase the number of queues you use to process your messages. To\n        request a limit increase, <a\n        href=\"https://console.aws.amazon.com/support/home#/case/create?issueType=service-limit-increase&amp;limitType=service-code-sqs\">file\n        a support request</a>.</p> <p>For FIFO queues, there can be a maximum of\n        20,000 inflight messages (received from a queue by a consumer, but not\n        yet deleted from the queue). If you reach this limit, Amazon SQS returns\n        no error messages.</p> <important> <p>If you attempt to set the\n        <code>VisibilityTimeout</code> to a value greater than the maximum time\n        left, Amazon SQS returns an error. Amazon SQS doesn't automatically\n        recalculate and increase the timeout to the maximum remaining time.</p>\n        <p>Unlike with a queue, when you change the visibility timeout for a\n        specific message the timeout value is applied immediately but isn't\n        saved in memory for that message. If you don't delete a message after it\n        is received, the visibility timeout for the message reverts to the\n        original timeout value (not to the value you set using the\n        <code>ChangeMessageVisibility</code> action) the next time the message\n        is received.</p> </important>\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: MessageNotInflight\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/MessageNotInflight\"\n        \"481\":\n          description: ReceiptHandleIsInvalid\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/ReceiptHandleIsInvalid\"\n      parameters:\n        - in: path\n          name: AccountNumber\n          required: true\n          description: The AWS account number\n          schema:\n            type: integer\n        - in: path\n          name: QueueName\n          required: true\n          description: The name of the queue\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ChangeMessageVisibility\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2012-11-05\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                ReceiptHandle:\n                  description: The receipt handle associated with the message whose\n                    visibility timeout is changed. This parameter is returned by\n                    the <code> <a>ReceiveMessage</a> </code> action.\n                  type: string\n                VisibilityTimeout:\n                  description: \"The new value for the message's visibility timeout (in\n                    seconds). Values values: <code>0</code> to\n                    <code>43200</code>. Maximum: 12 hours.\"\n                  type: integer\n              required:\n                - ReceiptHandle\n                - VisibilityTimeout\n  \"/{AccountNumber}/{QueueName}/#Action=ChangeMessageVisibilityBatch\":\n    get:\n      x-aws-operation-name: ChangeMessageVisibilityBatch\n      operationId: GET ChangeMessageVisibilityBatch\n      description: <p>Changes the visibility timeout of multiple messages. This is a batch\n        version of <code> <a>ChangeMessageVisibility</a>.</code> The result of\n        the action on each message is reported individually in the response. You\n        can send up to 10 <code> <a>ChangeMessageVisibility</a> </code> requests\n        with each <code>ChangeMessageVisibilityBatch</code> action.</p>\n        <important> <p>Because the batch request can result in a combination of\n        successful and unsuccessful actions, you should check for batch errors\n        even when the call returns an HTTP status code of <code>200</code>.</p>\n        </important> <p>Some actions take lists of parameters. These lists are\n        specified using the <code>param.n</code> notation. Values of\n        <code>n</code> are integers starting from 1. For example, a parameter\n        list with two elements looks like this:</p> <p>\n        <code>&amp;Attribute.1=first</code> </p> <p>\n        <code>&amp;Attribute.2=second</code> </p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/ChangeMessageVisibilityBatchResult\"\n        \"480\":\n          description: TooManyEntriesInBatchRequest\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/TooManyEntriesInBatchRequest\"\n        \"481\":\n          description: EmptyBatchRequest\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/EmptyBatchRequest\"\n        \"482\":\n          description: BatchEntryIdsNotDistinct\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/BatchEntryIdsNotDistinct\"\n        \"483\":\n          description: InvalidBatchEntryId\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/InvalidBatchEntryId\"\n      parameters:\n        - name: Entries\n          in: query\n          required: true\n          description: A list of receipt handles of the messages for which the visibility\n            timeout must be changed.\n          schema:\n            type: array\n            items:\n              type: string\n        - in: path\n          name: AccountNumber\n          required: true\n          description: The AWS account number\n          schema:\n            type: integer\n        - in: path\n          name: QueueName\n          required: true\n          description: The name of the queue\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ChangeMessageVisibilityBatch\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2012-11-05\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    post:\n      x-aws-operation-name: ChangeMessageVisibilityBatch\n      operationId: POST ChangeMessageVisibilityBatch\n      description: <p>Changes the visibility timeout of multiple messages. This is a batch\n        version of <code> <a>ChangeMessageVisibility</a>.</code> The result of\n        the action on each message is reported individually in the response. You\n        can send up to 10 <code> <a>ChangeMessageVisibility</a> </code> requests\n        with each <code>ChangeMessageVisibilityBatch</code> action.</p>\n        <important> <p>Because the batch request can result in a combination of\n        successful and unsuccessful actions, you should check for batch errors\n        even when the call returns an HTTP status code of <code>200</code>.</p>\n        </important> <p>Some actions take lists of parameters. These lists are\n        specified using the <code>param.n</code> notation. Values of\n        <code>n</code> are integers starting from 1. For example, a parameter\n        list with two elements looks like this:</p> <p>\n        <code>&amp;Attribute.1=first</code> </p> <p>\n        <code>&amp;Attribute.2=second</code> </p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/ChangeMessageVisibilityBatchResult\"\n        \"480\":\n          description: TooManyEntriesInBatchRequest\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/TooManyEntriesInBatchRequest\"\n        \"481\":\n          description: EmptyBatchRequest\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/EmptyBatchRequest\"\n        \"482\":\n          description: BatchEntryIdsNotDistinct\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/BatchEntryIdsNotDistinct\"\n        \"483\":\n          description: InvalidBatchEntryId\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/InvalidBatchEntryId\"\n      parameters:\n        - in: path\n          name: AccountNumber\n          required: true\n          description: The AWS account number\n          schema:\n            type: integer\n        - in: path\n          name: QueueName\n          required: true\n          description: The name of the queue\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ChangeMessageVisibilityBatch\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2012-11-05\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                Entries:\n                  description: A list of receipt handles of the messages for which the\n                    visibility timeout must be changed.\n                  type: array\n                  items:\n                    type: string\n              required:\n                - Entries\n  /#Action=CreateQueue:\n    get:\n      x-aws-operation-name: CreateQueue\n      operationId: GET CreateQueue\n      description: <p>Creates a new standard or FIFO queue. You can pass one or more\n        attributes in the request. Keep the following caveats in mind:</p> <ul>\n        <li> <p>If you don't specify the <code>FifoQueue</code> attribute,\n        Amazon SQS creates a standard queue.</p> <note> <p>You can't change the\n        queue type after you create it and you can't convert an existing\n        standard queue into a FIFO queue. You must either create a new FIFO\n        queue for your application or delete your existing standard queue and\n        recreate it as a FIFO queue. For more information, see <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html#FIFO-queues-moving\">Moving\n        From a Standard Queue to a FIFO Queue</a> in the <i>Amazon Simple Queue\n        Service Developer Guide</i>. </p> </note> </li> <li> <p>If you don't\n        provide a value for an attribute, the queue is created with the default\n        value for the attribute.</p> </li> <li> <p>If you delete a queue, you\n        must wait at least 60 seconds before creating a queue with the same\n        name.</p> </li> </ul> <p>To successfully create a new queue, you must\n        provide a queue name that adheres to the <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/limits-queues.html\">limits\n        related to queues</a> and is unique within the scope of your queues.</p>\n        <p>To get the queue URL, use the <code> <a>GetQueueUrl</a> </code>\n        action. <code> <a>GetQueueUrl</a> </code> requires only the\n        <code>QueueName</code> parameter. be aware of existing queue names:</p>\n        <ul> <li> <p>If you provide the name of an existing queue along with the\n        exact names and values of all the queue's attributes,\n        <code>CreateQueue</code> returns the queue URL for the existing\n        queue.</p> </li> <li> <p>If the queue name, attribute names, or\n        attribute values don't match an existing queue, <code>CreateQueue</code>\n        returns an error.</p> </li> </ul> <p>Some actions take lists of\n        parameters. These lists are specified using the <code>param.n</code>\n        notation. Values of <code>n</code> are integers starting from 1. For\n        example, a parameter list with two elements looks like this:</p> <p>\n        <code>&amp;Attribute.1=first</code> </p> <p>\n        <code>&amp;Attribute.2=second</code> </p> <note> <p>Cross-account\n        permissions don't apply to this action. For more information, see <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-customer-managed-policy-examples.html#grant-cross-account-permissions-to-role-and-user-name\">Grant\n        Cross-Account Permissions to a Role and a User Name</a> in the <i>Amazon\n        Simple Queue Service Developer Guide</i>.</p> </note>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/CreateQueueResult\"\n        \"480\":\n          description: QueueDeletedRecently\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/QueueDeletedRecently\"\n        \"481\":\n          description: QueueNameExists\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/QueueNameExists\"\n      parameters:\n        - name: QueueName\n          in: query\n          required: true\n          description: \"<p>The name of the new queue. The following limits apply to this\n            name:</p> <ul> <li> <p>A queue name can have up to 80\n            characters.</p> </li> <li> <p>Valid values: alphanumeric characters,\n            hyphens (<code>-</code>), and underscores (<code>_</code>).</p>\n            </li> <li> <p>A FIFO queue name must end with the <code>.fifo</code>\n            suffix.</p> </li> </ul> <p>Queue URLs and names are\n            case-sensitive.</p>\"\n          schema:\n            type: string\n        - name: Attribute.0.key\n          in: query\n          schema:\n            type: string\n        - name: Attribute.0.value\n          in: query\n          schema:\n            type: string\n        - name: Attribute.1.key\n          in: query\n          schema:\n            type: string\n        - name: Attribute.1.value\n          in: query\n          schema:\n            type: string\n        - name: Attribute.2.key\n          in: query\n          schema:\n            type: string\n        - name: Attribute.2.value\n          in: query\n          schema:\n            type: string\n        - name: Tag.0.key\n          in: query\n          schema:\n            type: string\n        - name: Tag.0.value\n          in: query\n          schema:\n            type: string\n        - name: Tag.1.key\n          in: query\n          schema:\n            type: string\n        - name: Tag.1.value\n          in: query\n          schema:\n            type: string\n        - name: Tag.2.key\n          in: query\n          schema:\n            type: string\n        - name: Tag.2.value\n          in: query\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - CreateQueue\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2012-11-05\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    post:\n      x-aws-operation-name: CreateQueue\n      operationId: POST CreateQueue\n      description: <p>Creates a new standard or FIFO queue. You can pass one or more\n        attributes in the request. Keep the following caveats in mind:</p> <ul>\n        <li> <p>If you don't specify the <code>FifoQueue</code> attribute,\n        Amazon SQS creates a standard queue.</p> <note> <p>You can't change the\n        queue type after you create it and you can't convert an existing\n        standard queue into a FIFO queue. You must either create a new FIFO\n        queue for your application or delete your existing standard queue and\n        recreate it as a FIFO queue. For more information, see <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html#FIFO-queues-moving\">Moving\n        From a Standard Queue to a FIFO Queue</a> in the <i>Amazon Simple Queue\n        Service Developer Guide</i>. </p> </note> </li> <li> <p>If you don't\n        provide a value for an attribute, the queue is created with the default\n        value for the attribute.</p> </li> <li> <p>If you delete a queue, you\n        must wait at least 60 seconds before creating a queue with the same\n        name.</p> </li> </ul> <p>To successfully create a new queue, you must\n        provide a queue name that adheres to the <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/limits-queues.html\">limits\n        related to queues</a> and is unique within the scope of your queues.</p>\n        <p>To get the queue URL, use the <code> <a>GetQueueUrl</a> </code>\n        action. <code> <a>GetQueueUrl</a> </code> requires only the\n        <code>QueueName</code> parameter. be aware of existing queue names:</p>\n        <ul> <li> <p>If you provide the name of an existing queue along with the\n        exact names and values of all the queue's attributes,\n        <code>CreateQueue</code> returns the queue URL for the existing\n        queue.</p> </li> <li> <p>If the queue name, attribute names, or\n        attribute values don't match an existing queue, <code>CreateQueue</code>\n        returns an error.</p> </li> </ul> <p>Some actions take lists of\n        parameters. These lists are specified using the <code>param.n</code>\n        notation. Values of <code>n</code> are integers starting from 1. For\n        example, a parameter list with two elements looks like this:</p> <p>\n        <code>&amp;Attribute.1=first</code> </p> <p>\n        <code>&amp;Attribute.2=second</code> </p> <note> <p>Cross-account\n        permissions don't apply to this action. For more information, see <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-customer-managed-policy-examples.html#grant-cross-account-permissions-to-role-and-user-name\">Grant\n        Cross-Account Permissions to a Role and a User Name</a> in the <i>Amazon\n        Simple Queue Service Developer Guide</i>.</p> </note>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/CreateQueueResult\"\n        \"480\":\n          description: QueueDeletedRecently\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/QueueDeletedRecently\"\n        \"481\":\n          description: QueueNameExists\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/QueueNameExists\"\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - CreateQueue\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2012-11-05\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                QueueName:\n                  description: \"<p>The name of the new queue. The following limits apply to\n                    this name:</p> <ul> <li> <p>A queue name can have up to 80\n                    characters.</p> </li> <li> <p>Valid values: alphanumeric\n                    characters, hyphens (<code>-</code>), and underscores\n                    (<code>_</code>).</p> </li> <li> <p>A FIFO queue name must\n                    end with the <code>.fifo</code> suffix.</p> </li> </ul>\n                    <p>Queue URLs and names are case-sensitive.</p>\"\n                  type: string\n                Attribute.0.key:\n                  type: string\n                Attribute.0.value:\n                  type: string\n                Attribute.1.key:\n                  type: string\n                Attribute.1.value:\n                  type: string\n                Attribute.2.key:\n                  type: string\n                Attribute.2.value:\n                  type: string\n                Tag.0.key:\n                  type: string\n                Tag.0.value:\n                  type: string\n                Tag.1.key:\n                  type: string\n                Tag.1.value:\n                  type: string\n                Tag.2.key:\n                  type: string\n                Tag.2.value:\n                  type: string\n              required:\n                - QueueName\n  \"/{AccountNumber}/{QueueName}/#Action=DeleteMessage\":\n    get:\n      x-aws-operation-name: DeleteMessage\n      operationId: GET DeleteMessage\n      description: <p>Deletes the specified message from the specified queue. To select the\n        message to delete, use the <code>ReceiptHandle</code> of the message\n        (<i>not</i> the <code>MessageId</code> which you receive when you send\n        the message). Amazon SQS can delete a message from a queue even if a\n        visibility timeout setting causes the message to be locked by another\n        consumer. Amazon SQS automatically deletes messages left in a queue\n        longer than the retention period configured for the queue. </p> <note>\n        <p>The <code>ReceiptHandle</code> is associated with a <i>specific\n        instance</i> of receiving a message. If you receive a message more than\n        once, the <code>ReceiptHandle</code> is different each time you receive\n        a message. When you use the <code>DeleteMessage</code> action, you must\n        provide the most recently received <code>ReceiptHandle</code> for the\n        message (otherwise, the request succeeds, but the message might not be\n        deleted).</p> <p>For standard queues, it is possible to receive a\n        message even after you delete it. This might happen on rare occasions if\n        one of the servers which stores a copy of the message is unavailable\n        when you send the request to delete the message. The copy remains on the\n        server and might be returned to you during a subsequent receive request.\n        You should ensure that your application is idempotent, so that receiving\n        a message more than once does not cause issues.</p> </note>\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: InvalidIdFormat\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/InvalidIdFormat\"\n        \"481\":\n          description: ReceiptHandleIsInvalid\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/ReceiptHandleIsInvalid\"\n      parameters:\n        - name: ReceiptHandle\n          in: query\n          required: true\n          description: The receipt handle associated with the message to delete.\n          schema:\n            type: string\n        - in: path\n          name: AccountNumber\n          required: true\n          description: The AWS account number\n          schema:\n            type: integer\n        - in: path\n          name: QueueName\n          required: true\n          description: The name of the queue\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DeleteMessage\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2012-11-05\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    post:\n      x-aws-operation-name: DeleteMessage\n      operationId: POST DeleteMessage\n      description: <p>Deletes the specified message from the specified queue. To select the\n        message to delete, use the <code>ReceiptHandle</code> of the message\n        (<i>not</i> the <code>MessageId</code> which you receive when you send\n        the message). Amazon SQS can delete a message from a queue even if a\n        visibility timeout setting causes the message to be locked by another\n        consumer. Amazon SQS automatically deletes messages left in a queue\n        longer than the retention period configured for the queue. </p> <note>\n        <p>The <code>ReceiptHandle</code> is associated with a <i>specific\n        instance</i> of receiving a message. If you receive a message more than\n        once, the <code>ReceiptHandle</code> is different each time you receive\n        a message. When you use the <code>DeleteMessage</code> action, you must\n        provide the most recently received <code>ReceiptHandle</code> for the\n        message (otherwise, the request succeeds, but the message might not be\n        deleted).</p> <p>For standard queues, it is possible to receive a\n        message even after you delete it. This might happen on rare occasions if\n        one of the servers which stores a copy of the message is unavailable\n        when you send the request to delete the message. The copy remains on the\n        server and might be returned to you during a subsequent receive request.\n        You should ensure that your application is idempotent, so that receiving\n        a message more than once does not cause issues.</p> </note>\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: InvalidIdFormat\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/InvalidIdFormat\"\n        \"481\":\n          description: ReceiptHandleIsInvalid\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/ReceiptHandleIsInvalid\"\n      parameters:\n        - in: path\n          name: AccountNumber\n          required: true\n          description: The AWS account number\n          schema:\n            type: integer\n        - in: path\n          name: QueueName\n          required: true\n          description: The name of the queue\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DeleteMessage\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2012-11-05\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                ReceiptHandle:\n                  description: The receipt handle associated with the message to delete.\n                  type: string\n              required:\n                - ReceiptHandle\n  \"/{AccountNumber}/{QueueName}/#Action=DeleteMessageBatch\":\n    get:\n      x-aws-operation-name: DeleteMessageBatch\n      operationId: GET DeleteMessageBatch\n      description: <p>Deletes up to ten messages from the specified queue. This is a batch\n        version of <code> <a>DeleteMessage</a>.</code> The result of the action\n        on each message is reported individually in the response.</p>\n        <important> <p>Because the batch request can result in a combination of\n        successful and unsuccessful actions, you should check for batch errors\n        even when the call returns an HTTP status code of <code>200</code>.</p>\n        </important> <p>Some actions take lists of parameters. These lists are\n        specified using the <code>param.n</code> notation. Values of\n        <code>n</code> are integers starting from 1. For example, a parameter\n        list with two elements looks like this:</p> <p>\n        <code>&amp;Attribute.1=first</code> </p> <p>\n        <code>&amp;Attribute.2=second</code> </p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/DeleteMessageBatchResult\"\n        \"480\":\n          description: TooManyEntriesInBatchRequest\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/TooManyEntriesInBatchRequest\"\n        \"481\":\n          description: EmptyBatchRequest\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/EmptyBatchRequest\"\n        \"482\":\n          description: BatchEntryIdsNotDistinct\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/BatchEntryIdsNotDistinct\"\n        \"483\":\n          description: InvalidBatchEntryId\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/InvalidBatchEntryId\"\n      parameters:\n        - name: Entries\n          in: query\n          required: true\n          description: A list of receipt handles for the messages to be deleted.\n          schema:\n            type: array\n            items:\n              type: string\n        - in: path\n          name: AccountNumber\n          required: true\n          description: The AWS account number\n          schema:\n            type: integer\n        - in: path\n          name: QueueName\n          required: true\n          description: The name of the queue\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DeleteMessageBatch\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2012-11-05\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    post:\n      x-aws-operation-name: DeleteMessageBatch\n      operationId: POST DeleteMessageBatch\n      description: <p>Deletes up to ten messages from the specified queue. This is a batch\n        version of <code> <a>DeleteMessage</a>.</code> The result of the action\n        on each message is reported individually in the response.</p>\n        <important> <p>Because the batch request can result in a combination of\n        successful and unsuccessful actions, you should check for batch errors\n        even when the call returns an HTTP status code of <code>200</code>.</p>\n        </important> <p>Some actions take lists of parameters. These lists are\n        specified using the <code>param.n</code> notation. Values of\n        <code>n</code> are integers starting from 1. For example, a parameter\n        list with two elements looks like this:</p> <p>\n        <code>&amp;Attribute.1=first</code> </p> <p>\n        <code>&amp;Attribute.2=second</code> </p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/DeleteMessageBatchResult\"\n        \"480\":\n          description: TooManyEntriesInBatchRequest\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/TooManyEntriesInBatchRequest\"\n        \"481\":\n          description: EmptyBatchRequest\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/EmptyBatchRequest\"\n        \"482\":\n          description: BatchEntryIdsNotDistinct\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/BatchEntryIdsNotDistinct\"\n        \"483\":\n          description: InvalidBatchEntryId\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/InvalidBatchEntryId\"\n      parameters:\n        - in: path\n          name: AccountNumber\n          required: true\n          description: The AWS account number\n          schema:\n            type: integer\n        - in: path\n          name: QueueName\n          required: true\n          description: The name of the queue\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DeleteMessageBatch\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2012-11-05\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                Entries:\n                  description: A list of receipt handles for the messages to be deleted.\n                  type: array\n                  items:\n                    type: string\n              required:\n                - Entries\n  \"/{AccountNumber}/{QueueName}/#Action=DeleteQueue\":\n    get:\n      x-aws-operation-name: DeleteQueue\n      operationId: GET DeleteQueue\n      description: \"<p>Deletes the queue specified by the <code>QueueUrl</code>, regardless\n        of the queue's contents. If the specified queue doesn't exist, Amazon\n        SQS returns a successful response.</p> <important> <p>Be careful with\n        the <code>DeleteQueue</code> action: When you delete a queue, any\n        messages in the queue are no longer available. </p> </important> <p>When\n        you delete a queue, the deletion process takes up to 60 seconds.\n        Requests you send involving that queue during the 60 seconds might\n        succeed. For example, a <code> <a>SendMessage</a> </code> request might\n        succeed, but after 60 seconds the queue and the message you sent no\n        longer exist.</p> <p>When you delete a queue, you must wait at least 60\n        seconds before creating a queue with the same name.</p> <note>\n        <p>Cross-account permissions don't apply to this action. For more\n        information, see <a\n        href=\\\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeve\\\n        loperGuide/sqs-customer-managed-policy-examples.html#grant-cross-accoun\\\n        t-permissions-to-role-and-user-name\\\">Grant Cross-Account Permissions to\n        a Role and a User Name</a> in the <i>Amazon Simple Queue Service\n        Developer Guide</i>.</p> </note>\"\n      responses:\n        \"200\":\n          description: Success\n      parameters:\n        - in: path\n          name: AccountNumber\n          required: true\n          description: The AWS account number\n          schema:\n            type: integer\n        - in: path\n          name: QueueName\n          required: true\n          description: The name of the queue\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DeleteQueue\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2012-11-05\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    post:\n      x-aws-operation-name: DeleteQueue\n      operationId: POST DeleteQueue\n      description: \"<p>Deletes the queue specified by the <code>QueueUrl</code>, regardless\n        of the queue's contents. If the specified queue doesn't exist, Amazon\n        SQS returns a successful response.</p> <important> <p>Be careful with\n        the <code>DeleteQueue</code> action: When you delete a queue, any\n        messages in the queue are no longer available. </p> </important> <p>When\n        you delete a queue, the deletion process takes up to 60 seconds.\n        Requests you send involving that queue during the 60 seconds might\n        succeed. For example, a <code> <a>SendMessage</a> </code> request might\n        succeed, but after 60 seconds the queue and the message you sent no\n        longer exist.</p> <p>When you delete a queue, you must wait at least 60\n        seconds before creating a queue with the same name.</p> <note>\n        <p>Cross-account permissions don't apply to this action. For more\n        information, see <a\n        href=\\\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeve\\\n        loperGuide/sqs-customer-managed-policy-examples.html#grant-cross-accoun\\\n        t-permissions-to-role-and-user-name\\\">Grant Cross-Account Permissions to\n        a Role and a User Name</a> in the <i>Amazon Simple Queue Service\n        Developer Guide</i>.</p> </note>\"\n      responses:\n        \"200\":\n          description: Success\n      parameters:\n        - in: path\n          name: AccountNumber\n          required: true\n          description: The AWS account number\n          schema:\n            type: integer\n        - in: path\n          name: QueueName\n          required: true\n          description: The name of the queue\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DeleteQueue\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2012-11-05\n  \"/{AccountNumber}/{QueueName}/#Action=GetQueueAttributes\":\n    get:\n      x-aws-operation-name: GetQueueAttributes\n      operationId: GET GetQueueAttributes\n      description: <p>Gets attributes for the specified queue.</p> <note> <p>To determine\n        whether a queue is <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html\">FIFO</a>,\n        you can check whether <code>QueueName</code> ends with the\n        <code>.fifo</code> suffix.</p> </note> <p>Some actions take lists of\n        parameters. These lists are specified using the <code>param.n</code>\n        notation. Values of <code>n</code> are integers starting from 1. For\n        example, a parameter list with two elements looks like this:</p> <p>\n        <code>&amp;Attribute.1=first</code> </p> <p>\n        <code>&amp;Attribute.2=second</code> </p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/GetQueueAttributesResult\"\n        \"480\":\n          description: InvalidAttributeName\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/InvalidAttributeName\"\n      parameters:\n        - name: AttributeNames\n          in: query\n          required: false\n          description: <p>A list of attributes for which to retrieve information.</p>\n            <note> <p>In the future, new attributes might be added. If you write\n            code that calls this action, we recommend that you structure your\n            code so that it can handle new attributes gracefully.</p> </note>\n            <p>The following attributes are supported:</p> <ul> <li> <p>\n            <code>All</code> - Returns all values. </p> </li> <li> <p>\n            <code>ApproximateNumberOfMessages</code> - Returns the approximate\n            number of messages available for retrieval from the queue.</p> </li>\n            <li> <p> <code>ApproximateNumberOfMessagesDelayed</code> - Returns\n            the approximate number of messages in the queue that are delayed and\n            not available for reading immediately. This can happen when the\n            queue is configured as a delay queue or when a message has been sent\n            with a delay parameter.</p> </li> <li> <p>\n            <code>ApproximateNumberOfMessagesNotVisible</code> - Returns the\n            approximate number of messages that are in flight. Messages are\n            considered to be <i>in flight</i> if they have been sent to a client\n            but have not yet been deleted or have not yet reached the end of\n            their visibility window. </p> </li> <li> <p>\n            <code>CreatedTimestamp</code> - Returns the time when the queue was\n            created in seconds (<a\n            href=\"http://en.wikipedia.org/wiki/Unix_time\">epoch time</a>).</p>\n            </li> <li> <p> <code>DelaySeconds</code> - Returns the default delay\n            on the queue in seconds.</p> </li> <li> <p>\n            <code>LastModifiedTimestamp</code> - Returns the time when the queue\n            was last changed in seconds (<a\n            href=\"http://en.wikipedia.org/wiki/Unix_time\">epoch time</a>).</p>\n            </li> <li> <p> <code>MaximumMessageSize</code> - Returns the limit\n            of how many bytes a message can contain before Amazon SQS rejects\n            it.</p> </li> <li> <p> <code>MessageRetentionPeriod</code> - Returns\n            the length of time, in seconds, for which Amazon SQS retains a\n            message.</p> </li> <li> <p> <code>Policy</code> - Returns the policy\n            of the queue.</p> </li> <li> <p> <code>QueueArn</code> - Returns the\n            Amazon resource name (ARN) of the queue.</p> </li> <li> <p>\n            <code>ReceiveMessageWaitTimeSeconds</code> - Returns the length of\n            time, in seconds, for which the <code>ReceiveMessage</code> action\n            waits for a message to arrive. </p> </li> <li> <p>\n            <code>RedrivePolicy</code> - Returns the string that includes the\n            parameters for dead-letter queue functionality of the source queue.\n            For more information about the redrive policy and dead-letter\n            queues, see <a\n            href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html\">Using\n            Amazon SQS Dead-Letter Queues</a> in the <i>Amazon Simple Queue\n            Service Developer Guide</i>. </p> <ul> <li> <p>\n            <code>deadLetterTargetArn</code> - The Amazon Resource Name (ARN) of\n            the dead-letter queue to which Amazon SQS moves messages after the\n            value of <code>maxReceiveCount</code> is exceeded.</p> </li> <li>\n            <p> <code>maxReceiveCount</code> - The number of times a message is\n            delivered to the source queue before being moved to the dead-letter\n            queue. When the <code>ReceiveCount</code> for a message exceeds the\n            <code>maxReceiveCount</code> for a queue, Amazon SQS moves the\n            message to the dead-letter-queue.</p> </li> </ul> </li> <li> <p>\n            <code>VisibilityTimeout</code> - Returns the visibility timeout for\n            the queue. For more information about the visibility timeout, see <a\n            href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html\">Visibility\n            Timeout</a> in the <i>Amazon Simple Queue Service Developer\n            Guide</i>. </p> </li> </ul> <p>The following attributes apply only\n            to <a\n            href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html\">server-side-encryption</a>:</p>\n            <ul> <li> <p> <code>KmsMasterKeyId</code> - Returns the ID of an\n            AWS-managed customer master key (CMK) for Amazon SQS or a custom\n            CMK. For more information, see <a\n            href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html#sqs-sse-key-terms\">Key\n            Terms</a>. </p> </li> <li> <p>\n            <code>KmsDataKeyReusePeriodSeconds</code> - Returns the length of\n            time, in seconds, for which Amazon SQS can reuse a data key to\n            encrypt or decrypt messages before calling AWS KMS again. For more\n            information, see <a\n            href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html#sqs-how-does-the-data-key-reuse-period-work\">How\n            Does the Data Key Reuse Period Work?</a>. </p> </li> </ul> <p>The\n            following attributes apply only to <a\n            href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html\">FIFO\n            (first-in-first-out) queues</a>:</p> <ul> <li> <p>\n            <code>FifoQueue</code> - Returns whether the queue is FIFO. For more\n            information, see <a\n            href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html#FIFO-queues-understanding-logic\">FIFO\n            Queue Logic</a> in the <i>Amazon Simple Queue Service Developer\n            Guide</i>.</p> <note> <p>To determine whether a queue is <a\n            href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html\">FIFO</a>,\n            you can check whether <code>QueueName</code> ends with the\n            <code>.fifo</code> suffix.</p> </note> </li> <li> <p>\n            <code>ContentBasedDeduplication</code> - Returns whether\n            content-based deduplication is enabled for the queue. For more\n            information, see <a\n            href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html#FIFO-queues-exactly-once-processing\">Exactly-Once\n            Processing</a> in the <i>Amazon Simple Queue Service Developer\n            Guide</i>. </p> </li> </ul>\n          schema:\n            type: array\n            items:\n              type: string\n        - in: path\n          name: AccountNumber\n          required: true\n          description: The AWS account number\n          schema:\n            type: integer\n        - in: path\n          name: QueueName\n          required: true\n          description: The name of the queue\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - GetQueueAttributes\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2012-11-05\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    post:\n      x-aws-operation-name: GetQueueAttributes\n      operationId: POST GetQueueAttributes\n      description: <p>Gets attributes for the specified queue.</p> <note> <p>To determine\n        whether a queue is <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html\">FIFO</a>,\n        you can check whether <code>QueueName</code> ends with the\n        <code>.fifo</code> suffix.</p> </note> <p>Some actions take lists of\n        parameters. These lists are specified using the <code>param.n</code>\n        notation. Values of <code>n</code> are integers starting from 1. For\n        example, a parameter list with two elements looks like this:</p> <p>\n        <code>&amp;Attribute.1=first</code> </p> <p>\n        <code>&amp;Attribute.2=second</code> </p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/GetQueueAttributesResult\"\n        \"480\":\n          description: InvalidAttributeName\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/InvalidAttributeName\"\n      parameters:\n        - in: path\n          name: AccountNumber\n          required: true\n          description: The AWS account number\n          schema:\n            type: integer\n        - in: path\n          name: QueueName\n          required: true\n          description: The name of the queue\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - GetQueueAttributes\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2012-11-05\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                AttributeNames:\n                  description: <p>A list of attributes for which to retrieve\n                    information.</p> <note> <p>In the future, new attributes\n                    might be added. If you write code that calls this action, we\n                    recommend that you structure your code so that it can handle\n                    new attributes gracefully.</p> </note> <p>The following\n                    attributes are supported:</p> <ul> <li> <p> <code>All</code>\n                    - Returns all values. </p> </li> <li> <p>\n                    <code>ApproximateNumberOfMessages</code> - Returns the\n                    approximate number of messages available for retrieval from\n                    the queue.</p> </li> <li> <p>\n                    <code>ApproximateNumberOfMessagesDelayed</code> - Returns\n                    the approximate number of messages in the queue that are\n                    delayed and not available for reading immediately. This can\n                    happen when the queue is configured as a delay queue or when\n                    a message has been sent with a delay parameter.</p> </li>\n                    <li> <p> <code>ApproximateNumberOfMessagesNotVisible</code>\n                    - Returns the approximate number of messages that are in\n                    flight. Messages are considered to be <i>in flight</i> if\n                    they have been sent to a client but have not yet been\n                    deleted or have not yet reached the end of their visibility\n                    window. </p> </li> <li> <p> <code>CreatedTimestamp</code> -\n                    Returns the time when the queue was created in seconds (<a\n                    href=\"http://en.wikipedia.org/wiki/Unix_time\">epoch\n                    time</a>).</p> </li> <li> <p> <code>DelaySeconds</code> -\n                    Returns the default delay on the queue in seconds.</p> </li>\n                    <li> <p> <code>LastModifiedTimestamp</code> - Returns the\n                    time when the queue was last changed in seconds (<a\n                    href=\"http://en.wikipedia.org/wiki/Unix_time\">epoch\n                    time</a>).</p> </li> <li> <p>\n                    <code>MaximumMessageSize</code> - Returns the limit of how\n                    many bytes a message can contain before Amazon SQS rejects\n                    it.</p> </li> <li> <p> <code>MessageRetentionPeriod</code> -\n                    Returns the length of time, in seconds, for which Amazon SQS\n                    retains a message.</p> </li> <li> <p> <code>Policy</code> -\n                    Returns the policy of the queue.</p> </li> <li> <p>\n                    <code>QueueArn</code> - Returns the Amazon resource name\n                    (ARN) of the queue.</p> </li> <li> <p>\n                    <code>ReceiveMessageWaitTimeSeconds</code> - Returns the\n                    length of time, in seconds, for which the\n                    <code>ReceiveMessage</code> action waits for a message to\n                    arrive. </p> </li> <li> <p> <code>RedrivePolicy</code> -\n                    Returns the string that includes the parameters for\n                    dead-letter queue functionality of the source queue. For\n                    more information about the redrive policy and dead-letter\n                    queues, see <a\n                    href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html\">Using\n                    Amazon SQS Dead-Letter Queues</a> in the <i>Amazon Simple\n                    Queue Service Developer Guide</i>. </p> <ul> <li> <p>\n                    <code>deadLetterTargetArn</code> - The Amazon Resource Name\n                    (ARN) of the dead-letter queue to which Amazon SQS moves\n                    messages after the value of <code>maxReceiveCount</code> is\n                    exceeded.</p> </li> <li> <p> <code>maxReceiveCount</code> -\n                    The number of times a message is delivered to the source\n                    queue before being moved to the dead-letter queue. When the\n                    <code>ReceiveCount</code> for a message exceeds the\n                    <code>maxReceiveCount</code> for a queue, Amazon SQS moves\n                    the message to the dead-letter-queue.</p> </li> </ul> </li>\n                    <li> <p> <code>VisibilityTimeout</code> - Returns the\n                    visibility timeout for the queue. For more information about\n                    the visibility timeout, see <a\n                    href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html\">Visibility\n                    Timeout</a> in the <i>Amazon Simple Queue Service Developer\n                    Guide</i>. </p> </li> </ul> <p>The following attributes\n                    apply only to <a\n                    href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html\">server-side-encryption</a>:</p>\n                    <ul> <li> <p> <code>KmsMasterKeyId</code> - Returns the ID\n                    of an AWS-managed customer master key (CMK) for Amazon SQS\n                    or a custom CMK. For more information, see <a\n                    href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html#sqs-sse-key-terms\">Key\n                    Terms</a>. </p> </li> <li> <p>\n                    <code>KmsDataKeyReusePeriodSeconds</code> - Returns the\n                    length of time, in seconds, for which Amazon SQS can reuse a\n                    data key to encrypt or decrypt messages before calling AWS\n                    KMS again. For more information, see <a\n                    href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html#sqs-how-does-the-data-key-reuse-period-work\">How\n                    Does the Data Key Reuse Period Work?</a>. </p> </li> </ul>\n                    <p>The following attributes apply only to <a\n                    href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html\">FIFO\n                    (first-in-first-out) queues</a>:</p> <ul> <li> <p>\n                    <code>FifoQueue</code> - Returns whether the queue is FIFO.\n                    For more information, see <a\n                    href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html#FIFO-queues-understanding-logic\">FIFO\n                    Queue Logic</a> in the <i>Amazon Simple Queue Service\n                    Developer Guide</i>.</p> <note> <p>To determine whether a\n                    queue is <a\n                    href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html\">FIFO</a>,\n                    you can check whether <code>QueueName</code> ends with the\n                    <code>.fifo</code> suffix.</p> </note> </li> <li> <p>\n                    <code>ContentBasedDeduplication</code> - Returns whether\n                    content-based deduplication is enabled for the queue. For\n                    more information, see <a\n                    href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html#FIFO-queues-exactly-once-processing\">Exactly-Once\n                    Processing</a> in the <i>Amazon Simple Queue Service\n                    Developer Guide</i>. </p> </li> </ul>\n                  type: array\n                  items:\n                    type: string\n  /#Action=GetQueueUrl:\n    get:\n      x-aws-operation-name: GetQueueUrl\n      operationId: GET GetQueueUrl\n      description: <p>Returns the URL of an existing Amazon SQS queue.</p> <p>To access a\n        queue that belongs to another AWS account, use the\n        <code>QueueOwnerAWSAccountId</code> parameter to specify the account ID\n        of the queue's owner. The queue's owner must grant you permission to\n        access the queue. For more information about shared queue access, see\n        <code> <a>AddPermission</a> </code> or see <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-writing-an-sqs-policy.html#write-messages-to-shared-queue\">Allow\n        Developers to Write Messages to a Shared Queue</a> in the <i>Amazon\n        Simple Queue Service Developer Guide</i>. </p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/GetQueueUrlResult\"\n        \"480\":\n          description: QueueDoesNotExist\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/QueueDoesNotExist\"\n      parameters:\n        - name: QueueName\n          in: query\n          required: true\n          description: \"<p>The name of the queue whose URL must be fetched. Maximum 80\n            characters. Valid values: alphanumeric characters, hyphens\n            (<code>-</code>), and underscores (<code>_</code>).</p> <p>Queue\n            URLs and names are case-sensitive.</p>\"\n          schema:\n            type: string\n        - name: QueueOwnerAWSAccountId\n          in: query\n          required: false\n          description: The AWS account ID of the account that created the queue.\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - GetQueueUrl\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2012-11-05\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    post:\n      x-aws-operation-name: GetQueueUrl\n      operationId: POST GetQueueUrl\n      description: <p>Returns the URL of an existing Amazon SQS queue.</p> <p>To access a\n        queue that belongs to another AWS account, use the\n        <code>QueueOwnerAWSAccountId</code> parameter to specify the account ID\n        of the queue's owner. The queue's owner must grant you permission to\n        access the queue. For more information about shared queue access, see\n        <code> <a>AddPermission</a> </code> or see <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-writing-an-sqs-policy.html#write-messages-to-shared-queue\">Allow\n        Developers to Write Messages to a Shared Queue</a> in the <i>Amazon\n        Simple Queue Service Developer Guide</i>. </p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/GetQueueUrlResult\"\n        \"480\":\n          description: QueueDoesNotExist\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/QueueDoesNotExist\"\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - GetQueueUrl\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2012-11-05\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                QueueName:\n                  description: \"<p>The name of the queue whose URL must be fetched. Maximum\n                    80 characters. Valid values: alphanumeric characters,\n                    hyphens (<code>-</code>), and underscores\n                    (<code>_</code>).</p> <p>Queue URLs and names are\n                    case-sensitive.</p>\"\n                  type: string\n                QueueOwnerAWSAccountId:\n                  description: The AWS account ID of the account that created the queue.\n                  type: string\n              required:\n                - QueueName\n  \"/{AccountNumber}/{QueueName}/#Action=ListDeadLetterSourceQueues\":\n    get:\n      x-aws-operation-name: ListDeadLetterSourceQueues\n      operationId: GET ListDeadLetterSourceQueues\n      description: <p>Returns a list of your queues that have the\n        <code>RedrivePolicy</code> queue attribute configured with a dead-letter\n        queue.</p> <p>For more information about using dead-letter queues, see\n        <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html\">Using\n        Amazon SQS Dead-Letter Queues</a> in the <i>Amazon Simple Queue Service\n        Developer Guide</i>.</p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/ListDeadLetterSourceQueuesResult\"\n        \"480\":\n          description: QueueDoesNotExist\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/QueueDoesNotExist\"\n      parameters:\n        - in: path\n          name: AccountNumber\n          required: true\n          description: The AWS account number\n          schema:\n            type: integer\n        - in: path\n          name: QueueName\n          required: true\n          description: The name of the queue\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ListDeadLetterSourceQueues\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2012-11-05\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    post:\n      x-aws-operation-name: ListDeadLetterSourceQueues\n      operationId: POST ListDeadLetterSourceQueues\n      description: <p>Returns a list of your queues that have the\n        <code>RedrivePolicy</code> queue attribute configured with a dead-letter\n        queue.</p> <p>For more information about using dead-letter queues, see\n        <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html\">Using\n        Amazon SQS Dead-Letter Queues</a> in the <i>Amazon Simple Queue Service\n        Developer Guide</i>.</p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/ListDeadLetterSourceQueuesResult\"\n        \"480\":\n          description: QueueDoesNotExist\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/QueueDoesNotExist\"\n      parameters:\n        - in: path\n          name: AccountNumber\n          required: true\n          description: The AWS account number\n          schema:\n            type: integer\n        - in: path\n          name: QueueName\n          required: true\n          description: The name of the queue\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ListDeadLetterSourceQueues\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2012-11-05\n  \"/{AccountNumber}/{QueueName}/#Action=ListQueueTags\":\n    get:\n      x-aws-operation-name: ListQueueTags\n      operationId: GET ListQueueTags\n      description: <p>List all cost allocation tags added to the specified Amazon SQS\n        queue. For an overview, see <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-queue-tags.html\">Tagging\n        Your Amazon SQS Queues</a> in the <i>Amazon Simple Queue Service\n        Developer Guide</i>.</p> <note> <p>Cross-account permissions don't apply\n        to this action. For more information, see <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-customer-managed-policy-examples.html#grant-cross-account-permissions-to-role-and-user-name\">Grant\n        Cross-Account Permissions to a Role and a User Name</a> in the <i>Amazon\n        Simple Queue Service Developer Guide</i>.</p> </note>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/ListQueueTagsResult\"\n      parameters:\n        - in: path\n          name: AccountNumber\n          required: true\n          description: The AWS account number\n          schema:\n            type: integer\n        - in: path\n          name: QueueName\n          required: true\n          description: The name of the queue\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ListQueueTags\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2012-11-05\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    post:\n      x-aws-operation-name: ListQueueTags\n      operationId: POST ListQueueTags\n      description: <p>List all cost allocation tags added to the specified Amazon SQS\n        queue. For an overview, see <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-queue-tags.html\">Tagging\n        Your Amazon SQS Queues</a> in the <i>Amazon Simple Queue Service\n        Developer Guide</i>.</p> <note> <p>Cross-account permissions don't apply\n        to this action. For more information, see <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-customer-managed-policy-examples.html#grant-cross-account-permissions-to-role-and-user-name\">Grant\n        Cross-Account Permissions to a Role and a User Name</a> in the <i>Amazon\n        Simple Queue Service Developer Guide</i>.</p> </note>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/ListQueueTagsResult\"\n      parameters:\n        - in: path\n          name: AccountNumber\n          required: true\n          description: The AWS account number\n          schema:\n            type: integer\n        - in: path\n          name: QueueName\n          required: true\n          description: The name of the queue\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ListQueueTags\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2012-11-05\n  /#Action=ListQueues:\n    get:\n      x-aws-operation-name: ListQueues\n      operationId: GET ListQueues\n      description: <p>Returns a list of your queues. The maximum number of queues that can\n        be returned is 1,000. If you specify a value for the optional\n        <code>QueueNamePrefix</code> parameter, only queues with a name that\n        begins with the specified value are returned.</p> <note>\n        <p>Cross-account permissions don't apply to this action. For more\n        information, see <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-customer-managed-policy-examples.html#grant-cross-account-permissions-to-role-and-user-name\">Grant\n        Cross-Account Permissions to a Role and a User Name</a> in the <i>Amazon\n        Simple Queue Service Developer Guide</i>.</p> </note>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/ListQueuesResult\"\n      parameters:\n        - name: QueueNamePrefix\n          in: query\n          required: false\n          description: <p>A string to use for filtering the list results. Only those queues\n            whose name begins with the specified string are returned.</p>\n            <p>Queue URLs and names are case-sensitive.</p>\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ListQueues\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2012-11-05\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    post:\n      x-aws-operation-name: ListQueues\n      operationId: POST ListQueues\n      description: <p>Returns a list of your queues. The maximum number of queues that can\n        be returned is 1,000. If you specify a value for the optional\n        <code>QueueNamePrefix</code> parameter, only queues with a name that\n        begins with the specified value are returned.</p> <note>\n        <p>Cross-account permissions don't apply to this action. For more\n        information, see <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-customer-managed-policy-examples.html#grant-cross-account-permissions-to-role-and-user-name\">Grant\n        Cross-Account Permissions to a Role and a User Name</a> in the <i>Amazon\n        Simple Queue Service Developer Guide</i>.</p> </note>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/ListQueuesResult\"\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ListQueues\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2012-11-05\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                QueueNamePrefix:\n                  description: <p>A string to use for filtering the list results. Only\n                    those queues whose name begins with the specified string are\n                    returned.</p> <p>Queue URLs and names are\n                    case-sensitive.</p>\n                  type: string\n  \"/{AccountNumber}/{QueueName}/#Action=PurgeQueue\":\n    get:\n      x-aws-operation-name: PurgeQueue\n      operationId: GET PurgeQueue\n      description: <p>Deletes the messages in a queue specified by the\n        <code>QueueURL</code> parameter.</p> <important> <p>When you use the\n        <code>PurgeQueue</code> action, you can't retrieve any messages deleted\n        from a queue.</p> <p>The message deletion process takes up to 60\n        seconds. We recommend waiting for 60 seconds regardless of your queue's\n        size. </p> </important> <p>Messages sent to the queue <i>before</i> you\n        call <code>PurgeQueue</code> might be received but are deleted within\n        the next minute.</p> <p>Messages sent to the queue <i>after</i> you call\n        <code>PurgeQueue</code> might be deleted while the queue is being\n        purged.</p>\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: QueueDoesNotExist\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/QueueDoesNotExist\"\n        \"481\":\n          description: PurgeQueueInProgress\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PurgeQueueInProgress\"\n      parameters:\n        - in: path\n          name: AccountNumber\n          required: true\n          description: The AWS account number\n          schema:\n            type: integer\n        - in: path\n          name: QueueName\n          required: true\n          description: The name of the queue\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - PurgeQueue\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2012-11-05\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    post:\n      x-aws-operation-name: PurgeQueue\n      operationId: POST PurgeQueue\n      description: <p>Deletes the messages in a queue specified by the\n        <code>QueueURL</code> parameter.</p> <important> <p>When you use the\n        <code>PurgeQueue</code> action, you can't retrieve any messages deleted\n        from a queue.</p> <p>The message deletion process takes up to 60\n        seconds. We recommend waiting for 60 seconds regardless of your queue's\n        size. </p> </important> <p>Messages sent to the queue <i>before</i> you\n        call <code>PurgeQueue</code> might be received but are deleted within\n        the next minute.</p> <p>Messages sent to the queue <i>after</i> you call\n        <code>PurgeQueue</code> might be deleted while the queue is being\n        purged.</p>\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: QueueDoesNotExist\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/QueueDoesNotExist\"\n        \"481\":\n          description: PurgeQueueInProgress\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PurgeQueueInProgress\"\n      parameters:\n        - in: path\n          name: AccountNumber\n          required: true\n          description: The AWS account number\n          schema:\n            type: integer\n        - in: path\n          name: QueueName\n          required: true\n          description: The name of the queue\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - PurgeQueue\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2012-11-05\n  \"/{AccountNumber}/{QueueName}/#Action=ReceiveMessage\":\n    get:\n      x-aws-operation-name: ReceiveMessage\n      operationId: GET ReceiveMessage\n      description: <p>Retrieves one or more messages (up to 10), from the specified queue.\n        Using the <code>WaitTimeSeconds</code> parameter enables long-poll\n        support. For more information, see <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-long-polling.html\">Amazon\n        SQS Long Polling</a> in the <i>Amazon Simple Queue Service Developer\n        Guide</i>. </p> <p>Short poll is the default behavior where a weighted\n        random set of machines is sampled on a <code>ReceiveMessage</code> call.\n        Thus, only the messages on the sampled machines are returned. If the\n        number of messages in the queue is small (fewer than 1,000), you most\n        likely get fewer messages than you requested per\n        <code>ReceiveMessage</code> call. If the number of messages in the queue\n        is extremely small, you might not receive any messages in a particular\n        <code>ReceiveMessage</code> response. If this happens, repeat the\n        request. </p> <p>For each message returned, the response includes the\n        following:</p> <ul> <li> <p>The message body.</p> </li> <li> <p>An MD5\n        digest of the message body. For information about MD5, see <a\n        href=\"https://www.ietf.org/rfc/rfc1321.txt\">RFC1321</a>.</p> </li> <li>\n        <p>The <code>MessageId</code> you received when you sent the message to\n        the queue.</p> </li> <li> <p>The receipt handle.</p> </li> <li> <p>The\n        message attributes.</p> </li> <li> <p>An MD5 digest of the message\n        attributes.</p> </li> </ul> <p>The receipt handle is the identifier you\n        must provide when deleting the message. For more information, see <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-queue-message-identifiers.html\">Queue\n        and Message Identifiers</a> in the <i>Amazon Simple Queue Service\n        Developer Guide</i>.</p> <p>You can provide the\n        <code>VisibilityTimeout</code> parameter in your request. The parameter\n        is applied to the messages that Amazon SQS returns in the response. If\n        you don't include the parameter, the overall visibility timeout for the\n        queue is used for the returned messages. For more information, see <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html\">Visibility\n        Timeout</a> in the <i>Amazon Simple Queue Service Developer\n        Guide</i>.</p> <p>A message that isn't deleted or a message whose\n        visibility isn't extended before the visibility timeout expires counts\n        as a failed receive. Depending on the configuration of the queue, the\n        message might be sent to the dead-letter queue.</p> <note> <p>In the\n        future, new attributes might be added. If you write code that calls this\n        action, we recommend that you structure your code so that it can handle\n        new attributes gracefully.</p> </note>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/ReceiveMessageResult\"\n        \"480\":\n          description: OverLimit\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/OverLimit\"\n      parameters:\n        - name: AttributeNames\n          in: query\n          required: false\n          description: <p>A list of attributes that need to be returned along with each\n            message. These attributes include:</p> <ul> <li> <p>\n            <code>All</code> - Returns all values.</p> </li> <li> <p>\n            <code>ApproximateFirstReceiveTimestamp</code> - Returns the time the\n            message was first received from the queue (<a\n            href=\"http://en.wikipedia.org/wiki/Unix_time\">epoch time</a> in\n            milliseconds).</p> </li> <li> <p>\n            <code>ApproximateReceiveCount</code> - Returns the number of times a\n            message has been received from the queue but not deleted.</p> </li>\n            <li> <p> <code>AWSTraceHeader</code> - Returns the AWS X-Ray trace\n            header string. </p> </li> <li> <p> <code>SenderId</code> </p> <ul>\n            <li> <p>For an IAM user, returns the IAM user ID, for example\n            <code>ABCDEFGHI1JKLMNOPQ23R</code>.</p> </li> <li> <p>For an IAM\n            role, returns the IAM role ID, for example\n            <code>ABCDE1F2GH3I4JK5LMNOP:i-a123b456</code>.</p> </li> </ul> </li>\n            <li> <p> <code>SentTimestamp</code> - Returns the time the message\n            was sent to the queue (<a\n            href=\"http://en.wikipedia.org/wiki/Unix_time\">epoch time</a> in\n            milliseconds).</p> </li> <li> <p>\n            <code>MessageDeduplicationId</code> - Returns the value provided by\n            the producer that calls the <code> <a>SendMessage</a> </code>\n            action.</p> </li> <li> <p> <code>MessageGroupId</code> - Returns the\n            value provided by the producer that calls the <code>\n            <a>SendMessage</a> </code> action. Messages with the same\n            <code>MessageGroupId</code> are returned in sequence.</p> </li> <li>\n            <p> <code>SequenceNumber</code> - Returns the value provided by\n            Amazon SQS.</p> </li> </ul>\n          schema:\n            type: array\n            items:\n              type: string\n        - name: MessageAttributeNames\n          in: query\n          required: false\n          description: <p>The name of the message attribute, where <i>N</i> is the\n            index.</p> <ul> <li> <p>The name can contain alphanumeric characters\n            and the underscore (<code>_</code>), hyphen (<code>-</code>), and\n            period (<code>.</code>).</p> </li> <li> <p>The name is\n            case-sensitive and must be unique among all attribute names for the\n            message.</p> </li> <li> <p>The name must not start with AWS-reserved\n            prefixes such as <code>AWS.</code> or <code>Amazon.</code> (or any\n            casing variants).</p> </li> <li> <p>The name must not start or end\n            with a period (<code>.</code>), and it should not have periods in\n            succession (<code>..</code>).</p> </li> <li> <p>The name can be up\n            to 256 characters long.</p> </li> </ul> <p>When using\n            <code>ReceiveMessage</code>, you can send a list of attribute names\n            to receive, or you can return all of the attributes by specifying\n            <code>All</code> or <code>.*</code> in your request. You can also\n            use all message attributes starting with a prefix, for example\n            <code>bar.*</code>.</p>\n          schema:\n            type: array\n            items:\n              type: string\n        - name: MaxNumberOfMessages\n          in: query\n          required: false\n          description: \"The maximum number of messages to return. Amazon SQS never returns\n            more messages than this value (however, fewer messages might be\n            returned). Valid values: 1 to 10. Default: 1.\"\n          schema:\n            type: integer\n        - name: VisibilityTimeout\n          in: query\n          required: false\n          description: The duration (in seconds) that the received messages are hidden from\n            subsequent retrieve requests after being retrieved by a\n            <code>ReceiveMessage</code> request.\n          schema:\n            type: integer\n        - name: WaitTimeSeconds\n          in: query\n          required: false\n          description: The duration (in seconds) for which the call waits for a message to\n            arrive in the queue before returning. If a message is available, the\n            call returns sooner than <code>WaitTimeSeconds</code>. If no\n            messages are available and the wait time expires, the call returns\n            successfully with an empty list of messages.\n          schema:\n            type: integer\n        - name: ReceiveRequestAttemptId\n          in: query\n          required: false\n          description: <p>This parameter applies only to FIFO (first-in-first-out)\n            queues.</p> <p>The token used for deduplication of\n            <code>ReceiveMessage</code> calls. If a networking issue occurs\n            after a <code>ReceiveMessage</code> action, and instead of a\n            response you receive a generic error, you can retry the same action\n            with an identical <code>ReceiveRequestAttemptId</code> to retrieve\n            the same set of messages, even if their visibility timeout has not\n            yet expired.</p> <ul> <li> <p>You can use\n            <code>ReceiveRequestAttemptId</code> only for 5 minutes after a\n            <code>ReceiveMessage</code> action.</p> </li> <li> <p>When you set\n            <code>FifoQueue</code>, a caller of the <code>ReceiveMessage</code>\n            action can provide a <code>ReceiveRequestAttemptId</code>\n            explicitly.</p> </li> <li> <p>If a caller of the\n            <code>ReceiveMessage</code> action doesn't provide a\n            <code>ReceiveRequestAttemptId</code>, Amazon SQS generates a\n            <code>ReceiveRequestAttemptId</code>.</p> </li> <li> <p>You can\n            retry the <code>ReceiveMessage</code> action with the same\n            <code>ReceiveRequestAttemptId</code> if none of the messages have\n            been modified (deleted or had their visibility changes).</p> </li>\n            <li> <p>During a visibility timeout, subsequent calls with the same\n            <code>ReceiveRequestAttemptId</code> return the same messages and\n            receipt handles. If a retry occurs within the deduplication\n            interval, it resets the visibility timeout. For more information,\n            see <a\n            href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html\">Visibility\n            Timeout</a> in the <i>Amazon Simple Queue Service Developer\n            Guide</i>.</p> <important> <p>If a caller of the\n            <code>ReceiveMessage</code> action still processes messages when the\n            visibility timeout expires and messages become visible, another\n            worker consuming from the same queue can receive the same messages\n            and therefore process duplicates. Also, if a consumer whose message\n            processing time is longer than the visibility timeout tries to\n            delete the processed messages, the action fails with an error.</p>\n            <p>To mitigate this effect, ensure that your application observes a\n            safe threshold before the visibility timeout expires and extend the\n            visibility timeout as necessary.</p> </important> </li> <li>\n            <p>While messages with a particular <code>MessageGroupId</code> are\n            invisible, no more messages belonging to the same\n            <code>MessageGroupId</code> are returned until the visibility\n            timeout expires. You can still receive messages with another\n            <code>MessageGroupId</code> as long as it is also visible.</p> </li>\n            <li> <p>If a caller of <code>ReceiveMessage</code> can't track the\n            <code>ReceiveRequestAttemptId</code>, no retries work until the\n            original visibility timeout expires. As a result, delays might occur\n            but the messages in the queue remain in a strict order.</p> </li>\n            </ul> <p>The length of <code>ReceiveRequestAttemptId</code> is 128\n            characters. <code>ReceiveRequestAttemptId</code> can contain\n            alphanumeric characters (<code>a-z</code>, <code>A-Z</code>,\n            <code>0-9</code>) and punctuation\n            (<code>!\"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\\]^_`{|}~</code>).</p>\n            <p>For best practices of using <code>ReceiveRequestAttemptId</code>,\n            see <a\n            href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/using-receiverequestattemptid-request-parameter.html\">Using\n            the ReceiveRequestAttemptId Request Parameter</a> in the <i>Amazon\n            Simple Queue Service Developer Guide</i>.</p>\n          schema:\n            type: string\n        - in: path\n          name: AccountNumber\n          required: true\n          description: The AWS account number\n          schema:\n            type: integer\n        - in: path\n          name: QueueName\n          required: true\n          description: The name of the queue\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ReceiveMessage\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2012-11-05\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    post:\n      x-aws-operation-name: ReceiveMessage\n      operationId: POST ReceiveMessage\n      description: <p>Retrieves one or more messages (up to 10), from the specified queue.\n        Using the <code>WaitTimeSeconds</code> parameter enables long-poll\n        support. For more information, see <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-long-polling.html\">Amazon\n        SQS Long Polling</a> in the <i>Amazon Simple Queue Service Developer\n        Guide</i>. </p> <p>Short poll is the default behavior where a weighted\n        random set of machines is sampled on a <code>ReceiveMessage</code> call.\n        Thus, only the messages on the sampled machines are returned. If the\n        number of messages in the queue is small (fewer than 1,000), you most\n        likely get fewer messages than you requested per\n        <code>ReceiveMessage</code> call. If the number of messages in the queue\n        is extremely small, you might not receive any messages in a particular\n        <code>ReceiveMessage</code> response. If this happens, repeat the\n        request. </p> <p>For each message returned, the response includes the\n        following:</p> <ul> <li> <p>The message body.</p> </li> <li> <p>An MD5\n        digest of the message body. For information about MD5, see <a\n        href=\"https://www.ietf.org/rfc/rfc1321.txt\">RFC1321</a>.</p> </li> <li>\n        <p>The <code>MessageId</code> you received when you sent the message to\n        the queue.</p> </li> <li> <p>The receipt handle.</p> </li> <li> <p>The\n        message attributes.</p> </li> <li> <p>An MD5 digest of the message\n        attributes.</p> </li> </ul> <p>The receipt handle is the identifier you\n        must provide when deleting the message. For more information, see <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-queue-message-identifiers.html\">Queue\n        and Message Identifiers</a> in the <i>Amazon Simple Queue Service\n        Developer Guide</i>.</p> <p>You can provide the\n        <code>VisibilityTimeout</code> parameter in your request. The parameter\n        is applied to the messages that Amazon SQS returns in the response. If\n        you don't include the parameter, the overall visibility timeout for the\n        queue is used for the returned messages. For more information, see <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html\">Visibility\n        Timeout</a> in the <i>Amazon Simple Queue Service Developer\n        Guide</i>.</p> <p>A message that isn't deleted or a message whose\n        visibility isn't extended before the visibility timeout expires counts\n        as a failed receive. Depending on the configuration of the queue, the\n        message might be sent to the dead-letter queue.</p> <note> <p>In the\n        future, new attributes might be added. If you write code that calls this\n        action, we recommend that you structure your code so that it can handle\n        new attributes gracefully.</p> </note>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/ReceiveMessageResult\"\n        \"480\":\n          description: OverLimit\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/OverLimit\"\n      parameters:\n        - in: path\n          name: AccountNumber\n          required: true\n          description: The AWS account number\n          schema:\n            type: integer\n        - in: path\n          name: QueueName\n          required: true\n          description: The name of the queue\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ReceiveMessage\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2012-11-05\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                AttributeNames:\n                  description: <p>A list of attributes that need to be returned along with\n                    each message. These attributes include:</p> <ul> <li> <p>\n                    <code>All</code> - Returns all values.</p> </li> <li> <p>\n                    <code>ApproximateFirstReceiveTimestamp</code> - Returns the\n                    time the message was first received from the queue (<a\n                    href=\"http://en.wikipedia.org/wiki/Unix_time\">epoch time</a>\n                    in milliseconds).</p> </li> <li> <p>\n                    <code>ApproximateReceiveCount</code> - Returns the number of\n                    times a message has been received from the queue but not\n                    deleted.</p> </li> <li> <p> <code>AWSTraceHeader</code> -\n                    Returns the AWS X-Ray trace header string. </p> </li> <li>\n                    <p> <code>SenderId</code> </p> <ul> <li> <p>For an IAM user,\n                    returns the IAM user ID, for example\n                    <code>ABCDEFGHI1JKLMNOPQ23R</code>.</p> </li> <li> <p>For an\n                    IAM role, returns the IAM role ID, for example\n                    <code>ABCDE1F2GH3I4JK5LMNOP:i-a123b456</code>.</p> </li>\n                    </ul> </li> <li> <p> <code>SentTimestamp</code> - Returns\n                    the time the message was sent to the queue (<a\n                    href=\"http://en.wikipedia.org/wiki/Unix_time\">epoch time</a>\n                    in milliseconds).</p> </li> <li> <p>\n                    <code>MessageDeduplicationId</code> - Returns the value\n                    provided by the producer that calls the <code>\n                    <a>SendMessage</a> </code> action.</p> </li> <li> <p>\n                    <code>MessageGroupId</code> - Returns the value provided by\n                    the producer that calls the <code> <a>SendMessage</a>\n                    </code> action. Messages with the same\n                    <code>MessageGroupId</code> are returned in sequence.</p>\n                    </li> <li> <p> <code>SequenceNumber</code> - Returns the\n                    value provided by Amazon SQS.</p> </li> </ul>\n                  type: array\n                  items:\n                    type: string\n                MessageAttributeNames:\n                  description: <p>The name of the message attribute, where <i>N</i> is the\n                    index.</p> <ul> <li> <p>The name can contain alphanumeric\n                    characters and the underscore (<code>_</code>), hyphen\n                    (<code>-</code>), and period (<code>.</code>).</p> </li>\n                    <li> <p>The name is case-sensitive and must be unique among\n                    all attribute names for the message.</p> </li> <li> <p>The\n                    name must not start with AWS-reserved prefixes such as\n                    <code>AWS.</code> or <code>Amazon.</code> (or any casing\n                    variants).</p> </li> <li> <p>The name must not start or end\n                    with a period (<code>.</code>), and it should not have\n                    periods in succession (<code>..</code>).</p> </li> <li>\n                    <p>The name can be up to 256 characters long.</p> </li>\n                    </ul> <p>When using <code>ReceiveMessage</code>, you can\n                    send a list of attribute names to receive, or you can return\n                    all of the attributes by specifying <code>All</code> or\n                    <code>.*</code> in your request. You can also use all\n                    message attributes starting with a prefix, for example\n                    <code>bar.*</code>.</p>\n                  type: array\n                  items:\n                    type: string\n                MaxNumberOfMessages:\n                  description: \"The maximum number of messages to return. Amazon SQS never\n                    returns more messages than this value (however, fewer\n                    messages might be returned). Valid values: 1 to 10. Default:\n                    1.\"\n                  type: integer\n                VisibilityTimeout:\n                  description: The duration (in seconds) that the received messages are\n                    hidden from subsequent retrieve requests after being\n                    retrieved by a <code>ReceiveMessage</code> request.\n                  type: integer\n                WaitTimeSeconds:\n                  description: The duration (in seconds) for which the call waits for a\n                    message to arrive in the queue before returning. If a\n                    message is available, the call returns sooner than\n                    <code>WaitTimeSeconds</code>. If no messages are available\n                    and the wait time expires, the call returns successfully\n                    with an empty list of messages.\n                  type: integer\n                ReceiveRequestAttemptId:\n                  description: <p>This parameter applies only to FIFO (first-in-first-out)\n                    queues.</p> <p>The token used for deduplication of\n                    <code>ReceiveMessage</code> calls. If a networking issue\n                    occurs after a <code>ReceiveMessage</code> action, and\n                    instead of a response you receive a generic error, you can\n                    retry the same action with an identical\n                    <code>ReceiveRequestAttemptId</code> to retrieve the same\n                    set of messages, even if their visibility timeout has not\n                    yet expired.</p> <ul> <li> <p>You can use\n                    <code>ReceiveRequestAttemptId</code> only for 5 minutes\n                    after a <code>ReceiveMessage</code> action.</p> </li> <li>\n                    <p>When you set <code>FifoQueue</code>, a caller of the\n                    <code>ReceiveMessage</code> action can provide a\n                    <code>ReceiveRequestAttemptId</code> explicitly.</p> </li>\n                    <li> <p>If a caller of the <code>ReceiveMessage</code>\n                    action doesn't provide a\n                    <code>ReceiveRequestAttemptId</code>, Amazon SQS generates a\n                    <code>ReceiveRequestAttemptId</code>.</p> </li> <li> <p>You\n                    can retry the <code>ReceiveMessage</code> action with the\n                    same <code>ReceiveRequestAttemptId</code> if none of the\n                    messages have been modified (deleted or had their visibility\n                    changes).</p> </li> <li> <p>During a visibility timeout,\n                    subsequent calls with the same\n                    <code>ReceiveRequestAttemptId</code> return the same\n                    messages and receipt handles. If a retry occurs within the\n                    deduplication interval, it resets the visibility timeout.\n                    For more information, see <a\n                    href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html\">Visibility\n                    Timeout</a> in the <i>Amazon Simple Queue Service Developer\n                    Guide</i>.</p> <important> <p>If a caller of the\n                    <code>ReceiveMessage</code> action still processes messages\n                    when the visibility timeout expires and messages become\n                    visible, another worker consuming from the same queue can\n                    receive the same messages and therefore process duplicates.\n                    Also, if a consumer whose message processing time is longer\n                    than the visibility timeout tries to delete the processed\n                    messages, the action fails with an error.</p> <p>To mitigate\n                    this effect, ensure that your application observes a safe\n                    threshold before the visibility timeout expires and extend\n                    the visibility timeout as necessary.</p> </important> </li>\n                    <li> <p>While messages with a particular\n                    <code>MessageGroupId</code> are invisible, no more messages\n                    belonging to the same <code>MessageGroupId</code> are\n                    returned until the visibility timeout expires. You can still\n                    receive messages with another <code>MessageGroupId</code> as\n                    long as it is also visible.</p> </li> <li> <p>If a caller of\n                    <code>ReceiveMessage</code> can't track the\n                    <code>ReceiveRequestAttemptId</code>, no retries work until\n                    the original visibility timeout expires. As a result, delays\n                    might occur but the messages in the queue remain in a strict\n                    order.</p> </li> </ul> <p>The length of\n                    <code>ReceiveRequestAttemptId</code> is 128 characters.\n                    <code>ReceiveRequestAttemptId</code> can contain\n                    alphanumeric characters (<code>a-z</code>, <code>A-Z</code>,\n                    <code>0-9</code>) and punctuation\n                    (<code>!\"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\\]^_`{|}~</code>).</p>\n                    <p>For best practices of using\n                    <code>ReceiveRequestAttemptId</code>, see <a\n                    href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/using-receiverequestattemptid-request-parameter.html\">Using\n                    the ReceiveRequestAttemptId Request Parameter</a> in the\n                    <i>Amazon Simple Queue Service Developer Guide</i>.</p>\n                  type: string\n  \"/{AccountNumber}/{QueueName}/#Action=RemovePermission\":\n    get:\n      x-aws-operation-name: RemovePermission\n      operationId: GET RemovePermission\n      description: <p>Revokes any permissions in the queue policy that matches the\n        specified <code>Label</code> parameter.</p> <note> <ul> <li> <p>Only the\n        owner of a queue can remove permissions from it.</p> </li> <li>\n        <p>Cross-account permissions don't apply to this action. For more\n        information, see <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-customer-managed-policy-examples.html#grant-cross-account-permissions-to-role-and-user-name\">Grant\n        Cross-Account Permissions to a Role and a User Name</a> in the <i>Amazon\n        Simple Queue Service Developer Guide</i>.</p> </li> <li> <p>To remove\n        the ability to change queue permissions, you must deny permission to the\n        <code>AddPermission</code>, <code>RemovePermission</code>, and\n        <code>SetQueueAttributes</code> actions in your IAM policy.</p> </li>\n        </ul> </note>\n      responses:\n        \"200\":\n          description: Success\n      parameters:\n        - name: Label\n          in: query\n          required: true\n          description: The identification of the permission to remove. This is the label\n            added using the <code> <a>AddPermission</a> </code> action.\n          schema:\n            type: string\n        - in: path\n          name: AccountNumber\n          required: true\n          description: The AWS account number\n          schema:\n            type: integer\n        - in: path\n          name: QueueName\n          required: true\n          description: The name of the queue\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - RemovePermission\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2012-11-05\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    post:\n      x-aws-operation-name: RemovePermission\n      operationId: POST RemovePermission\n      description: <p>Revokes any permissions in the queue policy that matches the\n        specified <code>Label</code> parameter.</p> <note> <ul> <li> <p>Only the\n        owner of a queue can remove permissions from it.</p> </li> <li>\n        <p>Cross-account permissions don't apply to this action. For more\n        information, see <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-customer-managed-policy-examples.html#grant-cross-account-permissions-to-role-and-user-name\">Grant\n        Cross-Account Permissions to a Role and a User Name</a> in the <i>Amazon\n        Simple Queue Service Developer Guide</i>.</p> </li> <li> <p>To remove\n        the ability to change queue permissions, you must deny permission to the\n        <code>AddPermission</code>, <code>RemovePermission</code>, and\n        <code>SetQueueAttributes</code> actions in your IAM policy.</p> </li>\n        </ul> </note>\n      responses:\n        \"200\":\n          description: Success\n      parameters:\n        - in: path\n          name: AccountNumber\n          required: true\n          description: The AWS account number\n          schema:\n            type: integer\n        - in: path\n          name: QueueName\n          required: true\n          description: The name of the queue\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - RemovePermission\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2012-11-05\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                Label:\n                  description: The identification of the permission to remove. This is the\n                    label added using the <code> <a>AddPermission</a> </code>\n                    action.\n                  type: string\n              required:\n                - Label\n  \"/{AccountNumber}/{QueueName}/#Action=SendMessage\":\n    get:\n      x-aws-operation-name: SendMessage\n      operationId: GET SendMessage\n      description: <p>Delivers a message to the specified queue.</p> <important> <p>A\n        message can include only XML, JSON, and unformatted text. The following\n        Unicode characters are allowed:</p> <p> <code>#x9</code> |\n        <code>#xA</code> | <code>#xD</code> | <code>#x20</code> to\n        <code>#xD7FF</code> | <code>#xE000</code> to <code>#xFFFD</code> |\n        <code>#x10000</code> to <code>#x10FFFF</code> </p> <p>Any characters not\n        included in this list will be rejected. For more information, see the <a\n        href=\"http://www.w3.org/TR/REC-xml/#charsets\">W3C specification for\n        characters</a>.</p> </important>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/SendMessageResult\"\n        \"480\":\n          description: InvalidMessageContents\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/InvalidMessageContents\"\n        \"481\":\n          description: UnsupportedOperation\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/UnsupportedOperation\"\n      parameters:\n        - name: MessageBody\n          in: query\n          required: true\n          description: <p>The message to send. The maximum string size is 256 KB.</p>\n            <important> <p>A message can include only XML, JSON, and unformatted\n            text. The following Unicode characters are allowed:</p> <p>\n            <code>#x9</code> | <code>#xA</code> | <code>#xD</code> |\n            <code>#x20</code> to <code>#xD7FF</code> | <code>#xE000</code> to\n            <code>#xFFFD</code> | <code>#x10000</code> to <code>#x10FFFF</code>\n            </p> <p>Any characters not included in this list will be rejected.\n            For more information, see the <a\n            href=\"http://www.w3.org/TR/REC-xml/#charsets\">W3C specification for\n            characters</a>.</p> </important>\n          schema:\n            type: string\n        - name: DelaySeconds\n          in: query\n          required: false\n          description: \"<p> The length of time, in seconds, for which to delay a specific\n            message. Valid values: 0 to 900. Maximum: 15 minutes. Messages with\n            a positive <code>DelaySeconds</code> value become available for\n            processing after the delay period is finished. If you don't specify\n            a value, the default value for the queue applies. </p> <note>\n            <p>When you set <code>FifoQueue</code>, you can't set\n            <code>DelaySeconds</code> per message. You can set this parameter\n            only on a queue level.</p> </note>\"\n          schema:\n            type: integer\n        - name: MessageAttribute.0.key\n          in: query\n          schema:\n            type: string\n        - name: MessageAttribute.0.value\n          in: query\n          schema:\n            type: string\n        - name: MessageAttribute.1.key\n          in: query\n          schema:\n            type: string\n        - name: MessageAttribute.1.value\n          in: query\n          schema:\n            type: string\n        - name: MessageAttribute.2.key\n          in: query\n          schema:\n            type: string\n        - name: MessageAttribute.2.value\n          in: query\n          schema:\n            type: string\n        - name: MessageSystemAttribute.0.key\n          in: query\n          schema:\n            type: string\n        - name: MessageSystemAttribute.0.value\n          in: query\n          schema:\n            type: string\n        - name: MessageSystemAttribute.1.key\n          in: query\n          schema:\n            type: string\n        - name: MessageSystemAttribute.1.value\n          in: query\n          schema:\n            type: string\n        - name: MessageSystemAttribute.2.key\n          in: query\n          schema:\n            type: string\n        - name: MessageSystemAttribute.2.value\n          in: query\n          schema:\n            type: string\n        - name: MessageDeduplicationId\n          in: query\n          required: false\n          description: <p>This parameter applies only to FIFO (first-in-first-out)\n            queues.</p> <p>The token used for deduplication of sent messages. If\n            a message with a particular <code>MessageDeduplicationId</code> is\n            sent successfully, any messages sent with the same\n            <code>MessageDeduplicationId</code> are accepted successfully but\n            aren't delivered during the 5-minute deduplication interval. For\n            more information, see <a\n            href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html#FIFO-queues-exactly-once-processing\">\n            Exactly-Once Processing</a> in the <i>Amazon Simple Queue Service\n            Developer Guide</i>.</p> <ul> <li> <p>Every message must have a\n            unique <code>MessageDeduplicationId</code>,</p> <ul> <li> <p>You may\n            provide a <code>MessageDeduplicationId</code> explicitly.</p> </li>\n            <li> <p>If you aren't able to provide a\n            <code>MessageDeduplicationId</code> and you enable\n            <code>ContentBasedDeduplication</code> for your queue, Amazon SQS\n            uses a SHA-256 hash to generate the\n            <code>MessageDeduplicationId</code> using the body of the message\n            (but not the attributes of the message). </p> </li> <li> <p>If you\n            don't provide a <code>MessageDeduplicationId</code> and the queue\n            doesn't have <code>ContentBasedDeduplication</code> set, the action\n            fails with an error.</p> </li> <li> <p>If the queue has\n            <code>ContentBasedDeduplication</code> set, your\n            <code>MessageDeduplicationId</code> overrides the generated one.</p>\n            </li> </ul> </li> <li> <p>When\n            <code>ContentBasedDeduplication</code> is in effect, messages with\n            identical content sent within the deduplication interval are treated\n            as duplicates and only one copy of the message is delivered.</p>\n            </li> <li> <p>If you send one message with\n            <code>ContentBasedDeduplication</code> enabled and then another\n            message with a <code>MessageDeduplicationId</code> that is the same\n            as the one generated for the first\n            <code>MessageDeduplicationId</code>, the two messages are treated as\n            duplicates and only one copy of the message is delivered. </p> </li>\n            </ul> <note> <p>The <code>MessageDeduplicationId</code> is available\n            to the consumer of the message (this can be useful for\n            troubleshooting delivery issues).</p> <p>If a message is sent\n            successfully but the acknowledgement is lost and the message is\n            resent with the same <code>MessageDeduplicationId</code> after the\n            deduplication interval, Amazon SQS can't detect duplicate\n            messages.</p> <p>Amazon SQS continues to keep track of the message\n            deduplication ID even after the message is received and deleted.</p>\n            </note> <p>The length of <code>MessageDeduplicationId</code> is 128\n            characters. <code>MessageDeduplicationId</code> can contain\n            alphanumeric characters (<code>a-z</code>, <code>A-Z</code>,\n            <code>0-9</code>) and punctuation\n            (<code>!\"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\\]^_`{|}~</code>).</p>\n            <p>For best practices of using <code>MessageDeduplicationId</code>,\n            see <a\n            href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/using-messagededuplicationid-property.html\">Using\n            the MessageDeduplicationId Property</a> in the <i>Amazon Simple\n            Queue Service Developer Guide</i>.</p>\n          schema:\n            type: string\n        - name: MessageGroupId\n          in: query\n          required: false\n          description: \"<p>This parameter applies only to FIFO (first-in-first-out)\n            queues.</p> <p>The tag that specifies that a message belongs to a\n            specific message group. Messages that belong to the same message\n            group are processed in a FIFO manner (however, messages in different\n            message groups might be processed out of order). To interleave\n            multiple ordered streams within a single queue, use\n            <code>MessageGroupId</code> values (for example, session data for\n            multiple users). In this scenario, multiple consumers can process\n            the queue, but the session data of each user is processed in a FIFO\n            fashion.</p> <ul> <li> <p>You must associate a non-empty\n            <code>MessageGroupId</code> with a message. If you don't provide a\n            <code>MessageGroupId</code>, the action fails.</p> </li> <li> <p>\n            <code>ReceiveMessage</code> might return messages with multiple\n            <code>MessageGroupId</code> values. For each\n            <code>MessageGroupId</code>, the messages are sorted by time sent.\n            The caller can't specify a <code>MessageGroupId</code>.</p> </li>\n            </ul> <p>The length of <code>MessageGroupId</code> is 128\n            characters. Valid values: alphanumeric characters and punctuation\n            <code>(!\\\"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\\\\]^_`{|}~)</code>.</p>\n            <p>For best practices of using <code>MessageGroupId</code>, see <a\n            href=\\\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQS\\\n            DeveloperGuide/using-messagegroupid-property.html\\\">Using the\n            MessageGroupId Property</a> in the <i>Amazon Simple Queue Service\n            Developer Guide</i>.</p> <important> <p> <code>MessageGroupId</code>\n            is required for FIFO queues. You can't use it for Standard\n            queues.</p> </important>\"\n          schema:\n            type: string\n        - in: path\n          name: AccountNumber\n          required: true\n          description: The AWS account number\n          schema:\n            type: integer\n        - in: path\n          name: QueueName\n          required: true\n          description: The name of the queue\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - SendMessage\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2012-11-05\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    post:\n      x-aws-operation-name: SendMessage\n      operationId: POST SendMessage\n      description: <p>Delivers a message to the specified queue.</p> <important> <p>A\n        message can include only XML, JSON, and unformatted text. The following\n        Unicode characters are allowed:</p> <p> <code>#x9</code> |\n        <code>#xA</code> | <code>#xD</code> | <code>#x20</code> to\n        <code>#xD7FF</code> | <code>#xE000</code> to <code>#xFFFD</code> |\n        <code>#x10000</code> to <code>#x10FFFF</code> </p> <p>Any characters not\n        included in this list will be rejected. For more information, see the <a\n        href=\"http://www.w3.org/TR/REC-xml/#charsets\">W3C specification for\n        characters</a>.</p> </important>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/SendMessageResult\"\n        \"480\":\n          description: InvalidMessageContents\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/InvalidMessageContents\"\n        \"481\":\n          description: UnsupportedOperation\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/UnsupportedOperation\"\n      parameters:\n        - in: path\n          name: AccountNumber\n          required: true\n          description: The AWS account number\n          schema:\n            type: integer\n        - in: path\n          name: QueueName\n          required: true\n          description: The name of the queue\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - SendMessage\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2012-11-05\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                MessageBody:\n                  description: <p>The message to send. The maximum string size is 256\n                    KB.</p> <important> <p>A message can include only XML, JSON,\n                    and unformatted text. The following Unicode characters are\n                    allowed:</p> <p> <code>#x9</code> | <code>#xA</code> |\n                    <code>#xD</code> | <code>#x20</code> to <code>#xD7FF</code>\n                    | <code>#xE000</code> to <code>#xFFFD</code> |\n                    <code>#x10000</code> to <code>#x10FFFF</code> </p> <p>Any\n                    characters not included in this list will be rejected. For\n                    more information, see the <a\n                    href=\"http://www.w3.org/TR/REC-xml/#charsets\">W3C\n                    specification for characters</a>.</p> </important>\n                  type: string\n                DelaySeconds:\n                  description: \"<p> The length of time, in seconds, for which to delay a\n                    specific message. Valid values: 0 to 900. Maximum: 15\n                    minutes. Messages with a positive <code>DelaySeconds</code>\n                    value become available for processing after the delay period\n                    is finished. If you don't specify a value, the default value\n                    for the queue applies. </p> <note> <p>When you set\n                    <code>FifoQueue</code>, you can't set\n                    <code>DelaySeconds</code> per message. You can set this\n                    parameter only on a queue level.</p> </note>\"\n                  type: integer\n                MessageAttribute.0.key:\n                  type: string\n                MessageAttribute.0.value:\n                  type: string\n                MessageAttribute.1.key:\n                  type: string\n                MessageAttribute.1.value:\n                  type: string\n                MessageAttribute.2.key:\n                  type: string\n                MessageAttribute.2.value:\n                  type: string\n                MessageSystemAttribute.0.key:\n                  type: string\n                MessageSystemAttribute.0.value:\n                  type: string\n                MessageSystemAttribute.1.key:\n                  type: string\n                MessageSystemAttribute.1.value:\n                  type: string\n                MessageSystemAttribute.2.key:\n                  type: string\n                MessageSystemAttribute.2.value:\n                  type: string\n                MessageDeduplicationId:\n                  description: <p>This parameter applies only to FIFO (first-in-first-out)\n                    queues.</p> <p>The token used for deduplication of sent\n                    messages. If a message with a particular\n                    <code>MessageDeduplicationId</code> is sent successfully,\n                    any messages sent with the same\n                    <code>MessageDeduplicationId</code> are accepted\n                    successfully but aren't delivered during the 5-minute\n                    deduplication interval. For more information, see <a\n                    href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html#FIFO-queues-exactly-once-processing\">\n                    Exactly-Once Processing</a> in the <i>Amazon Simple Queue\n                    Service Developer Guide</i>.</p> <ul> <li> <p>Every message\n                    must have a unique <code>MessageDeduplicationId</code>,</p>\n                    <ul> <li> <p>You may provide a\n                    <code>MessageDeduplicationId</code> explicitly.</p> </li>\n                    <li> <p>If you aren't able to provide a\n                    <code>MessageDeduplicationId</code> and you enable\n                    <code>ContentBasedDeduplication</code> for your queue,\n                    Amazon SQS uses a SHA-256 hash to generate the\n                    <code>MessageDeduplicationId</code> using the body of the\n                    message (but not the attributes of the message). </p> </li>\n                    <li> <p>If you don't provide a\n                    <code>MessageDeduplicationId</code> and the queue doesn't\n                    have <code>ContentBasedDeduplication</code> set, the action\n                    fails with an error.</p> </li> <li> <p>If the queue has\n                    <code>ContentBasedDeduplication</code> set, your\n                    <code>MessageDeduplicationId</code> overrides the generated\n                    one.</p> </li> </ul> </li> <li> <p>When\n                    <code>ContentBasedDeduplication</code> is in effect,\n                    messages with identical content sent within the\n                    deduplication interval are treated as duplicates and only\n                    one copy of the message is delivered.</p> </li> <li> <p>If\n                    you send one message with\n                    <code>ContentBasedDeduplication</code> enabled and then\n                    another message with a <code>MessageDeduplicationId</code>\n                    that is the same as the one generated for the first\n                    <code>MessageDeduplicationId</code>, the two messages are\n                    treated as duplicates and only one copy of the message is\n                    delivered. </p> </li> </ul> <note> <p>The\n                    <code>MessageDeduplicationId</code> is available to the\n                    consumer of the message (this can be useful for\n                    troubleshooting delivery issues).</p> <p>If a message is\n                    sent successfully but the acknowledgement is lost and the\n                    message is resent with the same\n                    <code>MessageDeduplicationId</code> after the deduplication\n                    interval, Amazon SQS can't detect duplicate messages.</p>\n                    <p>Amazon SQS continues to keep track of the message\n                    deduplication ID even after the message is received and\n                    deleted.</p> </note> <p>The length of\n                    <code>MessageDeduplicationId</code> is 128 characters.\n                    <code>MessageDeduplicationId</code> can contain alphanumeric\n                    characters (<code>a-z</code>, <code>A-Z</code>,\n                    <code>0-9</code>) and punctuation\n                    (<code>!\"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\\]^_`{|}~</code>).</p>\n                    <p>For best practices of using\n                    <code>MessageDeduplicationId</code>, see <a\n                    href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/using-messagededuplicationid-property.html\">Using\n                    the MessageDeduplicationId Property</a> in the <i>Amazon\n                    Simple Queue Service Developer Guide</i>.</p>\n                  type: string\n                MessageGroupId:\n                  description: \"<p>This parameter applies only to FIFO (first-in-first-out)\n                    queues.</p> <p>The tag that specifies that a message belongs\n                    to a specific message group. Messages that belong to the\n                    same message group are processed in a FIFO manner (however,\n                    messages in different message groups might be processed out\n                    of order). To interleave multiple ordered streams within a\n                    single queue, use <code>MessageGroupId</code> values (for\n                    example, session data for multiple users). In this scenario,\n                    multiple consumers can process the queue, but the session\n                    data of each user is processed in a FIFO fashion.</p> <ul>\n                    <li> <p>You must associate a non-empty\n                    <code>MessageGroupId</code> with a message. If you don't\n                    provide a <code>MessageGroupId</code>, the action fails.</p>\n                    </li> <li> <p> <code>ReceiveMessage</code> might return\n                    messages with multiple <code>MessageGroupId</code> values.\n                    For each <code>MessageGroupId</code>, the messages are\n                    sorted by time sent. The caller can't specify a\n                    <code>MessageGroupId</code>.</p> </li> </ul> <p>The length\n                    of <code>MessageGroupId</code> is 128 characters. Valid\n                    values: alphanumeric characters and punctuation\n                    <code>(!\\\"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\\\\]^_`{|}~)</code>\\\n                    .</p> <p>For best practices of using\n                    <code>MessageGroupId</code>, see <a\n                    href=\\\"https://docs.aws.amazon.com/AWSSimpleQueueService/la\\\n                    test/SQSDeveloperGuide/using-messagegroupid-property.html\\\"\\\n                    >Using the MessageGroupId Property</a> in the <i>Amazon\n                    Simple Queue Service Developer Guide</i>.</p> <important>\n                    <p> <code>MessageGroupId</code> is required for FIFO queues.\n                    You can't use it for Standard queues.</p> </important>\"\n                  type: string\n              required:\n                - MessageBody\n  \"/{AccountNumber}/{QueueName}/#Action=SendMessageBatch\":\n    get:\n      x-aws-operation-name: SendMessageBatch\n      operationId: GET SendMessageBatch\n      description: <p>Delivers up to ten messages to the specified queue. This is a batch\n        version of <code> <a>SendMessage</a>.</code> For a FIFO queue, multiple\n        messages within a single batch are enqueued in the order they are\n        sent.</p> <p>The result of sending each message is reported individually\n        in the response. Because the batch request can result in a combination\n        of successful and unsuccessful actions, you should check for batch\n        errors even when the call returns an HTTP status code of\n        <code>200</code>.</p> <p>The maximum allowed individual message size and\n        the maximum total payload size (the sum of the individual lengths of all\n        of the batched messages) are both 256 KB (262,144 bytes).</p>\n        <important> <p>A message can include only XML, JSON, and unformatted\n        text. The following Unicode characters are allowed:</p> <p>\n        <code>#x9</code> | <code>#xA</code> | <code>#xD</code> |\n        <code>#x20</code> to <code>#xD7FF</code> | <code>#xE000</code> to\n        <code>#xFFFD</code> | <code>#x10000</code> to <code>#x10FFFF</code> </p>\n        <p>Any characters not included in this list will be rejected. For more\n        information, see the <a\n        href=\"http://www.w3.org/TR/REC-xml/#charsets\">W3C specification for\n        characters</a>.</p> </important> <p>If you don't specify the\n        <code>DelaySeconds</code> parameter for an entry, Amazon SQS uses the\n        default value for the queue.</p> <p>Some actions take lists of\n        parameters. These lists are specified using the <code>param.n</code>\n        notation. Values of <code>n</code> are integers starting from 1. For\n        example, a parameter list with two elements looks like this:</p> <p>\n        <code>&amp;Attribute.1=first</code> </p> <p>\n        <code>&amp;Attribute.2=second</code> </p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/SendMessageBatchResult\"\n        \"480\":\n          description: TooManyEntriesInBatchRequest\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/TooManyEntriesInBatchRequest\"\n        \"481\":\n          description: EmptyBatchRequest\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/EmptyBatchRequest\"\n        \"482\":\n          description: BatchEntryIdsNotDistinct\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/BatchEntryIdsNotDistinct\"\n        \"483\":\n          description: BatchRequestTooLong\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/BatchRequestTooLong\"\n        \"484\":\n          description: InvalidBatchEntryId\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/InvalidBatchEntryId\"\n        \"485\":\n          description: UnsupportedOperation\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/UnsupportedOperation\"\n      parameters:\n        - name: Entries\n          in: query\n          required: true\n          description: A list of <code> <a>SendMessageBatchRequestEntry</a> </code> items.\n          schema:\n            type: array\n            items:\n              type: string\n        - in: path\n          name: AccountNumber\n          required: true\n          description: The AWS account number\n          schema:\n            type: integer\n        - in: path\n          name: QueueName\n          required: true\n          description: The name of the queue\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - SendMessageBatch\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2012-11-05\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    post:\n      x-aws-operation-name: SendMessageBatch\n      operationId: POST SendMessageBatch\n      description: <p>Delivers up to ten messages to the specified queue. This is a batch\n        version of <code> <a>SendMessage</a>.</code> For a FIFO queue, multiple\n        messages within a single batch are enqueued in the order they are\n        sent.</p> <p>The result of sending each message is reported individually\n        in the response. Because the batch request can result in a combination\n        of successful and unsuccessful actions, you should check for batch\n        errors even when the call returns an HTTP status code of\n        <code>200</code>.</p> <p>The maximum allowed individual message size and\n        the maximum total payload size (the sum of the individual lengths of all\n        of the batched messages) are both 256 KB (262,144 bytes).</p>\n        <important> <p>A message can include only XML, JSON, and unformatted\n        text. The following Unicode characters are allowed:</p> <p>\n        <code>#x9</code> | <code>#xA</code> | <code>#xD</code> |\n        <code>#x20</code> to <code>#xD7FF</code> | <code>#xE000</code> to\n        <code>#xFFFD</code> | <code>#x10000</code> to <code>#x10FFFF</code> </p>\n        <p>Any characters not included in this list will be rejected. For more\n        information, see the <a\n        href=\"http://www.w3.org/TR/REC-xml/#charsets\">W3C specification for\n        characters</a>.</p> </important> <p>If you don't specify the\n        <code>DelaySeconds</code> parameter for an entry, Amazon SQS uses the\n        default value for the queue.</p> <p>Some actions take lists of\n        parameters. These lists are specified using the <code>param.n</code>\n        notation. Values of <code>n</code> are integers starting from 1. For\n        example, a parameter list with two elements looks like this:</p> <p>\n        <code>&amp;Attribute.1=first</code> </p> <p>\n        <code>&amp;Attribute.2=second</code> </p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/SendMessageBatchResult\"\n        \"480\":\n          description: TooManyEntriesInBatchRequest\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/TooManyEntriesInBatchRequest\"\n        \"481\":\n          description: EmptyBatchRequest\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/EmptyBatchRequest\"\n        \"482\":\n          description: BatchEntryIdsNotDistinct\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/BatchEntryIdsNotDistinct\"\n        \"483\":\n          description: BatchRequestTooLong\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/BatchRequestTooLong\"\n        \"484\":\n          description: InvalidBatchEntryId\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/InvalidBatchEntryId\"\n        \"485\":\n          description: UnsupportedOperation\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/UnsupportedOperation\"\n      parameters:\n        - in: path\n          name: AccountNumber\n          required: true\n          description: The AWS account number\n          schema:\n            type: integer\n        - in: path\n          name: QueueName\n          required: true\n          description: The name of the queue\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - SendMessageBatch\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2012-11-05\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                Entries:\n                  description: A list of <code> <a>SendMessageBatchRequestEntry</a> </code>\n                    items.\n                  type: array\n                  items:\n                    type: string\n              required:\n                - Entries\n  \"/{AccountNumber}/{QueueName}/#Action=SetQueueAttributes\":\n    get:\n      x-aws-operation-name: SetQueueAttributes\n      operationId: GET SetQueueAttributes\n      description: <p>Sets the value of one or more queue attributes. When you change a\n        queue's attributes, the change can take up to 60 seconds for most of the\n        attributes to propagate throughout the Amazon SQS system. Changes made\n        to the <code>MessageRetentionPeriod</code> attribute can take up to 15\n        minutes.</p> <note> <ul> <li> <p>In the future, new attributes might be\n        added. If you write code that calls this action, we recommend that you\n        structure your code so that it can handle new attributes gracefully.</p>\n        </li> <li> <p>Cross-account permissions don't apply to this action. For\n        more information, see <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-customer-managed-policy-examples.html#grant-cross-account-permissions-to-role-and-user-name\">Grant\n        Cross-Account Permissions to a Role and a User Name</a> in the <i>Amazon\n        Simple Queue Service Developer Guide</i>.</p> </li> <li> <p>To remove\n        the ability to change queue permissions, you must deny permission to the\n        <code>AddPermission</code>, <code>RemovePermission</code>, and\n        <code>SetQueueAttributes</code> actions in your IAM policy.</p> </li>\n        </ul> </note>\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: InvalidAttributeName\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/InvalidAttributeName\"\n      parameters:\n        - name: Attribute.0.key\n          in: query\n          schema:\n            type: string\n        - name: Attribute.0.value\n          in: query\n          schema:\n            type: string\n        - name: Attribute.1.key\n          in: query\n          schema:\n            type: string\n        - name: Attribute.1.value\n          in: query\n          schema:\n            type: string\n        - name: Attribute.2.key\n          in: query\n          schema:\n            type: string\n        - name: Attribute.2.value\n          in: query\n          schema:\n            type: string\n        - in: path\n          name: AccountNumber\n          required: true\n          description: The AWS account number\n          schema:\n            type: integer\n        - in: path\n          name: QueueName\n          required: true\n          description: The name of the queue\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - SetQueueAttributes\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2012-11-05\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    post:\n      x-aws-operation-name: SetQueueAttributes\n      operationId: POST SetQueueAttributes\n      description: <p>Sets the value of one or more queue attributes. When you change a\n        queue's attributes, the change can take up to 60 seconds for most of the\n        attributes to propagate throughout the Amazon SQS system. Changes made\n        to the <code>MessageRetentionPeriod</code> attribute can take up to 15\n        minutes.</p> <note> <ul> <li> <p>In the future, new attributes might be\n        added. If you write code that calls this action, we recommend that you\n        structure your code so that it can handle new attributes gracefully.</p>\n        </li> <li> <p>Cross-account permissions don't apply to this action. For\n        more information, see <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-customer-managed-policy-examples.html#grant-cross-account-permissions-to-role-and-user-name\">Grant\n        Cross-Account Permissions to a Role and a User Name</a> in the <i>Amazon\n        Simple Queue Service Developer Guide</i>.</p> </li> <li> <p>To remove\n        the ability to change queue permissions, you must deny permission to the\n        <code>AddPermission</code>, <code>RemovePermission</code>, and\n        <code>SetQueueAttributes</code> actions in your IAM policy.</p> </li>\n        </ul> </note>\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: InvalidAttributeName\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/InvalidAttributeName\"\n      parameters:\n        - in: path\n          name: AccountNumber\n          required: true\n          description: The AWS account number\n          schema:\n            type: integer\n        - in: path\n          name: QueueName\n          required: true\n          description: The name of the queue\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - SetQueueAttributes\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2012-11-05\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                Attribute.0.key:\n                  type: string\n                Attribute.0.value:\n                  type: string\n                Attribute.1.key:\n                  type: string\n                Attribute.1.value:\n                  type: string\n                Attribute.2.key:\n                  type: string\n                Attribute.2.value:\n                  type: string\n  \"/{AccountNumber}/{QueueName}/#Action=TagQueue\":\n    get:\n      x-aws-operation-name: TagQueue\n      operationId: GET TagQueue\n      description: <p>Add cost allocation tags to the specified Amazon SQS queue. For an\n        overview, see <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-queue-tags.html\">Tagging\n        Your Amazon SQS Queues</a> in the <i>Amazon Simple Queue Service\n        Developer Guide</i>.</p> <p>When you use queue tags, keep the following\n        guidelines in mind:</p> <ul> <li> <p>Adding more than 50 tags to a queue\n        isn't recommended.</p> </li> <li> <p>Tags don't have any semantic\n        meaning. Amazon SQS interprets tags as character strings.</p> </li> <li>\n        <p>Tags are case-sensitive.</p> </li> <li> <p>A new tag with a key\n        identical to that of an existing tag overwrites the existing tag.</p>\n        </li> </ul> <p>For a full list of tag restrictions, see <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-limits.html#limits-queues\">Limits\n        Related to Queues</a> in the <i>Amazon Simple Queue Service Developer\n        Guide</i>.</p> <note> <p>Cross-account permissions don't apply to this\n        action. For more information, see <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-customer-managed-policy-examples.html#grant-cross-account-permissions-to-role-and-user-name\">Grant\n        Cross-Account Permissions to a Role and a User Name</a> in the <i>Amazon\n        Simple Queue Service Developer Guide</i>.</p> </note>\n      responses:\n        \"200\":\n          description: Success\n      parameters:\n        - name: Tags.0.key\n          in: query\n          schema:\n            type: string\n        - name: Tags.0.value\n          in: query\n          schema:\n            type: string\n        - name: Tags.1.key\n          in: query\n          schema:\n            type: string\n        - name: Tags.1.value\n          in: query\n          schema:\n            type: string\n        - name: Tags.2.key\n          in: query\n          schema:\n            type: string\n        - name: Tags.2.value\n          in: query\n          schema:\n            type: string\n        - in: path\n          name: AccountNumber\n          required: true\n          description: The AWS account number\n          schema:\n            type: integer\n        - in: path\n          name: QueueName\n          required: true\n          description: The name of the queue\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - TagQueue\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2012-11-05\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    post:\n      x-aws-operation-name: TagQueue\n      operationId: POST TagQueue\n      description: <p>Add cost allocation tags to the specified Amazon SQS queue. For an\n        overview, see <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-queue-tags.html\">Tagging\n        Your Amazon SQS Queues</a> in the <i>Amazon Simple Queue Service\n        Developer Guide</i>.</p> <p>When you use queue tags, keep the following\n        guidelines in mind:</p> <ul> <li> <p>Adding more than 50 tags to a queue\n        isn't recommended.</p> </li> <li> <p>Tags don't have any semantic\n        meaning. Amazon SQS interprets tags as character strings.</p> </li> <li>\n        <p>Tags are case-sensitive.</p> </li> <li> <p>A new tag with a key\n        identical to that of an existing tag overwrites the existing tag.</p>\n        </li> </ul> <p>For a full list of tag restrictions, see <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-limits.html#limits-queues\">Limits\n        Related to Queues</a> in the <i>Amazon Simple Queue Service Developer\n        Guide</i>.</p> <note> <p>Cross-account permissions don't apply to this\n        action. For more information, see <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-customer-managed-policy-examples.html#grant-cross-account-permissions-to-role-and-user-name\">Grant\n        Cross-Account Permissions to a Role and a User Name</a> in the <i>Amazon\n        Simple Queue Service Developer Guide</i>.</p> </note>\n      responses:\n        \"200\":\n          description: Success\n      parameters:\n        - in: path\n          name: AccountNumber\n          required: true\n          description: The AWS account number\n          schema:\n            type: integer\n        - in: path\n          name: QueueName\n          required: true\n          description: The name of the queue\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - TagQueue\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2012-11-05\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                Tags.0.key:\n                  type: string\n                Tags.0.value:\n                  type: string\n                Tags.1.key:\n                  type: string\n                Tags.1.value:\n                  type: string\n                Tags.2.key:\n                  type: string\n                Tags.2.value:\n                  type: string\n  \"/{AccountNumber}/{QueueName}/#Action=UntagQueue\":\n    get:\n      x-aws-operation-name: UntagQueue\n      operationId: GET UntagQueue\n      description: <p>Remove cost allocation tags from the specified Amazon SQS queue. For\n        an overview, see <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-queue-tags.html\">Tagging\n        Your Amazon SQS Queues</a> in the <i>Amazon Simple Queue Service\n        Developer Guide</i>.</p> <note> <p>Cross-account permissions don't apply\n        to this action. For more information, see <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-customer-managed-policy-examples.html#grant-cross-account-permissions-to-role-and-user-name\">Grant\n        Cross-Account Permissions to a Role and a User Name</a> in the <i>Amazon\n        Simple Queue Service Developer Guide</i>.</p> </note>\n      responses:\n        \"200\":\n          description: Success\n      parameters:\n        - name: TagKeys\n          in: query\n          required: true\n          description: The list of tags to be removed from the specified queue.\n          schema:\n            type: array\n            items:\n              type: string\n        - in: path\n          name: AccountNumber\n          required: true\n          description: The AWS account number\n          schema:\n            type: integer\n        - in: path\n          name: QueueName\n          required: true\n          description: The name of the queue\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - UntagQueue\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2012-11-05\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    post:\n      x-aws-operation-name: UntagQueue\n      operationId: POST UntagQueue\n      description: <p>Remove cost allocation tags from the specified Amazon SQS queue. For\n        an overview, see <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-queue-tags.html\">Tagging\n        Your Amazon SQS Queues</a> in the <i>Amazon Simple Queue Service\n        Developer Guide</i>.</p> <note> <p>Cross-account permissions don't apply\n        to this action. For more information, see <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-customer-managed-policy-examples.html#grant-cross-account-permissions-to-role-and-user-name\">Grant\n        Cross-Account Permissions to a Role and a User Name</a> in the <i>Amazon\n        Simple Queue Service Developer Guide</i>.</p> </note>\n      responses:\n        \"200\":\n          description: Success\n      parameters:\n        - in: path\n          name: AccountNumber\n          required: true\n          description: The AWS account number\n          schema:\n            type: integer\n        - in: path\n          name: QueueName\n          required: true\n          description: The name of the queue\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - UntagQueue\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2012-11-05\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                TagKeys:\n                  description: The list of tags to be removed from the specified queue.\n                  type: array\n                  items:\n                    type: string\n              required:\n                - TagKeys\nservers:\n  - url: http://sqs.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-south-1\n          - sa-east-1\n        default: us-east-1\n    description: The Amazon SQS multi-region endpoint\n  - url: https://sqs.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-south-1\n          - sa-east-1\n        default: us-east-1\n    description: The Amazon SQS multi-region endpoint\n  - url: http://sqs.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Amazon SQS endpoint for China (Beijing) and China (Ningxia)\n  - url: https://sqs.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Amazon SQS endpoint for China (Beijing) and China (Ningxia)\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      required: false\n      schema:\n        type: string\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    String:\n      type: string\n    OverLimit: {}\n    MessageNotInflight: {}\n    ReceiptHandleIsInvalid: {}\n    ChangeMessageVisibilityBatchResult:\n      type: object\n      required:\n        - Successful\n        - Failed\n      properties:\n        Successful:\n          $ref: \"#/components/schemas/ChangeMessageVisibilityBatchResultEntryList\"\n        Failed:\n          $ref: \"#/components/schemas/BatchResultErrorEntryList\"\n      description: For each message in the batch, the response contains a <code>\n        <a>ChangeMessageVisibilityBatchResultEntry</a> </code> tag if the\n        message succeeds or a <code> <a>BatchResultErrorEntry</a> </code> tag if\n        the message fails.\n    ChangeMessageVisibilityBatchRequestEntry:\n      type: object\n      required:\n        - Id\n        - ReceiptHandle\n      properties:\n        Id:\n          $ref: \"#/components/schemas/String\"\n        ReceiptHandle:\n          $ref: \"#/components/schemas/String\"\n        VisibilityTimeout:\n          $ref: \"#/components/schemas/Integer\"\n      description: <p>Encloses a receipt handle and an entry id for each message in <code>\n        <a>ChangeMessageVisibilityBatch</a>.</code> </p> <important> <p>All of\n        the following list parameters must be prefixed with\n        <code>ChangeMessageVisibilityBatchRequestEntry.n</code>, where\n        <code>n</code> is an integer value starting with <code>1</code>. For\n        example, a parameter list for this action might look like this:</p>\n        </important> <p>\n        <code>&amp;ChangeMessageVisibilityBatchRequestEntry.1.Id=change_visibility_msg_2</code>\n        </p> <p>\n        <code>&amp;ChangeMessageVisibilityBatchRequestEntry.1.ReceiptHandle=your_receipt_handle</code>\n        </p> <p>\n        <code>&amp;ChangeMessageVisibilityBatchRequestEntry.1.VisibilityTimeout=45</code>\n        </p>\n    TooManyEntriesInBatchRequest: {}\n    EmptyBatchRequest: {}\n    BatchEntryIdsNotDistinct: {}\n    InvalidBatchEntryId: {}\n    CreateQueueResult:\n      type: object\n      properties:\n        QueueUrl:\n          $ref: \"#/components/schemas/String\"\n      description: Returns the <code>QueueUrl</code> attribute of the created queue.\n    TagValue:\n      type: string\n    QueueDeletedRecently: {}\n    QueueNameExists: {}\n    InvalidIdFormat: {}\n    DeleteMessageBatchResult:\n      type: object\n      required:\n        - Successful\n        - Failed\n      properties:\n        Successful:\n          $ref: \"#/components/schemas/DeleteMessageBatchResultEntryList\"\n        Failed:\n          $ref: \"#/components/schemas/BatchResultErrorEntryList\"\n      description: For each message in the batch, the response contains a <code>\n        <a>DeleteMessageBatchResultEntry</a> </code> tag if the message is\n        deleted or a <code> <a>BatchResultErrorEntry</a> </code> tag if the\n        message can't be deleted.\n    DeleteMessageBatchRequestEntry:\n      type: object\n      required:\n        - Id\n        - ReceiptHandle\n      properties:\n        Id:\n          $ref: \"#/components/schemas/String\"\n        ReceiptHandle:\n          $ref: \"#/components/schemas/String\"\n      description: Encloses a receipt handle and an identifier for it.\n    GetQueueAttributesResult:\n      type: object\n      properties:\n        Attributes:\n          $ref: \"#/components/schemas/QueueAttributeMap\"\n      description: A list of returned queue attributes.\n    QueueAttributeName:\n      type: string\n      enum:\n        - All\n        - Policy\n        - VisibilityTimeout\n        - MaximumMessageSize\n        - MessageRetentionPeriod\n        - ApproximateNumberOfMessages\n        - ApproximateNumberOfMessagesNotVisible\n        - CreatedTimestamp\n        - LastModifiedTimestamp\n        - QueueArn\n        - ApproximateNumberOfMessagesDelayed\n        - DelaySeconds\n        - ReceiveMessageWaitTimeSeconds\n        - RedrivePolicy\n        - FifoQueue\n        - ContentBasedDeduplication\n        - KmsMasterKeyId\n        - KmsDataKeyReusePeriodSeconds\n    InvalidAttributeName: {}\n    GetQueueUrlResult:\n      type: object\n      properties:\n        QueueUrl:\n          $ref: \"#/components/schemas/String\"\n      description: For more information, see <a\n        href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-api-responses.html\">Interpreting\n        Responses</a> in the <i>Amazon Simple Queue Service Developer Guide</i>.\n    QueueDoesNotExist: {}\n    ListDeadLetterSourceQueuesResult:\n      type: object\n      required:\n        - queueUrls\n      properties:\n        queueUrls:\n          $ref: \"#/components/schemas/QueueUrlList\"\n      description: A list of your dead letter source queues.\n    ListQueueTagsResult:\n      type: object\n      properties:\n        Tags:\n          $ref: \"#/components/schemas/TagMap\"\n    ListQueuesResult:\n      type: object\n      properties:\n        QueueUrls:\n          $ref: \"#/components/schemas/QueueUrlList\"\n      description: A list of your queues.\n    PurgeQueueInProgress: {}\n    ReceiveMessageResult:\n      type: object\n      properties:\n        Messages:\n          $ref: \"#/components/schemas/MessageList\"\n      description: A list of received messages.\n    MessageAttributeName:\n      type: string\n    SendMessageResult:\n      type: object\n      properties:\n        MD5OfMessageBody:\n          $ref: \"#/components/schemas/String\"\n        MD5OfMessageAttributes:\n          $ref: \"#/components/schemas/String\"\n        MD5OfMessageSystemAttributes:\n          $ref: \"#/components/schemas/String\"\n        MessageId:\n          $ref: \"#/components/schemas/String\"\n        SequenceNumber:\n          $ref: \"#/components/schemas/String\"\n      description: The <code>MD5OfMessageBody</code> and <code>MessageId</code> elements.\n    MessageAttributeValue:\n      type: object\n      required:\n        - DataType\n      properties:\n        StringValue:\n          $ref: \"#/components/schemas/String\"\n        BinaryValue:\n          $ref: \"#/components/schemas/Binary\"\n        StringListValues:\n          $ref: \"#/components/schemas/StringList\"\n        BinaryListValues:\n          $ref: \"#/components/schemas/BinaryList\"\n        DataType:\n          $ref: \"#/components/schemas/String\"\n      description: <p>The user-specified message attribute value. For string data types,\n        the <code>Value</code> attribute has the same restrictions on the\n        content as the message body. For more information, see <code>\n        <a>SendMessage</a>.</code> </p> <p> <code>Name</code>,\n        <code>type</code>, <code>value</code> and the message body must not be\n        empty or null. All parts of the message attribute, including\n        <code>Name</code>, <code>Type</code>, and <code>Value</code>, are part\n        of the message size restriction (256 KB or 262,144 bytes).</p>\n      xml:\n        wrapped: false\n    MessageSystemAttributeValue:\n      type: object\n      required:\n        - DataType\n      properties:\n        StringValue:\n          $ref: \"#/components/schemas/String\"\n        BinaryValue:\n          $ref: \"#/components/schemas/Binary\"\n        StringListValues:\n          $ref: \"#/components/schemas/StringList\"\n        BinaryListValues:\n          $ref: \"#/components/schemas/BinaryList\"\n        DataType:\n          $ref: \"#/components/schemas/String\"\n      description: <p>The user-specified message system attribute value. For string data\n        types, the <code>Value</code> attribute has the same restrictions on the\n        content as the message body. For more information, see <code>\n        <a>SendMessage</a>.</code> </p> <p> <code>Name</code>,\n        <code>type</code>, <code>value</code> and the message body must not be\n        empty or null.</p>\n      xml:\n        wrapped: false\n    InvalidMessageContents: {}\n    UnsupportedOperation: {}\n    SendMessageBatchResult:\n      type: object\n      required:\n        - Successful\n        - Failed\n      properties:\n        Successful:\n          $ref: \"#/components/schemas/SendMessageBatchResultEntryList\"\n        Failed:\n          $ref: \"#/components/schemas/BatchResultErrorEntryList\"\n      description: For each message in the batch, the response contains a <code>\n        <a>SendMessageBatchResultEntry</a> </code> tag if the message succeeds\n        or a <code> <a>BatchResultErrorEntry</a> </code> tag if the message\n        fails.\n    SendMessageBatchRequestEntry:\n      type: object\n      required:\n        - Id\n        - MessageBody\n      properties:\n        Id:\n          $ref: \"#/components/schemas/String\"\n        MessageBody:\n          $ref: \"#/components/schemas/String\"\n        DelaySeconds:\n          $ref: \"#/components/schemas/Integer\"\n        MessageAttributes:\n          $ref: \"#/components/schemas/MessageBodyAttributeMap\"\n        MessageSystemAttributes:\n          $ref: \"#/components/schemas/MessageBodySystemAttributeMap\"\n        MessageDeduplicationId:\n          $ref: \"#/components/schemas/String\"\n        MessageGroupId:\n          $ref: \"#/components/schemas/String\"\n      description: Contains the details of a single Amazon SQS message along with an\n        <code>Id</code>.\n    BatchRequestTooLong: {}\n    TagKey:\n      type: string\n    AWSAccountIdList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/String\"\n      xml:\n        wrapped: false\n    ActionNameList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/String\"\n      xml:\n        wrapped: false\n    AddPermissionRequest:\n      type: object\n      required:\n        - QueueUrl\n        - Label\n        - AWSAccountIds\n        - Actions\n      properties:\n        QueueUrl:\n          $ref: \"#/components/schemas/String\"\n        Label:\n          $ref: \"#/components/schemas/String\"\n        AWSAccountIds:\n          $ref: \"#/components/schemas/AWSAccountIdList\"\n        Actions:\n          $ref: \"#/components/schemas/ActionNameList\"\n      description: <p/>\n    AttributeNameList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/QueueAttributeName\"\n      xml:\n        wrapped: false\n    Boolean:\n      type: boolean\n    BatchResultErrorEntry:\n      type: object\n      required:\n        - Id\n        - SenderFault\n        - Code\n      properties:\n        Id:\n          $ref: \"#/components/schemas/String\"\n        SenderFault:\n          $ref: \"#/components/schemas/Boolean\"\n        Code:\n          $ref: \"#/components/schemas/String\"\n        Message:\n          $ref: \"#/components/schemas/String\"\n      description: Gives a detailed description of the result of an action on each entry in\n        the request.\n    BatchResultErrorEntryList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/BatchResultErrorEntry\"\n      xml:\n        wrapped: false\n    Binary:\n      type: string\n    BinaryList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Binary\"\n    ChangeMessageVisibilityBatchRequestEntryList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/ChangeMessageVisibilityBatchRequestEntry\"\n      xml:\n        wrapped: false\n    ChangeMessageVisibilityBatchRequest:\n      type: object\n      required:\n        - QueueUrl\n        - Entries\n      properties:\n        QueueUrl:\n          $ref: \"#/components/schemas/String\"\n        Entries:\n          $ref: \"#/components/schemas/ChangeMessageVisibilityBatchRequestEntryList\"\n      description: <p/>\n    Integer:\n      type: integer\n    ChangeMessageVisibilityBatchResultEntryList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/ChangeMessageVisibilityBatchResultEntry\"\n      xml:\n        wrapped: false\n    ChangeMessageVisibilityBatchResultEntry:\n      type: object\n      required:\n        - Id\n      properties:\n        Id:\n          $ref: \"#/components/schemas/String\"\n      description: \"Encloses the <code>Id</code> of an entry in <code>\n        <a>ChangeMessageVisibilityBatch</a>.</code> \"\n    ChangeMessageVisibilityRequest:\n      type: object\n      required:\n        - QueueUrl\n        - ReceiptHandle\n        - VisibilityTimeout\n      properties:\n        QueueUrl:\n          $ref: \"#/components/schemas/String\"\n        ReceiptHandle:\n          $ref: \"#/components/schemas/String\"\n        VisibilityTimeout:\n          $ref: \"#/components/schemas/Integer\"\n    QueueAttributeMap:\n      type: object\n      additionalProperties:\n        $ref: \"#/components/schemas/String\"\n      xml:\n        wrapped: false\n    TagMap:\n      type: object\n      additionalProperties:\n        $ref: \"#/components/schemas/TagValue\"\n      xml:\n        wrapped: false\n    CreateQueueRequest:\n      type: object\n      required:\n        - QueueName\n      properties:\n        QueueName:\n          $ref: \"#/components/schemas/String\"\n        Attributes:\n          $ref: \"#/components/schemas/QueueAttributeMap\"\n        tags:\n          $ref: \"#/components/schemas/TagMap\"\n      description: <p/>\n    DeleteMessageBatchRequestEntryList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/DeleteMessageBatchRequestEntry\"\n      xml:\n        wrapped: false\n    DeleteMessageBatchRequest:\n      type: object\n      required:\n        - QueueUrl\n        - Entries\n      properties:\n        QueueUrl:\n          $ref: \"#/components/schemas/String\"\n        Entries:\n          $ref: \"#/components/schemas/DeleteMessageBatchRequestEntryList\"\n      description: <p/>\n    DeleteMessageBatchResultEntryList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/DeleteMessageBatchResultEntry\"\n      xml:\n        wrapped: false\n    DeleteMessageBatchResultEntry:\n      type: object\n      required:\n        - Id\n      properties:\n        Id:\n          $ref: \"#/components/schemas/String\"\n      description: \"Encloses the <code>Id</code> of an entry in <code>\n        <a>DeleteMessageBatch</a>.</code> \"\n    DeleteMessageRequest:\n      type: object\n      required:\n        - QueueUrl\n        - ReceiptHandle\n      properties:\n        QueueUrl:\n          $ref: \"#/components/schemas/String\"\n        ReceiptHandle:\n          $ref: \"#/components/schemas/String\"\n      description: <p/>\n    DeleteQueueRequest:\n      type: object\n      required:\n        - QueueUrl\n      properties:\n        QueueUrl:\n          $ref: \"#/components/schemas/String\"\n      description: <p/>\n    GetQueueAttributesRequest:\n      type: object\n      required:\n        - QueueUrl\n      properties:\n        QueueUrl:\n          $ref: \"#/components/schemas/String\"\n        AttributeNames:\n          $ref: \"#/components/schemas/AttributeNameList\"\n      description: <p/>\n    GetQueueUrlRequest:\n      type: object\n      required:\n        - QueueName\n      properties:\n        QueueName:\n          $ref: \"#/components/schemas/String\"\n        QueueOwnerAWSAccountId:\n          $ref: \"#/components/schemas/String\"\n      description: <p/>\n    ListDeadLetterSourceQueuesRequest:\n      type: object\n      required:\n        - QueueUrl\n      properties:\n        QueueUrl:\n          $ref: \"#/components/schemas/String\"\n      description: <p/>\n    QueueUrlList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/String\"\n      xml:\n        wrapped: false\n    ListQueueTagsRequest:\n      type: object\n      required:\n        - QueueUrl\n      properties:\n        QueueUrl:\n          $ref: \"#/components/schemas/String\"\n    ListQueuesRequest:\n      type: object\n      properties:\n        QueueNamePrefix:\n          $ref: \"#/components/schemas/String\"\n      description: <p/>\n    MessageSystemAttributeMap:\n      type: object\n      additionalProperties:\n        $ref: \"#/components/schemas/String\"\n      xml:\n        wrapped: false\n    MessageBodyAttributeMap:\n      type: object\n      additionalProperties:\n        $ref: \"#/components/schemas/MessageAttributeValue\"\n      xml:\n        wrapped: false\n    Message:\n      type: object\n      properties:\n        MessageId:\n          $ref: \"#/components/schemas/String\"\n        ReceiptHandle:\n          $ref: \"#/components/schemas/String\"\n        MD5OfBody:\n          $ref: \"#/components/schemas/String\"\n        Body:\n          $ref: \"#/components/schemas/String\"\n        Attributes:\n          $ref: \"#/components/schemas/MessageSystemAttributeMap\"\n        MD5OfMessageAttributes:\n          $ref: \"#/components/schemas/String\"\n        MessageAttributes:\n          $ref: \"#/components/schemas/MessageBodyAttributeMap\"\n      description: An Amazon SQS message.\n    MessageAttributeNameList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/MessageAttributeName\"\n      xml:\n        wrapped: false\n    StringList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/String\"\n    MessageBodySystemAttributeMap:\n      type: object\n      additionalProperties:\n        $ref: \"#/components/schemas/MessageSystemAttributeValue\"\n      xml:\n        wrapped: false\n    MessageList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Message\"\n      xml:\n        wrapped: false\n    MessageSystemAttributeName:\n      type: string\n      enum:\n        - SenderId\n        - SentTimestamp\n        - ApproximateReceiveCount\n        - ApproximateFirstReceiveTimestamp\n        - SequenceNumber\n        - MessageDeduplicationId\n        - MessageGroupId\n        - AWSTraceHeader\n    MessageSystemAttributeNameForSends:\n      type: string\n      enum:\n        - AWSTraceHeader\n    PurgeQueueRequest:\n      type: object\n      required:\n        - QueueUrl\n      properties:\n        QueueUrl:\n          $ref: \"#/components/schemas/String\"\n      description: <p/>\n    ReceiveMessageRequest:\n      type: object\n      required:\n        - QueueUrl\n      properties:\n        QueueUrl:\n          $ref: \"#/components/schemas/String\"\n        AttributeNames:\n          $ref: \"#/components/schemas/AttributeNameList\"\n        MessageAttributeNames:\n          $ref: \"#/components/schemas/MessageAttributeNameList\"\n        MaxNumberOfMessages:\n          $ref: \"#/components/schemas/Integer\"\n        VisibilityTimeout:\n          $ref: \"#/components/schemas/Integer\"\n        WaitTimeSeconds:\n          $ref: \"#/components/schemas/Integer\"\n        ReceiveRequestAttemptId:\n          $ref: \"#/components/schemas/String\"\n      description: <p/>\n    RemovePermissionRequest:\n      type: object\n      required:\n        - QueueUrl\n        - Label\n      properties:\n        QueueUrl:\n          $ref: \"#/components/schemas/String\"\n        Label:\n          $ref: \"#/components/schemas/String\"\n      description: <p/>\n    SendMessageBatchRequestEntryList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/SendMessageBatchRequestEntry\"\n      xml:\n        wrapped: false\n    SendMessageBatchRequest:\n      type: object\n      required:\n        - QueueUrl\n        - Entries\n      properties:\n        QueueUrl:\n          $ref: \"#/components/schemas/String\"\n        Entries:\n          $ref: \"#/components/schemas/SendMessageBatchRequestEntryList\"\n      description: <p/>\n    SendMessageBatchResultEntryList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/SendMessageBatchResultEntry\"\n      xml:\n        wrapped: false\n    SendMessageBatchResultEntry:\n      type: object\n      required:\n        - Id\n        - MessageId\n        - MD5OfMessageBody\n      properties:\n        Id:\n          $ref: \"#/components/schemas/String\"\n        MessageId:\n          $ref: \"#/components/schemas/String\"\n        MD5OfMessageBody:\n          $ref: \"#/components/schemas/String\"\n        MD5OfMessageAttributes:\n          $ref: \"#/components/schemas/String\"\n        MD5OfMessageSystemAttributes:\n          $ref: \"#/components/schemas/String\"\n        SequenceNumber:\n          $ref: \"#/components/schemas/String\"\n      description: \"Encloses a <code>MessageId</code> for a successfully-enqueued message\n        in a <code> <a>SendMessageBatch</a>.</code> \"\n    SendMessageRequest:\n      type: object\n      required:\n        - QueueUrl\n        - MessageBody\n      properties:\n        QueueUrl:\n          $ref: \"#/components/schemas/String\"\n        MessageBody:\n          $ref: \"#/components/schemas/String\"\n        DelaySeconds:\n          $ref: \"#/components/schemas/Integer\"\n        MessageAttributes:\n          $ref: \"#/components/schemas/MessageBodyAttributeMap\"\n        MessageSystemAttributes:\n          $ref: \"#/components/schemas/MessageBodySystemAttributeMap\"\n        MessageDeduplicationId:\n          $ref: \"#/components/schemas/String\"\n        MessageGroupId:\n          $ref: \"#/components/schemas/String\"\n      description: <p/>\n    SetQueueAttributesRequest:\n      type: object\n      required:\n        - QueueUrl\n        - Attributes\n      properties:\n        QueueUrl:\n          $ref: \"#/components/schemas/String\"\n        Attributes:\n          $ref: \"#/components/schemas/QueueAttributeMap\"\n      description: <p/>\n    TagKeyList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/TagKey\"\n      xml:\n        wrapped: false\n    TagQueueRequest:\n      type: object\n      required:\n        - QueueUrl\n        - Tags\n      properties:\n        QueueUrl:\n          $ref: \"#/components/schemas/String\"\n        Tags:\n          $ref: \"#/components/schemas/TagMap\"\n    UntagQueueRequest:\n      type: object\n      required:\n        - QueueUrl\n        - TagKeys\n      properties:\n        QueueUrl:\n          $ref: \"#/components/schemas/String\"\n        TagKeys:\n          $ref: \"#/components/schemas/TagKeyList\"\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/amazonaws.com-sqs-2012-11-05-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/amazonaws.com-sqs-2012-11-05-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/{AccountNumber}/{QueueName}/#Action=DeleteMessage\": at 1:71609: get: operation \"GET DeleteMessage\": at 1:71616: parse path \"/{AccountNumber}/{QueueName}/#Action=DeleteMessage\": path MUST NOT contain a fragment"
}