{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bigcommerce/api-specs"
		},
		"file": {
			"name": "store_content.v2.yml",
			"size": 0,
			"path": "reference/store_content.v2.yml",
			"byteSize": 68965,
			"content": "openapi: 3.0.1\ninfo:\n  title: Content\n  description: |-\n    Manage blog posts, blog tags, content pages, and redirects.\n\n    \u003c!-- theme: warning --\u003e\n    \u003e #### Note\n    \u003e * Redirects V2 are deprecated; use [V3 Redirects](/api-reference/storefront/redirects/redirects/getredirects) instead. \n  version: ''\nservers:\n  - url: 'https://api.bigcommerce.com'\nsecurity:\n  - X-Auth-Token: []\ntags:\n  - name: Blog Posts\n  - name: Blog Tags\n  - name: Pages\n  - name: Redirects\npaths:\n  '/stores/{store_hash}/v2/blog/tags':\n    get:\n      tags:\n        - Blog Tags\n      summary: Get All Blog Tags\n      description: Returns a list of *Blog Tags*.\n      operationId: getAllBlogTags\n      parameters:\n        - name: store_hash\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/blogTags'\n  '/stores/{store_hash}/v2/blog/posts':\n    get:\n      tags:\n        - Blog Posts\n      summary: Get All Blog Posts\n      description: 'Returns all *Blog Posts*. Default sorting is by published_date, beginning with the most recent post.'\n      operationId: getAllBlogPosts\n      parameters:\n        - name: store_hash\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: is_published\n          in: query\n          description: Filter param.\n          schema:\n            type: string\n        - name: url\n          in: query\n          description: Filter param. Value must be URL encoded.\n          schema:\n            type: string\n        - name: tag\n          in: query\n          description: Filter param.\n          schema:\n            type: string\n        - name: published_date\n          in: query\n          description: Filter param.\n          schema:\n            type: string\n            format: date-time\n        - name: page\n          in: query\n          description: Filter param.\n          schema:\n            maximum: 50\n            exclusiveMinimum: false\n            type: number\n        - name: limit\n          in: query\n          description: Filter param.\n          schema:\n            maximum: 250\n            exclusiveMaximum: false\n            exclusiveMinimum: false\n            type: number\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/blogPost_Full'\n              example:\n                - id: 3\n                  title: Hello Again\n                  url: /blog/hello-again/\n                  preview_url: /blog/hello-again/\n                  body: \u003cp\u003eJelly beans muffin marzipan gingerbread donut dessert. Cheesecake cheesecake sugar plum cookie cake tart. Soufflé sesame snaps jelly beans brownie chocolate tart. Marshmallow jujubes candy pie. Gummies lemon drops tart soufflé pastry pie. Caramels wafer biscuit gummi bears. Liquorice toffee wafer bear claw marzipan jelly-o. Dessert bear claw topping icing croissant. Pie bonbon chocolate bar chocolate bar tiramisu chocolate lemon drops candy.\u003c/p\u003e\u003cp\u003eMarshmallow cupcake sweet roll candy marshmallow caramels cotton candy pie icing. Powder jelly beans chupa chups lollipop liquorice marzipan dessert soufflé sesame snaps. Macaroon chupa chups gummies cheesecake ice cream caramels sesame snaps cotton candy gingerbread. Chocolate cake fruitcake tart bear claw lemon drops tart dragée tart apple pie. Halvah chupa chups soufflé jelly soufflé marshmallow. Croissant tart tart. Gingerbread apple pie biscuit.\u003c/p\u003e\u003cp\u003eWafer lemon drops tart pastry brownie chocolate bar jelly. Dragée muffin cupcake liquorice caramels marzipan gingerbread marzipan. Apple pie pudding jelly sweet roll croissant bonbon wafer. Cookie chocolate bar sesame snaps bonbon macaroon candy canes donut sugar plum. Bear claw bonbon tootsie roll bonbon. Apple pie gummies donut sweet. Marzipan bear claw cotton candy topping dragée bonbon danish powder.\u003c/p\u003e\n                  tags:\n                    - sugar\n                    - sweet\n                    - spice\n                    - everything\n                    - nice\n                  summary: 'Jelly beans muffin marzipan gingerbread donut dessert. Cheesecake cheesecake sugar plum cookie cake tart. Soufflé sesame snaps jelly beans brownie chocolate tart. Marshmallow jujubes candy pie. Gummies lemon drops tart soufflé pastry pie. Caramels wafer biscuit gummi bears. Liquorice toffee wafer bear claw marzipan jelly-o. Dessert bear claw topping icing croissant. Pie bonbon chocolate bar [...]'\n                  is_published: true\n                  published_date:\n                    date: '2018-05-18 08:26:42.000000'\n                    timezone_type: 1\n                    timezone: '+00:00'\n                  published_date_iso8601: '2018-05-18T13:26:42+0000'\n                  meta_description: Cupcakes post 2\n                  meta_keywords: 'sugar,sweet,spice,everything,nice'\n                  author: ''\n                  thumbnail_path: ''\n                - id: 2\n                  title: Hello\n                  url: /blog/hello/\n                  preview_url: /blog/hello/\n                  body: \u003cp\u003eJelly beans muffin marzipan gingerbread donut dessert. Cheesecake cheesecake sugar plum cookie cake tart. Soufflé sesame snaps jelly beans brownie chocolate tart. Marshmallow jujubes candy pie. Gummies lemon drops tart soufflé pastry pie. Caramels wafer biscuit gummi bears. Liquorice toffee wafer bear claw marzipan jelly-o. Dessert bear claw topping icing croissant. Pie bonbon chocolate bar chocolate bar tiramisu chocolate lemon drops candy.\u003c/p\u003e\u003cp\u003eMarshmallow cupcake sweet roll candy marshmallow caramels cotton candy pie icing. Powder jelly beans chupa chups lollipop liquorice marzipan dessert soufflé sesame snaps. Macaroon chupa chups gummies cheesecake ice cream caramels sesame snaps cotton candy gingerbread. Chocolate cake fruitcake tart bear claw lemon drops tart dragée tart apple pie. Halvah chupa chups soufflé jelly soufflé marshmallow. Croissant tart tart. Gingerbread apple pie biscuit.\u003c/p\u003e\u003cp\u003eWafer lemon drops tart pastry brownie chocolate bar jelly. Dragée muffin cupcake liquorice caramels marzipan gingerbread marzipan. Apple pie pudding jelly sweet roll croissant bonbon wafer. Cookie chocolate bar sesame snaps bonbon macaroon candy canes donut sugar plum. Bear claw bonbon tootsie roll bonbon. Apple pie gummies donut sweet. Marzipan bear claw cotton candy topping dragée bonbon danish powder.\u003c/p\u003e\n                  tags:\n                    - cupcakes\n                    - sugar\n                    - sweet\n                  summary: 'Jelly beans muffin marzipan gingerbread donut dessert. Cheesecake cheesecake sugar plum cookie cake tart. Soufflé sesame snaps jelly beans brownie chocolate tart. Marshmallow jujubes candy pie. Gummies lemon drops tart soufflé pastry pie. Caramels wafer biscuit gummi bears. Liquorice toffee wafer bear claw marzipan jelly-o. Dessert bear claw topping icing croissant. Pie bonbon chocolate bar [...]'\n                  is_published: true\n                  published_date:\n                    date: '2018-05-18 08:26:00.000000'\n                    timezone_type: 1\n                    timezone: '+00:00'\n                  published_date_iso8601: '2018-05-18T13:26:00+0000'\n                  meta_description: cupcake blog post\n                  meta_keywords: 'cupcakes,sugar,sweet'\n                  author: ''\n                  thumbnail_path: ''\n                - id: 1\n                  title: Your first blog post!\n                  url: /your-first-blog-post/\n                  preview_url: /your-first-blog-post/\n                  body: '\u003cp\u003e \u003cstrong\u003eWelcome to your blog!\u003c/strong\u003e\u003cbr\u003e A blog is a great place to share details on your products, business and whatever else you think your shoppers might like to hear from you. You can include photos in your blog posts and even videos. For ideas and inspiration on how to structure your blog, take a look at the Bigcommerce \u003ca href=''http://blog.bigcommerce.com/'' target=''_blank'' rel=''nofollow''\u003eecommerce blog\u003c/a\u003e.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eHow can I delete this post?\u003c/strong\u003e\u003cbr\u003eTo delete this post and add your own, login to your \u003ca href=''/admin'' target=''_blank''\u003eadmin area\u003c/a\u003e and go to Storefront \u003e Blog in the left hand menu.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003ePowered by Bigcommerce\u003c/strong\u003e\u003cbr\u003eYour website, online store and blog are powered by Bigcommerce \u003ca href=''http://www.bigcommerce.com/'' target=''_blank'' rel=''nofollow''\u003eecommerce software\u003c/a\u003e. It includes everything you need to run a beautiful online store including \u003ca href=''http://www.bigcommerce.com/templates/'' target=''_blank'' rel=''nofollow''\u003eecommerce website templates\u003c/a\u003e, \u003ca href=''http://www.bigcommerce.com/features/hosting/'' target=''_blank'' rel=''nofollow''\u003eecommerce hosting\u003c/a\u003e, an \u003ca href=''http://www.bigcommerce.com/features/setup/'' target=''_blank'' rel=''nofollow''\u003eonline shopping cart\u003c/a\u003e and more.\u003c/p\u003e'\n                  tags:\n                    - Blog\n                    - SEO\n                  summary: ' Welcome to your blog! A blog is a great place to share details on your products, business and whatever else you think your shoppers might like to hear from you. You can include photos in your blog posts and even videos. For ideas and inspiration on how to structure your blog, take a look [...]'\n                  is_published: true\n                  published_date:\n                    date: '2014-02-15 14:46:34.000000'\n                    timezone_type: 1\n                    timezone: '+00:00'\n                  published_date_iso8601: '2014-02-15T19:46:34+0000'\n                  meta_description: ''\n                  meta_keywords: 'Blog,SEO'\n                  author: ''\n                  thumbnail_path: ''\n    post:\n      tags:\n        - Blog Posts\n      summary: Create a Blog Post\n      description: |-\n        Creates a *Blog Post*.\n\n        **Required Fields**\n        *   `title`\n        *   `body`\n\n        **Notes**\n\n        * When including `published_date` in a request, supply it as a flat date string (not an object) in valid \u003ca href=\"http://tools.ietf.org/html/rfc2822#section-3.3\" target=\"_blank\"\u003eRFC 2822\u003c/a\u003e. The\u0026#160;example request below includes a `published_date` in RFC 2822 format.\n\n        * Blog posts default to draft status. To publish blog posts to the storefront, set the `is_published` property to `true`.\n        * If a custom URL is not provided, the post’s URL will be generated based on the value of `title`.\n      operationId: createABlogPosts\n      parameters:\n        - name: store_hash\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/blogPost_Base_Post'\n        required: true\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/blogPost_Base_Res'\n              example:\n                id: 3\n                title: Welcome to BigCommerce\n                url: /blog/welcome-bigcommerce/\n                preview_url: /blog/welcome-bigcommerce/\n                body: '\u003cp\u003eCustomize your site, manage shipping and payments, and list your products on Amazon, eBay, and Facebook by Meta with the #1 ecommerce platform. \u003c/p\u003e'\n                tags:\n                  - BigCommerce\n                  - welcome\n                  - ecommerce\n                summary: \u003cp\u003eWe power ecommerce websites for successful retailers all over the world\u003c/p\u003e\n                is_published: true\n                published_date:\n                  date: '2018-05-18T08:26:42.000Z'\n                  timezone_type: 1\n                  timezone: '+00:00'\n                published_date_iso8601: '2018-05-18T13:26:42.000Z'\n                meta_description: Welcome Post\n                meta_keywords: 'BigCommerce, welcome, ecommerce'\n                author: BigCommerce\n                thumbnail_path: ''\n        '207':\n          description: 'Multiple operations have taken place and the status for each operation can be viewed in the body of the response. Typically indicates that a partial failure has occured, such as when a `POST` or `PUT` request is successful, but saving the URL has failed.'\n          content:\n            application/json:\n              schema:\n                type: object\n    delete:\n      tags:\n        - Blog Posts\n      summary: Delete Blog Posts\n      description: Deletes a page of `Blog Posts`.\n      operationId: deleteAllBlogPosts\n      parameters:\n        - name: store_hash\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: page\n          in: query\n          description: Filter param.\n          schema:\n            maximum: 250\n            exclusiveMaximum: false\n            exclusiveMinimum: false\n            type: number\n        - name: limit\n          in: query\n          description: Filter param.\n          schema:\n            maximum: 50\n            exclusiveMaximum: false\n            exclusiveMinimum: false\n            type: number\n      responses:\n        '204':\n          description: ''\n          content: {}\n  '/stores/{store_hash}/v2/blog/posts/{id}':\n    get:\n      tags:\n        - Blog Posts\n      summary: Get a Blog Post\n      description: Returns a single *Blog Post*.\n      operationId: getABlogPost\n      parameters:\n        - name: store_hash\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: id\n          in: path\n          description: Id of the blog post.\n          required: true\n          schema:\n            exclusiveMaximum: false\n            exclusiveMinimum: false\n            type: integer\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/blogPost_Full'\n              example:\n                id: 3\n                title: Welcome to BigCommerce\n                url: /blog/welcome-bigcommerce/\n                preview_url: /blog/welcome-bigcommerce/\n                body: '\u003cp\u003eCustomize your site, manage shipping and payments, and list your products on Amazon, eBay, and Facebook by Meta with the #1 ecommerce platform. \u003c/p\u003e'\n                tags:\n                  - BigCommerce\n                  - welcome\n                  - ecommerce\n                summary: \u003cp\u003eWe power ecommerce websites for successful retailers all over the world\u003c/p\u003e\n                is_published: true\n                published_date:\n                  date: '2018-05-18T08:26:42.000Z'\n                  timezone_type: 1\n                  timezone: '+00:00'\n                published_date_iso8601: '2018-05-18T13:26:42.000Z'\n                meta_description: Welcome Post\n                meta_keywords: 'BigCommerce, welcome, ecommerce'\n                author: BigCommerce\n                thumbnail_path: ''\n    put:\n      tags:\n        - Blog Posts\n      summary: Update a Blog Post\n      description: |-\n        Updates a *Blog Post*.\n\n        **Notes**\n\n        * When including `published_date` in a request, supply it as a flat date string (not an object) in valid \u003ca href=\"http://tools.ietf.org/html/rfc2822#section-3.3\" target=\"_blank\"\u003eRFC 2822\u003c/a\u003e. The\u0026#160;example request below includes a `published_date` in RFC 2822 format.\n\n        * Blog posts default to draft status. To publish blog posts to the storefront, set the `is_published` property to `true`.\n      operationId: updateABlogPost\n      parameters:\n        - name: store_hash\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: id\n          in: path\n          description: Id of the blog post.\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/blogPost_Base_Post'\n        required: true\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/blogPost_Base_Res'\n              example:\n                id: 3\n                title: Welcome to BigCommerce\n                url: /blog/welcome-bigcommerce/\n                preview_url: /blog/welcome-bigcommerce/\n                body: '\u003cp\u003eCustomize your site, manage shipping and payments, and list your products on Amazon, eBay, and Facebook by Meta with the #1 ecommerce platform. \u003c/p\u003e'\n                tags:\n                  - BigCommerce\n                  - welcome\n                  - ecommerce\n                summary: \u003cp\u003eWe power ecommerce websites for successful retailers all over the world\u003c/p\u003e\n                is_published: true\n                published_date:\n                  date: '2018-05-18T08:26:42.000Z'\n                  timezone_type: 1\n                  timezone: '+00:00'\n                published_date_iso8601: '2018-05-18T13:26:42.000Z'\n                meta_description: Welcome Post\n                meta_keywords: 'BigCommerce, welcome, ecommerce'\n                author: BigCommerce\n                thumbnail_path: ''\n        '207':\n          description: 'Multiple operations have taken place and the status for each operation can be viewed in the body of the response. Typically indicates that a partial failure has occured, such as when a `POST` or `PUT` request is successful, but saving the URL has failed.'\n          content:\n            application/json:\n              schema:\n                type: object\n      x-codegen-request-body-name: body\n    delete:\n      tags:\n        - Blog Posts\n      summary: Delete a Blog Post\n      description: Deletes a *Blog Post*.\n      operationId: deleteABlogPost\n      parameters:\n        - name: store_hash\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: id\n          in: path\n          description: Id of the blog post.\n          required: true\n          schema:\n            exclusiveMaximum: false\n            exclusiveMinimum: false\n            type: integer\n      responses:\n        '204':\n          description: ''\n          content: {}\n  '/stores/{store_hash}/v2/blog/posts/count':\n    get:\n      tags:\n        - Blog Posts\n      summary: Get A Count of All Blog Posts\n      description: Returns a count of all *Blog Posts*.\n      operationId: getACountOfAllBlogPosts\n      parameters:\n        - name: store_hash\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/count_Response'\n              example:\n                count: 27\n  '/stores/{store_hash}/v2/pages':\n    get:\n      tags:\n        - Pages\n      summary: Get All Pages\n      description: 'Returns a list of *Pages*. Default sorting is by auto-generated ID from oldests to newest. This endpoint is deprecated. '\n      operationId: getAllPages\n      parameters:\n        - name: store_hash\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: page\n          in: query\n          description: Filter param.\n          schema:\n            exclusiveMaximum: false\n            exclusiveMinimum: false\n            type: number\n        - name: limit\n          in: query\n          description: Filter param.\n          schema:\n            exclusiveMaximum: false\n            exclusiveMinimum: false\n            type: number\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/page_Full'\n            Example:\n              example:\n                - id: 6\n                  parent_id: 5\n                  type: page\n                  contact_fields: 'fullname,companyname,phone,orderno,rma'\n                  email: janedoes@example.com\n                  name: Contact Form\n                  url: /contact-us/\n                  meta_description: ''\n                  body: We are happy to answer questions or help you with...\n                  mobile_body: ''\n                  feed: ''\n                  link: ''\n                  has_mobile_version: false\n                  is_visible: true\n                  is_homepage: false\n                  layout_file: page.html\n                  sort_order: 3\n                  meta_title: ''\n                  search_keywords: ''\n                  meta_keywords: ''\n      deprecated: true\n    post:\n      tags:\n        - Pages\n      summary: Create a Page\n      description: |-\n        Creates a *Page*. The payload limit is 1MB. This endpoint is deprecated.\n\n        **Required Fields**\n        *   `type`\n        *   `name`\n        *   `link` (for a page of `type: link`)\n        *   `feed` (for a page of `type: rss_feed`)\n        *   `body` (for a page of `type: raw`)\n\n        **Read Only Fields**\n        *   `id`\n\n        ## Content Type\n\n        The default value for `content_type` is `text/html`; however, if `page_type` is set to `raw`, `content_type` can be changed to `text/javascript` or `application/json`. Updating this field allows you to place a JavaScript or a JSON file in the root directory.\n      operationId: createAPage\n      parameters:\n        - name: store_hash\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/page_Base'\n            examples:\n              example-1:\n                value:\n                  parent_id: 5\n                  type: page\n                  contact_fields: 'fullname,companyname,phone,orderno,rma'\n                  email: janedoes@example.com\n                  name: Contact Form\n                  url: /contact-us/\n                  meta_description: string\n                  body: \u003cp\u003eWe're happy to answer questions or help you with returns.\u003cbr /\u003ePlease fill out the form below if you need assistance.\u003c/p\u003e\n                  mobile_body: '0'\n                  has_mobile_version: false\n                  is_visible: true\n                  is_homepage: false\n                  meta_title: string\n                  layout_file: page.html\n                  sort_order: 3\n                  search_keywords: string\n                  meta_keywords: string\n                  feed: string\n                  link: string\n                  content_type: text/html\n        required: true\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/page_Full'\n              example:\n                id: 6\n                parent_id: 5\n                type: page\n                contact_fields: 'fullname,companyname,phone,orderno,rma'\n                email: janedoes@example.com\n                name: Contact Form\n                url: /contact-us/\n                meta_description: ''\n                body: We're happy to answer questions or help you with returns.\u003cbr /\u003ePlease fill out the form below if you need assistance.\n                mobile_body: ''\n                has_mobile_version: false\n                feed: ''\n                link: ''\n                is_visible: true\n                is_homepage: false\n                layout_file: page.html\n                sort_order: 3\n                meta_title: ''\n                search_keywords: ''\n                meta_keywords: ''\n        '207':\n          description: 'Multiple operations have taken place and the status for each operation can be viewed in the body of the response. Typically indicates that a partial failure has occured, such as when a `POST` or `PUT` request is successful, but saving the URL has failed.'\n          content:\n            application/json:\n              schema:\n                type: object\n      deprecated: true\n      x-codegen-request-body-name: body\n  '/stores/{store_hash}/v2/pages/{id}':\n    get:\n      tags:\n        - Pages\n      summary: Get A Page\n      description: Returns a *Page*. This endpoint is deprecated.\n      operationId: getAPage\n      parameters:\n        - name: store_hash\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: id\n          in: path\n          description: Id of the page.\n          required: true\n          schema:\n            exclusiveMaximum: false\n            exclusiveMinimum: false\n            type: integer\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/page_Full'\n              example:\n                id: 1\n                name: RSS Syndication\n                meta_title: ''\n                body: '%%Syndicate%%'\n                is_visible: true\n                parent_id: 0\n                sort_order: 5\n                meta_keywords: '0'\n                type: page\n                meta_description: ''\n                is_homepage: false\n                layout_file: ''\n                is_customers_only: false\n                search_keywords: '0'\n                has_mobile_version: false\n                feed: ''\n                link: ''\n                mobile_body: '0'\n                url: /rss-syndication/\n      deprecated: true\n    put:\n      tags:\n        - Pages\n      summary: Update a Page\n      description: |-\n        Updates a *Page*. The payload limit is 1MB. This endpoint is deprecated.\n\n        **Read Only Fields**\n        * id\n      operationId: updateAPage\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: store_hash\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/page_Base'\n        required: false\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/page_Base'\n              example:\n                id: 2\n                name: Shipping \u0026 Returns\n                meta_title: ''\n                body: '\u003cem\u003eTo edit this page simply login to the control panel, click the \u003cstrong style=\"font-weight: 400\"\u003eWebsite Content\u003c/strong\u003e tab and choose the \u003c/em\u003e \u003cstrong style=\"font-weight: 400\"\u003e\u003cem\u003eView Web Pages option. Click Edit next to the Shipping \u0026 Returns page and you can change this text. A sample returns policy is shown below which you can edit as needed.\u003c/em\u003e\u003cem style=\"font-style: normal\"\u003e\u003cbr/\u003e\u003cbr/\u003e\u003c/em\u003e\u003c/strong\u003e\u003cem style=\"font-style: normal\"\u003e\u003cstrong\u003eReturns Policy\u003c/strong\u003e\u003c/em\u003e\u003cstrong style=\"font-weight: 400\"\u003e\u003c/em\u003e\u003c/em\u003e\u003cem style=\"font-style: normal\"\u003e\u003cbr/\u003e\u003cbr/\u003e\u003c/em\u003eYou may return most new, unopened items within 30 days of delivery for a full refund. We''ll also pay the return shipping costs if the return is a result of our error (you received an incorrect or defective item, etc.).\u003cbr/\u003e\u003cbr/\u003eYou should expect to receive your refund within four weeks of giving your package to the return shipper, however, in many cases you will receive a refund more quickly. This time period includes the transit time for us to receive your return from the shipper (5 to 10 business days), the time it takes us to process your return once we receive it (3 to 5 business days), and the time it takes your bank to process our refund request (5 to 10 business days).\u003cbr/\u003e\u003cbr/\u003eIf you need to return an item, please \u003ca href=\"/contact-us/\"\u003eContact Us\u003c/a\u003e with your order number and details about the product you would like to return. We will respond quickly with instructions for how to return items from your order.\u003cbr/\u003e\u003cbr/\u003e\u003c/strong\u003e\u003cstrong\u003eShipping\u003c/em\u003e\u003c/em\u003e\u003c/em\u003e\u003c/strong\u003e\u003cstrong style=\"font-weight: 400\"\u003e\u003cem style=\"font-style: normal\"\u003e\u003cbr/\u003e\u003cbr/\u003e\u003c/em\u003eWe can ship to virtually any address in the world. Note that there are restrictions on some products, and some products cannot be shipped to international destinations.\u003cbr/\u003e\u003cbr/\u003eWhen you place an order, we will estimate shipping and delivery dates for you based on the availability of your items and the shipping options you choose. Depending on the shipping provider you choose, shipping date estimates may appear on the shipping quotes page.\u003cbr/\u003e\u003cbr/\u003ePlease also note that the shipping rates for many items we sell are weight-based. The weight of any such item can be found on its detail page. To reflect the policies of the shipping companies we use, all weights will be rounded up to the next full pound.\u003cbr/\u003e'\n                is_visible: true\n                parent_id: 0\n                sort_order: 2\n                meta_keywords: ''\n                type: page\n                meta_description: ''\n                is_homepage: false\n                layout_file: page.html\n                is_customers_only: false\n                search_keywords: ''\n                has_mobile_version: false\n                feed: ''\n                link: ''\n                mobile_body: ''\n                url: /shipping-returns/\n        '207':\n          description: 'Multiple operations have taken place and the status for each operation can be viewed in the body of the response. Typically indicates that a partial failure has occured, such as when a `POST` or `PUT` request is successful, but saving the URL has failed.'\n          content:\n            application/json:\n              schema:\n                type: object\n      deprecated: true\n      x-codegen-request-body-name: body\n    delete:\n      tags:\n        - Pages\n      summary: Delete a Page\n      description: 'Deletes a *Page*. This endpoint is deprecated. '\n      operationId: deleteAPage\n      parameters:\n        - name: store_hash\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: id\n          in: path\n          description: Id of the page.\n          required: true\n          schema:\n            exclusiveMaximum: false\n            exclusiveMinimum: false\n            type: integer\n      responses:\n        '204':\n          description: ''\n          content: {}\n      deprecated: true\n  '/stores/{store_hash}/v2/redirects':\n    get:\n      tags:\n        - Redirects\n      summary: Get All Redirects\n      description: |-\n        Returns a list all *Redirect URLs*. \n\n        \u003c!-- theme: warning --\u003e\n        \u003e #### Deprecated\n        \u003e Avoid using this API operation if possible. It will be removed in a future version.\n        \u003e For the most up-to-date version of this API, see  [Get Redirects v3](/api-reference/storefront/redirects/redirects/getredirects) to manage redirects URLs.\n      operationId: getAListofRedirects\n      parameters:\n        - name: store_hash\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: page\n          in: query\n          description: Filter param.\n          schema:\n            exclusiveMaximum: false\n            exclusiveMinimum: false\n            type: integer\n        - name: limit\n          in: query\n          description: Filter param.\n          schema:\n            exclusiveMaximum: false\n            exclusiveMinimum: false\n            type: integer\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/redirect'\n            Response Schema:\n              example: ''\n      deprecated: true\n    post:\n      tags:\n        - Redirects\n      summary: Create a Redirect\n      description: |-\n        Creates a *Redirect URL*.\n\n        **Required Fields**\n        *   path\n        *   forward\n\n        **Read Only**\n        *   url\n\n\n        \u003c!-- theme: warning --\u003e\n        \u003e #### Deprecated\n        \u003e Avoid using this API operation if possible. It will be removed in a future version.\n        \u003e For the most up-to-date version of this API, see [Upsert Redirects v3](/api-reference/store-management/redirects/redirects/upsertredirects) to upsert new redirect data.\n      operationId: createARedirect\n      parameters:\n        - name: store_hash\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/redirect'\n        required: true\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/redirect'\n              example:\n                id: 3\n                path: /mens_clothing\n                forward:\n                  type: category\n                  ref: 3\n                url: 'http://store.example.com/mens'\n      x-codegen-request-body-name: body\n    delete:\n      tags:\n        - Redirects\n      summary: Delete All Redirects\n      description: |-\n        By default, it deletes all *Redirect URLs* in a store. \n\n        \u003c!-- theme: warning --\u003e\n\n        \u003e #### Deprecated\n\n        \u003e Avoid using this API operation if possible. It will be removed in a future version.\n\n        \u003e For the most up-to-date version of this API, see [Delete Redirects v3](/api-reference/store-management/redirects/redirects/deleteredirects) to delete redirects URLs.\n      operationId: deleteAllRedirects\n      parameters:\n        - name: store_hash\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: ''\n          content: {}\n  '/stores/{store_hash}/v2/redirects/{id}':\n    get:\n      tags:\n        - Redirects\n      summary: Get a Redirect\n      description: |-\n        Returns a single *Redirect URL*.\n\n        \u003c!-- theme: warning --\u003e\n        \u003e #### Deprecated\n        \u003e Avoid using this API operation if possible. It will be removed in a future version.\n        \u003e For the most up-to-date version of this API, see [Get Redirects v3](/api-reference/storefront/redirects/redirects/getredirects) to get a redirect URL.\n      operationId: getARedirectURL\n      parameters:\n        - name: store_hash\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: id\n          in: path\n          description: Id of the redirect url\n          required: true\n          schema:\n            exclusiveMaximum: false\n            exclusiveMinimum: false\n            type: integer\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/redirect'\n              example:\n                id: 1\n                path: /smith-journal-13/\n                forward:\n                  type: product\n                  ref: 111\n                url: 'http://store-url.mybigcommerce.com/towels/bath-towels/hand-towels/'\n      deprecated: true\n    put:\n      tags:\n        - Redirects\n      summary: Update a Redirect\n      description: |-\n        Updates a *Redirect URL*.\n\n        **Required Fields**\n        *   path\n        *   forward\n\n        **Read Only Fields**\n        *   url\n\n\n        \u003c!-- theme: warning --\u003e\n        \u003e #### Deprecated\n        \u003e Avoid using this API operation if possible. It will be removed in a future version.\n        \u003e For the most up-to-date version of this API, see [Upsert Redirects v3](/api-reference/storefront/redirects/redirects/upsertredirects) to update redirect data.\n      operationId: updateARedirectURL\n      parameters:\n        - name: store_hash\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: id\n          in: path\n          description: Id of the redirect url\n          required: true\n          schema:\n            exclusiveMaximum: false\n            exclusiveMinimum: false\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              title: Redirect\n              required:\n                - forward\n                - path\n              type: object\n              properties:\n                id:\n                  type: integer\n                  description: Numeric ID of the redirect.\n                  example: 1\n                path:\n                  type: string\n                  description: The path from which to redirect.\n                  example: /smith-journal-13/\n                forward:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      description: |\n                        The type of redirect. If it is a manual redirect then type will always be manual. Dynamic redirects will have the type of the page. Such as product or category.\n                      example: product\n                    ref:\n                      type: string\n                      description: Reference of the redirect. Dynamic redirects will have the category or product number. Manual redirects will have the url that is being directed to.\n                      example: '111'\n                url:\n                  type: string\n                  description: URL of the redirect. READ-ONLY\n                  example: 'http://store-url.mybigcommerce.com/towels/bath-towels/hand-towels/'\n              example:\n                id: 1\n                path: /smith-journal-13/\n                forward:\n                  type: product\n                  ref: '111'\n                url: 'http://store-url.mybigcommerce.com/towels/bath-towels/hand-towels/'\n        required: true\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/redirect'\n              example:\n                id: 1\n                path: /smith-journal-13/\n                forward:\n                  type: product\n                  ref: 111\n                url: 'http://store-url.mybigcommerce.com/towels/bath-towels/hand-towels/'\n      x-codegen-request-body-name: body\n    delete:\n      tags:\n        - Redirects\n      summary: Delete a Redirect\n      description: |-\n        Deletes a *Redirect URL*.\n\n        \u003c!-- theme: warning --\u003e\n        \u003e #### Deprecated\n        \u003e Avoid using this API operation if possible. It will be removed in a future version.\n        \u003e For the most up-to-date version of this API, see [Delete Redirects v3](/api-reference/store-management/redirects/redirects/deleteredirects) to delete a redirect URL.\n      operationId: deleteARedirect\n      parameters:\n        - name: store_hash\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: id\n          in: path\n          description: Id of the redirect url\n          required: true\n          schema:\n            exclusiveMaximum: false\n            exclusiveMinimum: false\n            type: integer\n      responses:\n        '204':\n          description: ''\n          content: {}\n  '/stores/{store_hash}/v2/redirects/count':\n    get:\n      tags:\n        - Redirects\n      summary: Get a Count of Redirects\n      description: |-\n        Gets a count of *Redirect URLs* in a store.\n\n        \u003c!-- theme: warning --\u003e\n        \u003e #### Deprecated\n        \u003e Avoid using this API operation if possible. It will be removed in a future version.\n        \u003e For the most up-to-date version of this API, see  [Get Redirects v3](/api-reference/storefront/redirects/redirects/getredirects) to get a count of redirects.\n      operationId: getACountOfRedirects\n      parameters:\n        - name: store_hash\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/count_Response'\n              example:\n                count: 27\n      deprecated: true\ncomponents:\n  schemas:\n    blogPost_Full:\n      title: blogPost_Full\n      allOf:\n        - type: object\n          properties:\n            id:\n              type: integer\n              description: ID of this blog post. (READ-ONLY)\n              example: 3\n        - $ref: '#/components/schemas/blogPost_Base_Res'\n      x-internal: false\n      x-examples:\n        example-1:\n          id: 3\n          title: Welcome to BigCommerce\n          url: /blog/welcome-bigcommerce/\n          preview_url: /blog/welcome-bigcommerce/\n          body: '\u003cp\u003eCustomize your site, manage shipping and payments, and list your products on Amazon, eBay, and Facebook by Meta with the #1 ecommerce platform. \u003c/p\u003e'\n          tags:\n            - string\n          summary: \u003cp\u003eWe power ecommerce websites for successful retailers all over the world\u003c/p\u003e\n          is_published: true\n          published_date:\n            timezone_type: '1'\n            date: '2018-05-18T08:26:42Z'\n            timezone: '+00:00'\n          published_date_iso8601: '5/18/2018 1:26:42 PM'\n          meta_description: Welcome Post\n          meta_keywords: 'BigCommerce, welcome, ecommerce'\n          author: BigCommerce\n          thumbnail_path: string\n    addresses:\n      title: addresses\n      type: object\n      properties:\n        url:\n          type: string\n          description: Full URL of where the resource is located.\n          example: 'https://api.bigcommerce.com/stores/{store_hash}/v2/customers/5/addresses'\n        resource:\n          type: string\n          description: Resource being accessed.\n          example: /customers/5/addresses\n      x-internal: false\n    formField:\n      title: formField\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of the form field\n          example: License Id\n        value:\n          type: string\n          description: Value of the form field\n          example: 123BAF\n      x-internal: false\n    page_Full:\n      title: page_Full\n      allOf:\n        - type: object\n          properties:\n            id:\n              type: integer\n              description: ID of the page.\n              example: 44\n        - $ref: '#/components/schemas/page_Base_Res'\n      x-internal: false\n    redirect:\n      title: redirect\n      required:\n        - forward\n        - path\n      type: object\n      properties:\n        id:\n          type: integer\n          description: Numeric ID of the redirect.\n          example: 1\n        path:\n          type: string\n          description: The path from which to redirect.\n          example: /smith-journal-13/\n        forward:\n          $ref: '#/components/schemas/forward'\n        url:\n          type: string\n          description: URL of the redirect. READ-ONLY\n          example: 'http://store-url.mybigcommerce.com/towels/bath-towels/hand-towels/'\n      example:\n        id: 1\n        path: /smith-journal-13/\n        forward:\n          type: product\n          ref: 111\n        url: 'http://store-url.mybigcommerce.com/towels/bath-towels/hand-towels/'\n      x-internal: false\n    forward:\n      title: forward\n      type: object\n      x-internal: false\n      properties:\n        type:\n          type: string\n          description: The type of redirect. If it is a `manual` redirect then type will always be manual. Dynamic redirects will have the type of the page. Such as product or category.\n          example: product\n        ref:\n          type: integer\n          description: Reference of the redirect. Dynamic redirects will have the category or product number. Manual redirects will have the url that is being directed to.\n          example: 111\n    customer_Full:\n      title: customer_Full\n      required:\n        - email\n        - first_name\n        - last_name\n      type: object\n      properties:\n        id:\n          type: integer\n          description: Unique numeric ID of this customer. This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.\n          example: 1\n        _authentication:\n          type: object\n          properties:\n            force_reset:\n              type: string\n            password:\n              type: string\n            password_confirmation:\n              type: string\n          description: 'Not returned in any responses, but accepts up to two fields allowing you to set the customer’s password. If a password is not supplied, it is generated automatically. For further information about using this object, please see the Customers resource documentation.'\n        company:\n          type: string\n          description: The name of the company for which the customer works.\n          example: BigCommerce\n        first_name:\n          type: string\n          description: First name of the customer.\n          example: Jane\n        last_name:\n          type: string\n          description: Last name of the customer.\n          example: Doe\n        email:\n          type: string\n          description: Email address of the customer.\n          example: janedoe@example.com\n        phone:\n          type: string\n          description: Phone number of the customer.\n          example: '1234567890'\n        date_created:\n          type: string\n          description: Date on which the customer registered from the storefront or was created in the control panel. This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.\n          format: date-time\n        date_modified:\n          type: string\n          description: |\n            Date on which the customer updated their details in the storefront or was updated in the control panel. This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.\n          format: date-time\n        store_credit:\n          type: string\n          description: 'The amount of credit the customer has. (Float, Float as String, Integer)'\n          example: '0'\n        registration_ip_address:\n          type: string\n          description: The customer’s IP address when they signed up.\n          example: 12.345.678.910\n        customer_group_id:\n          type: integer\n          description: The group to which the customer belongs.\n          example: 2\n        notes:\n          type: string\n          description: Store-owner notes on the customer.\n        tax_exempt_category:\n          type: string\n          description: 'If applicable, the tax-exempt category of the shopper''s customer account. You can apply a tax-exempt category to multiple customers. This code should match the exemption codes provided by the third-party integration.'\n        accepts_marketing:\n          type: boolean\n          description: |\n            Records whether the customer would like to receive marketing content from this store. READ-ONLY.This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.\n          example: true\n        addresses:\n          $ref: '#/components/schemas/addresses'\n        form_fields:\n          type: array\n          description: Array of custom fields. This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.\n          items:\n            $ref: '#/components/schemas/formField'\n        reset_pass_on_login:\n          type: boolean\n          description: Force a password change on next login.\n          example: false\n      x-internal: false\n    categoryAccessLevel:\n      title: categoryAccessLevel\n      type: object\n      properties:\n        type:\n          type: string\n          description: |-\n            + `all` - Customers can access all categories\n             + `specific`  - Customers can access a specific list of categories\n            + `none` - Customers are prevented from viewing any of the categories in this group.\n          enum:\n            - all\n            - specific\n            - none\n        categories:\n          type: array\n          description: Is an array of category IDs and should be supplied only if `type` is specific.\n          example:\n            - '18,19,23,34'\n          items:\n            type: string\n      x-internal: false\n    timeZone:\n      title: timeZone\n      type: object\n      properties:\n        name:\n          type: string\n          description: 'A string identifying the time zone, in the format: \u003cContinent-name\u003e/\u003cCity-name\u003e.'\n          example: America/Chicago\n        raw_offset:\n          type: integer\n          description: 'A negative or positive number, identifying the offset from UTC/GMT, in seconds, during winter/standard time.'\n          example: -21600\n        dst_offset:\n          type: integer\n          description: '“-/+” offset from UTC/GMT, in seconds, during summer/daylight saving time.'\n          example: -18000\n        dst_correction:\n          type: boolean\n          description: A boolean indicating whether this time zone observes daylight saving time.\n          example: true\n        date_format:\n          $ref: '#/components/schemas/dateFormat'\n      x-internal: false\n    count_Response:\n      title: count_Response\n      type: object\n      properties:\n        count:\n          type: number\n          description: ''\n          example: 27\n      example:\n        count: 27\n      x-internal: false\n    dateFormat:\n      title: dateFormat\n      type: object\n      properties:\n        display:\n          type: string\n          description: 'A string that defines dates’ display formats, in the pattern: M jS Y'\n          example: M jS Y\n        export:\n          type: string\n          description: 'A string that defines the CSV export format for orders, customers, and products, in the pattern: M jS Y'\n          example: M jS Y\n        extended_display:\n          type: string\n          description: 'A string that defines dates’ extended-display format, in the pattern: M jS Y @ g:i A.'\n          example: 'M jS Y @ g:i A'\n      x-internal: false\n    blogTags:\n      title: blogTags\n      type: array\n      items:\n        type: object\n        properties:\n          tag:\n            type: string\n            example: Blog\n          post_ids:\n            type: array\n            example:\n              - 1\n              - 2\n              - 4\n            items:\n              type: integer\n      x-internal: false\n    blogPost_Base_Post:\n      title: blogPost_Base_Post\n      type: object\n      x-internal: false\n      x-examples:\n        example-1:\n          title: Welcome to BigCommerce\n          url: /blog/welcome-bigcommerce/\n          preview_url: /blog/welcome-bigcommerce/\n          body: '\u003cp\u003eCustomize your site, manage shipping and payments, and list your products on Amazon, eBay, and Facebook by Meta with the #1 ecommerce platform. \u003c/p\u003e'\n          tags:\n            - string\n          summary: \u003cp\u003eWe power ecommerce websites for successful retailers all over the world\u003c/p\u003e\n          is_published: true\n          published_date:\n            timezone_type: '1'\n            date: '2018-05-18T08:26:42Z'\n            timezone: '+00:00'\n          published_date_iso8601: '5/18/2018 1:26:42 PM'\n          meta_description: Welcome Post\n          meta_keywords: 'BigCommerce, welcome, ecommerce'\n          author: BigCommerce\n          thumbnail_path: string\n      description: blogPost base for POST requests\n      properties:\n        title:\n          type: string\n          description: Title of this blog post.\n          example: Welcome to BigCommerce\n        url:\n          type: string\n          description: URL for the public blog post.\n          example: /blog/welcome-bigcommerce/\n        body:\n          type: string\n          description: Text body of the blog post.\n          example: '\u003cp\u003eCustomize your site, manage shipping and payments, and list your products on Amazon, eBay, and Facebook by Meta with the #1 ecommerce platform. \u003c/p\u003e'\n        tags:\n          type: array\n          description: Tags to characterize the blog post.\n          items:\n            type: string\n        is_published:\n          type: boolean\n          description: Whether the blog post is published.\n          example: true\n        meta_description:\n          type: string\n          description: Description text for this blog post’s `\u003cmeta/\u003e` element.\n          example: Welcome Post\n        meta_keywords:\n          type: string\n          description: Keywords for this blog post’s `\u003cmeta/\u003e` element.\n          example: 'BigCommerce, welcome, ecommerce'\n        author:\n          type: string\n          description: Name of the blog post’s author.\n          example: BigCommerce\n        thumbnail_path:\n          type: string\n          description: 'Local path to a thumbnail uploaded to `/product_images/` via [WebDav](https://support.bigcommerce.com/s/article/File-Access-WebDAV).'\n        published_date:\n          type: string\n          example: 'Wed, 10 Aug 2022 15:39:15 -0500'\n      required:\n        - title\n        - body\n    blogPost_Base:\n      title: blogPost_Base\n      type: object\n      x-internal: false\n      x-examples:\n        example-1:\n          title: Welcome to BigCommerce\n          url: /blog/welcome-bigcommerce/\n          preview_url: /blog/welcome-bigcommerce/\n          body: '\u003cp\u003eCustomize your site, manage shipping and payments, and list your products on Amazon, eBay, and Facebook by Meta with the #1 ecommerce platform. \u003c/p\u003e'\n          tags:\n            - string\n          summary: \u003cp\u003eWe power ecommerce websites for successful retailers all over the world\u003c/p\u003e\n          is_published: true\n          published_date:\n            timezone_type: '1'\n            date: '2018-05-18T08:26:42Z'\n            timezone: '+00:00'\n          published_date_iso8601: '5/18/2018 1:26:42 PM'\n          meta_description: Welcome Post\n          meta_keywords: 'BigCommerce, welcome, ecommerce'\n          author: BigCommerce\n          thumbnail_path: string\n      properties:\n        title:\n          type: string\n          description: Title of this blog post.\n          example: Welcome to BigCommerce\n        url:\n          type: string\n          description: URL for the public blog post.\n          example: /blog/welcome-bigcommerce/\n        preview_url:\n          type: string\n          description: URL to preview the blog post. (READ-ONLY)\n          example: /blog/welcome-bigcommerce/\n        body:\n          type: string\n          description: Text body of the blog post.\n          example: '\u003cp\u003eCustomize your site, manage shipping and payments, and list your products on Amazon, eBay, and Facebook by Meta with the #1 ecommerce platform. \u003c/p\u003e'\n        tags:\n          type: array\n          description: Tags to characterize the blog post.\n          items:\n            type: string\n        summary:\n          type: string\n          description: Summary of the blog post. (READ-ONLY)\n          example: \u003cp\u003eWe power ecommerce websites for successful retailers all over the world\u003c/p\u003e\n        is_published:\n          type: boolean\n          description: Whether the blog post is published.\n          example: true\n        published_date:\n          $ref: '#/components/schemas/publishedDate'\n        published_date_iso8601:\n          type: string\n          description: Published date in `ISO 8601` format.\n          example: '5/18/2018 1:26:42 PM'\n        meta_description:\n          type: string\n          description: Description text for this blog post’s `\u003cmeta/\u003e` element.\n          example: Welcome Post\n        meta_keywords:\n          type: string\n          description: Keywords for this blog post’s `\u003cmeta/\u003e` element.\n          example: 'BigCommerce, welcome, ecommerce'\n        author:\n          type: string\n          description: Name of the blog post’s author.\n          example: BigCommerce\n        thumbnail_path:\n          type: string\n          description: 'Local path to a thumbnail uploaded to `/product_images/` via [WebDav](https://support.bigcommerce.com/s/article/File-Access-WebDAV).'\n      required:\n        - title\n        - body\n    blogPost_Base_Res:\n      title: blogPost_Base_Res\n      type: object\n      x-internal: false\n      x-examples: {}\n      description: blog post base response\n      properties:\n        title:\n          type: string\n          description: Title of this blog post.\n          example: Welcome to BigCommerce\n        url:\n          type: string\n          description: URL for the public blog post.\n          example: /blog/welcome-bigcommerce/\n        preview_url:\n          type: string\n          description: URL to preview the blog post. (READ-ONLY)\n          example: /blog/welcome-bigcommerce/\n        body:\n          type: string\n          description: Text body of the blog post.\n          example: '\u003cp\u003eCustomize your site, manage shipping and payments, and list your products on Amazon, eBay, and Facebook by Meta with the #1 ecommerce platform. \u003c/p\u003e'\n        tags:\n          type: array\n          description: Tags to characterize the blog post.\n          items:\n            type: string\n        summary:\n          type: string\n          description: Summary of the blog post. (READ-ONLY)\n          example: \u003cp\u003eWe power ecommerce websites for successful retailers all over the world\u003c/p\u003e\n        is_published:\n          type: boolean\n          description: Whether the blog post is published.\n          example: true\n        published_date:\n          $ref: '#/components/schemas/publishedDate'\n        published_date_iso8601:\n          type: string\n          description: Published date in `ISO 8601` format.\n          example: '5/18/2018 1:26:42 PM'\n        meta_description:\n          type: string\n          description: Description text for this blog post’s `\u003cmeta/\u003e` element.\n          example: Welcome Post\n          nullable: true\n        meta_keywords:\n          type: string\n          description: Keywords for this blog post’s `\u003cmeta/\u003e` element.\n          example: 'BigCommerce, welcome, ecommerce'\n          nullable: true\n        author:\n          type: string\n          description: Name of the blog post’s author.\n          example: BigCommerce\n          nullable: true\n        thumbnail_path:\n          type: string\n          description: 'Local path to a thumbnail uploaded to `/product_images/` via [WebDav](https://support.bigcommerce.com/s/article/File-Access-WebDAV).'\n          nullable: true\n    publishedDate:\n      type: object\n      x-internal: false\n      properties:\n        timezone_type:\n          type: integer\n          example: 1\n        date:\n          type: string\n          format: date-time\n          example: '2022-08-10 14:39:15.000000'\n        timezone:\n          type: string\n          example: '+00:00'\n    authentication:\n      type: object\n      properties:\n        force_reset:\n          type: string\n        password:\n          type: string\n        password_confirmation:\n          type: string\n      description: 'Not returned in any responses, but accepts up to two fields allowing you to set the customer’s password. If a password is not supplied, it is generated automatically. For further information about using this object, please see the Customers resource documentation.'\n      x-internal: false\n    customer_Base:\n      title: customer_Base\n      type: object\n      x-internal: false\n    page_Base:\n      title: page_Base\n      type: object\n      x-internal: false\n      properties:\n        parent_id:\n          type: integer\n          description: ID of any parent Web page.\n          example: 5\n        type:\n          type: string\n          description: \"`page`: free-text page  \\n`link`: link to another web address  \\n`rss_feed`: syndicated content from an RSS feed  \\n`contact_form`: When the store's contact form is used.\\n\\n\\t\"\n          enum:\n            - page\n            - rss_feed\n            - contact_form\n            - raw\n            - link\n        contact_fields:\n          type: string\n          description: 'Where the page’s type is a contact form: object whose members are the fields enabled (in the control panel) for storefront display. Possible members are:`fullname`: full name of the customer submitting the form; `phone`: customer’s phone number, as submitted on the form; `companyname`: customer’s submitted company name; `orderno`: customer’s submitted order number; `rma`: customer’s submitted RMA (Return Merchandise Authorization) number.'\n          example: 'fullname,companyname,phone,orderno,rma'\n        email:\n          type: string\n          description: 'Where the page’s type is a contact form: email address that receives messages sent via the form.'\n          example: janedoes@example.com\n        name:\n          type: string\n          description: 'Page name, as displayed on the storefront.'\n          example: Contact Form\n        url:\n          type: string\n          description: Relative URL on the storefront for this page.\n          example: /contact-us/\n        meta_description:\n          type: string\n          description: Description contained within this page’s `\u003cmeta/\u003e` element.\n        body:\n          type: string\n          description: 'HTML or variable that populates this page’s `\u003cbody\u003e` element, in default/desktop view. Required in POST if page type is `raw`.'\n          example: \u003cp\u003eWe're happy to answer questions or help you with returns.\u003cbr /\u003ePlease fill out the form below if you need assistance.\u003c/p\u003e\n        mobile_body:\n          type: string\n          description: HTML to use for this page's body when viewed in the mobile template (deprecated).\n          example: '0'\n        has_mobile_version:\n          type: boolean\n          description: 'If true, this page has a mobile version.'\n          example: false\n        is_visible:\n          type: boolean\n          description: 'If true, this page appears in the storefront’s navigation menu.'\n          example: true\n        is_homepage:\n          type: boolean\n          description: 'If true, this page is the storefront’s home page.'\n          example: false\n        meta_title:\n          type: string\n          description: 'Text specified for this page’s `\u003ctitle\u003e` element. (If empty, the value of the name property is used.)'\n        layout_file:\n          type: string\n          description: Layout template for this page. This field is writable only for stores with a Blueprint theme applied.\n          example: page.html\n        sort_order:\n          type: integer\n          description: Order in which this page should display on the storefront. (Lower integers specify earlier display.)\n          example: 3\n        search_keywords:\n          type: string\n          description: Comma-separated list of keywords that shoppers can use to locate this page when searching the store.\n        meta_keywords:\n          type: string\n          description: Comma-separated list of SEO-relevant keywords to include in the page’s `\u003cmeta/\u003e` element.\n        feed:\n          type: string\n          description: If page type is `rss_feed` the n this field is visisble. Required in POST required for `rss page` type.\n        link:\n          type: string\n          description: If page type is `link` this field is returned. Required in  POST to create a `link` page.\n        content_type:\n          type: string\n          example: text/html\n          enum:\n            - application/json\n            - text/javascript\n            - text/html\n      required:\n        - type\n        - name\n        - body\n    page_Base_Res:\n      title: page_Base_Res\n      type: object\n      x-internal: false\n      properties:\n        parent_id:\n          type: integer\n          description: ID of any parent Web page.\n          example: 5\n        type:\n          type: string\n          description: \"`page`: free-text page  \\n`link`: link to another web address  \\n`rss_feed`: syndicated content from an RSS feed  \\n`contact_form`: When the store's contact form is used.\\n\\n\\t\"\n          enum:\n            - page\n            - rss_feed\n            - contact_form\n            - raw\n            - link\n        contact_fields:\n          type: string\n          description: 'Where the page’s type is a contact form: object whose members are the fields enabled (in the control panel) for storefront display. Possible members are:`fullname`: full name of the customer submitting the form; `phone`: customer’s phone number, as submitted on the form; `companyname`: customer’s submitted company name; `orderno`: customer’s submitted order number; `rma`: customer’s submitted RMA (Return Merchandise Authorization) number.'\n          example: 'fullname,companyname,phone,orderno,rma'\n        email:\n          type: string\n          description: 'Where the page’s type is a contact form: email address that receives messages sent via the form.'\n          example: janedoes@example.com\n        name:\n          type: string\n          description: 'Page name, as displayed on the storefront.'\n          example: Contact Form\n        url:\n          type: string\n          description: Relative URL on the storefront for this page.\n          example: /contact-us/\n        meta_description:\n          type: string\n          description: Description contained within this page’s `\u003cmeta/\u003e` element.\n        body:\n          type: string\n          description: 'HTML or variable that populates this page’s `\u003cbody\u003e` element, in default/desktop view. Required in POST if page type is `raw`.'\n          example: \u003cp\u003eWe're happy to answer questions or help you with returns.\u003cbr /\u003ePlease fill out the form below if you need assistance.\u003c/p\u003e\n        mobile_body:\n          type: string\n          description: HTML to use for this page's body when viewed in the mobile template (deprecated).\n          example: '0'\n        has_mobile_version:\n          type: boolean\n          description: 'If true, this page has a mobile version.'\n          example: false\n        is_visible:\n          type: boolean\n          description: 'If true, this page appears in the storefront’s navigation menu.'\n          example: true\n        is_homepage:\n          type: boolean\n          description: 'If true, this page is the storefront’s home page.'\n          example: false\n        meta_title:\n          type: string\n          description: 'Text specified for this page’s `\u003ctitle\u003e` element. (If empty, the value of the name property is used.)'\n        layout_file:\n          type: string\n          description: Layout template for this page. This field is writable only for stores with a Blueprint theme applied.\n          example: page.html\n        sort_order:\n          type: integer\n          description: Order in which this page should display on the storefront. (Lower integers specify earlier display.)\n          example: 3\n        search_keywords:\n          type: string\n          description: Comma-separated list of keywords that shoppers can use to locate this page when searching the store.\n        meta_keywords:\n          type: string\n          description: Comma-separated list of SEO-relevant keywords to include in the page’s `\u003cmeta/\u003e` element.\n        feed:\n          type: string\n          description: If page type is `rss_feed` then this field is visisble.\n        link:\n          type: string\n          description: If page type is `link` this field is returned.\n        content_type:\n          type: string\n          example: text/html\n          enum:\n            - application/json\n            - text/javascript\n            - text/html\n  securitySchemes:\n    X-Auth-Token:\n      type: apiKey\n      description: |-\n        ### OAuth Scopes\n        |  **UI Name** | **Permission** | **Parameter** |\n        | --- | --- | --- |\n        |  Content | modify | `store_v2_content` |\n        |  Content | read-only | `store_v2_content_read_only` |\n\n        ### Headers\n\n        |Header|Parameter|Description|\n        |-|-|-|\n        |`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n\n        ### Example\n\n        ```http\n        GET /stores/{store_hash}/v3/catalog/summary\n        host: api.bigcommerce.com\n        Content-Type: application/json\n        X-Auth-Token: {access_token}\n        ```\n\n        * For more information on Authenticating BigCommerce APIs, see: [Authentication](/api-docs/getting-started/authentication).\n      name: X-Auth-Token\n      in: header\n",
			"canonicalURL": "/github.com/bigcommerce/api-specs@38c996d02c24d9d7b2e53b1d29c0c4607969c46a/-/blob/reference/store_content.v2.yml",
			"externalURLs": [
				{
					"url": "https://github.com/bigcommerce/api-specs/blob/38c996d02c24d9d7b2e53b1d29c0c4607969c46a/reference/store_content.v2.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/stores/{store_hash}/v2/redirects\": get: operation \"getAListofRedirects\": responses: 200: content: at 1:50415: content type \"Response Schema\": mime: expected slash after first token"
}