{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/vmware-tanzu/kubeapps"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "dashboard/public/openapi.yaml",
			"byteSize": 238177,
			"content": "# Copyright 2021-2022 the Kubeapps contributors.\n# SPDX-License-Identifier: Apache-2.0\n\n---\nopenapi: 3.0.3\nservers:\n  - url: \"{schema}://{url}:{port}\"\n    description: Development URL\n    variables:\n      schema:\n        enum:\n          - http\n          - https\n        default: http\n        description: URL schema\n      url:\n        default: \"127.0.0.1\"\n        description: Kubeapps URL\n      port:\n        default: \"8080\"\n        description: Kubeapps port\ninfo:\n  description: \u003e\n    [![CircleCI](https://circleci.com/gh/vmware-tanzu/kubeapps/tree/main.svg?style=svg)](https://circleci.com/gh/vmware-tanzu/kubeapps/tree/main)\n\n     [Kubeapps](https://github.com/vmware-tanzu/kubeapps) is a web-based UI for deploying and managing applications in Kubernetes clusters.\n\n     Note: this API documentation is still in an initial stage and is subject to change. Before coupling to it, please [drop us an issue](https://github.com/vmware-tanzu/kubeapps/issues/new/choose) or reach us [via Slack](https://kubernetes.slack.com/messages/kubeapps) to know more about your use case and see how we can assist you.\n     #### Developer Documentation\n     - The [Kubeapps Architecture Overview](https://kubeapps.dev/docs/latest/background/architecture/).\n     - The [Kubeapps Developer Documentation](https://kubeapps.dev/docs/latest/reference/developer/) for instructions on setting up the developer environment for developing on Kubeapps and its components.\n     - The [Kubeapps Build Guide](https://kubeapps.dev/docs/latest/reference/developer/build/) for instructions on setting up the build environment and building Kubeapps from source.\n  version: 0.1.0\n  title: Kubeapps API\n  termsOfService: \"https://github.com/vmware-tanzu/kubeapps/blob/main/LICENSE\"\n  license:\n    name: Apache-2.0\n    url: \"http://www.apache.org/licenses/LICENSE-2.0.html\"\ntags:\n  - name: PluginsService\n  - name: PackagesService\n  - name: RepositoriesService\n  - name: FluxV2PackagesService\n  - name: FluxV2RepositoriesService\n  - name: HelmPackagesService\n  - name: HelmRepositoriesService\n  - name: KappControllerPackagesService\n  - name: KappControllerRepositoriesService\n  - name: ResourcesService\nexternalDocs:\n  description: Kubeapps GitHub repository\n  url: \"https://github.com/vmware-tanzu/kubeapps\"\nsecurity:\n  - bearerAuth: []\npaths:\n  /apis/core/packages/v1alpha1/availablepackages:\n    get:\n      operationId: PackagesService_GetAvailablePackageSummaries\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1GetAvailablePackageSummariesRes\\\n                  ponse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: filterOptions.query\n          description: |-\n            Text query\n\n            Text query for the request\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: filterOptions.categories\n          description: |-\n            Categories\n\n            Collection of categories for the request\n          in: query\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - name: filterOptions.repositories\n          description: |-\n            Repositories\n\n            Collection of repositories where the packages belong to\n          in: query\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - name: filterOptions.pkgVersion\n          description: |-\n            Package version\n\n            Package version for the request\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: filterOptions.appVersion\n          description: |-\n            App version\n\n            Packaged app version for the request\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: paginationOptions.pageToken\n          description: \u003e-\n            Page token\n\n\n            The client uses this field to request a specific page of the list results.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: paginationOptions.pageSize\n          description: \u003e-\n            Page size\n\n\n            Clients use this field to specify the maximum number of results to be\n\n            returned by the server. The server may further constrain the maximum number\n\n            of results returned in a single page. If the page_size is 0, the server\n\n            will decide the number of results to be returned.\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n      tags:\n        - PackagesService\n  \"/apis/core/packages/v1alpha1/availablepackages/plugin/{availablePackageRef.plugin.name}/{availablePackageRef.plugin.version}/c/{availablePackageRef.context.cluster}/ns/{availablePackageRef.context.namespace}/{availablePackageRef.identifier}\":\n    get:\n      operationId: PackagesService_GetAvailablePackageDetail\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1GetAvailablePackageDetailRespon\\\n                  se\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: availablePackageRef.plugin.name\n          description: \u003e-\n            Plugin name\n\n\n            The name of the plugin, such as `fluxv2.packages` or `kapp_controller.packages`.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: availablePackageRef.plugin.version\n          description: |-\n            Plugin version\n\n            The version of the plugin, such as v1alpha1\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: availablePackageRef.context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: availablePackageRef.context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: availablePackageRef.identifier\n          description: \u003e-\n            Available package identifier\n\n\n            The fully qualified identifier for the available package\n\n            (ie. a unique name for the context). For some packaging systems\n\n            (particularly those where an available package is backed by a CR) this\n\n            will just be the name, but for others such as those where an available\n\n            package is not backed by a CR (eg. standard helm) it may be necessary\n\n            to include the repository in the name or even the repo namespace\n\n            to ensure this is unique.\n\n            For example two helm repositories can define\n\n            an \"apache\" chart that is available globally, the names would need to\n\n            encode that to be unique (ie. \"repoA:apache\" and \"repoB:apache\").\n          in: path\n          required: true\n          schema:\n            type: string\n            pattern: .+\n        - name: pkgVersion\n          description: \u003e-\n            Optional specific version (or version reference) to request.\n\n            By default the latest version (or latest version matching the reference)\n\n            will be returned.\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - PackagesService\n  \"/apis/core/packages/v1alpha1/availablepackages/plugin/{availablePackageRef.plugin.name}/{availablePackageRef.plugin.version}/c/{availablePackageRef.context.cluster}/ns/{availablePackageRef.context.namespace}/{availablePackageRef.identifier}/versions\":\n    get:\n      operationId: PackagesService_GetAvailablePackageVersions\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1GetAvailablePackageVersionsResp\\\n                  onse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: availablePackageRef.plugin.name\n          description: \u003e-\n            Plugin name\n\n\n            The name of the plugin, such as `fluxv2.packages` or `kapp_controller.packages`.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: availablePackageRef.plugin.version\n          description: |-\n            Plugin version\n\n            The version of the plugin, such as v1alpha1\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: availablePackageRef.context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: availablePackageRef.context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: availablePackageRef.identifier\n          description: \u003e-\n            Available package identifier\n\n\n            The fully qualified identifier for the available package\n\n            (ie. a unique name for the context). For some packaging systems\n\n            (particularly those where an available package is backed by a CR) this\n\n            will just be the name, but for others such as those where an available\n\n            package is not backed by a CR (eg. standard helm) it may be necessary\n\n            to include the repository in the name or even the repo namespace\n\n            to ensure this is unique.\n\n            For example two helm repositories can define\n\n            an \"apache\" chart that is available globally, the names would need to\n\n            encode that to be unique (ie. \"repoA:apache\" and \"repoB:apache\").\n          in: path\n          required: true\n          schema:\n            type: string\n            pattern: .+\n        - name: pkgVersion\n          description: \u003e-\n            Optional version reference for which full version history is\n            required.  By\n\n            default a summary of versions is returned as outlined in the response.\n\n            Plugins can choose not to implement this and provide the summary only, it\n\n            is provided for completeness only.\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - PackagesService\n  /apis/core/packages/v1alpha1/installedpackages:\n    get:\n      operationId: PackagesService_GetInstalledPackageSummaries\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1GetInstalledPackageSummariesRes\\\n                  ponse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: paginationOptions.pageToken\n          description: \u003e-\n            Page token\n\n\n            The client uses this field to request a specific page of the list results.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: paginationOptions.pageSize\n          description: \u003e-\n            Page size\n\n\n            Clients use this field to specify the maximum number of results to be\n\n            returned by the server. The server may further constrain the maximum number\n\n            of results returned in a single page. If the page_size is 0, the server\n\n            will decide the number of results to be returned.\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n      tags:\n        - PackagesService\n    post:\n      operationId: PackagesService_CreateInstalledPackage\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1CreateInstalledPackageResponse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      requestBody:\n        $ref: \"#/components/requestBodies/v1alpha1CreateInstalledPackageRequest\"\n      tags:\n        - PackagesService\n  \"/apis/core/packages/v1alpha1/installedpackages/plugin/{installedPackageRef.plugin.name}/{installedPackageRef.plugin.version}/c/{installedPackageRef.context.cluster}/ns/{installedPackageRef.context.namespace}/{installedPackageRef.identifier}\":\n    get:\n      operationId: PackagesService_GetInstalledPackageDetail\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1GetInstalledPackageDetailRespon\\\n                  se\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: installedPackageRef.plugin.name\n          description: \u003e-\n            Plugin name\n\n\n            The name of the plugin, such as `fluxv2.packages` or `kapp_controller.packages`.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.plugin.version\n          description: |-\n            Plugin version\n\n            The version of the plugin, such as v1alpha1\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.identifier\n          description: |-\n            The fully qualified identifier for the installed package\n            (ie. a unique name for the context).\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - PackagesService\n    delete:\n      operationId: PackagesService_DeleteInstalledPackage\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1DeleteInstalledPackageResponse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: installedPackageRef.plugin.name\n          description: \u003e-\n            Plugin name\n\n\n            The name of the plugin, such as `fluxv2.packages` or `kapp_controller.packages`.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.plugin.version\n          description: |-\n            Plugin version\n\n            The version of the plugin, such as v1alpha1\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.identifier\n          description: |-\n            The fully qualified identifier for the installed package\n            (ie. a unique name for the context).\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - PackagesService\n    put:\n      operationId: PackagesService_UpdateInstalledPackage\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1UpdateInstalledPackageResponse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: installedPackageRef.plugin.name\n          description: \u003e-\n            Plugin name\n\n\n            The name of the plugin, such as `fluxv2.packages` or `kapp_controller.packages`.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.plugin.version\n          description: |-\n            Plugin version\n\n            The version of the plugin, such as v1alpha1\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.identifier\n          description: |-\n            The fully qualified identifier for the installed package\n            (ie. a unique name for the context).\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                installedPackageRef:\n                  type: object\n                  properties:\n                    context:\n                      type: object\n                      description: The context (cluster/namespace) for the package.\n                      title: Installed package context\n                    plugin:\n                      type: object\n                      example:\n                        name: kapp_controller.packages\n                        version: v1alpha1\n                      description: \u003e-\n                        The plugin used to identify and interact with the\n                        installed package.\n\n                        This field can be omitted when the request is in the context of a specific plugin.\n                      title: \u003e-\n                        The plugin used to identify and interact with the\n                        installed package.\n\n                        This field can be omitted when the request is in the context of a specific plugin.\n                  title: \u003e-\n                    A reference uniquely identifying the installed package being\n                    updated.\n\n                    Required\n                pkgVersionReference:\n                  $ref: \"#/components/schemas/v1alpha1VersionReference\"\n                values:\n                  type: string\n                  description: \u003e-\n                    An optional serialized values string to be included when\n                    templating a\n\n                    package in the format expected by the plugin. Included when the backend\n\n                    format doesn't use secrets or configmaps for values or supports both.\n\n                    These values are layered on top of any values refs above, when\n\n                    relevant.\n                reconciliationOptions:\n                  $ref: \"#/components/schemas/v1alpha1ReconciliationOptions\"\n              description: \u003e-\n                Request for UpdateInstalledPackage. The intent is to reach the\n                desired state specified\n\n                by the fields in the request, while leaving other fields intact. This is a whole\n\n                object \"Update\" semantics rather than \"Patch\" semantics. The caller will provide the\n\n                values for the fields below, which will replace, or be overlaid onto, the\n\n                corresponding fields in the existing resource. For example, with the\n\n                UpdateInstalledPackageRequest, it is not possible to change just the 'package version\n\n                reference' without also specifying 'values' field. As a side effect, not specifying the\n\n                'values' field in the request means there are no values specified in the desired state.\n\n                So the meaning of each field value is describing the desired state of the corresponding\n\n                field in the resource after the update operation has completed the renconciliation.\n              title: UpdateInstalledPackageRequest\n        required: true\n      tags:\n        - PackagesService\n  \"/apis/core/packages/v1alpha1/installedpackages/plugin/{installedPackageRef.plugin.name}/{installedPackageRef.plugin.version}/c/{installedPackageRef.context.cluster}/ns/{installedPackageRef.context.namespace}/{installedPackageRef.identifier}/resourcerefs\":\n    get:\n      operationId: PackagesService_GetInstalledPackageResourceRefs\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1GetInstalledPackageResourceRefs\\\n                  Response\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: installedPackageRef.plugin.name\n          description: \u003e-\n            Plugin name\n\n\n            The name of the plugin, such as `fluxv2.packages` or `kapp_controller.packages`.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.plugin.version\n          description: |-\n            Plugin version\n\n            The version of the plugin, such as v1alpha1\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.identifier\n          description: |-\n            The fully qualified identifier for the installed package\n            (ie. a unique name for the context).\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - PackagesService\n  /apis/core/packages/v1alpha1/repositories:\n    get:\n      operationId: RepositoriesService_GetPackageRepositorySummaries\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1GetPackageRepositorySummariesRe\\\n                  sponse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - RepositoriesService\n    post:\n      operationId: RepositoriesService_AddPackageRepository\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1AddPackageRepositoryResponse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      requestBody:\n        $ref: \"#/components/requestBodies/v1alpha1AddPackageRepositoryRequest\"\n      tags:\n        - RepositoriesService\n  \"/apis/core/packages/v1alpha1/repositories/c/{context.cluster}/permissions\":\n    get:\n      operationId: RepositoriesService_GetPackageRepositoryPermissions\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1GetPackageRepositoryPermissions\\\n                  Response\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - RepositoriesService\n  \"/apis/core/packages/v1alpha1/repositories/plugin/{packageRepoRef.plugin.name}/{packageRepoRef.plugin.version}/c/{packageRepoRef.context.cluster}/ns/{packageRepoRef.context.namespace}/{packageRepoRef.identifier}\":\n    get:\n      operationId: RepositoriesService_GetPackageRepositoryDetail\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1GetPackageRepositoryDetailRespo\\\n                  nse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: packageRepoRef.plugin.name\n          description: \u003e-\n            Plugin name\n\n\n            The name of the plugin, such as `fluxv2.packages` or `kapp_controller.packages`.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: packageRepoRef.plugin.version\n          description: |-\n            Plugin version\n\n            The version of the plugin, such as v1alpha1\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: packageRepoRef.context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: packageRepoRef.context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: packageRepoRef.identifier\n          description: |-\n            The fully qualified identifier for the repository\n            (i.e. a unique name for the context).\n          in: path\n          required: true\n          schema:\n            type: string\n            pattern: .+\n      tags:\n        - RepositoriesService\n    delete:\n      operationId: RepositoriesService_DeletePackageRepository\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1DeletePackageRepositoryResponse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: packageRepoRef.plugin.name\n          description: \u003e-\n            Plugin name\n\n\n            The name of the plugin, such as `fluxv2.packages` or `kapp_controller.packages`.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: packageRepoRef.plugin.version\n          description: |-\n            Plugin version\n\n            The version of the plugin, such as v1alpha1\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: packageRepoRef.context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: packageRepoRef.context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: packageRepoRef.identifier\n          description: |-\n            The fully qualified identifier for the repository\n            (i.e. a unique name for the context).\n          in: path\n          required: true\n          schema:\n            type: string\n            pattern: .+\n      tags:\n        - RepositoriesService\n    put:\n      operationId: RepositoriesService_UpdatePackageRepository\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1UpdatePackageRepositoryResponse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: packageRepoRef.plugin.name\n          description: \u003e-\n            Plugin name\n\n\n            The name of the plugin, such as `fluxv2.packages` or `kapp_controller.packages`.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: packageRepoRef.plugin.version\n          description: |-\n            Plugin version\n\n            The version of the plugin, such as v1alpha1\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: packageRepoRef.context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: packageRepoRef.context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: packageRepoRef.identifier\n          description: |-\n            The fully qualified identifier for the repository\n            (i.e. a unique name for the context).\n          in: path\n          required: true\n          schema:\n            type: string\n            pattern: .+\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                packageRepoRef:\n                  type: object\n                  properties:\n                    context:\n                      type: object\n                      description: The context (cluster/namespace) for the repository.\n                      title: The context (cluster/namespace) for the repository.\n                    plugin:\n                      type: object\n                      example:\n                        name: kapp_controller.packages\n                        version: v1alpha1\n                      description: \u003e-\n                        The plugin used to interact with this available package.\n\n                        This field should be omitted when the request is in the context of a\n\n                        specific plugin.\n                      title: \u003e-\n                        The plugin used to interact with this available package.\n\n                        This field should be omitted when the request is in the context of a\n\n                        specific plugin.\n                  title: \u003e-\n                    A reference uniquely identifying the package repository\n                    being updated.\n\n                    The only required field\n                url:\n                  type: string\n                  description: URL identifying the package repository location.\n                description:\n                  type: string\n                  description: A user-provided description.\n                interval:\n                  type: string\n                  title: \u003e-\n                    The interval at which to check the upstream for updates (in\n                    time+unit)\n\n                    Some plugins may, addionally, support other formats, for instance,\n\n                    a cron expression.\n\n                    e.g., \"*/10 * * * *\" will be equivalent to \"10m\"\n\n                    Optional. Defaults to 10m if not specified\n                tlsConfig:\n                  $ref: \"#/components/schemas/v1alpha1PackageRepositoryTlsConfig\"\n                auth:\n                  $ref: \"#/components/schemas/v1alpha1PackageRepositoryAuth\"\n                customDetail:\n                  $ref: \"#/components/schemas/protobufAny\"\n              description: Request for UpdatePackageRepository\n              title: UpdatePackageRepositoryRequest\n        required: true\n      tags:\n        - RepositoriesService\n  /apis/core/plugins/v1alpha1/configured-plugins:\n    get:\n      summary: GetConfiguredPlugins returns a map of short and longnames for the\n        configured plugins.\n      operationId: PluginsService_GetConfiguredPlugins\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1GetConfiguredPluginsResponse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      tags:\n        - PluginsService\n  /apis/plugins/fluxv2/packages/v1alpha1/availablepackages:\n    get:\n      summary: GetAvailablePackageSummaries returns the available packages managed by\n        the 'fluxv2' plugin\n      operationId: FluxV2PackagesService_GetAvailablePackageSummaries\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1GetAvailablePackageSummariesRes\\\n                  ponse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: filterOptions.query\n          description: |-\n            Text query\n\n            Text query for the request\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: filterOptions.categories\n          description: |-\n            Categories\n\n            Collection of categories for the request\n          in: query\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - name: filterOptions.repositories\n          description: |-\n            Repositories\n\n            Collection of repositories where the packages belong to\n          in: query\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - name: filterOptions.pkgVersion\n          description: |-\n            Package version\n\n            Package version for the request\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: filterOptions.appVersion\n          description: |-\n            App version\n\n            Packaged app version for the request\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: paginationOptions.pageToken\n          description: \u003e-\n            Page token\n\n\n            The client uses this field to request a specific page of the list results.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: paginationOptions.pageSize\n          description: \u003e-\n            Page size\n\n\n            Clients use this field to specify the maximum number of results to be\n\n            returned by the server. The server may further constrain the maximum number\n\n            of results returned in a single page. If the page_size is 0, the server\n\n            will decide the number of results to be returned.\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n      tags:\n        - FluxV2PackagesService\n  \"/apis/plugins/fluxv2/packages/v1alpha1/availablepackages/c/{availablePackageRef.context.cluster}/ns/{availablePackageRef.context.namespace}/{availablePackageRef.identifier}\":\n    get:\n      summary: GetAvailablePackageDetail returns the package metadata managed by the\n        'fluxv2' plugin\n      operationId: FluxV2PackagesService_GetAvailablePackageDetail\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1GetAvailablePackageDetailRespon\\\n                  se\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: availablePackageRef.context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: availablePackageRef.context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: availablePackageRef.identifier\n          description: \u003e-\n            Available package identifier\n\n\n            The fully qualified identifier for the available package\n\n            (ie. a unique name for the context). For some packaging systems\n\n            (particularly those where an available package is backed by a CR) this\n\n            will just be the name, but for others such as those where an available\n\n            package is not backed by a CR (eg. standard helm) it may be necessary\n\n            to include the repository in the name or even the repo namespace\n\n            to ensure this is unique.\n\n            For example two helm repositories can define\n\n            an \"apache\" chart that is available globally, the names would need to\n\n            encode that to be unique (ie. \"repoA:apache\" and \"repoB:apache\").\n          in: path\n          required: true\n          schema:\n            type: string\n            pattern: .+\n        - name: availablePackageRef.plugin.name\n          description: \u003e-\n            Plugin name\n\n\n            The name of the plugin, such as `fluxv2.packages` or `kapp_controller.packages`.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: availablePackageRef.plugin.version\n          description: |-\n            Plugin version\n\n            The version of the plugin, such as v1alpha1\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pkgVersion\n          description: \u003e-\n            Optional specific version (or version reference) to request.\n\n            By default the latest version (or latest version matching the reference)\n\n            will be returned.\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - FluxV2PackagesService\n  \"/apis/plugins/fluxv2/packages/v1alpha1/availablepackages/c/{availablePackageRef.context.cluster}/ns/{availablePackageRef.context.namespace}/{availablePackageRef.identifier}/versions\":\n    get:\n      summary: GetAvailablePackageVersions returns the package versions managed by the\n        'fluxv2' plugin\n      operationId: FluxV2PackagesService_GetAvailablePackageVersions\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1GetAvailablePackageVersionsResp\\\n                  onse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: availablePackageRef.context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: availablePackageRef.context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: availablePackageRef.identifier\n          description: \u003e-\n            Available package identifier\n\n\n            The fully qualified identifier for the available package\n\n            (ie. a unique name for the context). For some packaging systems\n\n            (particularly those where an available package is backed by a CR) this\n\n            will just be the name, but for others such as those where an available\n\n            package is not backed by a CR (eg. standard helm) it may be necessary\n\n            to include the repository in the name or even the repo namespace\n\n            to ensure this is unique.\n\n            For example two helm repositories can define\n\n            an \"apache\" chart that is available globally, the names would need to\n\n            encode that to be unique (ie. \"repoA:apache\" and \"repoB:apache\").\n          in: path\n          required: true\n          schema:\n            type: string\n            pattern: .+\n        - name: availablePackageRef.plugin.name\n          description: \u003e-\n            Plugin name\n\n\n            The name of the plugin, such as `fluxv2.packages` or `kapp_controller.packages`.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: availablePackageRef.plugin.version\n          description: |-\n            Plugin version\n\n            The version of the plugin, such as v1alpha1\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pkgVersion\n          description: \u003e-\n            Optional version reference for which full version history is\n            required.  By\n\n            default a summary of versions is returned as outlined in the response.\n\n            Plugins can choose not to implement this and provide the summary only, it\n\n            is provided for completeness only.\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - FluxV2PackagesService\n  /apis/plugins/fluxv2/packages/v1alpha1/installedpackages:\n    get:\n      summary: GetInstalledPackageSummaries returns the installed packages managed by\n        the 'fluxv2' plugin\n      operationId: FluxV2PackagesService_GetInstalledPackageSummaries\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1GetInstalledPackageSummariesRes\\\n                  ponse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: paginationOptions.pageToken\n          description: \u003e-\n            Page token\n\n\n            The client uses this field to request a specific page of the list results.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: paginationOptions.pageSize\n          description: \u003e-\n            Page size\n\n\n            Clients use this field to specify the maximum number of results to be\n\n            returned by the server. The server may further constrain the maximum number\n\n            of results returned in a single page. If the page_size is 0, the server\n\n            will decide the number of results to be returned.\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n      tags:\n        - FluxV2PackagesService\n    post:\n      summary: CreateInstalledPackage creates an installed package based on the request.\n      operationId: FluxV2PackagesService_CreateInstalledPackage\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1CreateInstalledPackageResponse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      requestBody:\n        $ref: \"#/components/requestBodies/v1alpha1CreateInstalledPackageRequest\"\n      tags:\n        - FluxV2PackagesService\n  \"/apis/plugins/fluxv2/packages/v1alpha1/installedpackages/c/{installedPackageRef.context.cluster}/ns/{installedPackageRef.context.namespace}/{installedPackageRef.identifier}\":\n    get:\n      summary: GetInstalledPackageDetail returns the requested installed package\n        managed by the 'fluxv2' plugin\n      operationId: FluxV2PackagesService_GetInstalledPackageDetail\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1GetInstalledPackageDetailRespon\\\n                  se\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: installedPackageRef.context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.identifier\n          description: |-\n            The fully qualified identifier for the installed package\n            (ie. a unique name for the context).\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.plugin.name\n          description: \u003e-\n            Plugin name\n\n\n            The name of the plugin, such as `fluxv2.packages` or `kapp_controller.packages`.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: installedPackageRef.plugin.version\n          description: |-\n            Plugin version\n\n            The version of the plugin, such as v1alpha1\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - FluxV2PackagesService\n    delete:\n      summary: DeleteInstalledPackage deletes an installed package based on the request.\n      operationId: FluxV2PackagesService_DeleteInstalledPackage\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1DeleteInstalledPackageResponse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: installedPackageRef.context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.identifier\n          description: |-\n            The fully qualified identifier for the installed package\n            (ie. a unique name for the context).\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.plugin.name\n          description: \u003e-\n            Plugin name\n\n\n            The name of the plugin, such as `fluxv2.packages` or `kapp_controller.packages`.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: installedPackageRef.plugin.version\n          description: |-\n            Plugin version\n\n            The version of the plugin, such as v1alpha1\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - FluxV2PackagesService\n    put:\n      summary: UpdateInstalledPackage updates an installed package based on the request.\n      operationId: FluxV2PackagesService_UpdateInstalledPackage\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1UpdateInstalledPackageResponse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: installedPackageRef.context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.identifier\n          description: |-\n            The fully qualified identifier for the installed package\n            (ie. a unique name for the context).\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/FluxV2PackagesService_UpdateInstalledPack\\\n          ageBody\"\n      tags:\n        - FluxV2PackagesService\n  \"/apis/plugins/fluxv2/packages/v1alpha1/installedpackages/c/{installedPackageRef.context.cluster}/ns/{installedPackageRef.context.namespace}/{installedPackageRef.identifier}/resourcerefs\":\n    get:\n      summary: \u003e-\n        GetInstalledPackageResourceRefs returns the references for the\n        Kubernetes\n\n        resources created by an installed package.\n      operationId: FluxV2PackagesService_GetInstalledPackageResourceRefs\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1GetInstalledPackageResourceRefs\\\n                  Response\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: installedPackageRef.context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.identifier\n          description: |-\n            The fully qualified identifier for the installed package\n            (ie. a unique name for the context).\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.plugin.name\n          description: \u003e-\n            Plugin name\n\n\n            The name of the plugin, such as `fluxv2.packages` or `kapp_controller.packages`.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: installedPackageRef.plugin.version\n          description: |-\n            Plugin version\n\n            The version of the plugin, such as v1alpha1\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - FluxV2PackagesService\n  /apis/plugins/fluxv2/packages/v1alpha1/repositories:\n    get:\n      operationId: FluxV2RepositoriesService_GetPackageRepositorySummaries\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1GetPackageRepositorySummariesRe\\\n                  sponse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - FluxV2RepositoriesService\n    post:\n      summary: \u003e-\n        AddPackageRepository add an existing package repository to the set of\n        ones already managed by the\n\n        'fluxv2' plugin\n      operationId: FluxV2RepositoriesService_AddPackageRepository\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1AddPackageRepositoryResponse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      requestBody:\n        $ref: \"#/components/requestBodies/v1alpha1AddPackageRepositoryRequest\"\n      tags:\n        - FluxV2RepositoriesService\n  \"/apis/plugins/fluxv2/packages/v1alpha1/repositories/c/{context.cluster}/permissions\":\n    get:\n      operationId: FluxV2RepositoriesService_GetPackageRepositoryPermissions\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1GetPackageRepositoryPermissions\\\n                  Response\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - FluxV2RepositoriesService\n  \"/apis/plugins/fluxv2/packages/v1alpha1/repositories/c/{packageRepoRef.context.cluster}/ns/{packageRepoRef.context.namespace}/{packageRepoRef.identifier}\":\n    get:\n      operationId: FluxV2RepositoriesService_GetPackageRepositoryDetail\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1GetPackageRepositoryDetailRespo\\\n                  nse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: packageRepoRef.context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: packageRepoRef.context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: packageRepoRef.identifier\n          description: |-\n            The fully qualified identifier for the repository\n            (i.e. a unique name for the context).\n          in: path\n          required: true\n          schema:\n            type: string\n            pattern: .+\n        - name: packageRepoRef.plugin.name\n          description: \u003e-\n            Plugin name\n\n\n            The name of the plugin, such as `fluxv2.packages` or `kapp_controller.packages`.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: packageRepoRef.plugin.version\n          description: |-\n            Plugin version\n\n            The version of the plugin, such as v1alpha1\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - FluxV2RepositoriesService\n    delete:\n      operationId: FluxV2RepositoriesService_DeletePackageRepository\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1DeletePackageRepositoryResponse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: packageRepoRef.context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: packageRepoRef.context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: packageRepoRef.identifier\n          description: |-\n            The fully qualified identifier for the repository\n            (i.e. a unique name for the context).\n          in: path\n          required: true\n          schema:\n            type: string\n            pattern: .+\n        - name: packageRepoRef.plugin.name\n          description: \u003e-\n            Plugin name\n\n\n            The name of the plugin, such as `fluxv2.packages` or `kapp_controller.packages`.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: packageRepoRef.plugin.version\n          description: |-\n            Plugin version\n\n            The version of the plugin, such as v1alpha1\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - FluxV2RepositoriesService\n    put:\n      operationId: FluxV2RepositoriesService_UpdatePackageRepository\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1UpdatePackageRepositoryResponse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: packageRepoRef.context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: packageRepoRef.context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: packageRepoRef.identifier\n          description: |-\n            The fully qualified identifier for the repository\n            (i.e. a unique name for the context).\n          in: path\n          required: true\n          schema:\n            type: string\n            pattern: .+\n      requestBody:\n        $ref: \"#/components/requestBodies/FluxV2RepositoriesService_UpdatePackageRe\\\n          positoryBody\"\n      tags:\n        - FluxV2RepositoriesService\n  /apis/plugins/helm/packages/v1alpha1/availablepackages:\n    get:\n      summary: GetAvailablePackageSummaries returns the available packages managed by\n        the 'helm' plugin\n      operationId: HelmPackagesService_GetAvailablePackageSummaries\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1GetAvailablePackageSummariesRes\\\n                  ponse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: filterOptions.query\n          description: |-\n            Text query\n\n            Text query for the request\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: filterOptions.categories\n          description: |-\n            Categories\n\n            Collection of categories for the request\n          in: query\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - name: filterOptions.repositories\n          description: |-\n            Repositories\n\n            Collection of repositories where the packages belong to\n          in: query\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - name: filterOptions.pkgVersion\n          description: |-\n            Package version\n\n            Package version for the request\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: filterOptions.appVersion\n          description: |-\n            App version\n\n            Packaged app version for the request\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: paginationOptions.pageToken\n          description: \u003e-\n            Page token\n\n\n            The client uses this field to request a specific page of the list results.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: paginationOptions.pageSize\n          description: \u003e-\n            Page size\n\n\n            Clients use this field to specify the maximum number of results to be\n\n            returned by the server. The server may further constrain the maximum number\n\n            of results returned in a single page. If the page_size is 0, the server\n\n            will decide the number of results to be returned.\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n      tags:\n        - HelmPackagesService\n  \"/apis/plugins/helm/packages/v1alpha1/availablepackages/c/{availablePackageRef.context.cluster}/ns/{availablePackageRef.context.namespace}/{availablePackageRef.identifier}\":\n    get:\n      summary: GetAvailablePackageDetail returns the package details managed by the\n        'helm' plugin\n      operationId: HelmPackagesService_GetAvailablePackageDetail\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1GetAvailablePackageDetailRespon\\\n                  se\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: availablePackageRef.context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: availablePackageRef.context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: availablePackageRef.identifier\n          description: \u003e-\n            Available package identifier\n\n\n            The fully qualified identifier for the available package\n\n            (ie. a unique name for the context). For some packaging systems\n\n            (particularly those where an available package is backed by a CR) this\n\n            will just be the name, but for others such as those where an available\n\n            package is not backed by a CR (eg. standard helm) it may be necessary\n\n            to include the repository in the name or even the repo namespace\n\n            to ensure this is unique.\n\n            For example two helm repositories can define\n\n            an \"apache\" chart that is available globally, the names would need to\n\n            encode that to be unique (ie. \"repoA:apache\" and \"repoB:apache\").\n          in: path\n          required: true\n          schema:\n            type: string\n            pattern: .+\n        - name: availablePackageRef.plugin.name\n          description: \u003e-\n            Plugin name\n\n\n            The name of the plugin, such as `fluxv2.packages` or `kapp_controller.packages`.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: availablePackageRef.plugin.version\n          description: |-\n            Plugin version\n\n            The version of the plugin, such as v1alpha1\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pkgVersion\n          description: \u003e-\n            Optional specific version (or version reference) to request.\n\n            By default the latest version (or latest version matching the reference)\n\n            will be returned.\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - HelmPackagesService\n  \"/apis/plugins/helm/packages/v1alpha1/availablepackages/c/{availablePackageRef.context.cluster}/ns/{availablePackageRef.context.namespace}/{availablePackageRef.identifier}/versions\":\n    get:\n      summary: GetAvailablePackageVersions returns the package versions managed by the\n        'helm' plugin\n      operationId: HelmPackagesService_GetAvailablePackageVersions\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1GetAvailablePackageVersionsResp\\\n                  onse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: availablePackageRef.context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: availablePackageRef.context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: availablePackageRef.identifier\n          description: \u003e-\n            Available package identifier\n\n\n            The fully qualified identifier for the available package\n\n            (ie. a unique name for the context). For some packaging systems\n\n            (particularly those where an available package is backed by a CR) this\n\n            will just be the name, but for others such as those where an available\n\n            package is not backed by a CR (eg. standard helm) it may be necessary\n\n            to include the repository in the name or even the repo namespace\n\n            to ensure this is unique.\n\n            For example two helm repositories can define\n\n            an \"apache\" chart that is available globally, the names would need to\n\n            encode that to be unique (ie. \"repoA:apache\" and \"repoB:apache\").\n          in: path\n          required: true\n          schema:\n            type: string\n            pattern: .+\n        - name: availablePackageRef.plugin.name\n          description: \u003e-\n            Plugin name\n\n\n            The name of the plugin, such as `fluxv2.packages` or `kapp_controller.packages`.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: availablePackageRef.plugin.version\n          description: |-\n            Plugin version\n\n            The version of the plugin, such as v1alpha1\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pkgVersion\n          description: \u003e-\n            Optional version reference for which full version history is\n            required.  By\n\n            default a summary of versions is returned as outlined in the response.\n\n            Plugins can choose not to implement this and provide the summary only, it\n\n            is provided for completeness only.\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - HelmPackagesService\n  /apis/plugins/helm/packages/v1alpha1/installedpackages:\n    get:\n      summary: GetInstalledPackageSummaries returns the installed packages managed by\n        the 'helm' plugin\n      operationId: HelmPackagesService_GetInstalledPackageSummaries\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1GetInstalledPackageSummariesRes\\\n                  ponse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: paginationOptions.pageToken\n          description: \u003e-\n            Page token\n\n\n            The client uses this field to request a specific page of the list results.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: paginationOptions.pageSize\n          description: \u003e-\n            Page size\n\n\n            Clients use this field to specify the maximum number of results to be\n\n            returned by the server. The server may further constrain the maximum number\n\n            of results returned in a single page. If the page_size is 0, the server\n\n            will decide the number of results to be returned.\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n      tags:\n        - HelmPackagesService\n    post:\n      summary: CreateInstalledPackage creates an installed package based on the request.\n      operationId: HelmPackagesService_CreateInstalledPackage\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1CreateInstalledPackageResponse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      requestBody:\n        $ref: \"#/components/requestBodies/v1alpha1CreateInstalledPackageRequest\"\n      tags:\n        - HelmPackagesService\n  \"/apis/plugins/helm/packages/v1alpha1/installedpackages/c/{installedPackageRef.context.cluster}/ns/{installedPackageRef.context.namespace}/{installedPackageRef.identifier}\":\n    get:\n      summary: GetInstalledPackageDetail returns the requested installed package\n        managed by the 'helm' plugin\n      operationId: HelmPackagesService_GetInstalledPackageDetail\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1GetInstalledPackageDetailRespon\\\n                  se\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: installedPackageRef.context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.identifier\n          description: |-\n            The fully qualified identifier for the installed package\n            (ie. a unique name for the context).\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.plugin.name\n          description: \u003e-\n            Plugin name\n\n\n            The name of the plugin, such as `fluxv2.packages` or `kapp_controller.packages`.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: installedPackageRef.plugin.version\n          description: |-\n            Plugin version\n\n            The version of the plugin, such as v1alpha1\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - HelmPackagesService\n    delete:\n      summary: DeleteInstalledPackage deletes an installed package based on the request.\n      operationId: HelmPackagesService_DeleteInstalledPackage\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1DeleteInstalledPackageResponse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: installedPackageRef.context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.identifier\n          description: |-\n            The fully qualified identifier for the installed package\n            (ie. a unique name for the context).\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.plugin.name\n          description: \u003e-\n            Plugin name\n\n\n            The name of the plugin, such as `fluxv2.packages` or `kapp_controller.packages`.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: installedPackageRef.plugin.version\n          description: |-\n            Plugin version\n\n            The version of the plugin, such as v1alpha1\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - HelmPackagesService\n    put:\n      summary: UpdateInstalledPackage updates an installed package based on the request.\n      operationId: HelmPackagesService_UpdateInstalledPackage\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1UpdateInstalledPackageResponse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: installedPackageRef.context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.identifier\n          description: |-\n            The fully qualified identifier for the installed package\n            (ie. a unique name for the context).\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/FluxV2PackagesService_UpdateInstalledPack\\\n          ageBody\"\n      tags:\n        - HelmPackagesService\n  \"/apis/plugins/helm/packages/v1alpha1/installedpackages/c/{installedPackageRef.context.cluster}/ns/{installedPackageRef.context.namespace}/{installedPackageRef.identifier}/resourcerefs\":\n    get:\n      summary: \u003e-\n        GetInstalledPackageResourceRefs returns the references for the\n        Kubernetes resources created by\n\n        an installed package.\n      operationId: HelmPackagesService_GetInstalledPackageResourceRefs\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1GetInstalledPackageResourceRefs\\\n                  Response\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: installedPackageRef.context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.identifier\n          description: |-\n            The fully qualified identifier for the installed package\n            (ie. a unique name for the context).\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.plugin.name\n          description: \u003e-\n            Plugin name\n\n\n            The name of the plugin, such as `fluxv2.packages` or `kapp_controller.packages`.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: installedPackageRef.plugin.version\n          description: |-\n            Plugin version\n\n            The version of the plugin, such as v1alpha1\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - HelmPackagesService\n  \"/apis/plugins/helm/packages/v1alpha1/installedpackages/c/{installedPackageRef.context.cluster}/ns/{installedPackageRef.context.namespace}/{installedPackageRef.identifier}/rollback\":\n    put:\n      summary: RollbackInstalledPackage updates an installed package based on the\n        request.\n      operationId: HelmPackagesService_RollbackInstalledPackage\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1RollbackInstalledPackageResponse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: installedPackageRef.context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.identifier\n          description: |-\n            The fully qualified identifier for the installed package\n            (ie. a unique name for the context).\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                installedPackageRef:\n                  type: object\n                  properties:\n                    context:\n                      type: object\n                      description: The context (cluster/namespace) for the package.\n                      title: Installed package context\n                    plugin:\n                      $ref: \"#/components/schemas/v1alpha1Plugin\"\n                  description: A reference uniquely identifying the installed package.\n                  title: Installed package reference\n                releaseRevision:\n                  type: integer\n                  format: int32\n                  description: A number identifying the Helm revision to which to rollback.\n                  title: ReleaseRevision\n        required: true\n      tags:\n        - HelmPackagesService\n  /apis/plugins/helm/packages/v1alpha1/repositories:\n    get:\n      operationId: HelmRepositoriesService_GetPackageRepositorySummaries\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1GetPackageRepositorySummariesRe\\\n                  sponse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - HelmRepositoriesService\n    post:\n      summary: AddPackageRepository add an existing package repository to the set of\n        ones already managed by the Helm plugin\n      operationId: HelmRepositoriesService_AddPackageRepository\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1AddPackageRepositoryResponse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      requestBody:\n        $ref: \"#/components/requestBodies/v1alpha1AddPackageRepositoryRequest\"\n      tags:\n        - HelmRepositoriesService\n  \"/apis/plugins/helm/packages/v1alpha1/repositories/c/{context.cluster}/permissions\":\n    get:\n      operationId: HelmRepositoriesService_GetPackageRepositoryPermissions\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1GetPackageRepositoryPermissions\\\n                  Response\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - HelmRepositoriesService\n  \"/apis/plugins/helm/packages/v1alpha1/repositories/c/{packageRepoRef.context.cluster}/ns/{packageRepoRef.context.namespace}/{packageRepoRef.identifier}\":\n    get:\n      operationId: HelmRepositoriesService_GetPackageRepositoryDetail\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1GetPackageRepositoryDetailRespo\\\n                  nse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: packageRepoRef.context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: packageRepoRef.context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: packageRepoRef.identifier\n          description: |-\n            The fully qualified identifier for the repository\n            (i.e. a unique name for the context).\n          in: path\n          required: true\n          schema:\n            type: string\n            pattern: .+\n        - name: packageRepoRef.plugin.name\n          description: \u003e-\n            Plugin name\n\n\n            The name of the plugin, such as `fluxv2.packages` or `kapp_controller.packages`.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: packageRepoRef.plugin.version\n          description: |-\n            Plugin version\n\n            The version of the plugin, such as v1alpha1\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - HelmRepositoriesService\n    delete:\n      operationId: HelmRepositoriesService_DeletePackageRepository\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1DeletePackageRepositoryResponse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: packageRepoRef.context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: packageRepoRef.context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: packageRepoRef.identifier\n          description: |-\n            The fully qualified identifier for the repository\n            (i.e. a unique name for the context).\n          in: path\n          required: true\n          schema:\n            type: string\n            pattern: .+\n        - name: packageRepoRef.plugin.name\n          description: \u003e-\n            Plugin name\n\n\n            The name of the plugin, such as `fluxv2.packages` or `kapp_controller.packages`.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: packageRepoRef.plugin.version\n          description: |-\n            Plugin version\n\n            The version of the plugin, such as v1alpha1\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - HelmRepositoriesService\n    put:\n      operationId: HelmRepositoriesService_UpdatePackageRepository\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1UpdatePackageRepositoryResponse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: packageRepoRef.context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: packageRepoRef.context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: packageRepoRef.identifier\n          description: |-\n            The fully qualified identifier for the repository\n            (i.e. a unique name for the context).\n          in: path\n          required: true\n          schema:\n            type: string\n            pattern: .+\n      requestBody:\n        $ref: \"#/components/requestBodies/FluxV2RepositoriesService_UpdatePackageRe\\\n          positoryBody\"\n      tags:\n        - HelmRepositoriesService\n  /apis/plugins/kapp_controller/packages/v1alpha1/availablepackages:\n    get:\n      summary: GetAvailablePackageSummaries returns the available packages managed by\n        the 'kapp_controller' plugin\n      operationId: KappControllerPackagesService_GetAvailablePackageSummaries\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1GetAvailablePackageSummariesRes\\\n                  ponse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: filterOptions.query\n          description: |-\n            Text query\n\n            Text query for the request\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: filterOptions.categories\n          description: |-\n            Categories\n\n            Collection of categories for the request\n          in: query\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - name: filterOptions.repositories\n          description: |-\n            Repositories\n\n            Collection of repositories where the packages belong to\n          in: query\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - name: filterOptions.pkgVersion\n          description: |-\n            Package version\n\n            Package version for the request\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: filterOptions.appVersion\n          description: |-\n            App version\n\n            Packaged app version for the request\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: paginationOptions.pageToken\n          description: \u003e-\n            Page token\n\n\n            The client uses this field to request a specific page of the list results.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: paginationOptions.pageSize\n          description: \u003e-\n            Page size\n\n\n            Clients use this field to specify the maximum number of results to be\n\n            returned by the server. The server may further constrain the maximum number\n\n            of results returned in a single page. If the page_size is 0, the server\n\n            will decide the number of results to be returned.\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n      tags:\n        - KappControllerPackagesService\n  \"/apis/plugins/kapp_controller/packages/v1alpha1/availablepackages/c/{availablePackageRef.context.cluster}/ns/{availablePackageRef.context.namespace}/{availablePackageRef.identifier}\":\n    get:\n      summary: GetAvailablePackageDetail returns the package details managed by the\n        'kapp_controller' plugin\n      operationId: KappControllerPackagesService_GetAvailablePackageDetail\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1GetAvailablePackageDetailRespon\\\n                  se\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: availablePackageRef.context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: availablePackageRef.context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: availablePackageRef.identifier\n          description: \u003e-\n            Available package identifier\n\n\n            The fully qualified identifier for the available package\n\n            (ie. a unique name for the context). For some packaging systems\n\n            (particularly those where an available package is backed by a CR) this\n\n            will just be the name, but for others such as those where an available\n\n            package is not backed by a CR (eg. standard helm) it may be necessary\n\n            to include the repository in the name or even the repo namespace\n\n            to ensure this is unique.\n\n            For example two helm repositories can define\n\n            an \"apache\" chart that is available globally, the names would need to\n\n            encode that to be unique (ie. \"repoA:apache\" and \"repoB:apache\").\n          in: path\n          required: true\n          schema:\n            type: string\n            pattern: .+\n        - name: availablePackageRef.plugin.name\n          description: \u003e-\n            Plugin name\n\n\n            The name of the plugin, such as `fluxv2.packages` or `kapp_controller.packages`.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: availablePackageRef.plugin.version\n          description: |-\n            Plugin version\n\n            The version of the plugin, such as v1alpha1\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pkgVersion\n          description: \u003e-\n            Optional specific version (or version reference) to request.\n\n            By default the latest version (or latest version matching the reference)\n\n            will be returned.\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - KappControllerPackagesService\n  \"/apis/plugins/kapp_controller/packages/v1alpha1/availablepackages/c/{availablePackageRef.context.cluster}/ns/{availablePackageRef.context.namespace}/{availablePackageRef.identifier}/versions\":\n    get:\n      summary: GetAvailablePackageVersions returns the package versions managed by the\n        'kapp_controller' plugin\n      operationId: KappControllerPackagesService_GetAvailablePackageVersions\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1GetAvailablePackageVersionsResp\\\n                  onse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: availablePackageRef.context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: availablePackageRef.context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: availablePackageRef.identifier\n          description: \u003e-\n            Available package identifier\n\n\n            The fully qualified identifier for the available package\n\n            (ie. a unique name for the context). For some packaging systems\n\n            (particularly those where an available package is backed by a CR) this\n\n            will just be the name, but for others such as those where an available\n\n            package is not backed by a CR (eg. standard helm) it may be necessary\n\n            to include the repository in the name or even the repo namespace\n\n            to ensure this is unique.\n\n            For example two helm repositories can define\n\n            an \"apache\" chart that is available globally, the names would need to\n\n            encode that to be unique (ie. \"repoA:apache\" and \"repoB:apache\").\n          in: path\n          required: true\n          schema:\n            type: string\n            pattern: .+\n        - name: availablePackageRef.plugin.name\n          description: \u003e-\n            Plugin name\n\n\n            The name of the plugin, such as `fluxv2.packages` or `kapp_controller.packages`.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: availablePackageRef.plugin.version\n          description: |-\n            Plugin version\n\n            The version of the plugin, such as v1alpha1\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pkgVersion\n          description: \u003e-\n            Optional version reference for which full version history is\n            required.  By\n\n            default a summary of versions is returned as outlined in the response.\n\n            Plugins can choose not to implement this and provide the summary only, it\n\n            is provided for completeness only.\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - KappControllerPackagesService\n  /apis/plugins/kapp_controller/packages/v1alpha1/installedpackages:\n    get:\n      summary: GetInstalledPackageSummaries returns the installed packages managed by\n        the 'kapp_controller' plugin\n      operationId: KappControllerPackagesService_GetInstalledPackageSummaries\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1GetInstalledPackageSummariesRes\\\n                  ponse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: paginationOptions.pageToken\n          description: \u003e-\n            Page token\n\n\n            The client uses this field to request a specific page of the list results.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: paginationOptions.pageSize\n          description: \u003e-\n            Page size\n\n\n            Clients use this field to specify the maximum number of results to be\n\n            returned by the server. The server may further constrain the maximum number\n\n            of results returned in a single page. If the page_size is 0, the server\n\n            will decide the number of results to be returned.\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n      tags:\n        - KappControllerPackagesService\n    post:\n      summary: CreateInstalledPackage creates an installed package based on the request.\n      operationId: KappControllerPackagesService_CreateInstalledPackage\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1CreateInstalledPackageResponse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      requestBody:\n        $ref: \"#/components/requestBodies/v1alpha1CreateInstalledPackageRequest\"\n      tags:\n        - KappControllerPackagesService\n  \"/apis/plugins/kapp_controller/packages/v1alpha1/installedpackages/c/{installedPackageRef.context.cluster}/ns/{installedPackageRef.context.namespace}/{installedPackageRef.identifier}\":\n    get:\n      summary: GetInstalledPackageDetail returns the requested installed package\n        managed by the 'kapp_controller' plugin\n      operationId: KappControllerPackagesService_GetInstalledPackageDetail\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1GetInstalledPackageDetailRespon\\\n                  se\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: installedPackageRef.context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.identifier\n          description: |-\n            The fully qualified identifier for the installed package\n            (ie. a unique name for the context).\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.plugin.name\n          description: \u003e-\n            Plugin name\n\n\n            The name of the plugin, such as `fluxv2.packages` or `kapp_controller.packages`.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: installedPackageRef.plugin.version\n          description: |-\n            Plugin version\n\n            The version of the plugin, such as v1alpha1\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - KappControllerPackagesService\n    delete:\n      summary: DeleteInstalledPackage deletes an installed package based on the request.\n      operationId: KappControllerPackagesService_DeleteInstalledPackage\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1DeleteInstalledPackageResponse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: installedPackageRef.context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.identifier\n          description: |-\n            The fully qualified identifier for the installed package\n            (ie. a unique name for the context).\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.plugin.name\n          description: \u003e-\n            Plugin name\n\n\n            The name of the plugin, such as `fluxv2.packages` or `kapp_controller.packages`.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: installedPackageRef.plugin.version\n          description: |-\n            Plugin version\n\n            The version of the plugin, such as v1alpha1\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - KappControllerPackagesService\n    put:\n      summary: UpdateInstalledPackage updates an installed package based on the request.\n      operationId: KappControllerPackagesService_UpdateInstalledPackage\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1UpdateInstalledPackageResponse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: installedPackageRef.context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.identifier\n          description: |-\n            The fully qualified identifier for the installed package\n            (ie. a unique name for the context).\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/FluxV2PackagesService_UpdateInstalledPack\\\n          ageBody\"\n      tags:\n        - KappControllerPackagesService\n  \"/apis/plugins/kapp_controller/packages/v1alpha1/installedpackages/c/{installedPackageRef.context.cluster}/ns/{installedPackageRef.context.namespace}/{installedPackageRef.identifier}/resourcerefs\":\n    get:\n      summary: \u003e-\n        GetInstalledPackageResourceRefs returns the references for the\n        Kubernetes resources created by\n\n        an installed package.\n      operationId: KappControllerPackagesService_GetInstalledPackageResourceRefs\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1GetInstalledPackageResourceRefs\\\n                  Response\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: installedPackageRef.context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.identifier\n          description: |-\n            The fully qualified identifier for the installed package\n            (ie. a unique name for the context).\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.plugin.name\n          description: \u003e-\n            Plugin name\n\n\n            The name of the plugin, such as `fluxv2.packages` or `kapp_controller.packages`.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: installedPackageRef.plugin.version\n          description: |-\n            Plugin version\n\n            The version of the plugin, such as v1alpha1\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - KappControllerPackagesService\n  /apis/plugins/kapp_controller/packages/v1alpha1/repositories:\n    get:\n      operationId: KappControllerRepositoriesService_GetPackageRepositorySummaries\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1GetPackageRepositorySummariesRe\\\n                  sponse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - KappControllerRepositoriesService\n    post:\n      summary: AddPackageRepository add an existing package repository to the set of\n        ones already managed by the 'kapp_controller' plugin\n      operationId: KappControllerRepositoriesService_AddPackageRepository\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1AddPackageRepositoryResponse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      requestBody:\n        $ref: \"#/components/requestBodies/v1alpha1AddPackageRepositoryRequest\"\n      tags:\n        - KappControllerRepositoriesService\n  \"/apis/plugins/kapp_controller/packages/v1alpha1/repositories/c/{context.cluster}/permissions\":\n    get:\n      operationId: KappControllerRepositoriesService_GetPackageRepositoryPermissions\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1GetPackageRepositoryPermissions\\\n                  Response\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - KappControllerRepositoriesService\n  \"/apis/plugins/kapp_controller/packages/v1alpha1/repositories/c/{packageRepoRef.context.cluster}/ns/{packageRepoRef.context.namespace}/{packageRepoRef.identifier}\":\n    get:\n      operationId: KappControllerRepositoriesService_GetPackageRepositoryDetail\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1GetPackageRepositoryDetailRespo\\\n                  nse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: packageRepoRef.context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: packageRepoRef.context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: packageRepoRef.identifier\n          description: |-\n            The fully qualified identifier for the repository\n            (i.e. a unique name for the context).\n          in: path\n          required: true\n          schema:\n            type: string\n            pattern: .+\n        - name: packageRepoRef.plugin.name\n          description: \u003e-\n            Plugin name\n\n\n            The name of the plugin, such as `fluxv2.packages` or `kapp_controller.packages`.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: packageRepoRef.plugin.version\n          description: |-\n            Plugin version\n\n            The version of the plugin, such as v1alpha1\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - KappControllerRepositoriesService\n    delete:\n      operationId: KappControllerRepositoriesService_DeletePackageRepository\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1DeletePackageRepositoryResponse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: packageRepoRef.context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: packageRepoRef.context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: packageRepoRef.identifier\n          description: |-\n            The fully qualified identifier for the repository\n            (i.e. a unique name for the context).\n          in: path\n          required: true\n          schema:\n            type: string\n            pattern: .+\n        - name: packageRepoRef.plugin.name\n          description: \u003e-\n            Plugin name\n\n\n            The name of the plugin, such as `fluxv2.packages` or `kapp_controller.packages`.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: packageRepoRef.plugin.version\n          description: |-\n            Plugin version\n\n            The version of the plugin, such as v1alpha1\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - KappControllerRepositoriesService\n    put:\n      operationId: KappControllerRepositoriesService_UpdatePackageRepository\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1UpdatePackageRepositoryResponse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: packageRepoRef.context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: packageRepoRef.context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: packageRepoRef.identifier\n          description: |-\n            The fully qualified identifier for the repository\n            (i.e. a unique name for the context).\n          in: path\n          required: true\n          schema:\n            type: string\n            pattern: .+\n      requestBody:\n        $ref: \"#/components/requestBodies/FluxV2RepositoriesService_UpdatePackageRe\\\n          positoryBody\"\n      tags:\n        - KappControllerRepositoriesService\n  \"/apis/plugins/resources/v1alpha1/c/{cluster}/namespacenames\":\n    get:\n      operationId: ResourcesService_GetNamespaceNames\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1GetNamespaceNamesResponse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: cluster\n          description: \u003e-\n            Cluster\n\n\n            The context for which the namespace names are being fetched.  The service\n\n            will attempt to list namespaces across the cluster, first with the users\n\n            credential, then with a configured service account if available.\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - ResourcesService\n  \"/apis/plugins/resources/v1alpha1/c/{context.cluster}/can-i\":\n    post:\n      operationId: ResourcesService_CanI\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1CanIResponse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: group\n          description: |-\n            Group API Group of the Resource.  \"*\" means all.\n            +optional\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: resource\n          description: |-\n            Resource is one of the existing resource types.  \"*\" means all.\n            +optional\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: verb\n          description: \u003e-\n            Verb is a kubernetes resource API verb, like: get, list, watch,\n            create, update, delete, proxy.  \"*\" means all.\n\n            +optional\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - ResourcesService\n  \"/apis/plugins/resources/v1alpha1/c/{context.cluster}/ns\":\n    post:\n      operationId: ResourcesService_CreateNamespace\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1CreateNamespaceResponse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - ResourcesService\n  \"/apis/plugins/resources/v1alpha1/c/{context.cluster}/ns/{context.namespace}\":\n    get:\n      operationId: ResourcesService_CheckNamespaceExists\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1CheckNamespaceExistsResponse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - ResourcesService\n  \"/apis/plugins/resources/v1alpha1/c/{context.cluster}/ns/{context.namespace}/secretnames\":\n    get:\n      operationId: ResourcesService_GetSecretNames\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1GetSecretNamesResponse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - ResourcesService\n  \"/apis/plugins/resources/v1alpha1/c/{context.cluster}/ns/{context.namespace}/secrets\":\n    post:\n      operationId: ResourcesService_CreateSecret\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1CreateSecretResponse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: type\n          description: \u003e-\n            Type\n\n\n            The type of the secret. Valid values are defined by the Type enumeration.\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - SECRET_TYPE_OPAQUE_UNSPECIFIED\n              - SECRET_TYPE_SERVICE_ACCOUNT_TOKEN\n              - SECRET_TYPE_DOCKER_CONFIG\n              - SECRET_TYPE_DOCKER_CONFIG_JSON\n              - SECRET_TYPE_BASIC_AUTH\n              - SECRET_TYPE_SSH_AUTH\n              - SECRET_TYPE_TLS\n              - SECRET_TYPE_BOOTSTRAP_TOKEN\n            default: SECRET_TYPE_OPAQUE_UNSPECIFIED\n        - name: name\n          description: |-\n            Name\n\n            The name of the secret.\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - ResourcesService\n  \"/apis/plugins/resources/v1alpha1/c/{context.cluster}/ns/{context.namespace}/serviceaccountnames\":\n    get:\n      operationId: ResourcesService_GetServiceAccountNames\n      responses:\n        \"200\":\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1alpha1GetServiceAccountNamesResponse\"\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - ResourcesService\n  \"/apis/plugins/resources/v1alpha1/{installedPackageRef.plugin.name}/{installedPackageRef.plugin.version}/c/{installedPackageRef.context.cluster}/ns/{installedPackageRef.context.namespace}/{installedPackageRef.identifier}\":\n    get:\n      operationId: ResourcesService_GetResources\n      responses:\n        \"200\":\n          description: A successful response.(streaming responses)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    $ref: \"#/components/schemas/v1alpha1GetResourcesResponse\"\n                  error:\n                    $ref: \"#/components/schemas/rpcStatus\"\n                title: Stream result of v1alpha1GetResourcesResponse\n        \"401\":\n          description: Returned when the user does not have permission to access the\n            resource.\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rpcStatus\"\n      parameters:\n        - name: installedPackageRef.plugin.name\n          description: \u003e-\n            Plugin name\n\n\n            The name of the plugin, such as `fluxv2.packages` or `kapp_controller.packages`.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.plugin.version\n          description: |-\n            Plugin version\n\n            The version of the plugin, such as v1alpha1\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.context.cluster\n          description: \u003e-\n            Cluster\n\n\n            A cluster name can be provided to target a specific cluster if multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.context.namespace\n          description: \u003e-\n            Namespace\n\n\n            A namespace must be provided if the context of the operation is for a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: installedPackageRef.identifier\n          description: |-\n            The fully qualified identifier for the installed package\n            (ie. a unique name for the context).\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: watch\n          description: |-\n            Watch\n\n            When true, this will cause the stream to remain open with updated\n            resources being sent as events are received from the Kubernetes API\n            server.\n          in: query\n          required: false\n          schema:\n            type: boolean\n      tags:\n        - ResourcesService\ncomponents:\n  requestBodies:\n    FluxV2RepositoriesService_UpdatePackageRepositoryBody:\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              packageRepoRef:\n                type: object\n                properties:\n                  context:\n                    type: object\n                    description: The context (cluster/namespace) for the repository.\n                    title: The context (cluster/namespace) for the repository.\n                  plugin:\n                    $ref: \"#/components/schemas/v1alpha1Plugin\"\n                title: \u003e-\n                  A reference uniquely identifying the package repository being\n                  updated.\n\n                  The only required field\n              url:\n                type: string\n                description: URL identifying the package repository location.\n              description:\n                type: string\n                description: A user-provided description.\n              interval:\n                type: string\n                title: \u003e-\n                  The interval at which to check the upstream for updates (in\n                  time+unit)\n\n                  Some plugins may, addionally, support other formats, for instance,\n\n                  a cron expression.\n\n                  e.g., \"*/10 * * * *\" will be equivalent to \"10m\"\n\n                  Optional. Defaults to 10m if not specified\n              tlsConfig:\n                $ref: \"#/components/schemas/v1alpha1PackageRepositoryTlsConfig\"\n              auth:\n                $ref: \"#/components/schemas/v1alpha1PackageRepositoryAuth\"\n              customDetail:\n                $ref: \"#/components/schemas/protobufAny\"\n            description: Request for UpdatePackageRepository\n            title: UpdatePackageRepositoryRequest\n      required: true\n    v1alpha1CreateInstalledPackageRequest:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/v1alpha1CreateInstalledPackageRequest\"\n      description: Request for CreateInstalledPackage\n      required: true\n    v1alpha1AddPackageRepositoryRequest:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/v1alpha1AddPackageRepositoryRequest\"\n      description: Request for AddPackageRepository\n      required: true\n    FluxV2PackagesService_UpdateInstalledPackageBody:\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              installedPackageRef:\n                type: object\n                properties:\n                  context:\n                    type: object\n                    description: The context (cluster/namespace) for the package.\n                    title: Installed package context\n                  plugin:\n                    $ref: \"#/components/schemas/v1alpha1Plugin\"\n                title: \u003e-\n                  A reference uniquely identifying the installed package being\n                  updated.\n\n                  Required\n              pkgVersionReference:\n                $ref: \"#/components/schemas/v1alpha1VersionReference\"\n              values:\n                type: string\n                description: \u003e-\n                  An optional serialized values string to be included when\n                  templating a\n\n                  package in the format expected by the plugin. Included when the backend\n\n                  format doesn't use secrets or configmaps for values or supports both.\n\n                  These values are layered on top of any values refs above, when\n\n                  relevant.\n              reconciliationOptions:\n                $ref: \"#/components/schemas/v1alpha1ReconciliationOptions\"\n            description: \u003e-\n              Request for UpdateInstalledPackage. The intent is to reach the\n              desired state specified\n\n              by the fields in the request, while leaving other fields intact. This is a whole\n\n              object \"Update\" semantics rather than \"Patch\" semantics. The caller will provide the\n\n              values for the fields below, which will replace, or be overlaid onto, the\n\n              corresponding fields in the existing resource. For example, with the\n\n              UpdateInstalledPackageRequest, it is not possible to change just the 'package version\n\n              reference' without also specifying 'values' field. As a side effect, not specifying the\n\n              'values' field in the request means there are no values specified in the desired state.\n\n              So the meaning of each field value is describing the desired state of the corresponding\n\n              field in the resource after the update operation has completed the renconciliation.\n            title: UpdateInstalledPackageRequest\n      required: true\n  securitySchemes:\n    ApiKeyAuth:\n      type: apiKey\n      name: Authorization\n      in: header\n  schemas:\n    PackageRepositoryAuthPackageRepositoryAuthType:\n      type: string\n      enum:\n        - PACKAGE_REPOSITORY_AUTH_TYPE_UNSPECIFIED\n        - PACKAGE_REPOSITORY_AUTH_TYPE_BASIC_AUTH\n        - PACKAGE_REPOSITORY_AUTH_TYPE_TLS\n        - PACKAGE_REPOSITORY_AUTH_TYPE_BEARER\n        - PACKAGE_REPOSITORY_AUTH_TYPE_AUTHORIZATION_HEADER\n        - PACKAGE_REPOSITORY_AUTH_TYPE_DOCKER_CONFIG_JSON\n        - PACKAGE_REPOSITORY_AUTH_TYPE_SSH\n        - PACKAGE_REPOSITORY_AUTH_TYPE_OPAQUE\n      default: PACKAGE_REPOSITORY_AUTH_TYPE_UNSPECIFIED\n    protobufAny:\n      type: object\n      properties:\n        \"@type\":\n          type: string\n          description: \u003e-\n            A URL/resource name that uniquely identifies the type of the\n            serialized\n\n            protocol buffer message. This string must contain at least\n\n            one \"/\" character. The last segment of the URL's path must represent\n\n            the fully qualified name of the type (as in\n\n            `path/google.protobuf.Duration`). The name should be in a canonical form\n\n            (e.g., leading \".\" is not accepted).\n\n\n            In practice, teams usually precompile into the binary all types that they\n\n            expect it to use in the context of Any. However, for URLs which use the\n\n            scheme `http`, `https`, or no scheme, one can optionally set up a type\n\n            server that maps type URLs to message definitions as follows:\n\n\n            * If no scheme is provided, `https` is assumed.\n\n            * An HTTP GET on the URL must yield a [google.protobuf.Type][]\n              value in binary format, or produce an error.\n            * Applications are allowed to cache lookup results based on the\n              URL, or have them precompiled into a binary to avoid any\n              lookup. Therefore, binary compatibility needs to be preserved\n              on changes to types. (Use versioned type names to manage\n              breaking changes.)\n\n            Note: this functionality is not currently available in the official\n\n            protobuf release, and it is not used for type URLs beginning with\n\n            type.googleapis.com.\n\n\n            Schemes other than `http`, `https` (or the empty scheme) might be\n\n            used with implementation specific semantics.\n      additionalProperties: {}\n      description: \u003e-\n        `Any` contains an arbitrary serialized protocol buffer message along\n        with a\n\n        URL that describes the type of the serialized message.\n\n\n        Protobuf library provides support to pack/unpack Any values in the form\n\n        of utility functions or additional generated methods of the Any type.\n\n\n        Example 1: Pack and unpack a message in C++.\n\n            Foo foo = ...;\n            Any any;\n            any.PackFrom(foo);\n            ...\n            if (any.UnpackTo(\u0026foo)) {\n              ...\n            }\n\n        Example 2: Pack and unpack a message in Java.\n\n            Foo foo = ...;\n            Any any = Any.pack(foo);\n            ...\n            if (any.is(Foo.class)) {\n              foo = any.unpack(Foo.class);\n            }\n\n        Example 3: Pack and unpack a message in Python.\n\n            foo = Foo(...)\n            any = Any()\n            any.Pack(foo)\n            ...\n            if any.Is(Foo.DESCRIPTOR):\n              any.Unpack(foo)\n              ...\n\n        Example 4: Pack and unpack a message in Go\n\n             foo := \u0026pb.Foo{...}\n             any, err := anypb.New(foo)\n             if err != nil {\n               ...\n             }\n             ...\n             foo := \u0026pb.Foo{}\n             if err := any.UnmarshalTo(foo); err != nil {\n               ...\n             }\n\n        The pack methods provided by protobuf library will by default use\n\n        'type.googleapis.com/full.type.name' as the type URL and the unpack\n\n        methods only use the fully qualified type name after the last '/'\n\n        in the type URL, for example \"foo.bar.com/x/y.z\" will yield type\n\n        name \"y.z\".\n\n\n        JSON\n\n\n        The JSON representation of an `Any` value uses the regular\n\n        representation of the deserialized, embedded message, with an\n\n        additional field `@type` which contains the type URL. Example:\n\n            package google.profile;\n            message Person {\n              string first_name = 1;\n              string last_name = 2;\n            }\n\n            {\n              \"@type\": \"type.googleapis.com/google.profile.Person\",\n              \"firstName\": ,\n              \"lastName\":\n            }\n\n        If the embedded message type is well-known and has a custom JSON\n\n        representation, that representation will be embedded adding a field\n\n        `value` which holds the custom JSON in addition to the `@type`\n\n        field. Example (for message [google.protobuf.Duration][]):\n\n            {\n              \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n              \"value\": \"1.212s\"\n            }\n    rpcStatus:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string\n        details:\n          type: array\n          items:\n            $ref: \"#/components/schemas/protobufAny\"\n    v1alpha1AddPackageRepositoryRequest:\n      type: object\n      properties:\n        context:\n          $ref: \"#/components/schemas/v1alpha1Context\"\n        name:\n          type: string\n          title: A user-provided name for the package repository (e.g. bitnami)\n        description:\n          type: string\n          title: A user-provided description. Optional\n        namespaceScoped:\n          type: boolean\n          title: |-\n            Whether this repository is global or namespace-scoped. Optional.\n            By default, the value is false, i.e. the repository is global\n        type:\n          type: string\n          title: \u003e-\n            Package storage type\n\n            In general, each plug-in will define an acceptable set of valid types\n\n            - for direct helm plug-in valid values are: \"helm\" and \"oci\"\n\n            - for flux plug-in valid values are: \"helm\" and \"oci\". In the\n              future, we may add support for git and/or AWS s3-style buckets\n        url:\n          type: string\n          title: |-\n            A URL identifying the package repository location. Must contain at\n            least a protocol and host\n        interval:\n          type: string\n          title: \u003e-\n            The interval at which to check the upstream for updates (in\n            time+unit)\n\n            Some plugins may, addionally, support other formats, for instance,\n\n            a cron expression.\n\n            e.g., \"*/10 * * * *\" will be equivalent to \"10m\"\n\n            Optional. Defaults to 10m if not specified\n        tlsConfig:\n          $ref: \"#/components/schemas/v1alpha1PackageRepositoryTlsConfig\"\n        auth:\n          $ref: \"#/components/schemas/v1alpha1PackageRepositoryAuth\"\n        plugin:\n          $ref: \"#/components/schemas/v1alpha1Plugin\"\n        customDetail:\n          $ref: \"#/components/schemas/protobufAny\"\n      description: Request for AddPackageRepository\n      title: AddPackageRepositoryRequest\n    v1alpha1AddPackageRepositoryResponse:\n      type: object\n      properties:\n        packageRepoRef:\n          $ref: \"#/components/schemas/v1alpha1PackageRepositoryReference\"\n      description: Response for AddPackageRepositoryRequest\n      title: AddPackageRepositoryResponse\n    v1alpha1AvailablePackageDetail:\n      type: object\n      properties:\n        availablePackageRef:\n          $ref: \"#/components/schemas/v1alpha1AvailablePackageReference\"\n        name:\n          type: string\n          description: The name of the available package\n          title: Available package name\n        version:\n          $ref: \"#/components/schemas/v1alpha1PackageAppVersion\"\n        repoUrl:\n          type: string\n          title: the url of the package repository that contains this package\n        homeUrl:\n          type: string\n          title: the url of the “home” for the package\n        iconUrl:\n          type: string\n          description: A url for an icon.\n          title: Available package icon URL\n        displayName:\n          type: string\n          description: A name as displayed to users\n          title: Available package display name\n        shortDescription:\n          type: string\n          description: A short description of the app provided by the package\n          title: Available package short description\n        longDescription:\n          type: string\n          description: A longer description of the package, a few sentences.\n          title: Available package long description\n        readme:\n          type: string\n          description: A longer README with potentially pages of formatted Markdown.\n          title: Available package readme\n        defaultValues:\n          type: string\n          description: \u003e-\n            An example of default values used during package templating that can\n            serve\n\n            as documentation or a starting point for user customization.\n          title: Available package default values\n        additionalDefaultValues:\n          type: object\n          additionalProperties:\n            type: string\n          description: \u003e-\n            A package may contain additional default value files for specific\n            scenarios,\n\n            such as values_production.yaml or values_dev.yaml\n          title: Available package additional default values\n        valuesSchema:\n          type: string\n        sourceUrls:\n          type: array\n          items:\n            type: string\n          title: source urls for the package\n        maintainers:\n          type: array\n          items:\n            $ref: \"#/components/schemas/v1alpha1Maintainer\"\n          description: List of Maintainer\n          title: Available package maintainers\n        categories:\n          type: array\n          items:\n            type: string\n          description: \u003e-\n            A user-facing list of category names useful for creating richer user\n            interfaces.\n\n            Plugins can choose not to implement this\n          title: Available package categories\n        customDetail:\n          $ref: \"#/components/schemas/protobufAny\"\n      description: |-\n        An AvailablePackageDetail provides additional details required when\n        inspecting an individual package.\n      title: AvailablePackageDetail\n    v1alpha1AvailablePackageReference:\n      type: object\n      properties:\n        context:\n          $ref: \"#/components/schemas/v1alpha1Context\"\n        identifier:\n          type: string\n          description: \u003e-\n            The fully qualified identifier for the available package\n\n            (ie. a unique name for the context). For some packaging systems\n\n            (particularly those where an available package is backed by a CR) this\n\n            will just be the name, but for others such as those where an available\n\n            package is not backed by a CR (eg. standard helm) it may be necessary\n\n            to include the repository in the name or even the repo namespace\n\n            to ensure this is unique.\n\n            For example two helm repositories can define\n\n            an \"apache\" chart that is available globally, the names would need to\n\n            encode that to be unique (ie. \"repoA:apache\" and \"repoB:apache\").\n          title: Available package identifier\n        plugin:\n          $ref: \"#/components/schemas/v1alpha1Plugin\"\n      description: \u003e-\n        An AvailablePackageReference has the minimum information required to\n        uniquely\n\n        identify an available package. This is re-used on the summary and details of an\n\n        available package.\n      title: AvailablePackageReference\n    v1alpha1AvailablePackageSummary:\n      type: object\n      properties:\n        availablePackageRef:\n          $ref: \"#/components/schemas/v1alpha1AvailablePackageReference\"\n        name:\n          type: string\n          description: The name of the available package\n          title: Available package name\n        latestVersion:\n          $ref: \"#/components/schemas/v1alpha1PackageAppVersion\"\n        iconUrl:\n          type: string\n          description: A url for an icon.\n          title: Available package Icon URL\n        displayName:\n          type: string\n          description: A name as displayed to users\n          title: Available package display name\n        shortDescription:\n          type: string\n          description: A short description of the app provided by the package\n          title: Available package short description\n        categories:\n          type: array\n          items:\n            type: string\n          description: \u003e-\n            A user-facing list of category names useful for creating richer user\n            interfaces.\n\n            Plugins can choose not to implement this\n          title: Available package categories\n      description: \u003e-\n        An AvailablePackageSummary provides a summary of a package available for\n        installation\n\n        useful when aggregating many available packages.\n      title: AvailablePackageSummary\n    v1alpha1CanIResponse:\n      type: object\n      properties:\n        allowed:\n          type: boolean\n          description: True if operation is allowed\n          title: allowed\n      description: Response for CanI operation\n      title: CanIResponse\n    v1alpha1CheckNamespaceExistsResponse:\n      type: object\n      properties:\n        exists:\n          type: boolean\n      description: Response for CheckNamespaceExists\n      title: CheckNamespaceExistsResponse\n    v1alpha1Context:\n      type: object\n      properties:\n        cluster:\n          type: string\n          description: \u003e-\n            A cluster name can be provided to target a specific cluster if\n            multiple\n\n            clusters are configured, otherwise all clusters will be assumed.\n          title: Cluster\n        namespace:\n          type: string\n          description: \u003e-\n            A namespace must be provided if the context of the operation is for\n            a resource\n\n            or resources in a particular namespace.\n\n            For requests to list items, not including a namespace here implies that the context\n\n            for the request is everything the requesting user can read, though the result can\n\n            be filtered by any filtering options of the request. Plugins may choose to return\n\n            Unimplemented for some queries for which we do not yet have a need.\n          title: Namespace\n      description: A Context specifies the context of the message\n      title: Context\n    v1alpha1CreateInstalledPackageRequest:\n      type: object\n      properties:\n        availablePackageRef:\n          $ref: \"#/components/schemas/v1alpha1AvailablePackageReference\"\n        targetContext:\n          $ref: \"#/components/schemas/v1alpha1Context\"\n        name:\n          type: string\n          title: A user-provided name for the installed package (eg. project-x-db)\n        pkgVersionReference:\n          $ref: \"#/components/schemas/v1alpha1VersionReference\"\n        values:\n          type: string\n          description: \u003e-\n            An optional serialized values string to be included when templating\n            a package\n\n            in the format expected by the plugin. Included when the backend format doesn't\n\n            use secrets or configmaps for values or supports both. These values are layered\n\n            on top of any values refs above, when relevant.\n        reconciliationOptions:\n          $ref: \"#/components/schemas/v1alpha1ReconciliationOptions\"\n      description: Request for CreateInstalledPackage\n      title: CreateInstalledPackageRequest\n    v1alpha1CreateInstalledPackageResponse:\n      type: object\n      properties:\n        installedPackageRef:\n          $ref: \"#/components/schemas/v1alpha1InstalledPackageReference\"\n      description: Response for CreateInstalledPackage\n      title: CreateInstalledPackageResponse\n    v1alpha1CreateNamespaceResponse:\n      type: object\n      description: Response for CreateNamespace\n      title: CreateNamespaceResponse\n    v1alpha1CreateSecretResponse:\n      type: object\n      description: Response for CreateSecret\n      title: CreateSecretResponse\n    v1alpha1DeleteInstalledPackageResponse:\n      type: object\n      description: Response for DeleteInstalledPackage\n      title: DeleteInstalledPackageResponse\n    v1alpha1DeletePackageRepositoryResponse:\n      type: object\n      description: Response for DeletePackageRepository\n      title: DeletePackageRepositoryResponse\n    v1alpha1DockerCredentials:\n      type: object\n      properties:\n        server:\n          type: string\n          title: server name\n        username:\n          type: string\n          description: username.\n        password:\n          type: string\n          title: password. In clear text\n        email:\n          type: string\n          title: email address\n      title: DockerCredentials\n    v1alpha1FilterOptions:\n      type: object\n      properties:\n        query:\n          type: string\n          description: Text query for the request\n          title: Text query\n        categories:\n          type: array\n          items:\n            type: string\n          description: Collection of categories for the request\n          title: Categories\n        repositories:\n          type: array\n          items:\n            type: string\n          description: Collection of repositories where the packages belong to\n          title: Repositories\n        pkgVersion:\n          type: string\n          description: Package version for the request\n          title: Package version\n        appVersion:\n          type: string\n          description: Packaged app version for the request\n          title: App version\n      description: FilterOptions available when requesting summaries\n      title: FilterOptions\n    v1alpha1GetAvailablePackageDetailResponse:\n      type: object\n      properties:\n        availablePackageDetail:\n          $ref: \"#/components/schemas/v1alpha1AvailablePackageDetail\"\n      description: Response for GetAvailablePackageDetail\n      title: GetAvailablePackageDetailResponse\n    v1alpha1GetAvailablePackageSummariesResponse:\n      type: object\n      properties:\n        availablePackageSummaries:\n          type: array\n          items:\n            $ref: \"#/components/schemas/v1alpha1AvailablePackageSummary\"\n          description: List of AvailablePackageSummary\n          title: Available packages summaries\n        nextPageToken:\n          type: string\n          description: \u003e-\n            This field represents the pagination token to retrieve the next page\n            of\n\n            results. If the value is \"\", it means no further results for the request.\n          title: Next page token\n        categories:\n          type: array\n          items:\n            type: string\n          description: This optional field contains the distinct category names considering\n            the FilterOptions.\n          title: Categories\n      description: Response for GetAvailablePackageSummaries\n      title: GetAvailablePackageSummariesResponse\n    v1alpha1GetAvailablePackageVersionsResponse:\n      type: object\n      properties:\n        packageAppVersions:\n          type: array\n          items:\n            $ref: \"#/components/schemas/v1alpha1PackageAppVersion\"\n          description: \u003e-\n            By default (when version_query is empty or ignored) the response\n\n            should contain an ordered summary of versions including the most recent three\n\n            patch versions of the most recent three minor versions of the most recent three\n\n            major versions when available, something like:\n\n            [\n              { pkg_version: \"10.3.19\", app_version: \"2.16.8\" },\n              { pkg_version: \"10.3.18\", app_version: \"2.16.8\" },\n              { pkg_version: \"10.3.17\", app_version: \"2.16.7\" },\n              { pkg_version: \"10.2.6\", app_version: \"2.15.3\" },\n              { pkg_version: \"10.2.5\", app_version: \"2.15.2\" },\n              { pkg_version: \"10.2.4\", app_version: \"2.15.2\" },\n              { pkg_version: \"10.1.8\", app_version: \"2.13.5\" },\n              { pkg_version: \"10.1.7\", app_version: \"2.13.5\" },\n              { pkg_version: \"10.1.6\", app_version: \"2.13.5\" },\n              { pkg_version: \"9.5.4\", app_version: \"2.8.9\" },\n              ...\n              { pkg_version: \"8.2.5\", app_version: \"1.19.5\" },\n              ...\n            ]\n\n            If a version_query is present and the plugin chooses to support it,\n\n            the full history of versions matching the version query should be returned.\n          title: Package app versions\n      description: Response for GetAvailablePackageVersions\n      title: GetAvailablePackageVersionsResponse\n    v1alpha1GetConfiguredPluginsResponse:\n      type: object\n      example:\n        plugins:\n          - name: kapp_controller.packages\n            version: v1alpha1\n      properties:\n        plugins:\n          type: array\n          items:\n            $ref: \"#/components/schemas/v1alpha1Plugin\"\n          description: List of Plugin\n          title: Plugins\n      description: Response for GetConfiguredPlugins\n      title: GetConfiguredPluginsResponse\n    v1alpha1GetInstalledPackageDetailResponse:\n      type: object\n      properties:\n        installedPackageDetail:\n          $ref: \"#/components/schemas/v1alpha1InstalledPackageDetail\"\n      description: Response for GetInstalledPackageDetail\n      title: GetInstalledPackageDetailResponse\n    v1alpha1GetInstalledPackageResourceRefsResponse:\n      type: object\n      properties:\n        context:\n          $ref: \"#/components/schemas/v1alpha1Context\"\n        resourceRefs:\n          type: array\n          items:\n            $ref: \"#/components/schemas/v1alpha1ResourceRef\"\n      description: Response for GetInstalledPackageResourceRefs\n      title: GetInstalledPackageResourceRefsResponse\n    v1alpha1GetInstalledPackageSummariesResponse:\n      type: object\n      properties:\n        installedPackageSummaries:\n          type: array\n          items:\n            $ref: \"#/components/schemas/v1alpha1InstalledPackageSummary\"\n          description: List of InstalledPackageSummary\n          title: Installed packages summaries\n        nextPageToken:\n          type: string\n          description: \u003e-\n            This field represents the pagination token to retrieve the next page\n            of\n\n            results. If the value is \"\", it means no further results for the request.\n          title: Next page token\n      description: Response for GetInstalledPackageSummaries\n      title: GetInstalledPackageSummariesResponse\n    v1alpha1GetNamespaceNamesResponse:\n      type: object\n      properties:\n        namespaceNames:\n          type: array\n          items:\n            type: string\n          description: The list of Namespace names.\n          title: NamespaceNames\n      description: Response for GetNamespaceNames\n      title: GetNamespaceNamesResponse\n    v1alpha1GetPackageRepositoryDetailResponse:\n      type: object\n      properties:\n        detail:\n          $ref: \"#/components/schemas/v1alpha1PackageRepositoryDetail\"\n      description: Response for GetPackageRepositoryDetail\n      title: GetPackageRepositoryDetailResponse\n    v1alpha1GetPackageRepositoryPermissionsResponse:\n      type: object\n      properties:\n        permissions:\n          type: array\n          items:\n            $ref: \"#/components/schemas/v1alpha1PackageRepositoriesPermissions\"\n    v1alpha1GetPackageRepositorySummariesResponse:\n      type: object\n      properties:\n        packageRepositorySummaries:\n          type: array\n          items:\n            $ref: \"#/components/schemas/v1alpha1PackageRepositorySummary\"\n          title: List of PackageRepositorySummary\n      description: Response for GetPackageRepositorySummaries\n      title: GetPackageRepositorySummariesResponse\n    v1alpha1GetResourcesResponse:\n      type: object\n      properties:\n        resourceRef:\n          $ref: \"#/components/schemas/v1alpha1ResourceRef\"\n        manifest:\n          type: string\n          description: \u003e-\n            The current manifest of the requested resource.  Initially the JSON\n\n            manifest will be returned a json-encoded string, enabling the existing\n\n            Kubeapps UI to replace its current direct api-server getting and watching\n\n            of resources, but we may in the future pull out further structured\n\n            metadata into this message as needed.\n          title: Manifest\n    v1alpha1GetSecretNamesResponse:\n      type: object\n      properties:\n        secretNames:\n          type: object\n          additionalProperties:\n            $ref: \"#/components/schemas/v1alpha1SecretType\"\n          description: The list of Service Account names.\n          title: SecretNames\n      description: Response for GetSecretNames\n      title: GetSecretNamesResponse\n    v1alpha1GetServiceAccountNamesResponse:\n      type: object\n      properties:\n        serviceaccountNames:\n          type: array\n          items:\n            type: string\n          description: The list of Service Account names.\n          title: ServiceAccountNames\n      description: Response for GetServiceAccountNames\n      title: GetServiceAccountNamesResponse\n    v1alpha1InstalledPackageDetail:\n      type: object\n      properties:\n        installedPackageRef:\n          $ref: \"#/components/schemas/v1alpha1InstalledPackageReference\"\n        pkgVersionReference:\n          $ref: \"#/components/schemas/v1alpha1VersionReference\"\n        name:\n          type: string\n          description: The name given to the installed package\n          title: Installed package name\n        currentVersion:\n          $ref: \"#/components/schemas/v1alpha1PackageAppVersion\"\n        valuesApplied:\n          type: string\n          description: The values applied currently for the installed package.\n          title: ValuesApplied\n        reconciliationOptions:\n          $ref: \"#/components/schemas/v1alpha1ReconciliationOptions\"\n        status:\n          $ref: \"#/components/schemas/v1alpha1InstalledPackageStatus\"\n        postInstallationNotes:\n          type: string\n          description: Optional notes generated by package and intended for the user post\n            installation.\n          title: PostInstallationNotes\n        availablePackageRef:\n          $ref: \"#/components/schemas/v1alpha1AvailablePackageReference\"\n        latestMatchingVersion:\n          $ref: \"#/components/schemas/v1alpha1PackageAppVersion\"\n        latestVersion:\n          $ref: \"#/components/schemas/v1alpha1PackageAppVersion\"\n        customDetail:\n          $ref: \"#/components/schemas/protobufAny\"\n      description: \u003e-\n        An InstalledPackageDetail includes details about the installed package\n        that are\n\n        typically useful when presenting a single installed package.\n      title: InstalledPackageDetail\n    v1alpha1InstalledPackageReference:\n      type: object\n      properties:\n        context:\n          $ref: \"#/components/schemas/v1alpha1Context\"\n        identifier:\n          type: string\n          description: |-\n            The fully qualified identifier for the installed package\n            (ie. a unique name for the context).\n        plugin:\n          $ref: \"#/components/schemas/v1alpha1Plugin\"\n      description: \u003e-\n        An InstalledPackageReference has the minimum information required to\n        uniquely\n\n        identify an installed package.\n      title: InstalledPackageReference\n    v1alpha1InstalledPackageStatus:\n      type: object\n      properties:\n        ready:\n          type: boolean\n          description: An indication of whether the installation is ready or not\n          title: Ready\n        reason:\n          $ref: \"#/components/schemas/v1alpha1InstalledPackageStatusStatusReason\"\n        userReason:\n          type: string\n          description: Optional text to return for user context, which may be plugin\n            specific.\n          title: UserReason\n      description: An InstalledPackageStatus reports on the current status of the\n        installation.\n      title: InstalledPackageStatus\n    v1alpha1InstalledPackageStatusStatusReason:\n      type: string\n      enum:\n        - STATUS_REASON_UNSPECIFIED\n        - STATUS_REASON_INSTALLED\n        - STATUS_REASON_UNINSTALLED\n        - STATUS_REASON_FAILED\n        - STATUS_REASON_PENDING\n      default: STATUS_REASON_UNSPECIFIED\n      description: |-\n        Generic reasons why an installed package may be ready or not.\n        These should make sense across different packaging plugins.\n      title: StatusReason\n    v1alpha1InstalledPackageSummary:\n      type: object\n      properties:\n        installedPackageRef:\n          $ref: \"#/components/schemas/v1alpha1InstalledPackageReference\"\n        name:\n          type: string\n          description: A name given to the installation of the package (eg.\n            \"my-postgresql-for-testing\").\n          title: Name\n        pkgVersionReference:\n          $ref: \"#/components/schemas/v1alpha1VersionReference\"\n        currentVersion:\n          $ref: \"#/components/schemas/v1alpha1PackageAppVersion\"\n        iconUrl:\n          type: string\n          description: A url for an icon.\n          title: Installed package icon URL\n        pkgDisplayName:\n          type: string\n          description: The package name as displayed to users (provided by the package, eg.\n            \"PostgreSQL\")\n          title: PackageDisplayName\n        shortDescription:\n          type: string\n          description: A short description of the package (provided by the package)\n          title: ShortDescription\n        latestMatchingVersion:\n          $ref: \"#/components/schemas/v1alpha1PackageAppVersion\"\n        latestVersion:\n          $ref: \"#/components/schemas/v1alpha1PackageAppVersion\"\n        status:\n          $ref: \"#/components/schemas/v1alpha1InstalledPackageStatus\"\n      description: |-\n        An InstalledPackageSummary provides a summary of an installed package\n        useful when aggregating many installed packages.\n      title: InstalledPackageSummary\n    v1alpha1Maintainer:\n      type: object\n      properties:\n        name:\n          type: string\n          description: A maintainer name\n          title: Maintainer name\n        email:\n          type: string\n          description: A maintainer email\n          title: Maintainer email\n      description: Maintainers for the package.\n      title: Maintainer\n    v1alpha1OpaqueCredentials:\n      type: object\n      properties:\n        data:\n          type: object\n          additionalProperties:\n            type: string\n          title: fields\n      title: OpaqueCredentials\n    v1alpha1PackageAppVersion:\n      type: object\n      properties:\n        pkgVersion:\n          type: string\n          description: Version of the package itself\n          title: Package version\n        appVersion:\n          type: string\n          description: Version of the packaged application\n          title: Application version\n      description: PackageAppVersion conveys both the package version and the packaged app\n        version.\n      title: Package AppVersion\n    v1alpha1PackageRepositoriesPermissions:\n      type: object\n      properties:\n        plugin:\n          $ref: \"#/components/schemas/v1alpha1Plugin\"\n        global:\n          type: object\n          additionalProperties:\n            type: boolean\n          title: Permissions at the global namespace (if any)\n        namespace:\n          type: object\n          additionalProperties:\n            type: boolean\n          title: Permissions for the namespace\n    v1alpha1PackageRepositoryAuth:\n      type: object\n      properties:\n        type:\n          $ref: \"#/components/schemas/PackageRepositoryAuthPackageRepositoryAuthType\"\n        usernamePassword:\n          $ref: \"#/components/schemas/v1alpha1UsernamePassword\"\n        tlsCertKey:\n          $ref: \"#/components/schemas/v1alpha1TlsCertKey\"\n        dockerCreds:\n          $ref: \"#/components/schemas/v1alpha1DockerCredentials\"\n        header:\n          type: string\n          title: |-\n            for Bearer Auth token value\n            for Custom Auth, complete value of \"Authorization\" header\n        secretRef:\n          $ref: \"#/components/schemas/v1alpha1SecretKeyReference\"\n        sshCreds:\n          $ref: \"#/components/schemas/v1alpha1SshCredentials\"\n        opaqueCreds:\n          $ref: \"#/components/schemas/v1alpha1OpaqueCredentials\"\n        passCredentials:\n          type: boolean\n          title: \u003e-\n            pass_credentials allows the credentials from the SecretRef to be\n            passed\n\n            on to a host that does not match the host as defined in URL.\n\n            This flag controls whether or not it is allowed to passing credentials\n\n            with requests to other domains linked from the repository.\n\n            This may be needed if the host of the advertised chart URLs in the\n\n            index differs from the defined URL. Optional\n      description: \u003e-\n        Authentication/authorization to provide client's identity when\n        connecting\n\n        to a package repository.\n\n        There are 6 total distinct use cases we may support:\n\n        1) None (Public)\n\n        2) Basic Auth\n\n        3) Bearer Token\n\n        4) Custom Authorization Header\n\n        5) Docker Registry Credentials (for OCI only)\n\n        6) TLS certificate and key\n\n\n        Note that (1)-(4) may be done over HTTP or HTTPs without any custom\n\n        certificates or certificate authority\n\n        (1) is handled by not not having PackageRepositoryAuth field on\n            the parent object\n        a given plug-in may or may not support a given authentication type.\n\n        For example\n         - direct-helm plug-in does not currently support (6), while flux does\n         - flux plug-in does not support (3) or (4) while direct-helm does\n      title: PackageRepositoryAuth\n    v1alpha1PackageRepositoryDetail:\n      type: object\n      properties:\n        packageRepoRef:\n          $ref: \"#/components/schemas/v1alpha1PackageRepositoryReference\"\n        name:\n          type: string\n          title: A user-provided name for the package repository (e.g. bitnami)\n        description:\n          type: string\n          description: A user-provided description.\n        namespaceScoped:\n          type: boolean\n          description: Whether this repository is global or namespace-scoped.\n        type:\n          type: string\n          title: Package storage type\n        url:\n          type: string\n          description: A URL identifying the package repository location.\n        interval:\n          type: string\n          title: \u003e-\n            The interval at which to check the upstream for updates (in\n            time+unit)\n\n            Some plugins may, addionally, support other formats, for instance,\n\n            a cron expression.\n\n            e.g., \"*/10 * * * *\" will be equivalent to \"10m\"\n        tlsConfig:\n          $ref: \"#/components/schemas/v1alpha1PackageRepositoryTlsConfig\"\n        auth:\n          $ref: \"#/components/schemas/v1alpha1PackageRepositoryAuth\"\n        customDetail:\n          $ref: \"#/components/schemas/protobufAny\"\n        status:\n          $ref: \"#/components/schemas/v1alpha1PackageRepositoryStatus\"\n      title: PackageRepositoryDetail\n    v1alpha1PackageRepositoryReference:\n      type: object\n      properties:\n        context:\n          $ref: \"#/components/schemas/v1alpha1Context\"\n        identifier:\n          type: string\n          description: |-\n            The fully qualified identifier for the repository\n            (i.e. a unique name for the context).\n        plugin:\n          $ref: \"#/components/schemas/v1alpha1Plugin\"\n      description: |-\n        A PackageRepositoryReference has the minimum information required to\n        uniquely identify a package repository.\n      title: PackageRepositoryReference\n    v1alpha1PackageRepositoryStatus:\n      type: object\n      properties:\n        ready:\n          type: boolean\n          description: An indication of whether the repository is ready or not\n          title: Ready\n        reason:\n          $ref: \"#/components/schemas/v1alpha1PackageRepositoryStatusStatusReason\"\n        userReason:\n          type: string\n          description: Optional text to return for user context, which may be plugin\n            specific.\n          title: UserReason\n      description: A PackageRepositoryStatus reports on the current status of the\n        repository.\n      title: PackageRepositoryStatus\n    v1alpha1PackageRepositoryStatusStatusReason:\n      type: string\n      enum:\n        - STATUS_REASON_UNSPECIFIED\n        - STATUS_REASON_SUCCESS\n        - STATUS_REASON_FAILED\n        - STATUS_REASON_PENDING\n      default: STATUS_REASON_UNSPECIFIED\n      description: |-\n        Generic reasons why a package repository may be ready or not.\n        These should make sense across different packaging plugins.\n      title: StatusReason\n    v1alpha1PackageRepositorySummary:\n      type: object\n      properties:\n        packageRepoRef:\n          $ref: \"#/components/schemas/v1alpha1PackageRepositoryReference\"\n        name:\n          type: string\n          title: A user-provided name for the package repository (e.g. bitnami)\n        description:\n          type: string\n          description: A user-provided description.\n        namespaceScoped:\n          type: boolean\n          description: Whether this repository is global or namespace-scoped.\n        type:\n          type: string\n          title: Package storage type\n        url:\n          type: string\n          description: URL identifying the package repository location.\n        status:\n          $ref: \"#/components/schemas/v1alpha1PackageRepositoryStatus\"\n        requiresAuth:\n          type: boolean\n          description: existence of any authentication parameters for connecting to a\n            repository.\n      title: PackageRepositorySummary\n    v1alpha1PackageRepositoryTlsConfig:\n      type: object\n      properties:\n        insecureSkipVerify:\n          type: boolean\n          title: |-\n            whether or not to skip TLS verification\n            note that fluxv2 does not currently support this and will raise an\n            error should this flag be set to true\n        certAuthority:\n          type: string\n          title: certificate authority. Optional\n        secretRef:\n          $ref: \"#/components/schemas/v1alpha1SecretKeyReference\"\n      title: PackageRepositoryTlsConfig\n    v1alpha1PaginationOptions:\n      type: object\n      properties:\n        pageToken:\n          type: string\n          description: The client uses this field to request a specific page of the list\n            results.\n          title: Page token\n        pageSize:\n          type: integer\n          format: int32\n          description: \u003e-\n            Clients use this field to specify the maximum number of results to\n            be\n\n            returned by the server. The server may further constrain the maximum number\n\n            of results returned in a single page. If the page_size is 0, the server\n\n            will decide the number of results to be returned.\n          title: Page size\n      description: \u003e-\n        The PaginationOptions based on the example proto at:\n\n        https://cloud.google.com/apis/design/design_patterns#list_pagination\n\n        just encapsulated in a message so it can be reused on different request messages.\n      title: PaginationOptions\n    v1alpha1Plugin:\n      type: object\n      example:\n        name: kapp_controller.packages\n        version: v1alpha1\n      properties:\n        name:\n          type: string\n          description: The name of the plugin, such as `fluxv2.packages` or\n            `kapp_controller.packages`.\n          title: Plugin name\n        version:\n          type: string\n          description: The version of the plugin, such as v1alpha1\n          title: Plugin version\n      description: A plugin can implement multiple services and multiple versions of a\n        service.\n      title: Plugin\n    v1alpha1ReconciliationOptions:\n      type: object\n      properties:\n        interval:\n          type: string\n          description: The interval with which the package is checked for reconciliation\n            (in time+unit)\n          title: Reconciliation Interval\n        suspend:\n          type: boolean\n          description: |-\n            Whether reconciliation should be suspended until otherwise enabled.\n            This can be utilized to e.g. temporarily ignore chart changes, and\n            prevent a Helm release from getting upgraded\n          title: Suspend\n        serviceAccountName:\n          type: string\n          description: \u003e-\n            A name for a service account in the same namespace which should be\n            used\n\n            to perform the reconciliation.\n          title: ServiceAccountName\n      description: \u003e-\n        ReconciliationOptions enable specifying standard fields for backends\n        that continuously\n\n        reconcile a package install as new matching versions are released. Most of the naming\n\n        is from the flux HelmReleaseSpec though it maps directly to equivalent fields on Carvel's\n\n        InstalledPackage.\n      title: ReconciliationOptions\n    v1alpha1ResourceRef:\n      type: object\n      properties:\n        apiVersion:\n          type: string\n          description: \u003e-\n            The APIVersion directly from the resource has the group and version,\n            eg. \"apps/v1\"\n\n            or just the version for core resources.\n        kind:\n          type: string\n          description: \u003e-\n            The Kind directly from the templated manifest. Together with the\n            APIVersion this\n\n            forms the GroupVersionKind.\n        name:\n          type: string\n          description: The name of the specific resource in the context of the installed\n            package.\n        namespace:\n          type: string\n          description: \u003e-\n            The namespace of the specific resource in the context of the\n            installed\n\n            package. In most cases this will be identical to the namespace of the\n\n            installed package. Exceptions will be non-namespaced resources and packages\n\n            that install resources in other namespaces for special reasons.\n      description: \u003e-\n        A reference to a Kubernetes resource related to a specific installed\n        package.\n\n        The context (cluster) for each resource is that of the related\n\n        installed package.\n      title: Resource reference\n    v1alpha1RollbackInstalledPackageResponse:\n      type: object\n      properties:\n        installedPackageRef:\n          $ref: \"#/components/schemas/v1alpha1InstalledPackageReference\"\n      description: Response for RollbackInstalledPackage\n      title: RollbackInstalledPackageResponse\n    v1alpha1SecretKeyReference:\n      type: object\n      properties:\n        name:\n          type: string\n          title: \u003e-\n            The name of an existing secret in the same namespace as the object\n\n            that refers to it (e.g. PackageRepository), containing authentication\n\n            credentials for the said package repository.\n\n            - For HTTP/S basic auth the secret must be of type\n              \"kubernetes.io/basic-auth\" or opaque and contain username and\n              password fields\n            - For TLS the secret must be of type \"kubernetes.io/tls\" or opaque\n              and contain a certFile and keyFile, and/or\n              caCert fields.\n            - For Bearer or Custom Auth, the secret must be opaque, and\n              the key must be provided\n            - For Docker Registry Credentials (OCI registries) the secret\n              must of of type \"kubernetes.io/dockerconfigjson\"\n            For more details, refer to\n\n            https://kubernetes.io/docs/concepts/configuration/secret/\n        key:\n          type: string\n          title: Optional. Must be provided when name refers to an opaque secret\n      title: SecretKeyReference\n    v1alpha1SecretType:\n      type: string\n      enum:\n        - SECRET_TYPE_OPAQUE_UNSPECIFIED\n        - SECRET_TYPE_SERVICE_ACCOUNT_TOKEN\n        - SECRET_TYPE_DOCKER_CONFIG\n        - SECRET_TYPE_DOCKER_CONFIG_JSON\n        - SECRET_TYPE_BASIC_AUTH\n        - SECRET_TYPE_SSH_AUTH\n        - SECRET_TYPE_TLS\n        - SECRET_TYPE_BOOTSTRAP_TOKEN\n      default: SECRET_TYPE_OPAQUE_UNSPECIFIED\n      description: \u003e-\n        The type of secret. Currently Kubeapps itself only deals with OPAQUE\n\n        and docker config json secrets, but we define all so we can correctly\n\n        list the secret names with their types.\n\n        See https://kubernetes.io/docs/concepts/configuration/secret/#secret-types\n      title: SecretType\n    v1alpha1SshCredentials:\n      type: object\n      properties:\n        privateKey:\n          type: string\n          title: private key\n        knownHosts:\n          type: string\n          description: known hosts.\n      title: SshCredentials\n    v1alpha1TlsCertKey:\n      type: object\n      properties:\n        cert:\n          type: string\n          title: certificate (identity). In clear text\n        key:\n          type: string\n          title: certificate key. In clear text\n      title: TlsCertKey\n    v1alpha1UpdateInstalledPackageResponse:\n      type: object\n      properties:\n        installedPackageRef:\n          $ref: \"#/components/schemas/v1alpha1InstalledPackageReference\"\n      description: Response for UpdateInstalledPackage\n      title: UpdateInstalledPackageResponse\n    v1alpha1UpdatePackageRepositoryResponse:\n      type: object\n      properties:\n        packageRepoRef:\n          $ref: \"#/components/schemas/v1alpha1PackageRepositoryReference\"\n      description: Response for UpdatePackageRepository\n      title: UpdatePackageRepositoryResponse\n    v1alpha1UsernamePassword:\n      type: object\n      properties:\n        username:\n          type: string\n          title: In clear text\n        password:\n          type: string\n          title: In clear text\n      title: UsernamePassword\n    v1alpha1VersionReference:\n      type: object\n      properties:\n        version:\n          type: string\n          description: \u003e-\n            The format of the version constraint depends on the backend. For\n            example,\n\n            for a flux v2 and Carvel it's a semver expression, such as \"\u003e=10.3 \u003c 10.4\"\n          title: Version\n      description: \u003e-\n        A VersionReference defines a version or constraint limiting matching\n        versions.\n\n        The reason it is a separate message is so that in the future we can add other\n\n        fields as necessary (such as something similar to Carvel's `prereleases` option\n\n        to its versionSelection).\n      title: VersionReference\n",
			"canonicalURL": "/github.com/vmware-tanzu/kubeapps@fa761a001e54306f862e916e16f46968db84341b/-/blob/dashboard/public/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/vmware-tanzu/kubeapps/blob/fa761a001e54306f862e916e16f46968db84341b/dashboard/public/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/apis/core/packages/v1alpha1/availablepackages\": get: operation \"PackagesService_GetAvailablePackageSummaries\": security: at dashboard/public/openapi.yaml:54:5: unknown security scheme \"bearerAuth\""
}