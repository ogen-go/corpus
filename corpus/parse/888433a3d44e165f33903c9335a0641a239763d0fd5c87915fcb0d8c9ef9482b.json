{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/codando-community/coderslab"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "server/swagger.yaml",
			"byteSize": 66643,
			"content": "openapi: 3.0.0\ninfo:\n  description: |\n    Documentation\n  version: '1.0'\n  title: 'Coderslab'\n  termsOfService: 'http://swagger.io/terms/'\n  contact:\n    name: Codando Community\n    email: codando.community@gmail.com\n    url: https://github.com/codando-community/\n#  license:\n#    name: Apache 2.0\n#    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\ntags:\n  - name: Group\n    description: Microsserviço de grupo no Coderslab\n  - name: Interest\n    description: Microsserviço de interesse no Coderslab\n  - name: Roadmap\n    description: Microsserviço de roadmap no Coderslab\n  - name: Schedule\n    description: Microsserviço de agendamento no Coderslab\n  - name: Subject\n    description: Microsserviço de assunto no Coderslab\n  - name: UnionUserGroup\n    description: Microsserviço da união entre usuário e grupo no Coderslab\n  - name: User\n    description: Microsserviço de usuário no Coderslab\npaths:\n  # Group\n  /group/create:\n    post:\n      tags: \n        - Group\n      summary: Criação de um novo grupo\n      description: Cria um novo grupo de estudos de um determinado assunto e nível.\n      operationId: group_create\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/group_read_create.Response'\n        '400':\n          description: Bad Request\n        '406':\n          description: Not Acceptable\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/group.Request'\n        required: true\n  /group/read/search:\n    post:\n      tags: \n        - Group\n      summary: Busca uma lista de grupos com base em um filtro\n      description: Realiza a busca de todos os grupos correspondentes a um filtro passadado.\n      operationId: group_search\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/group_read_all.Response'\n        '400':\n          description: Bad Request\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/unionUserGroup_search.Request'\n        required: true\n  /group/read/byId/{id}:\n    get:\n      summary: Busca um grupo com base em um ID\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: ID do grupo gerado pelo MongoDB\n          schema:\n            type: string\n            format: ObjectId\n            minimum: 1\n      tags:\n        - Group\n      description: Busca por um grupo já resgistrado na plataforma com base em seu ID gerado pelo MongoDB.\n      operationId: group_byId\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/group_read.Response'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n  /group/read/byToken/{token}:\n    get:\n      summary: Busca um grupo com base em um token\n      parameters:\n        - name: token\n          in: path\n          required: true\n          description: Token do grupo gerado\n          schema:\n            type: string\n            minimum: 1\n      tags:\n        - Group\n      description: Busca por um grupo já resgistrado na plataforma com base em seu token.\n      operationId: group_byToken\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/group_read.Response'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n  /group/read/byOwner/{idUser}:\n    get:\n      tags:\n        - Group\n      summary: Busca uma lista de grupos com base em seu dono\n      parameters:\n        - name: idUser\n          in: path\n          required: true\n          description: ID do usuário dono dos grupos gerado pelo MongoDB\n          schema:\n            type: string\n            minimum: 1\n      description: Busca todos os grupos da plataforma dos quais o usuário informado é donoe retorna uma lista deles ordenada pelo nome em ordem alfabética. Sem a quantidade de integrantes desse grupo.\n      operationId: group_byGroup\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/group_read_all.Response'\n        '400':\n          description: Bad Request\n  /group/read/all:\n    get:\n      tags:\n        - Group\n      summary: Busca uma lista de grupos\n      description: Busca todos os grupos já registrados na plataforma e retorna uma lista deles ordenada pelo nome em ordem alfabética.\n      operationId: group_all\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/group_read_all.Response'\n        '400':\n          description: Bad Request\n  /group/update/{id}/{idUser}:\n    put:\n      tags:\n        - Group\n      summary: Atualiza um grupo com base em um ID\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: ID do grupo gerado pelo MongoDB\n          schema:\n            type: string\n            format: ObjectId\n            minimum: 1\n        - name: idUser\n          in: path\n          required: true\n          description: ID do usuário dono do grupo gerado pelo MongoDB que está tentando atualiza-lo\n          schema:\n            type: string\n            format: ObjectId\n            minimum: 1\n      description: Atualiza os dados de um grupo com base em seu ID e o ID do usuário dono do grupo gerados pelo MongoDB. Sem a quantidade de integrantes desse grupo.\n      operationId: group_update\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/group_read.Response'\n        '401':\n          description: Unauthorized\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '406':\n          description: Not Acceptable\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/group.Request'\n        required: true\n  /group/delete/{id}/{idUser}:\n    delete:\n      tags:\n        - Group\n      summary: Deleta um grupo com base em um ID\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: ID do grupo gerado pelo MongoDB\n          schema:\n            type: string\n            format: ObjectId\n            minimum: 1\n        - name: idUser\n          in: path\n          required: true\n          description: ID do usuário dono do grupo gerado pelo MongoDB que está tentando atualiza-lo\n          schema:\n            type: string\n            format: ObjectId\n            minimum: 1\n      description: Deleta o registro do grupo na aplicação não sendo mais possível acessa-lo após o processo.\n      operationId: group_delete\n      responses:\n        '204':\n          description: No Content\n        '401':\n          description: Unauthorized\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n  \n  # Interest\n  /interest/create:\n    post:\n      tags: \n        - Interest\n      summary: Cria de um novo interesse\n      description: Cria um novo interesse.\n      operationId: interest_create\n      responses:\n        '201':\n          description: Created\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '406':\n          description: Not Acceptable\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/interest.Request'\n        required: true\n  /interest/read/byId/{id}:\n    get:\n      summary: Busca um interesse com base em um ID\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: ID do interesse gerado pelo MongoDB\n          schema:\n            type: string\n            format: ObjectId\n            minimum: 1\n      tags:\n        - Interest\n      description: Busca por um interesse já resgistrado na plataforma com base em seu ID gerado pelo MongoDB.\n      operationId: interest_byId\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/interest_read.Response'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n  /interest/read/all:\n    get:\n      tags:\n        - Interest\n      summary: Busca uma lista de interesses\n      description: Busca todos os interesse já registrados e retorna uma lista deles ordenada pelo assunto em ordem alfabética.\n      operationId: interest_all\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/interest_read_all.Response'\n        '400':\n          description: Bad Request\n  /interest/update/{id}:\n    put:\n      tags:\n        - Interest\n      summary: Atualiza um interesse com base em um ID\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: ID do interesse gerado pelo MongoDB\n          schema:\n            type: string\n            format: ObjectId\n            minimum: 1\n      description: Atualiza o nível de um interesse com base em seu ID gerado pelo MongoDB.\n      operationId: interest_update\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/interest_read.Response'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '406':\n          description: Not Acceptable\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/interest.Request'\n        required: true\n  /interest/delete/{id}:\n    delete:\n      tags:\n        - Interest\n      summary: Deleta um interesse com base em um ID\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: ID do interesse gerado pelo MongoDB\n          schema:\n            type: string\n            format: ObjectId\n            minimum: 1\n      description: Deleta o registro do interesse na aplicação não sendo mais possível acessa-lo após o processo.\n      operationId: interest_delete\n      responses:\n        '204':\n          description: No Content\n        '400':\n          description: Bad request\n        '404':\n            description: Not Found\n  \n  #Roadmap\n  /roadmap/create/default:\n    post:\n      tags:\n        - Roadmap\n      summary: Criação de roadmap default\n      operationId: AddRoadmapDefault\n      description: Adiciona um roadmap default\n      responses:\n        '201':\n          description: 'Created'\n        '400':\n          description: 'Bad request'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddRoadmapDefault'\n        description: Adiciona um roadmap default\n  /roadmap/create/custom:\n    post:\n      tags:\n        - Roadmap\n      summary: Criação de roadmap customizado\n      operationId: AddRoadmapCustom\n      description: Adiciona um roadmap customizado\n      responses:\n        '201':\n          description: 'Created'\n        '400':\n          description: 'Bad request'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddRoadmapCustom'\n        description: Adiciona um roadmap default\n  /roadmap/update/custom/{id}:\n    put:\n      tags:\n        - Roadmap\n      summary: Transforma o roadmap padrão em customizado\n      operationId: TurnDefaultRoadmapIntoCustomizedRoadmap\n      description: Transforma o roadmap padrão em customizado\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: ID do roadmap gerado pelo MongoDB\n          schema:\n            type: string\n            format: ObjectId\n            minimum: 1\n      responses:\n        '200':\n          description: 'Success'\n        '400':\n          description: 'Bad request'\n        '404':\n          description: 'Roadmap not found'\n  /roadmap/update/default/{id}:\n    put:\n      tags:\n        - Roadmap\n      summary: Transforma o roadmap customizado em padrão\n      operationId: TurnCustomRoadmapIntoDefaultRoadmap\n      description: Transforma o roadmap customizado em padrão\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: ID do roadmap gerado pelo MongoDB\n          schema:\n            type: string\n            format: ObjectId\n            minimum: 1\n      responses:\n        '200':\n          description: 'Success'\n        '400':\n          description: 'Bad request'\n        '404':\n          description: 'Roadmap not found'\n  /roadmap/update/done/{id}:\n    put:\n      tags:\n        - Roadmap\n      summary: Transforma o roadmap em progresso em feito\n      operationId: TurnInProgressRoadmapIntoDoneRoadmap\n      description: Transforma o roadmap em progresso em feito\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: ID do roadmap gerado pelo MongoDB\n          schema:\n            type: string\n            format: ObjectId\n            minimum: 1\n      responses:\n        '400':\n          description: 'Bad request'\n        '404':\n          description: 'Roadmap not found'\n  /roadmap/update/inprogress/{id}:\n    put:\n      tags:\n        - Roadmap\n      summary: Transforma o roadmap em \"Feito\" em \"Em progresso\"\n      operationId: TurnDoneRoadmapIntoInProgressRoadmap\n      description: Transforma o roadmap em \"Feito\" em \"Em progresso\"\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: ID do roadmap gerado pelo MongoDB\n          schema:\n            type: string\n            format: ObjectId\n            minimum: 1\n      responses:\n        '400':\n          description: 'Bad request'\n        '404':\n          description: 'Roadmap not found'\n  /roadmap/update/name/{id}:\n    put:\n      tags:\n        - Roadmap\n      summary: Atualiza o nome do roadmap\n      operationId: UpdateRoadmapName\n      description: Atualiza o nome do roadmap\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: ID do roadmap gerado pelo MongoDB\n          schema:\n            type: string\n            format: ObjectId\n            minimum: 1\n      responses:\n        '200':\n          description: 'Success'\n        '400':\n          description: 'Bad request'\n        '404':\n          description: 'Roadmap not found'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateRoadmapName'\n        description: Atualiza o nome do roadmap\n  /roadmap/update/objective/{id}:\n    put:\n      tags:\n        - Roadmap\n      summary: Atualiza o objetivo do roadmap\n      operationId: UpdateRoadmapObjective\n      description: Atualiza o objetivo do roadmap\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: ID do roadmap gerado pelo MongoDB\n          schema:\n            type: string\n            format: ObjectId\n            minimum: 1\n      responses:\n        '200':\n          description: 'Success'\n        '400':\n          description: 'Bad request'\n        '404':\n          description: 'Roadmap not found'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateRoadmapObjective'\n        description: Atualiza o objetivo do roadmap\n  /roadmap/update/list/{id}:\n    put:\n      tags:\n        - Roadmap\n      summary: Atualiza a lista de conteúdos do roadmap\n      operationId: UpdateRoadmapContentList\n      description: Atualiza a lista de conteúdos do roadmap\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: ID do roadmap gerado pelo MongoDB\n          schema:\n            type: string\n            format: ObjectId\n            minimum: 1\n      responses:\n        '200':\n          description: 'Success'\n        '400':\n          description: 'Bad request'\n        '404':\n          description: 'Roadmap not found'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateRoadmapContentList'\n        description: Atualiza a lista de conteúdos do roadmap\n  /roadmap/read/all:\n    get:\n      tags:\n        - Roadmap\n      summary: Lista todos os roadmap criados\n      operationId: ListAllRoadmap\n      description: Lista todos os roadmap criados\n      responses:\n        '200':\n          description: 'Success'\n        '400':\n          description: 'Bad request'\n  /roadmap/read/all/{id}:\n    get:\n      tags:\n        - Roadmap\n      summary: Apresenta o roadmap que possui o ID informado\n      operationId: ReadRoadmapById\n      description: Apresenta o roadmap que possui o ID informado\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: ID do roadmap gerado pelo MongoDB\n          schema:\n            type: string\n            format: ObjectId\n            minimum: 1\n      responses:\n        '200':\n          description: 'Success'\n        '400':\n          description: 'Bad request'\n  /roadmap/read/custom:\n    get:\n      tags:\n        - Roadmap\n      summary: Lista todos os roadmap customizados\n      operationId: ListAllCustomRoadmap\n      description: Lista todos os roadmap customizados\n      responses:\n        '200':\n          description: 'Success'\n        '400':\n          description: 'Bad request'\n  /roadmap/read/default:\n    get:\n      tags:\n        - Roadmap\n      summary: Lista todos os roadmap padrão\n      operationId: ListAllDefaultRoadmap\n      description: Lista todos os roadmap padrão\n      responses:\n        '200':\n          description: 'Success'\n        '400':\n          description: 'Bad request'\n  /roadmap/read/inprogress:\n    get:\n      tags:\n        - Roadmap\n      summary: Lista todos os roadmap em progresso\n      operationId: ListAllInProgressRoadmap\n      description: Lista todos os roadmap em progresso\n      responses:\n        '200':\n          description: 'Success'\n        '400':\n          description: 'Bad request'\n  /roadmap/read/done:\n    get:\n      tags:\n        - Roadmap\n      summary: Lista todos os roadmap concluídos\n      operationId: ListAllDoneRoadmap\n      description: Lista todos os roadmap concluídos\n      responses:\n        '200':\n          description: 'Success'\n        '400':\n          description: 'Bad request'\n  /roadmap/delete/{id}:\n    get:\n      tags:\n        - Roadmap\n      summary: Deleta o roadmap que possui o ID informado\n      operationId: DeleteRoadmapById\n      description: Deleta o roadmap que possui o ID informado\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: ID do roadmap gerado pelo MongoDB\n          schema:\n            type: string\n            format: ObjectId\n            minimum: 1\n      responses:\n        '204':\n          description: 'Success'\n        '400':\n          description: 'Bad request'\n        '404':\n          description: 'Not found'\n\n  #Schedule\n  /schedule/create:\n    post:\n      tags:\n        - Schedule\n      operationId: schedule_create\n      summary: API de criação de schedule\n      description: API de criação de schedule\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/schedule_create.Request'\n        required: true\n      responses:\n        '201':\n          description: Schedule created\n        '400':\n          description: Bad Request\n        '403':\n          description: Schedule already exists\n  /schedule/read/byId/{id}:\n    get:\n      tags:\n        - Schedule\n      operationId: schedule_byId\n      summary: Retorna o schedule com base em um ID\n      description: API para retorno de um schedule\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: Id do schedule gerado pelo MongoDB.\n          schema:\n            type : string\n            format: uuid\n            minimum: 1\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/schedule_read.Response'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n  /schedule/read/byOwner/{idOwner}:\n    get:\n      tags:\n        - Schedule\n      operationId: schedule_byOwner\n      summary: Retorna o schedule com base no id do user que o criou.\n      description: API para retorno de um schedule com base no id do user que o criou\n      parameters:\n        - name: idOwner\n          in: path\n          required: true\n          description: Id do usuario dono do agendamento.\n          schema:\n            type : string\n            minimum: 1\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/schedule_read.Response'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n  /schedule/read/byIdGroup/{idGroup}:\n    get:\n      tags:\n        - Schedule\n      operationId: schedule_byGroup\n      summary: Retorna schedules com base no id do seu grupo.\n      description: API para retorno de array de schedules com base no id do grupo associado a eles.\n      parameters:\n        - name: idGroup\n          in: path\n          required: true\n          description: Id do usuario dono do agendamento.\n          schema:\n            type : string\n            minimum: 1\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/schedule_all.Response'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n  /schedule/read/all:\n    get:\n      tags:\n        - Schedule\n      operationId: schedule_all\n      summary: Retorna array de schedules\n      description: API para retorno do array de schedules\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/schedule_all.Response'\n        '400':\n          description: Bad Request\n  /schedule/update/{id}:\n    put:\n      tags:\n        - Schedule\n      operationId: schedule_update\n      summary: Atualiza algumas informações de um schedule com base em seu ID.\n      description: API para update de um schedule\n      parameters:\n          - name: id\n            in: path\n            required: true\n            description: Id do schedule gerado pelo MongoDB.\n            schema:\n              type : string\n              format: uuid\n              minimum: 1\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/schedule_update.Request'\n        required: true\n      responses:\n        '200':\n          description: Schedule update\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/schedule_read.Response'\n        '400':\n          description: Bad request\n        '404':\n            description: Not Found\n  /schedule/delete/{id}:\n    delete:\n      tags:\n        - Schedule\n      operationId: schedule_delete\n      description: API para deletar um schedule com base em seu id\n      summary: Deleta um schedule com base em seu ID.\n      parameters:\n          - name: id\n            in: path\n            required: true\n            description: Id do schedule gerado pelo MongoDB.\n            schema:\n              type : string\n              format: uuid\n              minimum: 1\n      responses:\n        '204':\n          description: Schedule deleted\n        '400':\n          description: Bad request\n        '404':\n            description: Not Found\n  \n  # Subject\n  /subject/create:\n    post:\n      tags:\n        - Subject\n      operationId: subject_create\n      summary: API de criação de subject\n      description: API de criação de subject\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/subject_create.Request'\n        required: true\n      responses:\n        '201':\n          description: Subject created\n        '400':\n          description: Bad Request\n        '403':\n          description: Subject already exists\n  /subject/read/byId/{id}:\n    get:\n      tags:\n        - Subject\n      operationId: subjects_byId\n      summary: Retorna o subject com base em um ID\n      description: Retorna o subject com base em um ID\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: Id do subject gerado pelo MongoDB.\n          schema:\n            type : string\n            format: uuid\n            minimum: 1\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/subject_read.Response'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n  /subject/read/byLabel/{label}:\n    get:\n      tags:\n        - Subject\n      operationId: subjects_byLabel\n      summary: Retorna o subject com base em uma Label.\n      description: Retorna o subject com base em uma Label.\n      parameters:\n        - name: label\n          in: path\n          required: true\n          description: Rótulo atribuido ao subject.\n          schema:\n            type : string\n            minimum: 1\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/subject_read.Response'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n  /subject/read/all:\n    get:\n      tags:\n        - Subject\n      operationId: subjects_all\n      summary: Retorna Array de subjects.\n      description: Retorna Array de subjects.\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/subject_all.Response'\n        '400':\n          description: Bad Request\n  /subject/update/{id}:\n    put:\n      tags:\n        - Subject\n      operationId: subject_update\n      summary: Atualiza as categories de um subject com base no ID.\n      description: Atualiza as categories de um subject com base no ID.\n      parameters:\n          - name: id\n            in: path\n            required: true\n            description: Id do subject gerado pelo MongoDB.\n            schema:\n              type : string\n              format: uuid\n              minimum: 1\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/subject_update.Request'\n        required: true\n      responses:\n        '200':\n          description: Subject updated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/subject_read.Response'\n        '400':\n          description: Bad request\n        '404':\n            description: Not Found\n  /subject/delete/{id}:\n    delete:\n      tags:\n        - Subject\n      operationId: subject_delete\n      summary: Deleta um subject com base em seu ID.\n      description: Deleta um subject com base em seu ID.\n      parameters:\n          - name: id\n            in: path\n            required: true\n            description: Id do subject gerado pelo MongoDB.\n            schema:\n              type : string\n              format: uuid\n              minimum: 1\n      responses:\n        '204':\n          description: Subject deleted\n        '400':\n          description: Bad request\n        '404':\n            description: Not Found\n  \n  # Union User Group\n  /unionUserGroup/create:\n    post:\n      tags: \n        - UnionUserGroup\n      summary: Insere um usuário em um grupo\n      description: Realiza a inserção de um determinado usuário em um novo grupo do qual ele ainda não pertencia.\n      operationId: unionUserGroup_create\n      responses:\n        '201':\n          description: Created\n        '403':\n          description: Forbidden\n        '400':\n          description: Bad Request\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/unionUserGroup.Request'\n        required: true\n  /unionUserGroup/read/search:\n    post:\n      tags: \n        - UnionUserGroup\n      summary: Busca uma lista de grupos com base em um filtro\n      description: Realiza a busca de todos os grupos correspondentes a um filtro passadado.\n      operationId: unionUserGroup_search\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/unionUserGroup_read_all.Response'\n        '400':\n          description: Bad Request\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/unionUserGroup_search.Request'\n        required: true\n  /unionUserGroup/read/allUsersByGroup/{idGroup}:\n    get:\n      tags:\n        - UnionUserGroup\n      summary: Busca uma lista de usuários com base em um ID de um grupo\n      parameters:\n        - name: idGroup\n          in: path\n          required: true\n          description: ID do grupo gerado pelo MongoDB\n          schema:\n            type: string\n            minimum: 1\n      description: Busca os dados de todos os usuário que fazem parte de determinado grupo.\n      operationId: unionUserGroup_byGroup\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/user_read_all.Response'\n        '400':\n          description: Bad Request\n  /unionUserGroup/read/allGroupsByUser/{idUser}:\n    get:\n      tags:\n        - UnionUserGroup\n      summary: Busca uma lista de grupos com base em um ID de um usuário\n      parameters:\n        - name: idUser\n          in: path\n          required: true\n          description: ID do usuário gerado pelo MongoDB\n          schema:\n            type: string\n            minimum: 1\n      description: Busca todos os grupos dos quais determinado usuário faz parte. Com a quantidade de integrantes de cada grupo.\n      operationId: unionUserGroup_byUser\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/unionUserGroup_read_all.Response'\n        '400':\n          description: Bad Request\n  /unionUserGroup/read/allGroupsByOwner/{idUser}:\n    get:\n      tags:\n        - UnionUserGroup\n      summary: Busca uma lista de grupos com base em um ID de um usuário\n      parameters:\n        - name: idUser\n          in: path\n          required: true\n          description: ID do usuário dono dos grupos gerado pelo MongoDB\n          schema:\n            type: string\n            minimum: 1\n      description: Busca todos os grupos da plataforma dos quais o usuário informado é dono. Com a quantidade de integrantes de cada grupo.\n      operationId: unionUserGroup_byOwner\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/unionUserGroup_read_all.Response'\n        '400':\n          description: Bad Request\n  /unionUserGroup/delete/one/{idUser}/{idGroup}:\n    delete:\n      tags:\n        - UnionUserGroup\n      summary: Remove um usuário de um grupo \n      parameters:\n        - name: idUser\n          in: path\n          required: true\n          description: ID do usuário gerado pelo MongoDB\n          schema:\n            type: string\n            format: ObjectId\n            minimum: 1\n        - name: idGroup\n          in: path\n          required: true\n          description: ID do grupo gerado pelo MongoDB\n          schema:\n            type: string\n            format: ObjectId\n            minimum: 1\n      description: Realiza a remoção de um determinado usuário de um grupo do qual ele pertence.\n      operationId: unionUserGroup_one_delete\n      responses:\n        '204':\n          description: No Content\n        '400':\n          description: Bad request\n        '404':\n            description: Not Found\n  /unionUserGroup/delete/allGroup/{idGroup}:\n    delete:\n      tags:\n        - UnionUserGroup\n      summary: Remove todos os usuário de um determinado grupo\n      parameters:\n        - name: idGroup\n          in: path\n          required: true\n          description: ID do grupo gerado pelo MongoDB\n          schema:\n            type: string\n            format: ObjectId\n            minimum: 1\n      description: Remove todos os usuário de um grupo quando o grupo é excluído\n      operationId: unionUserGroup_all_delete\n      responses:\n        '204':\n          description: No Content\n        '400':\n          description: Bad request\n  \n  # User\n  /user/create:\n    post:\n      tags: \n        - User\n      summary: Cria um novo usuário\n      description: Cria um novo perfil para o usuário que precisa acessar a aplicação pela primeira vez.\n      operationId: user_create\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/user_read_token.Response'\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '406':\n          description: Not Acceptable\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/user_create.Request'\n        required: true \n  /user/login:\n    post:\n      tags: \n        - User\n      summary: Realiza o login do usuário\n      description: Realiza o login do usuário para que ele possa ser redirecionado para dentro da plataforma.\n      operationId: user_login\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/user_read_token.Response'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/user_login.Request'\n        required: true \n  /user/logout/{id}/{token}:\n    post:\n      tags: \n        - User\n      summary: Realiza o logout do usuário\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: ID do usuário gerado pelo MongoDB\n          schema:\n            type: string\n            minimum: 1\n        - name: token\n          in: path\n          required: true\n          description: Token da sessão do usuário gerado ao fazer login\n          schema:\n            type: string\n            minimum: 1\n      description: Realiza o logout do usuário para que ele possa ser redirecionado para fora da plataforma.\n      operationId: user_logout\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Bad Request\n  /user/read/byId/{id}:\n    get:\n      summary: Busca um usuário com base em um ID\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: ID do usuário gerado pelo MongoDB\n          schema:\n            type: string\n            format: ObjectId\n            minimum: 1\n      tags:\n        - User\n      description: Busca por um usuário já resgistrado na plataforma com base em seu ID gerado pelo MongoDB.\n      operationId: user_byId\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/user_read.Response'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n  /user/read/byUsername/{username}:\n    get:\n      summary: Busca um usuário com base em um username\n      parameters:\n        - name: username\n          in: path\n          required: true\n          description: Username informado pelo usuário durante cadastro\n          schema:\n            type: string\n            minimum: 1\n      tags:\n        - User\n      description: Busca por um usuário já resgistrado na plataforma com base em seu username fornecido durante o cadastro.\n      operationId: user_byUsername\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/user_read.Response'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n  /user/read/byEmail/{email}:\n    get:\n      summary: Busca um usuário com base em um e-mail\n      parameters:\n        - name: email\n          in: path\n          required: true\n          description: E-mail informado pelo usuário durante cadastro\n          schema:\n            type: string\n            minimum: 1\n      tags:\n        - User\n      description: Busca por um usuário já resgistrado na plataforma com base em seu e-mail fornecido durante o cadastro.\n      operationId: user_byEmail\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/user_read.Response'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n  /user/read/all:\n    get:\n      tags:\n        - User\n      summary: Busca uma lista de usuários\n      description: Busca por todos os usuários já registrados na plataforma e retorna uma lista deles ordenada por seu username em ordem alfabética.\n      operationId: user_all\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/user_read_all.Response'\n        '400':\n          description: Bad Request\n  /user/update/{id}:\n    put:\n      tags:\n        - User\n      summary: Atualiza um usuário com base em um ID\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: ID do usuário gerado pelo MongoDB\n          schema:\n            type: string\n            format: ObjectId\n            minimum: 1\n      description: Atualiza os dados de perfil de um usuário com base em seu ID gerado pelo MongoDB.\n      operationId: user_update\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/user_read.Response'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '406':\n          description: Not Acceptable\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/user_update.Request'\n        required: true\n  /user/update/password/{id}:\n    put:\n      tags:\n        - User\n      summary: Atualiza um usuário com base em um ID\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: ID do usuário gerado pelo MongoDB\n          schema:\n            type: string\n            format: ObjectId\n            minimum: 1\n      description: Atualiza a senha de um usuário com base em seu ID gerado pelo MongoDB.\n      operationId: user_update\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Bad Request\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/user_update_password.Request'\n        required: true\n  /user/delete/{id}:\n    delete:\n      tags:\n        - User\n      summary: Deleta um usuário com base em um ID\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: ID do usuário gerado pelo MongoDB\n          schema:\n            type: string\n            format: ObjectId\n            minimum: 1\n      description: Deleta o registro do usuário na aplicação não sendo mais possível acessa-la após o processo.\n      operationId: user_delete\n      responses:\n        '204':\n          description: No Content\n        '400':\n          description: Bad request\n        '404':\n            description: Not Found\n\n  \n# Added by API Auto Mocking Plugin\nservers:\n  - url: ''\n    description: ''\ncomponents:\n  schemas:\n    # Group\n    group.Request:\n      title: group.Request\n      description: 'Objeto para grupo'\n      type: object\n      properties:\n        name:\n          type: string\n          description: 'Nome do grupo Ex: Desenvolvimento Web com PHP'\n        subject_label:\n          type: string\n          description: 'Assunto do grupo Ex: Node'\n        category:\n          type: array\n          items:\n            type: string\n            description: 'Lista de categorias Ex: [Web, Mobile]'\n        level:\n          type: number\n          description: 'Número de 0 a 2 que represente o nível de conhecimentodo grupo Ex: 1'\n        is_public:\n          type: boolean\n          description: 'Identificação para dizer se o grupo é público ou particular'\n        is_default:\n          type: boolean\n          description: 'Identificação para dizer se o grupo é do tipo padrão, ou customizado'\n        _owner:\n          type: string\n          description: 'ID do dono do grupo gerado pelo MongoDB'  \n    group_read.Response:\n      title: group_read.Response\n      description: 'Objeto para grupo'\n      type: object\n      properties:\n        _id:\n          type: string\n          description: 'ID gerado pelo MongoDB'\n        name:\n          type: string\n          description: 'Nome do grupo Ex: Desenvolvimento Web com PHP'\n        subject_label:\n          type: string\n          description: 'Assunto do grupo Ex: Node'\n        category:\n          type: array\n          items:\n            type: string\n            description: 'Lista de categorias Ex: [Web, Mobile]'\n        level:\n          type: number\n          description: 'Número de 0 a 2 que represente o nível de conhecimentodo grupo Ex: 1'\n        token:\n          type: string\n          description: 'Token de acesso para grupo'\n        is_public:\n          type: boolean\n          description: 'Identificação para dizer se o grupo é público ou particular'\n        is_default:\n          type: boolean\n          description: 'Identificação para dizer se o grupo é do tipo padrão, ou customizado'\n        _owner:\n          type: string\n          description: 'ID do dono do grupo gerado pelo MongoDB'\n        next_schedule:\n            type: string\n            description: 'Data da próxima reunião do grupo'\n    group_read_create.Response:\n      title: group_read.Response\n      description: 'Objeto para grupo'\n      type: object\n      properties:\n        _id:\n          type: string\n          description: 'ID gerado pelo MongoDB'\n        name:\n          type: string\n          description: 'Nome do grupo Ex: Desenvolvimento Web com PHP'\n        subject_label:\n          type: string\n          description: 'Assunto do grupo Ex: Node'\n        category:\n          type: array\n          items:\n            type: string\n            description: 'Lista de categorias Ex: [Web, Mobile]'\n        level:\n          type: number\n          description: 'Número de 0 a 2 que represente o nível de conhecimentodo grupo Ex: 1'\n        token:\n          type: string\n          description: 'Token de acesso para grupo'\n        is_public:\n          type: boolean\n          description: 'Identificação para dizer se o grupo é público ou particular'\n        is_default:\n          type: boolean\n          description: 'Identificação para dizer se o grupo é do tipo padrão, ou customizado'\n        _owner:\n          type: string\n          description: 'ID do dono do grupo gerado pelo MongoDB'\n    group_read_all.Response:\n      title: group_read_all.Response\n      description: 'Lista para grupos'\n      type: array\n      items:\n        type: object\n        properties:\n          _id:\n            type: string\n            description: 'ID gerado pelo MongoDB'\n          name:\n            type: string\n            description: 'Nome do grupo Ex: Desenvolvimento Web com PHP'\n          category:\n            type: array\n            items:\n              type: string\n              description: 'Lista de assuntos Ex: [Node, Java]'\n          level:\n            type: number\n            description: 'Número de 0 a 2 que represente o nível de conhecimentodo grupo Ex: 1'\n          token:\n            type: string\n            description: 'Token de acesso para grupo'\n          is_public:\n            type: boolean\n            description: 'Identificação para dizer se o grupo é público ou particular'\n          is_default:\n            type: boolean\n            description: 'Identificação para dizer se o grupo é do tipo padrão, ou customizado'\n          _owner:\n            type: string\n            description: 'ID do dono do grupo gerado pelo MongoDB'\n          next_schedule:\n            type: string\n            description: 'Data da próxima reunião do grupo'\n    \n    # Interest\n    interest.Request:\n      title: interest.Request\n      description: 'Objeto para interesse'\n      type: object\n      properties:\n        _id_user:\n          type: string\n          description: 'ID do usuário gerado pelo MongoDB'\n        _id_subject:\n          type: string\n          description: 'ID do assunto gerado pelo MongoDB'\n        level:\n          type: number\n          description: 'Número de 0 a 2 que represente o nível de conhecimento em determinado interesse Ex: 1'\n    interest_read.Response:\n      title: interest_read.Response\n      description: 'Objeto para interesse'\n      type: object\n      properties:\n        _id:\n          type: string\n          description: 'ID gerado pelo MongoDB'\n        _id_user:\n          type: string\n          description: 'ID do usuário gerado pelo MongoDB'\n        subject:\n          type: object\n          properties:\n            _id:\n              type: string\n              format: uuid\n              description: 'Id gerado pelo MongoDB'\n            label:\n              type: string\n              description: 'Rotúlo para o assunto Ex: NodeJs'\n            categories:\n              type: array\n              items:\n                type: string\n                description: 'Array de categorias Ex: [Web, Mobile]'\n        level:\n          type: number\n          description: 'Número de 0 a 2 que represente o nível de conhecimento em determinado interesse Ex: 1'\n    interest_read_all.Response:\n      title: interest_read_all.Response\n      description: 'Lista para interesses'\n      type: array\n      items:\n        type: object\n        properties:\n          _id:\n            type: string\n            description: 'ID gerado pelo MongoDB'\n          _id_user:\n            type: string\n            description: 'ID do usuário gerado pelo MongoDB'\n          subject:\n            type: object\n            properties:\n              _id:\n                type: string\n                format: uuid\n                description: 'Id gerado pelo MongoDB'\n              label:\n                type: string\n                description: 'Rotúlo para o assunto Ex: NodeJs'\n              categories:\n                type: array\n                items:\n                  type: string\n                  description: 'Array de categorias Ex: [Web, Mobile]'\n          level:\n            type: number\n            description: 'Número de 0 a 2 que represente o nível de conhecimento em determinado interesse Ex: 1'\n    \n    #Roadmap\n    AddRoadmapDefault:\n      type: object\n      required:\n        - name\n        - objective\n        - content_list\n      properties:\n        name:\n          type: string\n          example: NodeJS\n        objective:\n          type: string\n          example: Neste roadmap, você aprenderá o conteúdo básico para trabalhar com NodeJS\n        content_list:\n          type: string\n          format: Array\n          example: [NodeJS, Express]\n    AddRoadmapCustom:\n      type: object\n      required:\n        - name\n        - objective\n        - content_list\n      properties:\n        name:\n          type: string\n          example: NodeJS\n        objective:\n          type: string\n          example: Neste roadmap, você aprenderá o conteúdo básico para trabalhar com NodeJS\n        content_list:\n          type: string\n          format: Array\n          example: [NodeJS, Express]\n    UpdateRoadmapName:\n      type: object\n      required:\n        - name\n      properties:\n        name:\n          type: string\n          example: NodeJS\n    UpdateRoadmapObjective:\n      type: object\n      required:\n        - objective\n      properties:\n        objective:\n          type: string\n          example: NodeJS\n    UpdateRoadmapContentList:\n      type: object\n      required:\n        - content_list\n      properties:\n        content_list:\n          type: string\n          example: [\"JS\", \"Node\", \"Python\", \"Go\"]\n    \n    # Subject\n    subject_create.Request:\n      title: subject.Request\n      description: 'Object for subject'\n      type: object\n      properties:\n        label:\n          type: string\n          description: 'Rotúlo para o assunto Ex: NodeJs'\n        categories:\n          type: array\n          items:\n            type: string\n            description: 'Array de categorias Ex: [Web, Mobile]'\n    subject_update.Request:\n      title: subject.Request\n      description: 'Object for subject'\n      type: object\n      properties:\n        _id:\n          type: string\n          format: uuid\n          description: 'Id gerado pelo MongoDB'\n        label:\n          type: string\n          description: 'Rotúlo para o assunto Ex: NodeJs'\n        categories:\n          type: array\n          items:\n            type: string\n            description: 'Array de categorias Ex: [Web, Mobile]'\n        createdAt:\n          type: string\n          format: date-time\n          description: 'Data e hora da criação deste registro no Mongo BD EX: 2021-05-21T00:14:07.404Z'\n        updatedAt:\n          type: string\n          format: date-time\n          description: 'Data e hora da criação deste registro no Mongo BD EX: 2021-05-21T00:14:07.404Z'\n        __v:\n          type: number\n          description: 'Vesão'\n    subject_all.Response:\n      title: subject_read_all.Response\n      description: 'Array for subjects'\n      type: array\n      items:\n        type: object\n        properties:\n          _id:\n            type: string\n            format: uuid\n            description: 'Id gerado pelo MongoDB'\n          label:\n            type: string\n            description: 'Rotúlo para o assunto Ex: NodeJs'\n          categories:\n            type: array\n            items:\n              type: string\n              description: 'Array de categorias Ex: [Web, Mobile]'\n          createdAt:\n            type: string\n            format: date-time\n            description: 'Data e hora da criação deste registro no Mongo BD EX: 2021-05-21T00:14:07.404Z'\n          updatedAt:\n            type: string\n            format: date-time\n            description: 'Data e hora da criação deste registro no Mongo BD EX: 2021-05-21T00:14:07.404Z'\n          __v:\n            type: number\n            description: 'Vesão'\n    subject_read.Response:\n      title: subject_read.Response\n      description: 'Object for subject'\n      type: object\n      properties:\n        _id:\n          type: string\n          format: uuid\n          description: 'Id gerado pelo MongoDB'\n        label:\n          type: string\n          description: 'Rotúlo para o assunto Ex: NodeJs'\n        categories:\n          type: array\n          items:\n            type: string\n            description: 'Array de categorias Ex: [Web, Mobile]'\n        createdAt:\n          type: string\n          format: date-time\n          description: 'Data e hora da criação deste registro no Mongo BD EX: 2021-05-21T00:14:07.404Z'\n        updatedAt:\n          type: string\n          format: date-time\n          description: 'Data e hora da criação deste registro no Mongo BD EX: 2021-05-21T00:14:07.404Z'\n        __v:\n          type: number\n          description: 'Vesão'\n    \n    #Schedule\n    schedule_create.Request:\n      title: schedule.Request\n      description: 'Object for subject'\n      type: object\n      properties:\n        datetime:\n          type: string\n          format: date-time\n          description: 'Data e hora da reunião Ex: 2021-05-13T21:50:49-03:00'\n        link:\n          type: string\n          description: 'Link para a sala do agendamento Ex: https://apps.google.com/meet/??-xx-ff'\n        description:\n          type: string\n          description: 'Descrição do que será tratado Ex: Reunião de estudos sobre promise em Node'\n        owner:\n          type: string\n          format: uuid\n          description: 'Id do usuário gerado pelo mongo DB'\n        id_group:\n          type: string\n          format: uuid\n          description: 'Id do grupo gerado pelo mongo DB'\n    schedule_update.Request:\n      title: schedule.Request\n      description: 'Object for schedule'\n      type: object\n      properties:\n        datetime:\n          type: string\n          format: date-time\n          description: 'Data e hora da reunião Ex: 2021-05-13T21:50:49-03:00'\n        link:\n          type: string\n          description: 'Link para a sala do agendamento Ex: https://apps.google.com/meet/??-xx-ff'\n        description:\n          type: string\n          description: 'Descrição do que será tratado Ex: Reunião de estudos sobre promise em Node'\n    schedule_all.Response:\n      title: schedule_read_all.Response\n      description: 'Array for schedules'\n      type: array\n      items:\n        type: object\n        properties:\n          _id:\n            type: string\n            format: uuid\n            description: 'Id gerado pelo MongoDB'\n          datetime:\n            type: string\n            description: 'Data e hora da reunião Ex: 2021-05-13T21:50:49-03:00'\n          link:\n            type: string\n            description: 'Link para a sala do agendamento Ex: https://apps.google.com/meet/??-xx-ff'\n          description:\n            type: string\n            description: 'Descrição do que será tratado Ex: Reunião de estudos sobre promise em Node'\n          owner:\n            type: string\n            format: uuid\n            description: 'Id do usuário gerado pelo mongo DB'\n          _id_group:\n            type: string\n            format: uuid\n            description: 'Id do group gerado pelo mongo DB'\n          createdAt:\n            type: string\n            format: date-time\n            description: 'Data e hora da criação deste registro no Mongo BD EX: 2021-05-21T00:14:07.404Z'\n          updatedAt:\n            type: string\n            format: date-time\n            description: 'Data e hora da criação deste registro no Mongo BD EX: 2021-05-21T00:14:07.404Z'\n          __v:\n            type: number\n            description: 'Vesão'\n    schedule_read.Response:\n      title: schedule_read.Response\n      description: 'Object for schedule'\n      type: object\n      properties:\n        _id:\n          type: string\n          format: uuid\n          description: 'Id gerado pelo MongoDB'\n        datetime:\n          type: string\n          description: 'Data e hora da reunião Ex: 2021-05-13T21:50:49-03:00'\n        link:\n          type: string\n          description: 'Link para a sala do agendamento Ex: https://apps.google.com/meet/??-xx-ff'\n        description:\n          type: string\n          description: 'Descrição do que será tratado Ex: Reunião de estudos sobre promise em Node'\n        owner:\n          type: string\n          format: uuid\n          description: 'Id do usuário gerado pelo mongo DB'\n        _id_group:\n          type: string\n          format: uuid\n          description: 'Id do group gerado pelo mongo DB'\n        createdAt:\n          type: string\n          format: date-time\n          description: 'Data e hora da criação deste registro no Mongo BD EX: 2021-05-21T00:14:07.404Z'\n        updatedAt:\n          type: string\n          format: date-time\n          description: 'Data e hora da criação deste registro no Mongo BD EX: 2021-05-21T00:14:07.404Z'\n        __v:\n          type: number\n          description: 'Vesão'\n    \n    # Union User Group\n    unionUserGroup.Request:\n      title: unionUserGroup.Request\n      description: 'Objeto para união entre usuário e grupo'\n      type: object\n      properties:\n        _id_user:\n          type: string\n          description: 'ID do usuário gerado pelo MongoDB que está entrando no grupo'\n        _id_group:\n          type: string\n          description: 'ID do grupo gerado pelo MongoDB no qual o usuário está entrando'\n    unionUserGroup_search.Request:\n      title: unionUserGroup_search.Request\n      description: 'Objeto para busca de grupos por filtro'\n      type: object\n      properties:\n        name:\n          type: string\n          description: 'Parte do nome do(s) grupo(s)'\n        subject_label:\n          type: string\n          description: 'Assunto dos grupos'\n        category:\n          type: string\n          description: 'Categoria dos grupos'\n        level:\n          type: number\n          description: 'Nível dos grupos'\n        is_alphabetical:\n          type: boolean\n          description: 'Se a resposta deve ser ordenada de A-Z ou de Z-A. Sendo true para o primeiro caso e false para o segundo' \n    unionUserGroup_read_all.Response:\n      title: unionUserGroup_read_users.Response\n      description: 'Lista para a união entre usuário e grupo'\n      type: array\n      items:\n        type: object\n        properties:\n          _id:\n            type: string\n            description: 'ID gerado pelo MongoDB'\n          name:\n            type: string\n            description: 'Nome do grupo Ex: Desenvolvimento Web com PHP'\n          number_members:\n            type: number\n            description: 'Quantidade de usuários que existem no grupo'\n          category:\n            type: array\n            items:\n              type: string\n              description: 'Lista de assuntos Ex: [Node, Java]'\n          level:\n            type: number\n            description: 'Número de 0 a 2 que represente o nível de conhecimentodo grupo Ex: 1'\n          token:\n            type: string\n            description: 'Token de acesso para grupo'\n          is_public:\n            type: boolean\n            description: 'Identificação para dizer se o grupo é público ou particular'\n          is_default:\n            type: boolean\n            description: 'Identificação para dizer se o grupo é do tipo padrão, ou customizado'\n          _owner:\n            type: string\n            description: 'ID do dono do grupo gerado pelo MongoDB'\n          next_schedule:\n            type: string\n            description: 'Próxima reunião do grupo'\n    \n    # User\n    user_create.Request:\n      title: user.Request\n      description: 'Objeto para usuário'\n      type: object\n      properties:\n        username:\n          type: string\n          description: 'Username do usuário Ex: Joãozinho10'\n        name:\n          type: string\n          description: 'Nome do usuário Ex: João'\n        last_name:\n          type: string\n          description: 'Sobrenome do usuário Ex: Silva'\n        email:\n          type: string\n          description: 'E-mail do usuário Ex: joao@email.com'\n        discord_id:\n          type: string\n          description: 'ID do usuário no Discord Ex: joao#0134'\n        github_id:\n          type: string\n          description: 'ID do usuário no GitHub Ex: joaosilva10'\n        password:\n          type: string\n          format: password\n          description: 'Senha escolhida pelo usuário para utilizar na plataforma Ex: Jo@10Silv4'\n        interest_list:\n          type: array\n          items:\n            type: object\n            properties:\n              _id_subject:\n                type: string\n                format: uuid\n                description: 'ID do interesse gerado pelo MongoDB'\n              level:\n                type: number\n                description: 'Número de 0 a 2 que represente o nível de conhecimentodo grupo Ex: 1'\n    user_update.Request:\n      title: user.Request\n      description: 'Objeto para usuário'\n      type: object\n      properties:\n        username:\n          type: string\n          description: 'Username do usuário Ex: Joãozinho10'\n        name:\n          type: string\n          description: 'Nome do usuário Ex: João'\n        last_name:\n          type: string\n          description: 'Sobrenome do usuário Ex: Silva'\n        email:\n          type: string\n          description: 'E-mail do usuário Ex: joao@email.com'\n        discord_id:\n          type: string\n          description: 'ID do usuário no Discord Ex: joao#0134'\n        github_id:\n          type: string\n          description: 'ID do usuário no GitHub Ex: joaosilva10'\n        password:\n          type: string\n          description: 'Senha escolhida pelo usuário para utilizar na plataforma Ex: Jo@10Silv4'\n    user_update_password.Request:\n      title: user.Request\n      description: 'Objeto para usuário'\n      type: object\n      properties:\n        email:\n          type: string\n          description: 'E-mail do usuário Ex: joao@email.com'\n        password:\n          type: string\n          description: 'Senha escolhida pelo usuário para utilizar na plataforma Ex: Jo@10Silv4'\n    user_login.Request:\n      title: user_login.Request\n      description: 'Objeto para usuário'\n      type: object\n      properties:\n        username:\n          type: string\n          description: 'Username do usuário Ex: Joãozinho10'\n        password:\n          type: string\n          format: password\n          description: 'Senha escolhida pelo usuário para utilizar na plataforma Ex: Jo@10Silv4'\n    user_read.Response:\n      title: user_read.Response\n      description: 'Objeto para usuário'\n      type: object\n      properties:\n        _id:\n          type: string\n          description: 'ID gerado pelo MongoDB'\n        username:\n          type: string\n          description: 'Username do usuário Ex: Joãozinho10'\n        name:\n          type: string\n          description: 'Nome do usuário Ex: João'\n        last_name:\n          type: string\n          description: 'Sobrenome do usuário Ex: Silva'\n        email:\n          type: string\n          description: 'E-mail do usuário Ex: joao@email.com'\n        discord_id:\n          type: string\n          description: 'ID do usuário no Discord Ex: joao#0134'\n        github_id:\n          type: string\n          description: 'ID do usuário no GitHub Ex: joaosilva10'\n        password:\n          type: string\n          description: 'Senha escolhida pelo usuário para utilizar na plataforma Ex: Jo@10Silv4'\n    user_read_token.Response:\n      title: user_read.Response\n      description: 'Objeto para usuário'\n      type: object\n      properties:\n        _id:\n          type: string\n          description: 'ID gerado pelo MongoDB'\n        username:\n          type: string\n          description: 'Username do usuário Ex: Joãozinho10'\n        name:\n          type: string\n          description: 'Nome do usuário Ex: João'\n        last_name:\n          type: string\n          description: 'Sobrenome do usuário Ex: Silva'\n        email:\n          type: string\n          description: 'E-mail do usuário Ex: joao@email.com'\n        discord_id:\n          type: string\n          description: 'ID do usuário no Discord Ex: joao#0134'\n        github_id:\n          type: string\n          description: 'ID do usuário no GitHub Ex: joaosilva10'\n        password:\n          type: string\n          description: 'Senha escolhida pelo usuário para utilizar na plataforma Ex: Jo@10Silv4'\n        token:\n          type: string\n          description: 'Token da sessão'\n    user_read_all.Response:\n      title: user_read_all.Response\n      description: 'Lista para usuários'\n      type: array\n      items:\n        type: object\n        properties:\n          _id:\n            type: string\n            description: 'ID gerado pelo MongoDB'\n          username:\n            type: string\n            description: 'Username do usuário Ex: Joãozinho10'\n          name:\n            type: string\n            description: 'Nome do usuário Ex: João'\n          last_name:\n            type: string\n            description: 'Sobrenome do usuário Ex: Silva'\n          email:\n            type: string\n            description: 'E-mail do usuário Ex: joao@email.com'\n          discord_id:\n            type: string\n            description: 'ID do usuário no Discord Ex: joao#0134'\n          github_id:\n            type: string\n            description: 'ID do usuário no GitHub Ex: joaosilva10'\n          password:\n            type: string\n            description: 'Senha escolhida pelo usuário para utilizar na plataforma Ex: Jo@10Silv4'",
			"canonicalURL": "/github.com/codando-community/coderslab@e640aa22b99c4af5353d7f0e4db10cde2e8bda51/-/blob/server/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/codando-community/coderslab/blob/e640aa22b99c4af5353d7f0e4db10cde2e8bda51/server/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/user/update/{id}\": at 1:51311: put: duplicate operationId: \"user_update\""
}