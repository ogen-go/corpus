{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/AlexGustafsson/upmon"
		},
		"file": {
			"name": "api.yml",
			"size": 0,
			"path": "api.yml",
			"byteSize": 10976,
			"content": "openapi: 3.0.0\n\n\ninfo:\n  title: upmon\n  description: A cloud-native, distributed uptime monitor written in Go\n  version: 0.1.0\n\n\nservers:\n  - url: http://localhost:8080/api/v1\n    description: Development server\n\n\npaths:\n  /origins:\n    get:\n      summary: Retrieve all origins\n      tags:\n        - Origins\n      responses:\n        \"200\":\n            description: The retrieved origins\n            content:\n              application/json:\n                schema:\n                  $ref: \"#/components/schemas/Origins\"\n  /origins/{originId}:\n    get:\n      summary: Retrieve an origin\n      tags:\n          - Origins\n      parameters:\n        - $ref: \"#/components/parameters/OriginId\"\n      responses:\n        \"200\":\n          description: The retrieved origin\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Origin\"\n        \"404\":\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n\n  /services:\n    get:\n      summary: Retrieve all monitored services\n      tags:\n        - Services\n      responses:\n        \"200\":\n          description: The retrieved services\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Services\"\n  /origins/{originId}/services:\n    get:\n      summary: Retrieve all monitored services for an origin\n      tags:\n        - Services\n      parameters:\n        - $ref: \"#/components/parameters/OriginId\"\n      responses:\n        \"200\":\n          description: The retrieved services\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Services\"\n        \"404\":\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /origins/{originId}/services/{serviceId}:\n    get:\n      summary: Retrieve a service\n      tags:\n        - Services\n      parameters:\n        - $ref: \"#/components/parameters/OriginId\"\n        - $ref: \"#/components/parameters/ServiceId\"\n      responses:\n        \"200\":\n          description: The retrieved service\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Service\"\n        \"404\":\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /origins/{originId}/services/{serviceId}/status:\n    get:\n      summary: Retrieve the status of a service\n      tags:\n        - Services\n      parameters:\n        - $ref: \"#/components/parameters/OriginId\"\n        - $ref: \"#/components/parameters/ServiceId\"\n      responses:\n        \"200\":\n          description: The retrieved status\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceStatus\"\n        \"404\":\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n\n  /origins/{originId}/services/{serviceId}/monitors:\n    get:\n      summary: Retrieve all monitors for a service of an origin\n      tags:\n        - Monitors\n      parameters:\n        - $ref: \"#/components/parameters/OriginId\"\n        - $ref: \"#/components/parameters/ServiceId\"\n      responses:\n        \"200\":\n          description: The retrieved monitors\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Monitors\"\n        \"404\":\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /origins/{originId}/services/{serviceId}/monitors/{monitorId}:\n    get:\n      summary: Retrieve a monitor of a service from an origin\n      tags:\n        - Monitors\n      parameters:\n        - $ref: \"#/components/parameters/OriginId\"\n        - $ref: \"#/components/parameters/ServiceId\"\n        - $ref: \"#/components/parameters/MonitorId\"\n      responses:\n        \"200\":\n          description: The retrieved monitor\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Monitor\"\n        \"404\":\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /origins/{originId}/services/{serviceId}/monitors/{monitorId}/status:\n    get:\n      summary: Retrieve the status of a monitor\n      tags:\n        - Monitors\n      parameters:\n        - $ref: \"#/components/parameters/OriginId\"\n        - $ref: \"#/components/parameters/ServiceId\"\n        - $ref: \"#/components/parameters/MonitorId\"\n      responses:\n        \"200\":\n          description: The retrieved status\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MonitorStatus\"\n        \"404\":\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n\n  /peers:\n    get:\n      summary: Retrieve all peers\n      tags:\n        - Peers\n      responses:\n        \"200\":\n          description: The retrieved peers\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Peers\"\n  /peers/{peerId}:\n    get:\n      summary: Retrieve a peer\n      tags:\n        - Peers\n      parameters:\n        - $ref: \"#/components/parameters/PeerId\"\n      responses:\n        \"200\":\n          description: The retrieved peer\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Peer\"\n        \"404\":\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n\n\ntags:\n  - name: Origins\n    description: Origin-related endpoints\n  - name: Services\n    description: Services-related endpoints\n  - name: Monitors\n    description: Monitors-related endpoints\n  - name: Peers\n    description: Peers-related endpoints\n\n\ncomponents:\n  schemas:\n    Origins:\n      type: object\n      required:\n        - objects\n      properties:\n        objects:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Origin\"\n    Origin:\n      type: object\n      required:\n        - id\n      properties:\n        id:\n          type: string\n          description: A globally unique identifier for the origin\n\n    Services:\n      type: object\n      required:\n        - services\n      properties:\n        services:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Service\"\n    Service:\n      type: object\n      required:\n        - id\n        - name\n        - status\n        - private\n        - status\n        - lastSeen\n        - origin\n      properties:\n        id:\n          type: string\n          description: An identifier for the service, unique for the origin\n        name:\n          type: string\n          description: Name of the service\n        description:\n          type: string\n          description: Description of the service\n        private:\n          type: bool\n          description: Whether or not the config is shared with the cluster\n        status:\n          $ref: \"#/components/schemas/ServiceStatus\"\n        lastSeen:\n          type: string\n          description: The timestamp at which the service was last seen responding\n        origin:\n          type: string\n          description: The origin node from which this service is configured\n    ServiceStatus:\n      type: object\n      required:\n        - status\n      properties:\n        status:\n          type: string\n          description: The current status of the service\n\n    Monitors:\n      type: object\n      required:\n        - monitors\n      properties:\n        monitors:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Monitor\"\n    Monitor:\n      type: object\n      required:\n        - id\n        - name\n        - description\n        - type\n        - service\n        - status\n      properties:\n        id:\n          type: string\n          description: An identifier for the monitor, unique for the service\n        name:\n          type: string\n          description: Name of the monitor\n        description:\n          type: string\n          description: Description of the monitor\n        type:\n          type: string\n          description: Type of the monitor\n        service:\n          type: string\n          description: The id of the parent service\n        status:\n          $ref: \"#/components/schemas/MonitorStatus\"\n    MonitorStatus:\n      type: object\n      required:\n        - up\n        - down\n        - transitioningUp\n        - transitioningDown\n        - unknown\n      properties:\n        up:\n          type: integer\n          description: The number of cluster members voting for up\n        down:\n          type: integer\n          description: The number of cluster members voting for down\n        transitioningUp:\n          type: integer\n          description: The number of cluster members voting for transitioning up\n        transitioningDown:\n          type: integer\n          description: The number of cluster members voting for transitioning down\n        unknown:\n          type: integer\n          description: The number of cluster members voting for unknown\n\n    Peers:\n      type: object\n      required:\n        - peers\n      properties:\n        peers:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Peer\"\n    Peer:\n      type: object\n      required:\n        - name\n        - bind\n        - status\n      properties:\n        name:\n          type: string\n          description: The name of the peer\n        bind:\n          type: string\n          description: The address and port of the peer\n        status:\n          type: string\n          description: The status of the peer\n\n    ErrorResponse:\n      type: object\n      required:\n        - error\n      properties:\n        error:\n          type: string\n\n\n  parameters:\n    OriginId:\n      in: path\n      name: originId\n      schema:\n        type: string\n      required: true\n      description: The id of the target origin\n    ServiceId:\n      in: path\n      name: serviceId\n      schema:\n        type: string\n      required: true\n      description: The id of the target service\n    MonitorId:\n      in: path\n      name: monitorId\n      schema:\n        type: string\n      required: true\n      description: The id of the target monitor\n    PeerId:\n      in: path\n      name: peerId\n      schema:\n        type: string\n      required: true\n      description: The id of the target peer\n",
			"canonicalURL": "/github.com/AlexGustafsson/upmon@16cb73584bbd168ff695c0b0684efbb2d553ce37/-/blob/api.yml",
			"externalURLs": [
				{
					"url": "https://github.com/AlexGustafsson/upmon/blob/16cb73584bbd168ff695c0b0684efbb2d553ce37/api.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"Service\": parse schema: property \"private\": parse schema: at 1:3177: unexpected schema type: \"bool\""
}