{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql-provider-registry"
		},
		"file": {
			"name": "site.yaml",
			"size": 0,
			"path": "providers/src/netlify/v0.2.0/services/site.yaml",
			"byteSize": 14834,
			"content": "paths:\n  /sites:\n    get:\n      parameters:\n        - in: query\n          name: name\n          schema:\n            type: string\n        - in: query\n          name: filter\n          schema:\n            enum:\n              - all\n              - owner\n              - guest\n            type: string\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/perPage'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/site'\n                type: array\n          description: OK\n        default:\n          $ref: '#/components/responses/error'\n      tags:\n        - site\n      operationId: listSites\n    post:\n      parameters:\n        - in: query\n          name: configure_dns\n          schema:\n            type: boolean\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/site'\n          description: Created\n        default:\n          $ref: '#/components/responses/error'\n      tags:\n        - site\n      operationId: createSite\n      requestBody:\n        $ref: '#/components/requestBodies/siteSetup'\n  /sites/{site_id}:\n    delete:\n      responses:\n        '204':\n          description: Deleted\n        default:\n          $ref: '#/components/responses/error'\n      tags:\n        - site\n      operationId: deleteSite\n      parameters: \u0026ref_0\n        - in: path\n          name: site_id\n          required: true\n          schema:\n            type: string\n    get:\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/site'\n          description: OK\n        default:\n          $ref: '#/components/responses/error'\n      tags:\n        - site\n      operationId: getSite\n      parameters: *ref_0\n    patch:\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/site'\n          description: OK\n        default:\n          $ref: '#/components/responses/error'\n      tags:\n        - site\n      operationId: updateSite\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/siteSetup'\n        required: true\n      parameters: *ref_0\n  /sites/{site_id}/unlink_repo:\n    put:\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/site'\n          description: OK\n        '404':\n          description: Site not found\n      tags:\n        - site\n      description: |-\n        [Beta] Unlinks the repo from the site.\n\n        This action will also:\n        - Delete associated deploy keys\n        - Delete outgoing webhooks for the repo\n        - Delete the site's build hooks\n      operationId: unlinkSiteRepo\n      parameters:\n        - in: path\n          name: site_id\n          required: true\n          schema:\n            type: string\n  /{account_slug}/sites:\n    get:\n      parameters:\n        - in: query\n          name: name\n          schema:\n            type: string\n        - in: path\n          name: account_slug\n          required: true\n          schema:\n            type: string\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/perPage'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/site'\n                type: array\n          description: OK\n        default:\n          $ref: '#/components/responses/error'\n      tags:\n        - site\n      operationId: listSitesForAccount\n    post:\n      parameters:\n        - in: query\n          name: configure_dns\n          schema:\n            type: boolean\n        - in: path\n          name: account_slug\n          required: true\n          schema:\n            type: string\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/site'\n          description: Created\n        default:\n          $ref: '#/components/responses/error'\n      tags:\n        - site\n      operationId: createSiteInTeam\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/siteSetup'\ncomponents:\n  schemas:\n    site:\n      properties:\n        account_name:\n          type: string\n        account_slug:\n          type: string\n        admin_url:\n          type: string\n        build_image:\n          type: string\n        build_settings:\n          $ref: '#/components/schemas/repoInfo'\n        capabilities:\n          additionalProperties:\n            type: object\n          type: object\n        created_at:\n          format: dateTime\n          type: string\n        custom_domain:\n          type: string\n        default_hooks_data:\n          properties:\n            access_token:\n              type: string\n          type: object\n        deploy_hook:\n          type: string\n        deploy_url:\n          type: string\n        domain_aliases:\n          items:\n            type: string\n          type: array\n        force_ssl:\n          type: boolean\n        git_provider:\n          type: string\n        id:\n          type: string\n        id_domain:\n          type: string\n        managed_dns:\n          type: boolean\n        name:\n          type: string\n        notification_email:\n          type: string\n        password:\n          type: string\n        plan:\n          type: string\n        prerender:\n          type: string\n        processing_settings:\n          properties:\n            css:\n              $ref: '#/components/schemas/minifyOptions'\n            html:\n              properties:\n                pretty_urls:\n                  type: boolean\n              type: object\n            images:\n              properties:\n                optimize:\n                  type: boolean\n              type: object\n            js:\n              $ref: '#/components/schemas/minifyOptions'\n            skip:\n              type: boolean\n          type: object\n        published_deploy:\n          $ref: '#/components/schemas/deploy'\n        screenshot_url:\n          type: string\n        session_id:\n          type: string\n        ssl:\n          type: boolean\n        ssl_url:\n          type: string\n        state:\n          type: string\n        updated_at:\n          format: dateTime\n          type: string\n        url:\n          type: string\n        user_id:\n          type: string\n      type: object\n    repoInfo:\n      properties:\n        allowed_branches:\n          items:\n            type: string\n          type: array\n        cmd:\n          type: string\n        deploy_key_id:\n          type: string\n        dir:\n          type: string\n        env:\n          additionalProperties:\n            type: string\n          type: object\n        functions_dir:\n          type: string\n        id:\n          type: integer\n        installation_id:\n          type: integer\n        private_logs:\n          type: boolean\n        provider:\n          type: string\n        public_repo:\n          type: boolean\n        repo_branch:\n          type: string\n        repo_path:\n          type: string\n        repo_url:\n          type: string\n        stop_builds:\n          type: boolean\n      type: object\n    minifyOptions:\n      properties:\n        bundle:\n          type: boolean\n        minify:\n          type: boolean\n      type: object\n    deploy:\n      properties:\n        admin_url:\n          type: string\n        branch:\n          type: string\n        build_id:\n          type: string\n        commit_ref:\n          type: string\n        commit_url:\n          type: string\n        context:\n          type: string\n        created_at:\n          format: dateTime\n          type: string\n        deploy_ssl_url:\n          type: string\n        deploy_url:\n          type: string\n        draft:\n          type: boolean\n        error_message:\n          type: string\n        framework:\n          type: string\n        function_schedules:\n          items:\n            $ref: '#/components/schemas/functionSchedule'\n          type: array\n        id:\n          type: string\n        locked:\n          type: boolean\n        name:\n          type: string\n        published_at:\n          format: dateTime\n          type: string\n        required:\n          items:\n            type: string\n          type: array\n        required_functions:\n          items:\n            type: string\n          type: array\n        review_id:\n          type: number\n        review_url:\n          type: string\n        screenshot_url:\n          type: string\n        site_capabilities:\n          properties:\n            large_media_enabled:\n              type: boolean\n          type: object\n        site_id:\n          type: string\n        skipped:\n          type: boolean\n        ssl_url:\n          type: string\n        state:\n          type: string\n        title:\n          type: string\n        updated_at:\n          format: dateTime\n          type: string\n        url:\n          type: string\n        user_id:\n          type: string\n      type: object\n    error:\n      properties:\n        code:\n          format: int64\n          type: integer\n        message:\n          nullable: false\n          type: string\n      required:\n        - message\n      type: object\n    functionSchedule:\n      properties:\n        cron:\n          type: string\n        name:\n          type: string\n      type: object\n    siteSetup:\n      allOf:\n        - $ref: '#/components/schemas/site'\n        - properties:\n            repo:\n              $ref: '#/components/schemas/repoInfo'\n          type: object\n  parameters:\n    page:\n      in: query\n      name: page\n      required: false\n      schema:\n        format: int32\n        type: integer\n    perPage:\n      in: query\n      name: per_page\n      required: false\n      schema:\n        format: int32\n        type: integer\n  responses:\n    error:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n      description: error\n  securitySchemes: {}\n  callbacks: {}\n  examples: {}\n  requestBodies:\n    siteSetup:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/siteSetup'\n      required: true\n  headers: {}\n  links: {}\n  x-stackQL-resources:\n    sites:\n      id: netlify.site.sites\n      name: sites\n      title: Sites\n      methods:\n        listSites:\n          operation:\n            $ref: '#/paths/~1sites/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        createSite:\n          operation:\n            $ref: '#/paths/~1sites/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        deleteSite:\n          operation:\n            $ref: '#/paths/~1sites~1{site_id}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        getSite:\n          operation:\n            $ref: '#/paths/~1sites~1{site_id}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        updateSite:\n          operation:\n            $ref: '#/paths/~1sites~1{site_id}/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        listSitesForAccount:\n          operation:\n            $ref: '#/paths/~1{account_slug}~1sites/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        createSiteInTeam:\n          operation:\n            $ref: '#/paths/~1{account_slug}~1sites/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/sites/methods/getSite'\n          - $ref: '#/components/x-stackQL-resources/sites/methods/listSitesForAccount'\n          - $ref: '#/components/x-stackQL-resources/sites/methods/listSites'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/sites/methods/createSiteInTeam'\n          - $ref: '#/components/x-stackQL-resources/sites/methods/createSite'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/sites/methods/deleteSite'\n    sites_unlink_repo:\n      id: netlify.site.sites_unlink_repo\n      name: sites_unlink_repo\n      title: Sites_unlink_repo\n      methods:\n        unlinkSiteRepo:\n          operation:\n            $ref: '#/paths/~1sites~1{site_id}~1unlink_repo/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select: []\n        insert: []\n        update: []\n        delete: []\nopenapi: 3.0.0\nservers:\n  - url: https://api.netlify.com/api/v1\nsecurity:\n  - netlifyAuth: []\ntags:\n  - name: ticket\n    x-displayName: Ticket\n  - name: accessToken\n    x-displayName: Access token\n  - name: user\n    x-displayName: User\n  - name: accountMembership\n    x-displayName: Accounts\n  - name: member\n    x-displayName: Member\n  - name: accountType\n    x-displayName: Access type\n  - name: paymentMethod\n    x-displayName: Payment method\n  - name: auditLog\n    x-displayName: Audit log\n  - name: site\n    x-displayName: Site\n  - name: file\n    x-displayName: File\n  - name: metadata\n    x-displayName: Metadata\n  - name: snippet\n    x-displayName: Snippet\n  - name: dnsZone\n    x-displayName: DNS zone\n  - name: sniCertificate\n    x-displayName: SNI certificate\n  - name: deploy\n    x-displayName: Deploy\n  - name: deployedBranch\n    x-displayName: Deployed branch\n  - name: deployKey\n    x-displayName: Deploy key\n  - name: build\n    x-displayName: Build\n  - name: buildLogMsg\n    x-displayName: Build log message\n  - name: hook\n    x-displayName: Hook\n  - name: hookType\n    x-displayName: Hook type\n  - name: buildHook\n    x-displayName: Build hook\n  - name: service\n    x-displayName: Service\n  - name: serviceInstance\n    x-displayName: Service instance\n  - name: function\n    x-displayName: Function\n  - name: form\n    x-displayName: Form\n  - name: submission\n    x-displayName: Form submission\n  - name: splitTest\n    x-displayName: Split test\n  - name: asset\n    x-displayName: Asset\n  - name: assetPublicSignature\n    x-displayName: Asset public signature\nexternalDocs:\n  description: Online documentation\n  url: https://www.netlify.com/docs/api/\ninfo:\n  description: site\n  termsOfService: https://www.netlify.com/legal/terms-of-use/\n  title: Netlify's API documentation - site\n  version: 2.9.0\n  x-logo:\n    altText: Netlify\n    href: https://www.netlify.com/docs/\n    url: netlify-logo.png\n",
			"canonicalURL": "/github.com/stackql/stackql-provider-registry@fa7896eb5ee6872f9b9bb45ca9439fc11f7cd681/-/blob/providers/src/netlify/v0.2.0/services/site.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stackql/stackql-provider-registry/blob/fa7896eb5ee6872f9b9bb45ca9439fc11f7cd681/providers/src/netlify/v0.2.0/services/site.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/sites\": get: operation \"listSites\": security: at 1:10034: unknown security schema \"netlifyAuth\""
}