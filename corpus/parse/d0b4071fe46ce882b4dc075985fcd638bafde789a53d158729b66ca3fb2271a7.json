{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Need2Watch/N2W_Back"
		},
		"file": {
			"name": "swagger.json",
			"size": 0,
			"path": "static/swagger.json",
			"byteSize": 18248,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"description\": \"Control your movie night schedule\",\n    \"version\": \"1.0.0\",\n    \"title\": \"Need2Watch REST API\",\n    \"contact\": {\n      \"email\": \"pablorodriguezguillen@gmail.com\"\n    },\n    \"license\": {\n      \"name\": \"MIT\",\n      \"url\": \"https://opensource.org/licenses/MIT\"\n    }\n  },\n  \"servers\": [\n    {\n      \"url\": \"/\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"User\",\n      \"description\": \"REST API for requesting and returning users\"\n    },\n    {\n      \"name\": \"Movie\",\n      \"description\": \"REST API for requesting and returning movies\"\n    }\n  ],\n  \"paths\": {\n    \"/users\": {\n      \"post\": {\n        \"tags\": [\"User\"],\n        \"summary\": \"Creates a new user\",\n        \"requestBody\": {\n          \"description\": \"User Scheme\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/user-received\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Ok\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/user-sent\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad syntax\"\n          },\n          \"404\": {\n            \"description\": \"Inexistent User\"\n          }\n        }\n      }\n    },\n    \"/users/{user_id}\": {\n      \"put\": {\n        \"tags\": [\"User\"],\n        \"summary\": \"Updates an existing user\",\n        \"parameters\": [\n          {\n            \"name\": \"user_id\",\n            \"in\": \"path\",\n            \"description\": \"User ID\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"format\": \"uuid\"\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"User Scheme\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/user-received\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Ok\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/user-sent\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad syntax\"\n          },\n          \"409\": {\n            \"description\": \"Already existing user\"\n          }\n        }\n      }\n    },\n    \"/auth/login\": {\n      \"post\": {\n        \"tags\": [\"User\"],\n        \"summary\": \"Login an user\",\n        \"requestBody\": {\n          \"description\": \"Login Scheme\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/login\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Ok\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/user-sent\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          },\n          \"403\": {\n            \"description\": \"Incorrect password\"\n          }\n        }\n      }\n    },\n    \"/movies/{movie_id}\": {\n      \"get\": {\n        \"tags\": [\"Movie\"],\n        \"summary\": \"Returns the movie with the given id\",\n        \"parameters\": [\n          {\n            \"name\": \"movie_id\",\n            \"in\": \"path\",\n            \"description\": \"Movie ID from TheMovieDatabase API\",\n            \"required\": true,\n            \"type\": \"integer\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/movie\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Movie not found\"\n          }\n        }\n      }\n    },\n    \"/movies/{movie_id}/{user_id}\": {\n      \"get\": {\n        \"tags\": [\"Movie\"],\n        \"summary\": \"Returns the movie with the given id and for the given user\",\n        \"parameters\": [\n          {\n            \"name\": \"movie_id\",\n            \"in\": \"path\",\n            \"description\": \"Movie ID from TheMovieDatabase API\",\n            \"required\": true,\n            \"type\": \"integer\"\n          },\n          {\n            \"name\": \"user_id\",\n            \"in\": \"path\",\n            \"description\": \"User ID\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"format\": \"uuid\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/movie\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Movie not found\"\n          }\n        }\n      }\n    },\n    \"/movies/popular\": {\n      \"get\": {\n        \"tags\": [\"Movie\"],\n        \"summary\": \"Returns popular movies of the moment\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"schema\": {\n                      \"$ref\": \"#/components/schemas/movie\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Movies not found\"\n          }\n        }\n      }\n    },\n    \"/movies/popular/{user_id}\": {\n      \"get\": {\n        \"tags\": [\"Movie\"],\n        \"summary\": \"Returns popular movies of the moment for the given user\",\n        \"parameters\": [\n          {\n            \"name\": \"user_id\",\n            \"in\": \"path\",\n            \"description\": \"User ID\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"format\": \"uuid\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"schema\": {\n                      \"$ref\": \"#/components/schemas/movie\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Movies not found\"\n          }\n        }\n      }\n    },\n    \"/movies/top\": {\n      \"get\": {\n        \"tags\": [\"Movie\"],\n        \"summary\": \"Returns top rated movies of the moment\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"schema\": {\n                      \"$ref\": \"#/components/schemas/movie\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Movies not found\"\n          }\n        }\n      }\n    },\n    \"/movies/top/{user_id}\": {\n      \"get\": {\n        \"tags\": [\"Movie\"],\n        \"summary\": \"Returns top rated movies of the moment for the given user\",\n        \"parameters\": [\n          {\n            \"name\": \"user_id\",\n            \"in\": \"path\",\n            \"description\": \"User ID\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"format\": \"uuid\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"schema\": {\n                      \"$ref\": \"#/components/schemas/movie\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Movies not found\"\n          }\n        }\n      }\n    },\n    \"/movies/similar/{id}\": {\n      \"get\": {\n        \"tags\": [\"Movie\"],\n        \"summary\": \"Returns similar movies to the one with the given id\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"Movie ID from TheMovieDatabase API\",\n            \"required\": true,\n            \"type\": \"integer\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"schema\": {\n                      \"$ref\": \"#/components/schemas/movie\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Movies not found\"\n          }\n        }\n      }\n    },\n    \"/movies/similar/{movie_id}/{user_id}\": {\n      \"get\": {\n        \"tags\": [\"Movie\"],\n        \"summary\": \"Returns similar movies to the one with the given id for the given user\",\n        \"parameters\": [\n          {\n            \"name\": \"movie_id\",\n            \"in\": \"path\",\n            \"description\": \"Movie ID from TheMovieDatabase API\",\n            \"required\": true,\n            \"type\": \"integer\"\n          },\n          {\n            \"name\": \"user_id\",\n            \"in\": \"path\",\n            \"description\": \"User ID\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"format\": \"uuid\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"schema\": {\n                      \"$ref\": \"#/components/schemas/movie\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Movies not found\"\n          }\n        }\n      }\n    },\n    \"/movies/following/{user_id}\": {\n      \"get\": {\n        \"tags\": [\"Movie\"],\n        \"summary\": \"Returns the followed movies by the user of the given id\",\n        \"parameters\": [\n          {\n            \"name\": \"user_id\",\n            \"in\": \"path\",\n            \"description\": \"User ID\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"format\": \"uuid\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"schema\": {\n                      \"$ref\": \"#/components/schemas/movie\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Movies not found\"\n          }\n        }\n      }\n    },\n    \"/movies/watched/{user_id}\": {\n      \"get\": {\n        \"tags\": [\"Movie\"],\n        \"summary\": \"Returns the watched movies by the user of the given id\",\n        \"parameters\": [\n          {\n            \"name\": \"user_id\",\n            \"in\": \"path\",\n            \"description\": \"User ID\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"format\": \"uuid\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"schema\": {\n                      \"$ref\": \"#/components/schemas/movie\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Movies not found\"\n          }\n        }\n      }\n    },\n    \"/movies/search\": {\n      \"post\": {\n        \"tags\": [\"Movie\"],\n        \"summary\": \"Searches for a movie by the name\",\n        \"requestBody\": {\n          \"description\": \"Movie Name and user\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/search\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Ok\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/movie\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad syntax\"\n          },\n          \"404\": {\n            \"description\": \"Movies not found\"\n          }\n        }\n      }\n    },\n    \"/movies/follow\": {\n      \"post\": {\n        \"tags\": [\"Movie\"],\n        \"summary\": \"Follows a movie\",\n        \"requestBody\": {\n          \"description\": \"Movie Id and user Id\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/movie-user\"\n              }\n            }\n          }\n        },\n        \"produces\": [\"application/json\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\"\n          }\n        }\n      }\n    },\n    \"/movies/unfollow\": {\n      \"post\": {\n        \"tags\": [\"Movie\"],\n        \"summary\": \"Unfollows a movie\",\n        \"requestBody\": {\n          \"description\": \"Movie Id and user Id\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/movie-user\"\n              }\n            }\n          }\n        },\n        \"produces\": [\"application/json\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\"\n          }\n        }\n      }\n    },\n    \"/movies/watch\": {\n      \"post\": {\n        \"tags\": [\"Movie\"],\n        \"summary\": \"Watchs a movie\",\n        \"requestBody\": {\n          \"description\": \"Movie id and user Id\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/movie-user\"\n              }\n            }\n          }\n        },\n        \"produces\": [\"application/json\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\"\n          }\n        }\n      }\n    },\n    \"/movies/unwatch\": {\n      \"post\": {\n        \"tags\": [\"Movie\"],\n        \"summary\": \"Unwatchs a movie\",\n        \"requestBody\": {\n          \"description\": \"Movie id and user Id\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/movie-user\"\n              }\n            }\n          }\n        },\n        \"produces\": [\"application/json\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"login\": {\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"format\": \"password\"\n          }\n        }\n      },\n      \"user-sent\": {\n        \"properties\": {\n          \"user_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\"\n          },\n          \"username\": {\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"format\": \"password\"\n          },\n          \"first_name\": {\n            \"type\": \"string\"\n          },\n          \"last_name\": {\n            \"type\": \"string\"\n          },\n          \"profile_picture\": {\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"country\": {\n            \"type\": \"string\"\n          },\n          \"city\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"user-received\": {\n        \"properties\": {\n          \"user_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\"\n          },\n          \"username\": {\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"format\": \"password\"\n          },\n          \"first_name\": {\n            \"type\": \"string\"\n          },\n          \"last_name\": {\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"country\": {\n            \"type\": \"string\"\n          },\n          \"city\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"movie-list\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"$ref\": \"#/components/schemas/movie\"\n        }\n      },\n      \"movie\": {\n        \"properties\": {\n          \"movie_id\": {\n            \"type\": \"integer\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"poster_url\": {\n            \"type\": \"string\"\n          },\n          \"rating\": {\n            \"type\": \"number\",\n            \"format\": \"float\"\n          },\n          \"genres\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"overview\": {\n            \"type\": \"string\"\n          },\n          \"following\": {\n            \"type\": \"boolean\"\n          },\n          \"watched\": {\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"search\": {\n        \"properties\": {\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"user_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\"\n          }\n        }\n      },\n      \"movie-user\": {\n        \"properties\": {\n          \"user_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\"\n          },\n          \"movie_id\": {\n            \"type\": \"integer\"\n          }\n        }\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/Need2Watch/N2W_Back@76cff8e3cc78eed84f29eee051ee96406dbef125/-/blob/static/swagger.json",
			"externalURLs": [
				{
					"url": "https://github.com/Need2Watch/N2W_Back/blob/76cff8e3cc78eed84f29eee051ee96406dbef125/static/swagger.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /users/{user_id}: put: parameters: parse parameter \"user_id\": parameter MUST contain either a schema property, or a content property"
}