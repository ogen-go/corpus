{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi/keap/openapi.yml",
			"byteSize": 281414,
			"content": "openapi: 3.0.1\ninfo:\n  title: Keap REST API\n  description: |\n    This is a generated connector for [Keap API v1.70.0.453309-hf-202203291431](https://developer.infusionsoft.com/docs/rest/) OpenAPI specification.\n    Keap is an all-in-one CRM, sales and marketing automation software that helps organize leads, land the job, get paid, and keep growing.\n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials. \n  \n    Create a [Keap account](https://developer.keap.com) and obtain tokens by following [this guide](https://developer.infusionsoft.com/developer-guide).\n  x-ballerina-display:\n    label: Keap\n    iconPath: \"icon.png\"\n  termsOfService: https://keap.com/legal\n  contact:\n    name: Keap\n    url: https://developer.keap.com/get-support/\n  version: 1.70.0.453309-hf-202203291431\nservers:\n- url: https://api.infusionsoft.com/crm/rest/\ntags:\n- name: Product\n  description: Products-Endpoint\n- name: User Info\n  description: UserInfo-Endpoint\n- name: Appointment\n  description: Appointments-Endpoint\n- name: Locale\n  description: Locale-Endpoint\n- name: REST Hooks\n  description: Rest-Hook-Endpoint\n- name: Account Info\n  description: Account Info-Endpoint\n- name: Campaign\n  description: Campaigns-Endpoint\n- name: Tags\n  description: Tag-Company-Endpoint\n- name: Setting\n  description: Setting-Endpoint\n- name: File\n  description: File-Endpoint\n- name: Note\n  description: Notes-Endpoint\n- name: Contact\n  description: Contacts-Endpoint\n- name: Email\n  description: Emails-Endpoint\n- name: Affiliate\n  description: Affiliates-Endpoint\n- name: Merchant\n  description: Merchant-Endpoint\n- name: Task\n  description: Tasks-Endpoint\n- name: Company\n  description: Companies-Endpoint\n- name: Users\n  description: Users-Endpoint\n- name: Email Address\n  description: Email-Addresses-Endpoint\n- name: E-Commerce\n  description: E-Commerce-Endpoint\n- name: Opportunity\n  description: Opportunities-Endpoint\npaths:\n  /account/profile:\n    get:\n      tags:\n      - Account Info\n      summary: Retrieve account profile\n      description: Retrieves profile/company info for an account.\n      operationId: getAccountProfile\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccountProfile'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    put:\n      tags:\n      - Account Info\n      summary: Updates an account profile\n      description: Updates profile/company info for an account.\n      operationId: updateAccountInfo\n      requestBody:\n        description: accountInfo\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AccountProfile'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccountProfile'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: accountInfo\n  /affiliates:\n    get:\n      tags:\n      - Affiliate\n      summary: List Affiliates\n      description: Retrieves a list of all affiliates\n      operationId: listAffiliates\n      parameters:\n      - name: name\n        in: query\n        description: Optional affiliate name to query on\n        schema:\n          type: string\n      - name: code\n        in: query\n        description: Optional affiliate parent ID to query on\n        schema:\n          type: string\n      - name: parent_id\n        in: query\n        description: Optional affiliate code to query on\n        schema:\n          type: string\n      - name: contact_id\n        in: query\n        description: Optional contact ID to query on\n        schema:\n          type: string\n      - name: program_id\n        in: query\n        description: Optional affiliate program ID to query on\n        schema:\n          type: string\n      - name: status\n        in: query\n        description: Optional affiliate status to query on\n        schema:\n          type: string\n          enum:\n          - active\n          - inactive\n      - name: order\n        in: query\n        description: Attribute to order items by\n        schema:\n          type: string\n          enum:\n          - id\n          - name\n      - name: order_direction\n        in: query\n        description: How to order the data i.e. ascending (A-Z) or descending (Z-A)\n        schema:\n          type: string\n          enum:\n          - ASCENDING\n          - DESCENDING\n      - name: offset\n        in: query\n        description: Count to offset the returned results by\n        schema:\n          type: integer\n          format: int32\n      - name: limit\n        in: query\n        description: Sets a beginning range of items to return\n        schema:\n          type: integer\n          format: int32\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AffiliateList'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      tags:\n      - Affiliate\n      summary: Create an affiliate\n      description: Create a single affiliate\n      operationId: createAffiliate\n      requestBody:\n        description: affiliate\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateAffiliate'\n        required: false\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Affiliate'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: affiliate\n  /affiliates/commissions:\n    get:\n      tags:\n      - Affiliate\n      summary: List Commissions\n      description: Retrieve a list of Commissions based on Affiliate or Date Range\n      operationId: listCommissions\n      parameters:\n      - name: since\n        in: query\n        description: Date to start searching from ex. `2017-01-01T22:17:59.039Z`\n        schema:\n          type: string\n      - name: until\n        in: query\n        description: Date to search to ex. `2017-01-01T22:17:59.039Z`\n        schema:\n          type: string\n      - name: order\n        in: query\n        description: Attribute to order items by\n        schema:\n          type: string\n          enum:\n          - DATE_EARNED\n      - name: order_direction\n        in: query\n        description: How to order the data i.e. ascending (A-Z) or descending (Z-A)\n        schema:\n          type: string\n          enum:\n          - ASCENDING\n          - DESCENDING\n      - name: limit\n        in: query\n        description: Sets a total of items to return\n        schema:\n          type: integer\n          format: int32\n      - name: offset\n        in: query\n        description: Sets a beginning range of items to return\n        schema:\n          type: integer\n          format: int32\n      - name: affiliateId\n        in: query\n        description: Affiliate to retrieve commissions for\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AffiliateCommissionList'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /affiliates/model:\n    get:\n      tags:\n      - Affiliate\n      summary: Retrieve Affiliate Model\n      description: Get the custom fields for the Affiliate object\n      operationId: retrieveAffiliateModel\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ObjectModel'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /affiliates/programs:\n    get:\n      tags:\n      - Affiliate\n      summary: List Commission Programs\n      description: Retrieve a list of Commission Programs\n      operationId: listPrograms\n      parameters:\n      - name: affiliate_id\n        in: query\n        description: Id of the affiliate you would like programs for\n        schema:\n          type: integer\n          format: int64\n      - name: order\n        in: query\n        description: Attribute to order items by\n        schema:\n          type: string\n          enum:\n          - id\n          - name\n          - priority\n      - name: order_direction\n        in: query\n        description: How to order the data i.e. ascending (A-Z) or descending (Z-A)\n        schema:\n          type: string\n          enum:\n          - ASCENDING\n          - DESCENDING\n      - name: offset\n        in: query\n        description: Count to offset the returned results by\n        schema:\n          type: integer\n          format: int32\n      - name: limit\n        in: query\n        description: Sets a beginning range of items to return\n        schema:\n          type: integer\n          format: int32\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AffiliateProgramList'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /affiliates/redirectlinks:\n    get:\n      tags:\n      - Affiliate\n      summary: List Affiliate Redirects\n      description: Retrieves a list of all affiliate redirects\n      operationId: listAffiliateRedirectLinks\n      parameters:\n      - name: affiliate_id\n        in: query\n        description: Affiliate ID to search by\n        schema:\n          type: string\n      - name: order\n        in: query\n        description: Attribute to order items by\n        schema:\n          type: string\n          enum:\n          - id\n          - name\n      - name: order_direction\n        in: query\n        description: How to order the data i.e. ascending (A-Z) or descending (Z-A)\n        schema:\n          type: string\n          enum:\n          - ASCENDING\n          - DESCENDING\n      - name: offset\n        in: query\n        description: Count to offset the returned results by\n        schema:\n          type: integer\n          format: int32\n      - name: limit\n        in: query\n        description: Sets a beginning range of items to return\n        schema:\n          type: integer\n          format: int32\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RedirectList'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /affiliates/summaries:\n    get:\n      tags:\n      - Affiliate\n      summary: List affiliate summaries\n      description: Retrieve a list of affiliate summaries\n      operationId: listSummaries\n      parameters:\n      - name: affiliate_ids\n        in: query\n        description: Ids of the affiliates you would like a summary for\n        style: form\n        explode: true\n        schema:\n          type: array\n          items:\n            type: integer\n            format: int64\n      - name: order\n        in: query\n        description: Attribute to order items by\n        schema:\n          type: string\n          enum:\n          - affiliate_id\n          - amount_earned\n          - balance\n          - clawbacks\n      - name: order_direction\n        in: query\n        description: How to order the data i.e. ascending (A-Z) or descending (Z-A)\n        schema:\n          type: string\n          enum:\n          - ASCENDING\n          - DESCENDING\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AffiliateSummaryList'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /affiliates/{affiliateId}/clawbacks:\n    get:\n      tags:\n      - Affiliate\n      summary: List Affiliate clawbacks\n      description: Retrieves a list of all affiliate clawbacks\n      operationId: listAffiliateClawbacks\n      parameters:\n      - name: affiliateId\n        in: path\n        description: affiliateId\n        required: true\n        schema:\n          type: string\n      - name: since\n        in: query\n        description: Optional inclusive start date\n        schema:\n          type: string\n      - name: until\n        in: query\n        description: Optional inclusive end date\n        schema:\n          type: string\n      - name: order\n        in: query\n        description: Attribute to order items by\n        schema:\n          type: string\n          enum:\n          - DATE_EARNED\n      - name: order_direction\n        in: query\n        description: How to order the data i.e. ascending (A-Z) or descending (Z-A)\n        schema:\n          type: string\n          enum:\n          - ASCENDING\n          - DESCENDING\n      - name: offset\n        in: query\n        description: Count to offset the returned results by\n        schema:\n          type: integer\n          format: int32\n      - name: limit\n        in: query\n        description: Sets a beginning range of items to return\n        schema:\n          type: integer\n          format: int32\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AffiliateClawbackList'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /affiliates/{id}:\n    get:\n      tags:\n      - Affiliate\n      summary: Retrieve an affiliate\n      description: Retrieve a single affiliate\n      operationId: getAffiliate\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Affiliate'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /appointments:\n    get:\n      tags:\n      - Appointment\n      summary: List Appointments\n      description: Retrieves all appointments for the authenticated user\n      operationId: listAppointments\n      parameters:\n      - name: since\n        in: query\n        description: Date to start searching from ex. `2017-01-01T22:17:59.039Z`\n        schema:\n          type: string\n      - name: until\n        in: query\n        description: Date to search to ex. `2017-01-01T22:17:59.039Z`\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Sets a total of items to return\n        schema:\n          type: integer\n          format: int32\n      - name: offset\n        in: query\n        description: Sets a beginning range of items to return\n        schema:\n          type: integer\n          format: int32\n      - name: contact_id\n        in: query\n        description: Optionally find appointments with a contact\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppointmentList'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      tags:\n      - Appointment\n      summary: Create an Appointment\n      description: Creates a new appointment as the authenticated user\n      operationId: createAppointment\n      requestBody:\n        description: appointment\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Appointment'\n        required: true\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Appointment'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: appointment\n  /appointments/model:\n    get:\n      tags:\n      - Appointment\n      summary: Retrieve Appointment Model\n      description: Get the custom fields for the Appointment object\n      operationId: retrieveAppointmentModel\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ObjectModel'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /appointments/model/customFields:\n    post:\n      tags:\n      - Appointment\n      summary: Create a Custom Field\n      description: Adds a custom field of the specified type and options to the Appointment\n        object.\n      operationId: createAppointmentCustomField\n      requestBody:\n        description: customField\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateRestCustomField'\n        required: true\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomFieldMetaData'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: customField\n  /appointments/{appointmentId}:\n    get:\n      tags:\n      - Appointment\n      summary: Retrieve an Appointment\n      description: Retrieves a specific appointment with respect to user permissions.\n        The authenticated user will need the \"can view all records\" permission for\n        Task/Appt/Notes\n      operationId: getAppointment\n      parameters:\n      - name: appointmentId\n        in: path\n        description: appointmentId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Appointment'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    put:\n      tags:\n      - Appointment\n      summary: Replace an Appointment\n      description: Replaces all values of a given appointment\n      operationId: updateAppointment\n      parameters:\n      - name: appointmentId\n        in: path\n        description: appointmentId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: appointmentDTO\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Appointment'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Appointment'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: appointmentDTO\n    delete:\n      tags:\n      - Appointment\n      summary: Delete an Appointment\n      description: Deletes the specified appointment\n      operationId: deleteAppointment\n      parameters:\n      - name: appointmentId\n        in: path\n        description: appointmentId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    patch:\n      tags:\n      - Appointment\n      summary: Update an Appointment\n      description: Updates the provided values of a given appointment\n      operationId: updatePropertiesOnAppointment\n      parameters:\n      - name: appointmentId\n        in: path\n        description: appointmentId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: appointmentDTO\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Appointment'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Appointment'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: appointmentDTO\n  /campaigns:\n    get:\n      tags:\n      - Campaign\n      summary: List Campaigns\n      description: Retrieves all campaigns for the authenticated user\n      operationId: listCampaigns\n      parameters:\n      - name: limit\n        in: query\n        description: Sets a total of items to return\n        schema:\n          type: integer\n          format: int32\n      - name: offset\n        in: query\n        description: Sets a beginning range of items to return\n        schema:\n          type: integer\n          format: int32\n      - name: search_text\n        in: query\n        description: Optional text to search\n        schema:\n          type: string\n      - name: order\n        in: query\n        description: Attribute to order items by\n        schema:\n          type: string\n          enum:\n          - name\n          - published_date\n          - id\n          - completed_contact_count\n          - active_contact_count\n          - date_created\n      - name: order_direction\n        in: query\n        description: How to order the data i.e. ascending (A-Z) or descending (Z-A)\n        schema:\n          type: string\n          enum:\n          - ascending\n          - descending\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CampaignList'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /campaigns/goals/{integration}/{callName}:\n    post:\n      tags:\n      - Campaign\n      summary: Achieve API Goal\n      description: Achieves API goal for campaigns with matching integration, callName\n        for a given contactId\n      operationId: createAchieveApiGoalEvent\n      parameters:\n      - name: integration\n        in: path\n        description: integration\n        required: true\n        schema:\n          type: string\n      - name: callName\n        in: path\n        description: callName\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: goalEvent\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AchieveApiGoalEvent'\n        required: true\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GoalEventResultDTO'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: goalEvent\n  /campaigns/{campaignId}:\n    get:\n      tags:\n      - Campaign\n      summary: Retrieve a Campaign\n      description: Retrieves a single campaign\n      operationId: getCampaign\n      parameters:\n      - name: campaignId\n        in: path\n        description: campaignId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: optional_properties\n        in: query\n        description: Comma-delimited list of Campaign properties to include in the\n          response. (The fields `goals` and `sequences` aren't included, by default.)\n        style: form\n        explode: true\n        schema:\n          type: array\n          items:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Campaign'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /campaigns/{campaignId}/sequences/{sequenceId}/contacts:\n    post:\n      tags:\n      - Campaign\n      summary: Add Multiple to Campaign Sequence\n      description: Adds a list of contacts to a campaign sequence\n      operationId: addContactsToCampaignSequence\n      parameters:\n      - name: campaignId\n        in: path\n        description: campaignId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: sequenceId\n        in: path\n        description: sequenceId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: ids\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SetOfIds'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties:\n                  type: string\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: ids\n    # delete:\n    #   tags:\n    #   - Campaign\n    #   summary: Remove Multiple from Campaign Sequence\n    #   description: Removes a list of contacts from a campaign sequence\n    #   operationId: removeContactsFromCampaignSequenceUsingDELETE_1\n    #   parameters:\n    #   - name: campaignId\n    #     in: path\n    #     description: campaignId\n    #     required: true\n    #     schema:\n    #       type: integer\n    #       format: int64\n    #   - name: sequenceId\n    #     in: path\n    #     description: sequenceId\n    #     required: true\n    #     schema:\n    #       type: integer\n    #       format: int64\n    #   requestBody:\n    #     description: ids\n    #     content:\n    #       application/json:\n    #         schema:\n    #           $ref: '#/components/schemas/SetOfIds'\n    #     required: true\n    #   responses:\n    #     204:\n    #       description: No Content\n    #       content: {}\n    #     401:\n    #       description: Unauthorized\n    #       content:\n    #         application/json:\n    #           schema:\n    #             $ref: '#/components/schemas/Error'\n    #     403:\n    #       description: Forbidden\n    #       content:\n    #         application/json:\n    #           schema:\n    #             $ref: '#/components/schemas/Error'\n    #     404:\n    #       description: Not Found\n    #       content:\n    #         application/json:\n    #           schema:\n    #             $ref: '#/components/schemas/Error'\n    #   x-codegen-request-body-name: ids\n  /campaigns/{campaignId}/sequences/{sequenceId}/contacts/{contactId}:\n    post:\n      tags:\n      - Campaign\n      summary: Add to Campaign Sequence\n      description: Adds a single contact to a campaign sequence\n      operationId: addContactToCampaignSequence\n      parameters:\n      - name: campaignId\n        in: path\n        description: campaignId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: sequenceId\n        in: path\n        description: sequenceId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: contactId\n        in: path\n        description: contactId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    delete:\n      tags:\n      - Campaign\n      summary: Remove from Campaign Sequence\n      description: Removes a single contact from a campaign sequence\n      operationId: removeContactFromCampaignSequence\n      parameters:\n      - name: campaignId\n        in: path\n        description: campaignId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: sequenceId\n        in: path\n        description: sequenceId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: contactId\n        in: path\n        description: contactId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /companies:\n    get:\n      tags:\n      - Company\n      summary: List Companies\n      description: Retrieves a list of all companies\n      operationId: listCompanies\n      parameters:\n      - name: limit\n        in: query\n        description: Sets a total of items to return\n        schema:\n          type: integer\n          format: int32\n      - name: offset\n        in: query\n        description: Sets a beginning range of items to return\n        schema:\n          type: integer\n          format: int32\n      - name: company_name\n        in: query\n        description: Optional company name to query on\n        schema:\n          type: string\n      - name: order\n        in: query\n        description: Attribute to order items by\n        schema:\n          type: string\n          enum:\n          - id\n          - date_created\n          - name\n          - email\n      - name: order_direction\n        in: query\n        description: How to order the data i.e. ascending (A-Z) or descending (Z-A)\n        schema:\n          type: string\n          enum:\n          - ascending\n          - descending\n      - name: optional_properties\n        in: query\n        description: Comma-delimited list of Company properties to include in the\n          response. (Fields such as `notes`, `fax_number` and `custom_fields` aren't\n          included, by default.)\n        style: form\n        explode: true\n        schema:\n          type: array\n          items:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CompanyList'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      tags:\n      - Company\n      summary: Create a Company\n      description: |-\n        Creates a new company as the authenticated user. NB: Company must contain at least the company name. The `country_code` is required if `region` is specified.\n\n        You may opt-in or mark a Company as _Marketable_ by including the following field in the request JSON with an opt-in reason. (This field is also shown in the complete request body sample.) The reason you provide here will help with compliance. Example reasons: \"Customer opted-in through webform\", \"Company gave explicit permission.\"\n\n        ```json\n        \"opt_in_reason\": \"your reason for opt-in\"\n        ```\n        Note that the email address status will only be updated to unconfirmed (marketable) for email addresses that are currently in the following states:\n        Unengaged Marketable\n        Unengaged Non-Marketable\n        Non-Marketable\n        Opt-Out: Manual\n        All other existing statuses e.g. List Unsubscribe, Opt-Out System etc will remain non-marketable and in their existing state.\n      operationId: createCompany\n      requestBody:\n        description: company\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateOrPatchCompany'\n        required: false\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Company'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: company\n  /companies/model:\n    get:\n      tags:\n      - Company\n      summary: Retrieve Company Model\n      description: Get the custom fields and optional properties for the Company object\n      operationId: retrieveCompanyModel\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ObjectModel'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /companies/{companyId}:\n    get:\n      tags:\n      - Company\n      summary: Retrieve a Company\n      description: Retrieves a single company\n      operationId: getCompany\n      parameters:\n      - name: companyId\n        in: path\n        description: companyId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: optional_properties\n        in: query\n        description: Comma-delimited list of Company properties to include in the\n          response. (Fields such as `notes`, `fax_number` and `custom_fields` aren't\n          included, by default.)\n        style: form\n        explode: true\n        schema:\n          type: array\n          items:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Company'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    patch:\n      tags:\n      - Company\n      summary: Update a Company\n      description: |-\n        Updates a company with only the values provided in the request.\n\n        You may opt-in or mark a Company as _Marketable_ by including the following field in the request JSON with an opt-in reason. (This field is also shown in the complete request body sample.) The reason you provide here will help with compliance. Example reasons: \"Customer opted-in through webform\", \"Company gave explicit permission.\"\n\n        ```json\n        \"opt_in_reason\": \"your reason for opt-in\"\n        ```\n        Note that the email address status will only be updated to unconfirmed (marketable) for email addresses that are currently in the following states:\n        Unengaged Marketable\n        Unengaged Non-Marketable\n        Non-Marketable\n        Opt-Out: Manual\n        All other existing statuses e.g. List Unsubscribe, Opt-Out System etc will remain non-marketable and in their existing state.\n      operationId: updateCompanies\n      parameters:\n      - name: companyId\n        in: path\n        description: companyId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: company\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateOrPatchCompany'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Company'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: company\n  /company/{companyId}:\n    patch:\n      tags:\n      - Company\n      summary: Update a Company\n      description: |-\n        Updates a company with only the values provided in the request.\n\n        You may opt-in or mark a Company as _Marketable_ by including the following field in the request JSON with an opt-in reason. (This field is also shown in the complete request body sample.) The reason you provide here will help with compliance. Example reasons: \"Customer opted-in through webform\", \"Company gave explicit permission.\"\n\n        ```json\n        \"opt_in_reason\": \"your reason for opt-in\"\n        ```\n        Note that the email address status will only be updated to unconfirmed (marketable) for email addresses that are currently in the following states:\n        Unengaged Marketable\n        Unengaged Non-Marketable\n        Non-Marketable\n        Opt-Out: Manual\n        All other existing statuses e.g. List Unsubscribe, Opt-Out System etc will remain non-marketable and in their existing state.\n      operationId: updateCompany\n      parameters:\n      - name: companyId\n        in: path\n        description: companyId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: company\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateOrPatchCompany'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Company'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: company\n  /contacts:\n    get:\n      tags:\n      - Contact\n      summary: List Contacts\n      description: Retrieves a list of all contacts\n      operationId: listContacts\n      parameters:\n      - name: limit\n        in: query\n        description: Sets a total of items to return\n        schema:\n          type: integer\n          format: int32\n      - name: offset\n        in: query\n        description: Sets a beginning range of items to return\n        schema:\n          type: integer\n          format: int32\n      - name: email\n        in: query\n        description: Optional email address to query on\n        schema:\n          type: string\n      - name: given_name\n        in: query\n        description: Optional first name or forename to query on\n        schema:\n          type: string\n      - name: family_name\n        in: query\n        description: Optional last name or surname to query on\n        schema:\n          type: string\n      - name: order\n        in: query\n        description: Attribute to order items by\n        schema:\n          type: string\n          enum:\n          - id\n          - date_created\n          - name\n          - firstName\n          - email\n      - name: order_direction\n        in: query\n        description: How to order the data i.e. ascending (A-Z) or descending (Z-A)\n        schema:\n          type: string\n          enum:\n          - ascending\n          - descending\n      - name: since\n        in: query\n        description: Date to start searching from on LastUpdated ex. `2017-01-01T22:17:59.039Z`\n        schema:\n          type: string\n      - name: until\n        in: query\n        description: Date to search to on LastUpdated ex. `2017-01-01T22:17:59.039Z`\n        schema:\n          type: string\n      - name: optional_properties\n        in: query\n        description: Comma-delimited list of Contact properties to include in the\n          response. (Some fields such as `lead_source_id`, `custom_fields`, and `job_title`\n          aren't included, by default.)\n        style: form\n        explode: true\n        schema:\n          type: array\n          items:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContactList'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    put:\n      tags:\n      - Contact\n      summary: Create or Update a Contact\n      description: |-\n        Creates a new contact or updates a contact as the authenticated user. NB: New Contacts must contain at least one item in `email_addresses` or `phone_numbers` and `country_code` is required if `region` is specified. Existing Contacts are updated with only the values provided in the request. Accepts a `duplicate_option` which performs duplicate checking by one of the following options: `Email`, `EmailAndName`, if a match is found using the option provided, the existing contact will be updated. If an existing contact was not found using the `duplicate_option` provided, a new contact record will be created.\n\n        You may opt-in or mark a Contact as _Marketable_ by including the following field in the request JSON with an opt-in reason. (This field is also shown in the complete request body sample.) The reason you provide here will help with compliance. Example reasons: \"Customer opted-in through webform\", \"Contact gave explicit permission.\"\n\n        ```json\n        \"opt_in_reason\": \"your reason for opt-in\"\n        ```\n        Note that the email address status will only be updated to unconfirmed (marketable) for email addresses that are currently in the following states:\n        Unengaged Marketable\n        Unengaged Non-Marketable\n        Non-Marketable\n        Opt-Out: Manual\n        All other existing statuses e.g. List Unsubscribe, Opt-Out System etc will remain non-marketable and in their existing state.\n\n        This API only supports a subset of valid timezones. A list of the supported timezones can be found [here](https://developer.infusionsoft.com/faqs/what-timezones-do-contact-calls-accept/).\n      operationId: createOrUpdateContact\n      requestBody:\n        description: contact\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpsertContact'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FullContact'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: contact\n    post:\n      tags:\n      - Contact\n      summary: Create a Contact\n      description: |-\n        Creates a new contact as the authenticated user. NB: Contact must contain at least one item in `email_addresses` or `phone_numbers` and `country_code` is required if `region` is specified.\n\n        Please see the body schema for updates to the postal code field.\n\n        You may opt-in or mark a Contact as _Marketable_ by including the following field in the request JSON with an opt-in reason. (This field is also shown in the complete request body sample.) The reason you provide here will help with compliance. Example reasons: \"Customer opted-in through webform\", \"Contact gave explicit permission.\"\n\n        ```json\n        \"opt_in_reason\": \"your reason for opt-in\"\n        ```\n        Note that the email address status will only be updated to unconfirmed (marketable) for email addresses that are currently in the following states:\n        Unengaged Marketable\n        Unengaged Non-Marketable\n        Non-Marketable\n        Opt-Out: Manual\n        All other existing statuses e.g. List Unsubscribe, Opt-Out System etc will remain non-marketable and in their existing state.\n\n        This API only supports a subset of valid timezones. A list of the supported timezones can be found [here](https://developer.infusionsoft.com/faqs/what-timezones-do-contact-calls-accept/).\n      operationId: createContact\n      requestBody:\n        description: contact\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateOrPatchContact'\n        required: false\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FullContact'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: contact\n  /contacts/model:\n    get:\n      tags:\n      - Contact\n      summary: Retrieve Contact Model\n      description: Get the custom fields and optional properties for the Contact object\n      operationId: retrieveContactModel\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ObjectModel'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /contacts/model/customFields:\n    post:\n      tags:\n      - Contact\n      summary: Create a Custom Field\n      description: Adds a custom field of the specified type and options to the Contact\n        object.\n      operationId: createCustomField\n      requestBody:\n        description: customField\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateRestCustomField'\n        required: true\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomFieldMetaData'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: customField\n  /contacts/{contactId}:\n    delete:\n      tags:\n      - Contact\n      summary: Delete a Contact\n      description: Deletes the specified contact.\n      operationId: deleteContact\n      parameters:\n      - name: contactId\n        in: path\n        description: contactId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    patch:\n      tags:\n      - Contact\n      summary: Update a Contact\n      description: |-\n        Updates a contact with only the values provided in the request.\n\n        You may opt-in or mark a Contact as _Marketable_ by including the following field in the request JSON with an opt-in reason. (This field is also shown in the complete request body sample.) The reason you provide here will help with compliance. Example reasons: \"Customer opted-in through webform\", \"Contact gave explicit permission.\"\n\n        ```json\n        \"opt_in_reason\": \"your reason for opt-in\"\n        ```\n        Note that the email address status will only be updated to unconfirmed (marketable) for email addresses that are currently in the following states:\n        Unengaged Marketable\n        Unengaged Non-Marketable\n        Non-Marketable\n        Opt-Out: Manual\n        All other existing statuses e.g. List Unsubscribe, Opt-Out System etc will remain non-marketable and in their existing state.\n      operationId: updatePropertiesOnContact\n      parameters:\n      - name: contactId\n        in: path\n        description: contactId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: update_mask\n        in: query\n        description: An optional list of properties to be updated. If set, only the\n          provided properties will be updated and others will be skipped.\n        style: form\n        explode: true\n        schema:\n          type: array\n          items:\n            type: string\n          enum:\n          - addresses\n          - anniversary\n          - birthday\n          - company\n          - contact_type\n          - custom_fields\n          - email_addresses\n          - family_name\n          - fax_numbers\n          - given_name\n          - job_title\n          - lead_source_id\n          - middle_name\n          - notes\n          - opt_in_reason\n          - origin\n          - owner_id\n          - phone_numbers\n          - preferred_locale\n          - preferred_name\n          - prefix\n          - social_accounts\n          - source_type\n          - spouse_name\n          - suffix\n          - time_zone\n          - website\n      requestBody:\n        description: contact\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateOrPatchContact'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FullContact'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: contact\n  /contacts/{contactId}/creditCards:\n    get:\n      tags:\n      - Contact\n      summary: Retrieve Credit Cards\n      description: List all Credit Cards on a contact\n      operationId: listCreditCards\n      parameters:\n      - name: contactId\n        in: path\n        description: contactId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ContactCreditCard'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      tags:\n      - Contact\n      summary: Create a Credit Card\n      description: Creates a new credit card associated to a contact\n      operationId: createCreditCard\n      parameters:\n      - name: contactId\n        in: path\n        description: contactId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: creditCard\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreditCard'\n        required: false\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreditCardAdded'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: creditCard\n  /contacts/{contactId}/emails:\n    get:\n      tags:\n      - Contact\n      summary: List Emails\n      description: List Emails that have been sent to a Contact\n      operationId: listEmailsForContact\n      parameters:\n      - name: contactId\n        in: path\n        description: contactId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: limit\n        in: query\n        description: Sets a total of items to return\n        schema:\n          type: integer\n          format: int32\n      - name: offset\n        in: query\n        description: Sets a beginning range of items to return\n        schema:\n          type: integer\n          format: int32\n      - name: email\n        in: query\n        description: Optional email address to query on\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmailSentQueryResultList'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      tags:\n      - Contact\n      summary: Create an Email Record\n      description: Create a record of an email sent to a contact\n      operationId: createEmailForContact\n      parameters:\n      - name: contactId\n        in: path\n        description: contactId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: Email records to persist, with content.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EmailSentCreate'\n        required: false\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmailSentCreate'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: emailWithContent\n  /contacts/{contactId}/tags:\n    get:\n      tags:\n      - Contact\n      summary: List Applied Tags\n      description: Retrieves a list of tags applied to a given contact\n      operationId: listAppliedTags\n      parameters:\n      - name: contactId\n        in: path\n        description: contactId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: limit\n        in: query\n        description: Sets a total of items to return\n        schema:\n          type: integer\n          format: int32\n      - name: offset\n        in: query\n        description: Sets a beginning range of items to return\n        schema:\n          type: integer\n          format: int32\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContactTagList'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      tags:\n      - Contact\n      summary: Apply Tags\n      description: Apply a list of tags to a given contact record\n      operationId: applyTagsToContactId\n      parameters:\n      - name: contactId\n        in: path\n        description: contactId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: tagIds\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TagId'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/EntryLongString'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: tagIds\n    delete:\n      tags:\n      - Contact\n      summary: Remove Applied Tags\n      description: Removes a list of tags from the given contact. Provide one or more\n        tag ids in the querystring as a comma-separated URIencoded list (%2C is a\n        comma). E.g. DELETE /contacts/{contact_id}/tags?ids=1%2C2%2C3\n      operationId: removeAppliedTagsFromContact\n      parameters:\n      - name: contactId\n        in: path\n        description: contactId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: ids\n        in: query\n        description: ids\n        required: true\n        schema:\n          type: string\n      responses:\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /contacts/{contactId}/tags/{tagId}:\n    delete:\n      tags:\n      - Contact\n      summary: Remove Applied Tag\n      description: Removes a tag from the given contact\n      operationId: removeTagsFromContact\n      parameters:\n      - name: contactId\n        in: path\n        description: contactId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: tagId\n        in: path\n        description: tagId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /emailAddresses/{email}:\n    put:\n      tags:\n      - Email Address\n      summary: Replace an Email Address\n      description: |-\n        Replaces all of the values of a given email address\n\n        You may opt-in or mark an email address as _Marketable_ by including the following field in the request JSON with an opt-in reason. (This field is also shown in the complete request body sample.) The reason you provide here will help with compliance. Example reasons: \"Customer opted-in through webform\", \"Company gave explicit permission.\"\n\n        ```json\n        \"opt_in_reason\": \"your reason for opt-in\"\n        ```\n        Note that the email address status will only be updated to unconfirmed (marketable) for email addresses that are currently in the following states:\n        Unengaged Marketable\n        Unengaged Non-Marketable\n        Non-Marketable\n        Opt-Out: Manual\n        All other existing statuses e.g. List Unsubscribe, Opt-Out System etc will remain non-marketable and in their existing state.\n      operationId: replaceEmailAddress\n      parameters:\n      - name: email\n        in: path\n        description: email\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: update\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateEmailAddress'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestEmailAddress'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: update\n  /emails:\n    get:\n      tags:\n      - Email\n      summary: List Emails\n      description: |-\n        Retrieve a list of emails that have been sent\n\n        Keap is currently investigating an issue with degraded performance\n        of this endpoint with very large (millions of records) record sets\n      operationId: listEmails\n      parameters:\n      - name: limit\n        in: query\n        description: Sets a total of items to return\n        schema:\n          type: integer\n          format: int32\n      - name: offset\n        in: query\n        description: Sets a beginning range of items to return\n        schema:\n          type: integer\n          format: int32\n      - name: contact_id\n        in: query\n        description: Optional Contact Id to find Emails for\n        schema:\n          type: integer\n          format: int64\n      - name: email\n        in: query\n        description: Optional email address to query on\n        schema:\n          type: string\n      - name: since_sent_date\n        in: query\n        description: Optional date to query on, emails sent since the provided date,\n          must be present if untilDate is provided\n        schema:\n          type: string\n      - name: until_sent_date\n        in: query\n        description: Optional date to query on, email sent until the provided date\n        schema:\n          type: string\n      - name: ordered\n        in: query\n        description: Optional boolean to turn off ORDER BY in SQL query\n        schema:\n          type: boolean\n          default: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmailSentQueryResultList'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      tags:\n      - Email\n      summary: Create an Email Record\n      description: Create a record of an email sent to a contact\n      operationId: createEmail\n      requestBody:\n        description: Email records to persist, with content.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EmailSentCreate'\n        required: false\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmailSentCreate'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: emailWithContent\n  /emails/queue:\n    post:\n      tags:\n      - Email\n      summary: Send an Email\n      description: Send an Email to a list of Contacts\n      operationId: sendEmail\n      requestBody:\n        description: emailSendRequest\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EmailSendRequest'\n        required: false\n      responses:\n        202:\n          description: Accepted\n          content: {}\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: emailSendRequest\n  /emails/sync:\n    post:\n      tags:\n      - Email\n      summary: Create a set of Email Records\n      description: Create a set of records of emails sent to contacts, maximum 1000\n        per transaction.\n      operationId: createEmails\n      requestBody:\n        description: Email records to persist, with content.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EmailSentCreateList'\n        required: false\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmailSentCreateList'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: emailWithContent\n  /emails/unsync:\n    post:\n      tags:\n      - Email\n      summary: Un-sync a batch of Email Records\n      description: Un-syncs a batch of email records\n      operationId: deleteEmails\n      requestBody:\n        description: emailIds\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SetOfIds'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties:\n                  type: string\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: emailIds\n  /emails/{id}:\n    get:\n      tags:\n      - Email\n      summary: Retrieve an Email\n      description: Retrieves a single email that has been sent\n      operationId: getEmail\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmailSentQueryResultWithContent'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    put:\n      tags:\n      - Email\n      summary: Update an Email Record\n      description: Update a record of an email sent to a contact\n      operationId: updateEmail\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: Email records to persist, with content.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EmailSentCreate'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmailSentCreate'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      deprecated: true\n      x-codegen-request-body-name: emailWithContent\n    delete:\n      tags:\n      - Email\n      summary: Delete an Email Record\n      description: Delete a specific email record\n      operationId: deleteEmail\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /files:\n    get:\n      tags:\n      - File\n      summary: List Files\n      description: Retrieves a list of all files\n      operationId: listFiles\n      parameters:\n      - name: limit\n        in: query\n        description: Sets a total of items to return\n        schema:\n          type: integer\n          format: int32\n      - name: offset\n        in: query\n        description: Sets a beginning range of items to return\n        schema:\n          type: integer\n          format: int32\n      - name: viewable\n        in: query\n        description: Include public or private files in response (PUBLIC or PRIVATE),\n          defaults to BOTH.\n        schema:\n          type: string\n          enum:\n          - PUBLIC\n          - PRIVATE\n          - BOTH\n      - name: permission\n        in: query\n        description: Filter based on the permission of files (USER or COMPANY), defaults\n          to BOTH.\n        schema:\n          type: string\n          enum:\n          - USER\n          - COMPANY\n          - BOTH\n      - name: type\n        in: query\n        description: Filter based on the type of file.\n        schema:\n          type: string\n          enum:\n          - Application\n          - Image\n          - Fax\n          - Attachment\n          - Ticket\n          - Contact\n          - DigitalProduct\n          - Import\n          - Hidden\n          - WebForm\n          - StyledCart\n          - ReSampledImage\n          - TemplateThumbnail\n          - Funnel\n          - LogoThumbnail\n      - name: name\n        in: query\n        description: Filter files based on name, with '*' preceding or following to\n          indicate LIKE queries.\n        schema:\n          type: string\n      - name: contact_id\n        in: query\n        description: Filter based on Contact Id, if user has permission to see Contact\n          files.\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileList'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      tags:\n      - File\n      summary: Upload File\n      description: Upload a base64 encoded file. `contact_id` is required only when\n        `file_association` is `CONTACT`.\n      operationId: createFile\n      requestBody:\n        description: fileUpload\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FileUpload'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileInformation'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: fileUpload\n  /files/{fileId}:\n    get:\n      tags:\n      - File\n      summary: Retrieve File\n      description: Retrieves metadata about a specific file. Optionally returns the\n        base64 encoded file data.\n      operationId: getFile\n      parameters:\n      - name: fileId\n        in: path\n        description: fileId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: optional_properties\n        in: query\n        description: Comma-delimited list of File properties to include in the response.\n          (Some fields such as `file_data` aren't included, by default.)\n        style: form\n        explode: true\n        schema:\n          type: array\n          items:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileInformation'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    put:\n      tags:\n      - File\n      summary: Replace File\n      description: Upload a base64 encoded file to replace an existing one. `contact_id`\n        is required only when `file_association` is `CONTACT`.\n      operationId: updateFile\n      parameters:\n      - name: fileId\n        in: path\n        description: fileId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: fileUpload\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FileUpload'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileInformation'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: fileUpload\n    delete:\n      tags:\n      - File\n      summary: Delete File\n      description: Deletes the specified file\n      operationId: deleteFile\n      parameters:\n      - name: fileId\n        in: path\n        description: fileId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /hooks:\n    get:\n      tags:\n      - REST Hooks\n      summary: List Stored Hook Subscriptions\n      description: Lists your hook subscriptions.\n      operationId: list_stored_hook_subscriptions\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/RestHook'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      tags:\n      - REST Hooks\n      summary: Create a Hook Subscription\n      description: |-\n        To receive hooks, you'll first need to subscribe to events one at a time *and* individually verify each subscription.\n\n        This operation is used to create hook subscriptions. During this process, Infusionsoft will attempt to verify your subscription. Continue reading to learn how that works.\n\n        To verify or reactivate a hook subscription, Infusionsoft will make a `POST` request with a temporary secret to the `hookUrl` you provided during creation. The secret is passed as the value of a header named `X-Hook-Secret`. Your response to that `POST` *must* have a status code of `200` and return the same `X-Hook-Secret` header and value pair. Once you've done that, you'll begin receiving hooks. Don't worry if verification fails; you can always [request another verification attempt](#!/REST_Hooks/verify_a_hook_subscription).\n\n        NB: You will not receive events until the subscription is verified.\n\n        If the verification process seems confusing, head over to [RESTHooks.org](http://resthooks.org/docs/security/) for more on the concept.\n      operationId: create_a_hook_subscription\n      requestBody:\n        description: restHookRequest\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RestHookRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestHook'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: restHookRequest\n  /hooks/event_keys:\n    get:\n      tags:\n      - REST Hooks\n      summary: List Hook Event Types\n      description: |-\n        ### _What are REST Hooks?_\n\n        _REST Hooks itself is not a specification, it is a collection of patterns that treat webhooks like subscriptions. These subscriptions are manipulated via a REST API just like any other resource._\n\n        _With most modern REST APIs, polling is the only way to detect changes. But it doesn't have to be. On average, 98.5% of polls are wasted. There is a better way. REST Hooks enable real-time communication and eliminate polling._ -- [RESTHooks.org](http://RESTHooks.org)\n\n        Infusionsoft offers a growing set of REST Hooks to keep you notified of changes in your data. To get started, use [List Hook Event Types](#!/REST_Hooks/list_hook_event_types) to discover event types. Event types are identified using _noun.verb dot syntax_, e.g.: `contact.add` or `invoice.delete`.\n\n        After you’ve read this documentation, you might be interested in the [REST Hook Event and Retry policies](https://developer.infusionsoft.com/rest-hook-documentation/).\n\n        NB: REST Hooks are **not** triggered by legacy action sets.\n\n        Once you've chosen the events you're interested in, subscribe to them via [Create a Hook Subscription](#!/REST_Hooks/create_a_hook_subscription).\n      operationId: list_hook_event_types\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /hooks/{key}:\n    get:\n      tags:\n      - REST Hooks\n      summary: Retrieve a Hook Subscription\n      description: |-\n        Retrieves an existing hook subscription and its status.\n\n        If your hook subscription becomes inactive, you may request an activation attempt via [Verify a Hook Subscription](#!/REST_Hooks/verify_a_hook_subscription).\n      operationId: retrieve_a_hook_subscription\n      parameters:\n      - name: key\n        in: path\n        description: key\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestHook'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    put:\n      tags:\n      - REST Hooks\n      summary: Update a Hook Subscription\n      description: Modify an existing hook subscription using the provided values.\n      operationId: update_a_hook_subscription\n      parameters:\n      - name: key\n        in: path\n        description: key\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: restHookRequest\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RestHookRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestHook'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: restHookRequest\n    delete:\n      tags:\n      - REST Hooks\n      summary: Delete a Hook Subscription\n      description: Stop receiving hooks by deleting an existing hook subscription.\n      operationId: delete_a_hook_subscription\n      parameters:\n      - name: key\n        in: path\n        description: key\n        required: true\n        schema:\n          type: string\n      responses:\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /hooks/{key}/delayedVerify:\n    post:\n      tags:\n      - REST Hooks\n      summary: Verify a Hook Subscription, Delayed\n      description: |-\n        This operation is used to verify or reactivate a hook subscription out-of-band using RESTHooks.org's [Delayed Confirmation](http://resthooks.org/docs/security/) pattern.\n\n        Use this verification method if you're not able to use the Immediate Confirmation provided through [Create a Hook Subscription](#!/REST_Hooks/create_a_hook_subscription) or [Verify a Hook Subscription](#!/REST_Hooks/verify_a_hook_subscription). This operation allows you to confirm a subscription by manually sending us the `X-Hook-Secret` you received.\n\n        NB: **The `X-Hook-Secret` _must_ be passed as a _header_.**\n\n        Don't worry if verification fails; you can always [request another verification attempt](#!/REST_Hooks/verify_a_hook_subscription).\n\n        NB: You will not receive events until the subscription is verified.\n\n        If the verification process seems confusing, head over to [RESTHooks.org](http://resthooks.org/docs/security/) for more on the concept.\n      operationId: verify_a_hook_subscription_delayed\n      parameters:\n      - name: key\n        in: path\n        description: key\n        required: true\n        schema:\n          type: string\n      - name: X-Hook-Secret\n        in: header\n        description: X-Hook-Secret\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestHook'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /hooks/{key}/verify:\n    post:\n      tags:\n      - REST Hooks\n      summary: Verify a Hook Subscription\n      description: |-\n        This operation is used to verify or reactivate a hook subscription using RESTHooks.org's [Immediate Confirmation](http://resthooks.org/docs/security/) pattern.\n\n        To verify or reactivate a hook subscription, Infusionsoft will make a `POST` request with a temporary secret to the `hookUrl` you provided during creation. The secret is passed as the value of a header named `X-Hook-Secret`. Your response to that `POST` *must* have a status code of `200` and return the same `X-Hook-Secret` header and value pair. Once you've done that, you'll begin receiving hooks. Don't worry if verification fails; you can always [request another verification attempt](#!/REST_Hooks/verify_a_hook_subscription).\n\n        NB: You will not receive events until the subscription is verified.\n\n        If the verification process seems confusing, head over to [RESTHooks.org](http://resthooks.org/docs/security/) for more on the concept.\n      operationId: verify_a_hook_subscription\n      parameters:\n      - name: key\n        in: path\n        description: key\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestHook'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /locales/countries:\n    get:\n      tags:\n      - Locale\n      summary: List Countries\n      operationId: listCountries\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CountriesByCode'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /locales/countries/{countryCode}/provinces:\n    get:\n      tags:\n      - Locale\n      summary: List a Country's Provinces\n      operationId: listCountriesProvinces\n      parameters:\n      - name: countryCode\n        in: path\n        description: countryCode\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProvincesByCode'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /merchants:\n    get:\n      tags:\n      - Merchant\n      summary: List Merchants\n      description: Retrieves a list of all merchant accounts\n      operationId: getMerchantAccounts\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestMerchantAccountResponse'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /notes:\n    get:\n      tags:\n      - Note\n      summary: List Notes\n      description: Retrieves a list of all notes\n      operationId: listNotes\n      parameters:\n      - name: limit\n        in: query\n        description: Sets a total of items to return\n        schema:\n          type: integer\n          format: int32\n      - name: offset\n        in: query\n        description: Sets a beginning range of items to return\n        schema:\n          type: integer\n          format: int32\n      - name: user_id\n        in: query\n        description: Filter based on the user id assigned to the note.\n        schema:\n          type: integer\n          format: int64\n      - name: contact_id\n        in: query\n        description: Filter based on the contact id assigned to the note.\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NoteList'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      tags:\n      - Note\n      summary: Create a Note\n      description: Creates a new note as the authenticated user. Either a \"title\"\n        or \"body\" is required\n      operationId: createNote\n      requestBody:\n        description: createNote\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RequestNote'\n        required: true\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Note'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: createNote\n  /notes/model:\n    get:\n      tags:\n      - Note\n      summary: Retrieve Note Model\n      description: Get the custom fields for the Note object\n      operationId: retrieveNoteModel\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ObjectModel'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /notes/model/customFields:\n    post:\n      tags:\n      - Note\n      summary: Create a Custom Field\n      description: Adds a custom field of the specified type and options to the Note\n        object.\n      operationId: createNoteCustomField\n      requestBody:\n        description: customField\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateRestCustomField'\n        required: true\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomFieldMetaData'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: customField\n  /notes/{noteId}:\n    get:\n      tags:\n      - Note\n      summary: Retrieve a Note\n      description: Retrieves a single note\n      operationId: getNote\n      parameters:\n      - name: noteId\n        in: path\n        description: noteId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Note'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    delete:\n      tags:\n      - Note\n      summary: Delete a Note\n      description: Deletes a note\n      operationId: deleteNote\n      parameters:\n      - name: noteId\n        in: path\n        description: noteId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    patch:\n      tags:\n      - Note\n      summary: Update a Note\n      description: Updates a note with only the values provided in the request\n      operationId: updatePropertiesOnNote\n      parameters:\n      - name: noteId\n        in: path\n        description: noteId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: note\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateNote'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Note'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: note\n  /oauth/connect/userinfo:\n    get:\n      tags:\n      - User Info\n      summary: Retrieve User Info\n      description: Retrieves information for the current authenticated end-user, as\n        outlined by the [OpenID Connect specification](http://openid.net/specs/openid-connect-core-1_0.html#UserInfo).\n      operationId: getUserInfo\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserInfoDTO'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /opportunities:\n    get:\n      tags:\n      - Opportunity\n      summary: List Opportunities\n      description: |-\n        Retrieves a list of all opportunities.\n\n        Please note: the sample response erroneously shows properties, such as _stage reasons_, that are unavailable through the list endpoint. Such properties are only available through the retrieve operation. Future versions of the Opportunity resource will correct the oversight.\n      operationId: listOpportunities\n      parameters:\n      - name: limit\n        in: query\n        description: Sets a total of items to return\n        schema:\n          type: integer\n          format: int32\n      - name: offset\n        in: query\n        description: Sets a beginning range of items to return\n        schema:\n          type: integer\n          format: int32\n      - name: user_id\n        in: query\n        description: Returns opportunities for the provided user id\n        schema:\n          type: integer\n          format: int64\n      - name: stage_id\n        in: query\n        description: Returns opportunities for the provided stage id\n        schema:\n          type: integer\n          format: int64\n      - name: search_term\n        in: query\n        description: Returns opportunities that match any of the contact's `given_name`,\n          `family_name`, `company_name`, and `email_addresses` (searches `EMAIL1`\n          only) fields as well as `opportunity_title`\n        schema:\n          type: string\n      - name: order\n        in: query\n        description: Attribute to order items by\n        schema:\n          type: string\n          enum:\n          - next_action\n          - opportunity_name\n          - contact_name\n          - date_created\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OpportunityList'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    put:\n      tags:\n      - Opportunity\n      summary: Replace an Opportunity\n      description: Replaces all values of a given opportunity\n      operationId: updateOpportunity\n      requestBody:\n        description: opportunity\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Opportunity'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Opportunity'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: opportunity\n    post:\n      tags:\n      - Opportunity\n      summary: Create an Opportunity\n      description: 'Creates a new opportunity as the authenticated user. NB: Opportunity\n        must contain values for `opportunity_title`, `contact`, and `stage`.'\n      operationId: createOpportunity\n      requestBody:\n        description: opportunity\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Opportunity'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Opportunity'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: opportunity\n  /opportunities/model:\n    get:\n      tags:\n      - Opportunity\n      summary: Retrieve Opportunity Model\n      description: Get the custom fields for the Opportunity object\n      operationId: retrieveOpportunityModel\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ObjectModel'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /opportunities/{opportunityId}:\n    get:\n      tags:\n      - Opportunity\n      summary: Retrieve an Opportunity\n      description: Retrives a single opportunity\n      operationId: getOpportunity\n      parameters:\n      - name: opportunityId\n        in: path\n        description: opportunityId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: optional_properties\n        in: query\n        description: Comma-delimited list of Opportunity properties to include in\n          the response. (Some fields such as `custom_fields` aren't included, by default.)\n        style: form\n        explode: true\n        schema:\n          type: array\n          items:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Opportunity'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    patch:\n      tags:\n      - Opportunity\n      summary: Update an Opportunity\n      description: Updates an opportunity with only the values provided in the request.\n      operationId: updatePropertiesOnOpportunity\n      parameters:\n      - name: opportunityId\n        in: path\n        description: opportunityId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: opportunity\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Opportunity'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Opportunity'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: opportunity\n  /opportunity/stage_pipeline:\n    get:\n      tags:\n      - Opportunity\n      summary: List Opportunity Stage Pipeline\n      description: Retrieves a list of all opportunity stages with pipeline details\n      operationId: listOpportunityStagePipelines\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SalesPipeline'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /orders:\n    get:\n      tags:\n      - E-Commerce\n      summary: List Orders\n      description: |-\n        Retrieves a list of all orders using the specified search criteria. Each order may or may not have items.\n\n        Potential values for order status:`DRAFT`, `SENT`, `VIEWED`, `PAID`\n      operationId: listOrders\n      parameters:\n      - name: since\n        in: query\n        description: Date to start searching from ex. `2017-01-01T22:17:59.039Z`\n        schema:\n          type: string\n      - name: until\n        in: query\n        description: Date to search to ex. `2017-01-01T22:17:59.039Z`\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Sets a total of items to return\n        schema:\n          type: integer\n          format: int32\n      - name: offset\n        in: query\n        description: Sets a beginning range of items to return\n        schema:\n          type: integer\n          format: int32\n      - name: paid\n        in: query\n        description: Sets paid status of items to return\n        schema:\n          type: boolean\n      - name: order\n        in: query\n        description: Attribute to order items by\n        schema:\n          type: string\n      - name: contact_id\n        in: query\n        description: Returns orders for the provided contact id\n        schema:\n          type: integer\n          format: int64\n      - name: product_id\n        in: query\n        description: Returns orders containing the provided product id\n        schema:\n          type: integer\n          format: int64\n      - name: contact_name\n        in: query\n        description: Returns orders for the provided contact name\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrderList'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      tags:\n      - E-Commerce\n      summary: Create an Order\n      description: Create a one time order with order items.\n      operationId: createOrder\n      requestBody:\n        description: createOrder\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateOrder'\n        required: true\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Order'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: createOrder\n  /orders/model:\n    get:\n      tags:\n      - E-Commerce\n      summary: Retrieve Custom Order Model\n      description: Get the custom fields for the Order object\n      operationId: retrieveOrderModel\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ObjectModel'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /orders/{orderId}:\n    get:\n      tags:\n      - E-Commerce\n      summary: Retrieve an Order\n      description: |-\n        Retrieves a single order. The order may or may not have items.\n\n        Potential values for order status:`DRAFT`, `SENT`, `VIEWED`, `PAID`\n      operationId: getOrder\n      parameters:\n      - name: orderId\n        in: path\n        description: orderId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EcommerceReportingOrder'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    delete:\n      tags:\n      - E-Commerce\n      summary: Delete an Order\n      description: Delete an order that does not have a payment\n      operationId: deleteOrder\n      parameters:\n      - name: orderId\n        in: path\n        description: orderId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /orders/{orderId}/items:\n    post:\n      tags:\n      - E-Commerce\n      summary: Create an Order Item\n      description: Creates an order item on an existing order.\n      operationId: createOrderItemsOnOrder\n      parameters:\n      - name: orderId\n        in: path\n        description: orderId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: createOrderItem\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateOrderItem'\n        required: true\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrderItem'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: createOrderItem\n  /orders/{orderId}/items/{orderItemId}:\n    delete:\n      tags:\n      - E-Commerce\n      summary: Delete an Order Item\n      description: Delete an order Item on specified Order\n      operationId: deleteOrderOrderItem\n      parameters:\n      - name: orderId\n        in: path\n        description: orderId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: orderItemId\n        in: path\n        description: orderItemId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /orders/{orderId}/paymentPlan:\n    put:\n      tags:\n      - E-Commerce\n      summary: Replace an Order Pay Plan\n      description: Replaces the order's payment plan with the given values.\n      operationId: replacePaymentPlan\n      parameters:\n      - name: orderId\n        in: path\n        description: orderId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: paymentPlan\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PaymentPlan'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentPlan'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: paymentPlan\n  /orders/{orderId}/payments:\n    get:\n      tags:\n      - E-Commerce\n      summary: Retrieve Order Payments\n      description: Retrieves a list of payments made against a given order, including\n        historical or external payments of cash or credit card.\n      operationId: listOrderPayments\n      parameters:\n      - name: orderId\n        in: path\n        description: orderId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/InvoicePayment'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      tags:\n      - E-Commerce\n      summary: Create a Payment\n      description: Creates a payment record that can charge a credit card. Alternatively,\n        adds a record of historical or external payment of cash or credit card.\n      operationId: createPaymentOnOrder\n      parameters:\n      - name: orderId\n        in: path\n        description: orderId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: createPayment\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreatePayment'\n        required: false\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentResult'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: createPayment\n  /orders/{orderId}/transactions:\n    get:\n      tags:\n      - E-Commerce\n      summary: Retrieve Order Transactions\n      description: Retrieves a list of all transactions on a given order using the\n        specified search criteria\n      operationId: listTransactionsForOrder\n      parameters:\n      - name: orderId\n        in: path\n        description: orderId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: since\n        in: query\n        description: Date to start searching from ex. `2017-01-01T22:17:59.039Z`\n        schema:\n          type: string\n      - name: until\n        in: query\n        description: Date to search to ex. `2017-01-01T22:17:59.039Z`\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Sets a total of items to return\n        schema:\n          type: integer\n          format: int32\n      - name: offset\n        in: query\n        description: Sets a beginning range of items to return\n        schema:\n          type: integer\n          format: int32\n      - name: contact_id\n        in: query\n        description: Returns transactions for the provided contact id\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionList'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /products:\n    get:\n      tags:\n      - Product\n      summary: List Products\n      description: Retrieves a list of all products\n      operationId: listProducts\n      parameters:\n      - name: limit\n        in: query\n        description: Sets a total of items to return\n        schema:\n          type: integer\n          format: int32\n      - name: offset\n        in: query\n        description: Sets a beginning range of items to return\n        schema:\n          type: integer\n          format: int32\n      - name: active\n        in: query\n        description: Sets status of items to return\n        schema:\n          type: boolean\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductList'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      tags:\n      - Product\n      summary: Create a Product\n      description: Creates a new product\n      operationId: createProduct\n      requestBody:\n        description: createProduct\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateProduct'\n        required: true\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Product'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: createProduct\n  /products/sync:\n    get:\n      tags:\n      - Product\n      summary: Retrieve Synced Products\n      description: The Sync endpoint returns a set of products that have been updated\n        or created since the last result set was retrieved, minus any products that\n        have been deleted.\n      operationId: listProductsFromSyncToken\n      parameters:\n      - name: sync_token\n        in: query\n        description: sync_token\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Sets a total of items to return\n        schema:\n          type: integer\n          format: int32\n      - name: offset\n        in: query\n        description: Sets a beginning range of items to return\n        schema:\n          type: integer\n          format: int32\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductStatusList'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      deprecated: true\n  /products/{productId}:\n    get:\n      tags:\n      - Product\n      summary: Retrieve a Product\n      operationId: retrieveProduct\n      parameters:\n      - name: productId\n        in: path\n        description: productId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Product'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    delete:\n      tags:\n      - Product\n      summary: Delete a Product\n      description: Deletes a product and its subscriptions\n      operationId: deleteProduct\n      parameters:\n      - name: productId\n        in: path\n        description: productId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    patch:\n      tags:\n      - Product\n      summary: Update a Product\n      description: Updates a Product with only the values provided in the request.\n      operationId: updateProduct\n      parameters:\n      - name: productId\n        in: path\n        description: productId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: createProduct\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateProduct'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Product'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: createProduct\n  /products/{productId}/image:\n    post:\n      tags:\n      - Product\n      summary: Upload a product image\n      description: Max payload 3 megabytes, the `file_data` is base64 encoded.\n      operationId: createProductImage\n      parameters:\n      - name: productId\n        in: path\n        description: productId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: restProductImage\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateProductImage'\n        required: true\n      responses:\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: restProductImage\n    delete:\n      tags:\n      - Product\n      summary: Delete a product image\n      operationId: deleteProductImage\n      parameters:\n      - name: productId\n        in: path\n        description: productId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /products/{productId}/subscriptions:\n    post:\n      tags:\n      - Product\n      summary: Create a Product Subscription\n      description: Creates a new product subscription\n      operationId: createProductSubscription\n      parameters:\n      - name: productId\n        in: path\n        description: productId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: createProductSubscription\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateProductSubscription'\n        required: true\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductSubscription'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: createProductSubscription\n  /products/{productId}/subscriptions/{subscriptionId}:\n    get:\n      tags:\n      - Product\n      summary: Retrieve a Product Subscription\n      operationId: retrieveProductSubscription\n      parameters:\n      - name: productId\n        in: path\n        description: productId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: subscriptionId\n        in: path\n        description: subscriptionId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductSubscription'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    delete:\n      tags:\n      - Product\n      summary: Delete a Product Subscription\n      description: Deletes a product subscription\n      operationId: deleteProductSubscription\n      parameters:\n      - name: productId\n        in: path\n        description: productId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: subscriptionId\n        in: path\n        description: subscriptionId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /setting/application/configuration:\n    get:\n      tags:\n      - Setting\n      summary: Retrieve application configuration\n      description: Get the properties for the current application's configuration\n      operationId: getConfiguration\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestApplicationConfiguration'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /setting/application/enabled:\n    get:\n      tags:\n      - Setting\n      summary: Retrieve application status\n      description: Retrieves whether the application is enabled\n      operationId: getApplicationEnabled\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Setting'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /setting/contact/optionTypes:\n    get:\n      tags:\n      - Setting\n      summary: List Contact types\n      description: Lists the Contact types in a comma-separated list\n      operationId: getContactOptionTypes\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Setting'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /subscriptions:\n    get:\n      tags:\n      - E-Commerce\n      summary: List Subscriptions\n      description: Retrieves a list of all subcriptions using the specified search\n        criteria.\n      operationId: listSubscriptions\n      parameters:\n      - name: limit\n        in: query\n        description: Sets a total of items to return\n        schema:\n          type: integer\n          format: int32\n      - name: offset\n        in: query\n        description: Sets a beginning range of items to return\n        schema:\n          type: integer\n          format: int32\n      - name: contact_id\n        in: query\n        description: Returns subscriptions for the provided contact id\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubscriptionList'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      tags:\n      - E-Commerce\n      summary: Create Subscription\n      description: Creates a subscription with the specified product and product subscription\n        id.\n      operationId: createSubscription\n      requestBody:\n        description: createSubscription\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateSubscription'\n        required: true\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Subscription'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: createSubscription\n  /subscriptions/model:\n    get:\n      tags:\n      - E-Commerce\n      summary: Retrieve Subscription Model\n      description: Get the custom fields for the Subscription object\n      operationId: retrieveSubscriptionModel\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ObjectModel'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /tags:\n    get:\n      tags:\n      - Tags\n      summary: List Tags\n      description: Retrieve a list of tags defined in the application\n      operationId: listTags\n      parameters:\n      - name: limit\n        in: query\n        description: Sets a total of items to return\n        schema:\n          type: integer\n          format: int32\n      - name: offset\n        in: query\n        description: Sets a beginning range of items to return\n        schema:\n          type: integer\n          format: int32\n      - name: category\n        in: query\n        description: Category Id of tags to filter by\n        schema:\n          type: integer\n          format: int64\n      - name: name\n        in: query\n        description: Filter for tags with a specific name\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Tags'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      tags:\n      - Tags\n      summary: Create Tag\n      description: Create a new tag\n      operationId: createTag\n      requestBody:\n        description: tag\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateTag'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Tag'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: tag\n  /tags/categories:\n    post:\n      tags:\n      - Tags\n      summary: Create Tag Category\n      description: Create a new tag category\n      operationId: createTagCategory\n      requestBody:\n        description: tagCategory\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateTagCategory'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagCategory'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: tagCategory\n  /tags/{id}:\n    get:\n      tags:\n      - Tags\n      summary: Retrieve a Tag\n      description: Retrieves a single tag\n      operationId: getTag\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Tag'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /tags/{tagId}/companies:\n    get:\n      tags:\n      - Tags\n      summary: List Tagged Companies\n      description: Retrieves a list of companies that have the given tag applied\n      operationId: listCompaniesForTagId\n      parameters:\n      - name: tagId\n        in: path\n        description: tagId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: limit\n        in: query\n        description: Sets a total of items to return\n        schema:\n          type: integer\n          format: int32\n      - name: offset\n        in: query\n        description: Sets a beginning range of items to return\n        schema:\n          type: integer\n          format: int32\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaggedCompanyList'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /tags/{tagId}/contacts:\n    get:\n      tags:\n      - Tags\n      summary: List Tagged Contacts\n      description: Retrieves a list of contacts that have the given tag applied\n      operationId: listContactsForTagId\n      parameters:\n      - name: tagId\n        in: path\n        description: tagId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: limit\n        in: query\n        description: Sets a total of items to return\n        schema:\n          type: integer\n          format: int32\n      - name: offset\n        in: query\n        description: Sets a beginning range of items to return\n        schema:\n          type: integer\n          format: int32\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaggedContactList'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      tags:\n      - Tags\n      summary: Apply Tag to Contacts\n      description: Apply a tag to a list of contacts\n      operationId: applyTagToContactIds\n      parameters:\n      - name: tagId\n        in: path\n        description: tagId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: ids\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SetOfIds'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/EntryLongString'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: ids\n    delete:\n      tags:\n      - Tags\n      summary: Remove Tag from Contacts\n      description: Remove a tag from a list of contacts\n      operationId: removeTagFromContactIds\n      parameters:\n      - name: tagId\n        in: path\n        description: tagId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: ids\n        in: query\n        description: ids\n        required: true\n        style: form\n        explode: true\n        schema:\n          type: array\n          items:\n            type: integer\n            format: int64\n      responses:\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /tags/{tagId}/contacts/{contactId}:\n    delete:\n      tags:\n      - Tags\n      summary: Remove Tag from Contact\n      description: Remove a tag from a Contact\n      operationId: removeTagFromContactId\n      parameters:\n      - name: tagId\n        in: path\n        description: tagId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: contactId\n        in: path\n        description: contactId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /tasks:\n    get:\n      tags:\n      - Task\n      summary: List Tasks\n      description: Retrieves a list of all tasks using the specified search criteria\n      operationId: listTasks\n      parameters:\n      - name: contact_id\n        in: query\n        description: contact_id\n        schema:\n          type: integer\n          format: int64\n      - name: has_due_date\n        in: query\n        description: has_due_date\n        schema:\n          type: boolean\n      - name: user_id\n        in: query\n        description: user_id\n        schema:\n          type: integer\n          format: int64\n      - name: since\n        in: query\n        description: Date to start searching from ex. `2017-01-01T22:17:59.039Z`\n        schema:\n          type: string\n      - name: until\n        in: query\n        description: Date to search to ex. `2017-01-01T22:17:59.039Z`\n        schema:\n          type: string\n      - name: completed\n        in: query\n        description: Sets completed status of items to return\n        schema:\n          type: boolean\n      - name: limit\n        in: query\n        description: Sets a total of items to return\n        schema:\n          type: integer\n          format: int32\n      - name: offset\n        in: query\n        description: Sets a beginning range of items to return\n        schema:\n          type: integer\n          format: int32\n      - name: order\n        in: query\n        description: Attribute to order items by\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskList'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      tags:\n      - Task\n      summary: Create a Task\n      description: 'Creates a new task as the authenticated user. NB: Contact must\n        contain at least one item in the fields `title` and `due_date`. All other\n        attributes are optional'\n      operationId: createTask\n      requestBody:\n        description: task\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Task'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Task'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: task\n  /tasks/model:\n    get:\n      tags:\n      - Task\n      summary: Retrieve Task Model\n      description: Get the custom fields for the Task object\n      operationId: retrieveTaskModel\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ObjectModel'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /tasks/model/customFields:\n    post:\n      tags:\n      - Task\n      summary: Create a Custom Field\n      description: Adds a custom field of the specified type and options to the Task\n        object.\n      operationId: createTaskCustomField\n      requestBody:\n        description: customField\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateRestCustomField'\n        required: true\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomFieldMetaData'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: customField\n  /tasks/search:\n    get:\n      tags:\n      - Task\n      summary: Search Tasks\n      description: Retrieves Tasks belonging to the authenticated user using the specified\n        search criteria\n      operationId: listTasksForCurrentUser\n      parameters:\n      - name: contact_id\n        in: query\n        description: Returns tasks for the provided contact id\n        schema:\n          type: integer\n          format: int64\n      - name: has_due_date\n        in: query\n        description: Returns tasks that have an 'action date' when set to true\n        schema:\n          type: boolean\n      - name: user_id\n        in: query\n        description: Returns tasks for the provided user id\n        schema:\n          type: integer\n          format: int64\n      - name: since\n        in: query\n        description: Date to start searching from ex. `2017-01-01T22:17:59.039Z`\n        schema:\n          type: string\n      - name: until\n        in: query\n        description: Date to search to ex. `2017-01-01T22:17:59.039Z`\n        schema:\n          type: string\n      - name: completed\n        in: query\n        description: Sets completed status of items to return\n        schema:\n          type: boolean\n      - name: limit\n        in: query\n        description: Sets a total of items to return\n        schema:\n          type: integer\n          format: int32\n      - name: offset\n        in: query\n        description: Sets a beginning range of items to return\n        schema:\n          type: integer\n          format: int32\n      - name: order\n        in: query\n        description: Attribute to order items by\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskList'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /tasks/{taskId}:\n    get:\n      tags:\n      - Task\n      summary: Retrieve a Task\n      description: Retrieves a single task\n      operationId: getTask\n      parameters:\n      - name: taskId\n        in: path\n        description: taskId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Task'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    put:\n      tags:\n      - Task\n      summary: Replace a Task\n      description: Replaces a task with the values provided in the request\n      operationId: updateTask\n      parameters:\n      - name: taskId\n        in: path\n        description: taskId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: task\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Task'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Task'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: task\n    delete:\n      tags:\n      - Task\n      summary: Delete a Task\n      description: Permanently deletes a task\n      operationId: deleteTask\n      parameters:\n      - name: taskId\n        in: path\n        description: taskId\n        required: true\n        schema:\n          type: string\n      responses:\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    patch:\n      tags:\n      - Task\n      summary: Update a Task\n      description: Updates a task with only the values provided in the request\n      operationId: updatePropertiesOnTask\n      parameters:\n      - name: taskId\n        in: path\n        description: taskId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: task\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Task'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Task'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: task\n  /transactions:\n    get:\n      tags:\n      - E-Commerce\n      summary: List Transactions\n      description: Retrieves a list transactions for a given contact\n      operationId: listTransactions\n      parameters:\n      - name: since\n        in: query\n        description: Date to start searching from ex. `2017-01-01T22:17:59.039Z`\n        schema:\n          type: string\n      - name: until\n        in: query\n        description: Date to search to ex. `2017-01-01T22:17:59.039Z`\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Sets a total of items to return\n        schema:\n          type: integer\n          format: int32\n      - name: offset\n        in: query\n        description: Sets a beginning range of items to return\n        schema:\n          type: integer\n          format: int32\n      - name: contact_id\n        in: query\n        description: Returns transactions for the provided contact id\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionList'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /transactions/{transactionId}:\n    get:\n      tags:\n      - E-Commerce\n      summary: Retrieve a Transaction\n      description: Retrieves a single transaction\n      operationId: getTransaction\n      parameters:\n      - name: transactionId\n        in: path\n        description: transactionId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EcommerceReportingTransaction'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /users:\n    get:\n      tags:\n      - Users\n      summary: List Users\n      description: Retrieves a list of all users\n      operationId: listUsers\n      parameters:\n      - name: limit\n        in: query\n        description: Sets a total of items to return\n        schema:\n          type: integer\n          format: int32\n      - name: offset\n        in: query\n        description: Sets a beginning range of items to return\n        schema:\n          type: integer\n          format: int32\n      - name: include_inactive\n        in: query\n        description: Include users that are Inactive in results, defaults to TRUE\n        schema:\n          type: boolean\n      - name: include_partners\n        in: query\n        description: Include partner users in results, defaults to TRUE\n        schema:\n          type: boolean\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Users'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      tags:\n      - Users\n      summary: Create a User\n      description: 'Creates a new user record. NB: Users will be invited to the application\n        and remain in the \"Invited\" status until the user accepts the invite. \"Inactive\"\n        users will not take up a user license.'\n      operationId: createUser\n      requestBody:\n        description: user\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateUser'\n        required: false\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestUser'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: user\n  /users/{userId}/signature:\n    get:\n      tags:\n      - Users\n      summary: Get User email signature\n      description: Retrieves a HTML snippet that contains the user's email signature.\n      operationId: getUserSignature\n      parameters:\n      - name: userId\n        in: path\n        description: userId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: string\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\ncomponents:\n  schemas:\n    Appointment:\n      required:\n      - end_date\n      - start_date\n      - title\n      type: object\n      properties:\n        contact_id:\n          type: integer\n          description: Required for pop-up reminders\n          format: int64\n        description:\n          type: string\n        end_date:\n          type: string\n        location:\n          type: string\n        remind_time:\n          type: integer\n          description: Value in minutes before start_date to show pop-up reminder.  Acceptable\n            values are [5,10,15,30,60,120,240,480,1440,2880]\n          format: int32\n        start_date:\n          type: string\n        title:\n          type: string\n        user:\n          type: integer\n          description: Required only for pop-up reminders\n          format: int64\n    SubscriptionPlan:\n      type: object\n      properties:\n        active:\n          type: boolean\n        cycle:\n          type: integer\n          format: int32\n        frequency:\n          type: integer\n          format: int32\n        id:\n          type: integer\n          format: int64\n        number_of_cycles:\n          type: integer\n          format: int32\n        plan_price:\n          type: number\n          format: double\n        subscription_plan_index:\n          type: integer\n          format: int32\n        subscription_plan_name:\n          type: string\n    EcommerceReportingTransaction:\n      type: object\n      properties:\n        amount:\n          type: number\n          format: double\n        collection_method:\n          type: string\n        contact_id:\n          type: integer\n          format: int64\n        currency:\n          type: string\n        errors:\n          type: string\n        gateway:\n          type: string\n        gateway_account_name:\n          type: string\n        id:\n          type: integer\n          format: int64\n        order_ids:\n          type: string\n        orders:\n          type: array\n          items:\n            $ref: '#/components/schemas/EcommerceReportingOrder'\n        paymentDate:\n          type: string\n        status:\n          type: string\n        test:\n          type: boolean\n        transaction_date:\n          type: string\n        type:\n          type: string\n    SalesPipeline:\n      type: object\n      properties:\n        end_stage:\n          type: boolean\n        is_default:\n          type: boolean\n        stage_count:\n          type: integer\n          format: int32\n        stage_id:\n          type: integer\n          format: int64\n        stage_name:\n          type: string\n        stage_order:\n          type: integer\n          format: int32\n    Address:\n      type: object\n      properties:\n        country_code:\n          type: string\n        line1:\n          type: string\n        line2:\n          type: string\n        locality:\n          type: string\n        region:\n          type: string\n        zip_code:\n          type: string\n        zip_four:\n          type: string\n    CreateOrPatchCompany:\n      required:\n      - company_name\n      type: object\n      properties:\n        address:\n          $ref: '#/components/schemas/CompanyAddress'\n        company_name:\n          type: string\n        custom_fields:\n          type: array\n          items:\n            $ref: '#/components/schemas/CustomFieldValue'\n        email_address:\n          type: string\n        fax_number:\n          $ref: '#/components/schemas/CompanyFaxNumber'\n        notes:\n          type: string\n        opt_in_reason:\n          type: string\n        phone_number:\n          $ref: '#/components/schemas/CompanyPhoneNumber'\n        website:\n          type: string\n    Product:\n      required:\n      - id\n      - product_name\n      type: object\n      properties:\n        active:\n          type: boolean\n        id:\n          type: integer\n          format: int64\n        product_desc:\n          type: string\n        product_name:\n          type: string\n        product_price:\n          type: number\n          format: double\n        product_short_desc:\n          type: string\n        sku:\n          type: string\n        subscription_only:\n          type: boolean\n        subscription_plans:\n          type: array\n          items:\n            $ref: '#/components/schemas/ProductSubscription'\n        url:\n          type: string\n    Users:\n      type: object\n      properties:\n        count:\n          type: integer\n          format: int32\n        next:\n          type: string\n        previous:\n          type: string\n        users:\n          type: array\n          items:\n            $ref: '#/components/schemas/RestUser'\n    AffiliateList:\n      type: object\n      properties:\n        affiliates:\n          type: array\n          items:\n            $ref: '#/components/schemas/Affiliate'\n        count:\n          type: integer\n          format: int32\n        next:\n          type: string\n        previous:\n          type: string\n    Affiliate:\n      type: object\n      properties:\n        code:\n          type: string\n        contact_id:\n          type: integer\n          format: int64\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n        notify_on_lead:\n          type: boolean\n        notify_on_sale:\n          type: boolean\n        parent_id:\n          type: integer\n          format: int64\n        status:\n          type: string\n        track_leads_for:\n          type: integer\n          format: int32\n    Item:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n        next_item_id:\n          type: integer\n          format: int64\n        previous_item_id:\n          type: integer\n          format: int64\n        type:\n          type: string\n          enum:\n          - NULL\n          - Start\n          - Wait\n          - DelayTimer\n          - ContactTimer\n          - DateTimer\n          - AppointmentTimer\n          - Email\n          - BardEmail\n          - UnlayerEmail\n          - EmailConfirm\n          - Voice\n          - Fax\n          - Letter\n          - AutomatedSms\n          - Tag\n          - Opportunity\n          - Note\n          - Task\n          - CompleteTasks\n          - Appointment\n          - AssignOwner\n          - FieldValue\n          - Fulfillment\n          - CreateOrder\n          - Deal\n          - AddToSequence\n          - CancelSubscription\n          - MoveOpportunity\n          - SendHelloSign\n          - Http\n          - CustomerHub\n          - ActionSet\n    EmailSentQueryResultWithContent:\n      type: object\n      properties:\n        clicked_date:\n          type: string\n          format: date-time\n        contact_id:\n          type: integer\n          format: int64\n        headers:\n          type: string\n        html_content:\n          type: string\n          description: Base64 encoded HTML\n        id:\n          type: integer\n          format: int64\n        opened_date:\n          type: string\n          format: date-time\n        original_provider:\n          type: string\n          enum:\n          - UNKNOWN\n          - INFUSIONSOFT\n          - MICROSOFT\n          - GOOGLE\n        original_provider_id:\n          type: string\n        plain_content:\n          type: string\n          description: Base64 encoded plain text\n        received_date:\n          type: string\n          format: date-time\n        sent_date:\n          type: string\n          format: date-time\n        sent_from_address:\n          type: string\n        sent_from_reply_address:\n          type: string\n        sent_to_address:\n          type: string\n        sent_to_bcc_addresses:\n          type: string\n        sent_to_cc_addresses:\n          type: string\n        subject:\n          type: string\n    Goal:\n      type: object\n      properties:\n        historical_contact_counts:\n          $ref: '#/components/schemas/HistoricalCounts'\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n        next_sequence_ids:\n          type: array\n          items:\n            type: integer\n            format: int64\n        previous_sequence_ids:\n          type: array\n          items:\n            type: integer\n            format: int64\n        type:\n          type: string\n          enum:\n          - WebForm\n          - LandingPage\n          - Survey\n          - LinkClick\n          - EmailOpened\n          - Score\n          - Purchase\n          - FailedPurchase\n          - Quote\n          - WebsiteTrigger\n          - InternalForm\n          - SmartForm\n          - AppointmentEvent\n          - Task\n          - StageMove\n          - Note\n          - Tag\n          - PipelineStageMove\n          - UnlayerLandingPage\n          - GroSocial\n          - TwitterForm\n          - API\n          - WordPress\n          - NewLandingPage\n          - HelloSign\n    FaxNumber:\n      required:\n      - field\n      type: object\n      properties:\n        field:\n          type: string\n          enum:\n          - FAX1\n          - FAX2\n        number:\n          type: string\n        type:\n          type: string\n    EcommerceReportingOrderContactDetails:\n      type: object\n      properties:\n        company_name:\n          type: string\n        email:\n          type: string\n        first_name:\n          type: string\n        id:\n          type: integer\n          format: int64\n        job_title:\n          type: string\n        last_name:\n          type: string\n    EcommerceReportingPaymentGateway:\n      type: object\n      properties:\n        merchant_account_id:\n          type: integer\n          format: int64\n        use_default:\n          type: boolean\n    RestAffiliateClawback:\n      type: object\n      properties:\n        amount:\n          type: number\n          format: double\n        contact_id:\n          type: integer\n          format: int64\n        date_earned:\n          type: string\n        description:\n          type: string\n        family_name:\n          type: string\n        given_name:\n          type: string\n        invoice_id:\n          type: integer\n          format: int64\n        product_name:\n          type: string\n        sale_affiliate_id:\n          type: integer\n          format: int64\n        sold_by_family_name:\n          type: string\n        sold_by_given_name:\n          type: string\n        subscription_plan_name:\n          type: string\n    Subscription:\n      type: object\n      properties:\n        active:\n          type: boolean\n        allow_tax:\n          type: boolean\n        auto_charge:\n          type: boolean\n        billing_amount:\n          type: number\n          format: double\n        billing_cycle:\n          type: string\n          enum:\n          - YEAR\n          - MONTH\n          - WEEK\n          - DAY\n        billing_frequency:\n          type: integer\n          format: int32\n        contact_id:\n          type: integer\n          format: int64\n        credit_card_id:\n          type: integer\n          format: int64\n        end_date:\n          type: string\n          format: date\n        id:\n          type: integer\n          format: int64\n        next_bill_date:\n          type: string\n          format: date\n        payment_gateway_id:\n          type: integer\n          format: int64\n        product_id:\n          type: integer\n          format: int64\n        quantity:\n          type: integer\n          format: int64\n        sale_affiliate_id:\n          type: integer\n          format: int64\n        start_date:\n          type: string\n          format: date\n        subscription_plan_id:\n          type: integer\n          format: int64\n        use_default_payment_gateway:\n          type: boolean\n    EcommerceReportingSimpleProduct:\n      type: object\n      properties:\n        description:\n          type: string\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n        shippable:\n          type: boolean\n        sku:\n          type: string\n        taxable:\n          type: boolean\n    Tags:\n      type: object\n      properties:\n        count:\n          type: integer\n          format: int32\n        next:\n          type: string\n        previous:\n          type: string\n        tags:\n          type: array\n          items:\n            $ref: '#/components/schemas/Tag'\n    ContactAddress:\n      required:\n      - field\n      type: object\n      properties:\n        country_code:\n          type: string\n        field:\n          type: string\n          enum:\n          - BILLING\n          - SHIPPING\n          - OTHER\n        line1:\n          type: string\n        line2:\n          type: string\n        locality:\n          type: string\n        postal_code:\n          type: string\n          description: Field used to store postal codes containing a combination of\n            letters and numbers ex. 'EC1A', 'S1 2HE', '75000'\n        region:\n          type: string\n        zip_code:\n          type: string\n          description: 'Mainly used in the United States, this is typically numeric.\n            ex. ''85001'', ''90002'' Note: this is to be used instead of ''postal_code'',\n            not in addition to.'\n        zip_four:\n          type: string\n          description: Last four of a full zip code ex. '8244', '4320'. This field\n            is supplemental to the zip_code field, otherwise will be ignored.\n    EcommerceReportingPaymentPlan:\n      type: object\n      properties:\n        auto_charge:\n          type: boolean\n        credit_card_id:\n          type: integer\n          format: int64\n        days_between_payments:\n          type: integer\n          format: int64\n        initial_payment_amount:\n          type: number\n          format: double\n        initial_payment_date:\n          type: string\n        number_of_payments:\n          type: integer\n          format: int64\n        payment_gateway:\n          $ref: '#/components/schemas/EcommerceReportingPaymentGateway'\n        plan_start_date:\n          type: string\n    RestApplicationConfigurationModuleTask:\n      type: object\n      properties:\n        appointment_types:\n          type: string\n        share_opportunity_with_related_user:\n          type: boolean\n    CreateOrderItem:\n      required:\n      - product_id\n      - quantity\n      type: object\n      properties:\n        description:\n          type: string\n        price:\n          type: string\n          description: Overridable price of the product, if not specified, the default\n            will be used. Must be greater than or equal to 0.\n        product_id:\n          type: integer\n          description: The id of the product to be added to the order.\n          format: int64\n        quantity:\n          type: integer\n          description: Quantity must be greater than or equal to 1\n          format: int32\n    CreateProduct:\n      required:\n      - product_name\n      type: object\n      properties:\n        active:\n          type: boolean\n        product_desc:\n          type: string\n        product_name:\n          type: string\n        product_price:\n          type: number\n          format: double\n        product_short_desc:\n          type: string\n        sku:\n          type: string\n        subscription_only:\n          type: boolean\n    RestPartialContact:\n      type: object\n      properties:\n        ScoreValue:\n          type: string\n        addresses:\n          type: array\n          items:\n            $ref: '#/components/schemas/ContactAddress'\n        anniversary:\n          type: string\n          format: date-time\n        birthday:\n          type: string\n          format: date-time\n        company:\n          $ref: '#/components/schemas/CompanyReference'\n        company_name:\n          type: string\n        contact_type:\n          type: string\n        custom_fields:\n          type: array\n          items:\n            $ref: '#/components/schemas/CustomFieldValue'\n        date_created:\n          type: string\n          format: date-time\n        email_addresses:\n          type: array\n          items:\n            $ref: '#/components/schemas/EmailAddress'\n        email_opted_in:\n          type: boolean\n        email_status:\n          type: string\n          enum:\n          - UnengagedMarketable\n          - SingleOptIn\n          - DoubleOptin\n          - Confirmed\n          - UnengagedNonMarketable\n          - NonMarketable\n          - Lockdown\n          - Bounce\n          - HardBounce\n          - Manual\n          - Admin\n          - System\n          - ListUnsubscribe\n          - Feedback\n          - Spam\n          - Invalid\n          - Deactivated\n        family_name:\n          type: string\n        fax_numbers:\n          type: array\n          items:\n            $ref: '#/components/schemas/FaxNumber'\n        given_name:\n          type: string\n        id:\n          type: integer\n          format: int64\n        job_title:\n          type: string\n        last_updated:\n          type: string\n          format: date-time\n        lead_source_id:\n          type: integer\n          format: int64\n        middle_name:\n          type: string\n        owner_id:\n          type: integer\n          format: int64\n        phone_numbers:\n          type: array\n          items:\n            $ref: '#/components/schemas/PhoneNumber'\n        preferred_locale:\n          type: string\n          example: en_US\n        preferred_name:\n          type: string\n        prefix:\n          type: string\n        social_accounts:\n          type: array\n          items:\n            $ref: '#/components/schemas/SocialAccount'\n        source_type:\n          type: string\n          enum:\n          - APPOINTMENT\n          - FORMAPIHOSTED\n          - FORMAPIINTERNAL\n          - WEBFORM\n          - INTERNALFORM\n          - LANDINGPAGE\n          - IMPORT\n          - MANUAL\n          - API\n          - OTHER\n          - UNKNOWN\n        spouse_name:\n          type: string\n        suffix:\n          type: string\n        time_zone:\n          type: string\n        website:\n          type: string\n    EmailAddress:\n      required:\n      - field\n      type: object\n      properties:\n        email:\n          type: string\n        field:\n          type: string\n          enum:\n          - EMAIL1\n          - EMAIL2\n          - EMAIL3\n    CompanyPhoneNumber:\n      type: object\n      properties:\n        extension:\n          type: string\n        number:\n          type: string\n        type:\n          type: string\n    CreditCardAdded:\n      type: object\n      properties:\n        address:\n          $ref: '#/components/schemas/ContactAddress'\n        card_type:\n          type: string\n        contact_id:\n          type: integer\n          format: int64\n        email_address:\n          type: string\n        expiration_month:\n          type: string\n        expiration_year:\n          type: string\n        id:\n          type: integer\n          format: int64\n        maestro_issue_number:\n          type: string\n        maestro_start_date_month:\n          type: string\n        maestro_start_date_year:\n          type: string\n        name_on_card:\n          type: string\n        validation_message:\n          type: string\n        validation_status:\n          type: string\n    AffiliatePaymentList:\n      type: object\n      properties:\n        count:\n          type: integer\n          format: int32\n        next:\n          type: string\n        payments:\n          type: array\n          items:\n            $ref: '#/components/schemas/RestAffiliatePayment'\n        previous:\n          type: string\n    Note:\n      type: object\n      properties:\n        body:\n          type: string\n        contact_id:\n          type: integer\n          format: int64\n        date_created:\n          type: string\n          format: date-time\n        id:\n          type: integer\n          format: int64\n        last_updated:\n          type: string\n          format: date-time\n        last_updated_by:\n          $ref: '#/components/schemas/NoteUser'\n        title:\n          type: string\n        type:\n          type: string\n          enum:\n          - Appointment\n          - Call\n          - Email\n          - Fax\n          - Letter\n          - Other\n        user_id:\n          type: integer\n          format: int64\n    TaggedContact:\n      type: object\n      properties:\n        contact:\n          $ref: '#/components/schemas/BasicContact'\n        date_applied:\n          type: string\n          format: date-time\n    RestApplicationConfigurationModuleAffiliate:\n      type: object\n      properties:\n        choose_affiliate:\n          type: boolean\n        commission:\n          $ref: '#/components/schemas/RestApplicationConfigurationModuleAffiliateCommission'\n        custom_affiliate_url:\n          type: string\n        display_affiliate_ip_address:\n          type: boolean\n        do_not_notify_affiliate:\n          type: boolean\n        skip_pay_if_unused:\n          type: boolean\n        use_referral_history_if_no_tracking_cookie:\n          type: boolean\n    TaggedCompanyList:\n      type: object\n      properties:\n        companies:\n          type: array\n          items:\n            $ref: '#/components/schemas/TaggedCompany'\n        count:\n          type: integer\n          format: int32\n        next:\n          type: string\n        previous:\n          type: string\n    ContactTagList:\n      type: object\n      properties:\n        count:\n          type: integer\n          format: int32\n        next:\n          type: string\n        previous:\n          type: string\n        tags:\n          type: array\n          items:\n            $ref: '#/components/schemas/ContactTag'\n    EmailSentCreateError:\n      type: object\n      properties:\n        email:\n          $ref: '#/components/schemas/EmailSentCreate'\n        error_message:\n          type: string\n    RestApplicationConfigurationModuleOpportunityStatesWin:\n      type: object\n      properties:\n        reasons:\n          type: string\n        stage:\n          type: string\n    ContactOrigin:\n      required:\n      - date\n      - ip_address\n      type: object\n      properties:\n        date:\n          type: string\n          format: date-time\n        ip_address:\n          type: string\n    CreateTagCategory:\n      required:\n      - name\n      type: object\n      properties:\n        description:\n          type: string\n          description: The category description\n        name:\n          type: string\n          description: The category name\n    ProductStatusList:\n      type: object\n      properties:\n        count:\n          type: integer\n          format: int32\n        next:\n          type: string\n        previous:\n          type: string\n        product_statuses:\n          type: array\n          items:\n            $ref: '#/components/schemas/ProductStatus'\n        sync_token:\n          type: string\n    ObjectModel:\n      type: object\n      properties:\n        custom_fields:\n          type: array\n          items:\n            $ref: '#/components/schemas/CustomFieldMetaData'\n        optional_properties:\n          type: array\n          description: These fields are not transmitted by default on this model,\n            but can be requested by specifying them in a comma-separated list in the\n            optional_properties query parameter.\n          items:\n            type: string\n    AddressInformation:\n      type: object\n      properties:\n        company:\n          type: string\n        country_code:\n          type: string\n        first_name:\n          type: string\n        is_invoice_to_company:\n          type: boolean\n        last_name:\n          type: string\n        line1:\n          type: string\n        line2:\n          type: string\n        locality:\n          type: string\n        middle_name:\n          type: string\n        phone:\n          type: string\n        region:\n          type: string\n        zip_code:\n          type: string\n        zip_four:\n          type: string\n    UpdateEmailAddress:\n      required:\n      - opted_in\n      - reason\n      type: object\n      properties:\n        opted_in:\n          type: boolean\n        reason:\n          type: string\n    SimpleOpportunityStage:\n      required:\n      - id\n      type: object\n      properties:\n        details:\n          $ref: '#/components/schemas/StageDetails'\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n        reasons:\n          type: array\n          items:\n            type: string\n    StackTraceElement:\n      type: object\n      properties:\n        className:\n          type: string\n        fileName:\n          type: string\n        lineNumber:\n          type: integer\n          format: int32\n        methodName:\n          type: string\n        nativeMethod:\n          type: boolean\n    SequencePath:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        items:\n          type: array\n          items:\n            $ref: '#/components/schemas/Item'\n    RestApplicationConfigurationModuleApplicationCompany:\n      type: object\n      properties:\n        caller_id_number:\n          type: string\n        city:\n          type: string\n        country:\n          type: string\n        email:\n          type: string\n        name:\n          type: string\n        phone:\n          type: string\n        phone_ext:\n          type: string\n        state:\n          type: string\n        street_address_1:\n          type: string\n        street_address_2:\n          type: string\n        web_logo_url:\n          type: string\n        website:\n          type: string\n        zip:\n          type: string\n    UpdateNote:\n      type: object\n      properties:\n        body:\n          type: string\n        contact_id:\n          type: integer\n          format: int64\n        title:\n          type: string\n        type:\n          type: string\n          enum:\n          - Appointment\n          - Call\n          - Email\n          - Fax\n          - Letter\n          - Other\n        user_id:\n          type: integer\n          format: int64\n    AffiliateProgram:\n      type: object\n      properties:\n        affiliate_id:\n          type: integer\n          format: int64\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n        notes:\n          type: string\n        priority:\n          type: integer\n          format: int32\n    ContactTag:\n      type: object\n      properties:\n        date_applied:\n          type: string\n          format: date-time\n        tag:\n          $ref: '#/components/schemas/SimpleTag'\n    Merchant:\n      type: object\n      properties:\n        account_name:\n          type: string\n        id:\n          type: integer\n          format: int64\n        is_test:\n          type: boolean\n        type:\n          type: string\n    ContactCreditCard:\n      type: object\n      properties:\n        card_number:\n          type: string\n        card_type:\n          type: string\n        id:\n          type: integer\n          format: int64\n        validation_status:\n          type: string\n    CreateProductImage:\n      required:\n      - file_data\n      - file_name\n      type: object\n      properties:\n        checksum:\n          type: string\n          description: SHA256 checksum of image in Hex.\n        file_data:\n          type: string\n          description: The image data, base64 encoded.\n        file_name:\n          type: string\n          description: 'The name of the file with extension, must match file data.  Acceptable\n            file types:  [.png, .gif, .jpg, .jpeg].'\n    CampaignLandingPageNodeDTO:\n      type: object\n      properties:\n        formId:\n          type: string\n        id:\n          type: string\n        landingPageId:\n          type: string\n        leadBucketIds:\n          type: array\n          items:\n            type: string\n        name:\n          type: string\n        properties:\n          type: object\n          properties: {}\n        ready:\n          type: boolean\n        type:\n          type: string\n          enum:\n          - WebForm\n          - LandingPage\n          - Survey\n          - LinkClick\n          - EmailOpened\n          - Score\n          - Purchase\n          - FailedPurchase\n          - Quote\n          - WebsiteTrigger\n          - InternalForm\n          - SmartForm\n          - AppointmentEvent\n          - Task\n          - StageMove\n          - Note\n          - Tag\n          - PipelineStageMove\n          - UnlayerLandingPage\n          - GroSocial\n          - TwitterForm\n          - API\n          - WordPress\n          - NewLandingPage\n          - HelloSign\n    RequestCompanyReference:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n    HistoricalCounts:\n      type: object\n      properties:\n        24_hours:\n          type: integer\n          format: int32\n        30_days:\n          type: integer\n          format: int32\n    CreateAffiliate:\n      required:\n      - code\n      - contact_id\n      - password\n      type: object\n      properties:\n        code:\n          type: string\n        contact_id:\n          type: integer\n          format: int64\n        name:\n          type: string\n        notify_on_lead:\n          type: boolean\n        notify_on_sale:\n          type: boolean\n        parent_id:\n          type: integer\n          format: int64\n        password:\n          type: string\n        status:\n          type: string\n          enum:\n          - active\n          - inactive\n        track_leads_for:\n          type: integer\n          format: int32\n    InvoicePayment:\n      type: object\n      properties:\n        amount:\n          type: number\n        id:\n          type: integer\n          format: int64\n        invoice_id:\n          type: integer\n          format: int64\n        last_updated:\n          type: string\n          format: date-time\n        note:\n          type: string\n        pay_date:\n          type: string\n          format: date-time\n        pay_status:\n          type: string\n        payment_id:\n          type: integer\n          format: int64\n        refund_invoice_payment_id:\n          type: integer\n          format: int64\n        skip_commission:\n          type: boolean\n    ProvincesByCode:\n      required:\n      - provinces\n      type: object\n      properties:\n        provinces:\n          type: object\n          additionalProperties:\n            type: string\n          description: A key-value pair of province code and province name.\n    RestUser:\n      required:\n      - id\n      type: object\n      properties:\n        address:\n          $ref: '#/components/schemas/Address'\n        company_name:\n          type: string\n        created_by:\n          type: integer\n          format: int64\n        date_created:\n          type: string\n          format: date-time\n        email_address:\n          type: string\n        family_name:\n          type: string\n        fax_numbers:\n          type: array\n          items:\n            $ref: '#/components/schemas/FaxNumber'\n        given_name:\n          type: string\n        global_user_id:\n          type: integer\n          format: int64\n        id:\n          type: integer\n          format: int64\n        infusionsoft_id:\n          type: string\n        job_title:\n          type: string\n        last_updated:\n          type: string\n          format: date-time\n        last_updated_by:\n          type: integer\n          format: int64\n        middle_name:\n          type: string\n        partner:\n          type: boolean\n        phone_numbers:\n          type: array\n          items:\n            $ref: '#/components/schemas/PhoneNumber'\n        preferred_name:\n          type: string\n        status:\n          type: string\n          enum:\n          - Active\n          - Invited\n          - Inactive\n        time_zone:\n          type: string\n        website:\n          type: string\n    AffiliateRedirect:\n      type: object\n      properties:\n        affiliate_id:\n          type: integer\n          format: int64\n        id:\n          type: integer\n          format: int64\n        local_url_code:\n          type: string\n        name:\n          type: string\n        program_ids:\n          type: array\n          items:\n            type: integer\n            format: int64\n        redirect_url:\n          type: string\n    CampaignNodeDTO:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        properties:\n          type: object\n          properties: {}\n        ready:\n          type: boolean\n        type:\n          type: string\n          enum:\n          - WebForm\n          - LandingPage\n          - Survey\n          - LinkClick\n          - EmailOpened\n          - Score\n          - Purchase\n          - FailedPurchase\n          - Quote\n          - WebsiteTrigger\n          - InternalForm\n          - SmartForm\n          - AppointmentEvent\n          - Task\n          - StageMove\n          - Note\n          - Tag\n          - PipelineStageMove\n          - UnlayerLandingPage\n          - GroSocial\n          - TwitterForm\n          - API\n          - WordPress\n          - NewLandingPage\n          - HelloSign\n    AffiliateCommissionList:\n      type: object\n      properties:\n        commissions:\n          type: array\n          items:\n            $ref: '#/components/schemas/AffiliateCommission'\n        count:\n          type: integer\n          format: int32\n        next:\n          type: string\n        previous:\n          type: string\n    ProductStatus:\n      type: object\n      properties:\n        product:\n          $ref: '#/components/schemas/Product_'\n        status:\n          type: string\n          enum:\n          - CREATED\n          - UPDATED\n          - DELETED\n    RestApplicationConfigurationModuleOpportunityStatesActive:\n      type: object\n      properties:\n        stages:\n          type: string\n    CreateUser:\n      required:\n      - email\n      - given_name\n      type: object\n      properties:\n        admin:\n          type: boolean\n        email:\n          type: string\n        given_name:\n          type: string\n        partner:\n          type: boolean\n    CreateRestCustomFieldOption:\n      type: object\n      properties:\n        label:\n          type: string\n        options:\n          type: array\n          items:\n            $ref: '#/components/schemas/CreateRestCustomFieldOption'\n    ContactList:\n      type: object\n      properties:\n        contacts:\n          type: array\n          items:\n            $ref: '#/components/schemas/RestPartialContact'\n        count:\n          type: integer\n          format: int32\n        next:\n          type: string\n        previous:\n          type: string\n    AchieveApiGoalEvent:\n      required:\n      - contact_id\n      type: object\n      properties:\n        contact_id:\n          type: integer\n          format: int64\n    RestApplicationConfigurationModuleForms:\n      type: object\n      properties:\n        spam_filters_enabled:\n          type: boolean\n    SetOfIds:\n      required:\n      - ids\n      type: object\n      properties:\n        ids:\n          type: array\n          items:\n            type: integer\n            format: int64\n    EmailSentCreate:\n      required:\n      - sent_to_address\n      type: object\n      properties:\n        clicked_date:\n          type: string\n          format: date-time\n        contact_id:\n          type: integer\n          format: int64\n        headers:\n          type: string\n        html_content:\n          type: string\n          description: Base64 encoded HTML\n        id:\n          type: integer\n          format: int64\n        opened_date:\n          type: string\n          format: date-time\n        original_provider:\n          type: string\n          description: Provider that sent the email case insensitive, must be in list\n            [GOOGLE, INFUSIONSOFT].  If omitted gets mapped to UNKNOWN.\n          enum:\n          - UNKNOWN\n          - INFUSIONSOFT\n          - MICROSOFT\n          - GOOGLE\n        original_provider_id:\n          type: string\n          description: Provider id that sent the email, must be unique when combined\n            with provider.  If omitted a UUID without dashes is autogenerated for\n            the record.\n        plain_content:\n          type: string\n          description: Base64 encoded text\n        provider_source_id:\n          type: string\n          description: The email address of the synced email account that generated\n            this message.\n        received_date:\n          type: string\n          format: date-time\n        sent_date:\n          type: string\n          format: date-time\n        sent_from_address:\n          type: string\n        sent_from_reply_address:\n          type: string\n        sent_to_address:\n          type: string\n        sent_to_bcc_addresses:\n          type: string\n        sent_to_cc_addresses:\n          type: string\n        subject:\n          type: string\n    ProductList:\n      type: object\n      properties:\n        count:\n          type: integer\n          format: int32\n        next:\n          type: string\n        previous:\n          type: string\n        products:\n          type: array\n          items:\n            $ref: '#/components/schemas/Product_'\n        sync_token:\n          type: string\n    OrderItemTax:\n      type: object\n      properties:\n        amount:\n          type: number\n          format: double\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n        orderItemId:\n          type: integer\n          format: int64\n        rate:\n          type: number\n          format: double\n        taxTemplateId:\n          type: integer\n          format: int64\n    Product_:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        product_desc:\n          type: string\n        product_name:\n          type: string\n        product_options:\n          type: array\n          items:\n            $ref: '#/components/schemas/ProductOption'\n        product_price:\n          type: number\n          format: double\n        product_short_desc:\n          type: string\n        sku:\n          type: string\n        status:\n          type: integer\n          format: int32\n        subscription_only:\n          type: boolean\n        subscription_plans:\n          type: array\n          items:\n            $ref: '#/components/schemas/SubscriptionPlan_'\n        url:\n          type: string\n    Relationship:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        linked_contact_id:\n          type: integer\n          format: int64\n        relationship_type_id:\n          type: integer\n          format: int64\n    OrderItem:\n      type: object\n      properties:\n        billingCycle:\n          type: integer\n          format: int32\n        cost:\n          type: number\n          format: double\n        description:\n          type: string\n        discount:\n          type: number\n          format: double\n        frequency:\n          type: integer\n          format: int32\n        id:\n          type: integer\n          format: int64\n        jobRecurringId:\n          type: integer\n          format: int64\n        name:\n          type: string\n        notes:\n          type: string\n        numberOfPayments:\n          type: integer\n          format: int32\n        orderItemTaxes:\n          type: array\n          items:\n            $ref: '#/components/schemas/OrderItemTax'\n        price:\n          type: number\n          format: double\n        product:\n          $ref: '#/components/schemas/Product_'\n        quantity:\n          type: integer\n          format: int32\n        recurringBilling:\n          type: boolean\n        specialAmount:\n          type: number\n          format: double\n        specialId:\n          type: integer\n          format: int64\n        specialPctOrAmt:\n          type: integer\n          format: int32\n        type:\n          type: string\n    PhoneNumber:\n      required:\n      - field\n      type: object\n      properties:\n        extension:\n          type: string\n        field:\n          type: string\n          enum:\n          - PHONE1\n          - PHONE2\n          - PHONE3\n          - PHONE4\n          - PHONE5\n        number:\n          type: string\n        type:\n          type: string\n    SubscriptionList:\n      type: object\n      properties:\n        count:\n          type: integer\n          format: int32\n        next:\n          type: string\n        previous:\n          type: string\n        subscriptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/Subscription'\n    EmailSendRequestAttachment:\n      type: object\n      properties:\n        file_data:\n          type: string\n          description: The content of the attachment, encoded in Base64\n        file_name:\n          type: string\n          description: The filename of the attached file, including extension\n    CountriesByCode:\n      required:\n      - countries\n      type: object\n      properties:\n        countries:\n          type: object\n          additionalProperties:\n            type: string\n          description: A key-value pair of country code and country name.\n    Tag:\n      required:\n      - id\n      - name\n      type: object\n      properties:\n        category:\n          $ref: '#/components/schemas/TagCategory'\n        description:\n          type: string\n          description: The tag description\n        id:\n          type: integer\n          description: The id for the tag\n          format: int64\n        name:\n          type: string\n          description: The tag name\n    AccountProfile:\n      type: object\n      properties:\n        address:\n          $ref: '#/components/schemas/ContactAddress'\n        business_goals:\n          type: array\n          description: The goals of this business, ie. Grow Business, Convert more\n            leads\n          items:\n            type: string\n        business_primary_color:\n          type: string\n        business_secondary_color:\n          type: string\n        business_type:\n          type: string\n          description: The type of business\n        currency_code:\n          type: string\n        email:\n          type: string\n        language_tag:\n          type: string\n        logo_url:\n          type: string\n        name:\n          type: string\n        phone:\n          type: string\n        phone_ext:\n          type: string\n        time_zone:\n          type: string\n        website:\n          type: string\n      # description: Information about the company that owns/uses this account\n    RestApplicationConfigurationModuleAffiliateCommission:\n      type: object\n      properties:\n        calculation_type:\n          type: string\n        levels:\n          type: integer\n          format: int32\n        participant_types:\n          type: string\n    CustomFieldMetaData:\n      type: object\n      properties:\n        field_name:\n          type: string\n        field_type:\n          type: string\n          enum:\n          - Currency\n          - Date\n          - DateTime\n          - DayOfWeek\n          - Drilldown\n          - Email\n          - Month\n          - ListBox\n          - Name\n          - WholeNumber\n          - DecimalNumber\n          - Percent\n          - PhoneNumber\n          - Radio\n          - Dropdown\n          - SocialSecurityNumber\n          - State\n          - Text\n          - TextArea\n          - User\n          - UserListBox\n          - Website\n          - Year\n          - YesNo\n        id:\n          type: integer\n          format: int64\n        label:\n          type: string\n        options:\n          type: array\n          items:\n            $ref: '#/components/schemas/CustomFieldOption'\n        record_type:\n          type: string\n          enum:\n          - CONTACT\n          - REFERRAL_PARTNER\n          - OPPORTUNITY\n          - TASK_NOTE_APPOINTMENT\n          - COMPANY\n          - ORDER\n          - SUBSCRIPTION\n    CustomFieldValue:\n      type: object\n      properties:\n        content:\n          type: object\n          properties: {}\n        id:\n          type: integer\n          format: int64\n    EntryLongString:\n      type: object\n      properties:\n        key:\n          type: string\n          enum:\n          - SUCCESS\n          - DUPLICATE\n          - CONTACT_NOT_FOUND\n          - TAG_ID_NOT_FOUND\n          - FAILURE\n          - NO_PERMISSION\n    Company:\n      type: object\n      properties:\n        address:\n          $ref: '#/components/schemas/CompanyAddress'\n        company_name:\n          type: string\n        custom_fields:\n          type: array\n          items:\n            $ref: '#/components/schemas/CustomFieldValue'\n        email_address:\n          type: string\n        email_opted_in:\n          type: boolean\n        email_status:\n          type: string\n          enum:\n          - UnengagedMarketable\n          - SingleOptIn\n          - DoubleOptin\n          - Confirmed\n          - UnengagedNonMarketable\n          - NonMarketable\n          - Lockdown\n          - Bounce\n          - HardBounce\n          - Manual\n          - Admin\n          - System\n          - ListUnsubscribe\n          - Feedback\n          - Spam\n          - Invalid\n          - Deactivated\n        fax_number:\n          $ref: '#/components/schemas/CompanyFaxNumber'\n        id:\n          type: integer\n          format: int64\n        notes:\n          type: string\n        phone_number:\n          $ref: '#/components/schemas/CompanyPhoneNumber'\n        website:\n          type: string\n    Task:\n      type: object\n      properties:\n        completed:\n          type: boolean\n        completion_date:\n          type: string\n        contact:\n          $ref: '#/components/schemas/BasicContact'\n        creation_date:\n          type: string\n        description:\n          type: string\n        due_date:\n          type: string\n        modification_date:\n          type: string\n        priority:\n          type: integer\n          format: int32\n        remind_time:\n          type: integer\n          description: Value in minutes before start_date to show pop-up reminder.  Acceptable\n            values are [5,10,15,30,60,120,240,480,1440,2880]\n          format: int32\n        title:\n          type: string\n        type:\n          type: string\n        url:\n          type: string\n        user_id:\n          type: integer\n          format: int64\n    CompanyList:\n      type: object\n      properties:\n        companies:\n          type: array\n          items:\n            $ref: '#/components/schemas/Company'\n        count:\n          type: integer\n          format: int32\n        next:\n          type: string\n        previous:\n          type: string\n    EcommerceReportingShippingInformation:\n      type: object\n      properties:\n        city:\n          type: string\n        company:\n          type: string\n        country:\n          type: string\n        first_name:\n          type: string\n        id:\n          type: integer\n          format: int64\n        invoiceToCompany:\n          type: boolean\n        last_name:\n          type: string\n        middle_name:\n          type: string\n        phone:\n          type: string\n        state:\n          type: string\n        street1:\n          type: string\n        street2:\n          type: string\n        zip:\n          type: string\n    RestApplicationConfigurationModuleFulfillment:\n      type: object\n      properties:\n        default_message_fields:\n          type: string\n        default_message_to:\n          type: string\n    CheckListItemDetails:\n      type: object\n      properties:\n        description:\n          type: string\n        done_date:\n          type: string\n          format: date-time\n        id:\n          type: integer\n          format: int64\n        instance_id:\n          type: integer\n          format: int64\n        item_order:\n          type: integer\n          format: int32\n        required:\n          type: boolean\n    TaskList:\n      type: object\n      properties:\n        count:\n          type: integer\n          format: int32\n        next:\n          type: string\n        previous:\n          type: string\n        sync_token:\n          type: string\n        tasks:\n          type: array\n          items:\n            $ref: '#/components/schemas/Task'\n    CreateOrder:\n      required:\n      - contact_id\n      - order_date\n      - order_items\n      - order_title\n      - order_type\n      type: object\n      properties:\n        contact_id:\n          type: integer\n          format: int64\n        lead_affiliate_id:\n          type: integer\n          format: int64\n        order_date:\n          type: string\n          format: date-time\n        order_items:\n          type: array\n          items:\n            $ref: '#/components/schemas/CreateOrderItem'\n        order_title:\n          type: string\n        order_type:\n          type: string\n          enum:\n          - Offline\n          - Online\n        promo_codes:\n          type: array\n          description: Uses multiple strings as promo codes. The corresponding discount\n            will be applied to the order.\n          items:\n            type: string\n        sales_affiliate_id:\n          type: integer\n          format: int64\n        shipping_address:\n          $ref: '#/components/schemas/AddressInformation'\n    SubscriptionPlan_:\n      type: object\n      properties:\n        active:\n          type: boolean\n        cycle:\n          type: integer\n          format: int32\n        frequency:\n          type: integer\n          format: int32\n        id:\n          type: integer\n          format: int64\n        number_of_cycles:\n          type: integer\n          format: int32\n        plan_price:\n          type: number\n          format: double\n        subscription_plan_index:\n          type: integer\n          format: int32\n        subscription_plan_name:\n          type: string\n        url:\n          type: string\n    CreateRestCustomField:\n      required:\n      - field_type\n      - label\n      type: object\n      properties:\n        field_type:\n          type: string\n          enum:\n          - Currency\n          - Date\n          - DateTime\n          - DayOfWeek\n          - Drilldown\n          - Email\n          - Month\n          - ListBox\n          - Name\n          - WholeNumber\n          - DecimalNumber\n          - Percent\n          - PhoneNumber\n          - Radio\n          - Dropdown\n          - SocialSecurityNumber\n          - State\n          - Text\n          - TextArea\n          - User\n          - UserListBox\n          - Website\n          - Year\n          - YesNo\n        group_id:\n          type: integer\n          description: An optional tab group to place the field under in the interface.  If\n            not specified, will default to the 'Custom Fields' tab.\n          format: int64\n        label:\n          type: string\n        options:\n          type: array\n          items:\n            $ref: '#/components/schemas/CreateRestCustomFieldOption'\n        user_group_id:\n          type: integer\n          description: An optional user group to choose from when selecting values\n            for User or UserListBox fields.\n          format: int64\n    CreateSubscription:\n      required:\n      - contact_id\n      type: object\n      properties:\n        allow_duplicate:\n          type: boolean\n          description: If true, it will disable the check to see if there is already\n            an identical subscription for the contact. Default is false.\n          example: false\n        allow_tax:\n          type: boolean\n          description: Only works if the product the product subscription is for is\n            taxable. Default is false.\n          example: false\n        auto_charge:\n          type: boolean\n          description: Defaults to true.\n          example: false\n        billing_amount:\n          type: number\n          description: Must be 0 or greater. Default is the price in the product subscription.\n          format: double\n        contact_id:\n          type: integer\n          format: int64\n        credit_card_id:\n          type: integer\n          description: Default is the contact's most recently used card, if auto charge\n            is true. Default is 0 otherwise.\n          format: int64\n        first_bill_date:\n          type: string\n          description: The first day the subscription will bill, in EST. Must not\n            be in the past. Default is today.\n          format: date\n        payment_gateway_id:\n          type: integer\n          description: Default is the app's default merchant.\n          format: int64\n        quantity:\n          type: integer\n          description: Must be greater than 0. Default is 1.\n          format: int32\n        sale_affiliate_id:\n          type: integer\n          format: int64\n        subscription_plan_id:\n          type: integer\n          description: Id of the product subscription.\n          format: int64\n    RestEmailAddress:\n      required:\n      - email\n      - opted_in\n      - status\n      type: object\n      properties:\n        email:\n          type: string\n        opted_in:\n          type: boolean\n        status:\n          type: string\n          enum:\n          - Unengaged Marketable\n          - Unconfirmed\n          - Confirmed (Legacy)\n          - Confirmed\n          - Unengaged NonMarketable\n          - Non-marketable\n          - Lockdown\n          - Soft Bounce\n          - Hard Bounce\n          - Opt-Out\n          - 'Opt-Out: Admin'\n          - 'Opt-Out: System'\n          - List Unsubscribe\n          - Provided Feedback\n          - Reported Spam\n          - Invalid Email\n          - Deactivated/Delinquent Mailbox\n    OpportunityContact:\n      required:\n      - id\n      type: object\n      properties:\n        company_name:\n          type: string\n        email:\n          type: string\n        first_name:\n          type: string\n        id:\n          type: integer\n          format: int64\n        job_title:\n          type: string\n        last_name:\n          type: string\n        phone_number:\n          type: string\n    RestApplicationConfigurationModuleTemplate:\n      type: object\n      properties:\n        default_country_code:\n          type: integer\n          format: int32\n        default_user_id:\n          type: integer\n          format: int64\n    CategoryReference:\n      required:\n      - id\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The id for the tag category\n          format: int64\n    RestHook:\n      type: object\n      properties:\n        eventKey:\n          type: string\n        hookUrl:\n          type: string\n        key:\n          type: string\n        status:\n          type: string\n          enum:\n          - Unverified\n          - Verified\n          - Inactive\n    RestApplicationConfigurationModuleEMail:\n      type: object\n      properties:\n        append_contact_key_to_links:\n          type: boolean\n        default_opt_in_link:\n          type: string\n        default_opt_out_link:\n          type: string\n        hide_emails_to_and_from_domains:\n          type: string\n        whitelisted_domains:\n          type: string\n    ProductOptionValue:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        index:\n          type: integer\n          format: int64\n        is_default:\n          type: boolean\n        label:\n          type: string\n        price_adjustment:\n          type: number\n          format: double\n        sku:\n          type: string\n    FullContact:\n      type: object\n      properties:\n        ScoreValue:\n          type: string\n        addresses:\n          type: array\n          items:\n            $ref: '#/components/schemas/ContactAddress'\n        anniversary:\n          type: string\n          format: date-time\n        birthday:\n          type: string\n          format: date-time\n        company:\n          $ref: '#/components/schemas/CompanyReference'\n        company_name:\n          type: string\n        contact_type:\n          type: string\n        custom_fields:\n          type: array\n          items:\n            $ref: '#/components/schemas/CustomFieldValue'\n        date_created:\n          type: string\n          format: date-time\n        email_addresses:\n          type: array\n          items:\n            $ref: '#/components/schemas/EmailAddress'\n        email_opted_in:\n          type: boolean\n        email_status:\n          type: string\n          enum:\n          - UnengagedMarketable\n          - SingleOptIn\n          - DoubleOptin\n          - Confirmed\n          - UnengagedNonMarketable\n          - NonMarketable\n          - Lockdown\n          - Bounce\n          - HardBounce\n          - Manual\n          - Admin\n          - System\n          - ListUnsubscribe\n          - Feedback\n          - Spam\n          - Invalid\n          - Deactivated\n        family_name:\n          type: string\n        fax_numbers:\n          type: array\n          items:\n            $ref: '#/components/schemas/FaxNumber'\n        given_name:\n          type: string\n        id:\n          type: integer\n          format: int64\n        job_title:\n          type: string\n        last_updated:\n          type: string\n          format: date-time\n        lead_source_id:\n          type: integer\n          format: int64\n        middle_name:\n          type: string\n        opt_in_reason:\n          type: string\n        origin:\n          $ref: '#/components/schemas/ContactOrigin'\n        owner_id:\n          type: integer\n          format: int64\n        phone_numbers:\n          type: array\n          items:\n            $ref: '#/components/schemas/PhoneNumber'\n        preferred_locale:\n          type: string\n          example: en_US\n        preferred_name:\n          type: string\n        prefix:\n          type: string\n        relationships:\n          type: array\n          items:\n            $ref: '#/components/schemas/Relationship'\n        social_accounts:\n          type: array\n          items:\n            $ref: '#/components/schemas/SocialAccount'\n        source_type:\n          type: string\n          enum:\n          - APPOINTMENT\n          - FORMAPIHOSTED\n          - FORMAPIINTERNAL\n          - WEBFORM\n          - INTERNALFORM\n          - LANDINGPAGE\n          - IMPORT\n          - MANUAL\n          - API\n          - OTHER\n          - UNKNOWN\n        spouse_name:\n          type: string\n        suffix:\n          type: string\n        tag_ids:\n          type: array\n          items:\n            type: integer\n            format: int64\n        time_zone:\n          type: string\n        website:\n          type: string\n    RestApplicationConfigurationModuleApplication:\n      type: object\n      properties:\n        company:\n          $ref: '#/components/schemas/RestApplicationConfigurationModuleApplicationCompany'\n        default_view_locale:\n          type: string\n        features_enabled:\n          $ref: '#/components/schemas/RestApplicationConfigurationModuleApplicationFeaturesEnabled'\n        time_zone:\n          type: string\n    CreateContactOrigin:\n      required:\n      - ip_address\n      type: object\n      properties:\n        ip_address:\n          type: string\n    CreateOrPatchContact:\n      type: object\n      properties:\n        addresses:\n          type: array\n          items:\n            $ref: '#/components/schemas/ContactAddress'\n        anniversary:\n          type: string\n          format: date-time\n        birthday:\n          type: string\n          format: date-time\n        company:\n          $ref: '#/components/schemas/RequestCompanyReference'\n        contact_type:\n          type: string\n        custom_fields:\n          type: array\n          items:\n            $ref: '#/components/schemas/CustomFieldValue'\n        email_addresses:\n          type: array\n          items:\n            $ref: '#/components/schemas/EmailAddress'\n        family_name:\n          type: string\n        fax_numbers:\n          type: array\n          items:\n            $ref: '#/components/schemas/FaxNumber'\n        given_name:\n          type: string\n        job_title:\n          type: string\n        lead_source_id:\n          type: integer\n          format: int64\n        middle_name:\n          type: string\n        opt_in_reason:\n          type: string\n        origin:\n          $ref: '#/components/schemas/CreateContactOrigin'\n        owner_id:\n          type: integer\n          format: int64\n        phone_numbers:\n          type: array\n          items:\n            $ref: '#/components/schemas/PhoneNumber'\n        preferred_locale:\n          type: string\n          example: en_US\n        preferred_name:\n          type: string\n        prefix:\n          type: string\n        social_accounts:\n          type: array\n          items:\n            $ref: '#/components/schemas/SocialAccount'\n        source_type:\n          type: string\n          enum:\n          - APPOINTMENT\n          - FORMAPIHOSTED\n          - FORMAPIINTERNAL\n          - WEBFORM\n          - INTERNALFORM\n          - LANDINGPAGE\n          - IMPORT\n          - MANUAL\n          - API\n          - OTHER\n          - UNKNOWN\n        spouse_name:\n          type: string\n        suffix:\n          type: string\n        time_zone:\n          type: string\n        website:\n          type: string\n    OpportunityList:\n      type: object\n      properties:\n        count:\n          type: integer\n          format: int32\n        next:\n          type: string\n        opportunities:\n          type: array\n          items:\n            $ref: '#/components/schemas/Opportunity'\n        previous:\n          type: string\n    Order:\n      type: object\n      properties:\n        contact:\n          $ref: '#/components/schemas/EcommerceReportingOrderContactDetails'\n        creation_date:\n          type: string\n        id:\n          type: integer\n          format: int64\n        lead_affiliate_id:\n          type: integer\n          format: int64\n        modification_date:\n          type: string\n        notes:\n          type: string\n        order_date:\n          type: string\n        order_items:\n          type: array\n          items:\n            $ref: '#/components/schemas/OrderItem'\n        payment_plan:\n          $ref: '#/components/schemas/PaymentPlan'\n        refund_total:\n          type: number\n          format: double\n        sales_affiliate_id:\n          type: integer\n          format: int64\n        shipping_information:\n          $ref: '#/components/schemas/AddressInformation'\n        status:\n          type: string\n        title:\n          type: string\n        total:\n          type: number\n          format: double\n        total_due:\n          type: number\n          format: double\n        total_paid:\n          type: number\n          format: double\n    GoalEventResultDTO:\n      type: object\n      properties:\n        campaign_id:\n          type: integer\n          format: int64\n        goal_id:\n          type: integer\n          format: int64\n        message:\n          type: string\n        success:\n          type: boolean\n    FileList:\n      type: object\n      properties:\n        count:\n          type: integer\n          format: int32\n        files:\n          type: array\n          items:\n            $ref: '#/components/schemas/FileDescriptor'\n        next:\n          type: string\n        previous:\n          type: string\n    Setting:\n      type: object\n      properties:\n        value:\n          type: string\n    AffiliateCommission:\n      type: object\n      properties:\n        amount_earned:\n          type: number\n          format: float\n        contact_first_name:\n          type: string\n        contact_id:\n          type: integer\n          format: int64\n        contact_last_name:\n          type: string\n        date_earned:\n          type: string\n          format: date-time\n        description:\n          type: string\n        invoice_id:\n          type: integer\n          format: int64\n        product_name:\n          type: string\n        sales_affiliate_id:\n          type: integer\n          format: int64\n        sold_by_first_name:\n          type: string\n        sold_by_last_name:\n          type: string\n    Sequence:\n      type: object\n      properties:\n        active_contact_count:\n          type: integer\n          format: int32\n        active_contact_count_completed:\n          type: integer\n          format: int32\n        historical_contact_count:\n          $ref: '#/components/schemas/HistoricalCounts'\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n        paths:\n          type: array\n          items:\n            $ref: '#/components/schemas/SequencePath'\n    TransactionList:\n      type: object\n      properties:\n        count:\n          type: integer\n          format: int32\n        next:\n          type: string\n        previous:\n          type: string\n        transactions:\n          type: array\n          items:\n            $ref: '#/components/schemas/EcommerceReportingTransaction'\n    AffiliateClawbackList:\n      type: object\n      properties:\n        clawbacks:\n          type: array\n          items:\n            $ref: '#/components/schemas/RestAffiliateClawback'\n        count:\n          type: integer\n          format: int32\n        next:\n          type: string\n        previous:\n          type: string\n    UpsertContact:\n      type: object\n      properties:\n        addresses:\n          type: array\n          items:\n            $ref: '#/components/schemas/ContactAddress'\n        anniversary:\n          type: string\n          format: date-time\n        birthday:\n          type: string\n          format: date-time\n        company:\n          $ref: '#/components/schemas/RequestCompanyReference'\n        contact_type:\n          type: string\n        custom_fields:\n          type: array\n          items:\n            $ref: '#/components/schemas/CustomFieldValue'\n        duplicate_option:\n          type: string\n          enum:\n          - Email\n          - EmailAndName\n        email_addresses:\n          type: array\n          items:\n            $ref: '#/components/schemas/EmailAddress'\n        family_name:\n          type: string\n        fax_numbers:\n          type: array\n          items:\n            $ref: '#/components/schemas/FaxNumber'\n        given_name:\n          type: string\n        job_title:\n          type: string\n        lead_source_id:\n          type: integer\n          format: int64\n        middle_name:\n          type: string\n        opt_in_reason:\n          type: string\n        origin:\n          $ref: '#/components/schemas/CreateContactOrigin'\n        owner_id:\n          type: integer\n          format: int64\n        phone_numbers:\n          type: array\n          items:\n            $ref: '#/components/schemas/PhoneNumber'\n        preferred_locale:\n          type: string\n          example: en_US\n        preferred_name:\n          type: string\n        prefix:\n          type: string\n        social_accounts:\n          type: array\n          items:\n            $ref: '#/components/schemas/SocialAccount'\n        source_type:\n          type: string\n          enum:\n          - APPOINTMENT\n          - FORMAPIHOSTED\n          - FORMAPIINTERNAL\n          - WEBFORM\n          - INTERNALFORM\n          - LANDINGPAGE\n          - IMPORT\n          - MANUAL\n          - API\n          - OTHER\n          - UNKNOWN\n        spouse_name:\n          type: string\n        suffix:\n          type: string\n        time_zone:\n          type: string\n        website:\n          type: string\n    EmailSendRequest:\n      required:\n      - contacts\n      - subject\n      - user_id\n      type: object\n      properties:\n        address_field:\n          type: string\n          description: Email field of each Contact record to address the email to,\n            such as 'Email', 'EmailAddress2', 'EmailAddress3' or '_CustomFieldName',\n            defaulting to the contact's primary email\n        attachments:\n          type: array\n          description: Attachments to be sent with each copy of the email, maximum\n            of 10 with size of 1MB each\n          items:\n            $ref: '#/components/schemas/EmailSendRequestAttachment'\n        contacts:\n          type: array\n          description: An array of Contact Ids to receive the email\n          items:\n            type: integer\n            format: int64\n        html_content:\n          type: string\n          description: The HTML-formatted content of the email, encoded in Base64\n        plain_content:\n          type: string\n          description: The plain-text content of the email, encoded in Base64\n        subject:\n          type: string\n          description: The subject line of the email\n        user_id:\n          type: integer\n          description: The infusionsoft user to send the email on behalf of\n          format: int64\n    Campaign:\n      type: object\n      properties:\n        active_contact_count:\n          type: integer\n          format: int32\n        completed_contact_count:\n          type: integer\n          format: int32\n        created_by_global_id:\n          type: integer\n          format: int64\n        date_created:\n          type: string\n          format: date-time\n        error_message:\n          type: string\n        goals:\n          type: array\n          items:\n            $ref: '#/components/schemas/Goal'\n        id:\n          type: integer\n          format: int64\n        locked:\n          type: boolean\n        name:\n          type: string\n        published_date:\n          type: string\n          format: date-time\n        published_status:\n          type: boolean\n        published_time_zone:\n          type: string\n        sequences:\n          type: array\n          items:\n            $ref: '#/components/schemas/Sequence'\n        time_zone:\n          type: string\n    RestApplicationConfigurationModuleContactAddressLabels:\n      type: object\n      properties:\n        line_1:\n          type: string\n        line_2:\n          type: string\n        line_3:\n          type: string\n    RestApplicationConfiguration:\n      type: object\n      properties:\n        affiliate:\n          $ref: '#/components/schemas/RestApplicationConfigurationModuleAffiliate'\n        application:\n          $ref: '#/components/schemas/RestApplicationConfigurationModuleApplication'\n        appointment:\n          $ref: '#/components/schemas/RestApplicationConfigurationModuleAppointment'\n        contact:\n          $ref: '#/components/schemas/RestApplicationConfigurationModuleContact'\n        ecommerce:\n          $ref: '#/components/schemas/RestApplicationConfigurationModuleECommerce'\n        email:\n          $ref: '#/components/schemas/RestApplicationConfigurationModuleEMail'\n        forms:\n          $ref: '#/components/schemas/RestApplicationConfigurationModuleForms'\n        fulfillment:\n          $ref: '#/components/schemas/RestApplicationConfigurationModuleFulfillment'\n        invoice:\n          $ref: '#/components/schemas/RestApplicationConfigurationModuleInvoice'\n        note:\n          $ref: '#/components/schemas/RestApplicationConfigurationModuleNote'\n        opportunity:\n          $ref: '#/components/schemas/RestApplicationConfigurationModuleOpportunity'\n        task:\n          $ref: '#/components/schemas/RestApplicationConfigurationModuleTask'\n        template:\n          $ref: '#/components/schemas/RestApplicationConfigurationModuleTemplate'\n    BasicContact:\n      type: object\n      properties:\n        email:\n          type: string\n        first_name:\n          type: string\n        id:\n          type: integer\n          format: int64\n        last_name:\n          type: string\n    PaymentPlan:\n      required:\n      - days_between_payments\n      - number_of_payments\n      - plan_start_date\n      type: object\n      properties:\n        auto_charge:\n          type: boolean\n        credit_card_id:\n          type: integer\n          format: int64\n        days_between_payments:\n          type: integer\n          format: int32\n        initial_payment_amount:\n          type: number\n          format: double\n        initial_payment_date:\n          type: string\n          format: date\n        number_of_payments:\n          type: integer\n          format: int32\n        payment_gateway:\n          $ref: '#/components/schemas/PaymentGateway'\n        plan_start_date:\n          type: string\n          format: date\n    Throwable:\n      type: object\n      properties:\n        cause:\n          $ref: '#/components/schemas/Throwable'\n        localizedMessage:\n          type: string\n        message:\n          type: string\n        stackTrace:\n          type: array\n          items:\n            $ref: '#/components/schemas/StackTraceElement'\n        suppressed:\n          type: array\n          items:\n            $ref: '#/components/schemas/Throwable'\n    UserInfoDTO:\n      required:\n      - email\n      - family_name\n      - given_name\n      - global_user_id\n      - infusionsoft_id\n      - sub\n      type: object\n      properties:\n        email:\n          type: string\n        family_name:\n          type: string\n        given_name:\n          type: string\n        global_user_id:\n          type: integer\n          format: int64\n        infusionsoft_id:\n          type: string\n        middle_name:\n          type: string\n        preferred_name:\n          type: string\n        sub:\n          type: string\n    AffiliateProgramList:\n      type: object\n      properties:\n        count:\n          type: integer\n          format: int32\n        next:\n          type: string\n        previous:\n          type: string\n        programs:\n          type: array\n          items:\n            $ref: '#/components/schemas/AffiliateProgram'\n    SimpleTag:\n      type: object\n      properties:\n        category:\n          type: string\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n    RestApplicationConfigurationModuleInvoice:\n      type: object\n      properties:\n        tax_label:\n          type: string\n    CreateTag:\n      required:\n      - name\n      type: object\n      properties:\n        category:\n          $ref: '#/components/schemas/CategoryReference'\n        description:\n          type: string\n          description: The tag description\n        name:\n          type: string\n          description: The tag name\n    SimpleUser:\n      type: object\n      properties:\n        first_name:\n          type: string\n        id:\n          type: integer\n          format: int64\n        last_name:\n          type: string\n    TaggedContactList:\n      type: object\n      properties:\n        contacts:\n          type: array\n          items:\n            $ref: '#/components/schemas/TaggedContact'\n        count:\n          type: integer\n          format: int32\n        next:\n          type: string\n        previous:\n          type: string\n    CompanyReference:\n      type: object\n      properties:\n        company_name:\n          type: string\n        id:\n          type: integer\n          format: int64\n    NoteList:\n      type: object\n      properties:\n        count:\n          type: integer\n          format: int32\n        next:\n          type: string\n        notes:\n          type: array\n          items:\n            $ref: '#/components/schemas/Note'\n        previous:\n          type: string\n    AffiliateSummary:\n      type: object\n      properties:\n        affiliate_id:\n          type: integer\n          format: int64\n        amount_earned:\n          type: number\n          format: double\n        balance:\n          type: number\n          format: double\n        clawbacks:\n          type: number\n          format: double\n    PaymentResult:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        invoice_id:\n          type: integer\n          format: int64\n        payment_amount:\n          type: number\n          format: double\n        payment_status:\n          type: string\n        transaction_id:\n          type: integer\n          format: int64\n    RestHookRequest:\n      type: object\n      properties:\n        eventKey:\n          type: string\n        hookUrl:\n          type: string\n    EmailSentCreateList:\n      type: object\n      properties:\n        emails:\n          type: array\n          items:\n            $ref: '#/components/schemas/EmailSentCreate'\n        errors:\n          type: array\n          items:\n            $ref: '#/components/schemas/EmailSentCreateError'\n    RedirectList:\n      type: object\n      properties:\n        count:\n          type: integer\n          format: int32\n        next:\n          type: string\n        previous:\n          type: string\n        redirects:\n          type: array\n          items:\n            $ref: '#/components/schemas/AffiliateRedirect'\n    CompanyAddress:\n      type: object\n      properties:\n        country_code:\n          type: string\n        line1:\n          type: string\n        line2:\n          type: string\n        locality:\n          type: string\n        region:\n          type: string\n        zip_code:\n          type: string\n        zip_four:\n          type: string\n    CreateProductSubscription:\n      required:\n      - cycle_type\n      - plan_price\n      type: object\n      properties:\n        active:\n          type: boolean\n        cycle_type:\n          type: string\n          enum:\n          - YEAR\n          - MONTH\n          - WEEK\n          - DAY\n        frequency:\n          type: integer\n          format: int32\n        number_of_cycles:\n          type: integer\n          format: int32\n        plan_price:\n          type: number\n          format: double\n        subscription_plan_index:\n          type: integer\n          format: int32\n    RestApplicationConfigurationModuleNote:\n      type: object\n      properties:\n        appointment_types:\n          type: string\n        share_opportunity_with_related_user:\n          type: boolean\n    RestApplicationConfigurationModuleContact:\n      type: object\n      properties:\n        address_labels:\n          $ref: '#/components/schemas/RestApplicationConfigurationModuleContactAddressLabels'\n        contact_types:\n          type: string\n        default_new_contact_form:\n          type: string\n        disable_contact_edit_in_client_login:\n          type: boolean\n        fax_types:\n          type: string\n        phone_types:\n          type: string\n        suffix_types:\n          type: string\n        title_types:\n          type: string\n    RestApplicationConfigurationModuleApplicationFeaturesEnabled:\n      type: object\n      properties:\n        marketing:\n          type: boolean\n    RestApplicationConfigurationModuleAppointment:\n      type: object\n      properties:\n        appointment_types:\n          type: string\n        share_opportunity_with_related_user:\n          type: boolean\n    EcommerceReportingOrderItem:\n      type: object\n      properties:\n        cost:\n          type: number\n          format: double\n        description:\n          type: string\n        discount:\n          type: number\n          format: double\n        id:\n          type: integer\n          format: int64\n        jobRecurringId:\n          type: integer\n          format: int64\n        name:\n          type: string\n        notes:\n          type: string\n        price:\n          type: number\n          format: double\n        product:\n          $ref: '#/components/schemas/EcommerceReportingSimpleProduct'\n        quantity:\n          type: integer\n          format: int32\n        specialAmount:\n          type: number\n          format: double\n        specialId:\n          type: integer\n          format: int64\n        specialPctOrAmt:\n          type: integer\n          format: int32\n        subscriptionPlan:\n          $ref: '#/components/schemas/SubscriptionPlan'\n        type:\n          type: string\n    CustomFieldOption:\n      type: object\n      properties:\n        id:\n          type: string\n        label:\n          type: string\n        options:\n          type: array\n          items:\n            $ref: '#/components/schemas/CustomFieldOption'\n    PaymentGateway:\n      type: object\n      properties:\n        merchant_account_id:\n          type: integer\n          format: int64\n        use_default:\n          type: boolean\n    Opportunity:\n      required:\n      - contact\n      - opportunity_title\n      - stage\n      type: object\n      properties:\n        affiliate_id:\n          type: integer\n          format: int64\n        contact:\n          $ref: '#/components/schemas/OpportunityContact'\n        custom_fields:\n          type: array\n          items:\n            $ref: '#/components/schemas/CustomFieldValue'\n        date_created:\n          type: string\n          format: date-time\n        estimated_close_date:\n          type: string\n          format: date-time\n        id:\n          type: integer\n          format: int64\n        include_in_forecast:\n          type: integer\n          format: int32\n        last_updated:\n          type: string\n          format: date-time\n        next_action_date:\n          type: string\n          format: date-time\n        next_action_notes:\n          type: string\n        opportunity_notes:\n          type: string\n        opportunity_title:\n          type: string\n        projected_revenue_high:\n          type: number\n          format: double\n        projected_revenue_low:\n          type: number\n          format: double\n        stage:\n          $ref: '#/components/schemas/SimpleOpportunityStage'\n        user:\n          $ref: '#/components/schemas/SimpleUser'\n    AppointmentList:\n      type: object\n      properties:\n        appointments:\n          type: array\n          items:\n            $ref: '#/components/schemas/Appointment'\n        count:\n          type: integer\n          format: int32\n        next:\n          type: string\n        previous:\n          type: string\n        sync_token:\n          type: string\n    TagCategory:\n      required:\n      - id\n      - name\n      type: object\n      properties:\n        description:\n          type: string\n          description: The category description\n        id:\n          type: integer\n          description: The id for the tag category\n          format: int64\n        name:\n          type: string\n          description: The category name\n    FileUpload:\n      required:\n      - contact_id\n      - file_association\n      - file_data\n      - file_name\n      - is_public\n      type: object\n      properties:\n        file_name:\n          type: string\n        public:\n          type: boolean\n        file_data:\n          type: string\n        contact_id:\n          type: integer\n          format: int64\n        is_public:\n          type: boolean\n        file_association:\n          type: string\n          enum:\n          - CONTACT\n          - USER\n          - COMPANY\n    ProductOption:\n      type: object\n      properties:\n        allow_spaces:\n          type: boolean\n        can_contain_character:\n          type: boolean\n        can_contain_number:\n          type: boolean\n        can_end_with_character:\n          type: boolean\n        can_end_with_number:\n          type: boolean\n        can_start_with_character:\n          type: boolean\n        can_start_with_number:\n          type: boolean\n        display_index:\n          type: integer\n          format: int32\n        id:\n          type: integer\n          format: int64\n        label:\n          type: string\n        max_chars:\n          type: integer\n          format: int32\n        min_chars:\n          type: integer\n          format: int32\n        name:\n          type: string\n        required:\n          type: boolean\n        text_message:\n          type: string\n        type:\n          type: string\n          enum:\n          - FixedList\n          - Variable\n        values:\n          type: array\n          items:\n            $ref: '#/components/schemas/ProductOptionValue'\n    TaggedCompany:\n      type: object\n      properties:\n        company:\n          $ref: '#/components/schemas/BasicCompany'\n        date_applied:\n          type: string\n          format: date-time\n    FileInformation:\n      type: object\n      properties:\n        file_data:\n          type: string\n        file_descriptor:\n          $ref: '#/components/schemas/FileDescriptor'\n    NoteUser:\n      type: object\n      properties:\n        family_name:\n          type: string\n        given_name:\n          type: string\n        user_id:\n          type: integer\n          format: int64\n    CompanyFaxNumber:\n      type: object\n      properties:\n        number:\n          type: string\n        type:\n          type: string\n    RestApplicationConfigurationModuleECommerce:\n      type: object\n      properties:\n        credit_card_types:\n          type: string\n        currency:\n          type: string\n        default_charge_max_retry_attempts:\n          type: integer\n          format: int32\n        default_country:\n          type: string\n        default_merchant:\n          type: string\n        default_number_of_days_between_charge_attempts:\n          type: integer\n          format: int32\n        default_tax:\n          type: string\n        default_to_auto_charge:\n          type: boolean\n        merchant_account_max_retry_attempts:\n          type: integer\n          format: int32\n        payment_types:\n          type: string\n        promo_codes:\n          type: string\n        track_cost_per_unit:\n          type: boolean\n        track_inventory:\n          type: boolean\n    CreatePayment:\n      type: object\n      properties:\n        apply_to_commissions:\n          type: boolean\n        charge_now:\n          type: boolean\n        credit_card_id:\n          type: integer\n          format: int64\n        date:\n          type: string\n          description: Used when charge_now:false or inserting historical data. ex\n            `2017-01-01T22:17:59.039Z`\n          format: date-time\n        notes:\n          type: string\n        payment_amount:\n          type: string\n        payment_gateway_id:\n          type: string\n        payment_method_type:\n          type: string\n          enum:\n          - CREDIT_CARD\n          - CASH\n          - CHECK\n    ProductSubscription:\n      required:\n      - cycle_type\n      - id\n      - plan_price\n      type: object\n      properties:\n        active:\n          type: boolean\n        cycle_type:\n          type: string\n          enum:\n          - YEAR\n          - MONTH\n          - WEEK\n          - DAY\n        frequency:\n          type: integer\n          format: int32\n        id:\n          type: integer\n          format: int64\n        number_of_cycles:\n          type: integer\n          format: int32\n        plan_price:\n          type: number\n          format: double\n        subscription_plan_index:\n          type: integer\n          format: int32\n        subscription_plan_name:\n          type: string\n        url:\n          type: string\n    Error:\n      type: object\n      properties:\n        cause:\n          $ref: '#/components/schemas/Throwable'\n        localizedMessage:\n          type: string\n        message:\n          type: string\n        stackTrace:\n          type: array\n          items:\n            $ref: '#/components/schemas/StackTraceElement'\n        suppressed:\n          type: array\n          items:\n            $ref: '#/components/schemas/Throwable'\n    SocialAccount:\n      type: object\n      properties:\n        name:\n          type: string\n        type:\n          type: string\n          enum:\n          - Facebook\n          - Twitter\n          - LinkedIn\n          - Instagram\n          - Snapchat\n          - YouTube\n          - Pinterest\n    EmailSentQueryResultList:\n      type: object\n      properties:\n        count:\n          type: integer\n          format: int32\n        emails:\n          type: array\n          items:\n            $ref: '#/components/schemas/EmailSentQueryResult'\n        next:\n          type: string\n        previous:\n          type: string\n    AffiliateSummaryList:\n      type: object\n      properties:\n        count:\n          type: integer\n          format: int32\n        summaries:\n          type: array\n          items:\n            $ref: '#/components/schemas/AffiliateSummary'\n    CreditCard:\n      type: object\n      properties:\n        address:\n          $ref: '#/components/schemas/ContactAddress'\n        card_number:\n          type: string\n        card_type:\n          type: string\n        email_address:\n          type: string\n        expiration_month:\n          type: string\n        expiration_year:\n          type: string\n        maestro_issue_number:\n          type: string\n        maestro_start_date_month:\n          type: string\n        maestro_start_date_year:\n          type: string\n        name_on_card:\n          type: string\n        verification_code:\n          type: string\n    FileDescriptor:\n      required:\n      - id\n      type: object\n      properties:\n        category:\n          type: string\n          enum:\n          - Attachments\n          - Cart\n          - Documents\n          - Hidden\n          - Invoice\n          - Logo\n          - Tickets\n          - WebForm\n          - Funnel\n        contact_id:\n          type: integer\n          format: int64\n        created_by:\n          type: integer\n          format: int64\n        date_created:\n          type: string\n          format: date-time\n        download_url:\n          type: string\n        file_box_type:\n          type: string\n          enum:\n          - Application\n          - Image\n          - Fax\n          - Attachment\n          - Ticket\n          - Contact\n          - DigitalProduct\n          - Import\n          - Hidden\n          - WebForm\n          - StyledCart\n          - ReSampledImage\n          - TemplateThumbnail\n          - Funnel\n          - LogoThumbnail\n        file_name:\n          type: string\n        file_size:\n          type: integer\n          format: int64\n        id:\n          type: integer\n          format: int64\n        last_updated:\n          type: string\n          format: date-time\n        public:\n          type: boolean\n        remote_file_key:\n          type: string\n    RestAffiliatePayment:\n      type: object\n      properties:\n        amount:\n          type: number\n          format: double\n        date:\n          type: string\n        id:\n          type: integer\n          format: int64\n        notes:\n          type: string\n        type:\n          type: string\n    RequestNote:\n      required:\n      - contact_id\n      type: object\n      properties:\n        body:\n          type: string\n        contact_id:\n          type: integer\n          format: int64\n        title:\n          type: string\n        type:\n          type: string\n          enum:\n          - Appointment\n          - Call\n          - Email\n          - Fax\n          - Letter\n          - Other\n        user_id:\n          type: integer\n          format: int64\n    RestMerchantAccountResponse:\n      type: object\n      properties:\n        default_merchant_account:\n          type: integer\n          format: int64\n        merchant_accounts:\n          type: array\n          items:\n            $ref: '#/components/schemas/Merchant'\n    EcommerceReportingOrder:\n      type: object\n      properties:\n        allow_payment:\n          type: boolean\n        allow_paypal:\n          type: boolean\n        contact:\n          $ref: '#/components/schemas/EcommerceReportingOrderContactDetails'\n        creation_date:\n          type: string\n        id:\n          type: integer\n          format: int64\n        lead_affiliate_id:\n          type: integer\n          format: int64\n        modification_date:\n          type: string\n        notes:\n          type: string\n        order_date:\n          type: string\n        order_items:\n          type: array\n          items:\n            $ref: '#/components/schemas/EcommerceReportingOrderItem'\n        payment_plan:\n          $ref: '#/components/schemas/EcommerceReportingPaymentPlan'\n        recurring:\n          type: boolean\n        refund_total:\n          type: number\n          format: double\n        sales_affiliate_id:\n          type: integer\n          format: int64\n        shipping_information:\n          $ref: '#/components/schemas/EcommerceReportingShippingInformation'\n        source_type:\n          type: string\n          enum:\n          - INVOICE\n          - API\n          - CHECKOUT_FORM\n          - MANUAL_PAYMENT\n          - UNKNOWN\n          - QBO_SYNC\n        status:\n          type: string\n        terms:\n          type: string\n        title:\n          type: string\n        total:\n          type: number\n          format: double\n        total_due:\n          type: number\n          format: double\n        total_paid:\n          type: number\n          format: double\n    RestApplicationConfigurationModuleOpportunityStatesLoss:\n      type: object\n      properties:\n        reasons:\n          type: string\n        stage:\n          type: string\n    TagId:\n      type: object\n      properties:\n        tagIds:\n          type: array\n          items:\n            type: integer\n            format: int64\n    BasicCompany:\n      type: object\n      properties:\n        company_name:\n          type: string\n        email:\n          type: string\n        id:\n          type: integer\n          format: int64\n    StageDetails:\n      type: object\n      properties:\n        check_list_items:\n          type: array\n          items:\n            $ref: '#/components/schemas/CheckListItemDetails'\n        probability:\n          type: integer\n          format: int32\n        stage_order:\n          type: integer\n          format: int32\n        target_num_days:\n          type: integer\n          format: int32\n    OrderList:\n      type: object\n      properties:\n        count:\n          type: integer\n          format: int32\n        next:\n          type: string\n        orders:\n          type: array\n          items:\n            $ref: '#/components/schemas/EcommerceReportingOrder'\n        previous:\n          type: string\n    RestApplicationConfigurationModuleOpportunityStates:\n      type: object\n      properties:\n        active:\n          $ref: '#/components/schemas/RestApplicationConfigurationModuleOpportunityStatesActive'\n        loss:\n          $ref: '#/components/schemas/RestApplicationConfigurationModuleOpportunityStatesLoss'\n        win:\n          $ref: '#/components/schemas/RestApplicationConfigurationModuleOpportunityStatesWin'\n    RestApplicationConfigurationModuleOpportunity:\n      type: object\n      properties:\n        default_stage:\n          type: string\n        states:\n          $ref: '#/components/schemas/RestApplicationConfigurationModuleOpportunityStates'\n    CampaignList:\n      type: object\n      properties:\n        campaigns:\n          type: array\n          items:\n            $ref: '#/components/schemas/Campaign'\n        count:\n          type: integer\n          format: int32\n        next:\n          type: string\n        previous:\n          type: string\n    EmailSentQueryResult:\n      type: object\n      properties:\n        clicked_date:\n          type: string\n          format: date-time\n        contact_id:\n          type: integer\n          format: int64\n        headers:\n          type: string\n        id:\n          type: integer\n          format: int64\n        opened_date:\n          type: string\n          format: date-time\n        original_provider:\n          type: string\n          enum:\n          - UNKNOWN\n          - INFUSIONSOFT\n          - MICROSOFT\n          - GOOGLE\n        original_provider_id:\n          type: string\n        received_date:\n          type: string\n          format: date-time\n        sent_date:\n          type: string\n          format: date-time\n        sent_from_address:\n          type: string\n        sent_from_reply_address:\n          type: string\n        sent_to_address:\n          type: string\n        sent_to_bcc_addresses:\n          type: string\n        sent_to_cc_addresses:\n          type: string\n        subject:\n          type: string\n  securitySchemes:\n    oauth2:\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: https://accounts.infusionsoft.com/app/oauth/authorize\n          tokenUrl: https://api.infusionsoft.com/token\n          scopes: {}\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /contacts/{contactId}: patch: operation \"updatePropertiesOnContact\": parameters: parse parameter \"update_mask\": schema: parse enum values: parse value \"\\\"addresses\\\"\": expected type \"array\", got \"string\""
}