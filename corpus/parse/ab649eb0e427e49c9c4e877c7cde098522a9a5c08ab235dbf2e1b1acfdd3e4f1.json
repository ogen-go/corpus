{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/aws/aws-connected-device-framework"
		},
		"file": {
			"name": "swagger.yml",
			"size": 0,
			"path": "source/packages/services/assetlibrary/docs/swagger.yml",
			"byteSize": 80688,
			"content": "#-----------------------------------------------------------------------------------------------------------------------\n#   Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n#\n#  Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance\n#  with the License. A copy of the License is located at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  or in the 'license' file accompanying this file. This file is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES\n#  OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions\n#  and limitations under the License.\n#-----------------------------------------------------------------------------------------------------------------------\n#-----------------------------------------------------------------------------------------------------------------------\n#   Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n#\n#  Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance\n#  with the License. A copy of the License is located at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  or in the 'license' file accompanying this file. This file is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES\n#  OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions\n#  and limitations under the License.\n#-----------------------------------------------------------------------------------------------------------------------\nopenapi: 3.0.0\ninfo:\n  title: \"AWS Connected Device Framework: Asset Library\"\n  description: \u003e\n    The Asset Library service is a device registry that allows you to manage\n    your fleet of devices within multiple hierarchical groups.  Each one of the\n    branches of the hierarchy can represent something meaningful to your\n    business such as supplier, location, customer, vehicle, etc.\n\n\n    The hierarchies within Asset Library are represented as `Groups`.  Each Group has a single parent, but can comprise of many groups and/or devices as its members.\n\n\n    `Devices` can be associated with one or more `Groups`, each with a named relationship to its group to give context.\n\n\n    `Devices` themselves can be associated with other `Devices`, representing a composition type of relationship.  Examples being a mote that comprises of a number of differnet sensors, or a car engine that is comprised of a number of different components.\n\n\n    Different `Group Templates` can be created to align with your business, with each Group Template having its own attributes.  An example Group Template could be a _Site_, with its _address_ being an example of an attribute.\n\n\n    Likewise, `Device Templates` can be created to represent the different types of devices within your fleet, each with their own attributes.\n\n\n    `Profiles` can be created and applied to device and groups to populate with default attirbutes and/or relations.\n\n\n    `Policies` represent a document that can be attached to one or more groups within a hierarchy, and are automatically inherited by the devices and groups.\n  version: 2.0.0\ntags:\n  - name: Devices\n    description: \u003e\n      A `Device` represents a real world physical device that needs to be\n      registered within the Asset Library, such as a sensor, switch, or a\n      robotic arm.  Each device is the equivalent of a `Thing` within AWS IoT.\n\n\n      Devices can be attached to Groups within a hierarchy.\n\n\n      A Device can represent an assembly of other Devices using the `component` relationship, where the device could optionally be represented as a `Thing` within AWS IoT also.\n\n      Devices are identified by a unique `deviceId`.  Devices comprise of a number of standard attributes, as well as custom attributes.  Refer to the `Device Templates` section for further info.\n\n\n      A Device may have the following state:\n\n      - `unprovisioned`:  The metadata for the device has been created, but the device has not yet been provisioned within AWS IoT\n\n      - `active`:  The device is active and available for use within AWS IoT\n\n      - `decommissioned`:  The device has been decommissioned, therefore is unable to connect to AWS IoT, though may be redeployed and recommissioned elsewhere\n\n      - `retired`:  The device has been retired, and has been removed from AWS IoT\n  - name: Groups\n    description: \u003e\n      A `Group` can represent both physical and logical groupings of devices and\n      other groups.  Examples of physical groups include locations and\n      suppliers.  Examples of logical groupings include bill of material\n      structures.\n\n\n      Groups can be constructured with a parent/child relationship to other groups, thus building up a hierarchy of groups.  Device can then be associated to any group within the hierarchy.\n\n\n      Groups are identified by a unique `path`.  Groups comprise of a number of standard attributes, as well as custom attributes.  Refer to the `Group Templates` section for further info.\n  - name: Templates\n    description: \u003e\n      Templates represent custom device and group templates that you define,\n      each with their own attributes and constraints.\n\n\n      Devices are identified by a unique `deviceId`, each have the following built-in attributes:\n\n      - `templateId`:  a specific device template that represents what custom attributes the device can have\n\n      - `name`:  name of the device\n\n      - `description`:  description of the device\n\n      - `imageUrl`:  URL of an image of the device\n\n      - `awsIotThingArn`:  the ARN to lookup devices that have been registered as Things within AWS IoT\n\n      - `connected`:  indicates whether the device is currently connected to AWS IoT\n\n      - `state`:  the state of the device (unprovisioned, active, decommissioned or retired)\n\n      - `groups`:  the paths of the groups that the device has been attached to\n\n      - `attributes`:  A key value map of attributes that have been created as part of defining a custom device template.\n\n\n      When a Device is created as a component of another Device, it has all the same built-in attributes as described above with the exception of `groups`.\n\n\n      Groups are identified by a unique `path`, and each have the following built-on attributes:\n\n      - `templateId`:  a specific group template that represents what custom attributes the group can have\n\n      - `parentPath`:  the path of the parent group that the group belongs to\n\n      - `name`:  name of the group\n\n      - `description`:  description of the group\n\n      - `attributes`:  A key value map of attributes that have been created as part of defining a custom group template.\n\n\n      When defining the attributes of a custom device/group template, constraints can be applied using JSON Schema notation.  Each of these custom attributes is accessible as `attributes.` within the custom device/group template.\n\n\n      A simple example request body to register a new device template:\n\n          {\n              \"properties\": {\n                  \"length\": {\"type\": \"number\"},\n                  \"width\": {\"type\": \"number\"},\n                  \"height\": {\"type\": \"number\"}\n              }\n          }\n\n      A more complex example request body to register a new device template:\n\n          {\n              \"properties\": {\n                  \"length\": {\n                      \"type\": \"number\",\n                      \"minimum\": 1,\n                      \"maximum\": 5\n                  },\n                  \"width\": {\n                      \"type\": \"integer\",\n                      \"multipleOf\": 2\n                  },\n                  \"fleet\": {\n                      \"type\": \"string\",\n                      \"minLength\": 5,\n                      \"maxLength\": 50\n                  },\n                  \"firmware\": {\n                      \"type\": \"string\",\n                      \"pattern\": \"[abc]+\"\n\n                  },\n                  \"ipAddress\": {\n                      \"type\": \"string\",\n                      \"format\": \"ipv4\"\n                  },\n                  \"level\": {\n                      \"type\": \"string\",\n                      \"enum\": [\"low\", \"medium\", \"high\"]\n                  }\n              },\n              \"required\": [\"fleet\", \"firmware\", \"ipAddress\"]\n          }\n  - name: Profiles\n    description: \u003e\n      A profile represents a set of default attributes and/or relations that can\n      be applied to a device/group for a particular template.  Multiple profiles\n      can be created per template.\n  - name: Policies\n    description: \u003e\n      A policy represents a document that can be attached to one or more\n      hierarchies, and then be inherited by any groups or devices that belong to\n      all the hierarchies that the policy is applied to.\n\n\n      A good use for policies is to look up appropriate documents or authorization levels based on a device or groups associations to specific hierarchies.  As an example, let's say you need to apply different AWS IoT security policies when registering devices as Things depending upon their location.  This would be handled by assigning a policy representing a provisoning template to different groups within a hierarchy representing the location.  The appropriate provisioning template will be returned for the device/group depending on which and where in a hierarchy they are attached to.\n  - name: Search\n    description: \u003e\n      The search api allows you to search across both devices and groups\n      applying a variety of different filters.\n\n\n      Filters are applied via query parameters.  To apply filters uisng an attribute from the item being returned specify in the format of `?filter=field:value`.  To filter based on an attribute of a linked item, specify in the format of `?filter=relation:direction:field:value`.  Multiple `relation:direction`'s may be specified to define paths between multiple linked items using the format `?filter=relation_1:direction_1:relation...:direction...:field:value`.\n\n\n      URL Parameter | Description\n\n      ---|---\n\n      `?eq=deviceId:MOD123` | 'deviceId' equals 'MOD123'\n\n      `?lte=cycles:5` | 'cycles' less than or equals to 5\n\n      `?gt=located_at:out:qty:10` | 'qty' of the item linked via the outgoing 'located_at' relation is greater than 10\n\n\n      Multiple queries of the same type may be specified, for example if two equal filters are required:\n\n          ?eq=deviceId:MOD123\u0026eq=state:active\npaths:\n  \"/templates/device\":\n    get:\n      tags:\n        - Templates\n      summary: List device templates\n      description: Lists all device templates for a given status.\n      operationId: listDeviceTemplates\n      parameters:\n        - $ref: '#/components/parameters/templateStatusQuery'\n        - $ref: '#/components/parameters/offsetQuery'\n        - $ref: '#/components/parameters/countQuery'\n        - $ref: '#/components/parameters/sortQuery'\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.aws-cdf-v1.0+json:\n              schema:\n                $ref: \"#/components/schemas/TemplateInfoList\"\n            application/vnd.aws-cdf-v2.0+json:\n              schema:\n                $ref: \"#/components/schemas/TemplateInfoList\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n  \"/templates/device/{templateId}\":\n    parameters:\n      - $ref: '#/components/parameters/templateIdPath'\n    post:\n      tags:\n        - Templates\n      summary: \u003e\n        Registers a new device template within the system, using the JSON Schema\n        standard to define the device template attributes and constraints.\n      operationId: createDeviceTemplate\n      requestBody:\n        $ref: \"#/components/requestBodies/TemplateDefinition\"\n      responses:\n        \"201\":\n          $ref: \"#/components/responses/Created\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n    get:\n      tags:\n        - Templates\n      summary: Find device template by ID\n      description: Returns a single device template definition\n      operationId: getDeviceTemplate\n      parameters:\n        - $ref: '#/components/parameters/templateStatusQuery'\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.aws-cdf-v1.0+json:\n              schema:\n                $ref: \"#/components/schemas/TemplateInfo\"\n            application/vnd.aws-cdf-v2.0+json:\n              schema:\n                $ref: \"#/components/schemas/TemplateInfo\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n    patch:\n      tags:\n        - Templates\n      summary: Update an existing device template.\n      operationId: updateDeviceTemplate\n      requestBody:\n        $ref: \"#/components/requestBodies/TemplateDefinition\"\n      responses:\n        \"204\":\n          description: OK\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n    delete:\n      tags:\n        - Templates\n      summary: Deletes an existing device template.\n      operationId: deleteDeviceTemplate\n      responses:\n        \"204\":\n          description: OK\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n  \"/templates/device/{templateId}/publish\":\n    parameters:\n      - $ref: '#/components/parameters/templateIdPath'\n    put:\n      tags:\n        - Templates\n      summary: Publishes an existing device template.\n      operationId: publishDeviceTemplate\n      responses:\n        \"204\":\n          description: OK\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n  \"/templates/group\":\n    get:\n      tags:\n        - Templates\n      summary: List group templates\n      description: Lists all group templates for a given status.\n      operationId: listGroupTemplates\n      parameters:\n        - $ref: '#/components/parameters/templateStatusQuery'\n        - $ref: '#/components/parameters/offsetQuery'\n        - $ref: '#/components/parameters/countQuery'\n        - $ref: '#/components/parameters/sortQuery'\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.aws-cdf-v1.0+json:\n              schema:\n                $ref: \"#/components/schemas/TemplateInfoList\"\n            application/vnd.aws-cdf-v2.0+json:\n              schema:\n                $ref: \"#/components/schemas/TemplateInfoList\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n  \"/templates/group/{templateId}\":\n    parameters:\n      - $ref: '#/components/parameters/templateIdPath'\n    post:\n      tags:\n        - Templates\n      summary: \u003e\n        Registers a new group template within the system, using the JSON Schema\n        standard to define the group template attributes and constraints.\n      operationId: createGroupTemplate\n      requestBody:\n        $ref: \"#/components/requestBodies/TemplateDefinition\"\n      responses:\n        \"201\":\n          $ref: \"#/components/responses/Created\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n    get:\n      tags:\n        - Templates\n      summary: Find group template by ID\n      description: Returns a single group template definition\n      operationId: getGroupTemplate\n      parameters:\n        - name: status\n          in: query\n          description: Status of group template to return\n          required: true\n          schema:\n            type: string\n            enum:\n              - draft\n              - published\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.aws-cdf-v1.0+json:\n              schema:\n                $ref: \"#/components/schemas/TemplateInfo\"\n            application/vnd.aws-cdf-v2.0+json:\n              schema:\n                $ref: \"#/components/schemas/TemplateInfo\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n    patch:\n      tags:\n        - Templates\n      summary: Update an existing group template.\n      operationId: updateGroupTemplate\n      requestBody:\n        $ref: \"#/components/requestBodies/TemplateDefinition\"\n      responses:\n        \"204\":\n          description: OK\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n    delete:\n      tags:\n        - Templates\n      summary: Deletes an existing group template.\n      operationId: deleteGroupTemplate\n      responses:\n        \"204\":\n          description: OK\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n  \"/templates/group/{templateId}/publish\":\n    parameters:\n      - $ref: '#/components/parameters/templateIdPath'\n    put:\n      tags:\n        - Templates\n      summary: Publishes an existing group template.\n      operationId: publishGroupTemplate\n      responses:\n        \"204\":\n          description: OK\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n  /devices:\n    post:\n      tags:\n        - Devices\n      summary: Add a new device to the asset library, adding it to the `/unprovisioned`\n        group if no group is specified.\n      operationId: createDevice\n      parameters:\n        - $ref: '#/components/parameters/applyProfileQuery'\n      requestBody:\n        content:\n          application/vnd.aws-cdf-v1.0+json:\n            schema:\n              $ref: \"#/components/schemas/Device_1_0\"\n          application/vnd.aws-cdf-v2.0+json:\n            schema:\n              $ref: \"#/components/schemas/Device_2_0\"\n        description: Device to add to the asset library\n        required: true\n      responses:\n        \"201\":\n          $ref: \"#/components/responses/Created\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n  /bulkdevices:\n    post:\n      tags:\n        - Devices\n      summary: Adds a batch of devices in bulk to the asset library, adding them to the\n        `/unprovisioned` group if no groups are specified.\n      operationId: createDeviceBatch\n      parameters:\n        - $ref: '#/components/parameters/applyProfileQuery'\n      requestBody:\n        content:\n          application/vnd.aws-cdf-v1.0+json:\n            schema:\n              $ref: \"#/components/schemas/BulkDevices\"\n          application/vnd.aws-cdf-v2.0+json:\n            schema:\n              $ref: \"#/components/schemas/BulkDevices\"\n        description: List of devices to add to the asset library\n        required: true\n      responses:\n        \"201\":\n          $ref: \"#/components/responses/Created\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n    patch:\n      tags:\n        - Devices\n      summary: Update a batch of existing devices\n      operationId: updateDeviceBatch\n      parameters:\n        - $ref: '#/components/parameters/applyProfileQuery'\n      requestBody:\n        content:\n          application/vnd.aws-cdf-v1.0+json:\n            schema:\n              $ref: \"#/components/schemas/BulkDevices\"\n          application/vnd.aws-cdf-v2.0+json:\n            schema:\n              $ref: \"#/components/schemas/BulkDevices\"\n        description: List of devices and their attributes to update\n        required: true\n      responses:\n        \"204\":\n          description: successful operation\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n    get:\n      tags:\n        - Devices\n      summary: Find devices by ID\n      description: Returns a batch of devices.\n      operationId: bulkGetDevices\n      parameters:\n        - $ref: '#/components/parameters/deviceIdsQuery'\n        - $ref: '#/components/parameters/expandComponentsQuery'\n        - $ref: '#/components/parameters/attributesQuery'\n        - $ref: '#/components/parameters/includeGroupsQuery'\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/vnd.aws-cdf-v1.0+json:\n              schema:\n                $ref: \"#/components/schemas/DeviceList\"\n            application/vnd.aws-cdf-v2.0+json:\n              schema:\n                $ref: \"#/components/schemas/DeviceList\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n\n  \"/devices/{deviceId}\":\n    parameters:\n      - $ref: '#/components/parameters/deviceIdPath'\n    get:\n      tags:\n        - Devices\n      summary: Find device by ID\n      description: Returns a single device\n      operationId: getDeviceByID\n      parameters:\n        - $ref: '#/components/parameters/expandComponentsQuery'\n        - $ref: '#/components/parameters/attributesQuery'\n        - $ref: '#/components/parameters/includeGroupsQuery'\n        - $ref: '#/components/parameters/expandRelatedDevicesQuery'\n        - $ref: '#/components/parameters/expandRelatedGroupsQuery'\n        - $ref: '#/components/parameters/filterRelationsQuery'\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/vnd.aws-cdf-v1.0+json:\n              schema:\n                $ref: \"#/components/schemas/Device_1_0\"\n            application/vnd.aws-cdf-v2.0+json:\n              schema:\n                $ref: \"#/components/schemas/Device_2_0\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n    delete:\n      tags:\n        - Devices\n      summary: Delete device of specified ID\n      description: Deletes a single device\n      operationId: deleteDevice\n      responses:\n        \"204\":\n          description: successful operation\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n    patch:\n      tags:\n        - Devices\n      summary: Update an existing device attributes\n      operationId: updateDevice\n      parameters:\n        - name: applyProfile\n          in: query\n          description: Optionally apply a profile to the device to update unset attributes\n            with attributes from the profile.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/vnd.aws-cdf-v1.0+json:\n            schema:\n              $ref: \"#/components/schemas/Device_1_0\"\n          application/vnd.aws-cdf-v2.0+json:\n            schema:\n              $ref: \"#/components/schemas/Device_2_0\"\n        description: Device object that needs to be updated in device store\n        required: true\n      responses:\n        \"204\":\n          description: successful operation\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n  \"/devices/{deviceId}/{relationship}/groups\":\n    parameters:\n      - $ref: '#/components/parameters/deviceIdPath'\n      - $ref: '#/components/parameters/relationshipPath'\n    get:\n      tags:\n        - Groups\n      summary: List a devices related groups.\n      operationId: listDeviceRelatedGroups\n      parameters:\n        - $ref: '#/components/parameters/templateQuery'\n        - $ref: '#/components/parameters/directionQuery'\n        - $ref: '#/components/parameters/offsetQuery'\n        - $ref: '#/components/parameters/countQuery'\n        - $ref: '#/components/parameters/sortQuery'\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/vnd.aws-cdf-v1.0+json:\n              schema:\n                $ref: \"#/components/schemas/GroupList\"\n            application/vnd.aws-cdf-v2.0+json:\n              schema:\n                $ref: \"#/components/schemas/GroupList\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n  \"/devices/{deviceId}/{relationship}/groups/{groupPath}\":\n    parameters:\n      - $ref: '#/components/parameters/deviceIdPath'\n      - $ref: '#/components/parameters/relationshipPath'\n      - $ref: '#/components/parameters/groupPathPath'\n    put:\n      tags:\n        - Devices\n      summary: Associates a device to a group, giving context to its relationship.\n      operationId: attachToGroup\n      responses:\n        \"204\":\n          description: successful operation\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n    delete:\n      tags:\n        - Devices\n      summary: Removes a device from an associated group\n      operationId: detachFromGroup\n      responses:\n        \"204\":\n          description: successful operation\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n\n\n  \"/devices/{deviceId}/{relationship}/{direction}/groups/{groupPath}\":\n    parameters:\n      - $ref: '#/components/parameters/deviceIdPath'\n      - $ref: '#/components/parameters/relationshipPath'\n      - $ref: '#/components/parameters/directionPath'\n      - $ref: '#/components/parameters/groupPathPath'\n    put:\n      tags:\n        - Devices\n      summary: Associates a device to a group, giving context to its relationship.\n      operationId: attachToGroupWithDirection\n      responses:\n        \"204\":\n          description: successful operation\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n    delete:\n      tags:\n        - Devices\n      summary: Removes a device from an associated group\n      operationId: detachFromGroupWithDirection\n      responses:\n        \"204\":\n          description: successful operation\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n\n\n\n  \"/devices/{deviceId}/{relationship}/devices\":\n    parameters:\n      - $ref: '#/components/parameters/deviceIdPath'\n      - $ref: '#/components/parameters/relationshipPath'\n    get:\n      tags:\n        - Devices\n      summary: List a devices related devices.\n      operationId: listDeviceRelatedDevices\n      parameters:\n        - $ref: '#/components/parameters/templateQuery'\n        - $ref: '#/components/parameters/directionQuery'\n        - $ref: '#/components/parameters/stateQuery'\n        - $ref: '#/components/parameters/offsetQuery'\n        - $ref: '#/components/parameters/countQuery'\n        - $ref: '#/components/parameters/sortQuery'\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/vnd.aws-cdf-v1.0+json:\n              schema:\n                $ref: \"#/components/schemas/DeviceList\"\n            application/vnd.aws-cdf-v2.0+json:\n              schema:\n                $ref: \"#/components/schemas/DeviceList\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n\n  \"/devices/{deviceId}/{relationship}/devices/{otherDeviceId}\":\n    parameters:\n      - $ref: '#/components/parameters/deviceIdPath'\n      - $ref: '#/components/parameters/relationshipPath'\n      - name: otherDeviceId\n        in: path\n        description: ID of device to create relationship to.\n        required: true\n        schema:\n          type: string\n    put:\n      tags:\n        - Devices\n      summary: Associates a device to another device, giving context to its\n        relationship.\n      operationId: attachToDevice\n      responses:\n        \"204\":\n          description: successful operation\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n    delete:\n      tags:\n        - Devices\n      summary: Removes a device from an associated device\n      operationId: detachFromDevice\n      responses:\n        \"204\":\n          description: successful operation\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n\n\n  \"/devices/{deviceId}/{relationship}/{direction}/devices/{otherDeviceId}\":\n    parameters:\n      - $ref: '#/components/parameters/deviceIdPath'\n      - $ref: '#/components/parameters/relationshipPath'\n      - $ref: '#/components/parameters/directionPath'\n      - name: otherDeviceId\n        in: path\n        description: ID of device to create relationship to.\n        required: true\n        schema:\n          type: string\n    put:\n      tags:\n        - Devices\n      summary: Associates a device to another device, giving context to its\n        relationship.\n      operationId: attachToDeviceWithDirection\n      responses:\n        \"204\":\n          description: successful operation\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n    delete:\n      tags:\n        - Devices\n      summary: Removes a device from an associated device\n      operationId: detachFromDeviceWithDirection\n      responses:\n        \"204\":\n          description: successful operation\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n\n\n  \"/devices/{deviceId}/components\":\n    parameters:\n      - $ref: '#/components/parameters/deviceIdPath'\n    post:\n      tags:\n        - Devices\n      summary: Createa a new component and adds to the device.\n      operationId: createComponent\n      requestBody:\n        content:\n          application/vnd.aws-cdf-v1.0+json:\n            schema:\n              $ref: \"#/components/schemas/Device_1_0\"\n          application/vnd.aws-cdf-v2.0+json:\n            schema:\n              $ref: \"#/components/schemas/Device_2_0\"\n        description: Device to add as a component\n        required: true\n      responses:\n        \"201\":\n          $ref: \"#/components/responses/Created\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n  \"/devices/{deviceId}/components/{componentId}\":\n    parameters:\n      - $ref: '#/components/parameters/deviceIdPath'\n      - $ref: '#/components/parameters/componentIdPath'\n    patch:\n      tags:\n        - Devices\n      summary: Updates the component of a device.\n      operationId: updateComponent\n      responses:\n        \"204\":\n          description: successful operation\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n    delete:\n      tags:\n        - Devices\n      summary: Deletes a component of a devoce.\n      operationId: deleteComponent\n      responses:\n        \"204\":\n          description: successful operation\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n  /groups:\n    post:\n      tags:\n        - Groups\n      summary: Adds a new group to the device library as a child of the `parentPath` as\n        specified in the request body.\n      operationId: createGroup\n      parameters:\n        - $ref: '#/components/parameters/applyProfileQuery'\n      requestBody:\n        content:\n          application/vnd.aws-cdf-v1.0+json:\n            schema:\n              $ref: \"#/components/schemas/Group_1_0\"\n          application/vnd.aws-cdf-v2.0+json:\n            schema:\n              $ref: \"#/components/schemas/Group_2_0\"\n        description: Group to add to the asset library\n        required: true\n      responses:\n        \"201\":\n          $ref: \"#/components/responses/Created\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n  /bulkgroups:\n    post:\n      tags:\n        - Groups\n      summary: Adds a batch of new group to the asset library as a child of the\n        `parentPath` as specified in the request body.\n      operationId: createGroupBatch\n      parameters:\n        - $ref: '#/components/parameters/applyProfileQuery'\n      requestBody:\n        content:\n          application/vnd.aws-cdf-v1.0+json:\n            schema:\n              type: array\n              items:\n                $ref: \"#/components/schemas/BulkGroups\"\n          application/vnd.aws-cdf-v2.0+json:\n            schema:\n              type: array\n              items:\n                $ref: \"#/components/schemas/BulkGroups\"\n        description: Group to add to the asset library\n        required: true\n      responses:\n        \"201\":\n          $ref: \"#/components/responses/Created\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n    get:\n      tags:\n        - Groups\n      summary: Find Groups by Group Path\n      description: Returns a batch of groups.\n      operationId: bulkGetGroups\n      parameters:\n        - $ref: '#/components/parameters/groupPathsQuery'\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/vnd.aws-cdf-v1.0+json:\n              schema:\n                $ref: \"#/components/schemas/GroupList\"\n            application/vnd.aws-cdf-v2.0+json:\n              schema:\n                $ref: \"#/components/schemas/GroupList\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n  \"/groups/{groupPath}\":\n    parameters:\n      - $ref: '#/components/parameters/groupPathPath'\n    get:\n      tags:\n        - Groups\n      summary: Find group by Group's path\n      description: Returns a single group\n      operationId: getGroup\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/vnd.aws-cdf-v1.0+json:\n              schema:\n                $ref: \"#/components/schemas/Group_1_0\"\n            application/vnd.aws-cdf-v2.0+json:\n              schema:\n                $ref: \"#/components/schemas/Group_2_0\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n    delete:\n      tags:\n        - Groups\n      summary: Delete group with supplied path\n      description: Deletes a single group\n      operationId: deleteGroup\n      responses:\n        \"204\":\n          description: successful operation\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n    patch:\n      tags:\n        - Groups\n      summary: Update an existing group attributes, including changing its parent group.\n      operationId: updateGroup\n      parameters:\n        - $ref: '#/components/parameters/applyProfileQuery'\n      requestBody:\n        content:\n          application/vnd.aws-cdf-v1.0+json:\n            schema:\n              $ref: \"#/components/schemas/Group_1_0\"\n          application/vnd.aws-cdf-v2.0+json:\n            schema:\n              $ref: \"#/components/schemas/Group_2_0\"\n        description: Group object that needs to be updated\n        required: true\n      responses:\n        \"204\":\n          description: successful operation\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n  \"/groups/{groupPath}/members/devices\":\n    parameters:\n      - $ref: '#/components/parameters/groupPathPath'\n    get:\n      tags:\n        - Groups\n      summary: List device members of group for supplied Group name\n      description: Returns device members of group\n      operationId: listGroupMembersDevices\n      parameters:\n        - $ref: '#/components/parameters/templateQuery'\n        - $ref: '#/components/parameters/stateQuery'\n        - $ref: '#/components/parameters/offsetQuery'\n        - $ref: '#/components/parameters/countQuery'\n        - $ref: '#/components/parameters/sortQuery'\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/vnd.aws-cdf-v1.0+json:\n              schema:\n                $ref: \"#/components/schemas/DeviceList\"\n            application/vnd.aws-cdf-v2.0+json:\n              schema:\n                $ref: \"#/components/schemas/DeviceList\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n  \"/groups/{groupPath}/members/groups\":\n    parameters:\n      - $ref: '#/components/parameters/groupPathPath'\n    get:\n      tags:\n        - Groups\n      summary: List group members of group for supplied Group name\n      description: Returns group members of group\n      operationId: listGroupMembersGroups\n      parameters:\n        - $ref: '#/components/parameters/templateQuery'\n        - $ref: '#/components/parameters/offsetQuery'\n        - $ref: '#/components/parameters/countQuery'\n        - $ref: '#/components/parameters/sortQuery'\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/vnd.aws-cdf-v1.0+json:\n              schema:\n                $ref: \"#/components/schemas/GroupList\"\n            application/vnd.aws-cdf-v2.0+json:\n              schema:\n                $ref: \"#/components/schemas/GroupList\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n  \"/groups/{groupPath}/memberships\":\n    parameters:\n      - $ref: '#/components/parameters/groupPathPath'\n    get:\n      tags:\n        - Groups\n      summary: List all ancestor groups of a specific group.\n      description: List all ancestor groups of a specific group.\n      operationId: listGroupMemberships\n      parameters:\n        - $ref: '#/components/parameters/offsetQuery'\n        - $ref: '#/components/parameters/countQuery'\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/vnd.aws-cdf-v1.0+json:\n              schema:\n                $ref: \"#/components/schemas/GroupList\"\n            application/vnd.aws-cdf-v2.0+json:\n              schema:\n                $ref: \"#/components/schemas/GroupList\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n  \"/groups/{groupPath}/{relationship}/devices\":\n    parameters:\n      - $ref: '#/components/parameters/groupPathPath'\n      - $ref: '#/components/parameters/relationshipPath'\n    get:\n      tags:\n        - Groups\n      summary: List a groups related devices.\n      operationId: listGroupRelatedDevices\n      parameters:\n        - $ref: '#/components/parameters/templateQuery'\n        - $ref: '#/components/parameters/directionQuery'\n        - $ref: '#/components/parameters/stateQuery'\n        - $ref: '#/components/parameters/offsetQuery'\n        - $ref: '#/components/parameters/countQuery'\n        - $ref: '#/components/parameters/sortQuery'\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/vnd.aws-cdf-v1.0+json:\n              schema:\n                $ref: \"#/components/schemas/DeviceList\"\n            application/vnd.aws-cdf-v2.0+json:\n              schema:\n                $ref: \"#/components/schemas/DeviceList\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n  \"/groups/{groupPath}/{relationship}/groups\":\n    parameters:\n      - $ref: '#/components/parameters/groupPathPath'\n      - $ref: '#/components/parameters/relationshipPath'\n    get:\n      tags:\n        - Groups\n      summary: List a groups related groups.\n      operationId: listGroupRelatedGroups\n      parameters:\n        - $ref: '#/components/parameters/templateQuery'\n        - $ref: '#/components/parameters/directionQuery'\n        - $ref: '#/components/parameters/offsetQuery'\n        - $ref: '#/components/parameters/countQuery'\n        - $ref: '#/components/parameters/sortQuery'\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/vnd.aws-cdf-v1.0+json:\n              schema:\n                $ref: \"#/components/schemas/GroupList\"\n            application/vnd.aws-cdf-v2.0+json:\n              schema:\n                $ref: \"#/components/schemas/GroupList\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n  \"/groups/{sourceGroupPath}/{relationship}/groups/{targetGroupPath}\":\n    parameters:\n      - name: sourceGroupPath\n        in: path\n        description: Path of source group\n        required: true\n        schema:\n          type: string\n      - $ref: '#/components/parameters/relationshipPath'\n      - name: targetGroupPath\n        in: path\n        description: Path of target group\n        required: true\n        schema:\n          type: string\n    put:\n      tags:\n        - Groups\n      summary: Associates a group with another group, giving context to its\n        relationship.\n      operationId: attachGroupToGroup\n      responses:\n        \"204\":\n          description: successful operation\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n    delete:\n      tags:\n        - Groups\n      summary: Removes a group from an associated group\n      operationId: detachGroupFromGroup\n      responses:\n        \"204\":\n          description: successful operation\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n  \"/profiles/device/{templateId}\":\n    parameters:\n      - $ref: '#/components/parameters/templateIdPath'\n    post:\n      tags:\n        - Profiles\n      summary: Adds a new device profile for a specific template.\n      operationId: createDeviceProfile\n      requestBody:\n        content:\n          application/vnd.aws-cdf-v1.0+json:\n            schema:\n              $ref: \"#/components/schemas/DeviceProfile_1_0\"\n          application/vnd.aws-cdf-v2.0+json:\n            schema:\n              $ref: \"#/components/schemas/DeviceProfile_2_0\"\n        description: Device Profile to add to the asset library\n        required: true\n      responses:\n        \"201\":\n          $ref: \"#/components/responses/Created\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n    get:\n      tags:\n        - Profiles\n      summary: Return all device profiles for a specific template\n      description: ReturnsReturn all device profiles for a specific template\n      operationId: listDeviceProfiles\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/vnd.aws-cdf-v1.0+json:\n              schema:\n                $ref: \"#/components/schemas/DeviceProfileList\"\n            application/vnd.aws-cdf-v2.0+json:\n              schema:\n                $ref: \"#/components/schemas/DeviceProfileList\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n  \"/profiles/device/{templateId}/{profileId}\":\n    parameters:\n      - $ref: '#/components/parameters/templateIdPath'\n      - $ref: '#/components/parameters/profileIdPath'\n    get:\n      tags:\n        - Profiles\n      summary: Retrieve a device profile\n      description: Returns a single device profile\n      operationId: getDeviceProfile\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/vnd.aws-cdf-v1.0+json:\n              schema:\n                $ref: \"#/components/schemas/DeviceProfile_1_0\"\n            application/vnd.aws-cdf-v2.0+json:\n              schema:\n                $ref: \"#/components/schemas/DeviceProfile_2_0\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n    delete:\n      tags:\n        - Profiles\n      summary: Delete a specific device profile\n      description: Delete a specific device profile\n      operationId: deleteDeviceProfile\n      responses:\n        \"204\":\n          description: successful operation\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n    patch:\n      tags:\n        - Profiles\n      summary: Update an existing device profile.\n      operationId: updateDeviceProfile\n      requestBody:\n        content:\n          application/vnd.aws-cdf-v1.0+json:\n            schema:\n              $ref: \"#/components/schemas/DeviceProfile_1_0\"\n          application/vnd.aws-cdf-v2.0+json:\n            schema:\n              $ref: \"#/components/schemas/DeviceProfile_2_0\"\n        description: Profile that needs to be updated\n        required: true\n      responses:\n        \"204\":\n          description: successful operation\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n  \"/profiles/group/{templateId}\":\n    parameters:\n      - $ref: '#/components/parameters/templateIdPath'\n    post:\n      tags:\n        - Profiles\n      summary: Adds a new group profile for a specific template.\n      operationId: createGroupProfile\n      requestBody:\n        content:\n          application/vnd.aws-cdf-v1.0+json:\n            schema:\n              $ref: \"#/components/schemas/GroupProfile_1_0\"\n          application/vnd.aws-cdf-v2.0+json:\n            schema:\n              $ref: \"#/components/schemas/GroupProfile_2_0\"\n        description: Group Profile to add to the asset library\n        required: true\n      responses:\n        \"201\":\n          $ref: \"#/components/responses/Created\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n    get:\n      tags:\n        - Profiles\n      summary: Return all group profiles for a specific template\n      description: Return all group profiles for a specific template\n      operationId: listGroupProfiles\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/vnd.aws-cdf-v1.0+json:\n              schema:\n                $ref: \"#/components/schemas/GroupProfileList\"\n            application/vnd.aws-cdf-v2.0+json:\n              schema:\n                $ref: \"#/components/schemas/GroupProfileList\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n  \"/profiles/group/{templateId}/{profileId}\":\n    parameters:\n      - $ref: '#/components/parameters/templateIdPath'\n      - $ref: '#/components/parameters/profileIdPath'\n    get:\n      tags:\n        - Profiles\n      summary: Retrieve a group profile\n      description: Returns a single group profile\n      operationId: getGroupProfile\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/vnd.aws-cdf-v1.0+json:\n              schema:\n                $ref: \"#/components/schemas/GroupProfile_1_0\"\n            application/vnd.aws-cdf-v2.0+json:\n              schema:\n                $ref: \"#/components/schemas/GroupProfile_2_0\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n    delete:\n      tags:\n        - Profiles\n      summary: Delete a specific group profile\n      description: Delete a specific group profile\n      operationId: deleteGroupProfile\n      responses:\n        \"204\":\n          description: successful operation\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n    patch:\n      tags:\n        - Profiles\n      summary: Update an existing group profile.\n      operationId: updateGroupProfile\n      requestBody:\n        content:\n          application/vnd.aws-cdf-v1.0+json:\n            schema:\n              $ref: \"#/components/schemas/GroupProfile_1_0\"\n          application/vnd.aws-cdf-v2.0+json:\n            schema:\n              $ref: \"#/components/schemas/GroupProfile_2_0\"\n        description: Profile that needs to be updated\n        required: true\n      responses:\n        \"204\":\n          description: successful operation\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n  /search:\n    get:\n      tags:\n        - Search\n      summary: Search for groups and devices.\n      description: \u003e\n        Search results can be filtered by type, ancestorPath, and an arbitrary number of \n        additional filter parameters. Each filter can reference a field of the search\n        result, for example `eq=fieldname:value` or traverse the asset library graph to \n        reference a related entry, for example `eq=traversal1:out:traversal2:in:fieldname:value`.\n        All parameters are combined with a logical AND.\n\n        For all search parameters that include a search key and search value separated \n        by a colon (:) character, the HTTP parameter must be assembled using the following \n        sequence of steps:\n         1. URL-encode the search value.\n         2. Concatenate the search key (incl. any traversals), the colon character, and \n            result of step 1.\n         3. URL-encode the output of step 2.\n        Failure to do so can yield incorrect search results for any search values that include\n        the colon character.\n\n        For example, a search for entries with an outgoing \"manufactured_by\" relation whose \n        name starts with \"Mfg+Asy Inc\" should be expressed as:\n        `/search?startsWith=manufactured_by%3Aout%3Aname%3AMfg%252BAsy%2520Inc`\n      operationId: search\n      parameters:\n        - name: type\n          in: query\n          description: Type of group/device to filter.  This can be the high level `group`\n            or `device`, as well as any custom group or device template that may\n            have been registered.\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - name: ancestorPath\n          in: query\n          description: The path of a common ancestor group to filter results by.\n          schema:\n            type: string\n        - name: eq\n          in: query\n          description: Filter an attribute based on an exact match. E.g.\n            `?eq=firmwareVersion:ABC123`\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - name: neq\n          in: query\n          description: Filter by an attribute based on not matching. E.g.\n            `?neq=firmwareVersion:ABC123`\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - name: lt\n          in: query\n          description: Filter an attribute based on having a value less than. E.g.\n            `?lt=deploymentId:3`\n          explode: true\n          schema:\n            type: array\n            items:\n              type: number\n        - name: lte\n          in: query\n          description: Filter an attribute based on having a value less than or equal to.\n            E.g. `?lte=deploymentId:3`\n          explode: true\n          schema:\n            type: array\n            items:\n              type: number\n        - name: gt\n          in: query\n          description: Filter an attribute based on having a value greater than. E.g.\n            `?gt=deploymentId:3`\n          explode: true\n          schema:\n            type: array\n            items:\n              type: number\n        - name: gte\n          in: query\n          description: Filter an attribute based on having a value greater than or equal\n            to. E.g. `?gte=deploymentId:3`\n          explode: true\n          schema:\n            type: array\n            items:\n              type: number\n        - name: startsWith\n          in: query\n          description: \u003e\n            Filter by an attribute based on starting with specific text. Case sensitive.\n            For example: `?startsWith=model:MOD123`\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - name: endsWith\n          in: query\n          description: \u003e\n            Filter by an attribute based on ending with specific text. Case sensitive.\n            For example: `?endsWith=model:limited%20edition`\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - name: contains\n          in: query\n          description: \u003e\n            Filter by an attribute based on ending with specific text. Case sensitive.\n            For example: `?endsWith=model:quattro`\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - name: exist\n          in: query\n          description: Return a match if the device/group in context has a matching relation/atrribute. E.g.\n            `?exists=installed_in:out:groupPath:/vehicle/001`\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - name: nexist\n          in: query\n          description: Return a match if the device/group in context does not have a matching relation/atrribute. E.g.\n            `?nxists=installed_in:out:groupPath:/vehicle/001`\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - name: facetField\n          in: query\n          description: Perform a faceted query.  Specify in the format of\n            `?facetField=relation:direction:field`\n          schema:\n            type: string\n        - name: summarize\n          in: query\n          description: Summarize the search results by providing a total, instead of\n            returning the results themselves.\n          schema:\n            type: boolean\n        - $ref: '#/components/parameters/offsetQuery'\n        - $ref: '#/components/parameters/countQuery'\n        - $ref: '#/components/parameters/sortQuery'\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/vnd.aws-cdf-v1.0+json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/SearchResults\"\n            application/vnd.aws-cdf-v2.0+json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/SearchResults\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n  /policies:\n    post:\n      tags:\n        - Policies\n      summary: Creates a new `Policy`, and applies it to the provided `Groups`.\n      operationId: createPolicy\n      requestBody:\n        content:\n          application/vnd.aws-cdf-v1.0+json:\n            schema:\n              $ref: \"#/components/schemas/Policy\"\n          application/vnd.aws-cdf-v2.0+json:\n            schema:\n              $ref: \"#/components/schemas/Policy\"\n        description: Policy to create.\n        required: true\n      responses:\n        \"201\":\n          $ref: \"#/components/responses/Created\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n    get:\n      tags:\n        - Policies\n      summary: List policies, optionally filtered by policy type.\n      operationId: listPolicies\n      parameters:\n        - name: type\n          in: query\n          description: Policy type to refilterturn\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/vnd.aws-cdf-v1.0+json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/PolicyList\"\n            application/vnd.aws-cdf-v2.0+json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/PolicyList\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n  /policies/inherited:\n    get:\n      tags:\n        - Policies\n      summary: Returns all inherited `Policies` for a `Device` or set of `Groups` where\n        the `Device`/`Groups` are associated with all the hierarchies that the\n        `Policy` applies to.  Either `deviceId` or `groupPath` must be provided.\n      operationId: listInheritedPolicies\n      parameters:\n        - name: deviceId\n          in: query\n          description: ID of device to list policies\n          schema:\n            type: string\n        - name: groupPath\n          in: query\n          description: Path of groups to list policies\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - name: type\n          in: query\n          description: Policy type to return\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/vnd.aws-cdf-v1.0+json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/PolicyList\"\n            application/vnd.aws-cdf-v2.0+json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/PolicyList\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n  \"/policies/{policyId}\":\n    parameters:\n      - name: policyId\n        in: path\n        description: ID of policy\n        required: true\n        schema:\n          type: string\n    patch:\n      tags:\n        - Policies\n      summary: Update the attributes of an existing policy.\n      operationId: updatePolicy\n      requestBody:\n        content:\n          application/vnd.aws-cdf-v1.0+json:\n            schema:\n              $ref: \"#/components/schemas/Policy\"\n          application/vnd.aws-cdf-v2.0+json:\n            schema:\n              $ref: \"#/components/schemas/Policy\"\n        description: Policy that needs to be updated\n        required: true\n      responses:\n        \"204\":\n          description: successful operation\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n    delete:\n      tags:\n        - Policies\n      summary: Delete an existing policy.\n      operationId: deletePolicy\n      responses:\n        \"204\":\n          description: successful operation\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n    get:\n      tags:\n        - Policies\n      summary: Retrieve a specific policy.\n      operationId: getPolicy\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/vnd.aws-cdf-v1.0+json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Policy\"\n            application/vnd.aws-cdf-v2.0+json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Policy\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n\ncomponents:\n\n  parameters:\n    templateIdPath:\n      in: path\n      name: templateId\n      description: ID of device template to publish\n      required: true\n      schema:\n        type: string\n    templateStatusQuery:\n      name: status\n      in: query\n      description: Status of device template to return\n      required: true\n      schema:\n        type: string\n        enum:\n          - draft\n          - published\n    deviceIdPath:\n      in: path\n      name: deviceId\n      description: ID of device to return\n      required: true\n      schema:\n        type: string\n    profileIdPath:\n      in: path\n      name: profileId\n      description: ID of profile\n      required: true\n      schema:\n        type: string\n    componentIdPath:\n      in: path\n      name: componentId\n      description: ID of component\n      required: true\n      schema:\n        type: string\n    relationshipPath:\n      in: path\n      name: relationship\n      description: The relationship between the device and group as defined by the device/group template. Where applicable, `%2A` (urlencoded `*`) may be used to return all.\n      required: true\n      schema:\n        type: string\n    groupPathPath:\n      name: groupPath\n      in: path\n      description: Path of group.\n      required: true\n      schema:\n        type: string\n    applyProfileQuery:\n      name: applyProfile\n      in: query\n      description: Optionally apply a profile to the device to update unset attributes\n        with attributes from the profile.\n      schema:\n        type: string\n    directionPath:\n      name: direction\n      in: path\n      description: Direction of relation\n      required: true\n      schema:\n        type: array\n        items:\n          type: string\n        enum:\n          - in\n          - out\n          - both\n        default: out\n\n    groupPathsQuery:\n      name: groupPaths\n      in: query\n      description: Optionally only return group based on the paths. By default\n        returns all attributes.\n      schema:\n        type: array\n        items:\n          type: string\n\n    deviceIdsQuery:\n      name: deviceIds\n      in: query\n      description: Optionally only return devices with these Ids. By default\n        returns all attributes.\n      schema:\n        type: array\n        items:\n          type: string\n\n    expandComponentsQuery:\n      name: expandComponents\n      in: query\n      description: By default, components of a device are not returned. Passing `true`\n        will return and expand a devices components.\n      schema:\n        type: boolean\n    attributesQuery:\n      name: attributes\n      in: query\n      description: Optionally only return these specific attributes.  By default\n        returns all attributes.\n      schema:\n        type: array\n        items:\n          type: string\n    includeGroupsQuery:\n      name: includeGroups\n      in: query\n      description: Optionally only return these specific related groups.  By default\n        returns all related groups.\n      schema:\n        type: array\n        items:\n          type: string\n    expandRelatedDevicesQuery:\n      name: expandRelatedDevices\n      in: query\n      description: By default, only related device id's are returned.  Passing `true`\n        will return expanded related devices instead of just its device id.\n      schema:\n        type: boolean\n        default: false\n    expandRelatedGroupsQuery:\n      name: expandRelatedGroups\n      in: query\n      description: By default, only related group paths are returned.  Passing `true`\n        will return expanded related groups instead of just its path.\n      schema:\n        type: boolean\n        default: false\n    filterRelationsQuery:\n      name: filterRelations\n      in: query\n      description: Return related devices/groups filtered by relation.  Specify the\n        relation in the format of `{direction}:{relation}`, where\n        `{direction}` may be `in`, `out` or `both`.\n      explode: true\n      schema:\n        type: array\n        items:\n          type: string\n    templateQuery:\n      in: query\n      name: template\n      description: Optional filter to return a specific group template\n      schema:\n        type: string\n    directionQuery:\n      name: direction\n      in: query\n      description: Direction of relation\n      explode: true\n      schema:\n        type: array\n        items:\n          type: string\n        enum:\n          - in\n          - out\n          - both\n        default: out\n    stateQuery:\n      name: state\n      in: query\n      description: Return devices of a specific state\n      schema:\n        type: array\n        items:\n          type: string\n        enum:\n          - unprovisioned\n          - active\n          - decommissioned\n          - retired\n        default: active\n    offsetQuery:\n      in: query\n      name: offset\n      schema:\n        type: integer\n        minimum: 0\n    countQuery:\n      in: query\n      name: count\n      schema:\n        type: integer\n        minimum: 0\n    sortQuery:\n      in: query\n      name: sort\n      description: A comma delimited list of attributes to sort by, with an optional direction (`asc`/`desc') provided per attribute separated by a colon. Id not provided, `asc` is applied.\n      schema:\n        type: string\n      examples:\n        single_default_sort:\n          value: deviceId\n          summary: A single sort attribute, defaulting to ascending sort\n        multiple_with_sort:\n          value: state:asc,manufacturedAt:desc\n          summary: Multiple attributes with direction specified.\n\n  responses:\n    Created:\n      description: Created successfully\n      headers:\n        location:\n          schema:\n            type: string\n    BadRequest:\n      description: Invalid input\n      content:\n        application/vnd.aws-cdf-v1.0+json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n        application/vnd.aws-cdf-v2.0+json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n    NotFound:\n      description: Not found\n      content:\n        application/vnd.aws-cdf-v1.0+json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n        application/vnd.aws-cdf-v2.0+json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n  requestBodies:\n    TemplateDefinition:\n      content:\n        application/vnd.aws-cdf-v1.0+json:\n          schema:\n            $ref: \"#/components/schemas/TemplateDefinition\"\n        application/vnd.aws-cdf-v2.0+json:\n          schema:\n            $ref: \"#/components/schemas/TemplateDefinition\"\n      required: true\n\n  schemas:\n\n    Entity:\n      type: object\n      properties:\n        category:\n          type: string\n          description: Category of entity.\n          enum:\n            - group\n            - device\n      discriminator:\n        propertyName: category\n\n    Device:\n      allOf:\n        - $ref: \"#/components/schemas/Entity\"\n        - type: object\n          properties:\n            deviceId:\n              type: string\n              description: Globally unique id of the Device.\n            templateId:\n              type: string\n              description: Template of Device.\n            description:\n              type: string\n              description: Description of the group.\n            awsIotThingArn:\n              type: string\n              description: Arn of the device if registered within the AWS IoT registry.\n            imageUrl:\n              type: string\n              description: URL of an image of the device.\n            connected:\n              type: boolean\n              description: AWS IoT connectivity status\n            state:\n              type: string\n              enum:\n                - unprovisioned\n                - active\n                - decommissioned\n                - retired\n              description: The current state of the device\n            assemblyOf:\n              $ref: \"#/components/schemas/Device\"\n            components:\n              type: array\n              description: The device components that this Device is assembled of.\n              items:\n                $ref: \"#/components/schemas/Device\"\n            attributes:\n              type: object\n              additionalProperties: true\n            relation:\n              type: string\n              description: Name of relation to this device (readonly, populated when\n                displaying related devices only)\n            direction:\n              type: string\n              description: Direction of relation  (readonly, populated when displaying\n                related devices only)\n              enum:\n                - in\n                - out\n      required:\n        - deviceId\n        - templateId\n\n    Device_1_0:\n      allOf:\n        - $ref: \"#/components/schemas/Device\"\n        - type: object\n          properties:\n            groups:\n              description: Paths of the groups that this Device is associated with.\n              type: object\n              additionalProperties:\n                type: array\n                items:\n                  type: string\n            devices:\n              description: Ids of the devices that this Device is associated with.\n              type: object\n              additionalProperties:\n                type: array\n                items:\n                  type: string\n\n    Device_2_0:\n      allOf:\n        - $ref: \"#/components/schemas/Device\"\n        - type: object\n          properties:\n            groups:\n              type: object\n              properties:\n                in:\n                  description: Paths of the incoming groups that this Device is associated with.\n                  type: object\n                  additionalProperties:\n                    type: array\n                    items:\n                      type: string\n                out:\n                  description: Paths of the outgoing groups that this Device is associated with.\n                  type: object\n                  additionalProperties:\n                    type: array\n                    items:\n                      type: string\n            devices:\n              type: object\n              properties:\n                in:\n                  description: Ids of the incoming devices that this Device is associated with.\n                  type: object\n                  additionalProperties:\n                    type: array\n                    items:\n                      type: string\n                out:\n                  description: Ids of the outgoing devices that this Device is associated with.\n                  type: object\n                  additionalProperties:\n                    type: array\n                    items:\n                      type: string\n\n    DeviceProfile_1_0:\n      allOf:\n        - $ref: \"#/components/schemas/Device_1_0\"\n        - type: object\n          properties:\n            profileId:\n              type: string\n              description: ID of the profile.\n      required:\n        - profileId\n        - templateId\n\n    DeviceProfile_2_0:\n      allOf:\n        - $ref: \"#/components/schemas/Device_2_0\"\n        - type: object\n          properties:\n            profileId:\n              type: string\n              description: ID of the profile.\n      required:\n        - profileId\n        - templateId\n\n    Group:\n      allOf:\n        - $ref: \"#/components/schemas/Entity\"\n        - type: object\n          properties:\n            groupPath:\n              type: string\n              description: Path of the group.\n            templateId:\n              type: string\n              description: Template of group.  Use 'Group' if no custom attributes are\n                required.\n            name:\n              type: string\n              description: name of group.\n            parentPath:\n              type: string\n              description: Path of the groups parent.\n            description:\n              type: string\n              description: Description of the group.\n            attributes:\n              type: object\n              additionalProperties: true\n            relation:\n              type: string\n              description: Name of relation to this group (readonly, populated when\n                displaying related groups only)\n            direction:\n              type: string\n              description: Direction of relation  (readonly, populated when displaying\n                related groups only)\n              enum:\n                - in\n                - out\n      required:\n        - groupPath\n        - templateId\n\n    Group_1_0:\n      allOf:\n        - $ref: \"#/components/schemas/Group\"\n        - type: object\n          properties:\n            groups:\n              description: Paths of the groups that this Group is associated with.\n              type: object\n              additionalProperties:\n                type: array\n                items:\n                  type: string\n\n    Group_2_0:\n      allOf:\n        - $ref: \"#/components/schemas/Group\"\n        - type: object\n          properties:\n            groups:\n              type: object\n              properties:\n                in:\n                  description: Paths of the incoming groups that this Group is associated with.\n                  type: object\n                  additionalProperties:\n                    type: array\n                    items:\n                      type: string\n                out:\n                  description: Paths of the outgoing groups that this Group is associated with.\n                  type: object\n                  additionalProperties:\n                    type: array\n                    items:\n                      type: string\n\n    GroupProfile_1_0:\n      allOf:\n        - $ref: \"#/components/schemas/Group_1_0\"\n        - type: object\n          properties:\n            profileId:\n              type: string\n              description: ID of the profile.\n      required:\n        - profileId\n        - templateId\n\n    GroupProfile_2_0:\n      allOf:\n        - $ref: \"#/components/schemas/Group_2_0\"\n        - type: object\n          properties:\n            profileId:\n              type: string\n              description: ID of the profile.\n      required:\n        - profileId\n        - templateId\n\n    BulkDevices:\n      type: object\n      properties:\n        devices:\n          type: array\n          items:\n            oneOf:\n              - $ref: \"#/components/schemas/Device_1_0\"\n              - $ref: \"#/components/schemas/Device_2_0\"\n\n    BulkGroups:\n      type: object\n      properties:\n        groups:\n          type: array\n          items:\n            oneOf:\n              - $ref: \"#/components/schemas/Group_1_0\"\n              - $ref: \"#/components/schemas/Group_2_0\"\n\n    GroupList:\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            oneOf:\n              - $ref: \"#/components/schemas/Group_1_0\"\n              - $ref: \"#/components/schemas/Group_2_0\"\n        pagination:\n          type: object\n          properties:\n            offset:\n              type: integer\n            count:\n              type: integer\n        total:\n          type: number\n          description: Total number of search results.  Only returned by the search API's\n            when `summarize` is set to true.\n\n    DeviceList:\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            oneOf:\n              - $ref: \"#/components/schemas/Device_1_0\"\n              - $ref: \"#/components/schemas/Device_2_0\"\n        pagination:\n          type: object\n          properties:\n            offset:\n              type: integer\n            count:\n              type: integer\n        total:\n          type: number\n          description: Total number of search results.  Only returned by the search API's\n            when `summarize` is set to true.\n\n    DeviceProfileList:\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            oneOf:\n              - $ref: \"#/components/schemas/DeviceProfile_1_0\"\n              - $ref: \"#/components/schemas/DeviceProfile_2_0\"\n        pagination:\n          type: object\n          properties:\n            offset:\n              type: integer\n            count:\n              type: integer\n\n    GroupProfileList:\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            oneOf:\n              - $ref: \"#/components/schemas/GroupProfile_1_0\"\n              - $ref: \"#/components/schemas/GroupProfile_2_0\"\n        pagination:\n          type: object\n          properties:\n            offset:\n              type: integer\n            count:\n              type: integer\n\n    SearchResults:\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            oneOf:\n              - anyOf:\n                - $ref: \"#/components/schemas/Device_1_0\"\n                - $ref: \"#/components/schemas/Group_1_0\"\n              - anyOf:\n                - $ref: \"#/components/schemas/Device_2_0\"\n                - $ref: \"#/components/schemas/Group_2_0\"\n\n    TemplateInfoProperties:\n      type: object\n      required: [ \"type\" ]\n      properties:\n        type:\n          type: array\n          items:\n            type: string\n            enum:\n              - integer\n              - number\n              - string\n              - boolean\n              - datettime\n              - null\n        enum:\n          type: array\n          items:\n            type: string\n        minLength:\n          type: number\n        maxLength: \n          type: number\n        pattern:\n          type: string\n        format:\n          type: string\n          enum:\n            - date\n            - date-time\n            - uri\n            - email\n            - hostname\n            - ipv4\n            - ipv6\n        minimum:\n          type: number\n        maximum:\n          type: number\n        exclusiveMinimum:\n          type: number\n        exclusiveMaximum:\n          type: number\n        multipleOf:\n          type: number\n        not:\n          type: object\n        oneOf:\n          type: array\n          items:\n            type: object\n        anyOf:\n          type: array\n          items:\n            type: object\n        allOf:\n          type: array\n          items:\n            type: object\n\n    TemplateInfo:\n      type: object\n      properties:\n        templateId:\n          description: Unique ID of template\n          type: string\n        category:\n          description: Category of template\n          type: string\n          enum:\n            - device\n            - group\n        properties:\n          type: object\n          additionalProperties:\n            $ref: \"#/components/schemas/TemplateInfoProperties\"\n        required:\n          description: List of required properties\n          type: array\n          items:\n            type: string\n        relations:\n          type: object\n          properties:\n            out:\n              description: Map of defined relationships from this template to others\n              type: object\n              additionalProperties:\n                type: array\n                items:\n                  type: string\n            in:\n              description: Map of defined relationships from other templates to this\n              type: object\n              additionalProperties:\n                type: array\n                items:\n                  type: string\n\n    TemplateInfoList:\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            $ref: \"#/components/schemas/TemplateInfo\"\n        pagination:\n          type: object\n          properties:\n            offset:\n              type: integer\n            count:\n              type: integer\n\n    TemplateDefinition:\n      type: object\n      properties:\n        properties:\n          description: Map of allowed properties (string, number, boolean and datetime\n            types allowed only)\n          type: object\n          additionalProperties:\n            type: string\n            enum:\n              - string\n              - number\n              - boolean\n              - datettime\n        required:\n          description: List of required properties\n          type: array\n          items:\n            type: string\n        relations:\n          type: object\n          properties:\n            out:\n              description: Map of defined relationships from this template to others\n              type: object\n              additionalProperties:\n                type: array\n                items:\n                  type: string\n            in:\n              description: Map of defined relationships from other templates to this\n              type: object\n              additionalProperties:\n                type: array\n                items:\n                  type: string\n\n    Policy:\n      type: object\n      properties:\n        policyId:\n          type: string\n          description: unique ID of policy\n        type:\n          type: string\n          description: type of policy\n        description:\n          type: string\n          description: description of policy\n        appliesTo:\n          type: array\n          description: the paths of the group that this policy applies to\n          items:\n            type: string\n        document:\n          type: string\n          description: the policy document (e.g. a provisioning template)\n\n    PolicyList:\n      type: object\n      properties:\n        policies:\n          type: array\n          description: a list of policies\n          items:\n            $ref: \"#/components/schemas/Policy\"\n        pagination:\n          type: object\n          properties:\n            offset:\n              type: integer\n            count:\n              type: integer\n\n    Error:\n      type: object\n      properties:\n        message:\n          type: string\n"
		}
	},
	"Error": "parse: parse spec: paths: /bulkdevices: get: operation \"bulkGetDevices\": responses: 200: content: \"application/vnd.aws-cdf-v1.0+json\": schema: parse schema: reference \"#/components/schemas/DeviceList\": parse schema: results: parse schema: item: parse schema: oneOf: [0]: parse schema: reference \"#/components/schemas/Device_1_0\": parse schema: allOf: [0]: parse schema: reference \"#/components/schemas/Device\": parse schema: allOf: [1]: parse schema: assemblyOf: parse schema: reference \"#/components/schemas/Device\": infinite recursion: \"#/components/schemas/Device\""
}